/* ParseTree: After parsing */
  Program @ [evalProg.diderot:4.1-191.0] 
    [
      Type: mesh_t= @ [evalProg.diderot:4.1-5.0] 
        Mesh @ [evalProg.diderot:4.6-10] 
        From File : evalProg.json @ [evalProg.diderot:4.1-5.0] 
      Const: dim= @ [evalProg.diderot:5.1-6.0] 
        Select @ [evalProg.diderot:5.17-27] 
          Var: mesh_t @ [evalProg.diderot:5.17-23] 
          dim
      Type: fns_t= @ [evalProg.diderot:6.1-7.0] 
        FunctionSpace(mesh_t) @ [evalProg.diderot:6.6-32] 
          [
            Var: dim @ [evalProg.diderot:6.28-31] 
          ]
        From File : evalProg.json @ [evalProg.diderot:6.1-7.0] 
      Type: func_t= @ [evalProg.diderot:7.1-8.0] 
        FemFunction(fns_t) @ [evalProg.diderot:7.6-24] 
        From File : evalProg.json @ [evalProg.diderot:7.1-8.0] 
      Input: meshData @ [evalProg.diderot:9.1-10.0] 
      Input: space= @ [evalProg.diderot:10.1-11.0] 
        Apply @ [evalProg.diderot:10.21-36] 
          Var: fns_t @ [evalProg.diderot:10.21-26] 
          [
            Var: meshData @ [evalProg.diderot:10.27-35] 
          ]
      Input: data= @ [evalProg.diderot:11.1-12.0] 
        Apply @ [evalProg.diderot:11.21-34] 
          Var: func_t @ [evalProg.diderot:11.21-27] 
          [
            Var: space @ [evalProg.diderot:11.28-33] 
          ]
      Var @ [evalProg.diderot:13.1-14.0] 
        Decl: F= @ [evalProg.diderot:13.1-14.0] 
          Select @ [evalProg.diderot:13.21-27] 
            Var: data @ [evalProg.diderot:13.21-25] 
            F
      Var @ [evalProg.diderot:15.1-16.0] 
        Decl: simplex= @ [evalProg.diderot:15.1-16.0] 
          Apply @ [evalProg.diderot:15.27-45] 
            Select @ [evalProg.diderot:15.27-45] 
              Var: meshData @ [evalProg.diderot:15.27-35] 
              refcell
            [ ]
      Input: timeSteps= @ [evalProg.diderot:16.1-17.0] 
        Lit: 32 @ [evalProg.diderot:16.21-23] 
      Input: timeEps= @ [evalProg.diderot:17.1-18.0] 
        Lit: 0.1e-6 @ [evalProg.diderot:17.22-31] 
      Overloading Operator: + @ [evalProg.diderot:20.1-85.1] 
        MeshPos(mesh_t) @ [evalProg.diderot:20.10-26] 
        [
          Param: x @ [evalProg.diderot:20.30-48] 
            MeshPos(mesh_t) @ [evalProg.diderot:20.30-46] 
          Param: dPos @ [evalProg.diderot:20.50-66] 
            Tensor @ [evalProg.diderot:20.50-61] 
              [
                Var: dim @ [evalProg.diderot:20.57-60] 
              ]
        ]
        Stmt @ [evalProg.diderot:20.1-85.1] 
          Block @ [evalProg.diderot:21.1-83.0] 
            [
              IfThen @ [evalProg.diderot:22.3-29.3] 
                UnaryOp: ! @ [evalProg.diderot:22.7-19] 
                  Apply @ [evalProg.diderot:22.8-19] 
                    Select @ [evalProg.diderot:22.8-19] 
                      Var: x @ [evalProg.diderot:22.8-9] 
                      isValid
                    [ ]
                Return @ [evalProg.diderot:27.5-28.0] 
                  Var: x @ [evalProg.diderot:27.12-13] 
              Decl @ [evalProg.diderot:21.1-83.0] 
                Decl: time= @ [evalProg.diderot:29.3-17] 
                  Lit: 1 @ [evalProg.diderot:29.15-16] 
              Decl @ [evalProg.diderot:21.1-83.0] 
                Decl: cmp= @ [evalProg.diderot:30.3-28] 
                  Var: x @ [evalProg.diderot:30.26-27] 
              Foreach @ [evalProg.diderot:33.3-76.0] 
                Int @ [evalProg.diderot:33.12-16] 
                Iterator: i @ [evalProg.diderot:33.16-34] 
                  Range @ [evalProg.diderot:33.21-34] 
                    Lit: 0 @ [evalProg.diderot:33.21-22] 
                    Var: timeSteps @ [evalProg.diderot:33.24-33] 
                Block @ [evalProg.diderot:33.35-76.0] 
                  [
                    Decl @ [evalProg.diderot:33.35-76.0] 
                      Decl: deltaP= @ [evalProg.diderot:34.5-78] 
                        BinOp: • @ [evalProg.diderot:34.27-77] 
                          Apply @ [evalProg.diderot:34.27-68] 
                            Var: inv @ [evalProg.diderot:34.27-30] 
                            [
                              Apply @ [evalProg.diderot:34.31-67] 
                                UnaryOp: ∇⊗ @ [evalProg.diderot:34.31-55] 
                                  Select @ [evalProg.diderot:34.38-54] 
                                    Select @ [evalProg.diderot:34.38-54] 
                                      Var: cmp @ [evalProg.diderot:34.38-41] 
                                      mc
                                    transform
                                [
                                  Select @ [evalProg.diderot:34.56-66] 
                                    Var: cmp @ [evalProg.diderot:34.56-59] 
                                    refPos
                                ]
                            ]
                          Var: dPos @ [evalProg.diderot:34.73-77] 
                    Decl @ [evalProg.diderot:33.35-76.0] 
                      Decl: normDetaP= @ [evalProg.diderot:35.5-36.0] 
                        BinOp: / @ [evalProg.diderot:35.29-44] 
                          Var: deltaP @ [evalProg.diderot:35.29-35] 
                          UnaryOp: |()| @ [evalProg.diderot:35.36-44] 
                            Var: deltaP @ [evalProg.diderot:35.37-43] 
                    Decl @ [evalProg.diderot:33.35-76.0] 
                      Decl: newPos= @ [evalProg.diderot:37.5-38.0] 
                        BinOp: + @ [evalProg.diderot:37.26-52] 
                          Select @ [evalProg.diderot:37.26-36] 
                            Var: cmp @ [evalProg.diderot:37.26-29] 
                            refPos
                          BinOp: * @ [evalProg.diderot:37.39-52] 
                            Var: time @ [evalProg.diderot:37.39-43] 
                            Var: deltaP @ [evalProg.diderot:37.46-52] 
                    Continue @ [evalProg.diderot:39.5-40.0] 
                    IfThenElse @ [evalProg.diderot:40.5-75.0] 
                      Apply @ [evalProg.diderot:40.9-33] 
                        Select @ [evalProg.diderot:40.9-33] 
                          Var: simplex @ [evalProg.diderot:40.9-16] 
                          isInside
                        [
                          Var: newPos @ [evalProg.diderot:40.26-32] 
                        ]
                      Block @ [evalProg.diderot:40.35-44.0] 
                        [
                          Decl @ [evalProg.diderot:40.35-44.0] 
                            Decl: nmp= @ [evalProg.diderot:41.7-53] 
                              Apply @ [evalProg.diderot:41.30-52] 
                                Select @ [evalProg.diderot:41.30-52] 
                                  Select @ [evalProg.diderot:41.30-52] 
                                    Var: cmp @ [evalProg.diderot:41.30-33] 
                                    mc
                                  meshPos
                                [
                                  Var: newPos @ [evalProg.diderot:41.45-51] 
                                ]
                          Return @ [evalProg.diderot:42.7-43.0] 
                            Var: nmp @ [evalProg.diderot:42.14-17] 
                        ]
                      Block @ [evalProg.diderot:44.10-75.0] 
                        [
                          Decl @ [evalProg.diderot:44.10-75.0] 
                            Decl: eTime= @ [evalProg.diderot:45.7-49] 
                              Apply @ [evalProg.diderot:45.20-48] 
                                Select @ [evalProg.diderot:45.20-48] 
                                  Var: simplex @ [evalProg.diderot:45.20-27] 
                                  exit
                                [
                                  Var: cmp @ [evalProg.diderot:45.33-36] 
                                  Var: normDetaP @ [evalProg.diderot:45.38-47] 
                                ]
                          Print @ [evalProg.diderot:46.7-47.0] 
                            [
                              Lit: "The time result is:" @ [evalProg.diderot:46.13-34] 
                              BinOp: / @ [evalProg.diderot:46.36-52] 
                                Var: eTime @ [evalProg.diderot:46.36-41] 
                                UnaryOp: |()| @ [evalProg.diderot:46.44-52] 
                                  Var: deltaP @ [evalProg.diderot:46.45-51] 
                              Lit: " out of " @ [evalProg.diderot:46.54-64] 
                              Var: time @ [evalProg.diderot:46.66-70] 
                              Lit: "\n" @ [evalProg.diderot:46.72-76] 
                            ]
                          Print @ [evalProg.diderot:47.7-48.0] 
                            [
                              Lit: "Via ref:" @ [evalProg.diderot:47.13-23] 
                              Select @ [evalProg.diderot:47.25-35] 
                                Var: cmp @ [evalProg.diderot:47.25-28] 
                                refPos
                              Lit: "->" @ [evalProg.diderot:47.37-41] 
                              Var: deltaP @ [evalProg.diderot:47.43-49] 
                              Lit: " or " @ [evalProg.diderot:47.51-57] 
                              Var: normDetaP @ [evalProg.diderot:47.59-68] 
                              Lit: "\n" @ [evalProg.diderot:47.70-74] 
                            ]
                          Print @ [evalProg.diderot:48.7-49.0] 
                            [
                              Lit: "Via world:" @ [evalProg.diderot:48.13-25] 
                              Apply @ [evalProg.diderot:48.27-41] 
                                Select @ [evalProg.diderot:48.27-41] 
                                  Var: cmp @ [evalProg.diderot:48.27-30] 
                                  worldPos
                                [ ]
                              Lit: "->" @ [evalProg.diderot:48.43-47] 
                              BinOp: * @ [evalProg.diderot:48.49-60] 
                                Var: dPos @ [evalProg.diderot:48.49-53] 
                                Var: time @ [evalProg.diderot:48.56-60] 
                              Lit: "\n" @ [evalProg.diderot:48.62-66] 
                            ]
                          Print @ [evalProg.diderot:49.7-50.0] 
                            [
                              Lit: "Current cell:" @ [evalProg.diderot:49.13-28] 
                              Select @ [evalProg.diderot:49.30-36] 
                                Var: cmp @ [evalProg.diderot:49.30-33] 
                                mc
                              Lit: "\n" @ [evalProg.diderot:49.38-42] 
                            ]
                          Assign: time-= @ [evalProg.diderot:50.7-30] 
                            BinOp: / @ [evalProg.diderot:50.13-29] 
                              Var: eTime @ [evalProg.diderot:50.13-18] 
                              UnaryOp: |()| @ [evalProg.diderot:50.21-29] 
                                Var: deltaP @ [evalProg.diderot:50.22-28] 
                          Print @ [evalProg.diderot:51.7-52.0] 
                            [
                              Lit: "New time is:" @ [evalProg.diderot:51.13-27] 
                              Var: time @ [evalProg.diderot:51.29-33] 
                              Lit: "\n" @ [evalProg.diderot:51.35-39] 
                            ]
                          IfThen @ [evalProg.diderot:52.7-62.7] 
                            BinOp: == @ [evalProg.diderot:52.10-21] 
                              Var: eTime @ [evalProg.diderot:52.10-15] 
                              UnaryOp: unary - @ [evalProg.diderot:52.19-21] 
                                Lit: 1 @ [evalProg.diderot:52.20-21] 
                            Block @ [evalProg.diderot:52.22-57.0] 
                              [
                                Print @ [evalProg.diderot:53.2-54.0] 
                                  [
                                    Lit: "Failing so we take the stupid way out\n" @ [evalProg.diderot:53.8-49] 
                                  ]
                                Assign: cmp= @ [evalProg.diderot:54.2-55.0] 
                                  Apply @ [evalProg.diderot:54.8-45] 
                                    Select @ [evalProg.diderot:54.8-45] 
                                      Var: meshData @ [evalProg.diderot:54.8-16] 
                                      findPos
                                    [
                                      BinOp: + @ [evalProg.diderot:54.25-44] 
                                        Apply @ [evalProg.diderot:54.25-37] 
                                          Select @ [evalProg.diderot:54.25-37] 
                                            Var: x @ [evalProg.diderot:54.25-26] 
                                            worldPos
                                          [ ]
                                        Var: dPos @ [evalProg.diderot:54.40-44] 
                                    ]
                                Return @ [evalProg.diderot:55.2-56.0] 
                                  Var: cmp @ [evalProg.diderot:55.9-12] 
                              ]
                          Decl @ [evalProg.diderot:44.10-75.0] 
                            Decl: nmp= @ [evalProg.diderot:62.7-62] 
                              Apply @ [evalProg.diderot:62.30-61] 
                                Select @ [evalProg.diderot:62.30-61] 
                                  Var: simplex @ [evalProg.diderot:62.30-37] 
                                  exitPos
                                [
                                  Var: cmp @ [evalProg.diderot:62.46-49] 
                                  Var: normDetaP @ [evalProg.diderot:62.51-60] 
                                ]
                          IfThen @ [evalProg.diderot:66.7-73.7] 
                            OrElse @ [evalProg.diderot:66.12-56] 
                              UnaryOp: ! @ [evalProg.diderot:66.12-25] 
                                Select @ [evalProg.diderot:66.13-24] 
                                  Var: nmp @ [evalProg.diderot:66.13-16] 
                                  isValid
                              OrElse @ [evalProg.diderot:66.25-56] 
                                BinOp: < @ [evalProg.diderot:66.28-38] 
                                  Var: eTime @ [evalProg.diderot:66.28-33] 
                                  Lit: 0 @ [evalProg.diderot:66.36-37] 
                                BinOp: < @ [evalProg.diderot:66.42-56] 
                                  Var: time @ [evalProg.diderot:66.42-46] 
                                  Var: timeEps @ [evalProg.diderot:66.49-56] 
                            Block @ [evalProg.diderot:66.57-72.8] 
                              [
                                Print @ [evalProg.diderot:67.2-68.0] 
                                  [
                                    Lit: "done:" @ [evalProg.diderot:67.8-15] 
                                    UnaryOp: ! @ [evalProg.diderot:67.17-29] 
                                      Select @ [evalProg.diderot:67.18-29] 
                                        Var: nmp @ [evalProg.diderot:67.18-21] 
                                        isValid
                                    Lit: "\n" @ [evalProg.diderot:67.31-35] 
                                  ]
                                Return @ [evalProg.diderot:71.2-72.0] 
                                  Var: nmp @ [evalProg.diderot:71.9-12] 
                              ]
                          Assign: cmp= @ [evalProg.diderot:73.7-74.0] 
                            Var: nmp @ [evalProg.diderot:73.13-16] 
                        ]
                  ]
              Print @ [evalProg.diderot:79.3-80.0] 
                [
                  Lit: "Took stupid way out!\n" @ [evalProg.diderot:79.9-33] 
                ]
              Assign: cmp= @ [evalProg.diderot:80.3-81.0] 
                Apply @ [evalProg.diderot:80.9-46] 
                  Select @ [evalProg.diderot:80.9-46] 
                    Var: meshData @ [evalProg.diderot:80.9-17] 
                    findPos
                  [
                    BinOp: + @ [evalProg.diderot:80.26-45] 
                      Apply @ [evalProg.diderot:80.26-38] 
                        Select @ [evalProg.diderot:80.26-38] 
                          Var: x @ [evalProg.diderot:80.26-27] 
                          worldPos
                        [ ]
                      Var: dPos @ [evalProg.diderot:80.41-45] 
                  ]
              Return @ [evalProg.diderot:81.3-82.0] 
                Var: cmp @ [evalProg.diderot:81.10-13] 
            ]
      Input: startPoints @ [evalProg.diderot:85.1-86.0] 
      Input: stepSize= @ [evalProg.diderot:86.1-87.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:86.23-27] 
      Input: stepMax= @ [evalProg.diderot:87.1-88.0] 
        Lit: 300 @ [evalProg.diderot:87.21-24] 
      Func: nV @ [evalProg.diderot:89.1-103.1] 
        Tensor @ [evalProg.diderot:89.10-21] 
          [
            Var: dim @ [evalProg.diderot:89.17-20] 
          ]
        [
          Param: x @ [evalProg.diderot:89.25-43] 
            MeshPos(mesh_t) @ [evalProg.diderot:89.25-41] 
        ]
        Stmt @ [evalProg.diderot:89.1-103.1] 
          IfThenElse @ [evalProg.diderot:90.3-101.0] 
            Apply @ [evalProg.diderot:90.6-17] 
              Select @ [evalProg.diderot:90.6-17] 
                Var: x @ [evalProg.diderot:90.6-7] 
                isValid
              [ ]
            Block @ [evalProg.diderot:90.18-96.0] 
              [
                Decl @ [evalProg.diderot:90.18-96.0] 
                  Decl: c= @ [evalProg.diderot:91.5-92.0] 
                    Select @ [evalProg.diderot:91.22-26] 
                      Var: x @ [evalProg.diderot:91.22-23] 
                      mc
                Decl @ [evalProg.diderot:90.18-96.0] 
                  Decl: ref= @ [evalProg.diderot:92.5-93.0] 
                    Apply @ [evalProg.diderot:92.23-33] 
                      Select @ [evalProg.diderot:92.23-33] 
                        Var: x @ [evalProg.diderot:92.23-24] 
                        refPos
                      [ ]
                Decl @ [evalProg.diderot:90.18-96.0] 
                  Decl: val= @ [evalProg.diderot:93.5-94.0] 
                    Apply @ [evalProg.diderot:93.23-53] 
                      Select @ [evalProg.diderot:93.23-53] 
                        Apply @ [evalProg.diderot:93.23-53] 
                          Select @ [evalProg.diderot:93.23-53] 
                            Var: data @ [evalProg.diderot:93.23-27] 
                            funcCell
                          [
                            Var: c @ [evalProg.diderot:93.37-38] 
                          ]
                        refField
                      [
                        Var: ref @ [evalProg.diderot:93.49-52] 
                      ]
                Return @ [evalProg.diderot:94.5-95.0] 
                  BinOp: / @ [evalProg.diderot:94.12-21] 
                    Var: val @ [evalProg.diderot:94.12-15] 
                    UnaryOp: |()| @ [evalProg.diderot:94.16-21] 
                      Var: val @ [evalProg.diderot:94.17-20] 
              ]
            Block @ [evalProg.diderot:97.5-101.0] 
              [
                Print @ [evalProg.diderot:98.7-99.0] 
                  [
                    Lit: "QWE:Eval at 0\n" @ [evalProg.diderot:98.13-30] 
                  ]
                Return @ [evalProg.diderot:99.7-100.0] 
                  Zero @ [evalProg.diderot:99.14-24] 
                    [
                      Var: dim @ [evalProg.diderot:99.20-23] 
                    ]
              ]
      Input: M @ [evalProg.diderot:103.1-104.0] 
      Input: center @ [evalProg.diderot:104.1-105.0] 
      Func: altF @ [evalProg.diderot:106.1-107.0] 
        Tensor @ [evalProg.diderot:106.10-21] 
          [
            Var: dim @ [evalProg.diderot:106.17-20] 
          ]
        [
          Param: x @ [evalProg.diderot:106.27-40] 
            Tensor @ [evalProg.diderot:106.27-38] 
              [
                Var: dim @ [evalProg.diderot:106.34-37] 
              ]
        ]
        Expr @ [evalProg.diderot:106.1-107.0] 
          BinOp: • @ [evalProg.diderot:106.44-62] 
            Var: M @ [evalProg.diderot:106.44-45] 
            BinOp: - @ [evalProg.diderot:106.51-61] 
              Var: x @ [evalProg.diderot:106.51-52] 
              Var: center @ [evalProg.diderot:106.55-61] 
    ]
    Strand: gg @ [evalProg.diderot:108.1-190.3] 
      [
        Param: startPos @ [evalProg.diderot:108.11-31] 
          Tensor @ [evalProg.diderot:108.11-22] 
            [
              Var: dim @ [evalProg.diderot:108.18-21] 
            ]
      ]
      [
        VarDcl: output @ [evalProg.diderot:109.3-110.0] 
        VarDcl: output @ [evalProg.diderot:110.3-111.0] 
        VarDcl @ [evalProg.diderot:111.3-112.0] 
        VarDcl @ [evalProg.diderot:112.3-113.0] 
        VarDcl @ [evalProg.diderot:113.3-114.0] 
      ]
      [
        Method: Update @ [evalProg.diderot:114.3-190.1] 
          Block @ [evalProg.diderot:114.10-190.0] 
            [
              IfThen @ [evalProg.diderot:115.5-132.5] 
                AndAlso @ [evalProg.diderot:115.8-33] 
                  BinOp: == @ [evalProg.diderot:115.8-18] 
                    Var: step @ [evalProg.diderot:115.8-12] 
                    Lit: 0 @ [evalProg.diderot:115.16-17] 
                  Select @ [evalProg.diderot:115.21-33] 
                    Var: cPos @ [evalProg.diderot:115.21-25] 
                    isValid
                Block @ [evalProg.diderot:115.34-132.0] 
                  [
                    Decl @ [evalProg.diderot:115.34-132.0] 
                      Decl: rp= @ [evalProg.diderot:116.7-117.0] 
                        Select @ [evalProg.diderot:116.24-35] 
                          Var: cPos @ [evalProg.diderot:116.24-28] 
                          refPos
                    IfThen @ [evalProg.diderot:117.7-120.7] 
                      BinOp: <= @ [evalProg.diderot:117.11-26] 
                        Subscript @ [evalProg.diderot:117.11-16] 
                          Var: rp @ [evalProg.diderot:117.11-13] 
                          [
                            Lit: 0 @ [evalProg.diderot:117.14-15] 
                          ]
                        Lit: 0.1e-5 @ [evalProg.diderot:117.18-26] 
                      Stabilize @ [evalProg.diderot:118.2-119.0] 
                    IfThen @ [evalProg.diderot:120.7-123.7] 
                      BinOp: <= @ [evalProg.diderot:120.11-26] 
                        Subscript @ [evalProg.diderot:120.11-16] 
                          Var: rp @ [evalProg.diderot:120.11-13] 
                          [
                            Lit: 1 @ [evalProg.diderot:120.14-15] 
                          ]
                        Lit: 0.1e-5 @ [evalProg.diderot:120.18-26] 
                      Stabilize @ [evalProg.diderot:121.2-122.0] 
                    IfThen @ [evalProg.diderot:123.7-126.7] 
                      BinOp: <= @ [evalProg.diderot:123.11-26] 
                        Subscript @ [evalProg.diderot:123.11-16] 
                          Var: rp @ [evalProg.diderot:123.11-13] 
                          [
                            Lit: 2 @ [evalProg.diderot:123.14-15] 
                          ]
                        Lit: 0.1e-5 @ [evalProg.diderot:123.18-26] 
                      Stabilize @ [evalProg.diderot:124.2-125.0] 
                    Decl @ [evalProg.diderot:115.34-132.0] 
                      Decl: r= @ [evalProg.diderot:126.7-127.0] 
                        BinOp: • @ [evalProg.diderot:126.16-30] 
                          Cons @ [evalProg.diderot:126.16-23] 
                            [
                              Lit: 1 @ [evalProg.diderot:126.17-18] 
                              Lit: 1 @ [evalProg.diderot:126.19-20] 
                              Lit: 1 @ [evalProg.diderot:126.21-22] 
                            ]
                          Var: rp @ [evalProg.diderot:126.28-30] 
                    IfThen @ [evalProg.diderot:127.7-131.5] 
                      BinOp: <= @ [evalProg.diderot:127.11-25] 
                        Lit: 0.9999999e0 @ [evalProg.diderot:127.11-20] 
                        Var: r @ [evalProg.diderot:127.24-25] 
                      Stabilize @ [evalProg.diderot:128.2-129.0] 
                  ]
              IfThen @ [evalProg.diderot:132.5-137.5] 
                BinOp: != @ [evalProg.diderot:132.8-61] 
                  Apply @ [evalProg.diderot:132.8-22] 
                    Select @ [evalProg.diderot:132.8-22] 
                      Var: cPos @ [evalProg.diderot:132.8-12] 
                      isValid
                    [ ]
                  Apply @ [evalProg.diderot:132.26-61] 
                    Select @ [evalProg.diderot:132.26-61] 
                      Apply @ [evalProg.diderot:132.26-61] 
                        Select @ [evalProg.diderot:132.26-61] 
                          Var: meshData @ [evalProg.diderot:132.26-34] 
                          findPos
                        [
                          Var: altCPos @ [evalProg.diderot:132.43-50] 
                        ]
                      isValid
                    [ ]
                Print @ [evalProg.diderot:134.2-135.0] 
                  [
                    Lit: "ERG:Warning of validity startPos:" @ [evalProg.diderot:134.8-43] 
                    Var: startPos @ [evalProg.diderot:134.45-53] 
                    Lit: "\n" @ [evalProg.diderot:134.55-59] 
                  ]
              IfThen @ [evalProg.diderot:137.5-143.5] 
                OrElse @ [evalProg.diderot:137.9-82] 
                  UnaryOp: ! @ [evalProg.diderot:137.9-25] 
                    Apply @ [evalProg.diderot:137.10-24] 
                      Select @ [evalProg.diderot:137.10-24] 
                        Var: cPos @ [evalProg.diderot:137.10-14] 
                        isValid
                      [ ]
                  OrElse @ [evalProg.diderot:137.25-82] 
                    UnaryOp: ! @ [evalProg.diderot:137.28-64] 
                      Apply @ [evalProg.diderot:137.29-64] 
                        Select @ [evalProg.diderot:137.29-64] 
                          Apply @ [evalProg.diderot:137.29-64] 
                            Select @ [evalProg.diderot:137.29-64] 
                              Var: meshData @ [evalProg.diderot:137.29-37] 
                              findPos
                            [
                              Var: altCPos @ [evalProg.diderot:137.46-53] 
                            ]
                          isValid
                        [ ]
                    BinOp: == @ [evalProg.diderot:137.67-82] 
                      Var: step @ [evalProg.diderot:137.67-71] 
                      Var: stepMax @ [evalProg.diderot:137.75-82] 
                Block @ [evalProg.diderot:137.83-143.0] 
                  [
                    Print @ [evalProg.diderot:138.7-139.0] 
                      [
                        Lit: "Went off the mesh\?" @ [evalProg.diderot:138.13-33] 
                        UnaryOp: ! @ [evalProg.diderot:138.35-50] 
                          Apply @ [evalProg.diderot:138.36-50] 
                            Select @ [evalProg.diderot:138.36-50] 
                              Var: cPos @ [evalProg.diderot:138.36-40] 
                              isValid
                            [ ]
                        Lit: " and " @ [evalProg.diderot:138.52-59] 
                        Var: altCPos @ [evalProg.diderot:138.61-68] 
                        Lit: " and " @ [evalProg.diderot:138.70-77] 
                        UnaryOp: ! @ [evalProg.diderot:138.79-115] 
                          Apply @ [evalProg.diderot:138.80-115] 
                            Select @ [evalProg.diderot:138.80-115] 
                              Apply @ [evalProg.diderot:138.80-115] 
                                Select @ [evalProg.diderot:138.80-115] 
                                  Var: meshData @ [evalProg.diderot:138.80-88] 
                                  findPos
                                [
                                  Var: altCPos @ [evalProg.diderot:138.97-104] 
                                ]
                              isValid
                            [ ]
                        Lit: "\n" @ [evalProg.diderot:138.117-121] 
                      ]
                    Print @ [evalProg.diderot:139.7-140.0] 
                      [
                        Lit: "Pos is:" @ [evalProg.diderot:139.13-22] 
                        Apply @ [evalProg.diderot:139.24-37] 
                          Select @ [evalProg.diderot:139.24-37] 
                            Var: cPos @ [evalProg.diderot:139.24-28] 
                            refPos
                          [ ]
                        Lit: "\n" @ [evalProg.diderot:139.38-42] 
                      ]
                    Print @ [evalProg.diderot:140.7-141.0] 
                      [
                        Var: stream @ [evalProg.diderot:140.13-19] 
                        Lit: "\n" @ [evalProg.diderot:140.21-25] 
                        Var: newStream @ [evalProg.diderot:140.27-36] 
                        Lit: "\n" @ [evalProg.diderot:140.38-42] 
                      ]
                    Stabilize @ [evalProg.diderot:141.7-17] 
                  ]
              Assign: stream= @ [evalProg.diderot:143.5-144.0] 
                BinOp: @ @ [evalProg.diderot:143.14-38] 
                  Var: stream @ [evalProg.diderot:143.14-20] 
                  Sequence @ [evalProg.diderot:143.21-38] 
                    [
                      Apply @ [evalProg.diderot:143.22-37] 
                        Select @ [evalProg.diderot:143.22-37] 
                          Var: cPos @ [evalProg.diderot:143.22-26] 
                          worldPos
                        [ ]
                    ]
              Assign: newStream= @ [evalProg.diderot:144.5-145.0] 
                BinOp: @ @ [evalProg.diderot:144.17-36] 
                  Var: newStream @ [evalProg.diderot:144.17-26] 
                  Sequence @ [evalProg.diderot:144.27-36] 
                    [
                      Var: altCPos @ [evalProg.diderot:144.28-35] 
                    ]
              IfThenElse @ [evalProg.diderot:145.5-153.0] 
                BinOp: > @ [evalProg.diderot:145.8-46] 
                  UnaryOp: |()| @ [evalProg.diderot:145.8-35] 
                    BinOp: - @ [evalProg.diderot:145.9-34] 
                      Apply @ [evalProg.diderot:145.9-24] 
                        Select @ [evalProg.diderot:145.9-24] 
                          Var: cPos @ [evalProg.diderot:145.9-13] 
                          worldPos
                        [ ]
                      Var: altCPos @ [evalProg.diderot:145.27-34] 
                  Lit: 0.1e-5 @ [evalProg.diderot:145.38-46] 
                Block @ [evalProg.diderot:145.47-152.0] 
                  [
                    Print @ [evalProg.diderot:146.7-147.0] 
                      [
                        Lit: "ERG:Error in tracing 1: At step:" @ [evalProg.diderot:146.13-47] 
                        Var: step @ [evalProg.diderot:146.49-53] 
                        Lit: " with particle:" @ [evalProg.diderot:146.55-72] 
                        Var: startPos @ [evalProg.diderot:146.74-82] 
                        Lit: "\n" @ [evalProg.diderot:146.84-88] 
                      ]
                    Print @ [evalProg.diderot:147.7-148.0] 
                      [
                        Lit: "Poses are:" @ [evalProg.diderot:147.13-25] 
                        Apply @ [evalProg.diderot:147.27-42] 
                          Select @ [evalProg.diderot:147.27-42] 
                            Var: cPos @ [evalProg.diderot:147.27-31] 
                            worldPos
                          [ ]
                        Var: altCPos @ [evalProg.diderot:147.44-51] 
                        Lit: "\n" @ [evalProg.diderot:147.53-57] 
                      ]
                    Print @ [evalProg.diderot:148.7-149.0] 
                      [
                        Lit: "Cells are:" @ [evalProg.diderot:148.13-25] 
                        Select @ [evalProg.diderot:148.27-34] 
                          Var: cPos @ [evalProg.diderot:148.27-31] 
                          mc
                        Lit: " and " @ [evalProg.diderot:148.35-42] 
                        Select @ [evalProg.diderot:148.44-72] 
                          Apply @ [evalProg.diderot:148.44-72] 
                            Select @ [evalProg.diderot:148.44-72] 
                              Var: meshData @ [evalProg.diderot:148.44-52] 
                              findPos
                            [
                              Var: altCPos @ [evalProg.diderot:148.61-68] 
                            ]
                          mc
                        Lit: "\n" @ [evalProg.diderot:148.74-78] 
                      ]
                    Print @ [evalProg.diderot:149.7-150.0] 
                      [
                        Lit: "Ref poses are:" @ [evalProg.diderot:149.13-29] 
                        Select @ [evalProg.diderot:149.31-42] 
                          Var: cPos @ [evalProg.diderot:149.31-35] 
                          refPos
                        Lit: " and " @ [evalProg.diderot:149.43-50] 
                        Select @ [evalProg.diderot:149.52-84] 
                          Apply @ [evalProg.diderot:149.52-84] 
                            Select @ [evalProg.diderot:149.52-84] 
                              Var: meshData @ [evalProg.diderot:149.52-60] 
                              findPos
                            [
                              Var: altCPos @ [evalProg.diderot:149.69-76] 
                            ]
                          refPos
                        Lit: "\n" @ [evalProg.diderot:149.86-90] 
                      ]
                    Stabilize @ [evalProg.diderot:150.7-151.0] 
                  ]
                Print @ [evalProg.diderot:152.11-52] 
                  [
                    Lit: "fine in cell 1:" @ [evalProg.diderot:152.17-34] 
                    Apply @ [evalProg.diderot:152.36-45] 
                      Select @ [evalProg.diderot:152.36-45] 
                        Var: cPos @ [evalProg.diderot:152.36-40] 
                        mc
                      [ ]
                    Lit: "\n" @ [evalProg.diderot:152.46-50] 
                  ]
              Decl @ [evalProg.diderot:114.10-190.0] 
                Decl: altUp1= @ [evalProg.diderot:154.5-155.0] 
                  BinOp: / @ [evalProg.diderot:154.26-62] 
                    BinOp: * @ [evalProg.diderot:154.26-49] 
                      BinOp: * @ [evalProg.diderot:154.26-38] 
                        Lit: 0.5e0 @ [evalProg.diderot:154.26-29] 
                        Var: stepSize @ [evalProg.diderot:154.30-38] 
                      Apply @ [evalProg.diderot:154.39-49] 
                        Var: F @ [evalProg.diderot:154.39-40] 
                        [
                          Var: altCPos @ [evalProg.diderot:154.41-48] 
                        ]
                    UnaryOp: |()| @ [evalProg.diderot:154.50-62] 
                      Apply @ [evalProg.diderot:154.51-61] 
                        Var: F @ [evalProg.diderot:154.51-52] 
                        [
                          Var: altCPos @ [evalProg.diderot:154.53-60] 
                        ]
              Decl @ [evalProg.diderot:114.10-190.0] 
                Decl: up1= @ [evalProg.diderot:155.5-156.0] 
                  BinOp: * @ [evalProg.diderot:155.23-48] 
                    BinOp: * @ [evalProg.diderot:155.23-38] 
                      Lit: 0.5e0 @ [evalProg.diderot:155.23-26] 
                      Var: stepSize @ [evalProg.diderot:155.29-37] 
                    Apply @ [evalProg.diderot:155.40-48] 
                      Var: nV @ [evalProg.diderot:155.40-42] 
                      [
                        Var: cPos @ [evalProg.diderot:155.43-47] 
                      ]
              Decl @ [evalProg.diderot:114.10-190.0] 
                Decl: upCorrect1= @ [evalProg.diderot:156.5-157.0] 
                  BinOp: / @ [evalProg.diderot:156.30-76] 
                    BinOp: * @ [evalProg.diderot:156.30-60] 
                      BinOp: * @ [evalProg.diderot:156.30-45] 
                        Lit: 0.5e0 @ [evalProg.diderot:156.30-33] 
                        Var: stepSize @ [evalProg.diderot:156.36-44] 
                      Apply @ [evalProg.diderot:156.47-60] 
                        Var: altF @ [evalProg.diderot:156.47-51] 
                        [
                          Var: altCPos @ [evalProg.diderot:156.52-59] 
                        ]
                    UnaryOp: |()| @ [evalProg.diderot:156.61-76] 
                      Apply @ [evalProg.diderot:156.62-75] 
                        Var: altF @ [evalProg.diderot:156.62-66] 
                        [
                          Var: altCPos @ [evalProg.diderot:156.67-74] 
                        ]
              IfThen @ [evalProg.diderot:157.5-160.5] 
                OrElse @ [evalProg.diderot:157.9-67] 
                  BinOp: > @ [evalProg.diderot:157.9-39] 
                    UnaryOp: |()| @ [evalProg.diderot:157.9-27] 
                      BinOp: - @ [evalProg.diderot:157.10-26] 
                        Var: up1 @ [evalProg.diderot:157.10-13] 
                        Var: upCorrect1 @ [evalProg.diderot:157.16-26] 
                    Lit: 0.1e-5 @ [evalProg.diderot:157.30-38] 
                  BinOp: > @ [evalProg.diderot:157.42-67] 
                    UnaryOp: |()| @ [evalProg.diderot:157.42-56] 
                      BinOp: - @ [evalProg.diderot:157.43-55] 
                        Var: up1 @ [evalProg.diderot:157.43-46] 
                        Var: altUp1 @ [evalProg.diderot:157.49-55] 
                    Lit: 0.1e-5 @ [evalProg.diderot:157.59-67] 
                Print @ [evalProg.diderot:158.7-159.0] 
                  [
                    Lit: "ERG:Error in evaluation on pos 1:" @ [evalProg.diderot:158.13-48] 
                    Var: startPos @ [evalProg.diderot:158.50-58] 
                    Lit: "\n" @ [evalProg.diderot:158.60-64] 
                  ]
              Decl @ [evalProg.diderot:114.10-190.0] 
                Decl: intermed= @ [evalProg.diderot:160.5-161.0] 
                  BinOp: + @ [evalProg.diderot:160.33-43] 
                    Var: cPos @ [evalProg.diderot:160.33-37] 
                    Var: up1 @ [evalProg.diderot:160.40-43] 
              Decl @ [evalProg.diderot:114.10-190.0] 
                Decl: altIntermed= @ [evalProg.diderot:161.5-162.0] 
                  BinOp: + @ [evalProg.diderot:161.31-47] 
                    Var: altCPos @ [evalProg.diderot:161.31-38] 
                    Var: altUp1 @ [evalProg.diderot:161.41-47] 
              IfThen @ [evalProg.diderot:162.5-168.5] 
                BinOp: != @ [evalProg.diderot:162.8-69] 
                  Apply @ [evalProg.diderot:162.8-26] 
                    Select @ [evalProg.diderot:162.8-26] 
                      Var: intermed @ [evalProg.diderot:162.8-16] 
                      isValid
                    [ ]
                  Apply @ [evalProg.diderot:162.30-69] 
                    Select @ [evalProg.diderot:162.30-69] 
                      Apply @ [evalProg.diderot:162.30-69] 
                        Select @ [evalProg.diderot:162.30-69] 
                          Var: meshData @ [evalProg.diderot:162.30-38] 
                          findPos
                        [
                          Var: altIntermed @ [evalProg.diderot:162.47-58] 
                        ]
                      isValid
                    [ ]
                Block @ [evalProg.diderot:163.7-168.0] 
                  [
                    Print @ [evalProg.diderot:164.2-165.0] 
                      [
                        Lit: "ERG:Warning of validity intermed" @ [evalProg.diderot:164.8-42] 
                        Var: startPos @ [evalProg.diderot:164.44-52] 
                        Lit: "\n" @ [evalProg.diderot:164.54-58] 
                      ]
                    Print @ [evalProg.diderot:165.2-166.0] 
                      [
                        Lit: "Real location:" @ [evalProg.diderot:165.8-24] 
                        Var: altIntermed @ [evalProg.diderot:165.25-36] 
                        Lit: "\n" @ [evalProg.diderot:165.37-41] 
                      ]
                    Print @ [evalProg.diderot:166.2-167.0] 
                      [
                        Lit: "Cell change: " @ [evalProg.diderot:166.8-23] 
                        Select @ [evalProg.diderot:166.26-54] 
                          Apply @ [evalProg.diderot:166.26-54] 
                            Select @ [evalProg.diderot:166.26-54] 
                              Var: meshData @ [evalProg.diderot:166.26-34] 
                              findPos
                            [
                              Var: altCPos @ [evalProg.diderot:166.43-50] 
                            ]
                          mc
                        Lit: " to " @ [evalProg.diderot:166.56-62] 
                        Select @ [evalProg.diderot:166.64-96] 
                          Apply @ [evalProg.diderot:166.64-96] 
                            Select @ [evalProg.diderot:166.64-96] 
                              Var: meshData @ [evalProg.diderot:166.64-72] 
                              findPos
                            [
                              Var: altIntermed @ [evalProg.diderot:166.81-92] 
                            ]
                          mc
                        Lit: "\n" @ [evalProg.diderot:166.98-102] 
                      ]
                  ]
              IfThen @ [evalProg.diderot:168.5-172.5] 
                OrElse @ [evalProg.diderot:168.8-71] 
                  UnaryOp: ! @ [evalProg.diderot:168.8-28] 
                    Apply @ [evalProg.diderot:168.9-27] 
                      Select @ [evalProg.diderot:168.9-27] 
                        Var: intermed @ [evalProg.diderot:168.9-17] 
                        isValid
                      [ ]
                  UnaryOp: ! @ [evalProg.diderot:168.31-71] 
                    Apply @ [evalProg.diderot:168.32-71] 
                      Select @ [evalProg.diderot:168.32-71] 
                        Apply @ [evalProg.diderot:168.32-71] 
                          Select @ [evalProg.diderot:168.32-71] 
                            Var: meshData @ [evalProg.diderot:168.32-40] 
                            findPos
                          [
                            Var: altIntermed @ [evalProg.diderot:168.49-60] 
                          ]
                        isValid
                      [ ]
                Block @ [evalProg.diderot:168.72-172.0] 
                  [
                    Print @ [evalProg.diderot:169.7-170.0] 
                      [
                        Lit: "Went off the mesh\?" @ [evalProg.diderot:169.13-33] 
                        UnaryOp: ! @ [evalProg.diderot:169.35-54] 
                          Apply @ [evalProg.diderot:169.36-54] 
                            Select @ [evalProg.diderot:169.36-54] 
                              Var: intermed @ [evalProg.diderot:169.36-44] 
                              isValid
                            [ ]
                        Lit: " and " @ [evalProg.diderot:169.56-63] 
                        Var: altIntermed @ [evalProg.diderot:169.65-76] 
                        Lit: " and " @ [evalProg.diderot:169.78-85] 
                        UnaryOp: ! @ [evalProg.diderot:169.87-127] 
                          Apply @ [evalProg.diderot:169.88-127] 
                            Select @ [evalProg.diderot:169.88-127] 
                              Apply @ [evalProg.diderot:169.88-127] 
                                Select @ [evalProg.diderot:169.88-127] 
                                  Var: meshData @ [evalProg.diderot:169.88-96] 
                                  findPos
                                [
                                  Var: altIntermed @ [evalProg.diderot:169.105-116] 
                                ]
                              isValid
                            [ ]
                        Lit: "\n" @ [evalProg.diderot:169.129-133] 
                      ]
                    Stabilize @ [evalProg.diderot:170.7-171.0] 
                  ]
              IfThenElse @ [evalProg.diderot:172.5-178.0] 
                BinOp: > @ [evalProg.diderot:172.8-54] 
                  UnaryOp: |()| @ [evalProg.diderot:172.8-43] 
                    BinOp: - @ [evalProg.diderot:172.9-42] 
                      Apply @ [evalProg.diderot:172.9-28] 
                        Select @ [evalProg.diderot:172.9-28] 
                          Var: intermed @ [evalProg.diderot:172.9-17] 
                          worldPos
                        [ ]
                      Var: altIntermed @ [evalProg.diderot:172.31-42] 
                  Lit: 0.1e-5 @ [evalProg.diderot:172.46-54] 
                Block @ [evalProg.diderot:172.55-177.0] 
                  [
                    Print @ [evalProg.diderot:173.7-174.0] 
                      [
                        Lit: "ERG:Error in tracing 2: At step:" @ [evalProg.diderot:173.13-47] 
                        Var: step @ [evalProg.diderot:173.49-53] 
                        Lit: " with particle:" @ [evalProg.diderot:173.55-72] 
                        Var: startPos @ [evalProg.diderot:173.74-82] 
                        Lit: "\n" @ [evalProg.diderot:173.84-88] 
                      ]
                    Print @ [evalProg.diderot:174.7-175.0] 
                      [
                        Lit: "Poses are:" @ [evalProg.diderot:174.13-25] 
                        Apply @ [evalProg.diderot:174.27-46] 
                          Select @ [evalProg.diderot:174.27-46] 
                            Var: intermed @ [evalProg.diderot:174.27-35] 
                            worldPos
                          [ ]
                        Var: altIntermed @ [evalProg.diderot:174.48-59] 
                        Lit: "\n" @ [evalProg.diderot:174.61-65] 
                      ]
                    Stabilize @ [evalProg.diderot:175.7-176.0] 
                  ]
                Print @ [evalProg.diderot:177.11-52] 
                  [
                    Lit: "fine in cell 2:" @ [evalProg.diderot:177.17-34] 
                    Apply @ [evalProg.diderot:177.36-45] 
                      Select @ [evalProg.diderot:177.36-45] 
                        Var: cPos @ [evalProg.diderot:177.36-40] 
                        mc
                      [ ]
                    Lit: "\n" @ [evalProg.diderot:177.46-50] 
                  ]
              Decl @ [evalProg.diderot:114.10-190.0] 
                Decl: altUp2= @ [evalProg.diderot:178.5-179.0] 
                  BinOp: / @ [evalProg.diderot:178.26-66] 
                    BinOp: * @ [evalProg.diderot:178.26-49] 
                      Var: stepSize @ [evalProg.diderot:178.26-34] 
                      Apply @ [evalProg.diderot:178.35-49] 
                        Var: F @ [evalProg.diderot:178.35-36] 
                        [
                          Var: altIntermed @ [evalProg.diderot:178.37-48] 
                        ]
                    UnaryOp: |()| @ [evalProg.diderot:178.50-66] 
                      Apply @ [evalProg.diderot:178.51-65] 
                        Var: F @ [evalProg.diderot:178.51-52] 
                        [
                          Var: altIntermed @ [evalProg.diderot:178.53-64] 
                        ]
              Decl @ [evalProg.diderot:114.10-190.0] 
                Decl: up2= @ [evalProg.diderot:179.5-180.0] 
                  BinOp: * @ [evalProg.diderot:179.23-46] 
                    Var: stepSize @ [evalProg.diderot:179.23-31] 
                    Apply @ [evalProg.diderot:179.34-46] 
                      Var: nV @ [evalProg.diderot:179.34-36] 
                      [
                        Var: intermed @ [evalProg.diderot:179.37-45] 
                      ]
              Decl @ [evalProg.diderot:114.10-190.0] 
                Decl: upCorrect2= @ [evalProg.diderot:180.5-181.0] 
                  BinOp: / @ [evalProg.diderot:180.30-79] 
                    BinOp: * @ [evalProg.diderot:180.30-59] 
                      Var: stepSize @ [evalProg.diderot:180.30-38] 
                      Apply @ [evalProg.diderot:180.42-59] 
                        Var: altF @ [evalProg.diderot:180.42-46] 
                        [
                          Var: altIntermed @ [evalProg.diderot:180.47-58] 
                        ]
                    UnaryOp: |()| @ [evalProg.diderot:180.60-79] 
                      Apply @ [evalProg.diderot:180.61-78] 
                        Var: altF @ [evalProg.diderot:180.61-65] 
                        [
                          Var: altIntermed @ [evalProg.diderot:180.66-77] 
                        ]
              Assign: cPos= @ [evalProg.diderot:181.5-182.0] 
                BinOp: + @ [evalProg.diderot:181.12-22] 
                  Var: cPos @ [evalProg.diderot:181.12-16] 
                  Var: up2 @ [evalProg.diderot:181.19-22] 
              Assign: altCPos= @ [evalProg.diderot:182.5-183.0] 
                BinOp: + @ [evalProg.diderot:182.15-31] 
                  Var: altCPos @ [evalProg.diderot:182.15-22] 
                  Var: altUp2 @ [evalProg.diderot:182.25-31] 
              Assign: step+= @ [evalProg.diderot:183.5-184.0] 
                Lit: 1 @ [evalProg.diderot:183.11-12] 
              IfThen @ [evalProg.diderot:184.5-189.3] 
                OrElse @ [evalProg.diderot:184.9-66] 
                  BinOp: > @ [evalProg.diderot:184.9-39] 
                    UnaryOp: |()| @ [evalProg.diderot:184.9-27] 
                      BinOp: - @ [evalProg.diderot:184.10-26] 
                        Var: up2 @ [evalProg.diderot:184.10-13] 
                        Var: upCorrect2 @ [evalProg.diderot:184.16-26] 
                    Lit: 0.1e-5 @ [evalProg.diderot:184.30-38] 
                  BinOp: > @ [evalProg.diderot:184.42-66] 
                    UnaryOp: |()| @ [evalProg.diderot:184.42-56] 
                      BinOp: - @ [evalProg.diderot:184.43-55] 
                        Var: up2 @ [evalProg.diderot:184.43-46] 
                        Var: altUp2 @ [evalProg.diderot:184.49-55] 
                    Lit: 0.1e-4 @ [evalProg.diderot:184.59-66] 
                Block @ [evalProg.diderot:184.67-189.0] 
                  [
                    Print @ [evalProg.diderot:185.7-186.0] 
                      [
                        Lit: "ERG:Error in evaluation on pos 2:" @ [evalProg.diderot:185.13-48] 
                        Var: startPos @ [evalProg.diderot:185.50-58] 
                        Lit: "\n" @ [evalProg.diderot:185.60-64] 
                      ]
                    Print @ [evalProg.diderot:186.7-187.0] 
                      [
                        Lit: "The errors are:" @ [evalProg.diderot:186.13-30] 
                        UnaryOp: |()| @ [evalProg.diderot:186.32-50] 
                          BinOp: - @ [evalProg.diderot:186.33-49] 
                            Var: up2 @ [evalProg.diderot:186.33-36] 
                            Var: upCorrect2 @ [evalProg.diderot:186.39-49] 
                        Lit: " and " @ [evalProg.diderot:186.52-59] 
                        UnaryOp: |()| @ [evalProg.diderot:186.61-75] 
                          BinOp: - @ [evalProg.diderot:186.62-74] 
                            Var: up2 @ [evalProg.diderot:186.62-65] 
                            Var: altUp2 @ [evalProg.diderot:186.68-74] 
                        Lit: "\n" @ [evalProg.diderot:186.77-81] 
                      ]
                    Print @ [evalProg.diderot:187.7-188.0] 
                      [
                        Lit: "The cells are:" @ [evalProg.diderot:187.13-29] 
                        Select @ [evalProg.diderot:187.31-42] 
                          Var: intermed @ [evalProg.diderot:187.31-39] 
                          mc
                        Lit: " vs " @ [evalProg.diderot:187.44-50] 
                        Select @ [evalProg.diderot:187.52-84] 
                          Apply @ [evalProg.diderot:187.52-84] 
                            Select @ [evalProg.diderot:187.52-84] 
                              Var: meshData @ [evalProg.diderot:187.52-60] 
                              findPos
                            [
                              Var: altIntermed @ [evalProg.diderot:187.69-80] 
                            ]
                          mc
                        Lit: "\n" @ [evalProg.diderot:187.87-91] 
                      ]
                  ]
            ]
      ]
    Collection @ [evalProg.diderot:190.3-191.0] 
      Comprehension @ [evalProg.diderot:190.21-47] 
        Apply @ [evalProg.diderot:190.22-27] 
          Var: gg @ [evalProg.diderot:190.22-24] 
          [
            Var: x @ [evalProg.diderot:190.25-26] 
          ]
        [
          Iterator: x @ [evalProg.diderot:190.30-46] 
            Var: startPoints @ [evalProg.diderot:190.35-46] 
        ]
/* end program */
/* AST: After typechecking */
properties: HasInputs,HasGlobals,HasConsts,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
const int dim = 3;
input FemType: Mesh with type var:NONE meshData = loadFem(Mesh);
input FemType: Space with type var:mesh_t space = loadFem(Space);
input FemType: FemFunc with type var:fns_t data = loadFem(FemFunc);
input int timeSteps = 32;
input real timeEps = 0.1e-6;
input vec3[] startPoints;
input real stepSize = 0.1e-1;
input int stepMax = 300;
input mat3 M;
input vec3 center;
function bool != (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:mesh_t findPos (FemType: Mesh with type var:mesh_t mesh, vec3 pos)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  yayCells = extractFemItem(mesh, pos : vec3, int[], NearbyCell(File=spat.in)(Mesh));
  foreach (int cellItter in yayCells) {
    xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
    cellInt = cellItter;
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
    foreach (int newtonItter in $range (0, 16)) {
      delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
      xn = -<$[3]> (xn, delta);
      if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
        if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[2], -0.e0)))) {
          return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
          }
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: RefCell with type var:mesh_t refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:mesh_t, RefCell(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:mesh_t[], Cells(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[3,3,3,3] mesh_t_transform_3 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3,3]> (∇⊗<#; %3; $[3,3]; %3> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )))), pos);
  }
function tensor[3,3,3] mesh_t_transform_2 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3]> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, ))), pos);
  }
function mat3 mesh_t_transform_1 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )), pos);
  }
function vec3 mesh_t_transform_0 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3]> (femField(mesh,cell,field(3)[3], Transform, ), pos);
  }
function FemType: MeshPos with type var:mesh_t _mesh_t_newtonInverse (vec3 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
  foreach (int itter in $range (0, 16)) {
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[2], -0.e0)))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: MeshPos with type var:mesh_t _mesh_pos_mesh_t_build_world_pos (FemType: MeshPos with type var:mesh_t pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:mesh_t,vec3 (pos, mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return pos;
    }
  }
function vec3 worldPos (FemType: MeshPos with type var:mesh_t pos)
{
  return mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:mesh_t $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec3 refPos, vec3 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    print ("face ", $r2i (time[1]), " to ", $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1), "\n", "got: ", $sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), "\n");
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3,int (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), [•<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[0], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[1], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[2]], $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec3 (mesh, +<$[3]> (*<$[3]> (time[0], dPos), refPos))):FemType: MeshPos with type var:mesh_t;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    if == (faceIdx, -1) {
      return {-1, -1};
      }
    else {
      return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 8), * (faceIdx, 2)))):int[2];
      }
    }
  }
function vec2 _enter (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  {
    print ("\ntest :", / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos))), "signed dist: ", -<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), " face: ", 0, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n");
    if $and (>= (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), 0.1e-7)))
      if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[2], -0.e0)))) {
        print ("Saving at this face!", / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), > (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))), "\n");
        time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos));
        face = 0;
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), " face: ", 1, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-7)))
      if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[2], -0.e0)))) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
        face = 1;
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), " face: ", 2, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-7)))
      if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[2], -0.e0)))) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
        face = 2;
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), " face: ", 3, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), 0.1e-7)))
      if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[2], -0.e0)))) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos));
        face = 3;
        }
      }
  if $and (!= (face, -1), $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[2], -0.e0))))) {
    {
      print ("\nReturning via standard : ", [max (time, 0.e0), (real)face], "\n");
      return [max (time, 0.e0), (real)face];
      }
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec3 refPos, vec3 dPos, int i)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  {
    print ("\ntest :", / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos))), "signed dist: ", -<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), " face: ", 0, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n", "\n original face: ", i, " ");
    if $and (>= (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), 0.1e-7)))
      if != (i, 0) {
        print ("Saving at this face!", / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), > (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))), "\n");
        time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos));
        face = 0;
        }
      else {
        faceTime = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos));
        print ("Saving backup time: ", faceTime, "\n");
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), " face: ", 1, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n", "\n original face: ", i, " ");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-7)))
      if != (i, 1) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
        face = 1;
        }
      else {
        faceTime = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
        print ("Saving backup time: ", faceTime, "\n");
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), " face: ", 2, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n", "\n original face: ", i, " ");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-7)))
      if != (i, 2) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
        face = 2;
        }
      else {
        faceTime = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
        print ("Saving backup time: ", faceTime, "\n");
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), " face: ", 3, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n", "\n original face: ", i, " ");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), 0.1e-7)))
      if != (i, 3) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos));
        face = 3;
        }
      else {
        faceTime = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos));
        print ("Saving backup time: ", faceTime, "\n");
        }
      }
  if $and (!= (face, -1), $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[2], -0.e0))))) {
    {
      print ("\nReturning via standard : ", [max (time, 0.e0), (real)face], "\n");
      return [max (time, 0.e0), (real)face];
      }
    }
  else {
    if == (-inf, faceTime) {
      print ("\nReturning via fail : ", [(real)-1, (real)-1], "\n");
      return [(real)-1, (real)-1];
      }
    else {
      print ("\nReturning via backup : ", [max (faceTime, 0.e0), (real)i], "\n");
      return [max (faceTime, 0.e0), (real)i];
      }
    }
  }
function FemType: Mesh with type var:mesh_t domain (FemType: Space with type var:mesh_t arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:mesh_t space (FemType: FemFunc with type var:fns_t arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:func_t funcCell (FemType: FemFunc with type var:fns_t arg0, FemType: MeshCell with type var:mesh_t arg1)
{
  return loadFem(FuncCell);
  }
field(3)[3] F = ∘<#; %3; $[3]; %3; $[3]> (femField(data,extractFem(Mesh,extractFem(Space,data ) ),field(3)[3], refField, findPos), femField(extractFem(Mesh,extractFem(Space,data ) ),extractFem(Mesh,extractFem(Space,data ) ),field(3)[3], InvTransform, findPos));
FemType: RefCell with type var:mesh_t simplex = refcell (meshData);
function FemType: MeshPos with type var:mesh_t fn_2FB (FemType: MeshPos with type var:mesh_t x, vec3 dPos)
{
  if ! (extractFemItem(x, bool, Valid(MeshPos)))
    return x;
    real time = 0.1e1;
  FemType: MeshPos with type var:mesh_t cmp = x;
  foreach (int i in $range (0, timeSteps)) {
    vec3 deltaP = •<$[3,3]; $[3]; $[3]> (inv (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(extractFem(Mesh,loadFem(MeshCell) ),extractFemItem(loadFem(MeshCell), int, CellIndex(MeshCell)),field(3)[3], Transform, )), extractFemItem(cmp, vec3, RefPos(MeshPos)))), dPos);
    vec3 normDetaP = /<$[3]> (deltaP, |()|<$[3]> (deltaP));
    vec3 newPos = +<$[3]> (extractFemItem(cmp, vec3, RefPos(MeshPos)), *<$[3]> (time, deltaP));
    continue;
    if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], newPos)), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], newPos)[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], newPos)[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], newPos)[2], -0.e0)))) {
      FemType: MeshPos with type var:mesh_t nmp = extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3 (extractFem(Mesh,loadFem(MeshCell) ), extractFemItem(loadFem(MeshCell), int, CellIndex(MeshCell)), newPos)):FemType: MeshPos with type var:mesh_t;
      return nmp;
      }
    else {
      real eTime = _exit (extractFemItem(cmp, vec3, RefPos(MeshPos)), normDetaP, extractFemItem(cmp, int, PosEntryFacet(MeshPos)))[0];
      print ("The time result is:", / (eTime, |()|<$[3]> (deltaP)), " out of ", time, "\n");
      print ("Via ref:", extractFemItem(cmp, vec3, RefPos(MeshPos)), "->", deltaP, " or ", normDetaP, "\n");
      print ("Via world:", worldPos (cmp), "->", *<$[3]> (dPos, time), "\n");
      print ("Current cell:", loadFem(MeshCell), "\n");
      time = -<$[]> (time, / (eTime, |()|<$[3]> (deltaP)));
      print ("New time is:", time, "\n");
      if == (eTime, (real)(unary - (1))) {
        print ("Failing so we take the stupid way out\n");
        cmp = findPos (meshData, +<$[3]> (worldPos (x), dPos));
        return cmp;
        }
      FemType: MeshPos with type var:mesh_t nmp = $exitPos (extractFem(Mesh,cmp ), extractFemItem(cmp, int, CellIndex(Mesh)), extractFemItem(cmp, vec3, RefPos(Mesh)), normDetaP, _exit (extractFemItem(cmp, vec3, RefPos(Mesh)), normDetaP, extractFemItem(cmp, int, PosEntryFacet(MeshPos))));
      if (! (extractFemItem(nmp, bool, Valid(MeshPos))) || (< (eTime, (real)0) || < (time, timeEps))) {
        print ("done:", ! (extractFemItem(nmp, bool, Valid(MeshPos))), "\n");
        return nmp;
        }
      cmp = nmp;
      }
    }
  print ("Took stupid way out!\n");
  cmp = findPos (meshData, +<$[3]> (worldPos (x), dPos));
  return cmp;
  }
function vec3 nV (FemType: MeshPos with type var:mesh_t x)
{
  if extractFemItem(x, bool, Valid(MeshPos)) {
    FemType: MeshCell with type var:mesh_t c = loadFem(MeshCell);
    vec3 ref = extractFemItem(x, vec3, RefPos(MeshPos));
    vec3 val = @<#; %3; $[3]> (femField(extractFem(FemFunc,funcCell (data, c) ),extractFemItem(funcCell (data, c), int, CellIndex(FuncCell)),field(3)[3], refField, ), ref);
    return /<$[3]> (val, |()|<$[3]> (val));
    }
  else {
    print ("QWE:Eval at 0\n");
    return $zero<$[3]> ();
    }
  }
function vec3 altF (vec3 x)
{
  return •<$[3,3]; $[3]; $[3]> (M, -<$[3]> (x, center));
  }
strand gg (vec3 startPos)
{
  output vec3[] stream = (vec3[]){};
  output vec3[] newStream = (vec3[]){};
  int step = 0;
  FemType: MeshPos with type var:mesh_t cPos = findPos (meshData, startPos);
  vec3 altCPos = startPos;
  update {
    if (== (step, 0) && extractFemItem(cPos, bool, Valid(MeshPos))) {
      vec3 rp = extractFemItem(cPos, vec3, RefPos(MeshPos));
      if <= (rp[0], 0.1e-5)
        stabilize;
        if <= (rp[1], 0.1e-5)
        stabilize;
        if <= (rp[2], 0.1e-5)
        stabilize;
        real r = •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], rp);
      if <= (0.9999999e0, r)
        stabilize;
        }
    if != (extractFemItem(cPos, bool, Valid(MeshPos)), extractFemItem(findPos (meshData, altCPos), bool, Valid(MeshPos)))
      print ("ERG:Warning of validity startPos:", startPos, "\n");
      if (! (extractFemItem(cPos, bool, Valid(MeshPos))) || (! (extractFemItem(findPos (meshData, altCPos), bool, Valid(MeshPos))) || == (step, stepMax))) {
      print ("Went off the mesh\?", ! (extractFemItem(cPos, bool, Valid(MeshPos))), " and ", altCPos, " and ", ! (extractFemItem(findPos (meshData, altCPos), bool, Valid(MeshPos))), "\n");
      print ("Pos is:", extractFemItem(cPos, vec3, RefPos(MeshPos)), "\n");
      print (stream, "\n", newStream, "\n");
      stabilize;
      }
    stream = @<vec3> (stream, (vec3[]){worldPos (cPos)});
    newStream = @<vec3> (newStream, (vec3[]){altCPos});
    if > (|()|<$[3]> (-<$[3]> (worldPos (cPos), altCPos)), 0.1e-5) {
      print ("ERG:Error in tracing 1: At step:", step, " with particle:", startPos, "\n");
      print ("Poses are:", worldPos (cPos), altCPos, "\n");
      print ("Cells are:", loadFem(MeshCell), " and ", loadFem(MeshCell), "\n");
      print ("Ref poses are:", extractFemItem(cPos, vec3, RefPos(MeshPos)), " and ", extractFemItem(findPos (meshData, altCPos), vec3, RefPos(MeshPos)), "\n");
      stabilize;
      }
    else {
      print ("fine in cell 1:", loadFem(MeshCell), "\n");
      }
    vec3 altUp1 = /<$[3]> (*<$[3]> (* (0.5e0, stepSize), @<#; %3; $[3]> (F, altCPos)), |()|<$[3]> (@<#; %3; $[3]> (F, altCPos)));
    vec3 up1 = *<$[3]> (* (0.5e0, stepSize), nV (cPos));
    vec3 upCorrect1 = /<$[3]> (*<$[3]> (* (0.5e0, stepSize), altF (altCPos)), |()|<$[3]> (altF (altCPos)));
    if (> (|()|<$[3]> (-<$[3]> (up1, upCorrect1)), 0.1e-5) || > (|()|<$[3]> (-<$[3]> (up1, altUp1)), 0.1e-5))
      print ("ERG:Error in evaluation on pos 1:", startPos, "\n");
      FemType: MeshPos with type var:mesh_t intermed = fn_2FB (cPos, up1);
    vec3 altIntermed = +<$[3]> (altCPos, altUp1);
    if != (extractFemItem(intermed, bool, Valid(MeshPos)), extractFemItem(findPos (meshData, altIntermed), bool, Valid(MeshPos))) {
      print ("ERG:Warning of validity intermed", startPos, "\n");
      print ("Real location:", altIntermed, "\n");
      print ("Cell change: ", loadFem(MeshCell), " to ", loadFem(MeshCell), "\n");
      }
    if (! (extractFemItem(intermed, bool, Valid(MeshPos))) || ! (extractFemItem(findPos (meshData, altIntermed), bool, Valid(MeshPos)))) {
      print ("Went off the mesh\?", ! (extractFemItem(intermed, bool, Valid(MeshPos))), " and ", altIntermed, " and ", ! (extractFemItem(findPos (meshData, altIntermed), bool, Valid(MeshPos))), "\n");
      stabilize;
      }
    if > (|()|<$[3]> (-<$[3]> (worldPos (intermed), altIntermed)), 0.1e-5) {
      print ("ERG:Error in tracing 2: At step:", step, " with particle:", startPos, "\n");
      print ("Poses are:", worldPos (intermed), altIntermed, "\n");
      stabilize;
      }
    else {
      print ("fine in cell 2:", loadFem(MeshCell), "\n");
      }
    vec3 altUp2 = /<$[3]> (*<$[3]> (stepSize, @<#; %3; $[3]> (F, altIntermed)), |()|<$[3]> (@<#; %3; $[3]> (F, altIntermed)));
    vec3 up2 = *<$[3]> (stepSize, nV (intermed));
    vec3 upCorrect2 = /<$[3]> (*<$[3]> (stepSize, altF (altIntermed)), |()|<$[3]> (altF (altIntermed)));
    cPos = fn_2FB (cPos, up2);
    altCPos = +<$[3]> (altCPos, altUp2);
    step = + (step, 1);
    if (> (|()|<$[3]> (-<$[3]> (up2, upCorrect2)), 0.1e-5) || > (|()|<$[3]> (-<$[3]> (up2, altUp2)), 0.1e-4)) {
      print ("ERG:Error in evaluation on pos 2:", startPos, "\n");
      print ("The errors are:", |()|<$[3]> (-<$[3]> (up2, upCorrect2)), " and ", |()|<$[3]> (-<$[3]> (up2, altUp2)), "\n");
      print ("The cells are:", loadFem(MeshCell), " vs ", loadFem(MeshCell), "\n");
      }
    }
  
}
collection {
    foreach (vec3 x in startPoints) {
      new gg (x);
      }
    }
  
/* Program end */
/* Simplified Program (after after simplify) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData03FD;
input FemData:Space 0space0409_intermedateGlobal040A;
input FemData:FemFunc 0data040B_intermedateGlobal040C;
input int timeSteps040D = <default>;
input real timeEps040E = <default>;
input vec3[] startPoints040F;
input real stepSize0410 = <default>;
input int stepMax0411 = <default>;
input tensor[3,3] M0412;
input vec3 center0413;
constants {
  timeSteps040D = 32;
  timeEps040E = 0.1e-6;
  stepSize0410 = 0.1e-1;
  stepMax0411 = 300;
}
global Femdata: MeshCell[] 0cell_meshData03FE;
global Femdata: Space space0409;
global Femdata: FemFunc data040B;
global field(3)[3] F1561;
global Femdata: RefCell simplex1562;
function bool#0 !=0414 (Femdata: MeshCell cell10415, Femdata: MeshCell cell10416)
{
  int _t0417 = extractFemItem(CellIndex(Mesh), int, cell10415);
  int _t0418 = extractFemItem(CellIndex(Mesh), int, cell10416);
  bool _t0419 = prim !=0086 (_t0417, _t0418);
  return _t0419;
}
function bool#0 ==041A (Femdata: MeshCell cell10415, Femdata: MeshCell cell10416)
{
  int _t041B = extractFemItem(CellIndex(Mesh), int, cell10415);
  int _t041C = extractFemItem(CellIndex(Mesh), int, cell10416);
  bool _t041D = prim ==0082 (_t041B, _t041C);
  return _t041D;
}
function Femdata: MeshPos#20 findPos041E (Femdata: Mesh mesh041F, vec3 pos0420)
{
  real _t0421 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0422 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0423 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0424 = [_t0421, _t0422, _t0423];
  newtonInt0425 = 0;
  cellInt0426 = extractFemItem(StartCell(Mesh), int, mesh041F);
  int _t0427 = extractFemItem(NumCell(Mesh), int, mesh041F);
  int _t0428 = 1;
  numCell0429 = prim -0024 (_t0427, _t0428);
  yayCells042A = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh041F, pos0420 : vec3);
  foreach cellItter042E in yayCells042A {
    real _t042B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn0424 = [_t042B, _t042C, _t042D];
    cellInt0426 = cellItter042E;
    field(3)[3] _t042F = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
    field(3)[3,3] _t0430 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042F);
    field(3)[3,3] _t0431 = prim inv015E<#∞; %3> (_t0430);
    real _t0432 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0433 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0435 = [_t0432, _t0433, _t0434];
    A0436 = prim @00A5<#∞; %3; $[3,3]> (_t0431, _t0435);
    int _t0437 = 0;
    int _t0438 = 16;
    int[] _t0439 = prim $range01C3 (_t0437, _t0438);
    foreach newtonItter0468 in _t0439 {
      field(3)[3] _t043A = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
      field(3)[3] _t043B = prim -002E<#∞; %3; $[3]> (_t043A, pos0420);
      field(3)[3] _t043C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0436, _t043B);
      delta043D = prim @00A5<#∞; %3; $[3]> (_t043C, xn0424);
      xn0424 = prim -0026<$[3]> (xn0424, delta043D);
      real _t043E = 0.1e-7;
      real _t043F = 0.1e-7;
      real _t0440 = prim *0034 (_t043E, _t043F);
      real _t0441 = prim •00CE<$[3]; $[3]; $[]> (delta043D, delta043D);
      bool _t0442 = prim >=007E (_t0440, _t0441);
      if _t0442 {
        real _t0443 = 0.1e1;
        real _t0444 = 0.1e-7;
        real _t0445 = prim +0017<$[]> (_t0443, _t0444);
        real _t0446 = 0.1e1;
        real _t0447 = 0.1e1;
        real _t0448 = 0.1e1;
        vec3 _t0449 = [_t0446, _t0447, _t0448];
        real _t044A = prim •00CE<$[3]; $[3]; $[]> (_t0449, xn0424);
        bool _t044B = prim >0080 (_t0445, _t044A);
        real _t044C = 0.1e-7;
        real _t044D = 0.1e-7;
        real _t044E = 0.1e-7;
        vec3 _t044F = [_t044C, _t044D, _t044E];
        vec3 _t0450 = prim +0017<$[3]> (_t044F, xn0424);
        real _t0451 = _t0450[0];
        real _t0452 = -0.e0;
        bool _t0453 = prim >0080 (_t0451, _t0452);
        real _t0454 = 0.1e-7;
        real _t0455 = 0.1e-7;
        real _t0456 = 0.1e-7;
        vec3 _t0457 = [_t0454, _t0455, _t0456];
        vec3 _t0458 = prim +0017<$[3]> (_t0457, xn0424);
        real _t0459 = _t0458[1];
        real _t045A = -0.e0;
        bool _t045B = prim >0080 (_t0459, _t045A);
        real _t045C = 0.1e-7;
        real _t045D = 0.1e-7;
        real _t045E = 0.1e-7;
        vec3 _t045F = [_t045C, _t045D, _t045E];
        vec3 _t0460 = prim +0017<$[3]> (_t045F, xn0424);
        real _t0461 = _t0460[2];
        real _t0462 = -0.e0;
        bool _t0463 = prim >0080 (_t0461, _t0462);
        bool _t0464 = prim $and01C4 (_t045B, _t0463);
        bool _t0465 = prim $and01C4 (_t0453, _t0464);
        bool _t0466 = prim $and01C4 (_t044B, _t0465);
        if _t0466 {
          Femdata: MeshPos _t0467 = extractFemItemN((mesh041F, cellInt0426, xn0424, pos0420),AllBuild(MeshPos),);
          return _t0467;
        }
      }
    }
  }
  Femdata: MeshPos _t0469 = extractFemItemN((mesh041F),InvalidBuild(MeshPos),);
  return _t0469;
}
function Femdata: RefCell#1 refcell046A (Femdata: Mesh arg0046B)
{
  Femdata: RefCell _t046C = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0046B);
  return _t046C;
}
function Femdata: MeshCell[]#0 cells046D (Femdata: Mesh arg0046E)
{
  Femdata: MeshCell[] _t046F = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg0046E);
  return _t046F;
}
function Femdata: MeshCell[]#0 cells0470 (Femdata: Mesh arg0046E)
{
  int _t0471 = 0;
  int _t0472 = extractFemItem(NumCell(Mesh), int, arg0046E);
  int[] _t0473 = prim $range01C3 (_t0471, _t0472);
  Femdata: MeshCell[] accum0476 = {};
  foreach i0474 in _t0473 {
    Femdata: MeshCell _t0475 = loadFem(MeshCell, arg0046E, i0474);
    accum0476 = prim @0010<Femdata: MeshCell> (accum0476, _t0475);
  }
  return accum0476;
}
function int#0 numCell0477 (Femdata: Mesh arg0046B)
{
  int _t0478 = extractFemItem(NumCell(Mesh), int, arg0046B);
  return _t0478;
}
function tensor[3,3,3,3]#0 mesh_t_transform_30479 (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t047D = femField(mesh047C,cell047B,field(3)[3],Transform,);
  field(3)[3,3] _t047E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t047D);
  field(3)[3,3,3] _t047F = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t047E);
  field(3)[3,3,3,3] _t0480 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t047F);
  tensor[3,3,3,3] _t0481 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0480, pos047A);
  return _t0481;
}
function tensor[3,3,3]#0 mesh_t_transform_20482 (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t0483 = femField(mesh047C,cell047B,field(3)[3],Transform,);
  field(3)[3,3] _t0484 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0483);
  field(3)[3,3,3] _t0485 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0484);
  tensor[3,3,3] _t0486 = prim @00A5<#∞; %3; $[3,3,3]> (_t0485, pos047A);
  return _t0486;
}
function tensor[3,3]#0 mesh_t_transform_10487 (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t0488 = femField(mesh047C,cell047B,field(3)[3],Transform,);
  field(3)[3,3] _t0489 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0488);
  tensor[3,3] _t048A = prim @00A5<#∞; %3; $[3,3]> (_t0489, pos047A);
  return _t048A;
}
function vec3#2 mesh_t_transform_0048B (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t048C = femField(mesh047C,cell047B,field(3)[3],Transform,);
  vec3 _t048D = prim @00A5<#∞; %3; $[3]> (_t048C, pos047A);
  return _t048D;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse048E (vec3 pos048F, int cellInt0490, Femdata: Mesh mesh0491)
{
  real _t0492 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0493 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0494 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0495 = [_t0492, _t0493, _t0494];
  field(3)[3] _t0496 = femField(mesh0491,cellInt0490,field(3)[3],Transform,);
  field(3)[3,3] _t0497 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0496);
  field(3)[3,3] _t0498 = prim inv015E<#∞; %3> (_t0497);
  real _t0499 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t049A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t049B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t049C = [_t0499, _t049A, _t049B];
  A049D = prim @00A5<#∞; %3; $[3,3]> (_t0498, _t049C);
  int _t049E = 0;
  int _t049F = 16;
  int[] _t04A0 = prim $range01C3 (_t049E, _t049F);
  foreach itter04D0 in _t04A0 {
    field(3)[3] _t04A1 = femField(mesh0491,cellInt0490,field(3)[3],Transform,);
    field(3)[3] _t04A2 = prim -002E<#∞; %3; $[3]> (_t04A1, pos048F);
    field(3)[3] _t04A3 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A049D, _t04A2);
    delta04A4 = prim @00A5<#∞; %3; $[3]> (_t04A3, xn0495);
    xn0495 = prim -0026<$[3]> (xn0495, delta04A4);
    real _t04A5 = 0.1e-7;
    real _t04A6 = 0.1e-7;
    real _t04A7 = prim *0034 (_t04A5, _t04A6);
    real _t04A8 = prim •00CE<$[3]; $[3]; $[]> (delta04A4, delta04A4);
    bool _t04A9 = prim >=007E (_t04A7, _t04A8);
    if _t04A9 {
      real _t04AA = 0.1e1;
      real _t04AB = 0.1e-7;
      real _t04AC = prim +0017<$[]> (_t04AA, _t04AB);
      real _t04AD = 0.1e1;
      real _t04AE = 0.1e1;
      real _t04AF = 0.1e1;
      vec3 _t04B0 = [_t04AD, _t04AE, _t04AF];
      real _t04B1 = prim •00CE<$[3]; $[3]; $[]> (_t04B0, xn0495);
      bool _t04B2 = prim >0080 (_t04AC, _t04B1);
      real _t04B3 = 0.1e-7;
      real _t04B4 = 0.1e-7;
      real _t04B5 = 0.1e-7;
      vec3 _t04B6 = [_t04B3, _t04B4, _t04B5];
      vec3 _t04B7 = prim +0017<$[3]> (_t04B6, xn0495);
      real _t04B8 = _t04B7[0];
      real _t04B9 = -0.e0;
      bool _t04BA = prim >0080 (_t04B8, _t04B9);
      real _t04BB = 0.1e-7;
      real _t04BC = 0.1e-7;
      real _t04BD = 0.1e-7;
      vec3 _t04BE = [_t04BB, _t04BC, _t04BD];
      vec3 _t04BF = prim +0017<$[3]> (_t04BE, xn0495);
      real _t04C0 = _t04BF[1];
      real _t04C1 = -0.e0;
      bool _t04C2 = prim >0080 (_t04C0, _t04C1);
      real _t04C3 = 0.1e-7;
      real _t04C4 = 0.1e-7;
      real _t04C5 = 0.1e-7;
      vec3 _t04C6 = [_t04C3, _t04C4, _t04C5];
      vec3 _t04C7 = prim +0017<$[3]> (_t04C6, xn0495);
      real _t04C8 = _t04C7[2];
      real _t04C9 = -0.e0;
      bool _t04CA = prim >0080 (_t04C8, _t04C9);
      bool _t04CB = prim $and01C4 (_t04C2, _t04CA);
      bool _t04CC = prim $and01C4 (_t04BA, _t04CB);
      bool _t04CD = prim $and01C4 (_t04B2, _t04CC);
      if _t04CD {
        Femdata: MeshPos _t04CE = extractFemItemN((mesh0491, cellInt0490, xn0495, pos048F),AllBuild(MeshPos),);
        return _t04CE;
      } else {
        Femdata: MeshPos _t04CF = extractFemItemN((mesh0491),InvalidBuild(MeshPos),);
        return _t04CF;
      }
    }
  }
  Femdata: MeshPos _t04D1 = extractFemItemN((mesh0491),InvalidBuild(MeshPos),);
  return _t04D1;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos04D2 (Femdata: MeshPos pos04D3)
{
  bool _t04D4 = extractFemItem(WorldTest(MeshPos), bool, pos04D3);
  if _t04D4 {
    vec3 _t04D5 = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
    int _t04D6 = extractFemItem(CellIndex(MeshPos), int, pos04D3);
    Femdata: Mesh _t04D7 = extractFem(pos04D3, Mesh);
    vec3 _t04D8 = func mesh_t_transform_0048B (_t04D5, _t04D6, _t04D7);
    Femdata: MeshPos _t04D9 = extractFemItemN((pos04D3, _t04D8),NewWorld(MeshPos),);
    return _t04D9;
  } else {
    return pos04D3;
  }
}
function vec3#8 worldPos04DA (Femdata: MeshPos pos04D3)
{
  vec3 _t04DB = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
  int _t04DC = extractFemItem(CellIndex(MeshPos), int, pos04D3);
  Femdata: Mesh _t04DD = extractFem(pos04D3, Mesh);
  vec3 _t04DE = func mesh_t_transform_0048B (_t04DB, _t04DC, _t04DD);
  return _t04DE;
}
function Femdata: MeshPos#1 $exitPos04DF (Femdata: Mesh mesh04E0, int cellId04E1, vec3 refPos04E2, vec3 dPos04E3, real[2] time04E4)
{
  int _t04E5 = -1;
  real _t04E6 = time04E4[1];
  int _t04E7 = prim $r2i01B7 (_t04E6);
  int[2] _t04E9 = func nextCell404E8 (_t04E7, cellId04E1, mesh04E0);
  int _t04EA = 0;
  int _t04EB = prim $sub01C0<int; %2> (_t04E9, _t04EA);
  bool _t04EC = prim !=0086 (_t04E5, _t04EB);
  if _t04EC {
    string _t04ED = "face ";
    real _t04EE = time04E4[1];
    int _t04EF = prim $r2i01B7 (_t04EE);
    string _t04F0 = " to ";
    real _t04F1 = time04E4[1];
    int _t04F2 = prim $r2i01B7 (_t04F1);
    int[2] _t04F3 = func nextCell404E8 (_t04F2, cellId04E1, mesh04E0);
    int _t04F4 = 1;
    int _t04F5 = prim $sub01C0<int; %2> (_t04F3, _t04F4);
    string _t04F6 = "\n";
    string _t04F7 = "got: ";
    real _t04F8 = 0.1e1;
    real _t04F9 = 0.e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.e0;
    vec4 _t04FC = [_t04F8, _t04F9, _t04FA, _t04FB];
    real _t04FD = 0.e0;
    real _t04FE = 0.1e1;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec4 _t0501 = [_t04FD, _t04FE, _t04FF, _t0500];
    real _t0502 = 0.e0;
    real _t0503 = 0.e0;
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    vec4 _t0506 = [_t0502, _t0503, _t0504, _t0505];
    real _t0507 = 0.971445146547e-16;
    real _t0508 = 0.e0;
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    vec4 _t050B = [_t0507, _t0508, _t0509, _t050A];
    tensor[4,4] _t050C = [_t04FC, _t0501, _t0506, _t050B];
    real _t050D = 0.57735026919e0;
    real _t050E = 0.57735026919e0;
    real _t050F = 0.57735026919e0;
    real _t0510 = -0.57735026919e0;
    vec4 _t0511 = [_t050D, _t050E, _t050F, _t0510];
    real _t0512 = -0.333333333333e0;
    real _t0513 = 0.666666666667e0;
    real _t0514 = -0.333333333333e0;
    real _t0515 = 0.333333333333e0;
    vec4 _t0516 = [_t0512, _t0513, _t0514, _t0515];
    real _t0517 = -0.333333333333e0;
    real _t0518 = -0.333333333333e0;
    real _t0519 = 0.666666666667e0;
    real _t051A = 0.333333333333e0;
    vec4 _t051B = [_t0517, _t0518, _t0519, _t051A];
    real _t051C = 0.971445146547e-16;
    real _t051D = 0.e0;
    real _t051E = 0.e0;
    real _t051F = 0.1e1;
    vec4 _t0520 = [_t051C, _t051D, _t051E, _t051F];
    tensor[4,4] _t0521 = [_t0511, _t0516, _t051B, _t0520];
    real _t0522 = -0.333333333333e0;
    real _t0523 = 0.666666666667e0;
    real _t0524 = -0.333333333333e0;
    real _t0525 = 0.333333333333e0;
    vec4 _t0526 = [_t0522, _t0523, _t0524, _t0525];
    real _t0527 = -0.57735026919e0;
    real _t0528 = -0.57735026919e0;
    real _t0529 = -0.57735026919e0;
    real _t052A = 0.57735026919e0;
    vec4 _t052B = [_t0527, _t0528, _t0529, _t052A];
    real _t052C = -0.333333333333e0;
    real _t052D = -0.333333333333e0;
    real _t052E = 0.666666666667e0;
    real _t052F = 0.333333333333e0;
    vec4 _t0530 = [_t052C, _t052D, _t052E, _t052F];
    real _t0531 = 0.971445146547e-16;
    real _t0532 = 0.e0;
    real _t0533 = 0.e0;
    real _t0534 = 0.1e1;
    vec4 _t0535 = [_t0531, _t0532, _t0533, _t0534];
    tensor[4,4] _t0536 = [_t0526, _t052B, _t0530, _t0535];
    real _t0537 = -0.333333333333e0;
    real _t0538 = 0.666666666667e0;
    real _t0539 = -0.333333333333e0;
    real _t053A = 0.333333333333e0;
    vec4 _t053B = [_t0537, _t0538, _t0539, _t053A];
    real _t053C = -0.333333333333e0;
    real _t053D = -0.333333333333e0;
    real _t053E = 0.666666666667e0;
    real _t053F = 0.333333333333e0;
    vec4 _t0540 = [_t053C, _t053D, _t053E, _t053F];
    real _t0541 = 0.57735026919e0;
    real _t0542 = 0.57735026919e0;
    real _t0543 = 0.57735026919e0;
    real _t0544 = -0.57735026919e0;
    vec4 _t0545 = [_t0541, _t0542, _t0543, _t0544];
    real _t0546 = 0.971445146547e-16;
    real _t0547 = 0.e0;
    real _t0548 = 0.e0;
    real _t0549 = 0.1e1;
    vec4 _t054A = [_t0546, _t0547, _t0548, _t0549];
    tensor[4,4] _t054B = [_t053B, _t0540, _t0545, _t054A];
    tensor[4,4][4] _t054C = {_t050C, _t0521, _t0536, _t054B};
    real _t054D = 0.57735026919e0;
    real _t054E = -0.1e1;
    real _t054F = -0.1e1;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    real _t0552 = 0.57735026919e0;
    real _t0553 = 0.1e1;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    vec4 _t0556 = [_t0552, _t0553, _t0554, _t0555];
    real _t0557 = 0.57735026919e0;
    real _t0558 = 0.e0;
    real _t0559 = 0.1e1;
    real _t055A = 0.e0;
    vec4 _t055B = [_t0557, _t0558, _t0559, _t055A];
    real _t055C = 0.e0;
    real _t055D = 0.e0;
    real _t055E = 0.e0;
    real _t055F = 0.1e1;
    vec4 _t0560 = [_t055C, _t055D, _t055E, _t055F];
    tensor[4,4] _t0561 = [_t0551, _t0556, _t055B, _t0560];
    real _t0562 = 0.1e1;
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.e0;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    real _t0567 = 0.e0;
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    vec4 _t056B = [_t0567, _t0568, _t0569, _t056A];
    real _t056C = 0.e0;
    real _t056D = 0.e0;
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    vec4 _t0570 = [_t056C, _t056D, _t056E, _t056F];
    real _t0571 = 0.e0;
    real _t0572 = 0.e0;
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    vec4 _t0575 = [_t0571, _t0572, _t0573, _t0574];
    tensor[4,4] _t0576 = [_t0566, _t056B, _t0570, _t0575];
    real _t0577 = 0.e0;
    real _t0578 = 0.1e1;
    real _t0579 = 0.e0;
    real _t057A = 0.e0;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    real _t057C = -0.1e1;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    vec4 _t0580 = [_t057C, _t057D, _t057E, _t057F];
    real _t0581 = 0.e0;
    real _t0582 = 0.e0;
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    vec4 _t0585 = [_t0581, _t0582, _t0583, _t0584];
    real _t0586 = 0.e0;
    real _t0587 = 0.e0;
    real _t0588 = 0.e0;
    real _t0589 = 0.1e1;
    vec4 _t058A = [_t0586, _t0587, _t0588, _t0589];
    tensor[4,4] _t058B = [_t057B, _t0580, _t0585, _t058A];
    real _t058C = 0.e0;
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    vec4 _t0590 = [_t058C, _t058D, _t058E, _t058F];
    real _t0591 = 0.e0;
    real _t0592 = 0.e0;
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    vec4 _t0595 = [_t0591, _t0592, _t0593, _t0594];
    real _t0596 = 0.1e1;
    real _t0597 = 0.e0;
    real _t0598 = 0.e0;
    real _t0599 = 0.e0;
    vec4 _t059A = [_t0596, _t0597, _t0598, _t0599];
    real _t059B = 0.e0;
    real _t059C = 0.e0;
    real _t059D = 0.e0;
    real _t059E = 0.1e1;
    vec4 _t059F = [_t059B, _t059C, _t059D, _t059E];
    tensor[4,4] _t05A0 = [_t0590, _t0595, _t059A, _t059F];
    tensor[4,4][4] _t05A1 = {_t0561, _t0576, _t058B, _t05A0};
    real _t05A2 = -0.1e1;
    real _t05A3 = -0.57735026919e0;
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.57735026919e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    vec4 _t05AB = [_t05A7, _t05A8, _t05A9, _t05AA];
    real _t05AC = 0.e0;
    real _t05AD = -0.57735026919e0;
    real _t05AE = 0.1e1;
    real _t05AF = 0.e0;
    vec4 _t05B0 = [_t05AC, _t05AD, _t05AE, _t05AF];
    real _t05B1 = 0.e0;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    vec4 _t05B5 = [_t05B1, _t05B2, _t05B3, _t05B4];
    tensor[4,4] _t05B6 = [_t05A6, _t05AB, _t05B0, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.e0;
    real _t05BA = 0.e0;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    real _t05BC = 0.1e1;
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    vec4 _t05C0 = [_t05BC, _t05BD, _t05BE, _t05BF];
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    vec4 _t05C5 = [_t05C1, _t05C2, _t05C3, _t05C4];
    real _t05C6 = 0.e0;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.1e1;
    vec4 _t05CA = [_t05C6, _t05C7, _t05C8, _t05C9];
    tensor[4,4] _t05CB = [_t05BB, _t05C0, _t05C5, _t05CA];
    real _t05CC = 0.1e1;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.e0;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    vec4 _t05D5 = [_t05D1, _t05D2, _t05D3, _t05D4];
    real _t05D6 = 0.e0;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    vec4 _t05DA = [_t05D6, _t05D7, _t05D8, _t05D9];
    real _t05DB = 0.e0;
    real _t05DC = 0.e0;
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    vec4 _t05DF = [_t05DB, _t05DC, _t05DD, _t05DE];
    tensor[4,4] _t05E0 = [_t05D0, _t05D5, _t05DA, _t05DF];
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    vec4 _t05E5 = [_t05E1, _t05E2, _t05E3, _t05E4];
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    vec4 _t05EA = [_t05E6, _t05E7, _t05E8, _t05E9];
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    vec4 _t05EF = [_t05EB, _t05EC, _t05ED, _t05EE];
    real _t05F0 = 0.e0;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    real _t05F3 = 0.1e1;
    vec4 _t05F4 = [_t05F0, _t05F1, _t05F2, _t05F3];
    tensor[4,4] _t05F5 = [_t05E5, _t05EA, _t05EF, _t05F4];
    tensor[4,4][4] _t05F6 = {_t05B6, _t05CB, _t05E0, _t05F5};
    real _t05F7 = -0.1e1;
    real _t05F8 = -0.1e1;
    real _t05F9 = 0.57735026919e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = 0.e0;
    real _t05FE = 0.57735026919e0;
    real _t05FF = 0.e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.1e1;
    real _t0603 = 0.57735026919e0;
    real _t0604 = 0.e0;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    real _t0606 = 0.e0;
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    vec4 _t060A = [_t0606, _t0607, _t0608, _t0609];
    tensor[4,4] _t060B = [_t05FB, _t0600, _t0605, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = 0.e0;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.1e1;
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    vec4 _t061F = [_t061B, _t061C, _t061D, _t061E];
    tensor[4,4] _t0620 = [_t0610, _t0615, _t061A, _t061F];
    real _t0621 = 0.1e1;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.e0;
    real _t0627 = 0.e0;
    real _t0628 = -0.1e1;
    real _t0629 = 0.e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.1e1;
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    real _t0630 = 0.e0;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    vec4 _t0634 = [_t0630, _t0631, _t0632, _t0633];
    tensor[4,4] _t0635 = [_t0625, _t062A, _t062F, _t0634];
    real _t0636 = 0.1e1;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    vec4 _t063F = [_t063B, _t063C, _t063D, _t063E];
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    vec4 _t0644 = [_t0640, _t0641, _t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    vec4 _t0649 = [_t0645, _t0646, _t0647, _t0648];
    tensor[4,4] _t064A = [_t063A, _t063F, _t0644, _t0649];
    tensor[4,4][4] _t064B = {_t060B, _t0620, _t0635, _t064A};
    tensor[4,4][4][4] _t064C = {_t054C, _t05A1, _t05F6, _t064B};
    real _t064D = time04E4[1];
    int _t064E = prim $r2i01B7 (_t064D);
    tensor[4,4][4] _t064F = prim $sub01C0<tensor[4,4][4]; %4> (_t064C, _t064E);
    real _t0650 = time04E4[1];
    int _t0651 = prim $r2i01B7 (_t0650);
    int[2] _t0652 = func nextCell404E8 (_t0651, cellId04E1, mesh04E0);
    int _t0653 = 1;
    int _t0654 = prim $sub01C0<int; %2> (_t0652, _t0653);
    tensor[4,4] _t0655 = prim $sub01C0<tensor[4,4]; %4> (_t064F, _t0654);
    string _t0656 = "\n";
    print (_t04ED, _t04EF, _t04F0, _t04F5, _t04F6, _t04F7, _t0655, _t0656);
    real _t0657 = time04E4[1];
    int _t0658 = prim $r2i01B7 (_t0657);
    int[2] _t0659 = func nextCell404E8 (_t0658, cellId04E1, mesh04E0);
    int _t065A = 0;
    int _t065B = prim $sub01C0<int; %2> (_t0659, _t065A);
    real _t065C = 0.1e1;
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.1e1;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.971445146547e-16;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.57735026919e0;
    real _t0672 = 0.57735026919e0;
    real _t0673 = 0.57735026919e0;
    real _t0674 = -0.57735026919e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = -0.333333333333e0;
    real _t0677 = 0.666666666667e0;
    real _t0678 = -0.333333333333e0;
    real _t0679 = 0.333333333333e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = -0.333333333333e0;
    real _t067C = -0.333333333333e0;
    real _t067D = 0.666666666667e0;
    real _t067E = 0.333333333333e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.971445146547e-16;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = -0.333333333333e0;
    real _t0687 = 0.666666666667e0;
    real _t0688 = -0.333333333333e0;
    real _t0689 = 0.333333333333e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = -0.57735026919e0;
    real _t068C = -0.57735026919e0;
    real _t068D = -0.57735026919e0;
    real _t068E = 0.57735026919e0;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = -0.333333333333e0;
    real _t0691 = -0.333333333333e0;
    real _t0692 = 0.666666666667e0;
    real _t0693 = 0.333333333333e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.971445146547e-16;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = -0.333333333333e0;
    real _t069C = 0.666666666667e0;
    real _t069D = -0.333333333333e0;
    real _t069E = 0.333333333333e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = -0.333333333333e0;
    real _t06A1 = -0.333333333333e0;
    real _t06A2 = 0.666666666667e0;
    real _t06A3 = 0.333333333333e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.57735026919e0;
    real _t06A6 = 0.57735026919e0;
    real _t06A7 = 0.57735026919e0;
    real _t06A8 = -0.57735026919e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.971445146547e-16;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][4] _t06B0 = {_t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.57735026919e0;
    real _t06B2 = -0.1e1;
    real _t06B3 = -0.1e1;
    real _t06B4 = 0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.57735026919e0;
    real _t06B7 = 0.1e1;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.57735026919e0;
    real _t06BC = 0.e0;
    real _t06BD = 0.1e1;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.e0;
    real _t06CC = 0.1e1;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.e0;
    real _t06DC = 0.1e1;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = -0.1e1;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    tensor[4,4][4] _t0705 = {_t06C5, _t06DA, _t06EF, _t0704};
    real _t0706 = -0.1e1;
    real _t0707 = -0.57735026919e0;
    real _t0708 = -0.1e1;
    real _t0709 = 0.1e1;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.1e1;
    real _t070C = -0.57735026919e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = -0.57735026919e0;
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    tensor[4,4] _t071A = [_t070A, _t070F, _t0714, _t0719];
    real _t071B = 0.e0;
    real _t071C = -0.1e1;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.1e1;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.1e1;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    tensor[4,4] _t072F = [_t071F, _t0724, _t0729, _t072E];
    real _t0730 = 0.1e1;
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.1e1;
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = 0.e0;
    real _t0750 = -0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    tensor[4,4][4] _t075A = {_t071A, _t072F, _t0744, _t0759};
    real _t075B = -0.1e1;
    real _t075C = -0.1e1;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.1e1;
    real _t0761 = 0.e0;
    real _t0762 = 0.57735026919e0;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.57735026919e0;
    real _t0768 = 0.e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    tensor[4,4] _t076F = [_t075F, _t0764, _t0769, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    tensor[4,4] _t0784 = [_t0774, _t0779, _t077E, _t0783];
    real _t0785 = 0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = -0.1e1;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.1e1;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    tensor[4,4] _t0799 = [_t0789, _t078E, _t0793, _t0798];
    real _t079A = 0.1e1;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.e0;
    vec4 _t079E = [_t079A, _t079B, _t079C, _t079D];
    real _t079F = 0.e0;
    real _t07A0 = 0.1e1;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    vec4 _t07A3 = [_t079F, _t07A0, _t07A1, _t07A2];
    real _t07A4 = 0.e0;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.1e1;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    real _t07AC = 0.1e1;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    tensor[4,4] _t07AE = [_t079E, _t07A3, _t07A8, _t07AD];
    tensor[4,4][4] _t07AF = {_t076F, _t0784, _t0799, _t07AE};
    tensor[4,4][4][4] _t07B0 = {_t06B0, _t0705, _t075A, _t07AF};
    real _t07B1 = time04E4[1];
    int _t07B2 = prim $r2i01B7 (_t07B1);
    tensor[4,4][4] _t07B3 = prim $sub01C0<tensor[4,4][4]; %4> (_t07B0, _t07B2);
    real _t07B4 = time04E4[1];
    int _t07B5 = prim $r2i01B7 (_t07B4);
    int[2] _t07B6 = func nextCell404E8 (_t07B5, cellId04E1, mesh04E0);
    int _t07B7 = 1;
    int _t07B8 = prim $sub01C0<int; %2> (_t07B6, _t07B7);
    tensor[4,4] _t07B9 = prim $sub01C0<tensor[4,4]; %4> (_t07B3, _t07B8);
    real _t07BA = time04E4[0];
    vec3 _t07BB = prim *0036<$[3]> (_t07BA, dPos04E3);
    vec3 _t07BC = prim +0017<$[3]> (_t07BB, refPos04E2);
    real _t07BD = _t07BC[0];
    real _t07BE = time04E4[0];
    vec3 _t07BF = prim *0036<$[3]> (_t07BE, dPos04E3);
    vec3 _t07C0 = prim +0017<$[3]> (_t07BF, refPos04E2);
    real _t07C1 = _t07C0[1];
    real _t07C2 = time04E4[0];
    vec3 _t07C3 = prim *0036<$[3]> (_t07C2, dPos04E3);
    vec3 _t07C4 = prim +0017<$[3]> (_t07C3, refPos04E2);
    real _t07C5 = _t07C4[2];
    real _t07C6 = 0.1e1;
    vec4 _t07C7 = [_t07BD, _t07C1, _t07C5, _t07C6];
    vec4 _t07C8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07B9, _t07C7);
    real _t07C9 = _t07C8[0];
    real _t07CA = 0.1e1;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.1e1;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    vec4 _t07D8 = [_t07D4, _t07D5, _t07D6, _t07D7];
    real _t07D9 = 0.971445146547e-16;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    tensor[4,4] _t07DE = [_t07CE, _t07D3, _t07D8, _t07DD];
    real _t07DF = 0.57735026919e0;
    real _t07E0 = 0.57735026919e0;
    real _t07E1 = 0.57735026919e0;
    real _t07E2 = -0.57735026919e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = -0.333333333333e0;
    real _t07E5 = 0.666666666667e0;
    real _t07E6 = -0.333333333333e0;
    real _t07E7 = 0.333333333333e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.333333333333e0;
    real _t07EA = -0.333333333333e0;
    real _t07EB = 0.666666666667e0;
    real _t07EC = 0.333333333333e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.971445146547e-16;
    real _t07EF = 0.e0;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.1e1;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    tensor[4,4] _t07F3 = [_t07E3, _t07E8, _t07ED, _t07F2];
    real _t07F4 = -0.333333333333e0;
    real _t07F5 = 0.666666666667e0;
    real _t07F6 = -0.333333333333e0;
    real _t07F7 = 0.333333333333e0;
    vec4 _t07F8 = [_t07F4, _t07F5, _t07F6, _t07F7];
    real _t07F9 = -0.57735026919e0;
    real _t07FA = -0.57735026919e0;
    real _t07FB = -0.57735026919e0;
    real _t07FC = 0.57735026919e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.333333333333e0;
    real _t07FF = -0.333333333333e0;
    real _t0800 = 0.666666666667e0;
    real _t0801 = 0.333333333333e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.971445146547e-16;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    tensor[4,4] _t0808 = [_t07F8, _t07FD, _t0802, _t0807];
    real _t0809 = -0.333333333333e0;
    real _t080A = 0.666666666667e0;
    real _t080B = -0.333333333333e0;
    real _t080C = 0.333333333333e0;
    vec4 _t080D = [_t0809, _t080A, _t080B, _t080C];
    real _t080E = -0.333333333333e0;
    real _t080F = -0.333333333333e0;
    real _t0810 = 0.666666666667e0;
    real _t0811 = 0.333333333333e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.57735026919e0;
    real _t0814 = 0.57735026919e0;
    real _t0815 = 0.57735026919e0;
    real _t0816 = -0.57735026919e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.971445146547e-16;
    real _t0819 = 0.e0;
    real _t081A = 0.e0;
    real _t081B = 0.1e1;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    tensor[4,4] _t081D = [_t080D, _t0812, _t0817, _t081C];
    tensor[4,4][4] _t081E = {_t07DE, _t07F3, _t0808, _t081D};
    real _t081F = 0.57735026919e0;
    real _t0820 = -0.1e1;
    real _t0821 = -0.1e1;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = 0.57735026919e0;
    real _t0825 = 0.1e1;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.57735026919e0;
    real _t082A = 0.e0;
    real _t082B = 0.1e1;
    real _t082C = 0.e0;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    tensor[4,4] _t0833 = [_t0823, _t0828, _t082D, _t0832];
    real _t0834 = 0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = 0.e0;
    real _t083A = 0.1e1;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = 0.e0;
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    tensor[4,4] _t0848 = [_t0838, _t083D, _t0842, _t0847];
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    real _t085B = 0.1e1;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    tensor[4,4] _t085D = [_t084D, _t0852, _t0857, _t085C];
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    vec4 _t0862 = [_t085E, _t085F, _t0860, _t0861];
    real _t0863 = 0.e0;
    real _t0864 = 0.e0;
    real _t0865 = 0.1e1;
    real _t0866 = 0.e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.1e1;
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.e0;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.1e1;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    tensor[4,4] _t0872 = [_t0862, _t0867, _t086C, _t0871];
    tensor[4,4][4] _t0873 = {_t0833, _t0848, _t085D, _t0872};
    real _t0874 = -0.1e1;
    real _t0875 = -0.57735026919e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.1e1;
    real _t087A = -0.57735026919e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = -0.57735026919e0;
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    vec4 _t0887 = [_t0883, _t0884, _t0885, _t0886];
    tensor[4,4] _t0888 = [_t0878, _t087D, _t0882, _t0887];
    real _t0889 = 0.e0;
    real _t088A = -0.1e1;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    vec4 _t089C = [_t0898, _t0899, _t089A, _t089B];
    tensor[4,4] _t089D = [_t088D, _t0892, _t0897, _t089C];
    real _t089E = 0.1e1;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.e0;
    real _t08A4 = 0.1e1;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    real _t08AD = 0.e0;
    real _t08AE = 0.e0;
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    vec4 _t08B1 = [_t08AD, _t08AE, _t08AF, _t08B0];
    tensor[4,4] _t08B2 = [_t08A2, _t08A7, _t08AC, _t08B1];
    real _t08B3 = 0.1e1;
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    vec4 _t08B7 = [_t08B3, _t08B4, _t08B5, _t08B6];
    real _t08B8 = 0.e0;
    real _t08B9 = 0.e0;
    real _t08BA = 0.1e1;
    real _t08BB = 0.e0;
    vec4 _t08BC = [_t08B8, _t08B9, _t08BA, _t08BB];
    real _t08BD = 0.e0;
    real _t08BE = -0.1e1;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    tensor[4,4] _t08C7 = [_t08B7, _t08BC, _t08C1, _t08C6];
    tensor[4,4][4] _t08C8 = {_t0888, _t089D, _t08B2, _t08C7};
    real _t08C9 = -0.1e1;
    real _t08CA = -0.1e1;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.1e1;
    real _t08CF = 0.e0;
    real _t08D0 = 0.57735026919e0;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.1e1;
    real _t08D5 = 0.57735026919e0;
    real _t08D6 = 0.e0;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.1e1;
    vec4 _t08DC = [_t08D8, _t08D9, _t08DA, _t08DB];
    tensor[4,4] _t08DD = [_t08CD, _t08D2, _t08D7, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.1e1;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.1e1;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    vec4 _t08F1 = [_t08ED, _t08EE, _t08EF, _t08F0];
    tensor[4,4] _t08F2 = [_t08E2, _t08E7, _t08EC, _t08F1];
    real _t08F3 = 0.1e1;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.e0;
    real _t08FA = -0.1e1;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    vec4 _t0906 = [_t0902, _t0903, _t0904, _t0905];
    tensor[4,4] _t0907 = [_t08F7, _t08FC, _t0901, _t0906];
    real _t0908 = 0.1e1;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.e0;
    vec4 _t090C = [_t0908, _t0909, _t090A, _t090B];
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    vec4 _t0911 = [_t090D, _t090E, _t090F, _t0910];
    real _t0912 = 0.e0;
    real _t0913 = 0.e0;
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    vec4 _t0916 = [_t0912, _t0913, _t0914, _t0915];
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    vec4 _t091B = [_t0917, _t0918, _t0919, _t091A];
    tensor[4,4] _t091C = [_t090C, _t0911, _t0916, _t091B];
    tensor[4,4][4] _t091D = {_t08DD, _t08F2, _t0907, _t091C};
    tensor[4,4][4][4] _t091E = {_t081E, _t0873, _t08C8, _t091D};
    real _t091F = time04E4[1];
    int _t0920 = prim $r2i01B7 (_t091F);
    tensor[4,4][4] _t0921 = prim $sub01C0<tensor[4,4][4]; %4> (_t091E, _t0920);
    real _t0922 = time04E4[1];
    int _t0923 = prim $r2i01B7 (_t0922);
    int[2] _t0924 = func nextCell404E8 (_t0923, cellId04E1, mesh04E0);
    int _t0925 = 1;
    int _t0926 = prim $sub01C0<int; %2> (_t0924, _t0925);
    tensor[4,4] _t0927 = prim $sub01C0<tensor[4,4]; %4> (_t0921, _t0926);
    real _t0928 = time04E4[0];
    vec3 _t0929 = prim *0036<$[3]> (_t0928, dPos04E3);
    vec3 _t092A = prim +0017<$[3]> (_t0929, refPos04E2);
    real _t092B = _t092A[0];
    real _t092C = time04E4[0];
    vec3 _t092D = prim *0036<$[3]> (_t092C, dPos04E3);
    vec3 _t092E = prim +0017<$[3]> (_t092D, refPos04E2);
    real _t092F = _t092E[1];
    real _t0930 = time04E4[0];
    vec3 _t0931 = prim *0036<$[3]> (_t0930, dPos04E3);
    vec3 _t0932 = prim +0017<$[3]> (_t0931, refPos04E2);
    real _t0933 = _t0932[2];
    real _t0934 = 0.1e1;
    vec4 _t0935 = [_t092B, _t092F, _t0933, _t0934];
    vec4 _t0936 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0927, _t0935);
    real _t0937 = _t0936[1];
    real _t0938 = 0.1e1;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.1e1;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    vec4 _t0946 = [_t0942, _t0943, _t0944, _t0945];
    real _t0947 = 0.971445146547e-16;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    vec4 _t094B = [_t0947, _t0948, _t0949, _t094A];
    tensor[4,4] _t094C = [_t093C, _t0941, _t0946, _t094B];
    real _t094D = 0.57735026919e0;
    real _t094E = 0.57735026919e0;
    real _t094F = 0.57735026919e0;
    real _t0950 = -0.57735026919e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = -0.333333333333e0;
    real _t0953 = 0.666666666667e0;
    real _t0954 = -0.333333333333e0;
    real _t0955 = 0.333333333333e0;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    real _t0957 = -0.333333333333e0;
    real _t0958 = -0.333333333333e0;
    real _t0959 = 0.666666666667e0;
    real _t095A = 0.333333333333e0;
    vec4 _t095B = [_t0957, _t0958, _t0959, _t095A];
    real _t095C = 0.971445146547e-16;
    real _t095D = 0.e0;
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    vec4 _t0960 = [_t095C, _t095D, _t095E, _t095F];
    tensor[4,4] _t0961 = [_t0951, _t0956, _t095B, _t0960];
    real _t0962 = -0.333333333333e0;
    real _t0963 = 0.666666666667e0;
    real _t0964 = -0.333333333333e0;
    real _t0965 = 0.333333333333e0;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    real _t0967 = -0.57735026919e0;
    real _t0968 = -0.57735026919e0;
    real _t0969 = -0.57735026919e0;
    real _t096A = 0.57735026919e0;
    vec4 _t096B = [_t0967, _t0968, _t0969, _t096A];
    real _t096C = -0.333333333333e0;
    real _t096D = -0.333333333333e0;
    real _t096E = 0.666666666667e0;
    real _t096F = 0.333333333333e0;
    vec4 _t0970 = [_t096C, _t096D, _t096E, _t096F];
    real _t0971 = 0.971445146547e-16;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.1e1;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    tensor[4,4] _t0976 = [_t0966, _t096B, _t0970, _t0975];
    real _t0977 = -0.333333333333e0;
    real _t0978 = 0.666666666667e0;
    real _t0979 = -0.333333333333e0;
    real _t097A = 0.333333333333e0;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    real _t097C = -0.333333333333e0;
    real _t097D = -0.333333333333e0;
    real _t097E = 0.666666666667e0;
    real _t097F = 0.333333333333e0;
    vec4 _t0980 = [_t097C, _t097D, _t097E, _t097F];
    real _t0981 = 0.57735026919e0;
    real _t0982 = 0.57735026919e0;
    real _t0983 = 0.57735026919e0;
    real _t0984 = -0.57735026919e0;
    vec4 _t0985 = [_t0981, _t0982, _t0983, _t0984];
    real _t0986 = 0.971445146547e-16;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.1e1;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    tensor[4,4] _t098B = [_t097B, _t0980, _t0985, _t098A];
    tensor[4,4][4] _t098C = {_t094C, _t0961, _t0976, _t098B};
    real _t098D = 0.57735026919e0;
    real _t098E = -0.1e1;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.57735026919e0;
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.57735026919e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    vec4 _t09A0 = [_t099C, _t099D, _t099E, _t099F];
    tensor[4,4] _t09A1 = [_t0991, _t0996, _t099B, _t09A0];
    real _t09A2 = 0.1e1;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.e0;
    real _t09A8 = 0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    real _t09B1 = 0.e0;
    real _t09B2 = 0.e0;
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    vec4 _t09B5 = [_t09B1, _t09B2, _t09B3, _t09B4];
    tensor[4,4] _t09B6 = [_t09A6, _t09AB, _t09B0, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    real _t09BC = -0.1e1;
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    vec4 _t09C0 = [_t09BC, _t09BD, _t09BE, _t09BF];
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    vec4 _t09C5 = [_t09C1, _t09C2, _t09C3, _t09C4];
    real _t09C6 = 0.e0;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    real _t09C9 = 0.1e1;
    vec4 _t09CA = [_t09C6, _t09C7, _t09C8, _t09C9];
    tensor[4,4] _t09CB = [_t09BB, _t09C0, _t09C5, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    real _t09D1 = 0.e0;
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    vec4 _t09D5 = [_t09D1, _t09D2, _t09D3, _t09D4];
    real _t09D6 = 0.1e1;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    vec4 _t09DA = [_t09D6, _t09D7, _t09D8, _t09D9];
    real _t09DB = 0.e0;
    real _t09DC = 0.e0;
    real _t09DD = 0.e0;
    real _t09DE = 0.1e1;
    vec4 _t09DF = [_t09DB, _t09DC, _t09DD, _t09DE];
    tensor[4,4] _t09E0 = [_t09D0, _t09D5, _t09DA, _t09DF];
    tensor[4,4][4] _t09E1 = {_t09A1, _t09B6, _t09CB, _t09E0};
    real _t09E2 = -0.1e1;
    real _t09E3 = -0.57735026919e0;
    real _t09E4 = -0.1e1;
    real _t09E5 = 0.1e1;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.1e1;
    real _t09E8 = -0.57735026919e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.57735026919e0;
    real _t09EE = 0.1e1;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.e0;
    real _t09F2 = 0.e0;
    real _t09F3 = 0.e0;
    real _t09F4 = 0.1e1;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    tensor[4,4] _t09F6 = [_t09E6, _t09EB, _t09F0, _t09F5];
    real _t09F7 = 0.e0;
    real _t09F8 = -0.1e1;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.1e1;
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    real _t0A06 = 0.e0;
    real _t0A07 = 0.e0;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.1e1;
    vec4 _t0A0A = [_t0A06, _t0A07, _t0A08, _t0A09];
    tensor[4,4] _t0A0B = [_t09FB, _t0A00, _t0A05, _t0A0A];
    real _t0A0C = 0.1e1;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    vec4 _t0A1F = [_t0A1B, _t0A1C, _t0A1D, _t0A1E];
    tensor[4,4] _t0A20 = [_t0A10, _t0A15, _t0A1A, _t0A1F];
    real _t0A21 = 0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = -0.1e1;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    real _t0A30 = 0.e0;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    vec4 _t0A34 = [_t0A30, _t0A31, _t0A32, _t0A33];
    tensor[4,4] _t0A35 = [_t0A25, _t0A2A, _t0A2F, _t0A34];
    tensor[4,4][4] _t0A36 = {_t09F6, _t0A0B, _t0A20, _t0A35};
    real _t0A37 = -0.1e1;
    real _t0A38 = -0.1e1;
    real _t0A39 = 0.57735026919e0;
    real _t0A3A = 0.1e1;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.57735026919e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.1e1;
    real _t0A43 = 0.57735026919e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.e0;
    real _t0A49 = 0.1e1;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    tensor[4,4] _t0A4B = [_t0A3B, _t0A40, _t0A45, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.e0;
    real _t0A5E = 0.1e1;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    tensor[4,4] _t0A60 = [_t0A50, _t0A55, _t0A5A, _t0A5F];
    real _t0A61 = 0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = -0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.1e1;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.1e1;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    tensor[4,4] _t0A75 = [_t0A65, _t0A6A, _t0A6F, _t0A74];
    real _t0A76 = 0.1e1;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.1e1;
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    real _t0A85 = 0.e0;
    real _t0A86 = 0.e0;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.1e1;
    vec4 _t0A89 = [_t0A85, _t0A86, _t0A87, _t0A88];
    tensor[4,4] _t0A8A = [_t0A7A, _t0A7F, _t0A84, _t0A89];
    tensor[4,4][4] _t0A8B = {_t0A4B, _t0A60, _t0A75, _t0A8A};
    tensor[4,4][4][4] _t0A8C = {_t098C, _t09E1, _t0A36, _t0A8B};
    real _t0A8D = time04E4[1];
    int _t0A8E = prim $r2i01B7 (_t0A8D);
    tensor[4,4][4] _t0A8F = prim $sub01C0<tensor[4,4][4]; %4> (_t0A8C, _t0A8E);
    real _t0A90 = time04E4[1];
    int _t0A91 = prim $r2i01B7 (_t0A90);
    int[2] _t0A92 = func nextCell404E8 (_t0A91, cellId04E1, mesh04E0);
    int _t0A93 = 1;
    int _t0A94 = prim $sub01C0<int; %2> (_t0A92, _t0A93);
    tensor[4,4] _t0A95 = prim $sub01C0<tensor[4,4]; %4> (_t0A8F, _t0A94);
    real _t0A96 = time04E4[0];
    vec3 _t0A97 = prim *0036<$[3]> (_t0A96, dPos04E3);
    vec3 _t0A98 = prim +0017<$[3]> (_t0A97, refPos04E2);
    real _t0A99 = _t0A98[0];
    real _t0A9A = time04E4[0];
    vec3 _t0A9B = prim *0036<$[3]> (_t0A9A, dPos04E3);
    vec3 _t0A9C = prim +0017<$[3]> (_t0A9B, refPos04E2);
    real _t0A9D = _t0A9C[1];
    real _t0A9E = time04E4[0];
    vec3 _t0A9F = prim *0036<$[3]> (_t0A9E, dPos04E3);
    vec3 _t0AA0 = prim +0017<$[3]> (_t0A9F, refPos04E2);
    real _t0AA1 = _t0AA0[2];
    real _t0AA2 = 0.1e1;
    vec4 _t0AA3 = [_t0A99, _t0A9D, _t0AA1, _t0AA2];
    vec4 _t0AA4 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A95, _t0AA3);
    real _t0AA5 = _t0AA4[2];
    vec3 _t0AA6 = [_t07C9, _t0937, _t0AA5];
    real _t0AA7 = time04E4[1];
    int _t0AA8 = prim $r2i01B7 (_t0AA7);
    int[2] _t0AA9 = func nextCell404E8 (_t0AA8, cellId04E1, mesh04E0);
    int _t0AAA = 1;
    int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
    Femdata: MeshPos _t0AAC = extractFemItemN((mesh04E0, _t065B, _t0AA6, _t0AAB),RefBuild(Mesh),);
    return _t0AAC;
  } else {
    real _t0AAD = time04E4[0];
    vec3 _t0AAE = prim *0036<$[3]> (_t0AAD, dPos04E3);
    vec3 _t0AAF = prim +0017<$[3]> (_t0AAE, refPos04E2);
    Femdata: MeshPos _t0AB0 = extractFemItemN((mesh04E0, _t0AAF),InvalidBuildBoundary(MeshPos),);
    return _t0AB0;
  }
}
function int[2]#8 nextCell404E8 (int faceIdx0AB1, int cell0AB2, Femdata: Mesh mesh0AB3)
{
  int _t0AB4 = -1;
  bool _t0AB5 = prim ==0082 (faceIdx0AB1, _t0AB4);
  if _t0AB5 {
    int _t0AB6 = -1;
    int _t0AB7 = -1;
    int[2] _t0AB8 = {_t0AB6, _t0AB7};
    return _t0AB8;
  } else {
    int _t0AB9 = 8;
    int _t0ABA = prim *0033 (cell0AB2, _t0AB9);
    int _t0ABB = 2;
    int _t0ABC = prim *0033 (faceIdx0AB1, _t0ABB);
    int _t0ABD = prim +0015 (_t0ABA, _t0ABC);
    int[2] _t0ABE = extractFemItemN((mesh0AB3, _t0ABD),CellFaceCell(Mesh),);
    return _t0ABE;
  }
}
function vec2#0 _enter0ABF (vec3 refPos0AC0, vec3 dPos0AC1)
{
  real time0AC2 = +inf;
  int face0AC3 = -1;
  real faceTime0AC4 = -inf;
  string _t0AC5 = "\ntest :";
  real _t0AC6 = 0.57735026919e0;
  real _t0AC7 = 0.57735026919e0;
  real _t0AC8 = 0.57735026919e0;
  real _t0AC9 = 0.57735026919e0;
  vec3 _t0ACA = [_t0AC7, _t0AC8, _t0AC9];
  real _t0ACB = prim •00CE<$[3]; $[3]; $[]> (_t0ACA, refPos0AC0);
  real _t0ACC = prim -0026<$[]> (_t0AC6, _t0ACB);
  real _t0ACD = 0.57735026919e0;
  real _t0ACE = 0.57735026919e0;
  real _t0ACF = 0.57735026919e0;
  vec3 _t0AD0 = [_t0ACD, _t0ACE, _t0ACF];
  real _t0AD1 = prim •00CE<$[3]; $[3]; $[]> (_t0AD0, dPos0AC1);
  real _t0AD2 = prim /0055 (_t0ACC, _t0AD1);
  string _t0AD3 = " test2: ";
  real _t0AD4 = 0.57735026919e0;
  real _t0AD5 = 0.57735026919e0;
  real _t0AD6 = 0.57735026919e0;
  vec3 _t0AD7 = [_t0AD4, _t0AD5, _t0AD6];
  real _t0AD8 = prim •00CE<$[3]; $[3]; $[]> (_t0AD7, dPos0AC1);
  string _t0AD9 = " insideTest: ";
  real _t0ADA = 0.1e1;
  real _t0ADB = 0.1e-7;
  real _t0ADC = prim +0017<$[]> (_t0ADA, _t0ADB);
  real _t0ADD = 0.1e1;
  real _t0ADE = 0.1e1;
  real _t0ADF = 0.1e1;
  vec3 _t0AE0 = [_t0ADD, _t0ADE, _t0ADF];
  real _t0AE1 = 0.57735026919e0;
  real _t0AE2 = 0.57735026919e0;
  real _t0AE3 = 0.57735026919e0;
  real _t0AE4 = 0.57735026919e0;
  vec3 _t0AE5 = [_t0AE2, _t0AE3, _t0AE4];
  real _t0AE6 = prim •00CE<$[3]; $[3]; $[]> (_t0AE5, refPos0AC0);
  real _t0AE7 = prim -0026<$[]> (_t0AE1, _t0AE6);
  real _t0AE8 = 0.57735026919e0;
  real _t0AE9 = 0.57735026919e0;
  real _t0AEA = 0.57735026919e0;
  vec3 _t0AEB = [_t0AE8, _t0AE9, _t0AEA];
  real _t0AEC = prim •00CE<$[3]; $[3]; $[]> (_t0AEB, dPos0AC1);
  real _t0AED = prim /0055 (_t0AE7, _t0AEC);
  vec3 _t0AEE = prim *0038<$[3]> (dPos0AC1, _t0AED);
  vec3 _t0AEF = prim +0017<$[3]> (refPos0AC0, _t0AEE);
  real _t0AF0 = prim •00CE<$[3]; $[3]; $[]> (_t0AE0, _t0AEF);
  bool _t0AF1 = prim >0080 (_t0ADC, _t0AF0);
  real _t0AF2 = 0.1e-7;
  real _t0AF3 = 0.1e-7;
  real _t0AF4 = 0.1e-7;
  vec3 _t0AF5 = [_t0AF2, _t0AF3, _t0AF4];
  real _t0AF6 = 0.57735026919e0;
  real _t0AF7 = 0.57735026919e0;
  real _t0AF8 = 0.57735026919e0;
  real _t0AF9 = 0.57735026919e0;
  vec3 _t0AFA = [_t0AF7, _t0AF8, _t0AF9];
  real _t0AFB = prim •00CE<$[3]; $[3]; $[]> (_t0AFA, refPos0AC0);
  real _t0AFC = prim -0026<$[]> (_t0AF6, _t0AFB);
  real _t0AFD = 0.57735026919e0;
  real _t0AFE = 0.57735026919e0;
  real _t0AFF = 0.57735026919e0;
  vec3 _t0B00 = [_t0AFD, _t0AFE, _t0AFF];
  real _t0B01 = prim •00CE<$[3]; $[3]; $[]> (_t0B00, dPos0AC1);
  real _t0B02 = prim /0055 (_t0AFC, _t0B01);
  vec3 _t0B03 = prim *0038<$[3]> (dPos0AC1, _t0B02);
  vec3 _t0B04 = prim +0017<$[3]> (refPos0AC0, _t0B03);
  vec3 _t0B05 = prim +0017<$[3]> (_t0AF5, _t0B04);
  real _t0B06 = _t0B05[0];
  real _t0B07 = -0.e0;
  bool _t0B08 = prim >0080 (_t0B06, _t0B07);
  real _t0B09 = 0.1e-7;
  real _t0B0A = 0.1e-7;
  real _t0B0B = 0.1e-7;
  vec3 _t0B0C = [_t0B09, _t0B0A, _t0B0B];
  real _t0B0D = 0.57735026919e0;
  real _t0B0E = 0.57735026919e0;
  real _t0B0F = 0.57735026919e0;
  real _t0B10 = 0.57735026919e0;
  vec3 _t0B11 = [_t0B0E, _t0B0F, _t0B10];
  real _t0B12 = prim •00CE<$[3]; $[3]; $[]> (_t0B11, refPos0AC0);
  real _t0B13 = prim -0026<$[]> (_t0B0D, _t0B12);
  real _t0B14 = 0.57735026919e0;
  real _t0B15 = 0.57735026919e0;
  real _t0B16 = 0.57735026919e0;
  vec3 _t0B17 = [_t0B14, _t0B15, _t0B16];
  real _t0B18 = prim •00CE<$[3]; $[3]; $[]> (_t0B17, dPos0AC1);
  real _t0B19 = prim /0055 (_t0B13, _t0B18);
  vec3 _t0B1A = prim *0038<$[3]> (dPos0AC1, _t0B19);
  vec3 _t0B1B = prim +0017<$[3]> (refPos0AC0, _t0B1A);
  vec3 _t0B1C = prim +0017<$[3]> (_t0B0C, _t0B1B);
  real _t0B1D = _t0B1C[1];
  real _t0B1E = -0.e0;
  bool _t0B1F = prim >0080 (_t0B1D, _t0B1E);
  real _t0B20 = 0.1e-7;
  real _t0B21 = 0.1e-7;
  real _t0B22 = 0.1e-7;
  vec3 _t0B23 = [_t0B20, _t0B21, _t0B22];
  real _t0B24 = 0.57735026919e0;
  real _t0B25 = 0.57735026919e0;
  real _t0B26 = 0.57735026919e0;
  real _t0B27 = 0.57735026919e0;
  vec3 _t0B28 = [_t0B25, _t0B26, _t0B27];
  real _t0B29 = prim •00CE<$[3]; $[3]; $[]> (_t0B28, refPos0AC0);
  real _t0B2A = prim -0026<$[]> (_t0B24, _t0B29);
  real _t0B2B = 0.57735026919e0;
  real _t0B2C = 0.57735026919e0;
  real _t0B2D = 0.57735026919e0;
  vec3 _t0B2E = [_t0B2B, _t0B2C, _t0B2D];
  real _t0B2F = prim •00CE<$[3]; $[3]; $[]> (_t0B2E, dPos0AC1);
  real _t0B30 = prim /0055 (_t0B2A, _t0B2F);
  vec3 _t0B31 = prim *0038<$[3]> (dPos0AC1, _t0B30);
  vec3 _t0B32 = prim +0017<$[3]> (refPos0AC0, _t0B31);
  vec3 _t0B33 = prim +0017<$[3]> (_t0B23, _t0B32);
  real _t0B34 = _t0B33[2];
  real _t0B35 = -0.e0;
  bool _t0B36 = prim >0080 (_t0B34, _t0B35);
  bool _t0B37 = prim $and01C4 (_t0B1F, _t0B36);
  bool _t0B38 = prim $and01C4 (_t0B08, _t0B37);
  bool _t0B39 = prim $and01C4 (_t0AF1, _t0B38);
  string _t0B3A = " dist: ";
  real _t0B3B = 0.57735026919e0;
  real _t0B3C = 0.57735026919e0;
  real _t0B3D = 0.57735026919e0;
  real _t0B3E = 0.57735026919e0;
  vec3 _t0B3F = [_t0B3C, _t0B3D, _t0B3E];
  real _t0B40 = prim •00CE<$[3]; $[3]; $[]> (_t0B3F, refPos0AC0);
  real _t0B41 = prim -0026<$[]> (_t0B3B, _t0B40);
  real _t0B42 = prim |()|00B5<$[]> (_t0B41);
  string _t0B43 = "signed dist: ";
  real _t0B44 = 0.57735026919e0;
  real _t0B45 = 0.57735026919e0;
  real _t0B46 = 0.57735026919e0;
  real _t0B47 = 0.57735026919e0;
  vec3 _t0B48 = [_t0B45, _t0B46, _t0B47];
  real _t0B49 = prim •00CE<$[3]; $[3]; $[]> (_t0B48, refPos0AC0);
  real _t0B4A = prim -0026<$[]> (_t0B44, _t0B49);
  string _t0B4B = " face: ";
  int _t0B4C = 0;
  string _t0B4D = " place: ";
  real _t0B4E = 0.57735026919e0;
  real _t0B4F = 0.57735026919e0;
  real _t0B50 = 0.57735026919e0;
  real _t0B51 = 0.57735026919e0;
  vec3 _t0B52 = [_t0B4F, _t0B50, _t0B51];
  real _t0B53 = prim •00CE<$[3]; $[3]; $[]> (_t0B52, refPos0AC0);
  real _t0B54 = prim -0026<$[]> (_t0B4E, _t0B53);
  real _t0B55 = 0.57735026919e0;
  real _t0B56 = 0.57735026919e0;
  real _t0B57 = 0.57735026919e0;
  vec3 _t0B58 = [_t0B55, _t0B56, _t0B57];
  real _t0B59 = prim •00CE<$[3]; $[3]; $[]> (_t0B58, dPos0AC1);
  real _t0B5A = prim /0055 (_t0B54, _t0B59);
  vec3 _t0B5B = prim *0038<$[3]> (dPos0AC1, _t0B5A);
  vec3 _t0B5C = prim +0017<$[3]> (refPos0AC0, _t0B5B);
  string _t0B5D = " error: ";
  real _t0B5E = 0.57735026919e0;
  real _t0B5F = 0.57735026919e0;
  real _t0B60 = 0.57735026919e0;
  real _t0B61 = 0.57735026919e0;
  vec3 _t0B62 = [_t0B5F, _t0B60, _t0B61];
  real _t0B63 = 0.57735026919e0;
  real _t0B64 = 0.57735026919e0;
  real _t0B65 = 0.57735026919e0;
  real _t0B66 = 0.57735026919e0;
  vec3 _t0B67 = [_t0B64, _t0B65, _t0B66];
  real _t0B68 = prim •00CE<$[3]; $[3]; $[]> (_t0B67, refPos0AC0);
  real _t0B69 = prim -0026<$[]> (_t0B63, _t0B68);
  real _t0B6A = 0.57735026919e0;
  real _t0B6B = 0.57735026919e0;
  real _t0B6C = 0.57735026919e0;
  vec3 _t0B6D = [_t0B6A, _t0B6B, _t0B6C];
  real _t0B6E = prim •00CE<$[3]; $[3]; $[]> (_t0B6D, dPos0AC1);
  real _t0B6F = prim /0055 (_t0B69, _t0B6E);
  vec3 _t0B70 = prim *0038<$[3]> (dPos0AC1, _t0B6F);
  vec3 _t0B71 = prim +0017<$[3]> (refPos0AC0, _t0B70);
  real _t0B72 = prim •00CE<$[3]; $[3]; $[]> (_t0B62, _t0B71);
  real _t0B73 = prim -0026<$[]> (_t0B5E, _t0B72);
  real _t0B74 = prim |()|00B5<$[]> (_t0B73);
  string _t0B75 = " offset :";
  string _t0B76 = " dp: ";
  string _t0B77 = " otherPossibleTime: ";
  string _t0B78 = "\n";
  print (_t0AC5, _t0AD2, _t0AD3, _t0AD8, _t0AD9, _t0B39, _t0B3A, _t0B42, _t0B43, _t0B4A, _t0B4B, _t0B4C, _t0B4D, _t0B5C, _t0B5D, _t0B74, _t0B75, refPos0AC0, _t0B76, dPos0AC1, _t0B77, faceTime0AC4, _t0B78);
  real _t0B79 = 0.57735026919e0;
  real _t0B7A = 0.57735026919e0;
  real _t0B7B = 0.57735026919e0;
  real _t0B7C = 0.57735026919e0;
  vec3 _t0B7D = [_t0B7A, _t0B7B, _t0B7C];
  real _t0B7E = prim •00CE<$[3]; $[3]; $[]> (_t0B7D, refPos0AC0);
  real _t0B7F = prim -0026<$[]> (_t0B79, _t0B7E);
  real _t0B80 = 0.57735026919e0;
  real _t0B81 = 0.57735026919e0;
  real _t0B82 = 0.57735026919e0;
  vec3 _t0B83 = [_t0B80, _t0B81, _t0B82];
  real _t0B84 = prim •00CE<$[3]; $[3]; $[]> (_t0B83, dPos0AC1);
  real _t0B85 = prim /0055 (_t0B7F, _t0B84);
  real _t0B86 = -0.1e-7;
  bool _t0B87 = prim >=007E (_t0B85, _t0B86);
  real _t0B88 = 0.57735026919e0;
  real _t0B89 = 0.57735026919e0;
  real _t0B8A = 0.57735026919e0;
  real _t0B8B = 0.57735026919e0;
  vec3 _t0B8C = [_t0B89, _t0B8A, _t0B8B];
  real _t0B8D = prim •00CE<$[3]; $[3]; $[]> (_t0B8C, refPos0AC0);
  real _t0B8E = prim -0026<$[]> (_t0B88, _t0B8D);
  real _t0B8F = 0.57735026919e0;
  real _t0B90 = 0.57735026919e0;
  real _t0B91 = 0.57735026919e0;
  vec3 _t0B92 = [_t0B8F, _t0B90, _t0B91];
  real _t0B93 = prim •00CE<$[3]; $[3]; $[]> (_t0B92, dPos0AC1);
  real _t0B94 = prim /0055 (_t0B8E, _t0B93);
  bool _t0B95 = prim >0080 (time0AC2, _t0B94);
  real _t0B96 = 0.57735026919e0;
  real _t0B97 = 0.57735026919e0;
  real _t0B98 = 0.57735026919e0;
  vec3 _t0B99 = [_t0B96, _t0B97, _t0B98];
  real _t0B9A = prim •00CE<$[3]; $[3]; $[]> (_t0B99, dPos0AC1);
  real _t0B9B = prim |()|00B5<$[]> (_t0B9A);
  real _t0B9C = 0.1e-7;
  bool _t0B9D = prim >=007E (_t0B9B, _t0B9C);
  bool _t0B9E = prim $and01C4 (_t0B95, _t0B9D);
  bool _t0B9F = prim $and01C4 (_t0B87, _t0B9E);
  if _t0B9F {
    real _t0BA0 = 0.1e1;
    real _t0BA1 = 0.1e-7;
    real _t0BA2 = prim +0017<$[]> (_t0BA0, _t0BA1);
    real _t0BA3 = 0.1e1;
    real _t0BA4 = 0.1e1;
    real _t0BA5 = 0.1e1;
    vec3 _t0BA6 = [_t0BA3, _t0BA4, _t0BA5];
    real _t0BA7 = 0.57735026919e0;
    real _t0BA8 = 0.57735026919e0;
    real _t0BA9 = 0.57735026919e0;
    real _t0BAA = 0.57735026919e0;
    vec3 _t0BAB = [_t0BA8, _t0BA9, _t0BAA];
    real _t0BAC = prim •00CE<$[3]; $[3]; $[]> (_t0BAB, refPos0AC0);
    real _t0BAD = prim -0026<$[]> (_t0BA7, _t0BAC);
    real _t0BAE = 0.57735026919e0;
    real _t0BAF = 0.57735026919e0;
    real _t0BB0 = 0.57735026919e0;
    vec3 _t0BB1 = [_t0BAE, _t0BAF, _t0BB0];
    real _t0BB2 = prim •00CE<$[3]; $[3]; $[]> (_t0BB1, dPos0AC1);
    real _t0BB3 = prim /0055 (_t0BAD, _t0BB2);
    vec3 _t0BB4 = prim *0038<$[3]> (dPos0AC1, _t0BB3);
    vec3 _t0BB5 = prim +0017<$[3]> (refPos0AC0, _t0BB4);
    real _t0BB6 = prim •00CE<$[3]; $[3]; $[]> (_t0BA6, _t0BB5);
    bool _t0BB7 = prim >0080 (_t0BA2, _t0BB6);
    real _t0BB8 = 0.1e-7;
    real _t0BB9 = 0.1e-7;
    real _t0BBA = 0.1e-7;
    vec3 _t0BBB = [_t0BB8, _t0BB9, _t0BBA];
    real _t0BBC = 0.57735026919e0;
    real _t0BBD = 0.57735026919e0;
    real _t0BBE = 0.57735026919e0;
    real _t0BBF = 0.57735026919e0;
    vec3 _t0BC0 = [_t0BBD, _t0BBE, _t0BBF];
    real _t0BC1 = prim •00CE<$[3]; $[3]; $[]> (_t0BC0, refPos0AC0);
    real _t0BC2 = prim -0026<$[]> (_t0BBC, _t0BC1);
    real _t0BC3 = 0.57735026919e0;
    real _t0BC4 = 0.57735026919e0;
    real _t0BC5 = 0.57735026919e0;
    vec3 _t0BC6 = [_t0BC3, _t0BC4, _t0BC5];
    real _t0BC7 = prim •00CE<$[3]; $[3]; $[]> (_t0BC6, dPos0AC1);
    real _t0BC8 = prim /0055 (_t0BC2, _t0BC7);
    vec3 _t0BC9 = prim *0038<$[3]> (dPos0AC1, _t0BC8);
    vec3 _t0BCA = prim +0017<$[3]> (refPos0AC0, _t0BC9);
    vec3 _t0BCB = prim +0017<$[3]> (_t0BBB, _t0BCA);
    real _t0BCC = _t0BCB[0];
    real _t0BCD = -0.e0;
    bool _t0BCE = prim >0080 (_t0BCC, _t0BCD);
    real _t0BCF = 0.1e-7;
    real _t0BD0 = 0.1e-7;
    real _t0BD1 = 0.1e-7;
    vec3 _t0BD2 = [_t0BCF, _t0BD0, _t0BD1];
    real _t0BD3 = 0.57735026919e0;
    real _t0BD4 = 0.57735026919e0;
    real _t0BD5 = 0.57735026919e0;
    real _t0BD6 = 0.57735026919e0;
    vec3 _t0BD7 = [_t0BD4, _t0BD5, _t0BD6];
    real _t0BD8 = prim •00CE<$[3]; $[3]; $[]> (_t0BD7, refPos0AC0);
    real _t0BD9 = prim -0026<$[]> (_t0BD3, _t0BD8);
    real _t0BDA = 0.57735026919e0;
    real _t0BDB = 0.57735026919e0;
    real _t0BDC = 0.57735026919e0;
    vec3 _t0BDD = [_t0BDA, _t0BDB, _t0BDC];
    real _t0BDE = prim •00CE<$[3]; $[3]; $[]> (_t0BDD, dPos0AC1);
    real _t0BDF = prim /0055 (_t0BD9, _t0BDE);
    vec3 _t0BE0 = prim *0038<$[3]> (dPos0AC1, _t0BDF);
    vec3 _t0BE1 = prim +0017<$[3]> (refPos0AC0, _t0BE0);
    vec3 _t0BE2 = prim +0017<$[3]> (_t0BD2, _t0BE1);
    real _t0BE3 = _t0BE2[1];
    real _t0BE4 = -0.e0;
    bool _t0BE5 = prim >0080 (_t0BE3, _t0BE4);
    real _t0BE6 = 0.1e-7;
    real _t0BE7 = 0.1e-7;
    real _t0BE8 = 0.1e-7;
    vec3 _t0BE9 = [_t0BE6, _t0BE7, _t0BE8];
    real _t0BEA = 0.57735026919e0;
    real _t0BEB = 0.57735026919e0;
    real _t0BEC = 0.57735026919e0;
    real _t0BED = 0.57735026919e0;
    vec3 _t0BEE = [_t0BEB, _t0BEC, _t0BED];
    real _t0BEF = prim •00CE<$[3]; $[3]; $[]> (_t0BEE, refPos0AC0);
    real _t0BF0 = prim -0026<$[]> (_t0BEA, _t0BEF);
    real _t0BF1 = 0.57735026919e0;
    real _t0BF2 = 0.57735026919e0;
    real _t0BF3 = 0.57735026919e0;
    vec3 _t0BF4 = [_t0BF1, _t0BF2, _t0BF3];
    real _t0BF5 = prim •00CE<$[3]; $[3]; $[]> (_t0BF4, dPos0AC1);
    real _t0BF6 = prim /0055 (_t0BF0, _t0BF5);
    vec3 _t0BF7 = prim *0038<$[3]> (dPos0AC1, _t0BF6);
    vec3 _t0BF8 = prim +0017<$[3]> (refPos0AC0, _t0BF7);
    vec3 _t0BF9 = prim +0017<$[3]> (_t0BE9, _t0BF8);
    real _t0BFA = _t0BF9[2];
    real _t0BFB = -0.e0;
    bool _t0BFC = prim >0080 (_t0BFA, _t0BFB);
    bool _t0BFD = prim $and01C4 (_t0BE5, _t0BFC);
    bool _t0BFE = prim $and01C4 (_t0BCE, _t0BFD);
    bool _t0BFF = prim $and01C4 (_t0BB7, _t0BFE);
    if _t0BFF {
      string _t0C00 = "Saving at this face!";
      real _t0C01 = 0.57735026919e0;
      real _t0C02 = 0.57735026919e0;
      real _t0C03 = 0.57735026919e0;
      real _t0C04 = 0.57735026919e0;
      vec3 _t0C05 = [_t0C02, _t0C03, _t0C04];
      real _t0C06 = prim •00CE<$[3]; $[3]; $[]> (_t0C05, refPos0AC0);
      real _t0C07 = prim -0026<$[]> (_t0C01, _t0C06);
      real _t0C08 = 0.57735026919e0;
      real _t0C09 = 0.57735026919e0;
      real _t0C0A = 0.57735026919e0;
      vec3 _t0C0B = [_t0C08, _t0C09, _t0C0A];
      real _t0C0C = prim •00CE<$[3]; $[3]; $[]> (_t0C0B, dPos0AC1);
      real _t0C0D = prim /0055 (_t0C07, _t0C0C);
      real _t0C0E = 0.57735026919e0;
      real _t0C0F = 0.57735026919e0;
      real _t0C10 = 0.57735026919e0;
      real _t0C11 = 0.57735026919e0;
      vec3 _t0C12 = [_t0C0F, _t0C10, _t0C11];
      real _t0C13 = prim •00CE<$[3]; $[3]; $[]> (_t0C12, refPos0AC0);
      real _t0C14 = prim -0026<$[]> (_t0C0E, _t0C13);
      real _t0C15 = 0.57735026919e0;
      real _t0C16 = 0.57735026919e0;
      real _t0C17 = 0.57735026919e0;
      vec3 _t0C18 = [_t0C15, _t0C16, _t0C17];
      real _t0C19 = prim •00CE<$[3]; $[3]; $[]> (_t0C18, dPos0AC1);
      real _t0C1A = prim /0055 (_t0C14, _t0C19);
      bool _t0C1B = prim >0080 (time0AC2, _t0C1A);
      string _t0C1C = "\n";
      print (_t0C00, _t0C0D, _t0C1B, _t0C1C);
      real _t0C1D = 0.57735026919e0;
      real _t0C1E = 0.57735026919e0;
      real _t0C1F = 0.57735026919e0;
      real _t0C20 = 0.57735026919e0;
      vec3 _t0C21 = [_t0C1E, _t0C1F, _t0C20];
      real _t0C22 = prim •00CE<$[3]; $[3]; $[]> (_t0C21, refPos0AC0);
      real _t0C23 = prim -0026<$[]> (_t0C1D, _t0C22);
      real _t0C24 = 0.57735026919e0;
      real _t0C25 = 0.57735026919e0;
      real _t0C26 = 0.57735026919e0;
      vec3 _t0C27 = [_t0C24, _t0C25, _t0C26];
      real _t0C28 = prim •00CE<$[3]; $[3]; $[]> (_t0C27, dPos0AC1);
      time0AC2 = prim /0055 (_t0C23, _t0C28);
      face0AC3 = 0;
    }
  }
  string _t0C29 = "\ntest :";
  real _t0C2A = 0.e0;
  real _t0C2B = -0.1e1;
  real _t0C2C = 0.e0;
  real _t0C2D = 0.e0;
  vec3 _t0C2E = [_t0C2B, _t0C2C, _t0C2D];
  real _t0C2F = prim •00CE<$[3]; $[3]; $[]> (_t0C2E, refPos0AC0);
  real _t0C30 = prim -0026<$[]> (_t0C2A, _t0C2F);
  real _t0C31 = -0.1e1;
  real _t0C32 = 0.e0;
  real _t0C33 = 0.e0;
  vec3 _t0C34 = [_t0C31, _t0C32, _t0C33];
  real _t0C35 = prim •00CE<$[3]; $[3]; $[]> (_t0C34, dPos0AC1);
  real _t0C36 = prim /0055 (_t0C30, _t0C35);
  string _t0C37 = " test2: ";
  real _t0C38 = -0.1e1;
  real _t0C39 = 0.e0;
  real _t0C3A = 0.e0;
  vec3 _t0C3B = [_t0C38, _t0C39, _t0C3A];
  real _t0C3C = prim •00CE<$[3]; $[3]; $[]> (_t0C3B, dPos0AC1);
  string _t0C3D = " insideTest: ";
  real _t0C3E = 0.1e1;
  real _t0C3F = 0.1e-7;
  real _t0C40 = prim +0017<$[]> (_t0C3E, _t0C3F);
  real _t0C41 = 0.1e1;
  real _t0C42 = 0.1e1;
  real _t0C43 = 0.1e1;
  vec3 _t0C44 = [_t0C41, _t0C42, _t0C43];
  real _t0C45 = 0.e0;
  real _t0C46 = -0.1e1;
  real _t0C47 = 0.e0;
  real _t0C48 = 0.e0;
  vec3 _t0C49 = [_t0C46, _t0C47, _t0C48];
  real _t0C4A = prim •00CE<$[3]; $[3]; $[]> (_t0C49, refPos0AC0);
  real _t0C4B = prim -0026<$[]> (_t0C45, _t0C4A);
  real _t0C4C = -0.1e1;
  real _t0C4D = 0.e0;
  real _t0C4E = 0.e0;
  vec3 _t0C4F = [_t0C4C, _t0C4D, _t0C4E];
  real _t0C50 = prim •00CE<$[3]; $[3]; $[]> (_t0C4F, dPos0AC1);
  real _t0C51 = prim /0055 (_t0C4B, _t0C50);
  vec3 _t0C52 = prim *0038<$[3]> (dPos0AC1, _t0C51);
  vec3 _t0C53 = prim +0017<$[3]> (refPos0AC0, _t0C52);
  real _t0C54 = prim •00CE<$[3]; $[3]; $[]> (_t0C44, _t0C53);
  bool _t0C55 = prim >0080 (_t0C40, _t0C54);
  real _t0C56 = 0.1e-7;
  real _t0C57 = 0.1e-7;
  real _t0C58 = 0.1e-7;
  vec3 _t0C59 = [_t0C56, _t0C57, _t0C58];
  real _t0C5A = 0.e0;
  real _t0C5B = -0.1e1;
  real _t0C5C = 0.e0;
  real _t0C5D = 0.e0;
  vec3 _t0C5E = [_t0C5B, _t0C5C, _t0C5D];
  real _t0C5F = prim •00CE<$[3]; $[3]; $[]> (_t0C5E, refPos0AC0);
  real _t0C60 = prim -0026<$[]> (_t0C5A, _t0C5F);
  real _t0C61 = -0.1e1;
  real _t0C62 = 0.e0;
  real _t0C63 = 0.e0;
  vec3 _t0C64 = [_t0C61, _t0C62, _t0C63];
  real _t0C65 = prim •00CE<$[3]; $[3]; $[]> (_t0C64, dPos0AC1);
  real _t0C66 = prim /0055 (_t0C60, _t0C65);
  vec3 _t0C67 = prim *0038<$[3]> (dPos0AC1, _t0C66);
  vec3 _t0C68 = prim +0017<$[3]> (refPos0AC0, _t0C67);
  vec3 _t0C69 = prim +0017<$[3]> (_t0C59, _t0C68);
  real _t0C6A = _t0C69[0];
  real _t0C6B = -0.e0;
  bool _t0C6C = prim >0080 (_t0C6A, _t0C6B);
  real _t0C6D = 0.1e-7;
  real _t0C6E = 0.1e-7;
  real _t0C6F = 0.1e-7;
  vec3 _t0C70 = [_t0C6D, _t0C6E, _t0C6F];
  real _t0C71 = 0.e0;
  real _t0C72 = -0.1e1;
  real _t0C73 = 0.e0;
  real _t0C74 = 0.e0;
  vec3 _t0C75 = [_t0C72, _t0C73, _t0C74];
  real _t0C76 = prim •00CE<$[3]; $[3]; $[]> (_t0C75, refPos0AC0);
  real _t0C77 = prim -0026<$[]> (_t0C71, _t0C76);
  real _t0C78 = -0.1e1;
  real _t0C79 = 0.e0;
  real _t0C7A = 0.e0;
  vec3 _t0C7B = [_t0C78, _t0C79, _t0C7A];
  real _t0C7C = prim •00CE<$[3]; $[3]; $[]> (_t0C7B, dPos0AC1);
  real _t0C7D = prim /0055 (_t0C77, _t0C7C);
  vec3 _t0C7E = prim *0038<$[3]> (dPos0AC1, _t0C7D);
  vec3 _t0C7F = prim +0017<$[3]> (refPos0AC0, _t0C7E);
  vec3 _t0C80 = prim +0017<$[3]> (_t0C70, _t0C7F);
  real _t0C81 = _t0C80[1];
  real _t0C82 = -0.e0;
  bool _t0C83 = prim >0080 (_t0C81, _t0C82);
  real _t0C84 = 0.1e-7;
  real _t0C85 = 0.1e-7;
  real _t0C86 = 0.1e-7;
  vec3 _t0C87 = [_t0C84, _t0C85, _t0C86];
  real _t0C88 = 0.e0;
  real _t0C89 = -0.1e1;
  real _t0C8A = 0.e0;
  real _t0C8B = 0.e0;
  vec3 _t0C8C = [_t0C89, _t0C8A, _t0C8B];
  real _t0C8D = prim •00CE<$[3]; $[3]; $[]> (_t0C8C, refPos0AC0);
  real _t0C8E = prim -0026<$[]> (_t0C88, _t0C8D);
  real _t0C8F = -0.1e1;
  real _t0C90 = 0.e0;
  real _t0C91 = 0.e0;
  vec3 _t0C92 = [_t0C8F, _t0C90, _t0C91];
  real _t0C93 = prim •00CE<$[3]; $[3]; $[]> (_t0C92, dPos0AC1);
  real _t0C94 = prim /0055 (_t0C8E, _t0C93);
  vec3 _t0C95 = prim *0038<$[3]> (dPos0AC1, _t0C94);
  vec3 _t0C96 = prim +0017<$[3]> (refPos0AC0, _t0C95);
  vec3 _t0C97 = prim +0017<$[3]> (_t0C87, _t0C96);
  real _t0C98 = _t0C97[2];
  real _t0C99 = -0.e0;
  bool _t0C9A = prim >0080 (_t0C98, _t0C99);
  bool _t0C9B = prim $and01C4 (_t0C83, _t0C9A);
  bool _t0C9C = prim $and01C4 (_t0C6C, _t0C9B);
  bool _t0C9D = prim $and01C4 (_t0C55, _t0C9C);
  string _t0C9E = " dist: ";
  real _t0C9F = 0.e0;
  real _t0CA0 = -0.1e1;
  real _t0CA1 = 0.e0;
  real _t0CA2 = 0.e0;
  vec3 _t0CA3 = [_t0CA0, _t0CA1, _t0CA2];
  real _t0CA4 = prim •00CE<$[3]; $[3]; $[]> (_t0CA3, refPos0AC0);
  real _t0CA5 = prim -0026<$[]> (_t0C9F, _t0CA4);
  real _t0CA6 = prim |()|00B5<$[]> (_t0CA5);
  string _t0CA7 = "signed dist: ";
  real _t0CA8 = 0.e0;
  real _t0CA9 = -0.1e1;
  real _t0CAA = 0.e0;
  real _t0CAB = 0.e0;
  vec3 _t0CAC = [_t0CA9, _t0CAA, _t0CAB];
  real _t0CAD = prim •00CE<$[3]; $[3]; $[]> (_t0CAC, refPos0AC0);
  real _t0CAE = prim -0026<$[]> (_t0CA8, _t0CAD);
  string _t0CAF = " face: ";
  int _t0CB0 = 1;
  string _t0CB1 = " place: ";
  real _t0CB2 = 0.e0;
  real _t0CB3 = -0.1e1;
  real _t0CB4 = 0.e0;
  real _t0CB5 = 0.e0;
  vec3 _t0CB6 = [_t0CB3, _t0CB4, _t0CB5];
  real _t0CB7 = prim •00CE<$[3]; $[3]; $[]> (_t0CB6, refPos0AC0);
  real _t0CB8 = prim -0026<$[]> (_t0CB2, _t0CB7);
  real _t0CB9 = -0.1e1;
  real _t0CBA = 0.e0;
  real _t0CBB = 0.e0;
  vec3 _t0CBC = [_t0CB9, _t0CBA, _t0CBB];
  real _t0CBD = prim •00CE<$[3]; $[3]; $[]> (_t0CBC, dPos0AC1);
  real _t0CBE = prim /0055 (_t0CB8, _t0CBD);
  vec3 _t0CBF = prim *0038<$[3]> (dPos0AC1, _t0CBE);
  vec3 _t0CC0 = prim +0017<$[3]> (refPos0AC0, _t0CBF);
  string _t0CC1 = " error: ";
  real _t0CC2 = 0.e0;
  real _t0CC3 = -0.1e1;
  real _t0CC4 = 0.e0;
  real _t0CC5 = 0.e0;
  vec3 _t0CC6 = [_t0CC3, _t0CC4, _t0CC5];
  real _t0CC7 = 0.e0;
  real _t0CC8 = -0.1e1;
  real _t0CC9 = 0.e0;
  real _t0CCA = 0.e0;
  vec3 _t0CCB = [_t0CC8, _t0CC9, _t0CCA];
  real _t0CCC = prim •00CE<$[3]; $[3]; $[]> (_t0CCB, refPos0AC0);
  real _t0CCD = prim -0026<$[]> (_t0CC7, _t0CCC);
  real _t0CCE = -0.1e1;
  real _t0CCF = 0.e0;
  real _t0CD0 = 0.e0;
  vec3 _t0CD1 = [_t0CCE, _t0CCF, _t0CD0];
  real _t0CD2 = prim •00CE<$[3]; $[3]; $[]> (_t0CD1, dPos0AC1);
  real _t0CD3 = prim /0055 (_t0CCD, _t0CD2);
  vec3 _t0CD4 = prim *0038<$[3]> (dPos0AC1, _t0CD3);
  vec3 _t0CD5 = prim +0017<$[3]> (refPos0AC0, _t0CD4);
  real _t0CD6 = prim •00CE<$[3]; $[3]; $[]> (_t0CC6, _t0CD5);
  real _t0CD7 = prim -0026<$[]> (_t0CC2, _t0CD6);
  real _t0CD8 = prim |()|00B5<$[]> (_t0CD7);
  string _t0CD9 = " offset :";
  string _t0CDA = " dp: ";
  string _t0CDB = " otherPossibleTime: ";
  string _t0CDC = "\n";
  print (_t0C29, _t0C36, _t0C37, _t0C3C, _t0C3D, _t0C9D, _t0C9E, _t0CA6, _t0CA7, _t0CAE, _t0CAF, _t0CB0, _t0CB1, _t0CC0, _t0CC1, _t0CD8, _t0CD9, refPos0AC0, _t0CDA, dPos0AC1, _t0CDB, faceTime0AC4, _t0CDC);
  real _t0CDD = 0.e0;
  real _t0CDE = -0.1e1;
  real _t0CDF = 0.e0;
  real _t0CE0 = 0.e0;
  vec3 _t0CE1 = [_t0CDE, _t0CDF, _t0CE0];
  real _t0CE2 = prim •00CE<$[3]; $[3]; $[]> (_t0CE1, refPos0AC0);
  real _t0CE3 = prim -0026<$[]> (_t0CDD, _t0CE2);
  real _t0CE4 = -0.1e1;
  real _t0CE5 = 0.e0;
  real _t0CE6 = 0.e0;
  vec3 _t0CE7 = [_t0CE4, _t0CE5, _t0CE6];
  real _t0CE8 = prim •00CE<$[3]; $[3]; $[]> (_t0CE7, dPos0AC1);
  real _t0CE9 = prim /0055 (_t0CE3, _t0CE8);
  real _t0CEA = -0.1e-7;
  bool _t0CEB = prim >=007E (_t0CE9, _t0CEA);
  real _t0CEC = 0.e0;
  real _t0CED = -0.1e1;
  real _t0CEE = 0.e0;
  real _t0CEF = 0.e0;
  vec3 _t0CF0 = [_t0CED, _t0CEE, _t0CEF];
  real _t0CF1 = prim •00CE<$[3]; $[3]; $[]> (_t0CF0, refPos0AC0);
  real _t0CF2 = prim -0026<$[]> (_t0CEC, _t0CF1);
  real _t0CF3 = -0.1e1;
  real _t0CF4 = 0.e0;
  real _t0CF5 = 0.e0;
  vec3 _t0CF6 = [_t0CF3, _t0CF4, _t0CF5];
  real _t0CF7 = prim •00CE<$[3]; $[3]; $[]> (_t0CF6, dPos0AC1);
  real _t0CF8 = prim /0055 (_t0CF2, _t0CF7);
  bool _t0CF9 = prim >0080 (time0AC2, _t0CF8);
  real _t0CFA = -0.1e1;
  real _t0CFB = 0.e0;
  real _t0CFC = 0.e0;
  vec3 _t0CFD = [_t0CFA, _t0CFB, _t0CFC];
  real _t0CFE = prim •00CE<$[3]; $[3]; $[]> (_t0CFD, dPos0AC1);
  real _t0CFF = prim |()|00B5<$[]> (_t0CFE);
  real _t0D00 = 0.1e-7;
  bool _t0D01 = prim >=007E (_t0CFF, _t0D00);
  bool _t0D02 = prim $and01C4 (_t0CF9, _t0D01);
  bool _t0D03 = prim $and01C4 (_t0CEB, _t0D02);
  if _t0D03 {
    real _t0D04 = 0.1e1;
    real _t0D05 = 0.1e-7;
    real _t0D06 = prim +0017<$[]> (_t0D04, _t0D05);
    real _t0D07 = 0.1e1;
    real _t0D08 = 0.1e1;
    real _t0D09 = 0.1e1;
    vec3 _t0D0A = [_t0D07, _t0D08, _t0D09];
    real _t0D0B = 0.e0;
    real _t0D0C = -0.1e1;
    real _t0D0D = 0.e0;
    real _t0D0E = 0.e0;
    vec3 _t0D0F = [_t0D0C, _t0D0D, _t0D0E];
    real _t0D10 = prim •00CE<$[3]; $[3]; $[]> (_t0D0F, refPos0AC0);
    real _t0D11 = prim -0026<$[]> (_t0D0B, _t0D10);
    real _t0D12 = -0.1e1;
    real _t0D13 = 0.e0;
    real _t0D14 = 0.e0;
    vec3 _t0D15 = [_t0D12, _t0D13, _t0D14];
    real _t0D16 = prim •00CE<$[3]; $[3]; $[]> (_t0D15, dPos0AC1);
    real _t0D17 = prim /0055 (_t0D11, _t0D16);
    vec3 _t0D18 = prim *0038<$[3]> (dPos0AC1, _t0D17);
    vec3 _t0D19 = prim +0017<$[3]> (refPos0AC0, _t0D18);
    real _t0D1A = prim •00CE<$[3]; $[3]; $[]> (_t0D0A, _t0D19);
    bool _t0D1B = prim >0080 (_t0D06, _t0D1A);
    real _t0D1C = 0.1e-7;
    real _t0D1D = 0.1e-7;
    real _t0D1E = 0.1e-7;
    vec3 _t0D1F = [_t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = 0.e0;
    real _t0D21 = -0.1e1;
    real _t0D22 = 0.e0;
    real _t0D23 = 0.e0;
    vec3 _t0D24 = [_t0D21, _t0D22, _t0D23];
    real _t0D25 = prim •00CE<$[3]; $[3]; $[]> (_t0D24, refPos0AC0);
    real _t0D26 = prim -0026<$[]> (_t0D20, _t0D25);
    real _t0D27 = -0.1e1;
    real _t0D28 = 0.e0;
    real _t0D29 = 0.e0;
    vec3 _t0D2A = [_t0D27, _t0D28, _t0D29];
    real _t0D2B = prim •00CE<$[3]; $[3]; $[]> (_t0D2A, dPos0AC1);
    real _t0D2C = prim /0055 (_t0D26, _t0D2B);
    vec3 _t0D2D = prim *0038<$[3]> (dPos0AC1, _t0D2C);
    vec3 _t0D2E = prim +0017<$[3]> (refPos0AC0, _t0D2D);
    vec3 _t0D2F = prim +0017<$[3]> (_t0D1F, _t0D2E);
    real _t0D30 = _t0D2F[0];
    real _t0D31 = -0.e0;
    bool _t0D32 = prim >0080 (_t0D30, _t0D31);
    real _t0D33 = 0.1e-7;
    real _t0D34 = 0.1e-7;
    real _t0D35 = 0.1e-7;
    vec3 _t0D36 = [_t0D33, _t0D34, _t0D35];
    real _t0D37 = 0.e0;
    real _t0D38 = -0.1e1;
    real _t0D39 = 0.e0;
    real _t0D3A = 0.e0;
    vec3 _t0D3B = [_t0D38, _t0D39, _t0D3A];
    real _t0D3C = prim •00CE<$[3]; $[3]; $[]> (_t0D3B, refPos0AC0);
    real _t0D3D = prim -0026<$[]> (_t0D37, _t0D3C);
    real _t0D3E = -0.1e1;
    real _t0D3F = 0.e0;
    real _t0D40 = 0.e0;
    vec3 _t0D41 = [_t0D3E, _t0D3F, _t0D40];
    real _t0D42 = prim •00CE<$[3]; $[3]; $[]> (_t0D41, dPos0AC1);
    real _t0D43 = prim /0055 (_t0D3D, _t0D42);
    vec3 _t0D44 = prim *0038<$[3]> (dPos0AC1, _t0D43);
    vec3 _t0D45 = prim +0017<$[3]> (refPos0AC0, _t0D44);
    vec3 _t0D46 = prim +0017<$[3]> (_t0D36, _t0D45);
    real _t0D47 = _t0D46[1];
    real _t0D48 = -0.e0;
    bool _t0D49 = prim >0080 (_t0D47, _t0D48);
    real _t0D4A = 0.1e-7;
    real _t0D4B = 0.1e-7;
    real _t0D4C = 0.1e-7;
    vec3 _t0D4D = [_t0D4A, _t0D4B, _t0D4C];
    real _t0D4E = 0.e0;
    real _t0D4F = -0.1e1;
    real _t0D50 = 0.e0;
    real _t0D51 = 0.e0;
    vec3 _t0D52 = [_t0D4F, _t0D50, _t0D51];
    real _t0D53 = prim •00CE<$[3]; $[3]; $[]> (_t0D52, refPos0AC0);
    real _t0D54 = prim -0026<$[]> (_t0D4E, _t0D53);
    real _t0D55 = -0.1e1;
    real _t0D56 = 0.e0;
    real _t0D57 = 0.e0;
    vec3 _t0D58 = [_t0D55, _t0D56, _t0D57];
    real _t0D59 = prim •00CE<$[3]; $[3]; $[]> (_t0D58, dPos0AC1);
    real _t0D5A = prim /0055 (_t0D54, _t0D59);
    vec3 _t0D5B = prim *0038<$[3]> (dPos0AC1, _t0D5A);
    vec3 _t0D5C = prim +0017<$[3]> (refPos0AC0, _t0D5B);
    vec3 _t0D5D = prim +0017<$[3]> (_t0D4D, _t0D5C);
    real _t0D5E = _t0D5D[2];
    real _t0D5F = -0.e0;
    bool _t0D60 = prim >0080 (_t0D5E, _t0D5F);
    bool _t0D61 = prim $and01C4 (_t0D49, _t0D60);
    bool _t0D62 = prim $and01C4 (_t0D32, _t0D61);
    bool _t0D63 = prim $and01C4 (_t0D1B, _t0D62);
    if _t0D63 {
      string _t0D64 = "Saving at this face!";
      real _t0D65 = 0.e0;
      real _t0D66 = -0.1e1;
      real _t0D67 = 0.e0;
      real _t0D68 = 0.e0;
      vec3 _t0D69 = [_t0D66, _t0D67, _t0D68];
      real _t0D6A = prim •00CE<$[3]; $[3]; $[]> (_t0D69, refPos0AC0);
      real _t0D6B = prim -0026<$[]> (_t0D65, _t0D6A);
      real _t0D6C = -0.1e1;
      real _t0D6D = 0.e0;
      real _t0D6E = 0.e0;
      vec3 _t0D6F = [_t0D6C, _t0D6D, _t0D6E];
      real _t0D70 = prim •00CE<$[3]; $[3]; $[]> (_t0D6F, dPos0AC1);
      real _t0D71 = prim /0055 (_t0D6B, _t0D70);
      real _t0D72 = 0.e0;
      real _t0D73 = -0.1e1;
      real _t0D74 = 0.e0;
      real _t0D75 = 0.e0;
      vec3 _t0D76 = [_t0D73, _t0D74, _t0D75];
      real _t0D77 = prim •00CE<$[3]; $[3]; $[]> (_t0D76, refPos0AC0);
      real _t0D78 = prim -0026<$[]> (_t0D72, _t0D77);
      real _t0D79 = -0.1e1;
      real _t0D7A = 0.e0;
      real _t0D7B = 0.e0;
      vec3 _t0D7C = [_t0D79, _t0D7A, _t0D7B];
      real _t0D7D = prim •00CE<$[3]; $[3]; $[]> (_t0D7C, dPos0AC1);
      real _t0D7E = prim /0055 (_t0D78, _t0D7D);
      bool _t0D7F = prim >0080 (time0AC2, _t0D7E);
      string _t0D80 = "\n";
      print (_t0D64, _t0D71, _t0D7F, _t0D80);
      real _t0D81 = 0.e0;
      real _t0D82 = -0.1e1;
      real _t0D83 = 0.e0;
      real _t0D84 = 0.e0;
      vec3 _t0D85 = [_t0D82, _t0D83, _t0D84];
      real _t0D86 = prim •00CE<$[3]; $[3]; $[]> (_t0D85, refPos0AC0);
      real _t0D87 = prim -0026<$[]> (_t0D81, _t0D86);
      real _t0D88 = -0.1e1;
      real _t0D89 = 0.e0;
      real _t0D8A = 0.e0;
      vec3 _t0D8B = [_t0D88, _t0D89, _t0D8A];
      real _t0D8C = prim •00CE<$[3]; $[3]; $[]> (_t0D8B, dPos0AC1);
      time0AC2 = prim /0055 (_t0D87, _t0D8C);
      face0AC3 = 1;
    }
  }
  string _t0D8D = "\ntest :";
  real _t0D8E = 0.e0;
  real _t0D8F = 0.e0;
  real _t0D90 = -0.1e1;
  real _t0D91 = 0.e0;
  vec3 _t0D92 = [_t0D8F, _t0D90, _t0D91];
  real _t0D93 = prim •00CE<$[3]; $[3]; $[]> (_t0D92, refPos0AC0);
  real _t0D94 = prim -0026<$[]> (_t0D8E, _t0D93);
  real _t0D95 = 0.e0;
  real _t0D96 = -0.1e1;
  real _t0D97 = 0.e0;
  vec3 _t0D98 = [_t0D95, _t0D96, _t0D97];
  real _t0D99 = prim •00CE<$[3]; $[3]; $[]> (_t0D98, dPos0AC1);
  real _t0D9A = prim /0055 (_t0D94, _t0D99);
  string _t0D9B = " test2: ";
  real _t0D9C = 0.e0;
  real _t0D9D = -0.1e1;
  real _t0D9E = 0.e0;
  vec3 _t0D9F = [_t0D9C, _t0D9D, _t0D9E];
  real _t0DA0 = prim •00CE<$[3]; $[3]; $[]> (_t0D9F, dPos0AC1);
  string _t0DA1 = " insideTest: ";
  real _t0DA2 = 0.1e1;
  real _t0DA3 = 0.1e-7;
  real _t0DA4 = prim +0017<$[]> (_t0DA2, _t0DA3);
  real _t0DA5 = 0.1e1;
  real _t0DA6 = 0.1e1;
  real _t0DA7 = 0.1e1;
  vec3 _t0DA8 = [_t0DA5, _t0DA6, _t0DA7];
  real _t0DA9 = 0.e0;
  real _t0DAA = 0.e0;
  real _t0DAB = -0.1e1;
  real _t0DAC = 0.e0;
  vec3 _t0DAD = [_t0DAA, _t0DAB, _t0DAC];
  real _t0DAE = prim •00CE<$[3]; $[3]; $[]> (_t0DAD, refPos0AC0);
  real _t0DAF = prim -0026<$[]> (_t0DA9, _t0DAE);
  real _t0DB0 = 0.e0;
  real _t0DB1 = -0.1e1;
  real _t0DB2 = 0.e0;
  vec3 _t0DB3 = [_t0DB0, _t0DB1, _t0DB2];
  real _t0DB4 = prim •00CE<$[3]; $[3]; $[]> (_t0DB3, dPos0AC1);
  real _t0DB5 = prim /0055 (_t0DAF, _t0DB4);
  vec3 _t0DB6 = prim *0038<$[3]> (dPos0AC1, _t0DB5);
  vec3 _t0DB7 = prim +0017<$[3]> (refPos0AC0, _t0DB6);
  real _t0DB8 = prim •00CE<$[3]; $[3]; $[]> (_t0DA8, _t0DB7);
  bool _t0DB9 = prim >0080 (_t0DA4, _t0DB8);
  real _t0DBA = 0.1e-7;
  real _t0DBB = 0.1e-7;
  real _t0DBC = 0.1e-7;
  vec3 _t0DBD = [_t0DBA, _t0DBB, _t0DBC];
  real _t0DBE = 0.e0;
  real _t0DBF = 0.e0;
  real _t0DC0 = -0.1e1;
  real _t0DC1 = 0.e0;
  vec3 _t0DC2 = [_t0DBF, _t0DC0, _t0DC1];
  real _t0DC3 = prim •00CE<$[3]; $[3]; $[]> (_t0DC2, refPos0AC0);
  real _t0DC4 = prim -0026<$[]> (_t0DBE, _t0DC3);
  real _t0DC5 = 0.e0;
  real _t0DC6 = -0.1e1;
  real _t0DC7 = 0.e0;
  vec3 _t0DC8 = [_t0DC5, _t0DC6, _t0DC7];
  real _t0DC9 = prim •00CE<$[3]; $[3]; $[]> (_t0DC8, dPos0AC1);
  real _t0DCA = prim /0055 (_t0DC4, _t0DC9);
  vec3 _t0DCB = prim *0038<$[3]> (dPos0AC1, _t0DCA);
  vec3 _t0DCC = prim +0017<$[3]> (refPos0AC0, _t0DCB);
  vec3 _t0DCD = prim +0017<$[3]> (_t0DBD, _t0DCC);
  real _t0DCE = _t0DCD[0];
  real _t0DCF = -0.e0;
  bool _t0DD0 = prim >0080 (_t0DCE, _t0DCF);
  real _t0DD1 = 0.1e-7;
  real _t0DD2 = 0.1e-7;
  real _t0DD3 = 0.1e-7;
  vec3 _t0DD4 = [_t0DD1, _t0DD2, _t0DD3];
  real _t0DD5 = 0.e0;
  real _t0DD6 = 0.e0;
  real _t0DD7 = -0.1e1;
  real _t0DD8 = 0.e0;
  vec3 _t0DD9 = [_t0DD6, _t0DD7, _t0DD8];
  real _t0DDA = prim •00CE<$[3]; $[3]; $[]> (_t0DD9, refPos0AC0);
  real _t0DDB = prim -0026<$[]> (_t0DD5, _t0DDA);
  real _t0DDC = 0.e0;
  real _t0DDD = -0.1e1;
  real _t0DDE = 0.e0;
  vec3 _t0DDF = [_t0DDC, _t0DDD, _t0DDE];
  real _t0DE0 = prim •00CE<$[3]; $[3]; $[]> (_t0DDF, dPos0AC1);
  real _t0DE1 = prim /0055 (_t0DDB, _t0DE0);
  vec3 _t0DE2 = prim *0038<$[3]> (dPos0AC1, _t0DE1);
  vec3 _t0DE3 = prim +0017<$[3]> (refPos0AC0, _t0DE2);
  vec3 _t0DE4 = prim +0017<$[3]> (_t0DD4, _t0DE3);
  real _t0DE5 = _t0DE4[1];
  real _t0DE6 = -0.e0;
  bool _t0DE7 = prim >0080 (_t0DE5, _t0DE6);
  real _t0DE8 = 0.1e-7;
  real _t0DE9 = 0.1e-7;
  real _t0DEA = 0.1e-7;
  vec3 _t0DEB = [_t0DE8, _t0DE9, _t0DEA];
  real _t0DEC = 0.e0;
  real _t0DED = 0.e0;
  real _t0DEE = -0.1e1;
  real _t0DEF = 0.e0;
  vec3 _t0DF0 = [_t0DED, _t0DEE, _t0DEF];
  real _t0DF1 = prim •00CE<$[3]; $[3]; $[]> (_t0DF0, refPos0AC0);
  real _t0DF2 = prim -0026<$[]> (_t0DEC, _t0DF1);
  real _t0DF3 = 0.e0;
  real _t0DF4 = -0.1e1;
  real _t0DF5 = 0.e0;
  vec3 _t0DF6 = [_t0DF3, _t0DF4, _t0DF5];
  real _t0DF7 = prim •00CE<$[3]; $[3]; $[]> (_t0DF6, dPos0AC1);
  real _t0DF8 = prim /0055 (_t0DF2, _t0DF7);
  vec3 _t0DF9 = prim *0038<$[3]> (dPos0AC1, _t0DF8);
  vec3 _t0DFA = prim +0017<$[3]> (refPos0AC0, _t0DF9);
  vec3 _t0DFB = prim +0017<$[3]> (_t0DEB, _t0DFA);
  real _t0DFC = _t0DFB[2];
  real _t0DFD = -0.e0;
  bool _t0DFE = prim >0080 (_t0DFC, _t0DFD);
  bool _t0DFF = prim $and01C4 (_t0DE7, _t0DFE);
  bool _t0E00 = prim $and01C4 (_t0DD0, _t0DFF);
  bool _t0E01 = prim $and01C4 (_t0DB9, _t0E00);
  string _t0E02 = " dist: ";
  real _t0E03 = 0.e0;
  real _t0E04 = 0.e0;
  real _t0E05 = -0.1e1;
  real _t0E06 = 0.e0;
  vec3 _t0E07 = [_t0E04, _t0E05, _t0E06];
  real _t0E08 = prim •00CE<$[3]; $[3]; $[]> (_t0E07, refPos0AC0);
  real _t0E09 = prim -0026<$[]> (_t0E03, _t0E08);
  real _t0E0A = prim |()|00B5<$[]> (_t0E09);
  string _t0E0B = "signed dist: ";
  real _t0E0C = 0.e0;
  real _t0E0D = 0.e0;
  real _t0E0E = -0.1e1;
  real _t0E0F = 0.e0;
  vec3 _t0E10 = [_t0E0D, _t0E0E, _t0E0F];
  real _t0E11 = prim •00CE<$[3]; $[3]; $[]> (_t0E10, refPos0AC0);
  real _t0E12 = prim -0026<$[]> (_t0E0C, _t0E11);
  string _t0E13 = " face: ";
  int _t0E14 = 2;
  string _t0E15 = " place: ";
  real _t0E16 = 0.e0;
  real _t0E17 = 0.e0;
  real _t0E18 = -0.1e1;
  real _t0E19 = 0.e0;
  vec3 _t0E1A = [_t0E17, _t0E18, _t0E19];
  real _t0E1B = prim •00CE<$[3]; $[3]; $[]> (_t0E1A, refPos0AC0);
  real _t0E1C = prim -0026<$[]> (_t0E16, _t0E1B);
  real _t0E1D = 0.e0;
  real _t0E1E = -0.1e1;
  real _t0E1F = 0.e0;
  vec3 _t0E20 = [_t0E1D, _t0E1E, _t0E1F];
  real _t0E21 = prim •00CE<$[3]; $[3]; $[]> (_t0E20, dPos0AC1);
  real _t0E22 = prim /0055 (_t0E1C, _t0E21);
  vec3 _t0E23 = prim *0038<$[3]> (dPos0AC1, _t0E22);
  vec3 _t0E24 = prim +0017<$[3]> (refPos0AC0, _t0E23);
  string _t0E25 = " error: ";
  real _t0E26 = 0.e0;
  real _t0E27 = 0.e0;
  real _t0E28 = -0.1e1;
  real _t0E29 = 0.e0;
  vec3 _t0E2A = [_t0E27, _t0E28, _t0E29];
  real _t0E2B = 0.e0;
  real _t0E2C = 0.e0;
  real _t0E2D = -0.1e1;
  real _t0E2E = 0.e0;
  vec3 _t0E2F = [_t0E2C, _t0E2D, _t0E2E];
  real _t0E30 = prim •00CE<$[3]; $[3]; $[]> (_t0E2F, refPos0AC0);
  real _t0E31 = prim -0026<$[]> (_t0E2B, _t0E30);
  real _t0E32 = 0.e0;
  real _t0E33 = -0.1e1;
  real _t0E34 = 0.e0;
  vec3 _t0E35 = [_t0E32, _t0E33, _t0E34];
  real _t0E36 = prim •00CE<$[3]; $[3]; $[]> (_t0E35, dPos0AC1);
  real _t0E37 = prim /0055 (_t0E31, _t0E36);
  vec3 _t0E38 = prim *0038<$[3]> (dPos0AC1, _t0E37);
  vec3 _t0E39 = prim +0017<$[3]> (refPos0AC0, _t0E38);
  real _t0E3A = prim •00CE<$[3]; $[3]; $[]> (_t0E2A, _t0E39);
  real _t0E3B = prim -0026<$[]> (_t0E26, _t0E3A);
  real _t0E3C = prim |()|00B5<$[]> (_t0E3B);
  string _t0E3D = " offset :";
  string _t0E3E = " dp: ";
  string _t0E3F = " otherPossibleTime: ";
  string _t0E40 = "\n";
  print (_t0D8D, _t0D9A, _t0D9B, _t0DA0, _t0DA1, _t0E01, _t0E02, _t0E0A, _t0E0B, _t0E12, _t0E13, _t0E14, _t0E15, _t0E24, _t0E25, _t0E3C, _t0E3D, refPos0AC0, _t0E3E, dPos0AC1, _t0E3F, faceTime0AC4, _t0E40);
  real _t0E41 = 0.e0;
  real _t0E42 = 0.e0;
  real _t0E43 = -0.1e1;
  real _t0E44 = 0.e0;
  vec3 _t0E45 = [_t0E42, _t0E43, _t0E44];
  real _t0E46 = prim •00CE<$[3]; $[3]; $[]> (_t0E45, refPos0AC0);
  real _t0E47 = prim -0026<$[]> (_t0E41, _t0E46);
  real _t0E48 = 0.e0;
  real _t0E49 = -0.1e1;
  real _t0E4A = 0.e0;
  vec3 _t0E4B = [_t0E48, _t0E49, _t0E4A];
  real _t0E4C = prim •00CE<$[3]; $[3]; $[]> (_t0E4B, dPos0AC1);
  real _t0E4D = prim /0055 (_t0E47, _t0E4C);
  real _t0E4E = -0.1e-7;
  bool _t0E4F = prim >=007E (_t0E4D, _t0E4E);
  real _t0E50 = 0.e0;
  real _t0E51 = 0.e0;
  real _t0E52 = -0.1e1;
  real _t0E53 = 0.e0;
  vec3 _t0E54 = [_t0E51, _t0E52, _t0E53];
  real _t0E55 = prim •00CE<$[3]; $[3]; $[]> (_t0E54, refPos0AC0);
  real _t0E56 = prim -0026<$[]> (_t0E50, _t0E55);
  real _t0E57 = 0.e0;
  real _t0E58 = -0.1e1;
  real _t0E59 = 0.e0;
  vec3 _t0E5A = [_t0E57, _t0E58, _t0E59];
  real _t0E5B = prim •00CE<$[3]; $[3]; $[]> (_t0E5A, dPos0AC1);
  real _t0E5C = prim /0055 (_t0E56, _t0E5B);
  bool _t0E5D = prim >0080 (time0AC2, _t0E5C);
  real _t0E5E = 0.e0;
  real _t0E5F = -0.1e1;
  real _t0E60 = 0.e0;
  vec3 _t0E61 = [_t0E5E, _t0E5F, _t0E60];
  real _t0E62 = prim •00CE<$[3]; $[3]; $[]> (_t0E61, dPos0AC1);
  real _t0E63 = prim |()|00B5<$[]> (_t0E62);
  real _t0E64 = 0.1e-7;
  bool _t0E65 = prim >=007E (_t0E63, _t0E64);
  bool _t0E66 = prim $and01C4 (_t0E5D, _t0E65);
  bool _t0E67 = prim $and01C4 (_t0E4F, _t0E66);
  if _t0E67 {
    real _t0E68 = 0.1e1;
    real _t0E69 = 0.1e-7;
    real _t0E6A = prim +0017<$[]> (_t0E68, _t0E69);
    real _t0E6B = 0.1e1;
    real _t0E6C = 0.1e1;
    real _t0E6D = 0.1e1;
    vec3 _t0E6E = [_t0E6B, _t0E6C, _t0E6D];
    real _t0E6F = 0.e0;
    real _t0E70 = 0.e0;
    real _t0E71 = -0.1e1;
    real _t0E72 = 0.e0;
    vec3 _t0E73 = [_t0E70, _t0E71, _t0E72];
    real _t0E74 = prim •00CE<$[3]; $[3]; $[]> (_t0E73, refPos0AC0);
    real _t0E75 = prim -0026<$[]> (_t0E6F, _t0E74);
    real _t0E76 = 0.e0;
    real _t0E77 = -0.1e1;
    real _t0E78 = 0.e0;
    vec3 _t0E79 = [_t0E76, _t0E77, _t0E78];
    real _t0E7A = prim •00CE<$[3]; $[3]; $[]> (_t0E79, dPos0AC1);
    real _t0E7B = prim /0055 (_t0E75, _t0E7A);
    vec3 _t0E7C = prim *0038<$[3]> (dPos0AC1, _t0E7B);
    vec3 _t0E7D = prim +0017<$[3]> (refPos0AC0, _t0E7C);
    real _t0E7E = prim •00CE<$[3]; $[3]; $[]> (_t0E6E, _t0E7D);
    bool _t0E7F = prim >0080 (_t0E6A, _t0E7E);
    real _t0E80 = 0.1e-7;
    real _t0E81 = 0.1e-7;
    real _t0E82 = 0.1e-7;
    vec3 _t0E83 = [_t0E80, _t0E81, _t0E82];
    real _t0E84 = 0.e0;
    real _t0E85 = 0.e0;
    real _t0E86 = -0.1e1;
    real _t0E87 = 0.e0;
    vec3 _t0E88 = [_t0E85, _t0E86, _t0E87];
    real _t0E89 = prim •00CE<$[3]; $[3]; $[]> (_t0E88, refPos0AC0);
    real _t0E8A = prim -0026<$[]> (_t0E84, _t0E89);
    real _t0E8B = 0.e0;
    real _t0E8C = -0.1e1;
    real _t0E8D = 0.e0;
    vec3 _t0E8E = [_t0E8B, _t0E8C, _t0E8D];
    real _t0E8F = prim •00CE<$[3]; $[3]; $[]> (_t0E8E, dPos0AC1);
    real _t0E90 = prim /0055 (_t0E8A, _t0E8F);
    vec3 _t0E91 = prim *0038<$[3]> (dPos0AC1, _t0E90);
    vec3 _t0E92 = prim +0017<$[3]> (refPos0AC0, _t0E91);
    vec3 _t0E93 = prim +0017<$[3]> (_t0E83, _t0E92);
    real _t0E94 = _t0E93[0];
    real _t0E95 = -0.e0;
    bool _t0E96 = prim >0080 (_t0E94, _t0E95);
    real _t0E97 = 0.1e-7;
    real _t0E98 = 0.1e-7;
    real _t0E99 = 0.1e-7;
    vec3 _t0E9A = [_t0E97, _t0E98, _t0E99];
    real _t0E9B = 0.e0;
    real _t0E9C = 0.e0;
    real _t0E9D = -0.1e1;
    real _t0E9E = 0.e0;
    vec3 _t0E9F = [_t0E9C, _t0E9D, _t0E9E];
    real _t0EA0 = prim •00CE<$[3]; $[3]; $[]> (_t0E9F, refPos0AC0);
    real _t0EA1 = prim -0026<$[]> (_t0E9B, _t0EA0);
    real _t0EA2 = 0.e0;
    real _t0EA3 = -0.1e1;
    real _t0EA4 = 0.e0;
    vec3 _t0EA5 = [_t0EA2, _t0EA3, _t0EA4];
    real _t0EA6 = prim •00CE<$[3]; $[3]; $[]> (_t0EA5, dPos0AC1);
    real _t0EA7 = prim /0055 (_t0EA1, _t0EA6);
    vec3 _t0EA8 = prim *0038<$[3]> (dPos0AC1, _t0EA7);
    vec3 _t0EA9 = prim +0017<$[3]> (refPos0AC0, _t0EA8);
    vec3 _t0EAA = prim +0017<$[3]> (_t0E9A, _t0EA9);
    real _t0EAB = _t0EAA[1];
    real _t0EAC = -0.e0;
    bool _t0EAD = prim >0080 (_t0EAB, _t0EAC);
    real _t0EAE = 0.1e-7;
    real _t0EAF = 0.1e-7;
    real _t0EB0 = 0.1e-7;
    vec3 _t0EB1 = [_t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.e0;
    real _t0EB4 = -0.1e1;
    real _t0EB5 = 0.e0;
    vec3 _t0EB6 = [_t0EB3, _t0EB4, _t0EB5];
    real _t0EB7 = prim •00CE<$[3]; $[3]; $[]> (_t0EB6, refPos0AC0);
    real _t0EB8 = prim -0026<$[]> (_t0EB2, _t0EB7);
    real _t0EB9 = 0.e0;
    real _t0EBA = -0.1e1;
    real _t0EBB = 0.e0;
    vec3 _t0EBC = [_t0EB9, _t0EBA, _t0EBB];
    real _t0EBD = prim •00CE<$[3]; $[3]; $[]> (_t0EBC, dPos0AC1);
    real _t0EBE = prim /0055 (_t0EB8, _t0EBD);
    vec3 _t0EBF = prim *0038<$[3]> (dPos0AC1, _t0EBE);
    vec3 _t0EC0 = prim +0017<$[3]> (refPos0AC0, _t0EBF);
    vec3 _t0EC1 = prim +0017<$[3]> (_t0EB1, _t0EC0);
    real _t0EC2 = _t0EC1[2];
    real _t0EC3 = -0.e0;
    bool _t0EC4 = prim >0080 (_t0EC2, _t0EC3);
    bool _t0EC5 = prim $and01C4 (_t0EAD, _t0EC4);
    bool _t0EC6 = prim $and01C4 (_t0E96, _t0EC5);
    bool _t0EC7 = prim $and01C4 (_t0E7F, _t0EC6);
    if _t0EC7 {
      string _t0EC8 = "Saving at this face!";
      real _t0EC9 = 0.e0;
      real _t0ECA = 0.e0;
      real _t0ECB = -0.1e1;
      real _t0ECC = 0.e0;
      vec3 _t0ECD = [_t0ECA, _t0ECB, _t0ECC];
      real _t0ECE = prim •00CE<$[3]; $[3]; $[]> (_t0ECD, refPos0AC0);
      real _t0ECF = prim -0026<$[]> (_t0EC9, _t0ECE);
      real _t0ED0 = 0.e0;
      real _t0ED1 = -0.1e1;
      real _t0ED2 = 0.e0;
      vec3 _t0ED3 = [_t0ED0, _t0ED1, _t0ED2];
      real _t0ED4 = prim •00CE<$[3]; $[3]; $[]> (_t0ED3, dPos0AC1);
      real _t0ED5 = prim /0055 (_t0ECF, _t0ED4);
      real _t0ED6 = 0.e0;
      real _t0ED7 = 0.e0;
      real _t0ED8 = -0.1e1;
      real _t0ED9 = 0.e0;
      vec3 _t0EDA = [_t0ED7, _t0ED8, _t0ED9];
      real _t0EDB = prim •00CE<$[3]; $[3]; $[]> (_t0EDA, refPos0AC0);
      real _t0EDC = prim -0026<$[]> (_t0ED6, _t0EDB);
      real _t0EDD = 0.e0;
      real _t0EDE = -0.1e1;
      real _t0EDF = 0.e0;
      vec3 _t0EE0 = [_t0EDD, _t0EDE, _t0EDF];
      real _t0EE1 = prim •00CE<$[3]; $[3]; $[]> (_t0EE0, dPos0AC1);
      real _t0EE2 = prim /0055 (_t0EDC, _t0EE1);
      bool _t0EE3 = prim >0080 (time0AC2, _t0EE2);
      string _t0EE4 = "\n";
      print (_t0EC8, _t0ED5, _t0EE3, _t0EE4);
      real _t0EE5 = 0.e0;
      real _t0EE6 = 0.e0;
      real _t0EE7 = -0.1e1;
      real _t0EE8 = 0.e0;
      vec3 _t0EE9 = [_t0EE6, _t0EE7, _t0EE8];
      real _t0EEA = prim •00CE<$[3]; $[3]; $[]> (_t0EE9, refPos0AC0);
      real _t0EEB = prim -0026<$[]> (_t0EE5, _t0EEA);
      real _t0EEC = 0.e0;
      real _t0EED = -0.1e1;
      real _t0EEE = 0.e0;
      vec3 _t0EEF = [_t0EEC, _t0EED, _t0EEE];
      real _t0EF0 = prim •00CE<$[3]; $[3]; $[]> (_t0EEF, dPos0AC1);
      time0AC2 = prim /0055 (_t0EEB, _t0EF0);
      face0AC3 = 2;
    }
  }
  string _t0EF1 = "\ntest :";
  real _t0EF2 = 0.e0;
  real _t0EF3 = 0.e0;
  real _t0EF4 = 0.e0;
  real _t0EF5 = -0.1e1;
  vec3 _t0EF6 = [_t0EF3, _t0EF4, _t0EF5];
  real _t0EF7 = prim •00CE<$[3]; $[3]; $[]> (_t0EF6, refPos0AC0);
  real _t0EF8 = prim -0026<$[]> (_t0EF2, _t0EF7);
  real _t0EF9 = 0.e0;
  real _t0EFA = 0.e0;
  real _t0EFB = -0.1e1;
  vec3 _t0EFC = [_t0EF9, _t0EFA, _t0EFB];
  real _t0EFD = prim •00CE<$[3]; $[3]; $[]> (_t0EFC, dPos0AC1);
  real _t0EFE = prim /0055 (_t0EF8, _t0EFD);
  string _t0EFF = " test2: ";
  real _t0F00 = 0.e0;
  real _t0F01 = 0.e0;
  real _t0F02 = -0.1e1;
  vec3 _t0F03 = [_t0F00, _t0F01, _t0F02];
  real _t0F04 = prim •00CE<$[3]; $[3]; $[]> (_t0F03, dPos0AC1);
  string _t0F05 = " insideTest: ";
  real _t0F06 = 0.1e1;
  real _t0F07 = 0.1e-7;
  real _t0F08 = prim +0017<$[]> (_t0F06, _t0F07);
  real _t0F09 = 0.1e1;
  real _t0F0A = 0.1e1;
  real _t0F0B = 0.1e1;
  vec3 _t0F0C = [_t0F09, _t0F0A, _t0F0B];
  real _t0F0D = 0.e0;
  real _t0F0E = 0.e0;
  real _t0F0F = 0.e0;
  real _t0F10 = -0.1e1;
  vec3 _t0F11 = [_t0F0E, _t0F0F, _t0F10];
  real _t0F12 = prim •00CE<$[3]; $[3]; $[]> (_t0F11, refPos0AC0);
  real _t0F13 = prim -0026<$[]> (_t0F0D, _t0F12);
  real _t0F14 = 0.e0;
  real _t0F15 = 0.e0;
  real _t0F16 = -0.1e1;
  vec3 _t0F17 = [_t0F14, _t0F15, _t0F16];
  real _t0F18 = prim •00CE<$[3]; $[3]; $[]> (_t0F17, dPos0AC1);
  real _t0F19 = prim /0055 (_t0F13, _t0F18);
  vec3 _t0F1A = prim *0038<$[3]> (dPos0AC1, _t0F19);
  vec3 _t0F1B = prim +0017<$[3]> (refPos0AC0, _t0F1A);
  real _t0F1C = prim •00CE<$[3]; $[3]; $[]> (_t0F0C, _t0F1B);
  bool _t0F1D = prim >0080 (_t0F08, _t0F1C);
  real _t0F1E = 0.1e-7;
  real _t0F1F = 0.1e-7;
  real _t0F20 = 0.1e-7;
  vec3 _t0F21 = [_t0F1E, _t0F1F, _t0F20];
  real _t0F22 = 0.e0;
  real _t0F23 = 0.e0;
  real _t0F24 = 0.e0;
  real _t0F25 = -0.1e1;
  vec3 _t0F26 = [_t0F23, _t0F24, _t0F25];
  real _t0F27 = prim •00CE<$[3]; $[3]; $[]> (_t0F26, refPos0AC0);
  real _t0F28 = prim -0026<$[]> (_t0F22, _t0F27);
  real _t0F29 = 0.e0;
  real _t0F2A = 0.e0;
  real _t0F2B = -0.1e1;
  vec3 _t0F2C = [_t0F29, _t0F2A, _t0F2B];
  real _t0F2D = prim •00CE<$[3]; $[3]; $[]> (_t0F2C, dPos0AC1);
  real _t0F2E = prim /0055 (_t0F28, _t0F2D);
  vec3 _t0F2F = prim *0038<$[3]> (dPos0AC1, _t0F2E);
  vec3 _t0F30 = prim +0017<$[3]> (refPos0AC0, _t0F2F);
  vec3 _t0F31 = prim +0017<$[3]> (_t0F21, _t0F30);
  real _t0F32 = _t0F31[0];
  real _t0F33 = -0.e0;
  bool _t0F34 = prim >0080 (_t0F32, _t0F33);
  real _t0F35 = 0.1e-7;
  real _t0F36 = 0.1e-7;
  real _t0F37 = 0.1e-7;
  vec3 _t0F38 = [_t0F35, _t0F36, _t0F37];
  real _t0F39 = 0.e0;
  real _t0F3A = 0.e0;
  real _t0F3B = 0.e0;
  real _t0F3C = -0.1e1;
  vec3 _t0F3D = [_t0F3A, _t0F3B, _t0F3C];
  real _t0F3E = prim •00CE<$[3]; $[3]; $[]> (_t0F3D, refPos0AC0);
  real _t0F3F = prim -0026<$[]> (_t0F39, _t0F3E);
  real _t0F40 = 0.e0;
  real _t0F41 = 0.e0;
  real _t0F42 = -0.1e1;
  vec3 _t0F43 = [_t0F40, _t0F41, _t0F42];
  real _t0F44 = prim •00CE<$[3]; $[3]; $[]> (_t0F43, dPos0AC1);
  real _t0F45 = prim /0055 (_t0F3F, _t0F44);
  vec3 _t0F46 = prim *0038<$[3]> (dPos0AC1, _t0F45);
  vec3 _t0F47 = prim +0017<$[3]> (refPos0AC0, _t0F46);
  vec3 _t0F48 = prim +0017<$[3]> (_t0F38, _t0F47);
  real _t0F49 = _t0F48[1];
  real _t0F4A = -0.e0;
  bool _t0F4B = prim >0080 (_t0F49, _t0F4A);
  real _t0F4C = 0.1e-7;
  real _t0F4D = 0.1e-7;
  real _t0F4E = 0.1e-7;
  vec3 _t0F4F = [_t0F4C, _t0F4D, _t0F4E];
  real _t0F50 = 0.e0;
  real _t0F51 = 0.e0;
  real _t0F52 = 0.e0;
  real _t0F53 = -0.1e1;
  vec3 _t0F54 = [_t0F51, _t0F52, _t0F53];
  real _t0F55 = prim •00CE<$[3]; $[3]; $[]> (_t0F54, refPos0AC0);
  real _t0F56 = prim -0026<$[]> (_t0F50, _t0F55);
  real _t0F57 = 0.e0;
  real _t0F58 = 0.e0;
  real _t0F59 = -0.1e1;
  vec3 _t0F5A = [_t0F57, _t0F58, _t0F59];
  real _t0F5B = prim •00CE<$[3]; $[3]; $[]> (_t0F5A, dPos0AC1);
  real _t0F5C = prim /0055 (_t0F56, _t0F5B);
  vec3 _t0F5D = prim *0038<$[3]> (dPos0AC1, _t0F5C);
  vec3 _t0F5E = prim +0017<$[3]> (refPos0AC0, _t0F5D);
  vec3 _t0F5F = prim +0017<$[3]> (_t0F4F, _t0F5E);
  real _t0F60 = _t0F5F[2];
  real _t0F61 = -0.e0;
  bool _t0F62 = prim >0080 (_t0F60, _t0F61);
  bool _t0F63 = prim $and01C4 (_t0F4B, _t0F62);
  bool _t0F64 = prim $and01C4 (_t0F34, _t0F63);
  bool _t0F65 = prim $and01C4 (_t0F1D, _t0F64);
  string _t0F66 = " dist: ";
  real _t0F67 = 0.e0;
  real _t0F68 = 0.e0;
  real _t0F69 = 0.e0;
  real _t0F6A = -0.1e1;
  vec3 _t0F6B = [_t0F68, _t0F69, _t0F6A];
  real _t0F6C = prim •00CE<$[3]; $[3]; $[]> (_t0F6B, refPos0AC0);
  real _t0F6D = prim -0026<$[]> (_t0F67, _t0F6C);
  real _t0F6E = prim |()|00B5<$[]> (_t0F6D);
  string _t0F6F = "signed dist: ";
  real _t0F70 = 0.e0;
  real _t0F71 = 0.e0;
  real _t0F72 = 0.e0;
  real _t0F73 = -0.1e1;
  vec3 _t0F74 = [_t0F71, _t0F72, _t0F73];
  real _t0F75 = prim •00CE<$[3]; $[3]; $[]> (_t0F74, refPos0AC0);
  real _t0F76 = prim -0026<$[]> (_t0F70, _t0F75);
  string _t0F77 = " face: ";
  int _t0F78 = 3;
  string _t0F79 = " place: ";
  real _t0F7A = 0.e0;
  real _t0F7B = 0.e0;
  real _t0F7C = 0.e0;
  real _t0F7D = -0.1e1;
  vec3 _t0F7E = [_t0F7B, _t0F7C, _t0F7D];
  real _t0F7F = prim •00CE<$[3]; $[3]; $[]> (_t0F7E, refPos0AC0);
  real _t0F80 = prim -0026<$[]> (_t0F7A, _t0F7F);
  real _t0F81 = 0.e0;
  real _t0F82 = 0.e0;
  real _t0F83 = -0.1e1;
  vec3 _t0F84 = [_t0F81, _t0F82, _t0F83];
  real _t0F85 = prim •00CE<$[3]; $[3]; $[]> (_t0F84, dPos0AC1);
  real _t0F86 = prim /0055 (_t0F80, _t0F85);
  vec3 _t0F87 = prim *0038<$[3]> (dPos0AC1, _t0F86);
  vec3 _t0F88 = prim +0017<$[3]> (refPos0AC0, _t0F87);
  string _t0F89 = " error: ";
  real _t0F8A = 0.e0;
  real _t0F8B = 0.e0;
  real _t0F8C = 0.e0;
  real _t0F8D = -0.1e1;
  vec3 _t0F8E = [_t0F8B, _t0F8C, _t0F8D];
  real _t0F8F = 0.e0;
  real _t0F90 = 0.e0;
  real _t0F91 = 0.e0;
  real _t0F92 = -0.1e1;
  vec3 _t0F93 = [_t0F90, _t0F91, _t0F92];
  real _t0F94 = prim •00CE<$[3]; $[3]; $[]> (_t0F93, refPos0AC0);
  real _t0F95 = prim -0026<$[]> (_t0F8F, _t0F94);
  real _t0F96 = 0.e0;
  real _t0F97 = 0.e0;
  real _t0F98 = -0.1e1;
  vec3 _t0F99 = [_t0F96, _t0F97, _t0F98];
  real _t0F9A = prim •00CE<$[3]; $[3]; $[]> (_t0F99, dPos0AC1);
  real _t0F9B = prim /0055 (_t0F95, _t0F9A);
  vec3 _t0F9C = prim *0038<$[3]> (dPos0AC1, _t0F9B);
  vec3 _t0F9D = prim +0017<$[3]> (refPos0AC0, _t0F9C);
  real _t0F9E = prim •00CE<$[3]; $[3]; $[]> (_t0F8E, _t0F9D);
  real _t0F9F = prim -0026<$[]> (_t0F8A, _t0F9E);
  real _t0FA0 = prim |()|00B5<$[]> (_t0F9F);
  string _t0FA1 = " offset :";
  string _t0FA2 = " dp: ";
  string _t0FA3 = " otherPossibleTime: ";
  string _t0FA4 = "\n";
  print (_t0EF1, _t0EFE, _t0EFF, _t0F04, _t0F05, _t0F65, _t0F66, _t0F6E, _t0F6F, _t0F76, _t0F77, _t0F78, _t0F79, _t0F88, _t0F89, _t0FA0, _t0FA1, refPos0AC0, _t0FA2, dPos0AC1, _t0FA3, faceTime0AC4, _t0FA4);
  real _t0FA5 = 0.e0;
  real _t0FA6 = 0.e0;
  real _t0FA7 = 0.e0;
  real _t0FA8 = -0.1e1;
  vec3 _t0FA9 = [_t0FA6, _t0FA7, _t0FA8];
  real _t0FAA = prim •00CE<$[3]; $[3]; $[]> (_t0FA9, refPos0AC0);
  real _t0FAB = prim -0026<$[]> (_t0FA5, _t0FAA);
  real _t0FAC = 0.e0;
  real _t0FAD = 0.e0;
  real _t0FAE = -0.1e1;
  vec3 _t0FAF = [_t0FAC, _t0FAD, _t0FAE];
  real _t0FB0 = prim •00CE<$[3]; $[3]; $[]> (_t0FAF, dPos0AC1);
  real _t0FB1 = prim /0055 (_t0FAB, _t0FB0);
  real _t0FB2 = -0.1e-7;
  bool _t0FB3 = prim >=007E (_t0FB1, _t0FB2);
  real _t0FB4 = 0.e0;
  real _t0FB5 = 0.e0;
  real _t0FB6 = 0.e0;
  real _t0FB7 = -0.1e1;
  vec3 _t0FB8 = [_t0FB5, _t0FB6, _t0FB7];
  real _t0FB9 = prim •00CE<$[3]; $[3]; $[]> (_t0FB8, refPos0AC0);
  real _t0FBA = prim -0026<$[]> (_t0FB4, _t0FB9);
  real _t0FBB = 0.e0;
  real _t0FBC = 0.e0;
  real _t0FBD = -0.1e1;
  vec3 _t0FBE = [_t0FBB, _t0FBC, _t0FBD];
  real _t0FBF = prim •00CE<$[3]; $[3]; $[]> (_t0FBE, dPos0AC1);
  real _t0FC0 = prim /0055 (_t0FBA, _t0FBF);
  bool _t0FC1 = prim >0080 (time0AC2, _t0FC0);
  real _t0FC2 = 0.e0;
  real _t0FC3 = 0.e0;
  real _t0FC4 = -0.1e1;
  vec3 _t0FC5 = [_t0FC2, _t0FC3, _t0FC4];
  real _t0FC6 = prim •00CE<$[3]; $[3]; $[]> (_t0FC5, dPos0AC1);
  real _t0FC7 = prim |()|00B5<$[]> (_t0FC6);
  real _t0FC8 = 0.1e-7;
  bool _t0FC9 = prim >=007E (_t0FC7, _t0FC8);
  bool _t0FCA = prim $and01C4 (_t0FC1, _t0FC9);
  bool _t0FCB = prim $and01C4 (_t0FB3, _t0FCA);
  if _t0FCB {
    real _t0FCC = 0.1e1;
    real _t0FCD = 0.1e-7;
    real _t0FCE = prim +0017<$[]> (_t0FCC, _t0FCD);
    real _t0FCF = 0.1e1;
    real _t0FD0 = 0.1e1;
    real _t0FD1 = 0.1e1;
    vec3 _t0FD2 = [_t0FCF, _t0FD0, _t0FD1];
    real _t0FD3 = 0.e0;
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.e0;
    real _t0FD6 = -0.1e1;
    vec3 _t0FD7 = [_t0FD4, _t0FD5, _t0FD6];
    real _t0FD8 = prim •00CE<$[3]; $[3]; $[]> (_t0FD7, refPos0AC0);
    real _t0FD9 = prim -0026<$[]> (_t0FD3, _t0FD8);
    real _t0FDA = 0.e0;
    real _t0FDB = 0.e0;
    real _t0FDC = -0.1e1;
    vec3 _t0FDD = [_t0FDA, _t0FDB, _t0FDC];
    real _t0FDE = prim •00CE<$[3]; $[3]; $[]> (_t0FDD, dPos0AC1);
    real _t0FDF = prim /0055 (_t0FD9, _t0FDE);
    vec3 _t0FE0 = prim *0038<$[3]> (dPos0AC1, _t0FDF);
    vec3 _t0FE1 = prim +0017<$[3]> (refPos0AC0, _t0FE0);
    real _t0FE2 = prim •00CE<$[3]; $[3]; $[]> (_t0FD2, _t0FE1);
    bool _t0FE3 = prim >0080 (_t0FCE, _t0FE2);
    real _t0FE4 = 0.1e-7;
    real _t0FE5 = 0.1e-7;
    real _t0FE6 = 0.1e-7;
    vec3 _t0FE7 = [_t0FE4, _t0FE5, _t0FE6];
    real _t0FE8 = 0.e0;
    real _t0FE9 = 0.e0;
    real _t0FEA = 0.e0;
    real _t0FEB = -0.1e1;
    vec3 _t0FEC = [_t0FE9, _t0FEA, _t0FEB];
    real _t0FED = prim •00CE<$[3]; $[3]; $[]> (_t0FEC, refPos0AC0);
    real _t0FEE = prim -0026<$[]> (_t0FE8, _t0FED);
    real _t0FEF = 0.e0;
    real _t0FF0 = 0.e0;
    real _t0FF1 = -0.1e1;
    vec3 _t0FF2 = [_t0FEF, _t0FF0, _t0FF1];
    real _t0FF3 = prim •00CE<$[3]; $[3]; $[]> (_t0FF2, dPos0AC1);
    real _t0FF4 = prim /0055 (_t0FEE, _t0FF3);
    vec3 _t0FF5 = prim *0038<$[3]> (dPos0AC1, _t0FF4);
    vec3 _t0FF6 = prim +0017<$[3]> (refPos0AC0, _t0FF5);
    vec3 _t0FF7 = prim +0017<$[3]> (_t0FE7, _t0FF6);
    real _t0FF8 = _t0FF7[0];
    real _t0FF9 = -0.e0;
    bool _t0FFA = prim >0080 (_t0FF8, _t0FF9);
    real _t0FFB = 0.1e-7;
    real _t0FFC = 0.1e-7;
    real _t0FFD = 0.1e-7;
    vec3 _t0FFE = [_t0FFB, _t0FFC, _t0FFD];
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = 0.e0;
    real _t1002 = -0.1e1;
    vec3 _t1003 = [_t1000, _t1001, _t1002];
    real _t1004 = prim •00CE<$[3]; $[3]; $[]> (_t1003, refPos0AC0);
    real _t1005 = prim -0026<$[]> (_t0FFF, _t1004);
    real _t1006 = 0.e0;
    real _t1007 = 0.e0;
    real _t1008 = -0.1e1;
    vec3 _t1009 = [_t1006, _t1007, _t1008];
    real _t100A = prim •00CE<$[3]; $[3]; $[]> (_t1009, dPos0AC1);
    real _t100B = prim /0055 (_t1005, _t100A);
    vec3 _t100C = prim *0038<$[3]> (dPos0AC1, _t100B);
    vec3 _t100D = prim +0017<$[3]> (refPos0AC0, _t100C);
    vec3 _t100E = prim +0017<$[3]> (_t0FFE, _t100D);
    real _t100F = _t100E[1];
    real _t1010 = -0.e0;
    bool _t1011 = prim >0080 (_t100F, _t1010);
    real _t1012 = 0.1e-7;
    real _t1013 = 0.1e-7;
    real _t1014 = 0.1e-7;
    vec3 _t1015 = [_t1012, _t1013, _t1014];
    real _t1016 = 0.e0;
    real _t1017 = 0.e0;
    real _t1018 = 0.e0;
    real _t1019 = -0.1e1;
    vec3 _t101A = [_t1017, _t1018, _t1019];
    real _t101B = prim •00CE<$[3]; $[3]; $[]> (_t101A, refPos0AC0);
    real _t101C = prim -0026<$[]> (_t1016, _t101B);
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = -0.1e1;
    vec3 _t1020 = [_t101D, _t101E, _t101F];
    real _t1021 = prim •00CE<$[3]; $[3]; $[]> (_t1020, dPos0AC1);
    real _t1022 = prim /0055 (_t101C, _t1021);
    vec3 _t1023 = prim *0038<$[3]> (dPos0AC1, _t1022);
    vec3 _t1024 = prim +0017<$[3]> (refPos0AC0, _t1023);
    vec3 _t1025 = prim +0017<$[3]> (_t1015, _t1024);
    real _t1026 = _t1025[2];
    real _t1027 = -0.e0;
    bool _t1028 = prim >0080 (_t1026, _t1027);
    bool _t1029 = prim $and01C4 (_t1011, _t1028);
    bool _t102A = prim $and01C4 (_t0FFA, _t1029);
    bool _t102B = prim $and01C4 (_t0FE3, _t102A);
    if _t102B {
      string _t102C = "Saving at this face!";
      real _t102D = 0.e0;
      real _t102E = 0.e0;
      real _t102F = 0.e0;
      real _t1030 = -0.1e1;
      vec3 _t1031 = [_t102E, _t102F, _t1030];
      real _t1032 = prim •00CE<$[3]; $[3]; $[]> (_t1031, refPos0AC0);
      real _t1033 = prim -0026<$[]> (_t102D, _t1032);
      real _t1034 = 0.e0;
      real _t1035 = 0.e0;
      real _t1036 = -0.1e1;
      vec3 _t1037 = [_t1034, _t1035, _t1036];
      real _t1038 = prim •00CE<$[3]; $[3]; $[]> (_t1037, dPos0AC1);
      real _t1039 = prim /0055 (_t1033, _t1038);
      real _t103A = 0.e0;
      real _t103B = 0.e0;
      real _t103C = 0.e0;
      real _t103D = -0.1e1;
      vec3 _t103E = [_t103B, _t103C, _t103D];
      real _t103F = prim •00CE<$[3]; $[3]; $[]> (_t103E, refPos0AC0);
      real _t1040 = prim -0026<$[]> (_t103A, _t103F);
      real _t1041 = 0.e0;
      real _t1042 = 0.e0;
      real _t1043 = -0.1e1;
      vec3 _t1044 = [_t1041, _t1042, _t1043];
      real _t1045 = prim •00CE<$[3]; $[3]; $[]> (_t1044, dPos0AC1);
      real _t1046 = prim /0055 (_t1040, _t1045);
      bool _t1047 = prim >0080 (time0AC2, _t1046);
      string _t1048 = "\n";
      print (_t102C, _t1039, _t1047, _t1048);
      real _t1049 = 0.e0;
      real _t104A = 0.e0;
      real _t104B = 0.e0;
      real _t104C = -0.1e1;
      vec3 _t104D = [_t104A, _t104B, _t104C];
      real _t104E = prim •00CE<$[3]; $[3]; $[]> (_t104D, refPos0AC0);
      real _t104F = prim -0026<$[]> (_t1049, _t104E);
      real _t1050 = 0.e0;
      real _t1051 = 0.e0;
      real _t1052 = -0.1e1;
      vec3 _t1053 = [_t1050, _t1051, _t1052];
      real _t1054 = prim •00CE<$[3]; $[3]; $[]> (_t1053, dPos0AC1);
      time0AC2 = prim /0055 (_t104F, _t1054);
      face0AC3 = 3;
    }
  }
  int _t1055 = -1;
  bool _t1056 = prim !=0086 (face0AC3, _t1055);
  real _t1057 = 0.1e1;
  real _t1058 = 0.1e-7;
  real _t1059 = prim +0017<$[]> (_t1057, _t1058);
  real _t105A = 0.1e1;
  real _t105B = 0.1e1;
  real _t105C = 0.1e1;
  vec3 _t105D = [_t105A, _t105B, _t105C];
  real _t105E = 0.e0;
  real _t105F = prim max0125 (time0AC2, _t105E);
  vec3 _t1060 = prim *0038<$[3]> (dPos0AC1, _t105F);
  vec3 _t1061 = prim +0017<$[3]> (refPos0AC0, _t1060);
  real _t1062 = prim •00CE<$[3]; $[3]; $[]> (_t105D, _t1061);
  bool _t1063 = prim >0080 (_t1059, _t1062);
  real _t1064 = 0.1e-7;
  real _t1065 = 0.1e-7;
  real _t1066 = 0.1e-7;
  vec3 _t1067 = [_t1064, _t1065, _t1066];
  real _t1068 = 0.e0;
  real _t1069 = prim max0125 (time0AC2, _t1068);
  vec3 _t106A = prim *0038<$[3]> (dPos0AC1, _t1069);
  vec3 _t106B = prim +0017<$[3]> (refPos0AC0, _t106A);
  vec3 _t106C = prim +0017<$[3]> (_t1067, _t106B);
  real _t106D = _t106C[0];
  real _t106E = -0.e0;
  bool _t106F = prim >0080 (_t106D, _t106E);
  real _t1070 = 0.1e-7;
  real _t1071 = 0.1e-7;
  real _t1072 = 0.1e-7;
  vec3 _t1073 = [_t1070, _t1071, _t1072];
  real _t1074 = 0.e0;
  real _t1075 = prim max0125 (time0AC2, _t1074);
  vec3 _t1076 = prim *0038<$[3]> (dPos0AC1, _t1075);
  vec3 _t1077 = prim +0017<$[3]> (refPos0AC0, _t1076);
  vec3 _t1078 = prim +0017<$[3]> (_t1073, _t1077);
  real _t1079 = _t1078[1];
  real _t107A = -0.e0;
  bool _t107B = prim >0080 (_t1079, _t107A);
  real _t107C = 0.1e-7;
  real _t107D = 0.1e-7;
  real _t107E = 0.1e-7;
  vec3 _t107F = [_t107C, _t107D, _t107E];
  real _t1080 = 0.e0;
  real _t1081 = prim max0125 (time0AC2, _t1080);
  vec3 _t1082 = prim *0038<$[3]> (dPos0AC1, _t1081);
  vec3 _t1083 = prim +0017<$[3]> (refPos0AC0, _t1082);
  vec3 _t1084 = prim +0017<$[3]> (_t107F, _t1083);
  real _t1085 = _t1084[2];
  real _t1086 = -0.e0;
  bool _t1087 = prim >0080 (_t1085, _t1086);
  bool _t1088 = prim $and01C4 (_t107B, _t1087);
  bool _t1089 = prim $and01C4 (_t106F, _t1088);
  bool _t108A = prim $and01C4 (_t1063, _t1089);
  bool _t108B = prim $and01C4 (_t1056, _t108A);
  if _t108B {
    string _t108C = "\nReturning via standard : ";
    real _t108D = 0.e0;
    real _t108E = prim max0125 (time0AC2, _t108D);
    real _t108F = (real)face0AC3;
    vec2 _t1090 = [_t108E, _t108F];
    string _t1091 = "\n";
    print (_t108C, _t1090, _t1091);
    real _t1092 = 0.e0;
    real _t1093 = prim max0125 (time0AC2, _t1092);
    real _t1094 = (real)face0AC3;
    vec2 _t1095 = [_t1093, _t1094];
    return _t1095;
  } else {
    real _t1096 = -0.1e1;
    real _t1097 = -0.1e1;
    vec2 _t1098 = [_t1096, _t1097];
    return _t1098;
  }
}
function vec2#2 _exit1099 (vec3 refPos0AC0, vec3 dPos0AC1, int i109A)
{
  real time109B = +inf;
  int face109C = -1;
  real faceTime109D = -inf;
  string _t109E = "\ntest :";
  real _t109F = 0.57735026919e0;
  real _t10A0 = 0.57735026919e0;
  real _t10A1 = 0.57735026919e0;
  real _t10A2 = 0.57735026919e0;
  vec3 _t10A3 = [_t10A0, _t10A1, _t10A2];
  real _t10A4 = prim •00CE<$[3]; $[3]; $[]> (_t10A3, refPos0AC0);
  real _t10A5 = prim -0026<$[]> (_t109F, _t10A4);
  real _t10A6 = 0.57735026919e0;
  real _t10A7 = 0.57735026919e0;
  real _t10A8 = 0.57735026919e0;
  vec3 _t10A9 = [_t10A6, _t10A7, _t10A8];
  real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, dPos0AC1);
  real _t10AB = prim /0055 (_t10A5, _t10AA);
  string _t10AC = " test2: ";
  real _t10AD = 0.57735026919e0;
  real _t10AE = 0.57735026919e0;
  real _t10AF = 0.57735026919e0;
  vec3 _t10B0 = [_t10AD, _t10AE, _t10AF];
  real _t10B1 = prim •00CE<$[3]; $[3]; $[]> (_t10B0, dPos0AC1);
  string _t10B2 = " insideTest: ";
  real _t10B3 = 0.1e1;
  real _t10B4 = 0.1e-7;
  real _t10B5 = prim +0017<$[]> (_t10B3, _t10B4);
  real _t10B6 = 0.1e1;
  real _t10B7 = 0.1e1;
  real _t10B8 = 0.1e1;
  vec3 _t10B9 = [_t10B6, _t10B7, _t10B8];
  real _t10BA = 0.57735026919e0;
  real _t10BB = 0.57735026919e0;
  real _t10BC = 0.57735026919e0;
  real _t10BD = 0.57735026919e0;
  vec3 _t10BE = [_t10BB, _t10BC, _t10BD];
  real _t10BF = prim •00CE<$[3]; $[3]; $[]> (_t10BE, refPos0AC0);
  real _t10C0 = prim -0026<$[]> (_t10BA, _t10BF);
  real _t10C1 = 0.57735026919e0;
  real _t10C2 = 0.57735026919e0;
  real _t10C3 = 0.57735026919e0;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, dPos0AC1);
  real _t10C6 = prim /0055 (_t10C0, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0AC1, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0AC0, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10B9, _t10C8);
  bool _t10CA = prim >0080 (_t10B5, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.57735026919e0;
  real _t10D0 = 0.57735026919e0;
  real _t10D1 = 0.57735026919e0;
  real _t10D2 = 0.57735026919e0;
  vec3 _t10D3 = [_t10D0, _t10D1, _t10D2];
  real _t10D4 = prim •00CE<$[3]; $[3]; $[]> (_t10D3, refPos0AC0);
  real _t10D5 = prim -0026<$[]> (_t10CF, _t10D4);
  real _t10D6 = 0.57735026919e0;
  real _t10D7 = 0.57735026919e0;
  real _t10D8 = 0.57735026919e0;
  vec3 _t10D9 = [_t10D6, _t10D7, _t10D8];
  real _t10DA = prim •00CE<$[3]; $[3]; $[]> (_t10D9, dPos0AC1);
  real _t10DB = prim /0055 (_t10D5, _t10DA);
  vec3 _t10DC = prim *0038<$[3]> (dPos0AC1, _t10DB);
  vec3 _t10DD = prim +0017<$[3]> (refPos0AC0, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (_t10CE, _t10DD);
  real _t10DF = _t10DE[0];
  real _t10E0 = -0.e0;
  bool _t10E1 = prim >0080 (_t10DF, _t10E0);
  real _t10E2 = 0.1e-7;
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  vec3 _t10E5 = [_t10E2, _t10E3, _t10E4];
  real _t10E6 = 0.57735026919e0;
  real _t10E7 = 0.57735026919e0;
  real _t10E8 = 0.57735026919e0;
  real _t10E9 = 0.57735026919e0;
  vec3 _t10EA = [_t10E7, _t10E8, _t10E9];
  real _t10EB = prim •00CE<$[3]; $[3]; $[]> (_t10EA, refPos0AC0);
  real _t10EC = prim -0026<$[]> (_t10E6, _t10EB);
  real _t10ED = 0.57735026919e0;
  real _t10EE = 0.57735026919e0;
  real _t10EF = 0.57735026919e0;
  vec3 _t10F0 = [_t10ED, _t10EE, _t10EF];
  real _t10F1 = prim •00CE<$[3]; $[3]; $[]> (_t10F0, dPos0AC1);
  real _t10F2 = prim /0055 (_t10EC, _t10F1);
  vec3 _t10F3 = prim *0038<$[3]> (dPos0AC1, _t10F2);
  vec3 _t10F4 = prim +0017<$[3]> (refPos0AC0, _t10F3);
  vec3 _t10F5 = prim +0017<$[3]> (_t10E5, _t10F4);
  real _t10F6 = _t10F5[1];
  real _t10F7 = -0.e0;
  bool _t10F8 = prim >0080 (_t10F6, _t10F7);
  real _t10F9 = 0.1e-7;
  real _t10FA = 0.1e-7;
  real _t10FB = 0.1e-7;
  vec3 _t10FC = [_t10F9, _t10FA, _t10FB];
  real _t10FD = 0.57735026919e0;
  real _t10FE = 0.57735026919e0;
  real _t10FF = 0.57735026919e0;
  real _t1100 = 0.57735026919e0;
  vec3 _t1101 = [_t10FE, _t10FF, _t1100];
  real _t1102 = prim •00CE<$[3]; $[3]; $[]> (_t1101, refPos0AC0);
  real _t1103 = prim -0026<$[]> (_t10FD, _t1102);
  real _t1104 = 0.57735026919e0;
  real _t1105 = 0.57735026919e0;
  real _t1106 = 0.57735026919e0;
  vec3 _t1107 = [_t1104, _t1105, _t1106];
  real _t1108 = prim •00CE<$[3]; $[3]; $[]> (_t1107, dPos0AC1);
  real _t1109 = prim /0055 (_t1103, _t1108);
  vec3 _t110A = prim *0038<$[3]> (dPos0AC1, _t1109);
  vec3 _t110B = prim +0017<$[3]> (refPos0AC0, _t110A);
  vec3 _t110C = prim +0017<$[3]> (_t10FC, _t110B);
  real _t110D = _t110C[2];
  real _t110E = -0.e0;
  bool _t110F = prim >0080 (_t110D, _t110E);
  bool _t1110 = prim $and01C4 (_t10F8, _t110F);
  bool _t1111 = prim $and01C4 (_t10E1, _t1110);
  bool _t1112 = prim $and01C4 (_t10CA, _t1111);
  string _t1113 = " dist: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  real _t1117 = 0.57735026919e0;
  vec3 _t1118 = [_t1115, _t1116, _t1117];
  real _t1119 = prim •00CE<$[3]; $[3]; $[]> (_t1118, refPos0AC0);
  real _t111A = prim -0026<$[]> (_t1114, _t1119);
  real _t111B = prim |()|00B5<$[]> (_t111A);
  string _t111C = "signed dist: ";
  real _t111D = 0.57735026919e0;
  real _t111E = 0.57735026919e0;
  real _t111F = 0.57735026919e0;
  real _t1120 = 0.57735026919e0;
  vec3 _t1121 = [_t111E, _t111F, _t1120];
  real _t1122 = prim •00CE<$[3]; $[3]; $[]> (_t1121, refPos0AC0);
  real _t1123 = prim -0026<$[]> (_t111D, _t1122);
  string _t1124 = " face: ";
  int _t1125 = 0;
  string _t1126 = " place: ";
  real _t1127 = 0.57735026919e0;
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, refPos0AC0);
  real _t112D = prim -0026<$[]> (_t1127, _t112C);
  real _t112E = 0.57735026919e0;
  real _t112F = 0.57735026919e0;
  real _t1130 = 0.57735026919e0;
  vec3 _t1131 = [_t112E, _t112F, _t1130];
  real _t1132 = prim •00CE<$[3]; $[3]; $[]> (_t1131, dPos0AC1);
  real _t1133 = prim /0055 (_t112D, _t1132);
  vec3 _t1134 = prim *0038<$[3]> (dPos0AC1, _t1133);
  vec3 _t1135 = prim +0017<$[3]> (refPos0AC0, _t1134);
  string _t1136 = " error: ";
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  real _t113A = 0.57735026919e0;
  vec3 _t113B = [_t1138, _t1139, _t113A];
  real _t113C = 0.57735026919e0;
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, refPos0AC0);
  real _t1142 = prim -0026<$[]> (_t113C, _t1141);
  real _t1143 = 0.57735026919e0;
  real _t1144 = 0.57735026919e0;
  real _t1145 = 0.57735026919e0;
  vec3 _t1146 = [_t1143, _t1144, _t1145];
  real _t1147 = prim •00CE<$[3]; $[3]; $[]> (_t1146, dPos0AC1);
  real _t1148 = prim /0055 (_t1142, _t1147);
  vec3 _t1149 = prim *0038<$[3]> (dPos0AC1, _t1148);
  vec3 _t114A = prim +0017<$[3]> (refPos0AC0, _t1149);
  real _t114B = prim •00CE<$[3]; $[3]; $[]> (_t113B, _t114A);
  real _t114C = prim -0026<$[]> (_t1137, _t114B);
  real _t114D = prim |()|00B5<$[]> (_t114C);
  string _t114E = " offset :";
  string _t114F = " dp: ";
  string _t1150 = " otherPossibleTime: ";
  string _t1151 = "\n";
  string _t1152 = "\n original face: ";
  string _t1153 = " ";
  print (_t109E, _t10AB, _t10AC, _t10B1, _t10B2, _t1112, _t1113, _t111B, _t111C, _t1123, _t1124, _t1125, _t1126, _t1135, _t1136, _t114D, _t114E, refPos0AC0, _t114F, dPos0AC1, _t1150, faceTime109D, _t1151, _t1152, i109A, _t1153);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  real _t1157 = 0.57735026919e0;
  vec3 _t1158 = [_t1155, _t1156, _t1157];
  real _t1159 = prim •00CE<$[3]; $[3]; $[]> (_t1158, refPos0AC0);
  real _t115A = prim -0026<$[]> (_t1154, _t1159);
  real _t115B = 0.57735026919e0;
  real _t115C = 0.57735026919e0;
  real _t115D = 0.57735026919e0;
  vec3 _t115E = [_t115B, _t115C, _t115D];
  real _t115F = prim •00CE<$[3]; $[3]; $[]> (_t115E, dPos0AC1);
  real _t1160 = prim /0055 (_t115A, _t115F);
  real _t1161 = -0.1e-7;
  bool _t1162 = prim >=007E (_t1160, _t1161);
  real _t1163 = 0.57735026919e0;
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  vec3 _t1167 = [_t1164, _t1165, _t1166];
  real _t1168 = prim •00CE<$[3]; $[3]; $[]> (_t1167, refPos0AC0);
  real _t1169 = prim -0026<$[]> (_t1163, _t1168);
  real _t116A = 0.57735026919e0;
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  vec3 _t116D = [_t116A, _t116B, _t116C];
  real _t116E = prim •00CE<$[3]; $[3]; $[]> (_t116D, dPos0AC1);
  real _t116F = prim /0055 (_t1169, _t116E);
  bool _t1170 = prim >0080 (time109B, _t116F);
  real _t1171 = 0.57735026919e0;
  real _t1172 = 0.57735026919e0;
  real _t1173 = 0.57735026919e0;
  vec3 _t1174 = [_t1171, _t1172, _t1173];
  real _t1175 = prim •00CE<$[3]; $[3]; $[]> (_t1174, dPos0AC1);
  real _t1176 = prim |()|00B5<$[]> (_t1175);
  real _t1177 = 0.1e-7;
  bool _t1178 = prim >=007E (_t1176, _t1177);
  bool _t1179 = prim $and01C4 (_t1170, _t1178);
  bool _t117A = prim $and01C4 (_t1162, _t1179);
  if _t117A {
    int _t117B = 0;
    bool _t117C = prim !=0086 (i109A, _t117B);
    if _t117C {
      string _t117D = "Saving at this face!";
      real _t117E = 0.57735026919e0;
      real _t117F = 0.57735026919e0;
      real _t1180 = 0.57735026919e0;
      real _t1181 = 0.57735026919e0;
      vec3 _t1182 = [_t117F, _t1180, _t1181];
      real _t1183 = prim •00CE<$[3]; $[3]; $[]> (_t1182, refPos0AC0);
      real _t1184 = prim -0026<$[]> (_t117E, _t1183);
      real _t1185 = 0.57735026919e0;
      real _t1186 = 0.57735026919e0;
      real _t1187 = 0.57735026919e0;
      vec3 _t1188 = [_t1185, _t1186, _t1187];
      real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, dPos0AC1);
      real _t118A = prim /0055 (_t1184, _t1189);
      real _t118B = 0.57735026919e0;
      real _t118C = 0.57735026919e0;
      real _t118D = 0.57735026919e0;
      real _t118E = 0.57735026919e0;
      vec3 _t118F = [_t118C, _t118D, _t118E];
      real _t1190 = prim •00CE<$[3]; $[3]; $[]> (_t118F, refPos0AC0);
      real _t1191 = prim -0026<$[]> (_t118B, _t1190);
      real _t1192 = 0.57735026919e0;
      real _t1193 = 0.57735026919e0;
      real _t1194 = 0.57735026919e0;
      vec3 _t1195 = [_t1192, _t1193, _t1194];
      real _t1196 = prim •00CE<$[3]; $[3]; $[]> (_t1195, dPos0AC1);
      real _t1197 = prim /0055 (_t1191, _t1196);
      bool _t1198 = prim >0080 (time109B, _t1197);
      string _t1199 = "\n";
      print (_t117D, _t118A, _t1198, _t1199);
      real _t119A = 0.57735026919e0;
      real _t119B = 0.57735026919e0;
      real _t119C = 0.57735026919e0;
      real _t119D = 0.57735026919e0;
      vec3 _t119E = [_t119B, _t119C, _t119D];
      real _t119F = prim •00CE<$[3]; $[3]; $[]> (_t119E, refPos0AC0);
      real _t11A0 = prim -0026<$[]> (_t119A, _t119F);
      real _t11A1 = 0.57735026919e0;
      real _t11A2 = 0.57735026919e0;
      real _t11A3 = 0.57735026919e0;
      vec3 _t11A4 = [_t11A1, _t11A2, _t11A3];
      real _t11A5 = prim •00CE<$[3]; $[3]; $[]> (_t11A4, dPos0AC1);
      time109B = prim /0055 (_t11A0, _t11A5);
      face109C = 0;
    } else {
      real _t11A6 = 0.57735026919e0;
      real _t11A7 = 0.57735026919e0;
      real _t11A8 = 0.57735026919e0;
      real _t11A9 = 0.57735026919e0;
      vec3 _t11AA = [_t11A7, _t11A8, _t11A9];
      real _t11AB = prim •00CE<$[3]; $[3]; $[]> (_t11AA, refPos0AC0);
      real _t11AC = prim -0026<$[]> (_t11A6, _t11AB);
      real _t11AD = 0.57735026919e0;
      real _t11AE = 0.57735026919e0;
      real _t11AF = 0.57735026919e0;
      vec3 _t11B0 = [_t11AD, _t11AE, _t11AF];
      real _t11B1 = prim •00CE<$[3]; $[3]; $[]> (_t11B0, dPos0AC1);
      faceTime109D = prim /0055 (_t11AC, _t11B1);
      string _t11B2 = "Saving backup time: ";
      string _t11B3 = "\n";
      print (_t11B2, faceTime109D, _t11B3);
    }
  }
  string _t11B4 = "\ntest :";
  real _t11B5 = 0.e0;
  real _t11B6 = -0.1e1;
  real _t11B7 = 0.e0;
  real _t11B8 = 0.e0;
  vec3 _t11B9 = [_t11B6, _t11B7, _t11B8];
  real _t11BA = prim •00CE<$[3]; $[3]; $[]> (_t11B9, refPos0AC0);
  real _t11BB = prim -0026<$[]> (_t11B5, _t11BA);
  real _t11BC = -0.1e1;
  real _t11BD = 0.e0;
  real _t11BE = 0.e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, dPos0AC1);
  real _t11C1 = prim /0055 (_t11BB, _t11C0);
  string _t11C2 = " test2: ";
  real _t11C3 = -0.1e1;
  real _t11C4 = 0.e0;
  real _t11C5 = 0.e0;
  vec3 _t11C6 = [_t11C3, _t11C4, _t11C5];
  real _t11C7 = prim •00CE<$[3]; $[3]; $[]> (_t11C6, dPos0AC1);
  string _t11C8 = " insideTest: ";
  real _t11C9 = 0.1e1;
  real _t11CA = 0.1e-7;
  real _t11CB = prim +0017<$[]> (_t11C9, _t11CA);
  real _t11CC = 0.1e1;
  real _t11CD = 0.1e1;
  real _t11CE = 0.1e1;
  vec3 _t11CF = [_t11CC, _t11CD, _t11CE];
  real _t11D0 = 0.e0;
  real _t11D1 = -0.1e1;
  real _t11D2 = 0.e0;
  real _t11D3 = 0.e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, refPos0AC0);
  real _t11D6 = prim -0026<$[]> (_t11D0, _t11D5);
  real _t11D7 = -0.1e1;
  real _t11D8 = 0.e0;
  real _t11D9 = 0.e0;
  vec3 _t11DA = [_t11D7, _t11D8, _t11D9];
  real _t11DB = prim •00CE<$[3]; $[3]; $[]> (_t11DA, dPos0AC1);
  real _t11DC = prim /0055 (_t11D6, _t11DB);
  vec3 _t11DD = prim *0038<$[3]> (dPos0AC1, _t11DC);
  vec3 _t11DE = prim +0017<$[3]> (refPos0AC0, _t11DD);
  real _t11DF = prim •00CE<$[3]; $[3]; $[]> (_t11CF, _t11DE);
  bool _t11E0 = prim >0080 (_t11CB, _t11DF);
  real _t11E1 = 0.1e-7;
  real _t11E2 = 0.1e-7;
  real _t11E3 = 0.1e-7;
  vec3 _t11E4 = [_t11E1, _t11E2, _t11E3];
  real _t11E5 = 0.e0;
  real _t11E6 = -0.1e1;
  real _t11E7 = 0.e0;
  real _t11E8 = 0.e0;
  vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
  real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0AC0);
  real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
  real _t11EC = -0.1e1;
  real _t11ED = 0.e0;
  real _t11EE = 0.e0;
  vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
  real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0AC1);
  real _t11F1 = prim /0055 (_t11EB, _t11F0);
  vec3 _t11F2 = prim *0038<$[3]> (dPos0AC1, _t11F1);
  vec3 _t11F3 = prim +0017<$[3]> (refPos0AC0, _t11F2);
  vec3 _t11F4 = prim +0017<$[3]> (_t11E4, _t11F3);
  real _t11F5 = _t11F4[0];
  real _t11F6 = -0.e0;
  bool _t11F7 = prim >0080 (_t11F5, _t11F6);
  real _t11F8 = 0.1e-7;
  real _t11F9 = 0.1e-7;
  real _t11FA = 0.1e-7;
  vec3 _t11FB = [_t11F8, _t11F9, _t11FA];
  real _t11FC = 0.e0;
  real _t11FD = -0.1e1;
  real _t11FE = 0.e0;
  real _t11FF = 0.e0;
  vec3 _t1200 = [_t11FD, _t11FE, _t11FF];
  real _t1201 = prim •00CE<$[3]; $[3]; $[]> (_t1200, refPos0AC0);
  real _t1202 = prim -0026<$[]> (_t11FC, _t1201);
  real _t1203 = -0.1e1;
  real _t1204 = 0.e0;
  real _t1205 = 0.e0;
  vec3 _t1206 = [_t1203, _t1204, _t1205];
  real _t1207 = prim •00CE<$[3]; $[3]; $[]> (_t1206, dPos0AC1);
  real _t1208 = prim /0055 (_t1202, _t1207);
  vec3 _t1209 = prim *0038<$[3]> (dPos0AC1, _t1208);
  vec3 _t120A = prim +0017<$[3]> (refPos0AC0, _t1209);
  vec3 _t120B = prim +0017<$[3]> (_t11FB, _t120A);
  real _t120C = _t120B[1];
  real _t120D = -0.e0;
  bool _t120E = prim >0080 (_t120C, _t120D);
  real _t120F = 0.1e-7;
  real _t1210 = 0.1e-7;
  real _t1211 = 0.1e-7;
  vec3 _t1212 = [_t120F, _t1210, _t1211];
  real _t1213 = 0.e0;
  real _t1214 = -0.1e1;
  real _t1215 = 0.e0;
  real _t1216 = 0.e0;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos0AC0);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = -0.1e1;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos0AC1);
  real _t121F = prim /0055 (_t1219, _t121E);
  vec3 _t1220 = prim *0038<$[3]> (dPos0AC1, _t121F);
  vec3 _t1221 = prim +0017<$[3]> (refPos0AC0, _t1220);
  vec3 _t1222 = prim +0017<$[3]> (_t1212, _t1221);
  real _t1223 = _t1222[2];
  real _t1224 = -0.e0;
  bool _t1225 = prim >0080 (_t1223, _t1224);
  bool _t1226 = prim $and01C4 (_t120E, _t1225);
  bool _t1227 = prim $and01C4 (_t11F7, _t1226);
  bool _t1228 = prim $and01C4 (_t11E0, _t1227);
  string _t1229 = " dist: ";
  real _t122A = 0.e0;
  real _t122B = -0.1e1;
  real _t122C = 0.e0;
  real _t122D = 0.e0;
  vec3 _t122E = [_t122B, _t122C, _t122D];
  real _t122F = prim •00CE<$[3]; $[3]; $[]> (_t122E, refPos0AC0);
  real _t1230 = prim -0026<$[]> (_t122A, _t122F);
  real _t1231 = prim |()|00B5<$[]> (_t1230);
  string _t1232 = "signed dist: ";
  real _t1233 = 0.e0;
  real _t1234 = -0.1e1;
  real _t1235 = 0.e0;
  real _t1236 = 0.e0;
  vec3 _t1237 = [_t1234, _t1235, _t1236];
  real _t1238 = prim •00CE<$[3]; $[3]; $[]> (_t1237, refPos0AC0);
  real _t1239 = prim -0026<$[]> (_t1233, _t1238);
  string _t123A = " face: ";
  int _t123B = 1;
  string _t123C = " place: ";
  real _t123D = 0.e0;
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, refPos0AC0);
  real _t1243 = prim -0026<$[]> (_t123D, _t1242);
  real _t1244 = -0.1e1;
  real _t1245 = 0.e0;
  real _t1246 = 0.e0;
  vec3 _t1247 = [_t1244, _t1245, _t1246];
  real _t1248 = prim •00CE<$[3]; $[3]; $[]> (_t1247, dPos0AC1);
  real _t1249 = prim /0055 (_t1243, _t1248);
  vec3 _t124A = prim *0038<$[3]> (dPos0AC1, _t1249);
  vec3 _t124B = prim +0017<$[3]> (refPos0AC0, _t124A);
  string _t124C = " error: ";
  real _t124D = 0.e0;
  real _t124E = -0.1e1;
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  vec3 _t1251 = [_t124E, _t124F, _t1250];
  real _t1252 = 0.e0;
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos0AC0);
  real _t1258 = prim -0026<$[]> (_t1252, _t1257);
  real _t1259 = -0.1e1;
  real _t125A = 0.e0;
  real _t125B = 0.e0;
  vec3 _t125C = [_t1259, _t125A, _t125B];
  real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos0AC1);
  real _t125E = prim /0055 (_t1258, _t125D);
  vec3 _t125F = prim *0038<$[3]> (dPos0AC1, _t125E);
  vec3 _t1260 = prim +0017<$[3]> (refPos0AC0, _t125F);
  real _t1261 = prim •00CE<$[3]; $[3]; $[]> (_t1251, _t1260);
  real _t1262 = prim -0026<$[]> (_t124D, _t1261);
  real _t1263 = prim |()|00B5<$[]> (_t1262);
  string _t1264 = " offset :";
  string _t1265 = " dp: ";
  string _t1266 = " otherPossibleTime: ";
  string _t1267 = "\n";
  string _t1268 = "\n original face: ";
  string _t1269 = " ";
  print (_t11B4, _t11C1, _t11C2, _t11C7, _t11C8, _t1228, _t1229, _t1231, _t1232, _t1239, _t123A, _t123B, _t123C, _t124B, _t124C, _t1263, _t1264, refPos0AC0, _t1265, dPos0AC1, _t1266, faceTime109D, _t1267, _t1268, i109A, _t1269);
  real _t126A = 0.e0;
  real _t126B = -0.1e1;
  real _t126C = 0.e0;
  real _t126D = 0.e0;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, refPos0AC0);
  real _t1270 = prim -0026<$[]> (_t126A, _t126F);
  real _t1271 = -0.1e1;
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  vec3 _t1274 = [_t1271, _t1272, _t1273];
  real _t1275 = prim •00CE<$[3]; $[3]; $[]> (_t1274, dPos0AC1);
  real _t1276 = prim /0055 (_t1270, _t1275);
  real _t1277 = -0.1e-7;
  bool _t1278 = prim >=007E (_t1276, _t1277);
  real _t1279 = 0.e0;
  real _t127A = -0.1e1;
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  vec3 _t127D = [_t127A, _t127B, _t127C];
  real _t127E = prim •00CE<$[3]; $[3]; $[]> (_t127D, refPos0AC0);
  real _t127F = prim -0026<$[]> (_t1279, _t127E);
  real _t1280 = -0.1e1;
  real _t1281 = 0.e0;
  real _t1282 = 0.e0;
  vec3 _t1283 = [_t1280, _t1281, _t1282];
  real _t1284 = prim •00CE<$[3]; $[3]; $[]> (_t1283, dPos0AC1);
  real _t1285 = prim /0055 (_t127F, _t1284);
  bool _t1286 = prim >0080 (time109B, _t1285);
  real _t1287 = -0.1e1;
  real _t1288 = 0.e0;
  real _t1289 = 0.e0;
  vec3 _t128A = [_t1287, _t1288, _t1289];
  real _t128B = prim •00CE<$[3]; $[3]; $[]> (_t128A, dPos0AC1);
  real _t128C = prim |()|00B5<$[]> (_t128B);
  real _t128D = 0.1e-7;
  bool _t128E = prim >=007E (_t128C, _t128D);
  bool _t128F = prim $and01C4 (_t1286, _t128E);
  bool _t1290 = prim $and01C4 (_t1278, _t128F);
  if _t1290 {
    int _t1291 = 1;
    bool _t1292 = prim !=0086 (i109A, _t1291);
    if _t1292 {
      string _t1293 = "Saving at this face!";
      real _t1294 = 0.e0;
      real _t1295 = -0.1e1;
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      vec3 _t1298 = [_t1295, _t1296, _t1297];
      real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos0AC0);
      real _t129A = prim -0026<$[]> (_t1294, _t1299);
      real _t129B = -0.1e1;
      real _t129C = 0.e0;
      real _t129D = 0.e0;
      vec3 _t129E = [_t129B, _t129C, _t129D];
      real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos0AC1);
      real _t12A0 = prim /0055 (_t129A, _t129F);
      real _t12A1 = 0.e0;
      real _t12A2 = -0.1e1;
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
      real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, refPos0AC0);
      real _t12A7 = prim -0026<$[]> (_t12A1, _t12A6);
      real _t12A8 = -0.1e1;
      real _t12A9 = 0.e0;
      real _t12AA = 0.e0;
      vec3 _t12AB = [_t12A8, _t12A9, _t12AA];
      real _t12AC = prim •00CE<$[3]; $[3]; $[]> (_t12AB, dPos0AC1);
      real _t12AD = prim /0055 (_t12A7, _t12AC);
      bool _t12AE = prim >0080 (time109B, _t12AD);
      string _t12AF = "\n";
      print (_t1293, _t12A0, _t12AE, _t12AF);
      real _t12B0 = 0.e0;
      real _t12B1 = -0.1e1;
      real _t12B2 = 0.e0;
      real _t12B3 = 0.e0;
      vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
      real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, refPos0AC0);
      real _t12B6 = prim -0026<$[]> (_t12B0, _t12B5);
      real _t12B7 = -0.1e1;
      real _t12B8 = 0.e0;
      real _t12B9 = 0.e0;
      vec3 _t12BA = [_t12B7, _t12B8, _t12B9];
      real _t12BB = prim •00CE<$[3]; $[3]; $[]> (_t12BA, dPos0AC1);
      time109B = prim /0055 (_t12B6, _t12BB);
      face109C = 1;
    } else {
      real _t12BC = 0.e0;
      real _t12BD = -0.1e1;
      real _t12BE = 0.e0;
      real _t12BF = 0.e0;
      vec3 _t12C0 = [_t12BD, _t12BE, _t12BF];
      real _t12C1 = prim •00CE<$[3]; $[3]; $[]> (_t12C0, refPos0AC0);
      real _t12C2 = prim -0026<$[]> (_t12BC, _t12C1);
      real _t12C3 = -0.1e1;
      real _t12C4 = 0.e0;
      real _t12C5 = 0.e0;
      vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
      real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, dPos0AC1);
      faceTime109D = prim /0055 (_t12C2, _t12C7);
      string _t12C8 = "Saving backup time: ";
      string _t12C9 = "\n";
      print (_t12C8, faceTime109D, _t12C9);
    }
  }
  string _t12CA = "\ntest :";
  real _t12CB = 0.e0;
  real _t12CC = 0.e0;
  real _t12CD = -0.1e1;
  real _t12CE = 0.e0;
  vec3 _t12CF = [_t12CC, _t12CD, _t12CE];
  real _t12D0 = prim •00CE<$[3]; $[3]; $[]> (_t12CF, refPos0AC0);
  real _t12D1 = prim -0026<$[]> (_t12CB, _t12D0);
  real _t12D2 = 0.e0;
  real _t12D3 = -0.1e1;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, dPos0AC1);
  real _t12D7 = prim /0055 (_t12D1, _t12D6);
  string _t12D8 = " test2: ";
  real _t12D9 = 0.e0;
  real _t12DA = -0.1e1;
  real _t12DB = 0.e0;
  vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
  real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, dPos0AC1);
  string _t12DE = " insideTest: ";
  real _t12DF = 0.1e1;
  real _t12E0 = 0.1e-7;
  real _t12E1 = prim +0017<$[]> (_t12DF, _t12E0);
  real _t12E2 = 0.1e1;
  real _t12E3 = 0.1e1;
  real _t12E4 = 0.1e1;
  vec3 _t12E5 = [_t12E2, _t12E3, _t12E4];
  real _t12E6 = 0.e0;
  real _t12E7 = 0.e0;
  real _t12E8 = -0.1e1;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, refPos0AC0);
  real _t12EC = prim -0026<$[]> (_t12E6, _t12EB);
  real _t12ED = 0.e0;
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  vec3 _t12F0 = [_t12ED, _t12EE, _t12EF];
  real _t12F1 = prim •00CE<$[3]; $[3]; $[]> (_t12F0, dPos0AC1);
  real _t12F2 = prim /0055 (_t12EC, _t12F1);
  vec3 _t12F3 = prim *0038<$[3]> (dPos0AC1, _t12F2);
  vec3 _t12F4 = prim +0017<$[3]> (refPos0AC0, _t12F3);
  real _t12F5 = prim •00CE<$[3]; $[3]; $[]> (_t12E5, _t12F4);
  bool _t12F6 = prim >0080 (_t12E1, _t12F5);
  real _t12F7 = 0.1e-7;
  real _t12F8 = 0.1e-7;
  real _t12F9 = 0.1e-7;
  vec3 _t12FA = [_t12F7, _t12F8, _t12F9];
  real _t12FB = 0.e0;
  real _t12FC = 0.e0;
  real _t12FD = -0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0AC0);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = -0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0AC1);
  real _t1307 = prim /0055 (_t1301, _t1306);
  vec3 _t1308 = prim *0038<$[3]> (dPos0AC1, _t1307);
  vec3 _t1309 = prim +0017<$[3]> (refPos0AC0, _t1308);
  vec3 _t130A = prim +0017<$[3]> (_t12FA, _t1309);
  real _t130B = _t130A[0];
  real _t130C = -0.e0;
  bool _t130D = prim >0080 (_t130B, _t130C);
  real _t130E = 0.1e-7;
  real _t130F = 0.1e-7;
  real _t1310 = 0.1e-7;
  vec3 _t1311 = [_t130E, _t130F, _t1310];
  real _t1312 = 0.e0;
  real _t1313 = 0.e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, refPos0AC0);
  real _t1318 = prim -0026<$[]> (_t1312, _t1317);
  real _t1319 = 0.e0;
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  vec3 _t131C = [_t1319, _t131A, _t131B];
  real _t131D = prim •00CE<$[3]; $[3]; $[]> (_t131C, dPos0AC1);
  real _t131E = prim /0055 (_t1318, _t131D);
  vec3 _t131F = prim *0038<$[3]> (dPos0AC1, _t131E);
  vec3 _t1320 = prim +0017<$[3]> (refPos0AC0, _t131F);
  vec3 _t1321 = prim +0017<$[3]> (_t1311, _t1320);
  real _t1322 = _t1321[1];
  real _t1323 = -0.e0;
  bool _t1324 = prim >0080 (_t1322, _t1323);
  real _t1325 = 0.1e-7;
  real _t1326 = 0.1e-7;
  real _t1327 = 0.1e-7;
  vec3 _t1328 = [_t1325, _t1326, _t1327];
  real _t1329 = 0.e0;
  real _t132A = 0.e0;
  real _t132B = -0.1e1;
  real _t132C = 0.e0;
  vec3 _t132D = [_t132A, _t132B, _t132C];
  real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, refPos0AC0);
  real _t132F = prim -0026<$[]> (_t1329, _t132E);
  real _t1330 = 0.e0;
  real _t1331 = -0.1e1;
  real _t1332 = 0.e0;
  vec3 _t1333 = [_t1330, _t1331, _t1332];
  real _t1334 = prim •00CE<$[3]; $[3]; $[]> (_t1333, dPos0AC1);
  real _t1335 = prim /0055 (_t132F, _t1334);
  vec3 _t1336 = prim *0038<$[3]> (dPos0AC1, _t1335);
  vec3 _t1337 = prim +0017<$[3]> (refPos0AC0, _t1336);
  vec3 _t1338 = prim +0017<$[3]> (_t1328, _t1337);
  real _t1339 = _t1338[2];
  real _t133A = -0.e0;
  bool _t133B = prim >0080 (_t1339, _t133A);
  bool _t133C = prim $and01C4 (_t1324, _t133B);
  bool _t133D = prim $and01C4 (_t130D, _t133C);
  bool _t133E = prim $and01C4 (_t12F6, _t133D);
  string _t133F = " dist: ";
  real _t1340 = 0.e0;
  real _t1341 = 0.e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  vec3 _t1344 = [_t1341, _t1342, _t1343];
  real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, refPos0AC0);
  real _t1346 = prim -0026<$[]> (_t1340, _t1345);
  real _t1347 = prim |()|00B5<$[]> (_t1346);
  string _t1348 = "signed dist: ";
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  real _t134B = -0.1e1;
  real _t134C = 0.e0;
  vec3 _t134D = [_t134A, _t134B, _t134C];
  real _t134E = prim •00CE<$[3]; $[3]; $[]> (_t134D, refPos0AC0);
  real _t134F = prim -0026<$[]> (_t1349, _t134E);
  string _t1350 = " face: ";
  int _t1351 = 2;
  string _t1352 = " place: ";
  real _t1353 = 0.e0;
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos0AC0);
  real _t1359 = prim -0026<$[]> (_t1353, _t1358);
  real _t135A = 0.e0;
  real _t135B = -0.1e1;
  real _t135C = 0.e0;
  vec3 _t135D = [_t135A, _t135B, _t135C];
  real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos0AC1);
  real _t135F = prim /0055 (_t1359, _t135E);
  vec3 _t1360 = prim *0038<$[3]> (dPos0AC1, _t135F);
  vec3 _t1361 = prim +0017<$[3]> (refPos0AC0, _t1360);
  string _t1362 = " error: ";
  real _t1363 = 0.e0;
  real _t1364 = 0.e0;
  real _t1365 = -0.1e1;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = 0.e0;
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos0AC0);
  real _t136E = prim -0026<$[]> (_t1368, _t136D);
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos0AC1);
  real _t1374 = prim /0055 (_t136E, _t1373);
  vec3 _t1375 = prim *0038<$[3]> (dPos0AC1, _t1374);
  vec3 _t1376 = prim +0017<$[3]> (refPos0AC0, _t1375);
  real _t1377 = prim •00CE<$[3]; $[3]; $[]> (_t1367, _t1376);
  real _t1378 = prim -0026<$[]> (_t1363, _t1377);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  string _t137A = " offset :";
  string _t137B = " dp: ";
  string _t137C = " otherPossibleTime: ";
  string _t137D = "\n";
  string _t137E = "\n original face: ";
  string _t137F = " ";
  print (_t12CA, _t12D7, _t12D8, _t12DD, _t12DE, _t133E, _t133F, _t1347, _t1348, _t134F, _t1350, _t1351, _t1352, _t1361, _t1362, _t1379, _t137A, refPos0AC0, _t137B, dPos0AC1, _t137C, faceTime109D, _t137D, _t137E, i109A, _t137F);
  real _t1380 = 0.e0;
  real _t1381 = 0.e0;
  real _t1382 = -0.1e1;
  real _t1383 = 0.e0;
  vec3 _t1384 = [_t1381, _t1382, _t1383];
  real _t1385 = prim •00CE<$[3]; $[3]; $[]> (_t1384, refPos0AC0);
  real _t1386 = prim -0026<$[]> (_t1380, _t1385);
  real _t1387 = 0.e0;
  real _t1388 = -0.1e1;
  real _t1389 = 0.e0;
  vec3 _t138A = [_t1387, _t1388, _t1389];
  real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, dPos0AC1);
  real _t138C = prim /0055 (_t1386, _t138B);
  real _t138D = -0.1e-7;
  bool _t138E = prim >=007E (_t138C, _t138D);
  real _t138F = 0.e0;
  real _t1390 = 0.e0;
  real _t1391 = -0.1e1;
  real _t1392 = 0.e0;
  vec3 _t1393 = [_t1390, _t1391, _t1392];
  real _t1394 = prim •00CE<$[3]; $[3]; $[]> (_t1393, refPos0AC0);
  real _t1395 = prim -0026<$[]> (_t138F, _t1394);
  real _t1396 = 0.e0;
  real _t1397 = -0.1e1;
  real _t1398 = 0.e0;
  vec3 _t1399 = [_t1396, _t1397, _t1398];
  real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, dPos0AC1);
  real _t139B = prim /0055 (_t1395, _t139A);
  bool _t139C = prim >0080 (time109B, _t139B);
  real _t139D = 0.e0;
  real _t139E = -0.1e1;
  real _t139F = 0.e0;
  vec3 _t13A0 = [_t139D, _t139E, _t139F];
  real _t13A1 = prim •00CE<$[3]; $[3]; $[]> (_t13A0, dPos0AC1);
  real _t13A2 = prim |()|00B5<$[]> (_t13A1);
  real _t13A3 = 0.1e-7;
  bool _t13A4 = prim >=007E (_t13A2, _t13A3);
  bool _t13A5 = prim $and01C4 (_t139C, _t13A4);
  bool _t13A6 = prim $and01C4 (_t138E, _t13A5);
  if _t13A6 {
    int _t13A7 = 2;
    bool _t13A8 = prim !=0086 (i109A, _t13A7);
    if _t13A8 {
      string _t13A9 = "Saving at this face!";
      real _t13AA = 0.e0;
      real _t13AB = 0.e0;
      real _t13AC = -0.1e1;
      real _t13AD = 0.e0;
      vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
      real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos0AC0);
      real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
      real _t13B1 = 0.e0;
      real _t13B2 = -0.1e1;
      real _t13B3 = 0.e0;
      vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
      real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos0AC1);
      real _t13B6 = prim /0055 (_t13B0, _t13B5);
      real _t13B7 = 0.e0;
      real _t13B8 = 0.e0;
      real _t13B9 = -0.1e1;
      real _t13BA = 0.e0;
      vec3 _t13BB = [_t13B8, _t13B9, _t13BA];
      real _t13BC = prim •00CE<$[3]; $[3]; $[]> (_t13BB, refPos0AC0);
      real _t13BD = prim -0026<$[]> (_t13B7, _t13BC);
      real _t13BE = 0.e0;
      real _t13BF = -0.1e1;
      real _t13C0 = 0.e0;
      vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
      real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos0AC1);
      real _t13C3 = prim /0055 (_t13BD, _t13C2);
      bool _t13C4 = prim >0080 (time109B, _t13C3);
      string _t13C5 = "\n";
      print (_t13A9, _t13B6, _t13C4, _t13C5);
      real _t13C6 = 0.e0;
      real _t13C7 = 0.e0;
      real _t13C8 = -0.1e1;
      real _t13C9 = 0.e0;
      vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
      real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, refPos0AC0);
      real _t13CC = prim -0026<$[]> (_t13C6, _t13CB);
      real _t13CD = 0.e0;
      real _t13CE = -0.1e1;
      real _t13CF = 0.e0;
      vec3 _t13D0 = [_t13CD, _t13CE, _t13CF];
      real _t13D1 = prim •00CE<$[3]; $[3]; $[]> (_t13D0, dPos0AC1);
      time109B = prim /0055 (_t13CC, _t13D1);
      face109C = 2;
    } else {
      real _t13D2 = 0.e0;
      real _t13D3 = 0.e0;
      real _t13D4 = -0.1e1;
      real _t13D5 = 0.e0;
      vec3 _t13D6 = [_t13D3, _t13D4, _t13D5];
      real _t13D7 = prim •00CE<$[3]; $[3]; $[]> (_t13D6, refPos0AC0);
      real _t13D8 = prim -0026<$[]> (_t13D2, _t13D7);
      real _t13D9 = 0.e0;
      real _t13DA = -0.1e1;
      real _t13DB = 0.e0;
      vec3 _t13DC = [_t13D9, _t13DA, _t13DB];
      real _t13DD = prim •00CE<$[3]; $[3]; $[]> (_t13DC, dPos0AC1);
      faceTime109D = prim /0055 (_t13D8, _t13DD);
      string _t13DE = "Saving backup time: ";
      string _t13DF = "\n";
      print (_t13DE, faceTime109D, _t13DF);
    }
  }
  string _t13E0 = "\ntest :";
  real _t13E1 = 0.e0;
  real _t13E2 = 0.e0;
  real _t13E3 = 0.e0;
  real _t13E4 = -0.1e1;
  vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
  real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, refPos0AC0);
  real _t13E7 = prim -0026<$[]> (_t13E1, _t13E6);
  real _t13E8 = 0.e0;
  real _t13E9 = 0.e0;
  real _t13EA = -0.1e1;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, dPos0AC1);
  real _t13ED = prim /0055 (_t13E7, _t13EC);
  string _t13EE = " test2: ";
  real _t13EF = 0.e0;
  real _t13F0 = 0.e0;
  real _t13F1 = -0.1e1;
  vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
  real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos0AC1);
  string _t13F4 = " insideTest: ";
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.1e-7;
  real _t13F7 = prim +0017<$[]> (_t13F5, _t13F6);
  real _t13F8 = 0.1e1;
  real _t13F9 = 0.1e1;
  real _t13FA = 0.1e1;
  vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
  real _t13FC = 0.e0;
  real _t13FD = 0.e0;
  real _t13FE = 0.e0;
  real _t13FF = -0.1e1;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, refPos0AC0);
  real _t1402 = prim -0026<$[]> (_t13FC, _t1401);
  real _t1403 = 0.e0;
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  vec3 _t1406 = [_t1403, _t1404, _t1405];
  real _t1407 = prim •00CE<$[3]; $[3]; $[]> (_t1406, dPos0AC1);
  real _t1408 = prim /0055 (_t1402, _t1407);
  vec3 _t1409 = prim *0038<$[3]> (dPos0AC1, _t1408);
  vec3 _t140A = prim +0017<$[3]> (refPos0AC0, _t1409);
  real _t140B = prim •00CE<$[3]; $[3]; $[]> (_t13FB, _t140A);
  bool _t140C = prim >0080 (_t13F7, _t140B);
  real _t140D = 0.1e-7;
  real _t140E = 0.1e-7;
  real _t140F = 0.1e-7;
  vec3 _t1410 = [_t140D, _t140E, _t140F];
  real _t1411 = 0.e0;
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = -0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0AC0);
  real _t1417 = prim -0026<$[]> (_t1411, _t1416);
  real _t1418 = 0.e0;
  real _t1419 = 0.e0;
  real _t141A = -0.1e1;
  vec3 _t141B = [_t1418, _t1419, _t141A];
  real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0AC1);
  real _t141D = prim /0055 (_t1417, _t141C);
  vec3 _t141E = prim *0038<$[3]> (dPos0AC1, _t141D);
  vec3 _t141F = prim +0017<$[3]> (refPos0AC0, _t141E);
  vec3 _t1420 = prim +0017<$[3]> (_t1410, _t141F);
  real _t1421 = _t1420[0];
  real _t1422 = -0.e0;
  bool _t1423 = prim >0080 (_t1421, _t1422);
  real _t1424 = 0.1e-7;
  real _t1425 = 0.1e-7;
  real _t1426 = 0.1e-7;
  vec3 _t1427 = [_t1424, _t1425, _t1426];
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = -0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, refPos0AC0);
  real _t142E = prim -0026<$[]> (_t1428, _t142D);
  real _t142F = 0.e0;
  real _t1430 = 0.e0;
  real _t1431 = -0.1e1;
  vec3 _t1432 = [_t142F, _t1430, _t1431];
  real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, dPos0AC1);
  real _t1434 = prim /0055 (_t142E, _t1433);
  vec3 _t1435 = prim *0038<$[3]> (dPos0AC1, _t1434);
  vec3 _t1436 = prim +0017<$[3]> (refPos0AC0, _t1435);
  vec3 _t1437 = prim +0017<$[3]> (_t1427, _t1436);
  real _t1438 = _t1437[1];
  real _t1439 = -0.e0;
  bool _t143A = prim >0080 (_t1438, _t1439);
  real _t143B = 0.1e-7;
  real _t143C = 0.1e-7;
  real _t143D = 0.1e-7;
  vec3 _t143E = [_t143B, _t143C, _t143D];
  real _t143F = 0.e0;
  real _t1440 = 0.e0;
  real _t1441 = 0.e0;
  real _t1442 = -0.1e1;
  vec3 _t1443 = [_t1440, _t1441, _t1442];
  real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, refPos0AC0);
  real _t1445 = prim -0026<$[]> (_t143F, _t1444);
  real _t1446 = 0.e0;
  real _t1447 = 0.e0;
  real _t1448 = -0.1e1;
  vec3 _t1449 = [_t1446, _t1447, _t1448];
  real _t144A = prim •00CE<$[3]; $[3]; $[]> (_t1449, dPos0AC1);
  real _t144B = prim /0055 (_t1445, _t144A);
  vec3 _t144C = prim *0038<$[3]> (dPos0AC1, _t144B);
  vec3 _t144D = prim +0017<$[3]> (refPos0AC0, _t144C);
  vec3 _t144E = prim +0017<$[3]> (_t143E, _t144D);
  real _t144F = _t144E[2];
  real _t1450 = -0.e0;
  bool _t1451 = prim >0080 (_t144F, _t1450);
  bool _t1452 = prim $and01C4 (_t143A, _t1451);
  bool _t1453 = prim $and01C4 (_t1423, _t1452);
  bool _t1454 = prim $and01C4 (_t140C, _t1453);
  string _t1455 = " dist: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.e0;
  real _t1459 = -0.1e1;
  vec3 _t145A = [_t1457, _t1458, _t1459];
  real _t145B = prim •00CE<$[3]; $[3]; $[]> (_t145A, refPos0AC0);
  real _t145C = prim -0026<$[]> (_t1456, _t145B);
  real _t145D = prim |()|00B5<$[]> (_t145C);
  string _t145E = "signed dist: ";
  real _t145F = 0.e0;
  real _t1460 = 0.e0;
  real _t1461 = 0.e0;
  real _t1462 = -0.1e1;
  vec3 _t1463 = [_t1460, _t1461, _t1462];
  real _t1464 = prim •00CE<$[3]; $[3]; $[]> (_t1463, refPos0AC0);
  real _t1465 = prim -0026<$[]> (_t145F, _t1464);
  string _t1466 = " face: ";
  int _t1467 = 3;
  string _t1468 = " place: ";
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, refPos0AC0);
  real _t146F = prim -0026<$[]> (_t1469, _t146E);
  real _t1470 = 0.e0;
  real _t1471 = 0.e0;
  real _t1472 = -0.1e1;
  vec3 _t1473 = [_t1470, _t1471, _t1472];
  real _t1474 = prim •00CE<$[3]; $[3]; $[]> (_t1473, dPos0AC1);
  real _t1475 = prim /0055 (_t146F, _t1474);
  vec3 _t1476 = prim *0038<$[3]> (dPos0AC1, _t1475);
  vec3 _t1477 = prim +0017<$[3]> (refPos0AC0, _t1476);
  string _t1478 = " error: ";
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = 0.e0;
  real _t147C = -0.1e1;
  vec3 _t147D = [_t147A, _t147B, _t147C];
  real _t147E = 0.e0;
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos0AC0);
  real _t1484 = prim -0026<$[]> (_t147E, _t1483);
  real _t1485 = 0.e0;
  real _t1486 = 0.e0;
  real _t1487 = -0.1e1;
  vec3 _t1488 = [_t1485, _t1486, _t1487];
  real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos0AC1);
  real _t148A = prim /0055 (_t1484, _t1489);
  vec3 _t148B = prim *0038<$[3]> (dPos0AC1, _t148A);
  vec3 _t148C = prim +0017<$[3]> (refPos0AC0, _t148B);
  real _t148D = prim •00CE<$[3]; $[3]; $[]> (_t147D, _t148C);
  real _t148E = prim -0026<$[]> (_t1479, _t148D);
  real _t148F = prim |()|00B5<$[]> (_t148E);
  string _t1490 = " offset :";
  string _t1491 = " dp: ";
  string _t1492 = " otherPossibleTime: ";
  string _t1493 = "\n";
  string _t1494 = "\n original face: ";
  string _t1495 = " ";
  print (_t13E0, _t13ED, _t13EE, _t13F3, _t13F4, _t1454, _t1455, _t145D, _t145E, _t1465, _t1466, _t1467, _t1468, _t1477, _t1478, _t148F, _t1490, refPos0AC0, _t1491, dPos0AC1, _t1492, faceTime109D, _t1493, _t1494, i109A, _t1495);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = -0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos0AC0);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = -0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos0AC1);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-7;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = -0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos0AC0);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = -0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos0AC1);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time109B, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = -0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos0AC1);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-7;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 3;
    bool _t14BE = prim !=0086 (i109A, _t14BD);
    if _t14BE {
      string _t14BF = "Saving at this face!";
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.e0;
      real _t14C3 = -0.1e1;
      vec3 _t14C4 = [_t14C1, _t14C2, _t14C3];
      real _t14C5 = prim •00CE<$[3]; $[3]; $[]> (_t14C4, refPos0AC0);
      real _t14C6 = prim -0026<$[]> (_t14C0, _t14C5);
      real _t14C7 = 0.e0;
      real _t14C8 = 0.e0;
      real _t14C9 = -0.1e1;
      vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
      real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, dPos0AC1);
      real _t14CC = prim /0055 (_t14C6, _t14CB);
      real _t14CD = 0.e0;
      real _t14CE = 0.e0;
      real _t14CF = 0.e0;
      real _t14D0 = -0.1e1;
      vec3 _t14D1 = [_t14CE, _t14CF, _t14D0];
      real _t14D2 = prim •00CE<$[3]; $[3]; $[]> (_t14D1, refPos0AC0);
      real _t14D3 = prim -0026<$[]> (_t14CD, _t14D2);
      real _t14D4 = 0.e0;
      real _t14D5 = 0.e0;
      real _t14D6 = -0.1e1;
      vec3 _t14D7 = [_t14D4, _t14D5, _t14D6];
      real _t14D8 = prim •00CE<$[3]; $[3]; $[]> (_t14D7, dPos0AC1);
      real _t14D9 = prim /0055 (_t14D3, _t14D8);
      bool _t14DA = prim >0080 (time109B, _t14D9);
      string _t14DB = "\n";
      print (_t14BF, _t14CC, _t14DA, _t14DB);
      real _t14DC = 0.e0;
      real _t14DD = 0.e0;
      real _t14DE = 0.e0;
      real _t14DF = -0.1e1;
      vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
      real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, refPos0AC0);
      real _t14E2 = prim -0026<$[]> (_t14DC, _t14E1);
      real _t14E3 = 0.e0;
      real _t14E4 = 0.e0;
      real _t14E5 = -0.1e1;
      vec3 _t14E6 = [_t14E3, _t14E4, _t14E5];
      real _t14E7 = prim •00CE<$[3]; $[3]; $[]> (_t14E6, dPos0AC1);
      time109B = prim /0055 (_t14E2, _t14E7);
      face109C = 3;
    } else {
      real _t14E8 = 0.e0;
      real _t14E9 = 0.e0;
      real _t14EA = 0.e0;
      real _t14EB = -0.1e1;
      vec3 _t14EC = [_t14E9, _t14EA, _t14EB];
      real _t14ED = prim •00CE<$[3]; $[3]; $[]> (_t14EC, refPos0AC0);
      real _t14EE = prim -0026<$[]> (_t14E8, _t14ED);
      real _t14EF = 0.e0;
      real _t14F0 = 0.e0;
      real _t14F1 = -0.1e1;
      vec3 _t14F2 = [_t14EF, _t14F0, _t14F1];
      real _t14F3 = prim •00CE<$[3]; $[3]; $[]> (_t14F2, dPos0AC1);
      faceTime109D = prim /0055 (_t14EE, _t14F3);
      string _t14F4 = "Saving backup time: ";
      string _t14F5 = "\n";
      print (_t14F4, faceTime109D, _t14F5);
    }
  }
  int _t14F6 = -1;
  bool _t14F7 = prim !=0086 (face109C, _t14F6);
  real _t14F8 = 0.1e1;
  real _t14F9 = 0.1e-7;
  real _t14FA = prim +0017<$[]> (_t14F8, _t14F9);
  real _t14FB = 0.1e1;
  real _t14FC = 0.1e1;
  real _t14FD = 0.1e1;
  vec3 _t14FE = [_t14FB, _t14FC, _t14FD];
  real _t14FF = 0.e0;
  real _t1500 = prim max0125 (time109B, _t14FF);
  vec3 _t1501 = prim *0038<$[3]> (dPos0AC1, _t1500);
  vec3 _t1502 = prim +0017<$[3]> (refPos0AC0, _t1501);
  real _t1503 = prim •00CE<$[3]; $[3]; $[]> (_t14FE, _t1502);
  bool _t1504 = prim >0080 (_t14FA, _t1503);
  real _t1505 = 0.1e-7;
  real _t1506 = 0.1e-7;
  real _t1507 = 0.1e-7;
  vec3 _t1508 = [_t1505, _t1506, _t1507];
  real _t1509 = 0.e0;
  real _t150A = prim max0125 (time109B, _t1509);
  vec3 _t150B = prim *0038<$[3]> (dPos0AC1, _t150A);
  vec3 _t150C = prim +0017<$[3]> (refPos0AC0, _t150B);
  vec3 _t150D = prim +0017<$[3]> (_t1508, _t150C);
  real _t150E = _t150D[0];
  real _t150F = -0.e0;
  bool _t1510 = prim >0080 (_t150E, _t150F);
  real _t1511 = 0.1e-7;
  real _t1512 = 0.1e-7;
  real _t1513 = 0.1e-7;
  vec3 _t1514 = [_t1511, _t1512, _t1513];
  real _t1515 = 0.e0;
  real _t1516 = prim max0125 (time109B, _t1515);
  vec3 _t1517 = prim *0038<$[3]> (dPos0AC1, _t1516);
  vec3 _t1518 = prim +0017<$[3]> (refPos0AC0, _t1517);
  vec3 _t1519 = prim +0017<$[3]> (_t1514, _t1518);
  real _t151A = _t1519[1];
  real _t151B = -0.e0;
  bool _t151C = prim >0080 (_t151A, _t151B);
  real _t151D = 0.1e-7;
  real _t151E = 0.1e-7;
  real _t151F = 0.1e-7;
  vec3 _t1520 = [_t151D, _t151E, _t151F];
  real _t1521 = 0.e0;
  real _t1522 = prim max0125 (time109B, _t1521);
  vec3 _t1523 = prim *0038<$[3]> (dPos0AC1, _t1522);
  vec3 _t1524 = prim +0017<$[3]> (refPos0AC0, _t1523);
  vec3 _t1525 = prim +0017<$[3]> (_t1520, _t1524);
  real _t1526 = _t1525[2];
  real _t1527 = -0.e0;
  bool _t1528 = prim >0080 (_t1526, _t1527);
  bool _t1529 = prim $and01C4 (_t151C, _t1528);
  bool _t152A = prim $and01C4 (_t1510, _t1529);
  bool _t152B = prim $and01C4 (_t1504, _t152A);
  bool _t152C = prim $and01C4 (_t14F7, _t152B);
  if _t152C {
    string _t152D = "\nReturning via standard : ";
    real _t152E = 0.e0;
    real _t152F = prim max0125 (time109B, _t152E);
    real _t1530 = (real)face109C;
    vec2 _t1531 = [_t152F, _t1530];
    string _t1532 = "\n";
    print (_t152D, _t1531, _t1532);
    real _t1533 = 0.e0;
    real _t1534 = prim max0125 (time109B, _t1533);
    real _t1535 = (real)face109C;
    vec2 _t1536 = [_t1534, _t1535];
    return _t1536;
  } else {
    real _t1537 = -inf;
    bool _t1538 = prim ==0084 (_t1537, faceTime109D);
    if _t1538 {
      string _t1539 = "\nReturning via fail : ";
      real _t153A = -0.1e1;
      real _t153B = -0.1e1;
      vec2 _t153C = [_t153A, _t153B];
      string _t153D = "\n";
      print (_t1539, _t153C, _t153D);
      real _t153E = -0.1e1;
      real _t153F = -0.1e1;
      vec2 _t1540 = [_t153E, _t153F];
      return _t1540;
    } else {
      string _t1541 = "\nReturning via backup : ";
      real _t1542 = 0.e0;
      real _t1543 = prim max0125 (faceTime109D, _t1542);
      real _t1544 = (real)i109A;
      vec2 _t1545 = [_t1543, _t1544];
      string _t1546 = "\n";
      print (_t1541, _t1545, _t1546);
      real _t1547 = 0.e0;
      real _t1548 = prim max0125 (faceTime109D, _t1547);
      real _t1549 = (real)i109A;
      vec2 _t154A = [_t1548, _t1549];
      return _t154A;
    }
  }
}
function Femdata: Mesh#0 domain154B (Femdata: Space arg0154C)
{
  Femdata: Mesh _t154D = extractFem(arg0154C, Mesh);
  return _t154D;
}
function Femdata: Space#0 space154E (Femdata: FemFunc arg0154F)
{
  Femdata: Space _t1550 = extractFem(arg0154F, Space);
  return _t1550;
}
function Femdata: FuncCell#3 funcCell1551 (Femdata: FemFunc arg01552, Femdata: MeshCell arg11553)
{
  int _t1554 = extractFemItem(CellIndex(MeshCell), int, arg11553);
  Femdata: FuncCell _t1555 = loadFem(FuncCell, arg01552, _t1554);
  return _t1555;
}
function Femdata: MeshPos#2 fn_2FB1563 (Femdata: MeshPos x1564, vec3 dPos1565)
{
  bool _t1566 = extractFemItem(Valid(MeshPos), bool, x1564);
  bool _t1567 = prim !00BC (_t1566);
  if _t1567 {
    return x1564;
  }
  real time1568 = 0.1e1;
  Femdata: MeshPos cmp1569 = x1564;
  int _t156A = 0;
  int[] _t156B = prim $range01C3 (_t156A, timeSteps040D);
  foreach i15E3 in _t156B {
    Femdata: Mesh _t156C = extractFem(cmp1569, Mesh);
    int _t156D = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t156E = loadFem(MeshCell, _t156C, _t156D);
    Femdata: Mesh _t156F = extractFem(_t156E, Mesh);
    Femdata: Mesh _t1570 = extractFem(cmp1569, Mesh);
    int _t1571 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1572 = loadFem(MeshCell, _t1570, _t1571);
    Femdata: Mesh _t1573 = extractFem(_t1572, Mesh);
    Femdata: Mesh _t1574 = extractFem(cmp1569, Mesh);
    int _t1575 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1576 = loadFem(MeshCell, _t1574, _t1575);
    int _t1577 = extractFemItem(CellIndex(MeshCell), int, _t1576);
    field(3)[3] _t1578 = femField(_t156F,_t1577,field(3)[3],Transform,);
    field(3)[3,3] _t1579 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1578);
    vec3 _t157A = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    tensor[3,3] _t157B = prim @00A5<#∞; %3; $[3,3]> (_t1579, _t157A);
    tensor[3,3] _t157C = prim inv0155 (_t157B);
    vec3 deltaP157D = prim •00CE<$[3,3]; $[3]; $[3]> (_t157C, dPos1565);
    real _t157E = prim |()|00B5<$[3]> (deltaP157D);
    vec3 normDetaP157F = prim /0057<$[3]> (deltaP157D, _t157E);
    vec3 _t1580 = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    vec3 _t1581 = prim *0036<$[3]> (time1568, deltaP157D);
    vec3 newPos1582 = prim +0017<$[3]> (_t1580, _t1581);
    continue;
  }
  string _t15E4 = "Took stupid way out!\n";
  print (_t15E4);
  vec3 _t15E5 = func worldPos04DA (x1564);
  vec3 _t15E6 = prim +0017<$[3]> (_t15E5, dPos1565);
  cmp1569 = func findPos041E (meshData03FD, _t15E6);
  return cmp1569;
}
function vec3#2 nV15E7 (Femdata: MeshPos x15E8)
{
  bool _t15E9 = extractFemItem(Valid(MeshPos), bool, x15E8);
  if _t15E9 {
    Femdata: Mesh _t15EA = extractFem(x15E8, Mesh);
    int _t15EB = extractFemItem(CellIndex(MeshPos), int, x15E8);
    Femdata: MeshCell c15EC = loadFem(MeshCell, _t15EA, _t15EB);
    vec3 ref15ED = extractFemItem(RefPos(MeshPos), vec3, x15E8);
    Femdata: FuncCell _t15EE = func funcCell1551 (data040B, c15EC);
    Femdata: FemFunc _t15EF = extractFem(_t15EE, FemFunc);
    Femdata: FuncCell _t15F0 = func funcCell1551 (data040B, c15EC);
    Femdata: FemFunc _t15F1 = extractFem(_t15F0, FemFunc);
    Femdata: Space _t15F2 = extractFem(_t15F1, Space);
    Femdata: FuncCell _t15F3 = func funcCell1551 (data040B, c15EC);
    int _t15F4 = extractFemItem(CellIndex(FuncCell), int, _t15F3);
    field(3)[3] _t15F5 = femField(_t15EF,_t15F4,field(3)[3],refField,);
    vec3 val15F6 = prim @00A5<#∞; %3; $[3]> (_t15F5, ref15ED);
    real _t15F7 = prim |()|00B5<$[3]> (val15F6);
    vec3 _t15F8 = prim /0057<$[3]> (val15F6, _t15F7);
    return _t15F8;
  } else {
    string _t15F9 = "QWE:Eval at 0\n";
    print (_t15F9);
    vec3 _t15FA = prim $zero01BB<$[3]> ();
    return _t15FA;
  }
}
function vec3#4 altF15FB (vec3 x15FC)
{
  vec3 _t15FD = prim -0026<$[3]> (x15FC, center0413);
  vec3 _t15FE = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t15FD);
  return _t15FE;
}
globalInit {
  int _t0401 = 0;
  int _t03FF = 1;
  int _t0403 = extractFemItem(NumCell(Mesh), int, meshData03FD);
  int _t0402 = prim -0024 (_t0403, _t03FF);
  int[] _t0406 = prim $range01C3 (_t0401, _t0402);
  Femdata: MeshCell[] _t0407 = {};
  foreach _t0405 in _t0406 {
    Femdata: MeshCell _t0408 = loadFem(MeshCell, meshData03FD, _t0405);
    _t0407 = prim @0010<Femdata: MeshCell> (_t0407, _t0408);
  }
  0cell_meshData03FE = _t0407;
  space0409 = loadFem(Space, 0space0409_intermedateGlobal040A, meshData03FD);
  data040B = loadFem(FemFunc, 0data040B_intermedateGlobal040C, space0409);
  Femdata: Space _t1556 = extractFem(data040B, Space);
  Femdata: Space _t1557 = extractFem(data040B, Space);
  Femdata: Mesh _t1558 = extractFem(_t1557, Mesh);
  field(3)[3] _t1559 = femField(data040B,_t1558,field(3)[3],refField,findPos041E );
  Femdata: Space _t155A = extractFem(data040B, Space);
  Femdata: Mesh _t155B = extractFem(_t155A, Mesh);
  Femdata: Space _t155C = extractFem(data040B, Space);
  Femdata: Mesh _t155D = extractFem(_t155C, Mesh);
  Femdata: Space _t155E = extractFem(data040B, Space);
  Femdata: Mesh _t155F = extractFem(_t155E, Mesh);
  field(3)[3] _t1560 = femField(_t155B,_t155F,field(3)[3],InvTransform,findPos041E );
  F1561 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t1559, _t1560);
  simplex1562 = func refcell046A (meshData03FD);
}
strand gg (vec3 startPos15FF) {
  output vec3[] stream1600;
  output vec3[] newStream1603;
  int step1606;
  Femdata: MeshPos cPos1607;
  vec3 altCPos1608;
  {
    vec3[0] _t1601 = {};
    vec3[] _t1602 = (vec3[])_t1601;
    stream1600 = _t1602;
    vec3[0] _t1604 = {};
    vec3[] _t1605 = (vec3[])_t1604;
    newStream1603 = _t1605;
    step1606 = 0;
    cPos1607 = func findPos041E (meshData03FD, startPos15FF);
    altCPos1608 = startPos15FF;
  }
  update
  {
    int _t1609 = 0;
    bool _t160A = prim ==0082 (step1606, _t1609);
    if _t160A {
      bool _t160B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      if _t160B {
        vec3 rp160C = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
        real _t160D = rp160C[0];
        real _t160E = 0.1e-5;
        bool _t160F = prim <=007C (_t160D, _t160E);
        if _t160F {
          stabilize;
        }
        real _t1610 = rp160C[1];
        real _t1611 = 0.1e-5;
        bool _t1612 = prim <=007C (_t1610, _t1611);
        if _t1612 {
          stabilize;
        }
        real _t1613 = rp160C[2];
        real _t1614 = 0.1e-5;
        bool _t1615 = prim <=007C (_t1613, _t1614);
        if _t1615 {
          stabilize;
        }
        real _t1616 = 0.1e1;
        real _t1617 = 0.1e1;
        real _t1618 = 0.1e1;
        vec3 _t1619 = [_t1616, _t1617, _t1618];
        real r161A = prim •00CE<$[3]; $[3]; $[]> (_t1619, rp160C);
        real _t161B = 0.9999999e0;
        bool _t161C = prim <=007C (_t161B, r161A);
        if _t161C {
          stabilize;
        }
      }
    }
    bool _t161D = extractFemItem(Valid(MeshPos), bool, cPos1607);
    Femdata: MeshPos _t161E = func findPos041E (meshData03FD, altCPos1608);
    bool _t161F = extractFemItem(Valid(MeshPos), bool, _t161E);
    bool _t1620 = prim !=0085 (_t161D, _t161F);
    if _t1620 {
      string _t1621 = "ERG:Warning of validity startPos:";
      string _t1622 = "\n";
      print (_t1621, startPos15FF, _t1622);
    }
    bool _t1623;
    bool _t1624 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    bool _t1625 = prim !00BC (_t1624);
    if _t1625 {
      _t1623 = true;
    } else {
      bool _t1626;
      Femdata: MeshPos _t1627 = func findPos041E (meshData03FD, altCPos1608);
      bool _t1628 = extractFemItem(Valid(MeshPos), bool, _t1627);
      bool _t1629 = prim !00BC (_t1628);
      if _t1629 {
        _t1626 = true;
      } else {
        _t1626 = prim ==0082 (step1606, stepMax0411);
      }
      _t1623 = _t1626;
    }
    if _t1623 {
      string _t162A = "Went off the mesh\?";
      bool _t162B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      bool _t162C = prim !00BC (_t162B);
      string _t162D = " and ";
      string _t162E = " and ";
      Femdata: MeshPos _t162F = func findPos041E (meshData03FD, altCPos1608);
      bool _t1630 = extractFemItem(Valid(MeshPos), bool, _t162F);
      bool _t1631 = prim !00BC (_t1630);
      string _t1632 = "\n";
      print (_t162A, _t162C, _t162D, altCPos1608, _t162E, _t1631, _t1632);
      string _t1633 = "Pos is:";
      vec3 _t1634 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1635 = "\n";
      print (_t1633, _t1634, _t1635);
      string _t1636 = "\n";
      string _t1637 = "\n";
      print (stream1600, _t1636, newStream1603, _t1637);
      stabilize;
    }
    vec3 _t1638 = func worldPos04DA (cPos1607);
    vec3[1] _t1639 = {_t1638};
    vec3[] _t163A = (vec3[])_t1639;
    stream1600 = prim @0014<vec3> (stream1600, _t163A);
    vec3[1] _t163B = {altCPos1608};
    vec3[] _t163C = (vec3[])_t163B;
    newStream1603 = prim @0014<vec3> (newStream1603, _t163C);
    vec3 _t163D = func worldPos04DA (cPos1607);
    vec3 _t163E = prim -0026<$[3]> (_t163D, altCPos1608);
    real _t163F = prim |()|00B5<$[3]> (_t163E);
    real _t1640 = 0.1e-5;
    bool _t1641 = prim >0080 (_t163F, _t1640);
    if _t1641 {
      string _t1642 = "ERG:Error in tracing 1: At step:";
      string _t1643 = " with particle:";
      string _t1644 = "\n";
      print (_t1642, step1606, _t1643, startPos15FF, _t1644);
      string _t1645 = "Poses are:";
      vec3 _t1646 = func worldPos04DA (cPos1607);
      string _t1647 = "\n";
      print (_t1645, _t1646, altCPos1608, _t1647);
      string _t1648 = "Cells are:";
      Femdata: Mesh _t1649 = extractFem(cPos1607, Mesh);
      int _t164A = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t164B = loadFem(MeshCell, _t1649, _t164A);
      string _t164C = " and ";
      Femdata: MeshPos _t164D = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t164E = extractFem(_t164D, Mesh);
      Femdata: MeshPos _t164F = func findPos041E (meshData03FD, altCPos1608);
      int _t1650 = extractFemItem(CellIndex(MeshPos), int, _t164F);
      Femdata: MeshCell _t1651 = loadFem(MeshCell, _t164E, _t1650);
      string _t1652 = "\n";
      print (_t1648, _t164B, _t164C, _t1651, _t1652);
      string _t1653 = "Ref poses are:";
      vec3 _t1654 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1655 = " and ";
      Femdata: MeshPos _t1656 = func findPos041E (meshData03FD, altCPos1608);
      vec3 _t1657 = extractFemItem(RefPos(MeshPos), vec3, _t1656);
      string _t1658 = "\n";
      print (_t1653, _t1654, _t1655, _t1657, _t1658);
      stabilize;
    } else {
      string _t1659 = "fine in cell 1:";
      Femdata: Mesh _t165A = extractFem(cPos1607, Mesh);
      int _t165B = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t165C = loadFem(MeshCell, _t165A, _t165B);
      string _t165D = "\n";
      print (_t1659, _t165C, _t165D);
    }
    real _t165E = 0.5e0;
    real _t165F = prim *0034 (_t165E, stepSize0410);
    vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    vec3 _t1661 = prim *0036<$[3]> (_t165F, _t1660);
    vec3 _t1662 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    real _t1663 = prim |()|00B5<$[3]> (_t1662);
    vec3 altUp11664 = prim /0057<$[3]> (_t1661, _t1663);
    real _t1665 = 0.5e0;
    real _t1666 = prim *0034 (_t1665, stepSize0410);
    vec3 _t1667 = func nV15E7 (cPos1607);
    vec3 up11668 = prim *0036<$[3]> (_t1666, _t1667);
    real _t1669 = 0.5e0;
    real _t166A = prim *0034 (_t1669, stepSize0410);
    vec3 _t166B = func altF15FB (altCPos1608);
    vec3 _t166C = prim *0036<$[3]> (_t166A, _t166B);
    vec3 _t166D = func altF15FB (altCPos1608);
    real _t166E = prim |()|00B5<$[3]> (_t166D);
    vec3 upCorrect1166F = prim /0057<$[3]> (_t166C, _t166E);
    bool _t1670;
    vec3 _t1671 = prim -0026<$[3]> (up11668, upCorrect1166F);
    real _t1672 = prim |()|00B5<$[3]> (_t1671);
    real _t1673 = 0.1e-5;
    bool _t1674 = prim >0080 (_t1672, _t1673);
    if _t1674 {
      _t1670 = true;
    } else {
      vec3 _t1675 = prim -0026<$[3]> (up11668, altUp11664);
      real _t1676 = prim |()|00B5<$[3]> (_t1675);
      real _t1677 = 0.1e-5;
      _t1670 = prim >0080 (_t1676, _t1677);
    }
    if _t1670 {
      string _t1678 = "ERG:Error in evaluation on pos 1:";
      string _t1679 = "\n";
      print (_t1678, startPos15FF, _t1679);
    }
    Femdata: MeshPos intermed167A = func fn_2FB1563 (cPos1607, up11668);
    vec3 altIntermed167B = prim +0017<$[3]> (altCPos1608, altUp11664);
    bool _t167C = extractFemItem(Valid(MeshPos), bool, intermed167A);
    Femdata: MeshPos _t167D = func findPos041E (meshData03FD, altIntermed167B);
    bool _t167E = extractFemItem(Valid(MeshPos), bool, _t167D);
    bool _t167F = prim !=0085 (_t167C, _t167E);
    if _t167F {
      string _t1680 = "ERG:Warning of validity intermed";
      string _t1681 = "\n";
      print (_t1680, startPos15FF, _t1681);
      string _t1682 = "Real location:";
      string _t1683 = "\n";
      print (_t1682, altIntermed167B, _t1683);
      string _t1684 = "Cell change: ";
      Femdata: MeshPos _t1685 = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t1686 = extractFem(_t1685, Mesh);
      Femdata: MeshPos _t1687 = func findPos041E (meshData03FD, altCPos1608);
      int _t1688 = extractFemItem(CellIndex(MeshPos), int, _t1687);
      Femdata: MeshCell _t1689 = loadFem(MeshCell, _t1686, _t1688);
      string _t168A = " to ";
      Femdata: MeshPos _t168B = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t168C = extractFem(_t168B, Mesh);
      Femdata: MeshPos _t168D = func findPos041E (meshData03FD, altIntermed167B);
      int _t168E = extractFemItem(CellIndex(MeshPos), int, _t168D);
      Femdata: MeshCell _t168F = loadFem(MeshCell, _t168C, _t168E);
      string _t1690 = "\n";
      print (_t1684, _t1689, _t168A, _t168F, _t1690);
    }
    bool _t1691;
    bool _t1692 = extractFemItem(Valid(MeshPos), bool, intermed167A);
    bool _t1693 = prim !00BC (_t1692);
    if _t1693 {
      _t1691 = true;
    } else {
      Femdata: MeshPos _t1694 = func findPos041E (meshData03FD, altIntermed167B);
      bool _t1695 = extractFemItem(Valid(MeshPos), bool, _t1694);
      _t1691 = prim !00BC (_t1695);
    }
    if _t1691 {
      string _t1696 = "Went off the mesh\?";
      bool _t1697 = extractFemItem(Valid(MeshPos), bool, intermed167A);
      bool _t1698 = prim !00BC (_t1697);
      string _t1699 = " and ";
      string _t169A = " and ";
      Femdata: MeshPos _t169B = func findPos041E (meshData03FD, altIntermed167B);
      bool _t169C = extractFemItem(Valid(MeshPos), bool, _t169B);
      bool _t169D = prim !00BC (_t169C);
      string _t169E = "\n";
      print (_t1696, _t1698, _t1699, altIntermed167B, _t169A, _t169D, _t169E);
      stabilize;
    }
    vec3 _t169F = func worldPos04DA (intermed167A);
    vec3 _t16A0 = prim -0026<$[3]> (_t169F, altIntermed167B);
    real _t16A1 = prim |()|00B5<$[3]> (_t16A0);
    real _t16A2 = 0.1e-5;
    bool _t16A3 = prim >0080 (_t16A1, _t16A2);
    if _t16A3 {
      string _t16A4 = "ERG:Error in tracing 2: At step:";
      string _t16A5 = " with particle:";
      string _t16A6 = "\n";
      print (_t16A4, step1606, _t16A5, startPos15FF, _t16A6);
      string _t16A7 = "Poses are:";
      vec3 _t16A8 = func worldPos04DA (intermed167A);
      string _t16A9 = "\n";
      print (_t16A7, _t16A8, altIntermed167B, _t16A9);
      stabilize;
    } else {
      string _t16AA = "fine in cell 2:";
      Femdata: Mesh _t16AB = extractFem(cPos1607, Mesh);
      int _t16AC = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t16AD = loadFem(MeshCell, _t16AB, _t16AC);
      string _t16AE = "\n";
      print (_t16AA, _t16AD, _t16AE);
    }
    vec3 _t16AF = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    vec3 _t16B0 = prim *0036<$[3]> (stepSize0410, _t16AF);
    vec3 _t16B1 = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    real _t16B2 = prim |()|00B5<$[3]> (_t16B1);
    vec3 altUp216B3 = prim /0057<$[3]> (_t16B0, _t16B2);
    vec3 _t16B4 = func nV15E7 (intermed167A);
    vec3 up216B5 = prim *0036<$[3]> (stepSize0410, _t16B4);
    vec3 _t16B6 = func altF15FB (altIntermed167B);
    vec3 _t16B7 = prim *0036<$[3]> (stepSize0410, _t16B6);
    vec3 _t16B8 = func altF15FB (altIntermed167B);
    real _t16B9 = prim |()|00B5<$[3]> (_t16B8);
    vec3 upCorrect216BA = prim /0057<$[3]> (_t16B7, _t16B9);
    cPos1607 = func fn_2FB1563 (cPos1607, up216B5);
    altCPos1608 = prim +0017<$[3]> (altCPos1608, altUp216B3);
    int _t16BB = 1;
    step1606 = prim +0015 (step1606, _t16BB);
    bool _t16BC;
    vec3 _t16BD = prim -0026<$[3]> (up216B5, upCorrect216BA);
    real _t16BE = prim |()|00B5<$[3]> (_t16BD);
    real _t16BF = 0.1e-5;
    bool _t16C0 = prim >0080 (_t16BE, _t16BF);
    if _t16C0 {
      _t16BC = true;
    } else {
      vec3 _t16C1 = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16C2 = prim |()|00B5<$[3]> (_t16C1);
      real _t16C3 = 0.1e-4;
      _t16BC = prim >0080 (_t16C2, _t16C3);
    }
    if _t16BC {
      string _t16C4 = "ERG:Error in evaluation on pos 2:";
      string _t16C5 = "\n";
      print (_t16C4, startPos15FF, _t16C5);
      string _t16C6 = "The errors are:";
      vec3 _t16C7 = prim -0026<$[3]> (up216B5, upCorrect216BA);
      real _t16C8 = prim |()|00B5<$[3]> (_t16C7);
      string _t16C9 = " and ";
      vec3 _t16CA = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16CB = prim |()|00B5<$[3]> (_t16CA);
      string _t16CC = "\n";
      print (_t16C6, _t16C8, _t16C9, _t16CB, _t16CC);
      string _t16CD = "The cells are:";
      Femdata: Mesh _t16CE = extractFem(intermed167A, Mesh);
      int _t16CF = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell _t16D0 = loadFem(MeshCell, _t16CE, _t16CF);
      string _t16D1 = " vs ";
      Femdata: MeshPos _t16D2 = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t16D3 = extractFem(_t16D2, Mesh);
      Femdata: MeshPos _t16D4 = func findPos041E (meshData03FD, altIntermed167B);
      int _t16D5 = extractFemItem(CellIndex(MeshPos), int, _t16D4);
      Femdata: MeshCell _t16D6 = loadFem(MeshCell, _t16D3, _t16D5);
      string _t16D7 = "\n";
      print (_t16CD, _t16D0, _t16D1, _t16D6, _t16D7);
    }
  }
}
collection {
  foreach x16D8 in startPoints040F {
    new gg (x16D8);
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData03FD;
input FemData:Space 0space0409_intermedateGlobal040A;
input FemData:FemFunc 0data040B_intermedateGlobal040C;
input int timeSteps040D = <default>;
input real timeEps040E = <default>;
input vec3[] startPoints040F;
input real stepSize0410 = <default>;
input int stepMax0411 = <default>;
input tensor[3,3] M0412;
input vec3 center0413;
constants {
  timeSteps040D = 32;
  timeEps040E = 0.1e-6;
  stepSize0410 = 0.1e-1;
  stepMax0411 = 300;
}
global Femdata: Space space0409;
global Femdata: FemFunc data040B;
global field(3)[3] F1561;
function bool#0 !=0414 (Femdata: MeshCell cell10415, Femdata: MeshCell cell10416)
{
  int _t0417 = extractFemItem(CellIndex(Mesh), int, cell10415);
  int _t0418 = extractFemItem(CellIndex(Mesh), int, cell10416);
  bool _t0419 = prim !=0086 (_t0417, _t0418);
  return _t0419;
}
function bool#0 ==041A (Femdata: MeshCell cell10415, Femdata: MeshCell cell10416)
{
  int _t041B = extractFemItem(CellIndex(Mesh), int, cell10415);
  int _t041C = extractFemItem(CellIndex(Mesh), int, cell10416);
  bool _t041D = prim ==0082 (_t041B, _t041C);
  return _t041D;
}
function Femdata: MeshPos#20 findPos041E (Femdata: Mesh mesh041F, vec3 pos0420)
{
  real _t0421 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0422 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0423 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0424 = [_t0421, _t0422, _t0423];
  newtonInt0425 = 0;
  cellInt0426 = extractFemItem(StartCell(Mesh), int, mesh041F);
  int _t0427 = extractFemItem(NumCell(Mesh), int, mesh041F);
  int _t0428 = 1;
  numCell0429 = prim -0024 (_t0427, _t0428);
  yayCells042A = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh041F, pos0420 : vec3);
  foreach cellItter042E in yayCells042A {
    real _t042B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn0424 = [_t042B, _t042C, _t042D];
    cellInt0426 = cellItter042E;
    field(3)[3] _t042F = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
    field(3)[3,3] _t0430 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042F);
    field(3)[3,3] _t0431 = prim inv015E<#∞; %3> (_t0430);
    real _t0432 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0433 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0435 = [_t0432, _t0433, _t0434];
    A0436 = prim @00A5<#∞; %3; $[3,3]> (_t0431, _t0435);
    int _t0437 = 0;
    int _t0438 = 16;
    int[] _t0439 = prim $range01C3 (_t0437, _t0438);
    foreach newtonItter0468 in _t0439 {
      field(3)[3] _t043A = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
      field(3)[3] _t043B = prim -002E<#∞; %3; $[3]> (_t043A, pos0420);
      field(3)[3] _t043C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0436, _t043B);
      delta043D = prim @00A5<#∞; %3; $[3]> (_t043C, xn0424);
      xn0424 = prim -0026<$[3]> (xn0424, delta043D);
      real _t043E = 0.1e-7;
      real _t043F = 0.1e-7;
      real _t0440 = prim *0034 (_t043E, _t043F);
      real _t0441 = prim •00CE<$[3]; $[3]; $[]> (delta043D, delta043D);
      bool _t0442 = prim >=007E (_t0440, _t0441);
      if _t0442 {
        real _t0443 = 0.1e1;
        real _t0444 = 0.1e-7;
        real _t0445 = prim +0017<$[]> (_t0443, _t0444);
        real _t0446 = 0.1e1;
        real _t0447 = 0.1e1;
        real _t0448 = 0.1e1;
        vec3 _t0449 = [_t0446, _t0447, _t0448];
        real _t044A = prim •00CE<$[3]; $[3]; $[]> (_t0449, xn0424);
        bool _t044B = prim >0080 (_t0445, _t044A);
        real _t044C = 0.1e-7;
        real _t044D = 0.1e-7;
        real _t044E = 0.1e-7;
        vec3 _t044F = [_t044C, _t044D, _t044E];
        vec3 _t0450 = prim +0017<$[3]> (_t044F, xn0424);
        real _t0451 = _t0450[0];
        real _t0452 = -0.e0;
        bool _t0453 = prim >0080 (_t0451, _t0452);
        real _t0454 = 0.1e-7;
        real _t0455 = 0.1e-7;
        real _t0456 = 0.1e-7;
        vec3 _t0457 = [_t0454, _t0455, _t0456];
        vec3 _t0458 = prim +0017<$[3]> (_t0457, xn0424);
        real _t0459 = _t0458[1];
        real _t045A = -0.e0;
        bool _t045B = prim >0080 (_t0459, _t045A);
        real _t045C = 0.1e-7;
        real _t045D = 0.1e-7;
        real _t045E = 0.1e-7;
        vec3 _t045F = [_t045C, _t045D, _t045E];
        vec3 _t0460 = prim +0017<$[3]> (_t045F, xn0424);
        real _t0461 = _t0460[2];
        real _t0462 = -0.e0;
        bool _t0463 = prim >0080 (_t0461, _t0462);
        bool _t0464 = prim $and01C4 (_t045B, _t0463);
        bool _t0465 = prim $and01C4 (_t0453, _t0464);
        bool _t0466 = prim $and01C4 (_t044B, _t0465);
        if _t0466 {
          Femdata: MeshPos _t0467 = extractFemItemN((mesh041F, cellInt0426, xn0424, pos0420),AllBuild(MeshPos),);
          return _t0467;
        }
      }
    }
  }
  Femdata: MeshPos _t0469 = extractFemItemN((mesh041F),InvalidBuild(MeshPos),);
  return _t0469;
}
function Femdata: RefCell#1 refcell046A (Femdata: Mesh arg0046B)
{
  Femdata: RefCell _t046C = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0046B);
  return _t046C;
}
function Femdata: MeshCell[]#0 cells046D (Femdata: Mesh arg0046E)
{
  Femdata: MeshCell[] _t046F = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg0046E);
  return _t046F;
}
function Femdata: MeshCell[]#0 cells0470 (Femdata: Mesh arg0046E)
{
  int _t0471 = 0;
  int _t0472 = extractFemItem(NumCell(Mesh), int, arg0046E);
  int[] _t0473 = prim $range01C3 (_t0471, _t0472);
  Femdata: MeshCell[] accum0476 = {};
  foreach i0474 in _t0473 {
    Femdata: MeshCell _t0475 = loadFem(MeshCell, arg0046E, i0474);
    accum0476 = prim @0010<Femdata: MeshCell> (accum0476, _t0475);
  }
  return accum0476;
}
function int#0 numCell0477 (Femdata: Mesh arg0046B)
{
  int _t0478 = extractFemItem(NumCell(Mesh), int, arg0046B);
  return _t0478;
}
function tensor[3,3,3,3]#0 mesh_t_transform_30479 (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t047D = femField(mesh047C,cell047B,field(3)[3],Transform,);
  field(3)[3,3] _t047E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t047D);
  field(3)[3,3,3] _t047F = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t047E);
  field(3)[3,3,3,3] _t0480 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t047F);
  tensor[3,3,3,3] _t0481 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0480, pos047A);
  return _t0481;
}
function tensor[3,3,3]#0 mesh_t_transform_20482 (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t0483 = femField(mesh047C,cell047B,field(3)[3],Transform,);
  field(3)[3,3] _t0484 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0483);
  field(3)[3,3,3] _t0485 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0484);
  tensor[3,3,3] _t0486 = prim @00A5<#∞; %3; $[3,3,3]> (_t0485, pos047A);
  return _t0486;
}
function tensor[3,3]#0 mesh_t_transform_10487 (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t0488 = femField(mesh047C,cell047B,field(3)[3],Transform,);
  field(3)[3,3] _t0489 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0488);
  tensor[3,3] _t048A = prim @00A5<#∞; %3; $[3,3]> (_t0489, pos047A);
  return _t048A;
}
function vec3#2 mesh_t_transform_0048B (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t048C = femField(mesh047C,cell047B,field(3)[3],Transform,);
  vec3 _t048D = prim @00A5<#∞; %3; $[3]> (_t048C, pos047A);
  return _t048D;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse048E (vec3 pos048F, int cellInt0490, Femdata: Mesh mesh0491)
{
  real _t0492 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0493 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0494 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0495 = [_t0492, _t0493, _t0494];
  field(3)[3] _t0496 = femField(mesh0491,cellInt0490,field(3)[3],Transform,);
  field(3)[3,3] _t0497 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0496);
  field(3)[3,3] _t0498 = prim inv015E<#∞; %3> (_t0497);
  real _t0499 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t049A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t049B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t049C = [_t0499, _t049A, _t049B];
  A049D = prim @00A5<#∞; %3; $[3,3]> (_t0498, _t049C);
  int _t049E = 0;
  int _t049F = 16;
  int[] _t04A0 = prim $range01C3 (_t049E, _t049F);
  foreach itter04D0 in _t04A0 {
    field(3)[3] _t04A1 = femField(mesh0491,cellInt0490,field(3)[3],Transform,);
    field(3)[3] _t04A2 = prim -002E<#∞; %3; $[3]> (_t04A1, pos048F);
    field(3)[3] _t04A3 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A049D, _t04A2);
    delta04A4 = prim @00A5<#∞; %3; $[3]> (_t04A3, xn0495);
    xn0495 = prim -0026<$[3]> (xn0495, delta04A4);
    real _t04A5 = 0.1e-7;
    real _t04A6 = 0.1e-7;
    real _t04A7 = prim *0034 (_t04A5, _t04A6);
    real _t04A8 = prim •00CE<$[3]; $[3]; $[]> (delta04A4, delta04A4);
    bool _t04A9 = prim >=007E (_t04A7, _t04A8);
    if _t04A9 {
      real _t04AA = 0.1e1;
      real _t04AB = 0.1e-7;
      real _t04AC = prim +0017<$[]> (_t04AA, _t04AB);
      real _t04AD = 0.1e1;
      real _t04AE = 0.1e1;
      real _t04AF = 0.1e1;
      vec3 _t04B0 = [_t04AD, _t04AE, _t04AF];
      real _t04B1 = prim •00CE<$[3]; $[3]; $[]> (_t04B0, xn0495);
      bool _t04B2 = prim >0080 (_t04AC, _t04B1);
      real _t04B3 = 0.1e-7;
      real _t04B4 = 0.1e-7;
      real _t04B5 = 0.1e-7;
      vec3 _t04B6 = [_t04B3, _t04B4, _t04B5];
      vec3 _t04B7 = prim +0017<$[3]> (_t04B6, xn0495);
      real _t04B8 = _t04B7[0];
      real _t04B9 = -0.e0;
      bool _t04BA = prim >0080 (_t04B8, _t04B9);
      real _t04BB = 0.1e-7;
      real _t04BC = 0.1e-7;
      real _t04BD = 0.1e-7;
      vec3 _t04BE = [_t04BB, _t04BC, _t04BD];
      vec3 _t04BF = prim +0017<$[3]> (_t04BE, xn0495);
      real _t04C0 = _t04BF[1];
      real _t04C1 = -0.e0;
      bool _t04C2 = prim >0080 (_t04C0, _t04C1);
      real _t04C3 = 0.1e-7;
      real _t04C4 = 0.1e-7;
      real _t04C5 = 0.1e-7;
      vec3 _t04C6 = [_t04C3, _t04C4, _t04C5];
      vec3 _t04C7 = prim +0017<$[3]> (_t04C6, xn0495);
      real _t04C8 = _t04C7[2];
      real _t04C9 = -0.e0;
      bool _t04CA = prim >0080 (_t04C8, _t04C9);
      bool _t04CB = prim $and01C4 (_t04C2, _t04CA);
      bool _t04CC = prim $and01C4 (_t04BA, _t04CB);
      bool _t04CD = prim $and01C4 (_t04B2, _t04CC);
      if _t04CD {
        Femdata: MeshPos _t04CE = extractFemItemN((mesh0491, cellInt0490, xn0495, pos048F),AllBuild(MeshPos),);
        return _t04CE;
      } else {
        Femdata: MeshPos _t04CF = extractFemItemN((mesh0491),InvalidBuild(MeshPos),);
        return _t04CF;
      }
    }
  }
  Femdata: MeshPos _t04D1 = extractFemItemN((mesh0491),InvalidBuild(MeshPos),);
  return _t04D1;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos04D2 (Femdata: MeshPos pos04D3)
{
  bool _t04D4 = extractFemItem(WorldTest(MeshPos), bool, pos04D3);
  if _t04D4 {
    vec3 _t04D5 = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
    int _t04D6 = extractFemItem(CellIndex(MeshPos), int, pos04D3);
    Femdata: Mesh _t04D7 = extractFem(pos04D3, Mesh);
    vec3 _t04D8 = func mesh_t_transform_0048B (_t04D5, _t04D6, _t04D7);
    Femdata: MeshPos _t04D9 = extractFemItemN((pos04D3, _t04D8),NewWorld(MeshPos),);
    return _t04D9;
  } else {
    return pos04D3;
  }
}
function vec3#8 worldPos04DA (Femdata: MeshPos pos04D3)
{
  vec3 _t04DB = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
  int _t04DC = extractFemItem(CellIndex(MeshPos), int, pos04D3);
  Femdata: Mesh _t04DD = extractFem(pos04D3, Mesh);
  vec3 _t04DE = func mesh_t_transform_0048B (_t04DB, _t04DC, _t04DD);
  return _t04DE;
}
function Femdata: MeshPos#1 $exitPos04DF (Femdata: Mesh mesh04E0, int cellId04E1, vec3 refPos04E2, vec3 dPos04E3, real[2] time04E4)
{
  int _t04E5 = -1;
  real _t04E6 = time04E4[1];
  int _t04E7 = prim $r2i01B7 (_t04E6);
  int[2] _t04E9 = func nextCell404E8 (_t04E7, cellId04E1, mesh04E0);
  int _t04EA = 0;
  int _t04EB = prim $sub01C0<int; %2> (_t04E9, _t04EA);
  bool _t04EC = prim !=0086 (_t04E5, _t04EB);
  if _t04EC {
    string _t04ED = "face ";
    real _t04EE = time04E4[1];
    int _t04EF = prim $r2i01B7 (_t04EE);
    string _t04F0 = " to ";
    real _t04F1 = time04E4[1];
    int _t04F2 = prim $r2i01B7 (_t04F1);
    int[2] _t04F3 = func nextCell404E8 (_t04F2, cellId04E1, mesh04E0);
    int _t04F4 = 1;
    int _t04F5 = prim $sub01C0<int; %2> (_t04F3, _t04F4);
    string _t04F6 = "\n";
    string _t04F7 = "got: ";
    real _t04F8 = 0.1e1;
    real _t04F9 = 0.e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.e0;
    vec4 _t04FC = [_t04F8, _t04F9, _t04FA, _t04FB];
    real _t04FD = 0.e0;
    real _t04FE = 0.1e1;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec4 _t0501 = [_t04FD, _t04FE, _t04FF, _t0500];
    real _t0502 = 0.e0;
    real _t0503 = 0.e0;
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    vec4 _t0506 = [_t0502, _t0503, _t0504, _t0505];
    real _t0507 = 0.971445146547e-16;
    real _t0508 = 0.e0;
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    vec4 _t050B = [_t0507, _t0508, _t0509, _t050A];
    tensor[4,4] _t050C = [_t04FC, _t0501, _t0506, _t050B];
    real _t050D = 0.57735026919e0;
    real _t050E = 0.57735026919e0;
    real _t050F = 0.57735026919e0;
    real _t0510 = -0.57735026919e0;
    vec4 _t0511 = [_t050D, _t050E, _t050F, _t0510];
    real _t0512 = -0.333333333333e0;
    real _t0513 = 0.666666666667e0;
    real _t0514 = -0.333333333333e0;
    real _t0515 = 0.333333333333e0;
    vec4 _t0516 = [_t0512, _t0513, _t0514, _t0515];
    real _t0517 = -0.333333333333e0;
    real _t0518 = -0.333333333333e0;
    real _t0519 = 0.666666666667e0;
    real _t051A = 0.333333333333e0;
    vec4 _t051B = [_t0517, _t0518, _t0519, _t051A];
    real _t051C = 0.971445146547e-16;
    real _t051D = 0.e0;
    real _t051E = 0.e0;
    real _t051F = 0.1e1;
    vec4 _t0520 = [_t051C, _t051D, _t051E, _t051F];
    tensor[4,4] _t0521 = [_t0511, _t0516, _t051B, _t0520];
    real _t0522 = -0.333333333333e0;
    real _t0523 = 0.666666666667e0;
    real _t0524 = -0.333333333333e0;
    real _t0525 = 0.333333333333e0;
    vec4 _t0526 = [_t0522, _t0523, _t0524, _t0525];
    real _t0527 = -0.57735026919e0;
    real _t0528 = -0.57735026919e0;
    real _t0529 = -0.57735026919e0;
    real _t052A = 0.57735026919e0;
    vec4 _t052B = [_t0527, _t0528, _t0529, _t052A];
    real _t052C = -0.333333333333e0;
    real _t052D = -0.333333333333e0;
    real _t052E = 0.666666666667e0;
    real _t052F = 0.333333333333e0;
    vec4 _t0530 = [_t052C, _t052D, _t052E, _t052F];
    real _t0531 = 0.971445146547e-16;
    real _t0532 = 0.e0;
    real _t0533 = 0.e0;
    real _t0534 = 0.1e1;
    vec4 _t0535 = [_t0531, _t0532, _t0533, _t0534];
    tensor[4,4] _t0536 = [_t0526, _t052B, _t0530, _t0535];
    real _t0537 = -0.333333333333e0;
    real _t0538 = 0.666666666667e0;
    real _t0539 = -0.333333333333e0;
    real _t053A = 0.333333333333e0;
    vec4 _t053B = [_t0537, _t0538, _t0539, _t053A];
    real _t053C = -0.333333333333e0;
    real _t053D = -0.333333333333e0;
    real _t053E = 0.666666666667e0;
    real _t053F = 0.333333333333e0;
    vec4 _t0540 = [_t053C, _t053D, _t053E, _t053F];
    real _t0541 = 0.57735026919e0;
    real _t0542 = 0.57735026919e0;
    real _t0543 = 0.57735026919e0;
    real _t0544 = -0.57735026919e0;
    vec4 _t0545 = [_t0541, _t0542, _t0543, _t0544];
    real _t0546 = 0.971445146547e-16;
    real _t0547 = 0.e0;
    real _t0548 = 0.e0;
    real _t0549 = 0.1e1;
    vec4 _t054A = [_t0546, _t0547, _t0548, _t0549];
    tensor[4,4] _t054B = [_t053B, _t0540, _t0545, _t054A];
    tensor[4,4][4] _t054C = {_t050C, _t0521, _t0536, _t054B};
    real _t054D = 0.57735026919e0;
    real _t054E = -0.1e1;
    real _t054F = -0.1e1;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    real _t0552 = 0.57735026919e0;
    real _t0553 = 0.1e1;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    vec4 _t0556 = [_t0552, _t0553, _t0554, _t0555];
    real _t0557 = 0.57735026919e0;
    real _t0558 = 0.e0;
    real _t0559 = 0.1e1;
    real _t055A = 0.e0;
    vec4 _t055B = [_t0557, _t0558, _t0559, _t055A];
    real _t055C = 0.e0;
    real _t055D = 0.e0;
    real _t055E = 0.e0;
    real _t055F = 0.1e1;
    vec4 _t0560 = [_t055C, _t055D, _t055E, _t055F];
    tensor[4,4] _t0561 = [_t0551, _t0556, _t055B, _t0560];
    real _t0562 = 0.1e1;
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.e0;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    real _t0567 = 0.e0;
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    vec4 _t056B = [_t0567, _t0568, _t0569, _t056A];
    real _t056C = 0.e0;
    real _t056D = 0.e0;
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    vec4 _t0570 = [_t056C, _t056D, _t056E, _t056F];
    real _t0571 = 0.e0;
    real _t0572 = 0.e0;
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    vec4 _t0575 = [_t0571, _t0572, _t0573, _t0574];
    tensor[4,4] _t0576 = [_t0566, _t056B, _t0570, _t0575];
    real _t0577 = 0.e0;
    real _t0578 = 0.1e1;
    real _t0579 = 0.e0;
    real _t057A = 0.e0;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    real _t057C = -0.1e1;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    vec4 _t0580 = [_t057C, _t057D, _t057E, _t057F];
    real _t0581 = 0.e0;
    real _t0582 = 0.e0;
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    vec4 _t0585 = [_t0581, _t0582, _t0583, _t0584];
    real _t0586 = 0.e0;
    real _t0587 = 0.e0;
    real _t0588 = 0.e0;
    real _t0589 = 0.1e1;
    vec4 _t058A = [_t0586, _t0587, _t0588, _t0589];
    tensor[4,4] _t058B = [_t057B, _t0580, _t0585, _t058A];
    real _t058C = 0.e0;
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    vec4 _t0590 = [_t058C, _t058D, _t058E, _t058F];
    real _t0591 = 0.e0;
    real _t0592 = 0.e0;
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    vec4 _t0595 = [_t0591, _t0592, _t0593, _t0594];
    real _t0596 = 0.1e1;
    real _t0597 = 0.e0;
    real _t0598 = 0.e0;
    real _t0599 = 0.e0;
    vec4 _t059A = [_t0596, _t0597, _t0598, _t0599];
    real _t059B = 0.e0;
    real _t059C = 0.e0;
    real _t059D = 0.e0;
    real _t059E = 0.1e1;
    vec4 _t059F = [_t059B, _t059C, _t059D, _t059E];
    tensor[4,4] _t05A0 = [_t0590, _t0595, _t059A, _t059F];
    tensor[4,4][4] _t05A1 = {_t0561, _t0576, _t058B, _t05A0};
    real _t05A2 = -0.1e1;
    real _t05A3 = -0.57735026919e0;
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.57735026919e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    vec4 _t05AB = [_t05A7, _t05A8, _t05A9, _t05AA];
    real _t05AC = 0.e0;
    real _t05AD = -0.57735026919e0;
    real _t05AE = 0.1e1;
    real _t05AF = 0.e0;
    vec4 _t05B0 = [_t05AC, _t05AD, _t05AE, _t05AF];
    real _t05B1 = 0.e0;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    vec4 _t05B5 = [_t05B1, _t05B2, _t05B3, _t05B4];
    tensor[4,4] _t05B6 = [_t05A6, _t05AB, _t05B0, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.e0;
    real _t05BA = 0.e0;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    real _t05BC = 0.1e1;
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    vec4 _t05C0 = [_t05BC, _t05BD, _t05BE, _t05BF];
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    vec4 _t05C5 = [_t05C1, _t05C2, _t05C3, _t05C4];
    real _t05C6 = 0.e0;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.1e1;
    vec4 _t05CA = [_t05C6, _t05C7, _t05C8, _t05C9];
    tensor[4,4] _t05CB = [_t05BB, _t05C0, _t05C5, _t05CA];
    real _t05CC = 0.1e1;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.e0;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    vec4 _t05D5 = [_t05D1, _t05D2, _t05D3, _t05D4];
    real _t05D6 = 0.e0;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    vec4 _t05DA = [_t05D6, _t05D7, _t05D8, _t05D9];
    real _t05DB = 0.e0;
    real _t05DC = 0.e0;
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    vec4 _t05DF = [_t05DB, _t05DC, _t05DD, _t05DE];
    tensor[4,4] _t05E0 = [_t05D0, _t05D5, _t05DA, _t05DF];
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    vec4 _t05E5 = [_t05E1, _t05E2, _t05E3, _t05E4];
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    vec4 _t05EA = [_t05E6, _t05E7, _t05E8, _t05E9];
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    vec4 _t05EF = [_t05EB, _t05EC, _t05ED, _t05EE];
    real _t05F0 = 0.e0;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    real _t05F3 = 0.1e1;
    vec4 _t05F4 = [_t05F0, _t05F1, _t05F2, _t05F3];
    tensor[4,4] _t05F5 = [_t05E5, _t05EA, _t05EF, _t05F4];
    tensor[4,4][4] _t05F6 = {_t05B6, _t05CB, _t05E0, _t05F5};
    real _t05F7 = -0.1e1;
    real _t05F8 = -0.1e1;
    real _t05F9 = 0.57735026919e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = 0.e0;
    real _t05FE = 0.57735026919e0;
    real _t05FF = 0.e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.1e1;
    real _t0603 = 0.57735026919e0;
    real _t0604 = 0.e0;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    real _t0606 = 0.e0;
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    vec4 _t060A = [_t0606, _t0607, _t0608, _t0609];
    tensor[4,4] _t060B = [_t05FB, _t0600, _t0605, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = 0.e0;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.1e1;
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    vec4 _t061F = [_t061B, _t061C, _t061D, _t061E];
    tensor[4,4] _t0620 = [_t0610, _t0615, _t061A, _t061F];
    real _t0621 = 0.1e1;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.e0;
    real _t0627 = 0.e0;
    real _t0628 = -0.1e1;
    real _t0629 = 0.e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.1e1;
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    real _t0630 = 0.e0;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    vec4 _t0634 = [_t0630, _t0631, _t0632, _t0633];
    tensor[4,4] _t0635 = [_t0625, _t062A, _t062F, _t0634];
    real _t0636 = 0.1e1;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    vec4 _t063F = [_t063B, _t063C, _t063D, _t063E];
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    vec4 _t0644 = [_t0640, _t0641, _t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    vec4 _t0649 = [_t0645, _t0646, _t0647, _t0648];
    tensor[4,4] _t064A = [_t063A, _t063F, _t0644, _t0649];
    tensor[4,4][4] _t064B = {_t060B, _t0620, _t0635, _t064A};
    tensor[4,4][4][4] _t064C = {_t054C, _t05A1, _t05F6, _t064B};
    real _t064D = time04E4[1];
    int _t064E = prim $r2i01B7 (_t064D);
    tensor[4,4][4] _t064F = prim $sub01C0<tensor[4,4][4]; %4> (_t064C, _t064E);
    real _t0650 = time04E4[1];
    int _t0651 = prim $r2i01B7 (_t0650);
    int[2] _t0652 = func nextCell404E8 (_t0651, cellId04E1, mesh04E0);
    int _t0653 = 1;
    int _t0654 = prim $sub01C0<int; %2> (_t0652, _t0653);
    tensor[4,4] _t0655 = prim $sub01C0<tensor[4,4]; %4> (_t064F, _t0654);
    string _t0656 = "\n";
    print (_t04ED, _t04EF, _t04F0, _t04F5, _t04F6, _t04F7, _t0655, _t0656);
    real _t0657 = time04E4[1];
    int _t0658 = prim $r2i01B7 (_t0657);
    int[2] _t0659 = func nextCell404E8 (_t0658, cellId04E1, mesh04E0);
    int _t065A = 0;
    int _t065B = prim $sub01C0<int; %2> (_t0659, _t065A);
    real _t065C = 0.1e1;
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.1e1;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.971445146547e-16;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.57735026919e0;
    real _t0672 = 0.57735026919e0;
    real _t0673 = 0.57735026919e0;
    real _t0674 = -0.57735026919e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = -0.333333333333e0;
    real _t0677 = 0.666666666667e0;
    real _t0678 = -0.333333333333e0;
    real _t0679 = 0.333333333333e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = -0.333333333333e0;
    real _t067C = -0.333333333333e0;
    real _t067D = 0.666666666667e0;
    real _t067E = 0.333333333333e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.971445146547e-16;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = -0.333333333333e0;
    real _t0687 = 0.666666666667e0;
    real _t0688 = -0.333333333333e0;
    real _t0689 = 0.333333333333e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = -0.57735026919e0;
    real _t068C = -0.57735026919e0;
    real _t068D = -0.57735026919e0;
    real _t068E = 0.57735026919e0;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = -0.333333333333e0;
    real _t0691 = -0.333333333333e0;
    real _t0692 = 0.666666666667e0;
    real _t0693 = 0.333333333333e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.971445146547e-16;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = -0.333333333333e0;
    real _t069C = 0.666666666667e0;
    real _t069D = -0.333333333333e0;
    real _t069E = 0.333333333333e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = -0.333333333333e0;
    real _t06A1 = -0.333333333333e0;
    real _t06A2 = 0.666666666667e0;
    real _t06A3 = 0.333333333333e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.57735026919e0;
    real _t06A6 = 0.57735026919e0;
    real _t06A7 = 0.57735026919e0;
    real _t06A8 = -0.57735026919e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.971445146547e-16;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][4] _t06B0 = {_t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.57735026919e0;
    real _t06B2 = -0.1e1;
    real _t06B3 = -0.1e1;
    real _t06B4 = 0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.57735026919e0;
    real _t06B7 = 0.1e1;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.57735026919e0;
    real _t06BC = 0.e0;
    real _t06BD = 0.1e1;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.e0;
    real _t06CC = 0.1e1;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.e0;
    real _t06DC = 0.1e1;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = -0.1e1;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    tensor[4,4][4] _t0705 = {_t06C5, _t06DA, _t06EF, _t0704};
    real _t0706 = -0.1e1;
    real _t0707 = -0.57735026919e0;
    real _t0708 = -0.1e1;
    real _t0709 = 0.1e1;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.1e1;
    real _t070C = -0.57735026919e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = -0.57735026919e0;
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    tensor[4,4] _t071A = [_t070A, _t070F, _t0714, _t0719];
    real _t071B = 0.e0;
    real _t071C = -0.1e1;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.1e1;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.1e1;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    tensor[4,4] _t072F = [_t071F, _t0724, _t0729, _t072E];
    real _t0730 = 0.1e1;
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.1e1;
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = 0.e0;
    real _t0750 = -0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    tensor[4,4][4] _t075A = {_t071A, _t072F, _t0744, _t0759};
    real _t075B = -0.1e1;
    real _t075C = -0.1e1;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.1e1;
    real _t0761 = 0.e0;
    real _t0762 = 0.57735026919e0;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.57735026919e0;
    real _t0768 = 0.e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    tensor[4,4] _t076F = [_t075F, _t0764, _t0769, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    tensor[4,4] _t0784 = [_t0774, _t0779, _t077E, _t0783];
    real _t0785 = 0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = -0.1e1;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.1e1;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    tensor[4,4] _t0799 = [_t0789, _t078E, _t0793, _t0798];
    real _t079A = 0.1e1;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.e0;
    vec4 _t079E = [_t079A, _t079B, _t079C, _t079D];
    real _t079F = 0.e0;
    real _t07A0 = 0.1e1;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    vec4 _t07A3 = [_t079F, _t07A0, _t07A1, _t07A2];
    real _t07A4 = 0.e0;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.1e1;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    real _t07AC = 0.1e1;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    tensor[4,4] _t07AE = [_t079E, _t07A3, _t07A8, _t07AD];
    tensor[4,4][4] _t07AF = {_t076F, _t0784, _t0799, _t07AE};
    tensor[4,4][4][4] _t07B0 = {_t06B0, _t0705, _t075A, _t07AF};
    real _t07B1 = time04E4[1];
    int _t07B2 = prim $r2i01B7 (_t07B1);
    tensor[4,4][4] _t07B3 = prim $sub01C0<tensor[4,4][4]; %4> (_t07B0, _t07B2);
    real _t07B4 = time04E4[1];
    int _t07B5 = prim $r2i01B7 (_t07B4);
    int[2] _t07B6 = func nextCell404E8 (_t07B5, cellId04E1, mesh04E0);
    int _t07B7 = 1;
    int _t07B8 = prim $sub01C0<int; %2> (_t07B6, _t07B7);
    tensor[4,4] _t07B9 = prim $sub01C0<tensor[4,4]; %4> (_t07B3, _t07B8);
    real _t07BA = time04E4[0];
    vec3 _t07BB = prim *0036<$[3]> (_t07BA, dPos04E3);
    vec3 _t07BC = prim +0017<$[3]> (_t07BB, refPos04E2);
    real _t07BD = _t07BC[0];
    real _t07BE = time04E4[0];
    vec3 _t07BF = prim *0036<$[3]> (_t07BE, dPos04E3);
    vec3 _t07C0 = prim +0017<$[3]> (_t07BF, refPos04E2);
    real _t07C1 = _t07C0[1];
    real _t07C2 = time04E4[0];
    vec3 _t07C3 = prim *0036<$[3]> (_t07C2, dPos04E3);
    vec3 _t07C4 = prim +0017<$[3]> (_t07C3, refPos04E2);
    real _t07C5 = _t07C4[2];
    real _t07C6 = 0.1e1;
    vec4 _t07C7 = [_t07BD, _t07C1, _t07C5, _t07C6];
    vec4 _t07C8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07B9, _t07C7);
    real _t07C9 = _t07C8[0];
    real _t07CA = 0.1e1;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.1e1;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    vec4 _t07D8 = [_t07D4, _t07D5, _t07D6, _t07D7];
    real _t07D9 = 0.971445146547e-16;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    tensor[4,4] _t07DE = [_t07CE, _t07D3, _t07D8, _t07DD];
    real _t07DF = 0.57735026919e0;
    real _t07E0 = 0.57735026919e0;
    real _t07E1 = 0.57735026919e0;
    real _t07E2 = -0.57735026919e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = -0.333333333333e0;
    real _t07E5 = 0.666666666667e0;
    real _t07E6 = -0.333333333333e0;
    real _t07E7 = 0.333333333333e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.333333333333e0;
    real _t07EA = -0.333333333333e0;
    real _t07EB = 0.666666666667e0;
    real _t07EC = 0.333333333333e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.971445146547e-16;
    real _t07EF = 0.e0;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.1e1;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    tensor[4,4] _t07F3 = [_t07E3, _t07E8, _t07ED, _t07F2];
    real _t07F4 = -0.333333333333e0;
    real _t07F5 = 0.666666666667e0;
    real _t07F6 = -0.333333333333e0;
    real _t07F7 = 0.333333333333e0;
    vec4 _t07F8 = [_t07F4, _t07F5, _t07F6, _t07F7];
    real _t07F9 = -0.57735026919e0;
    real _t07FA = -0.57735026919e0;
    real _t07FB = -0.57735026919e0;
    real _t07FC = 0.57735026919e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.333333333333e0;
    real _t07FF = -0.333333333333e0;
    real _t0800 = 0.666666666667e0;
    real _t0801 = 0.333333333333e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.971445146547e-16;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    tensor[4,4] _t0808 = [_t07F8, _t07FD, _t0802, _t0807];
    real _t0809 = -0.333333333333e0;
    real _t080A = 0.666666666667e0;
    real _t080B = -0.333333333333e0;
    real _t080C = 0.333333333333e0;
    vec4 _t080D = [_t0809, _t080A, _t080B, _t080C];
    real _t080E = -0.333333333333e0;
    real _t080F = -0.333333333333e0;
    real _t0810 = 0.666666666667e0;
    real _t0811 = 0.333333333333e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.57735026919e0;
    real _t0814 = 0.57735026919e0;
    real _t0815 = 0.57735026919e0;
    real _t0816 = -0.57735026919e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.971445146547e-16;
    real _t0819 = 0.e0;
    real _t081A = 0.e0;
    real _t081B = 0.1e1;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    tensor[4,4] _t081D = [_t080D, _t0812, _t0817, _t081C];
    tensor[4,4][4] _t081E = {_t07DE, _t07F3, _t0808, _t081D};
    real _t081F = 0.57735026919e0;
    real _t0820 = -0.1e1;
    real _t0821 = -0.1e1;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = 0.57735026919e0;
    real _t0825 = 0.1e1;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.57735026919e0;
    real _t082A = 0.e0;
    real _t082B = 0.1e1;
    real _t082C = 0.e0;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    tensor[4,4] _t0833 = [_t0823, _t0828, _t082D, _t0832];
    real _t0834 = 0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = 0.e0;
    real _t083A = 0.1e1;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = 0.e0;
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    tensor[4,4] _t0848 = [_t0838, _t083D, _t0842, _t0847];
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    real _t085B = 0.1e1;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    tensor[4,4] _t085D = [_t084D, _t0852, _t0857, _t085C];
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    vec4 _t0862 = [_t085E, _t085F, _t0860, _t0861];
    real _t0863 = 0.e0;
    real _t0864 = 0.e0;
    real _t0865 = 0.1e1;
    real _t0866 = 0.e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.1e1;
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.e0;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.1e1;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    tensor[4,4] _t0872 = [_t0862, _t0867, _t086C, _t0871];
    tensor[4,4][4] _t0873 = {_t0833, _t0848, _t085D, _t0872};
    real _t0874 = -0.1e1;
    real _t0875 = -0.57735026919e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.1e1;
    real _t087A = -0.57735026919e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = -0.57735026919e0;
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    vec4 _t0887 = [_t0883, _t0884, _t0885, _t0886];
    tensor[4,4] _t0888 = [_t0878, _t087D, _t0882, _t0887];
    real _t0889 = 0.e0;
    real _t088A = -0.1e1;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    vec4 _t089C = [_t0898, _t0899, _t089A, _t089B];
    tensor[4,4] _t089D = [_t088D, _t0892, _t0897, _t089C];
    real _t089E = 0.1e1;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.e0;
    real _t08A4 = 0.1e1;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    real _t08AD = 0.e0;
    real _t08AE = 0.e0;
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    vec4 _t08B1 = [_t08AD, _t08AE, _t08AF, _t08B0];
    tensor[4,4] _t08B2 = [_t08A2, _t08A7, _t08AC, _t08B1];
    real _t08B3 = 0.1e1;
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    vec4 _t08B7 = [_t08B3, _t08B4, _t08B5, _t08B6];
    real _t08B8 = 0.e0;
    real _t08B9 = 0.e0;
    real _t08BA = 0.1e1;
    real _t08BB = 0.e0;
    vec4 _t08BC = [_t08B8, _t08B9, _t08BA, _t08BB];
    real _t08BD = 0.e0;
    real _t08BE = -0.1e1;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    tensor[4,4] _t08C7 = [_t08B7, _t08BC, _t08C1, _t08C6];
    tensor[4,4][4] _t08C8 = {_t0888, _t089D, _t08B2, _t08C7};
    real _t08C9 = -0.1e1;
    real _t08CA = -0.1e1;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.1e1;
    real _t08CF = 0.e0;
    real _t08D0 = 0.57735026919e0;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.1e1;
    real _t08D5 = 0.57735026919e0;
    real _t08D6 = 0.e0;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.1e1;
    vec4 _t08DC = [_t08D8, _t08D9, _t08DA, _t08DB];
    tensor[4,4] _t08DD = [_t08CD, _t08D2, _t08D7, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.1e1;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.1e1;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    vec4 _t08F1 = [_t08ED, _t08EE, _t08EF, _t08F0];
    tensor[4,4] _t08F2 = [_t08E2, _t08E7, _t08EC, _t08F1];
    real _t08F3 = 0.1e1;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.e0;
    real _t08FA = -0.1e1;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    vec4 _t0906 = [_t0902, _t0903, _t0904, _t0905];
    tensor[4,4] _t0907 = [_t08F7, _t08FC, _t0901, _t0906];
    real _t0908 = 0.1e1;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.e0;
    vec4 _t090C = [_t0908, _t0909, _t090A, _t090B];
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    vec4 _t0911 = [_t090D, _t090E, _t090F, _t0910];
    real _t0912 = 0.e0;
    real _t0913 = 0.e0;
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    vec4 _t0916 = [_t0912, _t0913, _t0914, _t0915];
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    vec4 _t091B = [_t0917, _t0918, _t0919, _t091A];
    tensor[4,4] _t091C = [_t090C, _t0911, _t0916, _t091B];
    tensor[4,4][4] _t091D = {_t08DD, _t08F2, _t0907, _t091C};
    tensor[4,4][4][4] _t091E = {_t081E, _t0873, _t08C8, _t091D};
    real _t091F = time04E4[1];
    int _t0920 = prim $r2i01B7 (_t091F);
    tensor[4,4][4] _t0921 = prim $sub01C0<tensor[4,4][4]; %4> (_t091E, _t0920);
    real _t0922 = time04E4[1];
    int _t0923 = prim $r2i01B7 (_t0922);
    int[2] _t0924 = func nextCell404E8 (_t0923, cellId04E1, mesh04E0);
    int _t0925 = 1;
    int _t0926 = prim $sub01C0<int; %2> (_t0924, _t0925);
    tensor[4,4] _t0927 = prim $sub01C0<tensor[4,4]; %4> (_t0921, _t0926);
    real _t0928 = time04E4[0];
    vec3 _t0929 = prim *0036<$[3]> (_t0928, dPos04E3);
    vec3 _t092A = prim +0017<$[3]> (_t0929, refPos04E2);
    real _t092B = _t092A[0];
    real _t092C = time04E4[0];
    vec3 _t092D = prim *0036<$[3]> (_t092C, dPos04E3);
    vec3 _t092E = prim +0017<$[3]> (_t092D, refPos04E2);
    real _t092F = _t092E[1];
    real _t0930 = time04E4[0];
    vec3 _t0931 = prim *0036<$[3]> (_t0930, dPos04E3);
    vec3 _t0932 = prim +0017<$[3]> (_t0931, refPos04E2);
    real _t0933 = _t0932[2];
    real _t0934 = 0.1e1;
    vec4 _t0935 = [_t092B, _t092F, _t0933, _t0934];
    vec4 _t0936 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0927, _t0935);
    real _t0937 = _t0936[1];
    real _t0938 = 0.1e1;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.1e1;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    vec4 _t0946 = [_t0942, _t0943, _t0944, _t0945];
    real _t0947 = 0.971445146547e-16;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    vec4 _t094B = [_t0947, _t0948, _t0949, _t094A];
    tensor[4,4] _t094C = [_t093C, _t0941, _t0946, _t094B];
    real _t094D = 0.57735026919e0;
    real _t094E = 0.57735026919e0;
    real _t094F = 0.57735026919e0;
    real _t0950 = -0.57735026919e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = -0.333333333333e0;
    real _t0953 = 0.666666666667e0;
    real _t0954 = -0.333333333333e0;
    real _t0955 = 0.333333333333e0;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    real _t0957 = -0.333333333333e0;
    real _t0958 = -0.333333333333e0;
    real _t0959 = 0.666666666667e0;
    real _t095A = 0.333333333333e0;
    vec4 _t095B = [_t0957, _t0958, _t0959, _t095A];
    real _t095C = 0.971445146547e-16;
    real _t095D = 0.e0;
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    vec4 _t0960 = [_t095C, _t095D, _t095E, _t095F];
    tensor[4,4] _t0961 = [_t0951, _t0956, _t095B, _t0960];
    real _t0962 = -0.333333333333e0;
    real _t0963 = 0.666666666667e0;
    real _t0964 = -0.333333333333e0;
    real _t0965 = 0.333333333333e0;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    real _t0967 = -0.57735026919e0;
    real _t0968 = -0.57735026919e0;
    real _t0969 = -0.57735026919e0;
    real _t096A = 0.57735026919e0;
    vec4 _t096B = [_t0967, _t0968, _t0969, _t096A];
    real _t096C = -0.333333333333e0;
    real _t096D = -0.333333333333e0;
    real _t096E = 0.666666666667e0;
    real _t096F = 0.333333333333e0;
    vec4 _t0970 = [_t096C, _t096D, _t096E, _t096F];
    real _t0971 = 0.971445146547e-16;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.1e1;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    tensor[4,4] _t0976 = [_t0966, _t096B, _t0970, _t0975];
    real _t0977 = -0.333333333333e0;
    real _t0978 = 0.666666666667e0;
    real _t0979 = -0.333333333333e0;
    real _t097A = 0.333333333333e0;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    real _t097C = -0.333333333333e0;
    real _t097D = -0.333333333333e0;
    real _t097E = 0.666666666667e0;
    real _t097F = 0.333333333333e0;
    vec4 _t0980 = [_t097C, _t097D, _t097E, _t097F];
    real _t0981 = 0.57735026919e0;
    real _t0982 = 0.57735026919e0;
    real _t0983 = 0.57735026919e0;
    real _t0984 = -0.57735026919e0;
    vec4 _t0985 = [_t0981, _t0982, _t0983, _t0984];
    real _t0986 = 0.971445146547e-16;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.1e1;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    tensor[4,4] _t098B = [_t097B, _t0980, _t0985, _t098A];
    tensor[4,4][4] _t098C = {_t094C, _t0961, _t0976, _t098B};
    real _t098D = 0.57735026919e0;
    real _t098E = -0.1e1;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.57735026919e0;
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.57735026919e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    vec4 _t09A0 = [_t099C, _t099D, _t099E, _t099F];
    tensor[4,4] _t09A1 = [_t0991, _t0996, _t099B, _t09A0];
    real _t09A2 = 0.1e1;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.e0;
    real _t09A8 = 0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    real _t09B1 = 0.e0;
    real _t09B2 = 0.e0;
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    vec4 _t09B5 = [_t09B1, _t09B2, _t09B3, _t09B4];
    tensor[4,4] _t09B6 = [_t09A6, _t09AB, _t09B0, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    real _t09BC = -0.1e1;
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    vec4 _t09C0 = [_t09BC, _t09BD, _t09BE, _t09BF];
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    vec4 _t09C5 = [_t09C1, _t09C2, _t09C3, _t09C4];
    real _t09C6 = 0.e0;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    real _t09C9 = 0.1e1;
    vec4 _t09CA = [_t09C6, _t09C7, _t09C8, _t09C9];
    tensor[4,4] _t09CB = [_t09BB, _t09C0, _t09C5, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    real _t09D1 = 0.e0;
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    vec4 _t09D5 = [_t09D1, _t09D2, _t09D3, _t09D4];
    real _t09D6 = 0.1e1;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    vec4 _t09DA = [_t09D6, _t09D7, _t09D8, _t09D9];
    real _t09DB = 0.e0;
    real _t09DC = 0.e0;
    real _t09DD = 0.e0;
    real _t09DE = 0.1e1;
    vec4 _t09DF = [_t09DB, _t09DC, _t09DD, _t09DE];
    tensor[4,4] _t09E0 = [_t09D0, _t09D5, _t09DA, _t09DF];
    tensor[4,4][4] _t09E1 = {_t09A1, _t09B6, _t09CB, _t09E0};
    real _t09E2 = -0.1e1;
    real _t09E3 = -0.57735026919e0;
    real _t09E4 = -0.1e1;
    real _t09E5 = 0.1e1;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.1e1;
    real _t09E8 = -0.57735026919e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.57735026919e0;
    real _t09EE = 0.1e1;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.e0;
    real _t09F2 = 0.e0;
    real _t09F3 = 0.e0;
    real _t09F4 = 0.1e1;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    tensor[4,4] _t09F6 = [_t09E6, _t09EB, _t09F0, _t09F5];
    real _t09F7 = 0.e0;
    real _t09F8 = -0.1e1;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.1e1;
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    real _t0A06 = 0.e0;
    real _t0A07 = 0.e0;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.1e1;
    vec4 _t0A0A = [_t0A06, _t0A07, _t0A08, _t0A09];
    tensor[4,4] _t0A0B = [_t09FB, _t0A00, _t0A05, _t0A0A];
    real _t0A0C = 0.1e1;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    vec4 _t0A1F = [_t0A1B, _t0A1C, _t0A1D, _t0A1E];
    tensor[4,4] _t0A20 = [_t0A10, _t0A15, _t0A1A, _t0A1F];
    real _t0A21 = 0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = -0.1e1;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    real _t0A30 = 0.e0;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    vec4 _t0A34 = [_t0A30, _t0A31, _t0A32, _t0A33];
    tensor[4,4] _t0A35 = [_t0A25, _t0A2A, _t0A2F, _t0A34];
    tensor[4,4][4] _t0A36 = {_t09F6, _t0A0B, _t0A20, _t0A35};
    real _t0A37 = -0.1e1;
    real _t0A38 = -0.1e1;
    real _t0A39 = 0.57735026919e0;
    real _t0A3A = 0.1e1;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.57735026919e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.1e1;
    real _t0A43 = 0.57735026919e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.e0;
    real _t0A49 = 0.1e1;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    tensor[4,4] _t0A4B = [_t0A3B, _t0A40, _t0A45, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.e0;
    real _t0A5E = 0.1e1;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    tensor[4,4] _t0A60 = [_t0A50, _t0A55, _t0A5A, _t0A5F];
    real _t0A61 = 0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = -0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.1e1;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.1e1;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    tensor[4,4] _t0A75 = [_t0A65, _t0A6A, _t0A6F, _t0A74];
    real _t0A76 = 0.1e1;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.1e1;
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    real _t0A85 = 0.e0;
    real _t0A86 = 0.e0;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.1e1;
    vec4 _t0A89 = [_t0A85, _t0A86, _t0A87, _t0A88];
    tensor[4,4] _t0A8A = [_t0A7A, _t0A7F, _t0A84, _t0A89];
    tensor[4,4][4] _t0A8B = {_t0A4B, _t0A60, _t0A75, _t0A8A};
    tensor[4,4][4][4] _t0A8C = {_t098C, _t09E1, _t0A36, _t0A8B};
    real _t0A8D = time04E4[1];
    int _t0A8E = prim $r2i01B7 (_t0A8D);
    tensor[4,4][4] _t0A8F = prim $sub01C0<tensor[4,4][4]; %4> (_t0A8C, _t0A8E);
    real _t0A90 = time04E4[1];
    int _t0A91 = prim $r2i01B7 (_t0A90);
    int[2] _t0A92 = func nextCell404E8 (_t0A91, cellId04E1, mesh04E0);
    int _t0A93 = 1;
    int _t0A94 = prim $sub01C0<int; %2> (_t0A92, _t0A93);
    tensor[4,4] _t0A95 = prim $sub01C0<tensor[4,4]; %4> (_t0A8F, _t0A94);
    real _t0A96 = time04E4[0];
    vec3 _t0A97 = prim *0036<$[3]> (_t0A96, dPos04E3);
    vec3 _t0A98 = prim +0017<$[3]> (_t0A97, refPos04E2);
    real _t0A99 = _t0A98[0];
    real _t0A9A = time04E4[0];
    vec3 _t0A9B = prim *0036<$[3]> (_t0A9A, dPos04E3);
    vec3 _t0A9C = prim +0017<$[3]> (_t0A9B, refPos04E2);
    real _t0A9D = _t0A9C[1];
    real _t0A9E = time04E4[0];
    vec3 _t0A9F = prim *0036<$[3]> (_t0A9E, dPos04E3);
    vec3 _t0AA0 = prim +0017<$[3]> (_t0A9F, refPos04E2);
    real _t0AA1 = _t0AA0[2];
    real _t0AA2 = 0.1e1;
    vec4 _t0AA3 = [_t0A99, _t0A9D, _t0AA1, _t0AA2];
    vec4 _t0AA4 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A95, _t0AA3);
    real _t0AA5 = _t0AA4[2];
    vec3 _t0AA6 = [_t07C9, _t0937, _t0AA5];
    real _t0AA7 = time04E4[1];
    int _t0AA8 = prim $r2i01B7 (_t0AA7);
    int[2] _t0AA9 = func nextCell404E8 (_t0AA8, cellId04E1, mesh04E0);
    int _t0AAA = 1;
    int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
    Femdata: MeshPos _t0AAC = extractFemItemN((mesh04E0, _t065B, _t0AA6, _t0AAB),RefBuild(Mesh),);
    return _t0AAC;
  } else {
    real _t0AAD = time04E4[0];
    vec3 _t0AAE = prim *0036<$[3]> (_t0AAD, dPos04E3);
    vec3 _t0AAF = prim +0017<$[3]> (_t0AAE, refPos04E2);
    Femdata: MeshPos _t0AB0 = extractFemItemN((mesh04E0, _t0AAF),InvalidBuildBoundary(MeshPos),);
    return _t0AB0;
  }
}
function int[2]#8 nextCell404E8 (int faceIdx0AB1, int cell0AB2, Femdata: Mesh mesh0AB3)
{
  int _t0AB4 = -1;
  bool _t0AB5 = prim ==0082 (faceIdx0AB1, _t0AB4);
  if _t0AB5 {
    int _t0AB6 = -1;
    int _t0AB7 = -1;
    int[2] _t0AB8 = {_t0AB6, _t0AB7};
    return _t0AB8;
  } else {
    int _t0AB9 = 8;
    int _t0ABA = prim *0033 (cell0AB2, _t0AB9);
    int _t0ABB = 2;
    int _t0ABC = prim *0033 (faceIdx0AB1, _t0ABB);
    int _t0ABD = prim +0015 (_t0ABA, _t0ABC);
    int[2] _t0ABE = extractFemItemN((mesh0AB3, _t0ABD),CellFaceCell(Mesh),);
    return _t0ABE;
  }
}
function vec2#0 _enter0ABF (vec3 refPos0AC0, vec3 dPos0AC1)
{
  real time0AC2 = +inf;
  int face0AC3 = -1;
  real faceTime0AC4 = -inf;
  string _t0AC5 = "\ntest :";
  real _t0AC6 = 0.57735026919e0;
  real _t0AC7 = 0.57735026919e0;
  real _t0AC8 = 0.57735026919e0;
  real _t0AC9 = 0.57735026919e0;
  vec3 _t0ACA = [_t0AC7, _t0AC8, _t0AC9];
  real _t0ACB = prim •00CE<$[3]; $[3]; $[]> (_t0ACA, refPos0AC0);
  real _t0ACC = prim -0026<$[]> (_t0AC6, _t0ACB);
  real _t0ACD = 0.57735026919e0;
  real _t0ACE = 0.57735026919e0;
  real _t0ACF = 0.57735026919e0;
  vec3 _t0AD0 = [_t0ACD, _t0ACE, _t0ACF];
  real _t0AD1 = prim •00CE<$[3]; $[3]; $[]> (_t0AD0, dPos0AC1);
  real _t0AD2 = prim /0055 (_t0ACC, _t0AD1);
  string _t0AD3 = " test2: ";
  real _t0AD4 = 0.57735026919e0;
  real _t0AD5 = 0.57735026919e0;
  real _t0AD6 = 0.57735026919e0;
  vec3 _t0AD7 = [_t0AD4, _t0AD5, _t0AD6];
  real _t0AD8 = prim •00CE<$[3]; $[3]; $[]> (_t0AD7, dPos0AC1);
  string _t0AD9 = " insideTest: ";
  real _t0ADA = 0.1e1;
  real _t0ADB = 0.1e-7;
  real _t0ADC = prim +0017<$[]> (_t0ADA, _t0ADB);
  real _t0ADD = 0.1e1;
  real _t0ADE = 0.1e1;
  real _t0ADF = 0.1e1;
  vec3 _t0AE0 = [_t0ADD, _t0ADE, _t0ADF];
  real _t0AE1 = 0.57735026919e0;
  real _t0AE2 = 0.57735026919e0;
  real _t0AE3 = 0.57735026919e0;
  real _t0AE4 = 0.57735026919e0;
  vec3 _t0AE5 = [_t0AE2, _t0AE3, _t0AE4];
  real _t0AE6 = prim •00CE<$[3]; $[3]; $[]> (_t0AE5, refPos0AC0);
  real _t0AE7 = prim -0026<$[]> (_t0AE1, _t0AE6);
  real _t0AE8 = 0.57735026919e0;
  real _t0AE9 = 0.57735026919e0;
  real _t0AEA = 0.57735026919e0;
  vec3 _t0AEB = [_t0AE8, _t0AE9, _t0AEA];
  real _t0AEC = prim •00CE<$[3]; $[3]; $[]> (_t0AEB, dPos0AC1);
  real _t0AED = prim /0055 (_t0AE7, _t0AEC);
  vec3 _t0AEE = prim *0038<$[3]> (dPos0AC1, _t0AED);
  vec3 _t0AEF = prim +0017<$[3]> (refPos0AC0, _t0AEE);
  real _t0AF0 = prim •00CE<$[3]; $[3]; $[]> (_t0AE0, _t0AEF);
  bool _t0AF1 = prim >0080 (_t0ADC, _t0AF0);
  real _t0AF2 = 0.1e-7;
  real _t0AF3 = 0.1e-7;
  real _t0AF4 = 0.1e-7;
  vec3 _t0AF5 = [_t0AF2, _t0AF3, _t0AF4];
  real _t0AF6 = 0.57735026919e0;
  real _t0AF7 = 0.57735026919e0;
  real _t0AF8 = 0.57735026919e0;
  real _t0AF9 = 0.57735026919e0;
  vec3 _t0AFA = [_t0AF7, _t0AF8, _t0AF9];
  real _t0AFB = prim •00CE<$[3]; $[3]; $[]> (_t0AFA, refPos0AC0);
  real _t0AFC = prim -0026<$[]> (_t0AF6, _t0AFB);
  real _t0AFD = 0.57735026919e0;
  real _t0AFE = 0.57735026919e0;
  real _t0AFF = 0.57735026919e0;
  vec3 _t0B00 = [_t0AFD, _t0AFE, _t0AFF];
  real _t0B01 = prim •00CE<$[3]; $[3]; $[]> (_t0B00, dPos0AC1);
  real _t0B02 = prim /0055 (_t0AFC, _t0B01);
  vec3 _t0B03 = prim *0038<$[3]> (dPos0AC1, _t0B02);
  vec3 _t0B04 = prim +0017<$[3]> (refPos0AC0, _t0B03);
  vec3 _t0B05 = prim +0017<$[3]> (_t0AF5, _t0B04);
  real _t0B06 = _t0B05[0];
  real _t0B07 = -0.e0;
  bool _t0B08 = prim >0080 (_t0B06, _t0B07);
  real _t0B09 = 0.1e-7;
  real _t0B0A = 0.1e-7;
  real _t0B0B = 0.1e-7;
  vec3 _t0B0C = [_t0B09, _t0B0A, _t0B0B];
  real _t0B0D = 0.57735026919e0;
  real _t0B0E = 0.57735026919e0;
  real _t0B0F = 0.57735026919e0;
  real _t0B10 = 0.57735026919e0;
  vec3 _t0B11 = [_t0B0E, _t0B0F, _t0B10];
  real _t0B12 = prim •00CE<$[3]; $[3]; $[]> (_t0B11, refPos0AC0);
  real _t0B13 = prim -0026<$[]> (_t0B0D, _t0B12);
  real _t0B14 = 0.57735026919e0;
  real _t0B15 = 0.57735026919e0;
  real _t0B16 = 0.57735026919e0;
  vec3 _t0B17 = [_t0B14, _t0B15, _t0B16];
  real _t0B18 = prim •00CE<$[3]; $[3]; $[]> (_t0B17, dPos0AC1);
  real _t0B19 = prim /0055 (_t0B13, _t0B18);
  vec3 _t0B1A = prim *0038<$[3]> (dPos0AC1, _t0B19);
  vec3 _t0B1B = prim +0017<$[3]> (refPos0AC0, _t0B1A);
  vec3 _t0B1C = prim +0017<$[3]> (_t0B0C, _t0B1B);
  real _t0B1D = _t0B1C[1];
  real _t0B1E = -0.e0;
  bool _t0B1F = prim >0080 (_t0B1D, _t0B1E);
  real _t0B20 = 0.1e-7;
  real _t0B21 = 0.1e-7;
  real _t0B22 = 0.1e-7;
  vec3 _t0B23 = [_t0B20, _t0B21, _t0B22];
  real _t0B24 = 0.57735026919e0;
  real _t0B25 = 0.57735026919e0;
  real _t0B26 = 0.57735026919e0;
  real _t0B27 = 0.57735026919e0;
  vec3 _t0B28 = [_t0B25, _t0B26, _t0B27];
  real _t0B29 = prim •00CE<$[3]; $[3]; $[]> (_t0B28, refPos0AC0);
  real _t0B2A = prim -0026<$[]> (_t0B24, _t0B29);
  real _t0B2B = 0.57735026919e0;
  real _t0B2C = 0.57735026919e0;
  real _t0B2D = 0.57735026919e0;
  vec3 _t0B2E = [_t0B2B, _t0B2C, _t0B2D];
  real _t0B2F = prim •00CE<$[3]; $[3]; $[]> (_t0B2E, dPos0AC1);
  real _t0B30 = prim /0055 (_t0B2A, _t0B2F);
  vec3 _t0B31 = prim *0038<$[3]> (dPos0AC1, _t0B30);
  vec3 _t0B32 = prim +0017<$[3]> (refPos0AC0, _t0B31);
  vec3 _t0B33 = prim +0017<$[3]> (_t0B23, _t0B32);
  real _t0B34 = _t0B33[2];
  real _t0B35 = -0.e0;
  bool _t0B36 = prim >0080 (_t0B34, _t0B35);
  bool _t0B37 = prim $and01C4 (_t0B1F, _t0B36);
  bool _t0B38 = prim $and01C4 (_t0B08, _t0B37);
  bool _t0B39 = prim $and01C4 (_t0AF1, _t0B38);
  string _t0B3A = " dist: ";
  real _t0B3B = 0.57735026919e0;
  real _t0B3C = 0.57735026919e0;
  real _t0B3D = 0.57735026919e0;
  real _t0B3E = 0.57735026919e0;
  vec3 _t0B3F = [_t0B3C, _t0B3D, _t0B3E];
  real _t0B40 = prim •00CE<$[3]; $[3]; $[]> (_t0B3F, refPos0AC0);
  real _t0B41 = prim -0026<$[]> (_t0B3B, _t0B40);
  real _t0B42 = prim |()|00B5<$[]> (_t0B41);
  string _t0B43 = "signed dist: ";
  real _t0B44 = 0.57735026919e0;
  real _t0B45 = 0.57735026919e0;
  real _t0B46 = 0.57735026919e0;
  real _t0B47 = 0.57735026919e0;
  vec3 _t0B48 = [_t0B45, _t0B46, _t0B47];
  real _t0B49 = prim •00CE<$[3]; $[3]; $[]> (_t0B48, refPos0AC0);
  real _t0B4A = prim -0026<$[]> (_t0B44, _t0B49);
  string _t0B4B = " face: ";
  int _t0B4C = 0;
  string _t0B4D = " place: ";
  real _t0B4E = 0.57735026919e0;
  real _t0B4F = 0.57735026919e0;
  real _t0B50 = 0.57735026919e0;
  real _t0B51 = 0.57735026919e0;
  vec3 _t0B52 = [_t0B4F, _t0B50, _t0B51];
  real _t0B53 = prim •00CE<$[3]; $[3]; $[]> (_t0B52, refPos0AC0);
  real _t0B54 = prim -0026<$[]> (_t0B4E, _t0B53);
  real _t0B55 = 0.57735026919e0;
  real _t0B56 = 0.57735026919e0;
  real _t0B57 = 0.57735026919e0;
  vec3 _t0B58 = [_t0B55, _t0B56, _t0B57];
  real _t0B59 = prim •00CE<$[3]; $[3]; $[]> (_t0B58, dPos0AC1);
  real _t0B5A = prim /0055 (_t0B54, _t0B59);
  vec3 _t0B5B = prim *0038<$[3]> (dPos0AC1, _t0B5A);
  vec3 _t0B5C = prim +0017<$[3]> (refPos0AC0, _t0B5B);
  string _t0B5D = " error: ";
  real _t0B5E = 0.57735026919e0;
  real _t0B5F = 0.57735026919e0;
  real _t0B60 = 0.57735026919e0;
  real _t0B61 = 0.57735026919e0;
  vec3 _t0B62 = [_t0B5F, _t0B60, _t0B61];
  real _t0B63 = 0.57735026919e0;
  real _t0B64 = 0.57735026919e0;
  real _t0B65 = 0.57735026919e0;
  real _t0B66 = 0.57735026919e0;
  vec3 _t0B67 = [_t0B64, _t0B65, _t0B66];
  real _t0B68 = prim •00CE<$[3]; $[3]; $[]> (_t0B67, refPos0AC0);
  real _t0B69 = prim -0026<$[]> (_t0B63, _t0B68);
  real _t0B6A = 0.57735026919e0;
  real _t0B6B = 0.57735026919e0;
  real _t0B6C = 0.57735026919e0;
  vec3 _t0B6D = [_t0B6A, _t0B6B, _t0B6C];
  real _t0B6E = prim •00CE<$[3]; $[3]; $[]> (_t0B6D, dPos0AC1);
  real _t0B6F = prim /0055 (_t0B69, _t0B6E);
  vec3 _t0B70 = prim *0038<$[3]> (dPos0AC1, _t0B6F);
  vec3 _t0B71 = prim +0017<$[3]> (refPos0AC0, _t0B70);
  real _t0B72 = prim •00CE<$[3]; $[3]; $[]> (_t0B62, _t0B71);
  real _t0B73 = prim -0026<$[]> (_t0B5E, _t0B72);
  real _t0B74 = prim |()|00B5<$[]> (_t0B73);
  string _t0B75 = " offset :";
  string _t0B76 = " dp: ";
  string _t0B77 = " otherPossibleTime: ";
  string _t0B78 = "\n";
  print (_t0AC5, _t0AD2, _t0AD3, _t0AD8, _t0AD9, _t0B39, _t0B3A, _t0B42, _t0B43, _t0B4A, _t0B4B, _t0B4C, _t0B4D, _t0B5C, _t0B5D, _t0B74, _t0B75, refPos0AC0, _t0B76, dPos0AC1, _t0B77, faceTime0AC4, _t0B78);
  real _t0B79 = 0.57735026919e0;
  real _t0B7A = 0.57735026919e0;
  real _t0B7B = 0.57735026919e0;
  real _t0B7C = 0.57735026919e0;
  vec3 _t0B7D = [_t0B7A, _t0B7B, _t0B7C];
  real _t0B7E = prim •00CE<$[3]; $[3]; $[]> (_t0B7D, refPos0AC0);
  real _t0B7F = prim -0026<$[]> (_t0B79, _t0B7E);
  real _t0B80 = 0.57735026919e0;
  real _t0B81 = 0.57735026919e0;
  real _t0B82 = 0.57735026919e0;
  vec3 _t0B83 = [_t0B80, _t0B81, _t0B82];
  real _t0B84 = prim •00CE<$[3]; $[3]; $[]> (_t0B83, dPos0AC1);
  real _t0B85 = prim /0055 (_t0B7F, _t0B84);
  real _t0B86 = -0.1e-7;
  bool _t0B87 = prim >=007E (_t0B85, _t0B86);
  real _t0B88 = 0.57735026919e0;
  real _t0B89 = 0.57735026919e0;
  real _t0B8A = 0.57735026919e0;
  real _t0B8B = 0.57735026919e0;
  vec3 _t0B8C = [_t0B89, _t0B8A, _t0B8B];
  real _t0B8D = prim •00CE<$[3]; $[3]; $[]> (_t0B8C, refPos0AC0);
  real _t0B8E = prim -0026<$[]> (_t0B88, _t0B8D);
  real _t0B8F = 0.57735026919e0;
  real _t0B90 = 0.57735026919e0;
  real _t0B91 = 0.57735026919e0;
  vec3 _t0B92 = [_t0B8F, _t0B90, _t0B91];
  real _t0B93 = prim •00CE<$[3]; $[3]; $[]> (_t0B92, dPos0AC1);
  real _t0B94 = prim /0055 (_t0B8E, _t0B93);
  bool _t0B95 = prim >0080 (time0AC2, _t0B94);
  real _t0B96 = 0.57735026919e0;
  real _t0B97 = 0.57735026919e0;
  real _t0B98 = 0.57735026919e0;
  vec3 _t0B99 = [_t0B96, _t0B97, _t0B98];
  real _t0B9A = prim •00CE<$[3]; $[3]; $[]> (_t0B99, dPos0AC1);
  real _t0B9B = prim |()|00B5<$[]> (_t0B9A);
  real _t0B9C = 0.1e-7;
  bool _t0B9D = prim >=007E (_t0B9B, _t0B9C);
  bool _t0B9E = prim $and01C4 (_t0B95, _t0B9D);
  bool _t0B9F = prim $and01C4 (_t0B87, _t0B9E);
  if _t0B9F {
    real _t0BA0 = 0.1e1;
    real _t0BA1 = 0.1e-7;
    real _t0BA2 = prim +0017<$[]> (_t0BA0, _t0BA1);
    real _t0BA3 = 0.1e1;
    real _t0BA4 = 0.1e1;
    real _t0BA5 = 0.1e1;
    vec3 _t0BA6 = [_t0BA3, _t0BA4, _t0BA5];
    real _t0BA7 = 0.57735026919e0;
    real _t0BA8 = 0.57735026919e0;
    real _t0BA9 = 0.57735026919e0;
    real _t0BAA = 0.57735026919e0;
    vec3 _t0BAB = [_t0BA8, _t0BA9, _t0BAA];
    real _t0BAC = prim •00CE<$[3]; $[3]; $[]> (_t0BAB, refPos0AC0);
    real _t0BAD = prim -0026<$[]> (_t0BA7, _t0BAC);
    real _t0BAE = 0.57735026919e0;
    real _t0BAF = 0.57735026919e0;
    real _t0BB0 = 0.57735026919e0;
    vec3 _t0BB1 = [_t0BAE, _t0BAF, _t0BB0];
    real _t0BB2 = prim •00CE<$[3]; $[3]; $[]> (_t0BB1, dPos0AC1);
    real _t0BB3 = prim /0055 (_t0BAD, _t0BB2);
    vec3 _t0BB4 = prim *0038<$[3]> (dPos0AC1, _t0BB3);
    vec3 _t0BB5 = prim +0017<$[3]> (refPos0AC0, _t0BB4);
    real _t0BB6 = prim •00CE<$[3]; $[3]; $[]> (_t0BA6, _t0BB5);
    bool _t0BB7 = prim >0080 (_t0BA2, _t0BB6);
    real _t0BB8 = 0.1e-7;
    real _t0BB9 = 0.1e-7;
    real _t0BBA = 0.1e-7;
    vec3 _t0BBB = [_t0BB8, _t0BB9, _t0BBA];
    real _t0BBC = 0.57735026919e0;
    real _t0BBD = 0.57735026919e0;
    real _t0BBE = 0.57735026919e0;
    real _t0BBF = 0.57735026919e0;
    vec3 _t0BC0 = [_t0BBD, _t0BBE, _t0BBF];
    real _t0BC1 = prim •00CE<$[3]; $[3]; $[]> (_t0BC0, refPos0AC0);
    real _t0BC2 = prim -0026<$[]> (_t0BBC, _t0BC1);
    real _t0BC3 = 0.57735026919e0;
    real _t0BC4 = 0.57735026919e0;
    real _t0BC5 = 0.57735026919e0;
    vec3 _t0BC6 = [_t0BC3, _t0BC4, _t0BC5];
    real _t0BC7 = prim •00CE<$[3]; $[3]; $[]> (_t0BC6, dPos0AC1);
    real _t0BC8 = prim /0055 (_t0BC2, _t0BC7);
    vec3 _t0BC9 = prim *0038<$[3]> (dPos0AC1, _t0BC8);
    vec3 _t0BCA = prim +0017<$[3]> (refPos0AC0, _t0BC9);
    vec3 _t0BCB = prim +0017<$[3]> (_t0BBB, _t0BCA);
    real _t0BCC = _t0BCB[0];
    real _t0BCD = -0.e0;
    bool _t0BCE = prim >0080 (_t0BCC, _t0BCD);
    real _t0BCF = 0.1e-7;
    real _t0BD0 = 0.1e-7;
    real _t0BD1 = 0.1e-7;
    vec3 _t0BD2 = [_t0BCF, _t0BD0, _t0BD1];
    real _t0BD3 = 0.57735026919e0;
    real _t0BD4 = 0.57735026919e0;
    real _t0BD5 = 0.57735026919e0;
    real _t0BD6 = 0.57735026919e0;
    vec3 _t0BD7 = [_t0BD4, _t0BD5, _t0BD6];
    real _t0BD8 = prim •00CE<$[3]; $[3]; $[]> (_t0BD7, refPos0AC0);
    real _t0BD9 = prim -0026<$[]> (_t0BD3, _t0BD8);
    real _t0BDA = 0.57735026919e0;
    real _t0BDB = 0.57735026919e0;
    real _t0BDC = 0.57735026919e0;
    vec3 _t0BDD = [_t0BDA, _t0BDB, _t0BDC];
    real _t0BDE = prim •00CE<$[3]; $[3]; $[]> (_t0BDD, dPos0AC1);
    real _t0BDF = prim /0055 (_t0BD9, _t0BDE);
    vec3 _t0BE0 = prim *0038<$[3]> (dPos0AC1, _t0BDF);
    vec3 _t0BE1 = prim +0017<$[3]> (refPos0AC0, _t0BE0);
    vec3 _t0BE2 = prim +0017<$[3]> (_t0BD2, _t0BE1);
    real _t0BE3 = _t0BE2[1];
    real _t0BE4 = -0.e0;
    bool _t0BE5 = prim >0080 (_t0BE3, _t0BE4);
    real _t0BE6 = 0.1e-7;
    real _t0BE7 = 0.1e-7;
    real _t0BE8 = 0.1e-7;
    vec3 _t0BE9 = [_t0BE6, _t0BE7, _t0BE8];
    real _t0BEA = 0.57735026919e0;
    real _t0BEB = 0.57735026919e0;
    real _t0BEC = 0.57735026919e0;
    real _t0BED = 0.57735026919e0;
    vec3 _t0BEE = [_t0BEB, _t0BEC, _t0BED];
    real _t0BEF = prim •00CE<$[3]; $[3]; $[]> (_t0BEE, refPos0AC0);
    real _t0BF0 = prim -0026<$[]> (_t0BEA, _t0BEF);
    real _t0BF1 = 0.57735026919e0;
    real _t0BF2 = 0.57735026919e0;
    real _t0BF3 = 0.57735026919e0;
    vec3 _t0BF4 = [_t0BF1, _t0BF2, _t0BF3];
    real _t0BF5 = prim •00CE<$[3]; $[3]; $[]> (_t0BF4, dPos0AC1);
    real _t0BF6 = prim /0055 (_t0BF0, _t0BF5);
    vec3 _t0BF7 = prim *0038<$[3]> (dPos0AC1, _t0BF6);
    vec3 _t0BF8 = prim +0017<$[3]> (refPos0AC0, _t0BF7);
    vec3 _t0BF9 = prim +0017<$[3]> (_t0BE9, _t0BF8);
    real _t0BFA = _t0BF9[2];
    real _t0BFB = -0.e0;
    bool _t0BFC = prim >0080 (_t0BFA, _t0BFB);
    bool _t0BFD = prim $and01C4 (_t0BE5, _t0BFC);
    bool _t0BFE = prim $and01C4 (_t0BCE, _t0BFD);
    bool _t0BFF = prim $and01C4 (_t0BB7, _t0BFE);
    if _t0BFF {
      string _t0C00 = "Saving at this face!";
      real _t0C01 = 0.57735026919e0;
      real _t0C02 = 0.57735026919e0;
      real _t0C03 = 0.57735026919e0;
      real _t0C04 = 0.57735026919e0;
      vec3 _t0C05 = [_t0C02, _t0C03, _t0C04];
      real _t0C06 = prim •00CE<$[3]; $[3]; $[]> (_t0C05, refPos0AC0);
      real _t0C07 = prim -0026<$[]> (_t0C01, _t0C06);
      real _t0C08 = 0.57735026919e0;
      real _t0C09 = 0.57735026919e0;
      real _t0C0A = 0.57735026919e0;
      vec3 _t0C0B = [_t0C08, _t0C09, _t0C0A];
      real _t0C0C = prim •00CE<$[3]; $[3]; $[]> (_t0C0B, dPos0AC1);
      real _t0C0D = prim /0055 (_t0C07, _t0C0C);
      real _t0C0E = 0.57735026919e0;
      real _t0C0F = 0.57735026919e0;
      real _t0C10 = 0.57735026919e0;
      real _t0C11 = 0.57735026919e0;
      vec3 _t0C12 = [_t0C0F, _t0C10, _t0C11];
      real _t0C13 = prim •00CE<$[3]; $[3]; $[]> (_t0C12, refPos0AC0);
      real _t0C14 = prim -0026<$[]> (_t0C0E, _t0C13);
      real _t0C15 = 0.57735026919e0;
      real _t0C16 = 0.57735026919e0;
      real _t0C17 = 0.57735026919e0;
      vec3 _t0C18 = [_t0C15, _t0C16, _t0C17];
      real _t0C19 = prim •00CE<$[3]; $[3]; $[]> (_t0C18, dPos0AC1);
      real _t0C1A = prim /0055 (_t0C14, _t0C19);
      bool _t0C1B = prim >0080 (time0AC2, _t0C1A);
      string _t0C1C = "\n";
      print (_t0C00, _t0C0D, _t0C1B, _t0C1C);
      real _t0C1D = 0.57735026919e0;
      real _t0C1E = 0.57735026919e0;
      real _t0C1F = 0.57735026919e0;
      real _t0C20 = 0.57735026919e0;
      vec3 _t0C21 = [_t0C1E, _t0C1F, _t0C20];
      real _t0C22 = prim •00CE<$[3]; $[3]; $[]> (_t0C21, refPos0AC0);
      real _t0C23 = prim -0026<$[]> (_t0C1D, _t0C22);
      real _t0C24 = 0.57735026919e0;
      real _t0C25 = 0.57735026919e0;
      real _t0C26 = 0.57735026919e0;
      vec3 _t0C27 = [_t0C24, _t0C25, _t0C26];
      real _t0C28 = prim •00CE<$[3]; $[3]; $[]> (_t0C27, dPos0AC1);
      time0AC2 = prim /0055 (_t0C23, _t0C28);
      face0AC3 = 0;
    }
  }
  string _t0C29 = "\ntest :";
  real _t0C2A = 0.e0;
  real _t0C2B = -0.1e1;
  real _t0C2C = 0.e0;
  real _t0C2D = 0.e0;
  vec3 _t0C2E = [_t0C2B, _t0C2C, _t0C2D];
  real _t0C2F = prim •00CE<$[3]; $[3]; $[]> (_t0C2E, refPos0AC0);
  real _t0C30 = prim -0026<$[]> (_t0C2A, _t0C2F);
  real _t0C31 = -0.1e1;
  real _t0C32 = 0.e0;
  real _t0C33 = 0.e0;
  vec3 _t0C34 = [_t0C31, _t0C32, _t0C33];
  real _t0C35 = prim •00CE<$[3]; $[3]; $[]> (_t0C34, dPos0AC1);
  real _t0C36 = prim /0055 (_t0C30, _t0C35);
  string _t0C37 = " test2: ";
  real _t0C38 = -0.1e1;
  real _t0C39 = 0.e0;
  real _t0C3A = 0.e0;
  vec3 _t0C3B = [_t0C38, _t0C39, _t0C3A];
  real _t0C3C = prim •00CE<$[3]; $[3]; $[]> (_t0C3B, dPos0AC1);
  string _t0C3D = " insideTest: ";
  real _t0C3E = 0.1e1;
  real _t0C3F = 0.1e-7;
  real _t0C40 = prim +0017<$[]> (_t0C3E, _t0C3F);
  real _t0C41 = 0.1e1;
  real _t0C42 = 0.1e1;
  real _t0C43 = 0.1e1;
  vec3 _t0C44 = [_t0C41, _t0C42, _t0C43];
  real _t0C45 = 0.e0;
  real _t0C46 = -0.1e1;
  real _t0C47 = 0.e0;
  real _t0C48 = 0.e0;
  vec3 _t0C49 = [_t0C46, _t0C47, _t0C48];
  real _t0C4A = prim •00CE<$[3]; $[3]; $[]> (_t0C49, refPos0AC0);
  real _t0C4B = prim -0026<$[]> (_t0C45, _t0C4A);
  real _t0C4C = -0.1e1;
  real _t0C4D = 0.e0;
  real _t0C4E = 0.e0;
  vec3 _t0C4F = [_t0C4C, _t0C4D, _t0C4E];
  real _t0C50 = prim •00CE<$[3]; $[3]; $[]> (_t0C4F, dPos0AC1);
  real _t0C51 = prim /0055 (_t0C4B, _t0C50);
  vec3 _t0C52 = prim *0038<$[3]> (dPos0AC1, _t0C51);
  vec3 _t0C53 = prim +0017<$[3]> (refPos0AC0, _t0C52);
  real _t0C54 = prim •00CE<$[3]; $[3]; $[]> (_t0C44, _t0C53);
  bool _t0C55 = prim >0080 (_t0C40, _t0C54);
  real _t0C56 = 0.1e-7;
  real _t0C57 = 0.1e-7;
  real _t0C58 = 0.1e-7;
  vec3 _t0C59 = [_t0C56, _t0C57, _t0C58];
  real _t0C5A = 0.e0;
  real _t0C5B = -0.1e1;
  real _t0C5C = 0.e0;
  real _t0C5D = 0.e0;
  vec3 _t0C5E = [_t0C5B, _t0C5C, _t0C5D];
  real _t0C5F = prim •00CE<$[3]; $[3]; $[]> (_t0C5E, refPos0AC0);
  real _t0C60 = prim -0026<$[]> (_t0C5A, _t0C5F);
  real _t0C61 = -0.1e1;
  real _t0C62 = 0.e0;
  real _t0C63 = 0.e0;
  vec3 _t0C64 = [_t0C61, _t0C62, _t0C63];
  real _t0C65 = prim •00CE<$[3]; $[3]; $[]> (_t0C64, dPos0AC1);
  real _t0C66 = prim /0055 (_t0C60, _t0C65);
  vec3 _t0C67 = prim *0038<$[3]> (dPos0AC1, _t0C66);
  vec3 _t0C68 = prim +0017<$[3]> (refPos0AC0, _t0C67);
  vec3 _t0C69 = prim +0017<$[3]> (_t0C59, _t0C68);
  real _t0C6A = _t0C69[0];
  real _t0C6B = -0.e0;
  bool _t0C6C = prim >0080 (_t0C6A, _t0C6B);
  real _t0C6D = 0.1e-7;
  real _t0C6E = 0.1e-7;
  real _t0C6F = 0.1e-7;
  vec3 _t0C70 = [_t0C6D, _t0C6E, _t0C6F];
  real _t0C71 = 0.e0;
  real _t0C72 = -0.1e1;
  real _t0C73 = 0.e0;
  real _t0C74 = 0.e0;
  vec3 _t0C75 = [_t0C72, _t0C73, _t0C74];
  real _t0C76 = prim •00CE<$[3]; $[3]; $[]> (_t0C75, refPos0AC0);
  real _t0C77 = prim -0026<$[]> (_t0C71, _t0C76);
  real _t0C78 = -0.1e1;
  real _t0C79 = 0.e0;
  real _t0C7A = 0.e0;
  vec3 _t0C7B = [_t0C78, _t0C79, _t0C7A];
  real _t0C7C = prim •00CE<$[3]; $[3]; $[]> (_t0C7B, dPos0AC1);
  real _t0C7D = prim /0055 (_t0C77, _t0C7C);
  vec3 _t0C7E = prim *0038<$[3]> (dPos0AC1, _t0C7D);
  vec3 _t0C7F = prim +0017<$[3]> (refPos0AC0, _t0C7E);
  vec3 _t0C80 = prim +0017<$[3]> (_t0C70, _t0C7F);
  real _t0C81 = _t0C80[1];
  real _t0C82 = -0.e0;
  bool _t0C83 = prim >0080 (_t0C81, _t0C82);
  real _t0C84 = 0.1e-7;
  real _t0C85 = 0.1e-7;
  real _t0C86 = 0.1e-7;
  vec3 _t0C87 = [_t0C84, _t0C85, _t0C86];
  real _t0C88 = 0.e0;
  real _t0C89 = -0.1e1;
  real _t0C8A = 0.e0;
  real _t0C8B = 0.e0;
  vec3 _t0C8C = [_t0C89, _t0C8A, _t0C8B];
  real _t0C8D = prim •00CE<$[3]; $[3]; $[]> (_t0C8C, refPos0AC0);
  real _t0C8E = prim -0026<$[]> (_t0C88, _t0C8D);
  real _t0C8F = -0.1e1;
  real _t0C90 = 0.e0;
  real _t0C91 = 0.e0;
  vec3 _t0C92 = [_t0C8F, _t0C90, _t0C91];
  real _t0C93 = prim •00CE<$[3]; $[3]; $[]> (_t0C92, dPos0AC1);
  real _t0C94 = prim /0055 (_t0C8E, _t0C93);
  vec3 _t0C95 = prim *0038<$[3]> (dPos0AC1, _t0C94);
  vec3 _t0C96 = prim +0017<$[3]> (refPos0AC0, _t0C95);
  vec3 _t0C97 = prim +0017<$[3]> (_t0C87, _t0C96);
  real _t0C98 = _t0C97[2];
  real _t0C99 = -0.e0;
  bool _t0C9A = prim >0080 (_t0C98, _t0C99);
  bool _t0C9B = prim $and01C4 (_t0C83, _t0C9A);
  bool _t0C9C = prim $and01C4 (_t0C6C, _t0C9B);
  bool _t0C9D = prim $and01C4 (_t0C55, _t0C9C);
  string _t0C9E = " dist: ";
  real _t0C9F = 0.e0;
  real _t0CA0 = -0.1e1;
  real _t0CA1 = 0.e0;
  real _t0CA2 = 0.e0;
  vec3 _t0CA3 = [_t0CA0, _t0CA1, _t0CA2];
  real _t0CA4 = prim •00CE<$[3]; $[3]; $[]> (_t0CA3, refPos0AC0);
  real _t0CA5 = prim -0026<$[]> (_t0C9F, _t0CA4);
  real _t0CA6 = prim |()|00B5<$[]> (_t0CA5);
  string _t0CA7 = "signed dist: ";
  real _t0CA8 = 0.e0;
  real _t0CA9 = -0.1e1;
  real _t0CAA = 0.e0;
  real _t0CAB = 0.e0;
  vec3 _t0CAC = [_t0CA9, _t0CAA, _t0CAB];
  real _t0CAD = prim •00CE<$[3]; $[3]; $[]> (_t0CAC, refPos0AC0);
  real _t0CAE = prim -0026<$[]> (_t0CA8, _t0CAD);
  string _t0CAF = " face: ";
  int _t0CB0 = 1;
  string _t0CB1 = " place: ";
  real _t0CB2 = 0.e0;
  real _t0CB3 = -0.1e1;
  real _t0CB4 = 0.e0;
  real _t0CB5 = 0.e0;
  vec3 _t0CB6 = [_t0CB3, _t0CB4, _t0CB5];
  real _t0CB7 = prim •00CE<$[3]; $[3]; $[]> (_t0CB6, refPos0AC0);
  real _t0CB8 = prim -0026<$[]> (_t0CB2, _t0CB7);
  real _t0CB9 = -0.1e1;
  real _t0CBA = 0.e0;
  real _t0CBB = 0.e0;
  vec3 _t0CBC = [_t0CB9, _t0CBA, _t0CBB];
  real _t0CBD = prim •00CE<$[3]; $[3]; $[]> (_t0CBC, dPos0AC1);
  real _t0CBE = prim /0055 (_t0CB8, _t0CBD);
  vec3 _t0CBF = prim *0038<$[3]> (dPos0AC1, _t0CBE);
  vec3 _t0CC0 = prim +0017<$[3]> (refPos0AC0, _t0CBF);
  string _t0CC1 = " error: ";
  real _t0CC2 = 0.e0;
  real _t0CC3 = -0.1e1;
  real _t0CC4 = 0.e0;
  real _t0CC5 = 0.e0;
  vec3 _t0CC6 = [_t0CC3, _t0CC4, _t0CC5];
  real _t0CC7 = 0.e0;
  real _t0CC8 = -0.1e1;
  real _t0CC9 = 0.e0;
  real _t0CCA = 0.e0;
  vec3 _t0CCB = [_t0CC8, _t0CC9, _t0CCA];
  real _t0CCC = prim •00CE<$[3]; $[3]; $[]> (_t0CCB, refPos0AC0);
  real _t0CCD = prim -0026<$[]> (_t0CC7, _t0CCC);
  real _t0CCE = -0.1e1;
  real _t0CCF = 0.e0;
  real _t0CD0 = 0.e0;
  vec3 _t0CD1 = [_t0CCE, _t0CCF, _t0CD0];
  real _t0CD2 = prim •00CE<$[3]; $[3]; $[]> (_t0CD1, dPos0AC1);
  real _t0CD3 = prim /0055 (_t0CCD, _t0CD2);
  vec3 _t0CD4 = prim *0038<$[3]> (dPos0AC1, _t0CD3);
  vec3 _t0CD5 = prim +0017<$[3]> (refPos0AC0, _t0CD4);
  real _t0CD6 = prim •00CE<$[3]; $[3]; $[]> (_t0CC6, _t0CD5);
  real _t0CD7 = prim -0026<$[]> (_t0CC2, _t0CD6);
  real _t0CD8 = prim |()|00B5<$[]> (_t0CD7);
  string _t0CD9 = " offset :";
  string _t0CDA = " dp: ";
  string _t0CDB = " otherPossibleTime: ";
  string _t0CDC = "\n";
  print (_t0C29, _t0C36, _t0C37, _t0C3C, _t0C3D, _t0C9D, _t0C9E, _t0CA6, _t0CA7, _t0CAE, _t0CAF, _t0CB0, _t0CB1, _t0CC0, _t0CC1, _t0CD8, _t0CD9, refPos0AC0, _t0CDA, dPos0AC1, _t0CDB, faceTime0AC4, _t0CDC);
  real _t0CDD = 0.e0;
  real _t0CDE = -0.1e1;
  real _t0CDF = 0.e0;
  real _t0CE0 = 0.e0;
  vec3 _t0CE1 = [_t0CDE, _t0CDF, _t0CE0];
  real _t0CE2 = prim •00CE<$[3]; $[3]; $[]> (_t0CE1, refPos0AC0);
  real _t0CE3 = prim -0026<$[]> (_t0CDD, _t0CE2);
  real _t0CE4 = -0.1e1;
  real _t0CE5 = 0.e0;
  real _t0CE6 = 0.e0;
  vec3 _t0CE7 = [_t0CE4, _t0CE5, _t0CE6];
  real _t0CE8 = prim •00CE<$[3]; $[3]; $[]> (_t0CE7, dPos0AC1);
  real _t0CE9 = prim /0055 (_t0CE3, _t0CE8);
  real _t0CEA = -0.1e-7;
  bool _t0CEB = prim >=007E (_t0CE9, _t0CEA);
  real _t0CEC = 0.e0;
  real _t0CED = -0.1e1;
  real _t0CEE = 0.e0;
  real _t0CEF = 0.e0;
  vec3 _t0CF0 = [_t0CED, _t0CEE, _t0CEF];
  real _t0CF1 = prim •00CE<$[3]; $[3]; $[]> (_t0CF0, refPos0AC0);
  real _t0CF2 = prim -0026<$[]> (_t0CEC, _t0CF1);
  real _t0CF3 = -0.1e1;
  real _t0CF4 = 0.e0;
  real _t0CF5 = 0.e0;
  vec3 _t0CF6 = [_t0CF3, _t0CF4, _t0CF5];
  real _t0CF7 = prim •00CE<$[3]; $[3]; $[]> (_t0CF6, dPos0AC1);
  real _t0CF8 = prim /0055 (_t0CF2, _t0CF7);
  bool _t0CF9 = prim >0080 (time0AC2, _t0CF8);
  real _t0CFA = -0.1e1;
  real _t0CFB = 0.e0;
  real _t0CFC = 0.e0;
  vec3 _t0CFD = [_t0CFA, _t0CFB, _t0CFC];
  real _t0CFE = prim •00CE<$[3]; $[3]; $[]> (_t0CFD, dPos0AC1);
  real _t0CFF = prim |()|00B5<$[]> (_t0CFE);
  real _t0D00 = 0.1e-7;
  bool _t0D01 = prim >=007E (_t0CFF, _t0D00);
  bool _t0D02 = prim $and01C4 (_t0CF9, _t0D01);
  bool _t0D03 = prim $and01C4 (_t0CEB, _t0D02);
  if _t0D03 {
    real _t0D04 = 0.1e1;
    real _t0D05 = 0.1e-7;
    real _t0D06 = prim +0017<$[]> (_t0D04, _t0D05);
    real _t0D07 = 0.1e1;
    real _t0D08 = 0.1e1;
    real _t0D09 = 0.1e1;
    vec3 _t0D0A = [_t0D07, _t0D08, _t0D09];
    real _t0D0B = 0.e0;
    real _t0D0C = -0.1e1;
    real _t0D0D = 0.e0;
    real _t0D0E = 0.e0;
    vec3 _t0D0F = [_t0D0C, _t0D0D, _t0D0E];
    real _t0D10 = prim •00CE<$[3]; $[3]; $[]> (_t0D0F, refPos0AC0);
    real _t0D11 = prim -0026<$[]> (_t0D0B, _t0D10);
    real _t0D12 = -0.1e1;
    real _t0D13 = 0.e0;
    real _t0D14 = 0.e0;
    vec3 _t0D15 = [_t0D12, _t0D13, _t0D14];
    real _t0D16 = prim •00CE<$[3]; $[3]; $[]> (_t0D15, dPos0AC1);
    real _t0D17 = prim /0055 (_t0D11, _t0D16);
    vec3 _t0D18 = prim *0038<$[3]> (dPos0AC1, _t0D17);
    vec3 _t0D19 = prim +0017<$[3]> (refPos0AC0, _t0D18);
    real _t0D1A = prim •00CE<$[3]; $[3]; $[]> (_t0D0A, _t0D19);
    bool _t0D1B = prim >0080 (_t0D06, _t0D1A);
    real _t0D1C = 0.1e-7;
    real _t0D1D = 0.1e-7;
    real _t0D1E = 0.1e-7;
    vec3 _t0D1F = [_t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = 0.e0;
    real _t0D21 = -0.1e1;
    real _t0D22 = 0.e0;
    real _t0D23 = 0.e0;
    vec3 _t0D24 = [_t0D21, _t0D22, _t0D23];
    real _t0D25 = prim •00CE<$[3]; $[3]; $[]> (_t0D24, refPos0AC0);
    real _t0D26 = prim -0026<$[]> (_t0D20, _t0D25);
    real _t0D27 = -0.1e1;
    real _t0D28 = 0.e0;
    real _t0D29 = 0.e0;
    vec3 _t0D2A = [_t0D27, _t0D28, _t0D29];
    real _t0D2B = prim •00CE<$[3]; $[3]; $[]> (_t0D2A, dPos0AC1);
    real _t0D2C = prim /0055 (_t0D26, _t0D2B);
    vec3 _t0D2D = prim *0038<$[3]> (dPos0AC1, _t0D2C);
    vec3 _t0D2E = prim +0017<$[3]> (refPos0AC0, _t0D2D);
    vec3 _t0D2F = prim +0017<$[3]> (_t0D1F, _t0D2E);
    real _t0D30 = _t0D2F[0];
    real _t0D31 = -0.e0;
    bool _t0D32 = prim >0080 (_t0D30, _t0D31);
    real _t0D33 = 0.1e-7;
    real _t0D34 = 0.1e-7;
    real _t0D35 = 0.1e-7;
    vec3 _t0D36 = [_t0D33, _t0D34, _t0D35];
    real _t0D37 = 0.e0;
    real _t0D38 = -0.1e1;
    real _t0D39 = 0.e0;
    real _t0D3A = 0.e0;
    vec3 _t0D3B = [_t0D38, _t0D39, _t0D3A];
    real _t0D3C = prim •00CE<$[3]; $[3]; $[]> (_t0D3B, refPos0AC0);
    real _t0D3D = prim -0026<$[]> (_t0D37, _t0D3C);
    real _t0D3E = -0.1e1;
    real _t0D3F = 0.e0;
    real _t0D40 = 0.e0;
    vec3 _t0D41 = [_t0D3E, _t0D3F, _t0D40];
    real _t0D42 = prim •00CE<$[3]; $[3]; $[]> (_t0D41, dPos0AC1);
    real _t0D43 = prim /0055 (_t0D3D, _t0D42);
    vec3 _t0D44 = prim *0038<$[3]> (dPos0AC1, _t0D43);
    vec3 _t0D45 = prim +0017<$[3]> (refPos0AC0, _t0D44);
    vec3 _t0D46 = prim +0017<$[3]> (_t0D36, _t0D45);
    real _t0D47 = _t0D46[1];
    real _t0D48 = -0.e0;
    bool _t0D49 = prim >0080 (_t0D47, _t0D48);
    real _t0D4A = 0.1e-7;
    real _t0D4B = 0.1e-7;
    real _t0D4C = 0.1e-7;
    vec3 _t0D4D = [_t0D4A, _t0D4B, _t0D4C];
    real _t0D4E = 0.e0;
    real _t0D4F = -0.1e1;
    real _t0D50 = 0.e0;
    real _t0D51 = 0.e0;
    vec3 _t0D52 = [_t0D4F, _t0D50, _t0D51];
    real _t0D53 = prim •00CE<$[3]; $[3]; $[]> (_t0D52, refPos0AC0);
    real _t0D54 = prim -0026<$[]> (_t0D4E, _t0D53);
    real _t0D55 = -0.1e1;
    real _t0D56 = 0.e0;
    real _t0D57 = 0.e0;
    vec3 _t0D58 = [_t0D55, _t0D56, _t0D57];
    real _t0D59 = prim •00CE<$[3]; $[3]; $[]> (_t0D58, dPos0AC1);
    real _t0D5A = prim /0055 (_t0D54, _t0D59);
    vec3 _t0D5B = prim *0038<$[3]> (dPos0AC1, _t0D5A);
    vec3 _t0D5C = prim +0017<$[3]> (refPos0AC0, _t0D5B);
    vec3 _t0D5D = prim +0017<$[3]> (_t0D4D, _t0D5C);
    real _t0D5E = _t0D5D[2];
    real _t0D5F = -0.e0;
    bool _t0D60 = prim >0080 (_t0D5E, _t0D5F);
    bool _t0D61 = prim $and01C4 (_t0D49, _t0D60);
    bool _t0D62 = prim $and01C4 (_t0D32, _t0D61);
    bool _t0D63 = prim $and01C4 (_t0D1B, _t0D62);
    if _t0D63 {
      string _t0D64 = "Saving at this face!";
      real _t0D65 = 0.e0;
      real _t0D66 = -0.1e1;
      real _t0D67 = 0.e0;
      real _t0D68 = 0.e0;
      vec3 _t0D69 = [_t0D66, _t0D67, _t0D68];
      real _t0D6A = prim •00CE<$[3]; $[3]; $[]> (_t0D69, refPos0AC0);
      real _t0D6B = prim -0026<$[]> (_t0D65, _t0D6A);
      real _t0D6C = -0.1e1;
      real _t0D6D = 0.e0;
      real _t0D6E = 0.e0;
      vec3 _t0D6F = [_t0D6C, _t0D6D, _t0D6E];
      real _t0D70 = prim •00CE<$[3]; $[3]; $[]> (_t0D6F, dPos0AC1);
      real _t0D71 = prim /0055 (_t0D6B, _t0D70);
      real _t0D72 = 0.e0;
      real _t0D73 = -0.1e1;
      real _t0D74 = 0.e0;
      real _t0D75 = 0.e0;
      vec3 _t0D76 = [_t0D73, _t0D74, _t0D75];
      real _t0D77 = prim •00CE<$[3]; $[3]; $[]> (_t0D76, refPos0AC0);
      real _t0D78 = prim -0026<$[]> (_t0D72, _t0D77);
      real _t0D79 = -0.1e1;
      real _t0D7A = 0.e0;
      real _t0D7B = 0.e0;
      vec3 _t0D7C = [_t0D79, _t0D7A, _t0D7B];
      real _t0D7D = prim •00CE<$[3]; $[3]; $[]> (_t0D7C, dPos0AC1);
      real _t0D7E = prim /0055 (_t0D78, _t0D7D);
      bool _t0D7F = prim >0080 (time0AC2, _t0D7E);
      string _t0D80 = "\n";
      print (_t0D64, _t0D71, _t0D7F, _t0D80);
      real _t0D81 = 0.e0;
      real _t0D82 = -0.1e1;
      real _t0D83 = 0.e0;
      real _t0D84 = 0.e0;
      vec3 _t0D85 = [_t0D82, _t0D83, _t0D84];
      real _t0D86 = prim •00CE<$[3]; $[3]; $[]> (_t0D85, refPos0AC0);
      real _t0D87 = prim -0026<$[]> (_t0D81, _t0D86);
      real _t0D88 = -0.1e1;
      real _t0D89 = 0.e0;
      real _t0D8A = 0.e0;
      vec3 _t0D8B = [_t0D88, _t0D89, _t0D8A];
      real _t0D8C = prim •00CE<$[3]; $[3]; $[]> (_t0D8B, dPos0AC1);
      time0AC2 = prim /0055 (_t0D87, _t0D8C);
      face0AC3 = 1;
    }
  }
  string _t0D8D = "\ntest :";
  real _t0D8E = 0.e0;
  real _t0D8F = 0.e0;
  real _t0D90 = -0.1e1;
  real _t0D91 = 0.e0;
  vec3 _t0D92 = [_t0D8F, _t0D90, _t0D91];
  real _t0D93 = prim •00CE<$[3]; $[3]; $[]> (_t0D92, refPos0AC0);
  real _t0D94 = prim -0026<$[]> (_t0D8E, _t0D93);
  real _t0D95 = 0.e0;
  real _t0D96 = -0.1e1;
  real _t0D97 = 0.e0;
  vec3 _t0D98 = [_t0D95, _t0D96, _t0D97];
  real _t0D99 = prim •00CE<$[3]; $[3]; $[]> (_t0D98, dPos0AC1);
  real _t0D9A = prim /0055 (_t0D94, _t0D99);
  string _t0D9B = " test2: ";
  real _t0D9C = 0.e0;
  real _t0D9D = -0.1e1;
  real _t0D9E = 0.e0;
  vec3 _t0D9F = [_t0D9C, _t0D9D, _t0D9E];
  real _t0DA0 = prim •00CE<$[3]; $[3]; $[]> (_t0D9F, dPos0AC1);
  string _t0DA1 = " insideTest: ";
  real _t0DA2 = 0.1e1;
  real _t0DA3 = 0.1e-7;
  real _t0DA4 = prim +0017<$[]> (_t0DA2, _t0DA3);
  real _t0DA5 = 0.1e1;
  real _t0DA6 = 0.1e1;
  real _t0DA7 = 0.1e1;
  vec3 _t0DA8 = [_t0DA5, _t0DA6, _t0DA7];
  real _t0DA9 = 0.e0;
  real _t0DAA = 0.e0;
  real _t0DAB = -0.1e1;
  real _t0DAC = 0.e0;
  vec3 _t0DAD = [_t0DAA, _t0DAB, _t0DAC];
  real _t0DAE = prim •00CE<$[3]; $[3]; $[]> (_t0DAD, refPos0AC0);
  real _t0DAF = prim -0026<$[]> (_t0DA9, _t0DAE);
  real _t0DB0 = 0.e0;
  real _t0DB1 = -0.1e1;
  real _t0DB2 = 0.e0;
  vec3 _t0DB3 = [_t0DB0, _t0DB1, _t0DB2];
  real _t0DB4 = prim •00CE<$[3]; $[3]; $[]> (_t0DB3, dPos0AC1);
  real _t0DB5 = prim /0055 (_t0DAF, _t0DB4);
  vec3 _t0DB6 = prim *0038<$[3]> (dPos0AC1, _t0DB5);
  vec3 _t0DB7 = prim +0017<$[3]> (refPos0AC0, _t0DB6);
  real _t0DB8 = prim •00CE<$[3]; $[3]; $[]> (_t0DA8, _t0DB7);
  bool _t0DB9 = prim >0080 (_t0DA4, _t0DB8);
  real _t0DBA = 0.1e-7;
  real _t0DBB = 0.1e-7;
  real _t0DBC = 0.1e-7;
  vec3 _t0DBD = [_t0DBA, _t0DBB, _t0DBC];
  real _t0DBE = 0.e0;
  real _t0DBF = 0.e0;
  real _t0DC0 = -0.1e1;
  real _t0DC1 = 0.e0;
  vec3 _t0DC2 = [_t0DBF, _t0DC0, _t0DC1];
  real _t0DC3 = prim •00CE<$[3]; $[3]; $[]> (_t0DC2, refPos0AC0);
  real _t0DC4 = prim -0026<$[]> (_t0DBE, _t0DC3);
  real _t0DC5 = 0.e0;
  real _t0DC6 = -0.1e1;
  real _t0DC7 = 0.e0;
  vec3 _t0DC8 = [_t0DC5, _t0DC6, _t0DC7];
  real _t0DC9 = prim •00CE<$[3]; $[3]; $[]> (_t0DC8, dPos0AC1);
  real _t0DCA = prim /0055 (_t0DC4, _t0DC9);
  vec3 _t0DCB = prim *0038<$[3]> (dPos0AC1, _t0DCA);
  vec3 _t0DCC = prim +0017<$[3]> (refPos0AC0, _t0DCB);
  vec3 _t0DCD = prim +0017<$[3]> (_t0DBD, _t0DCC);
  real _t0DCE = _t0DCD[0];
  real _t0DCF = -0.e0;
  bool _t0DD0 = prim >0080 (_t0DCE, _t0DCF);
  real _t0DD1 = 0.1e-7;
  real _t0DD2 = 0.1e-7;
  real _t0DD3 = 0.1e-7;
  vec3 _t0DD4 = [_t0DD1, _t0DD2, _t0DD3];
  real _t0DD5 = 0.e0;
  real _t0DD6 = 0.e0;
  real _t0DD7 = -0.1e1;
  real _t0DD8 = 0.e0;
  vec3 _t0DD9 = [_t0DD6, _t0DD7, _t0DD8];
  real _t0DDA = prim •00CE<$[3]; $[3]; $[]> (_t0DD9, refPos0AC0);
  real _t0DDB = prim -0026<$[]> (_t0DD5, _t0DDA);
  real _t0DDC = 0.e0;
  real _t0DDD = -0.1e1;
  real _t0DDE = 0.e0;
  vec3 _t0DDF = [_t0DDC, _t0DDD, _t0DDE];
  real _t0DE0 = prim •00CE<$[3]; $[3]; $[]> (_t0DDF, dPos0AC1);
  real _t0DE1 = prim /0055 (_t0DDB, _t0DE0);
  vec3 _t0DE2 = prim *0038<$[3]> (dPos0AC1, _t0DE1);
  vec3 _t0DE3 = prim +0017<$[3]> (refPos0AC0, _t0DE2);
  vec3 _t0DE4 = prim +0017<$[3]> (_t0DD4, _t0DE3);
  real _t0DE5 = _t0DE4[1];
  real _t0DE6 = -0.e0;
  bool _t0DE7 = prim >0080 (_t0DE5, _t0DE6);
  real _t0DE8 = 0.1e-7;
  real _t0DE9 = 0.1e-7;
  real _t0DEA = 0.1e-7;
  vec3 _t0DEB = [_t0DE8, _t0DE9, _t0DEA];
  real _t0DEC = 0.e0;
  real _t0DED = 0.e0;
  real _t0DEE = -0.1e1;
  real _t0DEF = 0.e0;
  vec3 _t0DF0 = [_t0DED, _t0DEE, _t0DEF];
  real _t0DF1 = prim •00CE<$[3]; $[3]; $[]> (_t0DF0, refPos0AC0);
  real _t0DF2 = prim -0026<$[]> (_t0DEC, _t0DF1);
  real _t0DF3 = 0.e0;
  real _t0DF4 = -0.1e1;
  real _t0DF5 = 0.e0;
  vec3 _t0DF6 = [_t0DF3, _t0DF4, _t0DF5];
  real _t0DF7 = prim •00CE<$[3]; $[3]; $[]> (_t0DF6, dPos0AC1);
  real _t0DF8 = prim /0055 (_t0DF2, _t0DF7);
  vec3 _t0DF9 = prim *0038<$[3]> (dPos0AC1, _t0DF8);
  vec3 _t0DFA = prim +0017<$[3]> (refPos0AC0, _t0DF9);
  vec3 _t0DFB = prim +0017<$[3]> (_t0DEB, _t0DFA);
  real _t0DFC = _t0DFB[2];
  real _t0DFD = -0.e0;
  bool _t0DFE = prim >0080 (_t0DFC, _t0DFD);
  bool _t0DFF = prim $and01C4 (_t0DE7, _t0DFE);
  bool _t0E00 = prim $and01C4 (_t0DD0, _t0DFF);
  bool _t0E01 = prim $and01C4 (_t0DB9, _t0E00);
  string _t0E02 = " dist: ";
  real _t0E03 = 0.e0;
  real _t0E04 = 0.e0;
  real _t0E05 = -0.1e1;
  real _t0E06 = 0.e0;
  vec3 _t0E07 = [_t0E04, _t0E05, _t0E06];
  real _t0E08 = prim •00CE<$[3]; $[3]; $[]> (_t0E07, refPos0AC0);
  real _t0E09 = prim -0026<$[]> (_t0E03, _t0E08);
  real _t0E0A = prim |()|00B5<$[]> (_t0E09);
  string _t0E0B = "signed dist: ";
  real _t0E0C = 0.e0;
  real _t0E0D = 0.e0;
  real _t0E0E = -0.1e1;
  real _t0E0F = 0.e0;
  vec3 _t0E10 = [_t0E0D, _t0E0E, _t0E0F];
  real _t0E11 = prim •00CE<$[3]; $[3]; $[]> (_t0E10, refPos0AC0);
  real _t0E12 = prim -0026<$[]> (_t0E0C, _t0E11);
  string _t0E13 = " face: ";
  int _t0E14 = 2;
  string _t0E15 = " place: ";
  real _t0E16 = 0.e0;
  real _t0E17 = 0.e0;
  real _t0E18 = -0.1e1;
  real _t0E19 = 0.e0;
  vec3 _t0E1A = [_t0E17, _t0E18, _t0E19];
  real _t0E1B = prim •00CE<$[3]; $[3]; $[]> (_t0E1A, refPos0AC0);
  real _t0E1C = prim -0026<$[]> (_t0E16, _t0E1B);
  real _t0E1D = 0.e0;
  real _t0E1E = -0.1e1;
  real _t0E1F = 0.e0;
  vec3 _t0E20 = [_t0E1D, _t0E1E, _t0E1F];
  real _t0E21 = prim •00CE<$[3]; $[3]; $[]> (_t0E20, dPos0AC1);
  real _t0E22 = prim /0055 (_t0E1C, _t0E21);
  vec3 _t0E23 = prim *0038<$[3]> (dPos0AC1, _t0E22);
  vec3 _t0E24 = prim +0017<$[3]> (refPos0AC0, _t0E23);
  string _t0E25 = " error: ";
  real _t0E26 = 0.e0;
  real _t0E27 = 0.e0;
  real _t0E28 = -0.1e1;
  real _t0E29 = 0.e0;
  vec3 _t0E2A = [_t0E27, _t0E28, _t0E29];
  real _t0E2B = 0.e0;
  real _t0E2C = 0.e0;
  real _t0E2D = -0.1e1;
  real _t0E2E = 0.e0;
  vec3 _t0E2F = [_t0E2C, _t0E2D, _t0E2E];
  real _t0E30 = prim •00CE<$[3]; $[3]; $[]> (_t0E2F, refPos0AC0);
  real _t0E31 = prim -0026<$[]> (_t0E2B, _t0E30);
  real _t0E32 = 0.e0;
  real _t0E33 = -0.1e1;
  real _t0E34 = 0.e0;
  vec3 _t0E35 = [_t0E32, _t0E33, _t0E34];
  real _t0E36 = prim •00CE<$[3]; $[3]; $[]> (_t0E35, dPos0AC1);
  real _t0E37 = prim /0055 (_t0E31, _t0E36);
  vec3 _t0E38 = prim *0038<$[3]> (dPos0AC1, _t0E37);
  vec3 _t0E39 = prim +0017<$[3]> (refPos0AC0, _t0E38);
  real _t0E3A = prim •00CE<$[3]; $[3]; $[]> (_t0E2A, _t0E39);
  real _t0E3B = prim -0026<$[]> (_t0E26, _t0E3A);
  real _t0E3C = prim |()|00B5<$[]> (_t0E3B);
  string _t0E3D = " offset :";
  string _t0E3E = " dp: ";
  string _t0E3F = " otherPossibleTime: ";
  string _t0E40 = "\n";
  print (_t0D8D, _t0D9A, _t0D9B, _t0DA0, _t0DA1, _t0E01, _t0E02, _t0E0A, _t0E0B, _t0E12, _t0E13, _t0E14, _t0E15, _t0E24, _t0E25, _t0E3C, _t0E3D, refPos0AC0, _t0E3E, dPos0AC1, _t0E3F, faceTime0AC4, _t0E40);
  real _t0E41 = 0.e0;
  real _t0E42 = 0.e0;
  real _t0E43 = -0.1e1;
  real _t0E44 = 0.e0;
  vec3 _t0E45 = [_t0E42, _t0E43, _t0E44];
  real _t0E46 = prim •00CE<$[3]; $[3]; $[]> (_t0E45, refPos0AC0);
  real _t0E47 = prim -0026<$[]> (_t0E41, _t0E46);
  real _t0E48 = 0.e0;
  real _t0E49 = -0.1e1;
  real _t0E4A = 0.e0;
  vec3 _t0E4B = [_t0E48, _t0E49, _t0E4A];
  real _t0E4C = prim •00CE<$[3]; $[3]; $[]> (_t0E4B, dPos0AC1);
  real _t0E4D = prim /0055 (_t0E47, _t0E4C);
  real _t0E4E = -0.1e-7;
  bool _t0E4F = prim >=007E (_t0E4D, _t0E4E);
  real _t0E50 = 0.e0;
  real _t0E51 = 0.e0;
  real _t0E52 = -0.1e1;
  real _t0E53 = 0.e0;
  vec3 _t0E54 = [_t0E51, _t0E52, _t0E53];
  real _t0E55 = prim •00CE<$[3]; $[3]; $[]> (_t0E54, refPos0AC0);
  real _t0E56 = prim -0026<$[]> (_t0E50, _t0E55);
  real _t0E57 = 0.e0;
  real _t0E58 = -0.1e1;
  real _t0E59 = 0.e0;
  vec3 _t0E5A = [_t0E57, _t0E58, _t0E59];
  real _t0E5B = prim •00CE<$[3]; $[3]; $[]> (_t0E5A, dPos0AC1);
  real _t0E5C = prim /0055 (_t0E56, _t0E5B);
  bool _t0E5D = prim >0080 (time0AC2, _t0E5C);
  real _t0E5E = 0.e0;
  real _t0E5F = -0.1e1;
  real _t0E60 = 0.e0;
  vec3 _t0E61 = [_t0E5E, _t0E5F, _t0E60];
  real _t0E62 = prim •00CE<$[3]; $[3]; $[]> (_t0E61, dPos0AC1);
  real _t0E63 = prim |()|00B5<$[]> (_t0E62);
  real _t0E64 = 0.1e-7;
  bool _t0E65 = prim >=007E (_t0E63, _t0E64);
  bool _t0E66 = prim $and01C4 (_t0E5D, _t0E65);
  bool _t0E67 = prim $and01C4 (_t0E4F, _t0E66);
  if _t0E67 {
    real _t0E68 = 0.1e1;
    real _t0E69 = 0.1e-7;
    real _t0E6A = prim +0017<$[]> (_t0E68, _t0E69);
    real _t0E6B = 0.1e1;
    real _t0E6C = 0.1e1;
    real _t0E6D = 0.1e1;
    vec3 _t0E6E = [_t0E6B, _t0E6C, _t0E6D];
    real _t0E6F = 0.e0;
    real _t0E70 = 0.e0;
    real _t0E71 = -0.1e1;
    real _t0E72 = 0.e0;
    vec3 _t0E73 = [_t0E70, _t0E71, _t0E72];
    real _t0E74 = prim •00CE<$[3]; $[3]; $[]> (_t0E73, refPos0AC0);
    real _t0E75 = prim -0026<$[]> (_t0E6F, _t0E74);
    real _t0E76 = 0.e0;
    real _t0E77 = -0.1e1;
    real _t0E78 = 0.e0;
    vec3 _t0E79 = [_t0E76, _t0E77, _t0E78];
    real _t0E7A = prim •00CE<$[3]; $[3]; $[]> (_t0E79, dPos0AC1);
    real _t0E7B = prim /0055 (_t0E75, _t0E7A);
    vec3 _t0E7C = prim *0038<$[3]> (dPos0AC1, _t0E7B);
    vec3 _t0E7D = prim +0017<$[3]> (refPos0AC0, _t0E7C);
    real _t0E7E = prim •00CE<$[3]; $[3]; $[]> (_t0E6E, _t0E7D);
    bool _t0E7F = prim >0080 (_t0E6A, _t0E7E);
    real _t0E80 = 0.1e-7;
    real _t0E81 = 0.1e-7;
    real _t0E82 = 0.1e-7;
    vec3 _t0E83 = [_t0E80, _t0E81, _t0E82];
    real _t0E84 = 0.e0;
    real _t0E85 = 0.e0;
    real _t0E86 = -0.1e1;
    real _t0E87 = 0.e0;
    vec3 _t0E88 = [_t0E85, _t0E86, _t0E87];
    real _t0E89 = prim •00CE<$[3]; $[3]; $[]> (_t0E88, refPos0AC0);
    real _t0E8A = prim -0026<$[]> (_t0E84, _t0E89);
    real _t0E8B = 0.e0;
    real _t0E8C = -0.1e1;
    real _t0E8D = 0.e0;
    vec3 _t0E8E = [_t0E8B, _t0E8C, _t0E8D];
    real _t0E8F = prim •00CE<$[3]; $[3]; $[]> (_t0E8E, dPos0AC1);
    real _t0E90 = prim /0055 (_t0E8A, _t0E8F);
    vec3 _t0E91 = prim *0038<$[3]> (dPos0AC1, _t0E90);
    vec3 _t0E92 = prim +0017<$[3]> (refPos0AC0, _t0E91);
    vec3 _t0E93 = prim +0017<$[3]> (_t0E83, _t0E92);
    real _t0E94 = _t0E93[0];
    real _t0E95 = -0.e0;
    bool _t0E96 = prim >0080 (_t0E94, _t0E95);
    real _t0E97 = 0.1e-7;
    real _t0E98 = 0.1e-7;
    real _t0E99 = 0.1e-7;
    vec3 _t0E9A = [_t0E97, _t0E98, _t0E99];
    real _t0E9B = 0.e0;
    real _t0E9C = 0.e0;
    real _t0E9D = -0.1e1;
    real _t0E9E = 0.e0;
    vec3 _t0E9F = [_t0E9C, _t0E9D, _t0E9E];
    real _t0EA0 = prim •00CE<$[3]; $[3]; $[]> (_t0E9F, refPos0AC0);
    real _t0EA1 = prim -0026<$[]> (_t0E9B, _t0EA0);
    real _t0EA2 = 0.e0;
    real _t0EA3 = -0.1e1;
    real _t0EA4 = 0.e0;
    vec3 _t0EA5 = [_t0EA2, _t0EA3, _t0EA4];
    real _t0EA6 = prim •00CE<$[3]; $[3]; $[]> (_t0EA5, dPos0AC1);
    real _t0EA7 = prim /0055 (_t0EA1, _t0EA6);
    vec3 _t0EA8 = prim *0038<$[3]> (dPos0AC1, _t0EA7);
    vec3 _t0EA9 = prim +0017<$[3]> (refPos0AC0, _t0EA8);
    vec3 _t0EAA = prim +0017<$[3]> (_t0E9A, _t0EA9);
    real _t0EAB = _t0EAA[1];
    real _t0EAC = -0.e0;
    bool _t0EAD = prim >0080 (_t0EAB, _t0EAC);
    real _t0EAE = 0.1e-7;
    real _t0EAF = 0.1e-7;
    real _t0EB0 = 0.1e-7;
    vec3 _t0EB1 = [_t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.e0;
    real _t0EB4 = -0.1e1;
    real _t0EB5 = 0.e0;
    vec3 _t0EB6 = [_t0EB3, _t0EB4, _t0EB5];
    real _t0EB7 = prim •00CE<$[3]; $[3]; $[]> (_t0EB6, refPos0AC0);
    real _t0EB8 = prim -0026<$[]> (_t0EB2, _t0EB7);
    real _t0EB9 = 0.e0;
    real _t0EBA = -0.1e1;
    real _t0EBB = 0.e0;
    vec3 _t0EBC = [_t0EB9, _t0EBA, _t0EBB];
    real _t0EBD = prim •00CE<$[3]; $[3]; $[]> (_t0EBC, dPos0AC1);
    real _t0EBE = prim /0055 (_t0EB8, _t0EBD);
    vec3 _t0EBF = prim *0038<$[3]> (dPos0AC1, _t0EBE);
    vec3 _t0EC0 = prim +0017<$[3]> (refPos0AC0, _t0EBF);
    vec3 _t0EC1 = prim +0017<$[3]> (_t0EB1, _t0EC0);
    real _t0EC2 = _t0EC1[2];
    real _t0EC3 = -0.e0;
    bool _t0EC4 = prim >0080 (_t0EC2, _t0EC3);
    bool _t0EC5 = prim $and01C4 (_t0EAD, _t0EC4);
    bool _t0EC6 = prim $and01C4 (_t0E96, _t0EC5);
    bool _t0EC7 = prim $and01C4 (_t0E7F, _t0EC6);
    if _t0EC7 {
      string _t0EC8 = "Saving at this face!";
      real _t0EC9 = 0.e0;
      real _t0ECA = 0.e0;
      real _t0ECB = -0.1e1;
      real _t0ECC = 0.e0;
      vec3 _t0ECD = [_t0ECA, _t0ECB, _t0ECC];
      real _t0ECE = prim •00CE<$[3]; $[3]; $[]> (_t0ECD, refPos0AC0);
      real _t0ECF = prim -0026<$[]> (_t0EC9, _t0ECE);
      real _t0ED0 = 0.e0;
      real _t0ED1 = -0.1e1;
      real _t0ED2 = 0.e0;
      vec3 _t0ED3 = [_t0ED0, _t0ED1, _t0ED2];
      real _t0ED4 = prim •00CE<$[3]; $[3]; $[]> (_t0ED3, dPos0AC1);
      real _t0ED5 = prim /0055 (_t0ECF, _t0ED4);
      real _t0ED6 = 0.e0;
      real _t0ED7 = 0.e0;
      real _t0ED8 = -0.1e1;
      real _t0ED9 = 0.e0;
      vec3 _t0EDA = [_t0ED7, _t0ED8, _t0ED9];
      real _t0EDB = prim •00CE<$[3]; $[3]; $[]> (_t0EDA, refPos0AC0);
      real _t0EDC = prim -0026<$[]> (_t0ED6, _t0EDB);
      real _t0EDD = 0.e0;
      real _t0EDE = -0.1e1;
      real _t0EDF = 0.e0;
      vec3 _t0EE0 = [_t0EDD, _t0EDE, _t0EDF];
      real _t0EE1 = prim •00CE<$[3]; $[3]; $[]> (_t0EE0, dPos0AC1);
      real _t0EE2 = prim /0055 (_t0EDC, _t0EE1);
      bool _t0EE3 = prim >0080 (time0AC2, _t0EE2);
      string _t0EE4 = "\n";
      print (_t0EC8, _t0ED5, _t0EE3, _t0EE4);
      real _t0EE5 = 0.e0;
      real _t0EE6 = 0.e0;
      real _t0EE7 = -0.1e1;
      real _t0EE8 = 0.e0;
      vec3 _t0EE9 = [_t0EE6, _t0EE7, _t0EE8];
      real _t0EEA = prim •00CE<$[3]; $[3]; $[]> (_t0EE9, refPos0AC0);
      real _t0EEB = prim -0026<$[]> (_t0EE5, _t0EEA);
      real _t0EEC = 0.e0;
      real _t0EED = -0.1e1;
      real _t0EEE = 0.e0;
      vec3 _t0EEF = [_t0EEC, _t0EED, _t0EEE];
      real _t0EF0 = prim •00CE<$[3]; $[3]; $[]> (_t0EEF, dPos0AC1);
      time0AC2 = prim /0055 (_t0EEB, _t0EF0);
      face0AC3 = 2;
    }
  }
  string _t0EF1 = "\ntest :";
  real _t0EF2 = 0.e0;
  real _t0EF3 = 0.e0;
  real _t0EF4 = 0.e0;
  real _t0EF5 = -0.1e1;
  vec3 _t0EF6 = [_t0EF3, _t0EF4, _t0EF5];
  real _t0EF7 = prim •00CE<$[3]; $[3]; $[]> (_t0EF6, refPos0AC0);
  real _t0EF8 = prim -0026<$[]> (_t0EF2, _t0EF7);
  real _t0EF9 = 0.e0;
  real _t0EFA = 0.e0;
  real _t0EFB = -0.1e1;
  vec3 _t0EFC = [_t0EF9, _t0EFA, _t0EFB];
  real _t0EFD = prim •00CE<$[3]; $[3]; $[]> (_t0EFC, dPos0AC1);
  real _t0EFE = prim /0055 (_t0EF8, _t0EFD);
  string _t0EFF = " test2: ";
  real _t0F00 = 0.e0;
  real _t0F01 = 0.e0;
  real _t0F02 = -0.1e1;
  vec3 _t0F03 = [_t0F00, _t0F01, _t0F02];
  real _t0F04 = prim •00CE<$[3]; $[3]; $[]> (_t0F03, dPos0AC1);
  string _t0F05 = " insideTest: ";
  real _t0F06 = 0.1e1;
  real _t0F07 = 0.1e-7;
  real _t0F08 = prim +0017<$[]> (_t0F06, _t0F07);
  real _t0F09 = 0.1e1;
  real _t0F0A = 0.1e1;
  real _t0F0B = 0.1e1;
  vec3 _t0F0C = [_t0F09, _t0F0A, _t0F0B];
  real _t0F0D = 0.e0;
  real _t0F0E = 0.e0;
  real _t0F0F = 0.e0;
  real _t0F10 = -0.1e1;
  vec3 _t0F11 = [_t0F0E, _t0F0F, _t0F10];
  real _t0F12 = prim •00CE<$[3]; $[3]; $[]> (_t0F11, refPos0AC0);
  real _t0F13 = prim -0026<$[]> (_t0F0D, _t0F12);
  real _t0F14 = 0.e0;
  real _t0F15 = 0.e0;
  real _t0F16 = -0.1e1;
  vec3 _t0F17 = [_t0F14, _t0F15, _t0F16];
  real _t0F18 = prim •00CE<$[3]; $[3]; $[]> (_t0F17, dPos0AC1);
  real _t0F19 = prim /0055 (_t0F13, _t0F18);
  vec3 _t0F1A = prim *0038<$[3]> (dPos0AC1, _t0F19);
  vec3 _t0F1B = prim +0017<$[3]> (refPos0AC0, _t0F1A);
  real _t0F1C = prim •00CE<$[3]; $[3]; $[]> (_t0F0C, _t0F1B);
  bool _t0F1D = prim >0080 (_t0F08, _t0F1C);
  real _t0F1E = 0.1e-7;
  real _t0F1F = 0.1e-7;
  real _t0F20 = 0.1e-7;
  vec3 _t0F21 = [_t0F1E, _t0F1F, _t0F20];
  real _t0F22 = 0.e0;
  real _t0F23 = 0.e0;
  real _t0F24 = 0.e0;
  real _t0F25 = -0.1e1;
  vec3 _t0F26 = [_t0F23, _t0F24, _t0F25];
  real _t0F27 = prim •00CE<$[3]; $[3]; $[]> (_t0F26, refPos0AC0);
  real _t0F28 = prim -0026<$[]> (_t0F22, _t0F27);
  real _t0F29 = 0.e0;
  real _t0F2A = 0.e0;
  real _t0F2B = -0.1e1;
  vec3 _t0F2C = [_t0F29, _t0F2A, _t0F2B];
  real _t0F2D = prim •00CE<$[3]; $[3]; $[]> (_t0F2C, dPos0AC1);
  real _t0F2E = prim /0055 (_t0F28, _t0F2D);
  vec3 _t0F2F = prim *0038<$[3]> (dPos0AC1, _t0F2E);
  vec3 _t0F30 = prim +0017<$[3]> (refPos0AC0, _t0F2F);
  vec3 _t0F31 = prim +0017<$[3]> (_t0F21, _t0F30);
  real _t0F32 = _t0F31[0];
  real _t0F33 = -0.e0;
  bool _t0F34 = prim >0080 (_t0F32, _t0F33);
  real _t0F35 = 0.1e-7;
  real _t0F36 = 0.1e-7;
  real _t0F37 = 0.1e-7;
  vec3 _t0F38 = [_t0F35, _t0F36, _t0F37];
  real _t0F39 = 0.e0;
  real _t0F3A = 0.e0;
  real _t0F3B = 0.e0;
  real _t0F3C = -0.1e1;
  vec3 _t0F3D = [_t0F3A, _t0F3B, _t0F3C];
  real _t0F3E = prim •00CE<$[3]; $[3]; $[]> (_t0F3D, refPos0AC0);
  real _t0F3F = prim -0026<$[]> (_t0F39, _t0F3E);
  real _t0F40 = 0.e0;
  real _t0F41 = 0.e0;
  real _t0F42 = -0.1e1;
  vec3 _t0F43 = [_t0F40, _t0F41, _t0F42];
  real _t0F44 = prim •00CE<$[3]; $[3]; $[]> (_t0F43, dPos0AC1);
  real _t0F45 = prim /0055 (_t0F3F, _t0F44);
  vec3 _t0F46 = prim *0038<$[3]> (dPos0AC1, _t0F45);
  vec3 _t0F47 = prim +0017<$[3]> (refPos0AC0, _t0F46);
  vec3 _t0F48 = prim +0017<$[3]> (_t0F38, _t0F47);
  real _t0F49 = _t0F48[1];
  real _t0F4A = -0.e0;
  bool _t0F4B = prim >0080 (_t0F49, _t0F4A);
  real _t0F4C = 0.1e-7;
  real _t0F4D = 0.1e-7;
  real _t0F4E = 0.1e-7;
  vec3 _t0F4F = [_t0F4C, _t0F4D, _t0F4E];
  real _t0F50 = 0.e0;
  real _t0F51 = 0.e0;
  real _t0F52 = 0.e0;
  real _t0F53 = -0.1e1;
  vec3 _t0F54 = [_t0F51, _t0F52, _t0F53];
  real _t0F55 = prim •00CE<$[3]; $[3]; $[]> (_t0F54, refPos0AC0);
  real _t0F56 = prim -0026<$[]> (_t0F50, _t0F55);
  real _t0F57 = 0.e0;
  real _t0F58 = 0.e0;
  real _t0F59 = -0.1e1;
  vec3 _t0F5A = [_t0F57, _t0F58, _t0F59];
  real _t0F5B = prim •00CE<$[3]; $[3]; $[]> (_t0F5A, dPos0AC1);
  real _t0F5C = prim /0055 (_t0F56, _t0F5B);
  vec3 _t0F5D = prim *0038<$[3]> (dPos0AC1, _t0F5C);
  vec3 _t0F5E = prim +0017<$[3]> (refPos0AC0, _t0F5D);
  vec3 _t0F5F = prim +0017<$[3]> (_t0F4F, _t0F5E);
  real _t0F60 = _t0F5F[2];
  real _t0F61 = -0.e0;
  bool _t0F62 = prim >0080 (_t0F60, _t0F61);
  bool _t0F63 = prim $and01C4 (_t0F4B, _t0F62);
  bool _t0F64 = prim $and01C4 (_t0F34, _t0F63);
  bool _t0F65 = prim $and01C4 (_t0F1D, _t0F64);
  string _t0F66 = " dist: ";
  real _t0F67 = 0.e0;
  real _t0F68 = 0.e0;
  real _t0F69 = 0.e0;
  real _t0F6A = -0.1e1;
  vec3 _t0F6B = [_t0F68, _t0F69, _t0F6A];
  real _t0F6C = prim •00CE<$[3]; $[3]; $[]> (_t0F6B, refPos0AC0);
  real _t0F6D = prim -0026<$[]> (_t0F67, _t0F6C);
  real _t0F6E = prim |()|00B5<$[]> (_t0F6D);
  string _t0F6F = "signed dist: ";
  real _t0F70 = 0.e0;
  real _t0F71 = 0.e0;
  real _t0F72 = 0.e0;
  real _t0F73 = -0.1e1;
  vec3 _t0F74 = [_t0F71, _t0F72, _t0F73];
  real _t0F75 = prim •00CE<$[3]; $[3]; $[]> (_t0F74, refPos0AC0);
  real _t0F76 = prim -0026<$[]> (_t0F70, _t0F75);
  string _t0F77 = " face: ";
  int _t0F78 = 3;
  string _t0F79 = " place: ";
  real _t0F7A = 0.e0;
  real _t0F7B = 0.e0;
  real _t0F7C = 0.e0;
  real _t0F7D = -0.1e1;
  vec3 _t0F7E = [_t0F7B, _t0F7C, _t0F7D];
  real _t0F7F = prim •00CE<$[3]; $[3]; $[]> (_t0F7E, refPos0AC0);
  real _t0F80 = prim -0026<$[]> (_t0F7A, _t0F7F);
  real _t0F81 = 0.e0;
  real _t0F82 = 0.e0;
  real _t0F83 = -0.1e1;
  vec3 _t0F84 = [_t0F81, _t0F82, _t0F83];
  real _t0F85 = prim •00CE<$[3]; $[3]; $[]> (_t0F84, dPos0AC1);
  real _t0F86 = prim /0055 (_t0F80, _t0F85);
  vec3 _t0F87 = prim *0038<$[3]> (dPos0AC1, _t0F86);
  vec3 _t0F88 = prim +0017<$[3]> (refPos0AC0, _t0F87);
  string _t0F89 = " error: ";
  real _t0F8A = 0.e0;
  real _t0F8B = 0.e0;
  real _t0F8C = 0.e0;
  real _t0F8D = -0.1e1;
  vec3 _t0F8E = [_t0F8B, _t0F8C, _t0F8D];
  real _t0F8F = 0.e0;
  real _t0F90 = 0.e0;
  real _t0F91 = 0.e0;
  real _t0F92 = -0.1e1;
  vec3 _t0F93 = [_t0F90, _t0F91, _t0F92];
  real _t0F94 = prim •00CE<$[3]; $[3]; $[]> (_t0F93, refPos0AC0);
  real _t0F95 = prim -0026<$[]> (_t0F8F, _t0F94);
  real _t0F96 = 0.e0;
  real _t0F97 = 0.e0;
  real _t0F98 = -0.1e1;
  vec3 _t0F99 = [_t0F96, _t0F97, _t0F98];
  real _t0F9A = prim •00CE<$[3]; $[3]; $[]> (_t0F99, dPos0AC1);
  real _t0F9B = prim /0055 (_t0F95, _t0F9A);
  vec3 _t0F9C = prim *0038<$[3]> (dPos0AC1, _t0F9B);
  vec3 _t0F9D = prim +0017<$[3]> (refPos0AC0, _t0F9C);
  real _t0F9E = prim •00CE<$[3]; $[3]; $[]> (_t0F8E, _t0F9D);
  real _t0F9F = prim -0026<$[]> (_t0F8A, _t0F9E);
  real _t0FA0 = prim |()|00B5<$[]> (_t0F9F);
  string _t0FA1 = " offset :";
  string _t0FA2 = " dp: ";
  string _t0FA3 = " otherPossibleTime: ";
  string _t0FA4 = "\n";
  print (_t0EF1, _t0EFE, _t0EFF, _t0F04, _t0F05, _t0F65, _t0F66, _t0F6E, _t0F6F, _t0F76, _t0F77, _t0F78, _t0F79, _t0F88, _t0F89, _t0FA0, _t0FA1, refPos0AC0, _t0FA2, dPos0AC1, _t0FA3, faceTime0AC4, _t0FA4);
  real _t0FA5 = 0.e0;
  real _t0FA6 = 0.e0;
  real _t0FA7 = 0.e0;
  real _t0FA8 = -0.1e1;
  vec3 _t0FA9 = [_t0FA6, _t0FA7, _t0FA8];
  real _t0FAA = prim •00CE<$[3]; $[3]; $[]> (_t0FA9, refPos0AC0);
  real _t0FAB = prim -0026<$[]> (_t0FA5, _t0FAA);
  real _t0FAC = 0.e0;
  real _t0FAD = 0.e0;
  real _t0FAE = -0.1e1;
  vec3 _t0FAF = [_t0FAC, _t0FAD, _t0FAE];
  real _t0FB0 = prim •00CE<$[3]; $[3]; $[]> (_t0FAF, dPos0AC1);
  real _t0FB1 = prim /0055 (_t0FAB, _t0FB0);
  real _t0FB2 = -0.1e-7;
  bool _t0FB3 = prim >=007E (_t0FB1, _t0FB2);
  real _t0FB4 = 0.e0;
  real _t0FB5 = 0.e0;
  real _t0FB6 = 0.e0;
  real _t0FB7 = -0.1e1;
  vec3 _t0FB8 = [_t0FB5, _t0FB6, _t0FB7];
  real _t0FB9 = prim •00CE<$[3]; $[3]; $[]> (_t0FB8, refPos0AC0);
  real _t0FBA = prim -0026<$[]> (_t0FB4, _t0FB9);
  real _t0FBB = 0.e0;
  real _t0FBC = 0.e0;
  real _t0FBD = -0.1e1;
  vec3 _t0FBE = [_t0FBB, _t0FBC, _t0FBD];
  real _t0FBF = prim •00CE<$[3]; $[3]; $[]> (_t0FBE, dPos0AC1);
  real _t0FC0 = prim /0055 (_t0FBA, _t0FBF);
  bool _t0FC1 = prim >0080 (time0AC2, _t0FC0);
  real _t0FC2 = 0.e0;
  real _t0FC3 = 0.e0;
  real _t0FC4 = -0.1e1;
  vec3 _t0FC5 = [_t0FC2, _t0FC3, _t0FC4];
  real _t0FC6 = prim •00CE<$[3]; $[3]; $[]> (_t0FC5, dPos0AC1);
  real _t0FC7 = prim |()|00B5<$[]> (_t0FC6);
  real _t0FC8 = 0.1e-7;
  bool _t0FC9 = prim >=007E (_t0FC7, _t0FC8);
  bool _t0FCA = prim $and01C4 (_t0FC1, _t0FC9);
  bool _t0FCB = prim $and01C4 (_t0FB3, _t0FCA);
  if _t0FCB {
    real _t0FCC = 0.1e1;
    real _t0FCD = 0.1e-7;
    real _t0FCE = prim +0017<$[]> (_t0FCC, _t0FCD);
    real _t0FCF = 0.1e1;
    real _t0FD0 = 0.1e1;
    real _t0FD1 = 0.1e1;
    vec3 _t0FD2 = [_t0FCF, _t0FD0, _t0FD1];
    real _t0FD3 = 0.e0;
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.e0;
    real _t0FD6 = -0.1e1;
    vec3 _t0FD7 = [_t0FD4, _t0FD5, _t0FD6];
    real _t0FD8 = prim •00CE<$[3]; $[3]; $[]> (_t0FD7, refPos0AC0);
    real _t0FD9 = prim -0026<$[]> (_t0FD3, _t0FD8);
    real _t0FDA = 0.e0;
    real _t0FDB = 0.e0;
    real _t0FDC = -0.1e1;
    vec3 _t0FDD = [_t0FDA, _t0FDB, _t0FDC];
    real _t0FDE = prim •00CE<$[3]; $[3]; $[]> (_t0FDD, dPos0AC1);
    real _t0FDF = prim /0055 (_t0FD9, _t0FDE);
    vec3 _t0FE0 = prim *0038<$[3]> (dPos0AC1, _t0FDF);
    vec3 _t0FE1 = prim +0017<$[3]> (refPos0AC0, _t0FE0);
    real _t0FE2 = prim •00CE<$[3]; $[3]; $[]> (_t0FD2, _t0FE1);
    bool _t0FE3 = prim >0080 (_t0FCE, _t0FE2);
    real _t0FE4 = 0.1e-7;
    real _t0FE5 = 0.1e-7;
    real _t0FE6 = 0.1e-7;
    vec3 _t0FE7 = [_t0FE4, _t0FE5, _t0FE6];
    real _t0FE8 = 0.e0;
    real _t0FE9 = 0.e0;
    real _t0FEA = 0.e0;
    real _t0FEB = -0.1e1;
    vec3 _t0FEC = [_t0FE9, _t0FEA, _t0FEB];
    real _t0FED = prim •00CE<$[3]; $[3]; $[]> (_t0FEC, refPos0AC0);
    real _t0FEE = prim -0026<$[]> (_t0FE8, _t0FED);
    real _t0FEF = 0.e0;
    real _t0FF0 = 0.e0;
    real _t0FF1 = -0.1e1;
    vec3 _t0FF2 = [_t0FEF, _t0FF0, _t0FF1];
    real _t0FF3 = prim •00CE<$[3]; $[3]; $[]> (_t0FF2, dPos0AC1);
    real _t0FF4 = prim /0055 (_t0FEE, _t0FF3);
    vec3 _t0FF5 = prim *0038<$[3]> (dPos0AC1, _t0FF4);
    vec3 _t0FF6 = prim +0017<$[3]> (refPos0AC0, _t0FF5);
    vec3 _t0FF7 = prim +0017<$[3]> (_t0FE7, _t0FF6);
    real _t0FF8 = _t0FF7[0];
    real _t0FF9 = -0.e0;
    bool _t0FFA = prim >0080 (_t0FF8, _t0FF9);
    real _t0FFB = 0.1e-7;
    real _t0FFC = 0.1e-7;
    real _t0FFD = 0.1e-7;
    vec3 _t0FFE = [_t0FFB, _t0FFC, _t0FFD];
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = 0.e0;
    real _t1002 = -0.1e1;
    vec3 _t1003 = [_t1000, _t1001, _t1002];
    real _t1004 = prim •00CE<$[3]; $[3]; $[]> (_t1003, refPos0AC0);
    real _t1005 = prim -0026<$[]> (_t0FFF, _t1004);
    real _t1006 = 0.e0;
    real _t1007 = 0.e0;
    real _t1008 = -0.1e1;
    vec3 _t1009 = [_t1006, _t1007, _t1008];
    real _t100A = prim •00CE<$[3]; $[3]; $[]> (_t1009, dPos0AC1);
    real _t100B = prim /0055 (_t1005, _t100A);
    vec3 _t100C = prim *0038<$[3]> (dPos0AC1, _t100B);
    vec3 _t100D = prim +0017<$[3]> (refPos0AC0, _t100C);
    vec3 _t100E = prim +0017<$[3]> (_t0FFE, _t100D);
    real _t100F = _t100E[1];
    real _t1010 = -0.e0;
    bool _t1011 = prim >0080 (_t100F, _t1010);
    real _t1012 = 0.1e-7;
    real _t1013 = 0.1e-7;
    real _t1014 = 0.1e-7;
    vec3 _t1015 = [_t1012, _t1013, _t1014];
    real _t1016 = 0.e0;
    real _t1017 = 0.e0;
    real _t1018 = 0.e0;
    real _t1019 = -0.1e1;
    vec3 _t101A = [_t1017, _t1018, _t1019];
    real _t101B = prim •00CE<$[3]; $[3]; $[]> (_t101A, refPos0AC0);
    real _t101C = prim -0026<$[]> (_t1016, _t101B);
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = -0.1e1;
    vec3 _t1020 = [_t101D, _t101E, _t101F];
    real _t1021 = prim •00CE<$[3]; $[3]; $[]> (_t1020, dPos0AC1);
    real _t1022 = prim /0055 (_t101C, _t1021);
    vec3 _t1023 = prim *0038<$[3]> (dPos0AC1, _t1022);
    vec3 _t1024 = prim +0017<$[3]> (refPos0AC0, _t1023);
    vec3 _t1025 = prim +0017<$[3]> (_t1015, _t1024);
    real _t1026 = _t1025[2];
    real _t1027 = -0.e0;
    bool _t1028 = prim >0080 (_t1026, _t1027);
    bool _t1029 = prim $and01C4 (_t1011, _t1028);
    bool _t102A = prim $and01C4 (_t0FFA, _t1029);
    bool _t102B = prim $and01C4 (_t0FE3, _t102A);
    if _t102B {
      string _t102C = "Saving at this face!";
      real _t102D = 0.e0;
      real _t102E = 0.e0;
      real _t102F = 0.e0;
      real _t1030 = -0.1e1;
      vec3 _t1031 = [_t102E, _t102F, _t1030];
      real _t1032 = prim •00CE<$[3]; $[3]; $[]> (_t1031, refPos0AC0);
      real _t1033 = prim -0026<$[]> (_t102D, _t1032);
      real _t1034 = 0.e0;
      real _t1035 = 0.e0;
      real _t1036 = -0.1e1;
      vec3 _t1037 = [_t1034, _t1035, _t1036];
      real _t1038 = prim •00CE<$[3]; $[3]; $[]> (_t1037, dPos0AC1);
      real _t1039 = prim /0055 (_t1033, _t1038);
      real _t103A = 0.e0;
      real _t103B = 0.e0;
      real _t103C = 0.e0;
      real _t103D = -0.1e1;
      vec3 _t103E = [_t103B, _t103C, _t103D];
      real _t103F = prim •00CE<$[3]; $[3]; $[]> (_t103E, refPos0AC0);
      real _t1040 = prim -0026<$[]> (_t103A, _t103F);
      real _t1041 = 0.e0;
      real _t1042 = 0.e0;
      real _t1043 = -0.1e1;
      vec3 _t1044 = [_t1041, _t1042, _t1043];
      real _t1045 = prim •00CE<$[3]; $[3]; $[]> (_t1044, dPos0AC1);
      real _t1046 = prim /0055 (_t1040, _t1045);
      bool _t1047 = prim >0080 (time0AC2, _t1046);
      string _t1048 = "\n";
      print (_t102C, _t1039, _t1047, _t1048);
      real _t1049 = 0.e0;
      real _t104A = 0.e0;
      real _t104B = 0.e0;
      real _t104C = -0.1e1;
      vec3 _t104D = [_t104A, _t104B, _t104C];
      real _t104E = prim •00CE<$[3]; $[3]; $[]> (_t104D, refPos0AC0);
      real _t104F = prim -0026<$[]> (_t1049, _t104E);
      real _t1050 = 0.e0;
      real _t1051 = 0.e0;
      real _t1052 = -0.1e1;
      vec3 _t1053 = [_t1050, _t1051, _t1052];
      real _t1054 = prim •00CE<$[3]; $[3]; $[]> (_t1053, dPos0AC1);
      time0AC2 = prim /0055 (_t104F, _t1054);
      face0AC3 = 3;
    }
  }
  int _t1055 = -1;
  bool _t1056 = prim !=0086 (face0AC3, _t1055);
  real _t1057 = 0.1e1;
  real _t1058 = 0.1e-7;
  real _t1059 = prim +0017<$[]> (_t1057, _t1058);
  real _t105A = 0.1e1;
  real _t105B = 0.1e1;
  real _t105C = 0.1e1;
  vec3 _t105D = [_t105A, _t105B, _t105C];
  real _t105E = 0.e0;
  real _t105F = prim max0125 (time0AC2, _t105E);
  vec3 _t1060 = prim *0038<$[3]> (dPos0AC1, _t105F);
  vec3 _t1061 = prim +0017<$[3]> (refPos0AC0, _t1060);
  real _t1062 = prim •00CE<$[3]; $[3]; $[]> (_t105D, _t1061);
  bool _t1063 = prim >0080 (_t1059, _t1062);
  real _t1064 = 0.1e-7;
  real _t1065 = 0.1e-7;
  real _t1066 = 0.1e-7;
  vec3 _t1067 = [_t1064, _t1065, _t1066];
  real _t1068 = 0.e0;
  real _t1069 = prim max0125 (time0AC2, _t1068);
  vec3 _t106A = prim *0038<$[3]> (dPos0AC1, _t1069);
  vec3 _t106B = prim +0017<$[3]> (refPos0AC0, _t106A);
  vec3 _t106C = prim +0017<$[3]> (_t1067, _t106B);
  real _t106D = _t106C[0];
  real _t106E = -0.e0;
  bool _t106F = prim >0080 (_t106D, _t106E);
  real _t1070 = 0.1e-7;
  real _t1071 = 0.1e-7;
  real _t1072 = 0.1e-7;
  vec3 _t1073 = [_t1070, _t1071, _t1072];
  real _t1074 = 0.e0;
  real _t1075 = prim max0125 (time0AC2, _t1074);
  vec3 _t1076 = prim *0038<$[3]> (dPos0AC1, _t1075);
  vec3 _t1077 = prim +0017<$[3]> (refPos0AC0, _t1076);
  vec3 _t1078 = prim +0017<$[3]> (_t1073, _t1077);
  real _t1079 = _t1078[1];
  real _t107A = -0.e0;
  bool _t107B = prim >0080 (_t1079, _t107A);
  real _t107C = 0.1e-7;
  real _t107D = 0.1e-7;
  real _t107E = 0.1e-7;
  vec3 _t107F = [_t107C, _t107D, _t107E];
  real _t1080 = 0.e0;
  real _t1081 = prim max0125 (time0AC2, _t1080);
  vec3 _t1082 = prim *0038<$[3]> (dPos0AC1, _t1081);
  vec3 _t1083 = prim +0017<$[3]> (refPos0AC0, _t1082);
  vec3 _t1084 = prim +0017<$[3]> (_t107F, _t1083);
  real _t1085 = _t1084[2];
  real _t1086 = -0.e0;
  bool _t1087 = prim >0080 (_t1085, _t1086);
  bool _t1088 = prim $and01C4 (_t107B, _t1087);
  bool _t1089 = prim $and01C4 (_t106F, _t1088);
  bool _t108A = prim $and01C4 (_t1063, _t1089);
  bool _t108B = prim $and01C4 (_t1056, _t108A);
  if _t108B {
    string _t108C = "\nReturning via standard : ";
    real _t108D = 0.e0;
    real _t108E = prim max0125 (time0AC2, _t108D);
    real _t108F = (real)face0AC3;
    vec2 _t1090 = [_t108E, _t108F];
    string _t1091 = "\n";
    print (_t108C, _t1090, _t1091);
    real _t1092 = 0.e0;
    real _t1093 = prim max0125 (time0AC2, _t1092);
    real _t1094 = (real)face0AC3;
    vec2 _t1095 = [_t1093, _t1094];
    return _t1095;
  } else {
    real _t1096 = -0.1e1;
    real _t1097 = -0.1e1;
    vec2 _t1098 = [_t1096, _t1097];
    return _t1098;
  }
}
function vec2#2 _exit1099 (vec3 refPos0AC0, vec3 dPos0AC1, int i109A)
{
  real time109B = +inf;
  int face109C = -1;
  real faceTime109D = -inf;
  string _t109E = "\ntest :";
  real _t109F = 0.57735026919e0;
  real _t10A0 = 0.57735026919e0;
  real _t10A1 = 0.57735026919e0;
  real _t10A2 = 0.57735026919e0;
  vec3 _t10A3 = [_t10A0, _t10A1, _t10A2];
  real _t10A4 = prim •00CE<$[3]; $[3]; $[]> (_t10A3, refPos0AC0);
  real _t10A5 = prim -0026<$[]> (_t109F, _t10A4);
  real _t10A6 = 0.57735026919e0;
  real _t10A7 = 0.57735026919e0;
  real _t10A8 = 0.57735026919e0;
  vec3 _t10A9 = [_t10A6, _t10A7, _t10A8];
  real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, dPos0AC1);
  real _t10AB = prim /0055 (_t10A5, _t10AA);
  string _t10AC = " test2: ";
  real _t10AD = 0.57735026919e0;
  real _t10AE = 0.57735026919e0;
  real _t10AF = 0.57735026919e0;
  vec3 _t10B0 = [_t10AD, _t10AE, _t10AF];
  real _t10B1 = prim •00CE<$[3]; $[3]; $[]> (_t10B0, dPos0AC1);
  string _t10B2 = " insideTest: ";
  real _t10B3 = 0.1e1;
  real _t10B4 = 0.1e-7;
  real _t10B5 = prim +0017<$[]> (_t10B3, _t10B4);
  real _t10B6 = 0.1e1;
  real _t10B7 = 0.1e1;
  real _t10B8 = 0.1e1;
  vec3 _t10B9 = [_t10B6, _t10B7, _t10B8];
  real _t10BA = 0.57735026919e0;
  real _t10BB = 0.57735026919e0;
  real _t10BC = 0.57735026919e0;
  real _t10BD = 0.57735026919e0;
  vec3 _t10BE = [_t10BB, _t10BC, _t10BD];
  real _t10BF = prim •00CE<$[3]; $[3]; $[]> (_t10BE, refPos0AC0);
  real _t10C0 = prim -0026<$[]> (_t10BA, _t10BF);
  real _t10C1 = 0.57735026919e0;
  real _t10C2 = 0.57735026919e0;
  real _t10C3 = 0.57735026919e0;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, dPos0AC1);
  real _t10C6 = prim /0055 (_t10C0, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0AC1, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0AC0, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10B9, _t10C8);
  bool _t10CA = prim >0080 (_t10B5, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.57735026919e0;
  real _t10D0 = 0.57735026919e0;
  real _t10D1 = 0.57735026919e0;
  real _t10D2 = 0.57735026919e0;
  vec3 _t10D3 = [_t10D0, _t10D1, _t10D2];
  real _t10D4 = prim •00CE<$[3]; $[3]; $[]> (_t10D3, refPos0AC0);
  real _t10D5 = prim -0026<$[]> (_t10CF, _t10D4);
  real _t10D6 = 0.57735026919e0;
  real _t10D7 = 0.57735026919e0;
  real _t10D8 = 0.57735026919e0;
  vec3 _t10D9 = [_t10D6, _t10D7, _t10D8];
  real _t10DA = prim •00CE<$[3]; $[3]; $[]> (_t10D9, dPos0AC1);
  real _t10DB = prim /0055 (_t10D5, _t10DA);
  vec3 _t10DC = prim *0038<$[3]> (dPos0AC1, _t10DB);
  vec3 _t10DD = prim +0017<$[3]> (refPos0AC0, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (_t10CE, _t10DD);
  real _t10DF = _t10DE[0];
  real _t10E0 = -0.e0;
  bool _t10E1 = prim >0080 (_t10DF, _t10E0);
  real _t10E2 = 0.1e-7;
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  vec3 _t10E5 = [_t10E2, _t10E3, _t10E4];
  real _t10E6 = 0.57735026919e0;
  real _t10E7 = 0.57735026919e0;
  real _t10E8 = 0.57735026919e0;
  real _t10E9 = 0.57735026919e0;
  vec3 _t10EA = [_t10E7, _t10E8, _t10E9];
  real _t10EB = prim •00CE<$[3]; $[3]; $[]> (_t10EA, refPos0AC0);
  real _t10EC = prim -0026<$[]> (_t10E6, _t10EB);
  real _t10ED = 0.57735026919e0;
  real _t10EE = 0.57735026919e0;
  real _t10EF = 0.57735026919e0;
  vec3 _t10F0 = [_t10ED, _t10EE, _t10EF];
  real _t10F1 = prim •00CE<$[3]; $[3]; $[]> (_t10F0, dPos0AC1);
  real _t10F2 = prim /0055 (_t10EC, _t10F1);
  vec3 _t10F3 = prim *0038<$[3]> (dPos0AC1, _t10F2);
  vec3 _t10F4 = prim +0017<$[3]> (refPos0AC0, _t10F3);
  vec3 _t10F5 = prim +0017<$[3]> (_t10E5, _t10F4);
  real _t10F6 = _t10F5[1];
  real _t10F7 = -0.e0;
  bool _t10F8 = prim >0080 (_t10F6, _t10F7);
  real _t10F9 = 0.1e-7;
  real _t10FA = 0.1e-7;
  real _t10FB = 0.1e-7;
  vec3 _t10FC = [_t10F9, _t10FA, _t10FB];
  real _t10FD = 0.57735026919e0;
  real _t10FE = 0.57735026919e0;
  real _t10FF = 0.57735026919e0;
  real _t1100 = 0.57735026919e0;
  vec3 _t1101 = [_t10FE, _t10FF, _t1100];
  real _t1102 = prim •00CE<$[3]; $[3]; $[]> (_t1101, refPos0AC0);
  real _t1103 = prim -0026<$[]> (_t10FD, _t1102);
  real _t1104 = 0.57735026919e0;
  real _t1105 = 0.57735026919e0;
  real _t1106 = 0.57735026919e0;
  vec3 _t1107 = [_t1104, _t1105, _t1106];
  real _t1108 = prim •00CE<$[3]; $[3]; $[]> (_t1107, dPos0AC1);
  real _t1109 = prim /0055 (_t1103, _t1108);
  vec3 _t110A = prim *0038<$[3]> (dPos0AC1, _t1109);
  vec3 _t110B = prim +0017<$[3]> (refPos0AC0, _t110A);
  vec3 _t110C = prim +0017<$[3]> (_t10FC, _t110B);
  real _t110D = _t110C[2];
  real _t110E = -0.e0;
  bool _t110F = prim >0080 (_t110D, _t110E);
  bool _t1110 = prim $and01C4 (_t10F8, _t110F);
  bool _t1111 = prim $and01C4 (_t10E1, _t1110);
  bool _t1112 = prim $and01C4 (_t10CA, _t1111);
  string _t1113 = " dist: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  real _t1117 = 0.57735026919e0;
  vec3 _t1118 = [_t1115, _t1116, _t1117];
  real _t1119 = prim •00CE<$[3]; $[3]; $[]> (_t1118, refPos0AC0);
  real _t111A = prim -0026<$[]> (_t1114, _t1119);
  real _t111B = prim |()|00B5<$[]> (_t111A);
  string _t111C = "signed dist: ";
  real _t111D = 0.57735026919e0;
  real _t111E = 0.57735026919e0;
  real _t111F = 0.57735026919e0;
  real _t1120 = 0.57735026919e0;
  vec3 _t1121 = [_t111E, _t111F, _t1120];
  real _t1122 = prim •00CE<$[3]; $[3]; $[]> (_t1121, refPos0AC0);
  real _t1123 = prim -0026<$[]> (_t111D, _t1122);
  string _t1124 = " face: ";
  int _t1125 = 0;
  string _t1126 = " place: ";
  real _t1127 = 0.57735026919e0;
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, refPos0AC0);
  real _t112D = prim -0026<$[]> (_t1127, _t112C);
  real _t112E = 0.57735026919e0;
  real _t112F = 0.57735026919e0;
  real _t1130 = 0.57735026919e0;
  vec3 _t1131 = [_t112E, _t112F, _t1130];
  real _t1132 = prim •00CE<$[3]; $[3]; $[]> (_t1131, dPos0AC1);
  real _t1133 = prim /0055 (_t112D, _t1132);
  vec3 _t1134 = prim *0038<$[3]> (dPos0AC1, _t1133);
  vec3 _t1135 = prim +0017<$[3]> (refPos0AC0, _t1134);
  string _t1136 = " error: ";
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  real _t113A = 0.57735026919e0;
  vec3 _t113B = [_t1138, _t1139, _t113A];
  real _t113C = 0.57735026919e0;
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, refPos0AC0);
  real _t1142 = prim -0026<$[]> (_t113C, _t1141);
  real _t1143 = 0.57735026919e0;
  real _t1144 = 0.57735026919e0;
  real _t1145 = 0.57735026919e0;
  vec3 _t1146 = [_t1143, _t1144, _t1145];
  real _t1147 = prim •00CE<$[3]; $[3]; $[]> (_t1146, dPos0AC1);
  real _t1148 = prim /0055 (_t1142, _t1147);
  vec3 _t1149 = prim *0038<$[3]> (dPos0AC1, _t1148);
  vec3 _t114A = prim +0017<$[3]> (refPos0AC0, _t1149);
  real _t114B = prim •00CE<$[3]; $[3]; $[]> (_t113B, _t114A);
  real _t114C = prim -0026<$[]> (_t1137, _t114B);
  real _t114D = prim |()|00B5<$[]> (_t114C);
  string _t114E = " offset :";
  string _t114F = " dp: ";
  string _t1150 = " otherPossibleTime: ";
  string _t1151 = "\n";
  string _t1152 = "\n original face: ";
  string _t1153 = " ";
  print (_t109E, _t10AB, _t10AC, _t10B1, _t10B2, _t1112, _t1113, _t111B, _t111C, _t1123, _t1124, _t1125, _t1126, _t1135, _t1136, _t114D, _t114E, refPos0AC0, _t114F, dPos0AC1, _t1150, faceTime109D, _t1151, _t1152, i109A, _t1153);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  real _t1157 = 0.57735026919e0;
  vec3 _t1158 = [_t1155, _t1156, _t1157];
  real _t1159 = prim •00CE<$[3]; $[3]; $[]> (_t1158, refPos0AC0);
  real _t115A = prim -0026<$[]> (_t1154, _t1159);
  real _t115B = 0.57735026919e0;
  real _t115C = 0.57735026919e0;
  real _t115D = 0.57735026919e0;
  vec3 _t115E = [_t115B, _t115C, _t115D];
  real _t115F = prim •00CE<$[3]; $[3]; $[]> (_t115E, dPos0AC1);
  real _t1160 = prim /0055 (_t115A, _t115F);
  real _t1161 = -0.1e-7;
  bool _t1162 = prim >=007E (_t1160, _t1161);
  real _t1163 = 0.57735026919e0;
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  vec3 _t1167 = [_t1164, _t1165, _t1166];
  real _t1168 = prim •00CE<$[3]; $[3]; $[]> (_t1167, refPos0AC0);
  real _t1169 = prim -0026<$[]> (_t1163, _t1168);
  real _t116A = 0.57735026919e0;
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  vec3 _t116D = [_t116A, _t116B, _t116C];
  real _t116E = prim •00CE<$[3]; $[3]; $[]> (_t116D, dPos0AC1);
  real _t116F = prim /0055 (_t1169, _t116E);
  bool _t1170 = prim >0080 (time109B, _t116F);
  real _t1171 = 0.57735026919e0;
  real _t1172 = 0.57735026919e0;
  real _t1173 = 0.57735026919e0;
  vec3 _t1174 = [_t1171, _t1172, _t1173];
  real _t1175 = prim •00CE<$[3]; $[3]; $[]> (_t1174, dPos0AC1);
  real _t1176 = prim |()|00B5<$[]> (_t1175);
  real _t1177 = 0.1e-7;
  bool _t1178 = prim >=007E (_t1176, _t1177);
  bool _t1179 = prim $and01C4 (_t1170, _t1178);
  bool _t117A = prim $and01C4 (_t1162, _t1179);
  if _t117A {
    int _t117B = 0;
    bool _t117C = prim !=0086 (i109A, _t117B);
    if _t117C {
      string _t117D = "Saving at this face!";
      real _t117E = 0.57735026919e0;
      real _t117F = 0.57735026919e0;
      real _t1180 = 0.57735026919e0;
      real _t1181 = 0.57735026919e0;
      vec3 _t1182 = [_t117F, _t1180, _t1181];
      real _t1183 = prim •00CE<$[3]; $[3]; $[]> (_t1182, refPos0AC0);
      real _t1184 = prim -0026<$[]> (_t117E, _t1183);
      real _t1185 = 0.57735026919e0;
      real _t1186 = 0.57735026919e0;
      real _t1187 = 0.57735026919e0;
      vec3 _t1188 = [_t1185, _t1186, _t1187];
      real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, dPos0AC1);
      real _t118A = prim /0055 (_t1184, _t1189);
      real _t118B = 0.57735026919e0;
      real _t118C = 0.57735026919e0;
      real _t118D = 0.57735026919e0;
      real _t118E = 0.57735026919e0;
      vec3 _t118F = [_t118C, _t118D, _t118E];
      real _t1190 = prim •00CE<$[3]; $[3]; $[]> (_t118F, refPos0AC0);
      real _t1191 = prim -0026<$[]> (_t118B, _t1190);
      real _t1192 = 0.57735026919e0;
      real _t1193 = 0.57735026919e0;
      real _t1194 = 0.57735026919e0;
      vec3 _t1195 = [_t1192, _t1193, _t1194];
      real _t1196 = prim •00CE<$[3]; $[3]; $[]> (_t1195, dPos0AC1);
      real _t1197 = prim /0055 (_t1191, _t1196);
      bool _t1198 = prim >0080 (time109B, _t1197);
      string _t1199 = "\n";
      print (_t117D, _t118A, _t1198, _t1199);
      real _t119A = 0.57735026919e0;
      real _t119B = 0.57735026919e0;
      real _t119C = 0.57735026919e0;
      real _t119D = 0.57735026919e0;
      vec3 _t119E = [_t119B, _t119C, _t119D];
      real _t119F = prim •00CE<$[3]; $[3]; $[]> (_t119E, refPos0AC0);
      real _t11A0 = prim -0026<$[]> (_t119A, _t119F);
      real _t11A1 = 0.57735026919e0;
      real _t11A2 = 0.57735026919e0;
      real _t11A3 = 0.57735026919e0;
      vec3 _t11A4 = [_t11A1, _t11A2, _t11A3];
      real _t11A5 = prim •00CE<$[3]; $[3]; $[]> (_t11A4, dPos0AC1);
      time109B = prim /0055 (_t11A0, _t11A5);
      face109C = 0;
    } else {
      real _t11A6 = 0.57735026919e0;
      real _t11A7 = 0.57735026919e0;
      real _t11A8 = 0.57735026919e0;
      real _t11A9 = 0.57735026919e0;
      vec3 _t11AA = [_t11A7, _t11A8, _t11A9];
      real _t11AB = prim •00CE<$[3]; $[3]; $[]> (_t11AA, refPos0AC0);
      real _t11AC = prim -0026<$[]> (_t11A6, _t11AB);
      real _t11AD = 0.57735026919e0;
      real _t11AE = 0.57735026919e0;
      real _t11AF = 0.57735026919e0;
      vec3 _t11B0 = [_t11AD, _t11AE, _t11AF];
      real _t11B1 = prim •00CE<$[3]; $[3]; $[]> (_t11B0, dPos0AC1);
      faceTime109D = prim /0055 (_t11AC, _t11B1);
      string _t11B2 = "Saving backup time: ";
      string _t11B3 = "\n";
      print (_t11B2, faceTime109D, _t11B3);
    }
  }
  string _t11B4 = "\ntest :";
  real _t11B5 = 0.e0;
  real _t11B6 = -0.1e1;
  real _t11B7 = 0.e0;
  real _t11B8 = 0.e0;
  vec3 _t11B9 = [_t11B6, _t11B7, _t11B8];
  real _t11BA = prim •00CE<$[3]; $[3]; $[]> (_t11B9, refPos0AC0);
  real _t11BB = prim -0026<$[]> (_t11B5, _t11BA);
  real _t11BC = -0.1e1;
  real _t11BD = 0.e0;
  real _t11BE = 0.e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, dPos0AC1);
  real _t11C1 = prim /0055 (_t11BB, _t11C0);
  string _t11C2 = " test2: ";
  real _t11C3 = -0.1e1;
  real _t11C4 = 0.e0;
  real _t11C5 = 0.e0;
  vec3 _t11C6 = [_t11C3, _t11C4, _t11C5];
  real _t11C7 = prim •00CE<$[3]; $[3]; $[]> (_t11C6, dPos0AC1);
  string _t11C8 = " insideTest: ";
  real _t11C9 = 0.1e1;
  real _t11CA = 0.1e-7;
  real _t11CB = prim +0017<$[]> (_t11C9, _t11CA);
  real _t11CC = 0.1e1;
  real _t11CD = 0.1e1;
  real _t11CE = 0.1e1;
  vec3 _t11CF = [_t11CC, _t11CD, _t11CE];
  real _t11D0 = 0.e0;
  real _t11D1 = -0.1e1;
  real _t11D2 = 0.e0;
  real _t11D3 = 0.e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, refPos0AC0);
  real _t11D6 = prim -0026<$[]> (_t11D0, _t11D5);
  real _t11D7 = -0.1e1;
  real _t11D8 = 0.e0;
  real _t11D9 = 0.e0;
  vec3 _t11DA = [_t11D7, _t11D8, _t11D9];
  real _t11DB = prim •00CE<$[3]; $[3]; $[]> (_t11DA, dPos0AC1);
  real _t11DC = prim /0055 (_t11D6, _t11DB);
  vec3 _t11DD = prim *0038<$[3]> (dPos0AC1, _t11DC);
  vec3 _t11DE = prim +0017<$[3]> (refPos0AC0, _t11DD);
  real _t11DF = prim •00CE<$[3]; $[3]; $[]> (_t11CF, _t11DE);
  bool _t11E0 = prim >0080 (_t11CB, _t11DF);
  real _t11E1 = 0.1e-7;
  real _t11E2 = 0.1e-7;
  real _t11E3 = 0.1e-7;
  vec3 _t11E4 = [_t11E1, _t11E2, _t11E3];
  real _t11E5 = 0.e0;
  real _t11E6 = -0.1e1;
  real _t11E7 = 0.e0;
  real _t11E8 = 0.e0;
  vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
  real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0AC0);
  real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
  real _t11EC = -0.1e1;
  real _t11ED = 0.e0;
  real _t11EE = 0.e0;
  vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
  real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0AC1);
  real _t11F1 = prim /0055 (_t11EB, _t11F0);
  vec3 _t11F2 = prim *0038<$[3]> (dPos0AC1, _t11F1);
  vec3 _t11F3 = prim +0017<$[3]> (refPos0AC0, _t11F2);
  vec3 _t11F4 = prim +0017<$[3]> (_t11E4, _t11F3);
  real _t11F5 = _t11F4[0];
  real _t11F6 = -0.e0;
  bool _t11F7 = prim >0080 (_t11F5, _t11F6);
  real _t11F8 = 0.1e-7;
  real _t11F9 = 0.1e-7;
  real _t11FA = 0.1e-7;
  vec3 _t11FB = [_t11F8, _t11F9, _t11FA];
  real _t11FC = 0.e0;
  real _t11FD = -0.1e1;
  real _t11FE = 0.e0;
  real _t11FF = 0.e0;
  vec3 _t1200 = [_t11FD, _t11FE, _t11FF];
  real _t1201 = prim •00CE<$[3]; $[3]; $[]> (_t1200, refPos0AC0);
  real _t1202 = prim -0026<$[]> (_t11FC, _t1201);
  real _t1203 = -0.1e1;
  real _t1204 = 0.e0;
  real _t1205 = 0.e0;
  vec3 _t1206 = [_t1203, _t1204, _t1205];
  real _t1207 = prim •00CE<$[3]; $[3]; $[]> (_t1206, dPos0AC1);
  real _t1208 = prim /0055 (_t1202, _t1207);
  vec3 _t1209 = prim *0038<$[3]> (dPos0AC1, _t1208);
  vec3 _t120A = prim +0017<$[3]> (refPos0AC0, _t1209);
  vec3 _t120B = prim +0017<$[3]> (_t11FB, _t120A);
  real _t120C = _t120B[1];
  real _t120D = -0.e0;
  bool _t120E = prim >0080 (_t120C, _t120D);
  real _t120F = 0.1e-7;
  real _t1210 = 0.1e-7;
  real _t1211 = 0.1e-7;
  vec3 _t1212 = [_t120F, _t1210, _t1211];
  real _t1213 = 0.e0;
  real _t1214 = -0.1e1;
  real _t1215 = 0.e0;
  real _t1216 = 0.e0;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos0AC0);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = -0.1e1;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos0AC1);
  real _t121F = prim /0055 (_t1219, _t121E);
  vec3 _t1220 = prim *0038<$[3]> (dPos0AC1, _t121F);
  vec3 _t1221 = prim +0017<$[3]> (refPos0AC0, _t1220);
  vec3 _t1222 = prim +0017<$[3]> (_t1212, _t1221);
  real _t1223 = _t1222[2];
  real _t1224 = -0.e0;
  bool _t1225 = prim >0080 (_t1223, _t1224);
  bool _t1226 = prim $and01C4 (_t120E, _t1225);
  bool _t1227 = prim $and01C4 (_t11F7, _t1226);
  bool _t1228 = prim $and01C4 (_t11E0, _t1227);
  string _t1229 = " dist: ";
  real _t122A = 0.e0;
  real _t122B = -0.1e1;
  real _t122C = 0.e0;
  real _t122D = 0.e0;
  vec3 _t122E = [_t122B, _t122C, _t122D];
  real _t122F = prim •00CE<$[3]; $[3]; $[]> (_t122E, refPos0AC0);
  real _t1230 = prim -0026<$[]> (_t122A, _t122F);
  real _t1231 = prim |()|00B5<$[]> (_t1230);
  string _t1232 = "signed dist: ";
  real _t1233 = 0.e0;
  real _t1234 = -0.1e1;
  real _t1235 = 0.e0;
  real _t1236 = 0.e0;
  vec3 _t1237 = [_t1234, _t1235, _t1236];
  real _t1238 = prim •00CE<$[3]; $[3]; $[]> (_t1237, refPos0AC0);
  real _t1239 = prim -0026<$[]> (_t1233, _t1238);
  string _t123A = " face: ";
  int _t123B = 1;
  string _t123C = " place: ";
  real _t123D = 0.e0;
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, refPos0AC0);
  real _t1243 = prim -0026<$[]> (_t123D, _t1242);
  real _t1244 = -0.1e1;
  real _t1245 = 0.e0;
  real _t1246 = 0.e0;
  vec3 _t1247 = [_t1244, _t1245, _t1246];
  real _t1248 = prim •00CE<$[3]; $[3]; $[]> (_t1247, dPos0AC1);
  real _t1249 = prim /0055 (_t1243, _t1248);
  vec3 _t124A = prim *0038<$[3]> (dPos0AC1, _t1249);
  vec3 _t124B = prim +0017<$[3]> (refPos0AC0, _t124A);
  string _t124C = " error: ";
  real _t124D = 0.e0;
  real _t124E = -0.1e1;
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  vec3 _t1251 = [_t124E, _t124F, _t1250];
  real _t1252 = 0.e0;
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos0AC0);
  real _t1258 = prim -0026<$[]> (_t1252, _t1257);
  real _t1259 = -0.1e1;
  real _t125A = 0.e0;
  real _t125B = 0.e0;
  vec3 _t125C = [_t1259, _t125A, _t125B];
  real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos0AC1);
  real _t125E = prim /0055 (_t1258, _t125D);
  vec3 _t125F = prim *0038<$[3]> (dPos0AC1, _t125E);
  vec3 _t1260 = prim +0017<$[3]> (refPos0AC0, _t125F);
  real _t1261 = prim •00CE<$[3]; $[3]; $[]> (_t1251, _t1260);
  real _t1262 = prim -0026<$[]> (_t124D, _t1261);
  real _t1263 = prim |()|00B5<$[]> (_t1262);
  string _t1264 = " offset :";
  string _t1265 = " dp: ";
  string _t1266 = " otherPossibleTime: ";
  string _t1267 = "\n";
  string _t1268 = "\n original face: ";
  string _t1269 = " ";
  print (_t11B4, _t11C1, _t11C2, _t11C7, _t11C8, _t1228, _t1229, _t1231, _t1232, _t1239, _t123A, _t123B, _t123C, _t124B, _t124C, _t1263, _t1264, refPos0AC0, _t1265, dPos0AC1, _t1266, faceTime109D, _t1267, _t1268, i109A, _t1269);
  real _t126A = 0.e0;
  real _t126B = -0.1e1;
  real _t126C = 0.e0;
  real _t126D = 0.e0;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, refPos0AC0);
  real _t1270 = prim -0026<$[]> (_t126A, _t126F);
  real _t1271 = -0.1e1;
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  vec3 _t1274 = [_t1271, _t1272, _t1273];
  real _t1275 = prim •00CE<$[3]; $[3]; $[]> (_t1274, dPos0AC1);
  real _t1276 = prim /0055 (_t1270, _t1275);
  real _t1277 = -0.1e-7;
  bool _t1278 = prim >=007E (_t1276, _t1277);
  real _t1279 = 0.e0;
  real _t127A = -0.1e1;
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  vec3 _t127D = [_t127A, _t127B, _t127C];
  real _t127E = prim •00CE<$[3]; $[3]; $[]> (_t127D, refPos0AC0);
  real _t127F = prim -0026<$[]> (_t1279, _t127E);
  real _t1280 = -0.1e1;
  real _t1281 = 0.e0;
  real _t1282 = 0.e0;
  vec3 _t1283 = [_t1280, _t1281, _t1282];
  real _t1284 = prim •00CE<$[3]; $[3]; $[]> (_t1283, dPos0AC1);
  real _t1285 = prim /0055 (_t127F, _t1284);
  bool _t1286 = prim >0080 (time109B, _t1285);
  real _t1287 = -0.1e1;
  real _t1288 = 0.e0;
  real _t1289 = 0.e0;
  vec3 _t128A = [_t1287, _t1288, _t1289];
  real _t128B = prim •00CE<$[3]; $[3]; $[]> (_t128A, dPos0AC1);
  real _t128C = prim |()|00B5<$[]> (_t128B);
  real _t128D = 0.1e-7;
  bool _t128E = prim >=007E (_t128C, _t128D);
  bool _t128F = prim $and01C4 (_t1286, _t128E);
  bool _t1290 = prim $and01C4 (_t1278, _t128F);
  if _t1290 {
    int _t1291 = 1;
    bool _t1292 = prim !=0086 (i109A, _t1291);
    if _t1292 {
      string _t1293 = "Saving at this face!";
      real _t1294 = 0.e0;
      real _t1295 = -0.1e1;
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      vec3 _t1298 = [_t1295, _t1296, _t1297];
      real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos0AC0);
      real _t129A = prim -0026<$[]> (_t1294, _t1299);
      real _t129B = -0.1e1;
      real _t129C = 0.e0;
      real _t129D = 0.e0;
      vec3 _t129E = [_t129B, _t129C, _t129D];
      real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos0AC1);
      real _t12A0 = prim /0055 (_t129A, _t129F);
      real _t12A1 = 0.e0;
      real _t12A2 = -0.1e1;
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
      real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, refPos0AC0);
      real _t12A7 = prim -0026<$[]> (_t12A1, _t12A6);
      real _t12A8 = -0.1e1;
      real _t12A9 = 0.e0;
      real _t12AA = 0.e0;
      vec3 _t12AB = [_t12A8, _t12A9, _t12AA];
      real _t12AC = prim •00CE<$[3]; $[3]; $[]> (_t12AB, dPos0AC1);
      real _t12AD = prim /0055 (_t12A7, _t12AC);
      bool _t12AE = prim >0080 (time109B, _t12AD);
      string _t12AF = "\n";
      print (_t1293, _t12A0, _t12AE, _t12AF);
      real _t12B0 = 0.e0;
      real _t12B1 = -0.1e1;
      real _t12B2 = 0.e0;
      real _t12B3 = 0.e0;
      vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
      real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, refPos0AC0);
      real _t12B6 = prim -0026<$[]> (_t12B0, _t12B5);
      real _t12B7 = -0.1e1;
      real _t12B8 = 0.e0;
      real _t12B9 = 0.e0;
      vec3 _t12BA = [_t12B7, _t12B8, _t12B9];
      real _t12BB = prim •00CE<$[3]; $[3]; $[]> (_t12BA, dPos0AC1);
      time109B = prim /0055 (_t12B6, _t12BB);
      face109C = 1;
    } else {
      real _t12BC = 0.e0;
      real _t12BD = -0.1e1;
      real _t12BE = 0.e0;
      real _t12BF = 0.e0;
      vec3 _t12C0 = [_t12BD, _t12BE, _t12BF];
      real _t12C1 = prim •00CE<$[3]; $[3]; $[]> (_t12C0, refPos0AC0);
      real _t12C2 = prim -0026<$[]> (_t12BC, _t12C1);
      real _t12C3 = -0.1e1;
      real _t12C4 = 0.e0;
      real _t12C5 = 0.e0;
      vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
      real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, dPos0AC1);
      faceTime109D = prim /0055 (_t12C2, _t12C7);
      string _t12C8 = "Saving backup time: ";
      string _t12C9 = "\n";
      print (_t12C8, faceTime109D, _t12C9);
    }
  }
  string _t12CA = "\ntest :";
  real _t12CB = 0.e0;
  real _t12CC = 0.e0;
  real _t12CD = -0.1e1;
  real _t12CE = 0.e0;
  vec3 _t12CF = [_t12CC, _t12CD, _t12CE];
  real _t12D0 = prim •00CE<$[3]; $[3]; $[]> (_t12CF, refPos0AC0);
  real _t12D1 = prim -0026<$[]> (_t12CB, _t12D0);
  real _t12D2 = 0.e0;
  real _t12D3 = -0.1e1;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, dPos0AC1);
  real _t12D7 = prim /0055 (_t12D1, _t12D6);
  string _t12D8 = " test2: ";
  real _t12D9 = 0.e0;
  real _t12DA = -0.1e1;
  real _t12DB = 0.e0;
  vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
  real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, dPos0AC1);
  string _t12DE = " insideTest: ";
  real _t12DF = 0.1e1;
  real _t12E0 = 0.1e-7;
  real _t12E1 = prim +0017<$[]> (_t12DF, _t12E0);
  real _t12E2 = 0.1e1;
  real _t12E3 = 0.1e1;
  real _t12E4 = 0.1e1;
  vec3 _t12E5 = [_t12E2, _t12E3, _t12E4];
  real _t12E6 = 0.e0;
  real _t12E7 = 0.e0;
  real _t12E8 = -0.1e1;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, refPos0AC0);
  real _t12EC = prim -0026<$[]> (_t12E6, _t12EB);
  real _t12ED = 0.e0;
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  vec3 _t12F0 = [_t12ED, _t12EE, _t12EF];
  real _t12F1 = prim •00CE<$[3]; $[3]; $[]> (_t12F0, dPos0AC1);
  real _t12F2 = prim /0055 (_t12EC, _t12F1);
  vec3 _t12F3 = prim *0038<$[3]> (dPos0AC1, _t12F2);
  vec3 _t12F4 = prim +0017<$[3]> (refPos0AC0, _t12F3);
  real _t12F5 = prim •00CE<$[3]; $[3]; $[]> (_t12E5, _t12F4);
  bool _t12F6 = prim >0080 (_t12E1, _t12F5);
  real _t12F7 = 0.1e-7;
  real _t12F8 = 0.1e-7;
  real _t12F9 = 0.1e-7;
  vec3 _t12FA = [_t12F7, _t12F8, _t12F9];
  real _t12FB = 0.e0;
  real _t12FC = 0.e0;
  real _t12FD = -0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0AC0);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = -0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0AC1);
  real _t1307 = prim /0055 (_t1301, _t1306);
  vec3 _t1308 = prim *0038<$[3]> (dPos0AC1, _t1307);
  vec3 _t1309 = prim +0017<$[3]> (refPos0AC0, _t1308);
  vec3 _t130A = prim +0017<$[3]> (_t12FA, _t1309);
  real _t130B = _t130A[0];
  real _t130C = -0.e0;
  bool _t130D = prim >0080 (_t130B, _t130C);
  real _t130E = 0.1e-7;
  real _t130F = 0.1e-7;
  real _t1310 = 0.1e-7;
  vec3 _t1311 = [_t130E, _t130F, _t1310];
  real _t1312 = 0.e0;
  real _t1313 = 0.e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, refPos0AC0);
  real _t1318 = prim -0026<$[]> (_t1312, _t1317);
  real _t1319 = 0.e0;
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  vec3 _t131C = [_t1319, _t131A, _t131B];
  real _t131D = prim •00CE<$[3]; $[3]; $[]> (_t131C, dPos0AC1);
  real _t131E = prim /0055 (_t1318, _t131D);
  vec3 _t131F = prim *0038<$[3]> (dPos0AC1, _t131E);
  vec3 _t1320 = prim +0017<$[3]> (refPos0AC0, _t131F);
  vec3 _t1321 = prim +0017<$[3]> (_t1311, _t1320);
  real _t1322 = _t1321[1];
  real _t1323 = -0.e0;
  bool _t1324 = prim >0080 (_t1322, _t1323);
  real _t1325 = 0.1e-7;
  real _t1326 = 0.1e-7;
  real _t1327 = 0.1e-7;
  vec3 _t1328 = [_t1325, _t1326, _t1327];
  real _t1329 = 0.e0;
  real _t132A = 0.e0;
  real _t132B = -0.1e1;
  real _t132C = 0.e0;
  vec3 _t132D = [_t132A, _t132B, _t132C];
  real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, refPos0AC0);
  real _t132F = prim -0026<$[]> (_t1329, _t132E);
  real _t1330 = 0.e0;
  real _t1331 = -0.1e1;
  real _t1332 = 0.e0;
  vec3 _t1333 = [_t1330, _t1331, _t1332];
  real _t1334 = prim •00CE<$[3]; $[3]; $[]> (_t1333, dPos0AC1);
  real _t1335 = prim /0055 (_t132F, _t1334);
  vec3 _t1336 = prim *0038<$[3]> (dPos0AC1, _t1335);
  vec3 _t1337 = prim +0017<$[3]> (refPos0AC0, _t1336);
  vec3 _t1338 = prim +0017<$[3]> (_t1328, _t1337);
  real _t1339 = _t1338[2];
  real _t133A = -0.e0;
  bool _t133B = prim >0080 (_t1339, _t133A);
  bool _t133C = prim $and01C4 (_t1324, _t133B);
  bool _t133D = prim $and01C4 (_t130D, _t133C);
  bool _t133E = prim $and01C4 (_t12F6, _t133D);
  string _t133F = " dist: ";
  real _t1340 = 0.e0;
  real _t1341 = 0.e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  vec3 _t1344 = [_t1341, _t1342, _t1343];
  real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, refPos0AC0);
  real _t1346 = prim -0026<$[]> (_t1340, _t1345);
  real _t1347 = prim |()|00B5<$[]> (_t1346);
  string _t1348 = "signed dist: ";
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  real _t134B = -0.1e1;
  real _t134C = 0.e0;
  vec3 _t134D = [_t134A, _t134B, _t134C];
  real _t134E = prim •00CE<$[3]; $[3]; $[]> (_t134D, refPos0AC0);
  real _t134F = prim -0026<$[]> (_t1349, _t134E);
  string _t1350 = " face: ";
  int _t1351 = 2;
  string _t1352 = " place: ";
  real _t1353 = 0.e0;
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos0AC0);
  real _t1359 = prim -0026<$[]> (_t1353, _t1358);
  real _t135A = 0.e0;
  real _t135B = -0.1e1;
  real _t135C = 0.e0;
  vec3 _t135D = [_t135A, _t135B, _t135C];
  real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos0AC1);
  real _t135F = prim /0055 (_t1359, _t135E);
  vec3 _t1360 = prim *0038<$[3]> (dPos0AC1, _t135F);
  vec3 _t1361 = prim +0017<$[3]> (refPos0AC0, _t1360);
  string _t1362 = " error: ";
  real _t1363 = 0.e0;
  real _t1364 = 0.e0;
  real _t1365 = -0.1e1;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = 0.e0;
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos0AC0);
  real _t136E = prim -0026<$[]> (_t1368, _t136D);
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos0AC1);
  real _t1374 = prim /0055 (_t136E, _t1373);
  vec3 _t1375 = prim *0038<$[3]> (dPos0AC1, _t1374);
  vec3 _t1376 = prim +0017<$[3]> (refPos0AC0, _t1375);
  real _t1377 = prim •00CE<$[3]; $[3]; $[]> (_t1367, _t1376);
  real _t1378 = prim -0026<$[]> (_t1363, _t1377);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  string _t137A = " offset :";
  string _t137B = " dp: ";
  string _t137C = " otherPossibleTime: ";
  string _t137D = "\n";
  string _t137E = "\n original face: ";
  string _t137F = " ";
  print (_t12CA, _t12D7, _t12D8, _t12DD, _t12DE, _t133E, _t133F, _t1347, _t1348, _t134F, _t1350, _t1351, _t1352, _t1361, _t1362, _t1379, _t137A, refPos0AC0, _t137B, dPos0AC1, _t137C, faceTime109D, _t137D, _t137E, i109A, _t137F);
  real _t1380 = 0.e0;
  real _t1381 = 0.e0;
  real _t1382 = -0.1e1;
  real _t1383 = 0.e0;
  vec3 _t1384 = [_t1381, _t1382, _t1383];
  real _t1385 = prim •00CE<$[3]; $[3]; $[]> (_t1384, refPos0AC0);
  real _t1386 = prim -0026<$[]> (_t1380, _t1385);
  real _t1387 = 0.e0;
  real _t1388 = -0.1e1;
  real _t1389 = 0.e0;
  vec3 _t138A = [_t1387, _t1388, _t1389];
  real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, dPos0AC1);
  real _t138C = prim /0055 (_t1386, _t138B);
  real _t138D = -0.1e-7;
  bool _t138E = prim >=007E (_t138C, _t138D);
  real _t138F = 0.e0;
  real _t1390 = 0.e0;
  real _t1391 = -0.1e1;
  real _t1392 = 0.e0;
  vec3 _t1393 = [_t1390, _t1391, _t1392];
  real _t1394 = prim •00CE<$[3]; $[3]; $[]> (_t1393, refPos0AC0);
  real _t1395 = prim -0026<$[]> (_t138F, _t1394);
  real _t1396 = 0.e0;
  real _t1397 = -0.1e1;
  real _t1398 = 0.e0;
  vec3 _t1399 = [_t1396, _t1397, _t1398];
  real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, dPos0AC1);
  real _t139B = prim /0055 (_t1395, _t139A);
  bool _t139C = prim >0080 (time109B, _t139B);
  real _t139D = 0.e0;
  real _t139E = -0.1e1;
  real _t139F = 0.e0;
  vec3 _t13A0 = [_t139D, _t139E, _t139F];
  real _t13A1 = prim •00CE<$[3]; $[3]; $[]> (_t13A0, dPos0AC1);
  real _t13A2 = prim |()|00B5<$[]> (_t13A1);
  real _t13A3 = 0.1e-7;
  bool _t13A4 = prim >=007E (_t13A2, _t13A3);
  bool _t13A5 = prim $and01C4 (_t139C, _t13A4);
  bool _t13A6 = prim $and01C4 (_t138E, _t13A5);
  if _t13A6 {
    int _t13A7 = 2;
    bool _t13A8 = prim !=0086 (i109A, _t13A7);
    if _t13A8 {
      string _t13A9 = "Saving at this face!";
      real _t13AA = 0.e0;
      real _t13AB = 0.e0;
      real _t13AC = -0.1e1;
      real _t13AD = 0.e0;
      vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
      real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos0AC0);
      real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
      real _t13B1 = 0.e0;
      real _t13B2 = -0.1e1;
      real _t13B3 = 0.e0;
      vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
      real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos0AC1);
      real _t13B6 = prim /0055 (_t13B0, _t13B5);
      real _t13B7 = 0.e0;
      real _t13B8 = 0.e0;
      real _t13B9 = -0.1e1;
      real _t13BA = 0.e0;
      vec3 _t13BB = [_t13B8, _t13B9, _t13BA];
      real _t13BC = prim •00CE<$[3]; $[3]; $[]> (_t13BB, refPos0AC0);
      real _t13BD = prim -0026<$[]> (_t13B7, _t13BC);
      real _t13BE = 0.e0;
      real _t13BF = -0.1e1;
      real _t13C0 = 0.e0;
      vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
      real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos0AC1);
      real _t13C3 = prim /0055 (_t13BD, _t13C2);
      bool _t13C4 = prim >0080 (time109B, _t13C3);
      string _t13C5 = "\n";
      print (_t13A9, _t13B6, _t13C4, _t13C5);
      real _t13C6 = 0.e0;
      real _t13C7 = 0.e0;
      real _t13C8 = -0.1e1;
      real _t13C9 = 0.e0;
      vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
      real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, refPos0AC0);
      real _t13CC = prim -0026<$[]> (_t13C6, _t13CB);
      real _t13CD = 0.e0;
      real _t13CE = -0.1e1;
      real _t13CF = 0.e0;
      vec3 _t13D0 = [_t13CD, _t13CE, _t13CF];
      real _t13D1 = prim •00CE<$[3]; $[3]; $[]> (_t13D0, dPos0AC1);
      time109B = prim /0055 (_t13CC, _t13D1);
      face109C = 2;
    } else {
      real _t13D2 = 0.e0;
      real _t13D3 = 0.e0;
      real _t13D4 = -0.1e1;
      real _t13D5 = 0.e0;
      vec3 _t13D6 = [_t13D3, _t13D4, _t13D5];
      real _t13D7 = prim •00CE<$[3]; $[3]; $[]> (_t13D6, refPos0AC0);
      real _t13D8 = prim -0026<$[]> (_t13D2, _t13D7);
      real _t13D9 = 0.e0;
      real _t13DA = -0.1e1;
      real _t13DB = 0.e0;
      vec3 _t13DC = [_t13D9, _t13DA, _t13DB];
      real _t13DD = prim •00CE<$[3]; $[3]; $[]> (_t13DC, dPos0AC1);
      faceTime109D = prim /0055 (_t13D8, _t13DD);
      string _t13DE = "Saving backup time: ";
      string _t13DF = "\n";
      print (_t13DE, faceTime109D, _t13DF);
    }
  }
  string _t13E0 = "\ntest :";
  real _t13E1 = 0.e0;
  real _t13E2 = 0.e0;
  real _t13E3 = 0.e0;
  real _t13E4 = -0.1e1;
  vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
  real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, refPos0AC0);
  real _t13E7 = prim -0026<$[]> (_t13E1, _t13E6);
  real _t13E8 = 0.e0;
  real _t13E9 = 0.e0;
  real _t13EA = -0.1e1;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, dPos0AC1);
  real _t13ED = prim /0055 (_t13E7, _t13EC);
  string _t13EE = " test2: ";
  real _t13EF = 0.e0;
  real _t13F0 = 0.e0;
  real _t13F1 = -0.1e1;
  vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
  real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos0AC1);
  string _t13F4 = " insideTest: ";
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.1e-7;
  real _t13F7 = prim +0017<$[]> (_t13F5, _t13F6);
  real _t13F8 = 0.1e1;
  real _t13F9 = 0.1e1;
  real _t13FA = 0.1e1;
  vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
  real _t13FC = 0.e0;
  real _t13FD = 0.e0;
  real _t13FE = 0.e0;
  real _t13FF = -0.1e1;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, refPos0AC0);
  real _t1402 = prim -0026<$[]> (_t13FC, _t1401);
  real _t1403 = 0.e0;
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  vec3 _t1406 = [_t1403, _t1404, _t1405];
  real _t1407 = prim •00CE<$[3]; $[3]; $[]> (_t1406, dPos0AC1);
  real _t1408 = prim /0055 (_t1402, _t1407);
  vec3 _t1409 = prim *0038<$[3]> (dPos0AC1, _t1408);
  vec3 _t140A = prim +0017<$[3]> (refPos0AC0, _t1409);
  real _t140B = prim •00CE<$[3]; $[3]; $[]> (_t13FB, _t140A);
  bool _t140C = prim >0080 (_t13F7, _t140B);
  real _t140D = 0.1e-7;
  real _t140E = 0.1e-7;
  real _t140F = 0.1e-7;
  vec3 _t1410 = [_t140D, _t140E, _t140F];
  real _t1411 = 0.e0;
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = -0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0AC0);
  real _t1417 = prim -0026<$[]> (_t1411, _t1416);
  real _t1418 = 0.e0;
  real _t1419 = 0.e0;
  real _t141A = -0.1e1;
  vec3 _t141B = [_t1418, _t1419, _t141A];
  real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0AC1);
  real _t141D = prim /0055 (_t1417, _t141C);
  vec3 _t141E = prim *0038<$[3]> (dPos0AC1, _t141D);
  vec3 _t141F = prim +0017<$[3]> (refPos0AC0, _t141E);
  vec3 _t1420 = prim +0017<$[3]> (_t1410, _t141F);
  real _t1421 = _t1420[0];
  real _t1422 = -0.e0;
  bool _t1423 = prim >0080 (_t1421, _t1422);
  real _t1424 = 0.1e-7;
  real _t1425 = 0.1e-7;
  real _t1426 = 0.1e-7;
  vec3 _t1427 = [_t1424, _t1425, _t1426];
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = -0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, refPos0AC0);
  real _t142E = prim -0026<$[]> (_t1428, _t142D);
  real _t142F = 0.e0;
  real _t1430 = 0.e0;
  real _t1431 = -0.1e1;
  vec3 _t1432 = [_t142F, _t1430, _t1431];
  real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, dPos0AC1);
  real _t1434 = prim /0055 (_t142E, _t1433);
  vec3 _t1435 = prim *0038<$[3]> (dPos0AC1, _t1434);
  vec3 _t1436 = prim +0017<$[3]> (refPos0AC0, _t1435);
  vec3 _t1437 = prim +0017<$[3]> (_t1427, _t1436);
  real _t1438 = _t1437[1];
  real _t1439 = -0.e0;
  bool _t143A = prim >0080 (_t1438, _t1439);
  real _t143B = 0.1e-7;
  real _t143C = 0.1e-7;
  real _t143D = 0.1e-7;
  vec3 _t143E = [_t143B, _t143C, _t143D];
  real _t143F = 0.e0;
  real _t1440 = 0.e0;
  real _t1441 = 0.e0;
  real _t1442 = -0.1e1;
  vec3 _t1443 = [_t1440, _t1441, _t1442];
  real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, refPos0AC0);
  real _t1445 = prim -0026<$[]> (_t143F, _t1444);
  real _t1446 = 0.e0;
  real _t1447 = 0.e0;
  real _t1448 = -0.1e1;
  vec3 _t1449 = [_t1446, _t1447, _t1448];
  real _t144A = prim •00CE<$[3]; $[3]; $[]> (_t1449, dPos0AC1);
  real _t144B = prim /0055 (_t1445, _t144A);
  vec3 _t144C = prim *0038<$[3]> (dPos0AC1, _t144B);
  vec3 _t144D = prim +0017<$[3]> (refPos0AC0, _t144C);
  vec3 _t144E = prim +0017<$[3]> (_t143E, _t144D);
  real _t144F = _t144E[2];
  real _t1450 = -0.e0;
  bool _t1451 = prim >0080 (_t144F, _t1450);
  bool _t1452 = prim $and01C4 (_t143A, _t1451);
  bool _t1453 = prim $and01C4 (_t1423, _t1452);
  bool _t1454 = prim $and01C4 (_t140C, _t1453);
  string _t1455 = " dist: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.e0;
  real _t1459 = -0.1e1;
  vec3 _t145A = [_t1457, _t1458, _t1459];
  real _t145B = prim •00CE<$[3]; $[3]; $[]> (_t145A, refPos0AC0);
  real _t145C = prim -0026<$[]> (_t1456, _t145B);
  real _t145D = prim |()|00B5<$[]> (_t145C);
  string _t145E = "signed dist: ";
  real _t145F = 0.e0;
  real _t1460 = 0.e0;
  real _t1461 = 0.e0;
  real _t1462 = -0.1e1;
  vec3 _t1463 = [_t1460, _t1461, _t1462];
  real _t1464 = prim •00CE<$[3]; $[3]; $[]> (_t1463, refPos0AC0);
  real _t1465 = prim -0026<$[]> (_t145F, _t1464);
  string _t1466 = " face: ";
  int _t1467 = 3;
  string _t1468 = " place: ";
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, refPos0AC0);
  real _t146F = prim -0026<$[]> (_t1469, _t146E);
  real _t1470 = 0.e0;
  real _t1471 = 0.e0;
  real _t1472 = -0.1e1;
  vec3 _t1473 = [_t1470, _t1471, _t1472];
  real _t1474 = prim •00CE<$[3]; $[3]; $[]> (_t1473, dPos0AC1);
  real _t1475 = prim /0055 (_t146F, _t1474);
  vec3 _t1476 = prim *0038<$[3]> (dPos0AC1, _t1475);
  vec3 _t1477 = prim +0017<$[3]> (refPos0AC0, _t1476);
  string _t1478 = " error: ";
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = 0.e0;
  real _t147C = -0.1e1;
  vec3 _t147D = [_t147A, _t147B, _t147C];
  real _t147E = 0.e0;
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos0AC0);
  real _t1484 = prim -0026<$[]> (_t147E, _t1483);
  real _t1485 = 0.e0;
  real _t1486 = 0.e0;
  real _t1487 = -0.1e1;
  vec3 _t1488 = [_t1485, _t1486, _t1487];
  real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos0AC1);
  real _t148A = prim /0055 (_t1484, _t1489);
  vec3 _t148B = prim *0038<$[3]> (dPos0AC1, _t148A);
  vec3 _t148C = prim +0017<$[3]> (refPos0AC0, _t148B);
  real _t148D = prim •00CE<$[3]; $[3]; $[]> (_t147D, _t148C);
  real _t148E = prim -0026<$[]> (_t1479, _t148D);
  real _t148F = prim |()|00B5<$[]> (_t148E);
  string _t1490 = " offset :";
  string _t1491 = " dp: ";
  string _t1492 = " otherPossibleTime: ";
  string _t1493 = "\n";
  string _t1494 = "\n original face: ";
  string _t1495 = " ";
  print (_t13E0, _t13ED, _t13EE, _t13F3, _t13F4, _t1454, _t1455, _t145D, _t145E, _t1465, _t1466, _t1467, _t1468, _t1477, _t1478, _t148F, _t1490, refPos0AC0, _t1491, dPos0AC1, _t1492, faceTime109D, _t1493, _t1494, i109A, _t1495);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = -0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos0AC0);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = -0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos0AC1);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-7;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = -0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos0AC0);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = -0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos0AC1);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time109B, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = -0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos0AC1);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-7;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 3;
    bool _t14BE = prim !=0086 (i109A, _t14BD);
    if _t14BE {
      string _t14BF = "Saving at this face!";
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.e0;
      real _t14C3 = -0.1e1;
      vec3 _t14C4 = [_t14C1, _t14C2, _t14C3];
      real _t14C5 = prim •00CE<$[3]; $[3]; $[]> (_t14C4, refPos0AC0);
      real _t14C6 = prim -0026<$[]> (_t14C0, _t14C5);
      real _t14C7 = 0.e0;
      real _t14C8 = 0.e0;
      real _t14C9 = -0.1e1;
      vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
      real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, dPos0AC1);
      real _t14CC = prim /0055 (_t14C6, _t14CB);
      real _t14CD = 0.e0;
      real _t14CE = 0.e0;
      real _t14CF = 0.e0;
      real _t14D0 = -0.1e1;
      vec3 _t14D1 = [_t14CE, _t14CF, _t14D0];
      real _t14D2 = prim •00CE<$[3]; $[3]; $[]> (_t14D1, refPos0AC0);
      real _t14D3 = prim -0026<$[]> (_t14CD, _t14D2);
      real _t14D4 = 0.e0;
      real _t14D5 = 0.e0;
      real _t14D6 = -0.1e1;
      vec3 _t14D7 = [_t14D4, _t14D5, _t14D6];
      real _t14D8 = prim •00CE<$[3]; $[3]; $[]> (_t14D7, dPos0AC1);
      real _t14D9 = prim /0055 (_t14D3, _t14D8);
      bool _t14DA = prim >0080 (time109B, _t14D9);
      string _t14DB = "\n";
      print (_t14BF, _t14CC, _t14DA, _t14DB);
      real _t14DC = 0.e0;
      real _t14DD = 0.e0;
      real _t14DE = 0.e0;
      real _t14DF = -0.1e1;
      vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
      real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, refPos0AC0);
      real _t14E2 = prim -0026<$[]> (_t14DC, _t14E1);
      real _t14E3 = 0.e0;
      real _t14E4 = 0.e0;
      real _t14E5 = -0.1e1;
      vec3 _t14E6 = [_t14E3, _t14E4, _t14E5];
      real _t14E7 = prim •00CE<$[3]; $[3]; $[]> (_t14E6, dPos0AC1);
      time109B = prim /0055 (_t14E2, _t14E7);
      face109C = 3;
    } else {
      real _t14E8 = 0.e0;
      real _t14E9 = 0.e0;
      real _t14EA = 0.e0;
      real _t14EB = -0.1e1;
      vec3 _t14EC = [_t14E9, _t14EA, _t14EB];
      real _t14ED = prim •00CE<$[3]; $[3]; $[]> (_t14EC, refPos0AC0);
      real _t14EE = prim -0026<$[]> (_t14E8, _t14ED);
      real _t14EF = 0.e0;
      real _t14F0 = 0.e0;
      real _t14F1 = -0.1e1;
      vec3 _t14F2 = [_t14EF, _t14F0, _t14F1];
      real _t14F3 = prim •00CE<$[3]; $[3]; $[]> (_t14F2, dPos0AC1);
      faceTime109D = prim /0055 (_t14EE, _t14F3);
      string _t14F4 = "Saving backup time: ";
      string _t14F5 = "\n";
      print (_t14F4, faceTime109D, _t14F5);
    }
  }
  int _t14F6 = -1;
  bool _t14F7 = prim !=0086 (face109C, _t14F6);
  real _t14F8 = 0.1e1;
  real _t14F9 = 0.1e-7;
  real _t14FA = prim +0017<$[]> (_t14F8, _t14F9);
  real _t14FB = 0.1e1;
  real _t14FC = 0.1e1;
  real _t14FD = 0.1e1;
  vec3 _t14FE = [_t14FB, _t14FC, _t14FD];
  real _t14FF = 0.e0;
  real _t1500 = prim max0125 (time109B, _t14FF);
  vec3 _t1501 = prim *0038<$[3]> (dPos0AC1, _t1500);
  vec3 _t1502 = prim +0017<$[3]> (refPos0AC0, _t1501);
  real _t1503 = prim •00CE<$[3]; $[3]; $[]> (_t14FE, _t1502);
  bool _t1504 = prim >0080 (_t14FA, _t1503);
  real _t1505 = 0.1e-7;
  real _t1506 = 0.1e-7;
  real _t1507 = 0.1e-7;
  vec3 _t1508 = [_t1505, _t1506, _t1507];
  real _t1509 = 0.e0;
  real _t150A = prim max0125 (time109B, _t1509);
  vec3 _t150B = prim *0038<$[3]> (dPos0AC1, _t150A);
  vec3 _t150C = prim +0017<$[3]> (refPos0AC0, _t150B);
  vec3 _t150D = prim +0017<$[3]> (_t1508, _t150C);
  real _t150E = _t150D[0];
  real _t150F = -0.e0;
  bool _t1510 = prim >0080 (_t150E, _t150F);
  real _t1511 = 0.1e-7;
  real _t1512 = 0.1e-7;
  real _t1513 = 0.1e-7;
  vec3 _t1514 = [_t1511, _t1512, _t1513];
  real _t1515 = 0.e0;
  real _t1516 = prim max0125 (time109B, _t1515);
  vec3 _t1517 = prim *0038<$[3]> (dPos0AC1, _t1516);
  vec3 _t1518 = prim +0017<$[3]> (refPos0AC0, _t1517);
  vec3 _t1519 = prim +0017<$[3]> (_t1514, _t1518);
  real _t151A = _t1519[1];
  real _t151B = -0.e0;
  bool _t151C = prim >0080 (_t151A, _t151B);
  real _t151D = 0.1e-7;
  real _t151E = 0.1e-7;
  real _t151F = 0.1e-7;
  vec3 _t1520 = [_t151D, _t151E, _t151F];
  real _t1521 = 0.e0;
  real _t1522 = prim max0125 (time109B, _t1521);
  vec3 _t1523 = prim *0038<$[3]> (dPos0AC1, _t1522);
  vec3 _t1524 = prim +0017<$[3]> (refPos0AC0, _t1523);
  vec3 _t1525 = prim +0017<$[3]> (_t1520, _t1524);
  real _t1526 = _t1525[2];
  real _t1527 = -0.e0;
  bool _t1528 = prim >0080 (_t1526, _t1527);
  bool _t1529 = prim $and01C4 (_t151C, _t1528);
  bool _t152A = prim $and01C4 (_t1510, _t1529);
  bool _t152B = prim $and01C4 (_t1504, _t152A);
  bool _t152C = prim $and01C4 (_t14F7, _t152B);
  if _t152C {
    string _t152D = "\nReturning via standard : ";
    real _t152E = 0.e0;
    real _t152F = prim max0125 (time109B, _t152E);
    real _t1530 = (real)face109C;
    vec2 _t1531 = [_t152F, _t1530];
    string _t1532 = "\n";
    print (_t152D, _t1531, _t1532);
    real _t1533 = 0.e0;
    real _t1534 = prim max0125 (time109B, _t1533);
    real _t1535 = (real)face109C;
    vec2 _t1536 = [_t1534, _t1535];
    return _t1536;
  } else {
    real _t1537 = -inf;
    bool _t1538 = prim ==0084 (_t1537, faceTime109D);
    if _t1538 {
      string _t1539 = "\nReturning via fail : ";
      real _t153A = -0.1e1;
      real _t153B = -0.1e1;
      vec2 _t153C = [_t153A, _t153B];
      string _t153D = "\n";
      print (_t1539, _t153C, _t153D);
      real _t153E = -0.1e1;
      real _t153F = -0.1e1;
      vec2 _t1540 = [_t153E, _t153F];
      return _t1540;
    } else {
      string _t1541 = "\nReturning via backup : ";
      real _t1542 = 0.e0;
      real _t1543 = prim max0125 (faceTime109D, _t1542);
      real _t1544 = (real)i109A;
      vec2 _t1545 = [_t1543, _t1544];
      string _t1546 = "\n";
      print (_t1541, _t1545, _t1546);
      real _t1547 = 0.e0;
      real _t1548 = prim max0125 (faceTime109D, _t1547);
      real _t1549 = (real)i109A;
      vec2 _t154A = [_t1548, _t1549];
      return _t154A;
    }
  }
}
function Femdata: Mesh#0 domain154B (Femdata: Space arg0154C)
{
  Femdata: Mesh _t154D = extractFem(arg0154C, Mesh);
  return _t154D;
}
function Femdata: Space#0 space154E (Femdata: FemFunc arg0154F)
{
  Femdata: Space _t1550 = extractFem(arg0154F, Space);
  return _t1550;
}
function Femdata: FuncCell#3 funcCell1551 (Femdata: FemFunc arg01552, Femdata: MeshCell arg11553)
{
  int _t1554 = extractFemItem(CellIndex(MeshCell), int, arg11553);
  Femdata: FuncCell _t1555 = loadFem(FuncCell, arg01552, _t1554);
  return _t1555;
}
function Femdata: MeshPos#2 fn_2FB1563 (Femdata: MeshPos x1564, vec3 dPos1565)
{
  bool _t1566 = extractFemItem(Valid(MeshPos), bool, x1564);
  bool _t1567 = prim !00BC (_t1566);
  if _t1567 {
    return x1564;
  }
  real time1568 = 0.1e1;
  Femdata: MeshPos cmp1569 = x1564;
  int _t156A = 0;
  int[] _t156B = prim $range01C3 (_t156A, timeSteps040D);
  foreach i15E3 in _t156B {
    Femdata: Mesh _t156C = extractFem(cmp1569, Mesh);
    int _t156D = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t156E = loadFem(MeshCell, _t156C, _t156D);
    Femdata: Mesh _t156F = extractFem(_t156E, Mesh);
    Femdata: Mesh _t1570 = extractFem(cmp1569, Mesh);
    int _t1571 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1572 = loadFem(MeshCell, _t1570, _t1571);
    Femdata: Mesh _t1573 = extractFem(_t1572, Mesh);
    Femdata: Mesh _t1574 = extractFem(cmp1569, Mesh);
    int _t1575 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1576 = loadFem(MeshCell, _t1574, _t1575);
    int _t1577 = extractFemItem(CellIndex(MeshCell), int, _t1576);
    field(3)[3] _t1578 = femField(_t156F,_t1577,field(3)[3],Transform,);
    field(3)[3,3] _t1579 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1578);
    vec3 _t157A = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    tensor[3,3] _t157B = prim @00A5<#∞; %3; $[3,3]> (_t1579, _t157A);
    tensor[3,3] _t157C = prim inv0155 (_t157B);
    vec3 deltaP157D = prim •00CE<$[3,3]; $[3]; $[3]> (_t157C, dPos1565);
    real _t157E = prim |()|00B5<$[3]> (deltaP157D);
    vec3 normDetaP157F = prim /0057<$[3]> (deltaP157D, _t157E);
    vec3 _t1580 = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    vec3 _t1581 = prim *0036<$[3]> (time1568, deltaP157D);
    vec3 newPos1582 = prim +0017<$[3]> (_t1580, _t1581);
    continue;
  }
  string _t15E4 = "Took stupid way out!\n";
  print (_t15E4);
  vec3 _t15E5 = func worldPos04DA (x1564);
  vec3 _t15E6 = prim +0017<$[3]> (_t15E5, dPos1565);
  cmp1569 = func findPos041E (meshData03FD, _t15E6);
  return cmp1569;
}
function vec3#2 nV15E7 (Femdata: MeshPos x15E8)
{
  bool _t15E9 = extractFemItem(Valid(MeshPos), bool, x15E8);
  if _t15E9 {
    Femdata: Mesh _t15EA = extractFem(x15E8, Mesh);
    int _t15EB = extractFemItem(CellIndex(MeshPos), int, x15E8);
    Femdata: MeshCell c15EC = loadFem(MeshCell, _t15EA, _t15EB);
    vec3 ref15ED = extractFemItem(RefPos(MeshPos), vec3, x15E8);
    Femdata: FuncCell _t15EE = func funcCell1551 (data040B, c15EC);
    Femdata: FemFunc _t15EF = extractFem(_t15EE, FemFunc);
    Femdata: FuncCell _t15F0 = func funcCell1551 (data040B, c15EC);
    Femdata: FemFunc _t15F1 = extractFem(_t15F0, FemFunc);
    Femdata: Space _t15F2 = extractFem(_t15F1, Space);
    Femdata: FuncCell _t15F3 = func funcCell1551 (data040B, c15EC);
    int _t15F4 = extractFemItem(CellIndex(FuncCell), int, _t15F3);
    field(3)[3] _t15F5 = femField(_t15EF,_t15F4,field(3)[3],refField,);
    vec3 val15F6 = prim @00A5<#∞; %3; $[3]> (_t15F5, ref15ED);
    real _t15F7 = prim |()|00B5<$[3]> (val15F6);
    vec3 _t15F8 = prim /0057<$[3]> (val15F6, _t15F7);
    return _t15F8;
  } else {
    string _t15F9 = "QWE:Eval at 0\n";
    print (_t15F9);
    vec3 _t15FA = prim $zero01BB<$[3]> ();
    return _t15FA;
  }
}
function vec3#4 altF15FB (vec3 x15FC)
{
  vec3 _t15FD = prim -0026<$[3]> (x15FC, center0413);
  vec3 _t15FE = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t15FD);
  return _t15FE;
}
globalInit {
  int _t0401 = 0;
  int _t03FF = 1;
  int _t0403 = extractFemItem(NumCell(Mesh), int, meshData03FD);
  int _t0402 = prim -0024 (_t0403, _t03FF);
  int[] _t0406 = prim $range01C3 (_t0401, _t0402);
  Femdata: MeshCell[] _t0407 = {};
  foreach _t0405 in _t0406 {
    Femdata: MeshCell _t0408 = loadFem(MeshCell, meshData03FD, _t0405);
    _t0407 = prim @0010<Femdata: MeshCell> (_t0407, _t0408);
  }
  space0409 = loadFem(Space, 0space0409_intermedateGlobal040A, meshData03FD);
  data040B = loadFem(FemFunc, 0data040B_intermedateGlobal040C, space0409);
  Femdata: Space _t1556 = extractFem(data040B, Space);
  Femdata: Space _t1557 = extractFem(data040B, Space);
  Femdata: Mesh _t1558 = extractFem(_t1557, Mesh);
  field(3)[3] _t1559 = femField(data040B,_t1558,field(3)[3],refField,findPos041E );
  Femdata: Space _t155A = extractFem(data040B, Space);
  Femdata: Mesh _t155B = extractFem(_t155A, Mesh);
  Femdata: Space _t155C = extractFem(data040B, Space);
  Femdata: Mesh _t155D = extractFem(_t155C, Mesh);
  Femdata: Space _t155E = extractFem(data040B, Space);
  Femdata: Mesh _t155F = extractFem(_t155E, Mesh);
  field(3)[3] _t1560 = femField(_t155B,_t155F,field(3)[3],InvTransform,findPos041E );
  F1561 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t1559, _t1560);
  simplex1562 = func refcell046A (meshData03FD);
}
strand gg (vec3 startPos15FF) {
  output vec3[] stream1600;
  output vec3[] newStream1603;
  int step1606;
  Femdata: MeshPos cPos1607;
  vec3 altCPos1608;
  {
    vec3[0] _t1601 = {};
    vec3[] _t1602 = (vec3[])_t1601;
    stream1600 = _t1602;
    vec3[0] _t1604 = {};
    vec3[] _t1605 = (vec3[])_t1604;
    newStream1603 = _t1605;
    step1606 = 0;
    cPos1607 = func findPos041E (meshData03FD, startPos15FF);
    altCPos1608 = startPos15FF;
  }
  update
  {
    int _t1609 = 0;
    bool _t160A = prim ==0082 (step1606, _t1609);
    if _t160A {
      bool _t160B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      if _t160B {
        vec3 rp160C = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
        real _t160D = rp160C[0];
        real _t160E = 0.1e-5;
        bool _t160F = prim <=007C (_t160D, _t160E);
        if _t160F {
          stabilize;
        }
        real _t1610 = rp160C[1];
        real _t1611 = 0.1e-5;
        bool _t1612 = prim <=007C (_t1610, _t1611);
        if _t1612 {
          stabilize;
        }
        real _t1613 = rp160C[2];
        real _t1614 = 0.1e-5;
        bool _t1615 = prim <=007C (_t1613, _t1614);
        if _t1615 {
          stabilize;
        }
        real _t1616 = 0.1e1;
        real _t1617 = 0.1e1;
        real _t1618 = 0.1e1;
        vec3 _t1619 = [_t1616, _t1617, _t1618];
        real r161A = prim •00CE<$[3]; $[3]; $[]> (_t1619, rp160C);
        real _t161B = 0.9999999e0;
        bool _t161C = prim <=007C (_t161B, r161A);
        if _t161C {
          stabilize;
        }
      }
    }
    bool _t161D = extractFemItem(Valid(MeshPos), bool, cPos1607);
    Femdata: MeshPos _t161E = func findPos041E (meshData03FD, altCPos1608);
    bool _t161F = extractFemItem(Valid(MeshPos), bool, _t161E);
    bool _t1620 = prim !=0085 (_t161D, _t161F);
    if _t1620 {
      string _t1621 = "ERG:Warning of validity startPos:";
      string _t1622 = "\n";
      print (_t1621, startPos15FF, _t1622);
    }
    bool _t1623;
    bool _t1624 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    bool _t1625 = prim !00BC (_t1624);
    if _t1625 {
      _t1623 = true;
    } else {
      bool _t1626;
      Femdata: MeshPos _t1627 = func findPos041E (meshData03FD, altCPos1608);
      bool _t1628 = extractFemItem(Valid(MeshPos), bool, _t1627);
      bool _t1629 = prim !00BC (_t1628);
      if _t1629 {
        _t1626 = true;
      } else {
        _t1626 = prim ==0082 (step1606, stepMax0411);
      }
      _t1623 = _t1626;
    }
    if _t1623 {
      string _t162A = "Went off the mesh\?";
      bool _t162B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      bool _t162C = prim !00BC (_t162B);
      string _t162D = " and ";
      string _t162E = " and ";
      Femdata: MeshPos _t162F = func findPos041E (meshData03FD, altCPos1608);
      bool _t1630 = extractFemItem(Valid(MeshPos), bool, _t162F);
      bool _t1631 = prim !00BC (_t1630);
      string _t1632 = "\n";
      print (_t162A, _t162C, _t162D, altCPos1608, _t162E, _t1631, _t1632);
      string _t1633 = "Pos is:";
      vec3 _t1634 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1635 = "\n";
      print (_t1633, _t1634, _t1635);
      string _t1636 = "\n";
      string _t1637 = "\n";
      print (stream1600, _t1636, newStream1603, _t1637);
      stabilize;
    }
    vec3 _t1638 = func worldPos04DA (cPos1607);
    vec3[1] _t1639 = {_t1638};
    vec3[] _t163A = (vec3[])_t1639;
    stream1600 = prim @0014<vec3> (stream1600, _t163A);
    vec3[1] _t163B = {altCPos1608};
    vec3[] _t163C = (vec3[])_t163B;
    newStream1603 = prim @0014<vec3> (newStream1603, _t163C);
    vec3 _t163D = func worldPos04DA (cPos1607);
    vec3 _t163E = prim -0026<$[3]> (_t163D, altCPos1608);
    real _t163F = prim |()|00B5<$[3]> (_t163E);
    real _t1640 = 0.1e-5;
    bool _t1641 = prim >0080 (_t163F, _t1640);
    if _t1641 {
      string _t1642 = "ERG:Error in tracing 1: At step:";
      string _t1643 = " with particle:";
      string _t1644 = "\n";
      print (_t1642, step1606, _t1643, startPos15FF, _t1644);
      string _t1645 = "Poses are:";
      vec3 _t1646 = func worldPos04DA (cPos1607);
      string _t1647 = "\n";
      print (_t1645, _t1646, altCPos1608, _t1647);
      string _t1648 = "Cells are:";
      Femdata: Mesh _t1649 = extractFem(cPos1607, Mesh);
      int _t164A = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t164B = loadFem(MeshCell, _t1649, _t164A);
      string _t164C = " and ";
      Femdata: MeshPos _t164D = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t164E = extractFem(_t164D, Mesh);
      Femdata: MeshPos _t164F = func findPos041E (meshData03FD, altCPos1608);
      int _t1650 = extractFemItem(CellIndex(MeshPos), int, _t164F);
      Femdata: MeshCell _t1651 = loadFem(MeshCell, _t164E, _t1650);
      string _t1652 = "\n";
      print (_t1648, _t164B, _t164C, _t1651, _t1652);
      string _t1653 = "Ref poses are:";
      vec3 _t1654 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1655 = " and ";
      Femdata: MeshPos _t1656 = func findPos041E (meshData03FD, altCPos1608);
      vec3 _t1657 = extractFemItem(RefPos(MeshPos), vec3, _t1656);
      string _t1658 = "\n";
      print (_t1653, _t1654, _t1655, _t1657, _t1658);
      stabilize;
    } else {
      string _t1659 = "fine in cell 1:";
      Femdata: Mesh _t165A = extractFem(cPos1607, Mesh);
      int _t165B = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t165C = loadFem(MeshCell, _t165A, _t165B);
      string _t165D = "\n";
      print (_t1659, _t165C, _t165D);
    }
    real _t165E = 0.5e0;
    real _t165F = prim *0034 (_t165E, stepSize0410);
    vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    vec3 _t1661 = prim *0036<$[3]> (_t165F, _t1660);
    vec3 _t1662 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    real _t1663 = prim |()|00B5<$[3]> (_t1662);
    vec3 altUp11664 = prim /0057<$[3]> (_t1661, _t1663);
    real _t1665 = 0.5e0;
    real _t1666 = prim *0034 (_t1665, stepSize0410);
    vec3 _t1667 = func nV15E7 (cPos1607);
    vec3 up11668 = prim *0036<$[3]> (_t1666, _t1667);
    real _t1669 = 0.5e0;
    real _t166A = prim *0034 (_t1669, stepSize0410);
    vec3 _t166B = func altF15FB (altCPos1608);
    vec3 _t166C = prim *0036<$[3]> (_t166A, _t166B);
    vec3 _t166D = func altF15FB (altCPos1608);
    real _t166E = prim |()|00B5<$[3]> (_t166D);
    vec3 upCorrect1166F = prim /0057<$[3]> (_t166C, _t166E);
    bool _t1670;
    vec3 _t1671 = prim -0026<$[3]> (up11668, upCorrect1166F);
    real _t1672 = prim |()|00B5<$[3]> (_t1671);
    real _t1673 = 0.1e-5;
    bool _t1674 = prim >0080 (_t1672, _t1673);
    if _t1674 {
      _t1670 = true;
    } else {
      vec3 _t1675 = prim -0026<$[3]> (up11668, altUp11664);
      real _t1676 = prim |()|00B5<$[3]> (_t1675);
      real _t1677 = 0.1e-5;
      _t1670 = prim >0080 (_t1676, _t1677);
    }
    if _t1670 {
      string _t1678 = "ERG:Error in evaluation on pos 1:";
      string _t1679 = "\n";
      print (_t1678, startPos15FF, _t1679);
    }
    Femdata: MeshPos intermed167A = func fn_2FB1563 (cPos1607, up11668);
    vec3 altIntermed167B = prim +0017<$[3]> (altCPos1608, altUp11664);
    bool _t167C = extractFemItem(Valid(MeshPos), bool, intermed167A);
    Femdata: MeshPos _t167D = func findPos041E (meshData03FD, altIntermed167B);
    bool _t167E = extractFemItem(Valid(MeshPos), bool, _t167D);
    bool _t167F = prim !=0085 (_t167C, _t167E);
    if _t167F {
      string _t1680 = "ERG:Warning of validity intermed";
      string _t1681 = "\n";
      print (_t1680, startPos15FF, _t1681);
      string _t1682 = "Real location:";
      string _t1683 = "\n";
      print (_t1682, altIntermed167B, _t1683);
      string _t1684 = "Cell change: ";
      Femdata: MeshPos _t1685 = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t1686 = extractFem(_t1685, Mesh);
      Femdata: MeshPos _t1687 = func findPos041E (meshData03FD, altCPos1608);
      int _t1688 = extractFemItem(CellIndex(MeshPos), int, _t1687);
      Femdata: MeshCell _t1689 = loadFem(MeshCell, _t1686, _t1688);
      string _t168A = " to ";
      Femdata: MeshPos _t168B = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t168C = extractFem(_t168B, Mesh);
      Femdata: MeshPos _t168D = func findPos041E (meshData03FD, altIntermed167B);
      int _t168E = extractFemItem(CellIndex(MeshPos), int, _t168D);
      Femdata: MeshCell _t168F = loadFem(MeshCell, _t168C, _t168E);
      string _t1690 = "\n";
      print (_t1684, _t1689, _t168A, _t168F, _t1690);
    }
    bool _t1691;
    bool _t1692 = extractFemItem(Valid(MeshPos), bool, intermed167A);
    bool _t1693 = prim !00BC (_t1692);
    if _t1693 {
      _t1691 = true;
    } else {
      Femdata: MeshPos _t1694 = func findPos041E (meshData03FD, altIntermed167B);
      bool _t1695 = extractFemItem(Valid(MeshPos), bool, _t1694);
      _t1691 = prim !00BC (_t1695);
    }
    if _t1691 {
      string _t1696 = "Went off the mesh\?";
      bool _t1697 = extractFemItem(Valid(MeshPos), bool, intermed167A);
      bool _t1698 = prim !00BC (_t1697);
      string _t1699 = " and ";
      string _t169A = " and ";
      Femdata: MeshPos _t169B = func findPos041E (meshData03FD, altIntermed167B);
      bool _t169C = extractFemItem(Valid(MeshPos), bool, _t169B);
      bool _t169D = prim !00BC (_t169C);
      string _t169E = "\n";
      print (_t1696, _t1698, _t1699, altIntermed167B, _t169A, _t169D, _t169E);
      stabilize;
    }
    vec3 _t169F = func worldPos04DA (intermed167A);
    vec3 _t16A0 = prim -0026<$[3]> (_t169F, altIntermed167B);
    real _t16A1 = prim |()|00B5<$[3]> (_t16A0);
    real _t16A2 = 0.1e-5;
    bool _t16A3 = prim >0080 (_t16A1, _t16A2);
    if _t16A3 {
      string _t16A4 = "ERG:Error in tracing 2: At step:";
      string _t16A5 = " with particle:";
      string _t16A6 = "\n";
      print (_t16A4, step1606, _t16A5, startPos15FF, _t16A6);
      string _t16A7 = "Poses are:";
      vec3 _t16A8 = func worldPos04DA (intermed167A);
      string _t16A9 = "\n";
      print (_t16A7, _t16A8, altIntermed167B, _t16A9);
      stabilize;
    } else {
      string _t16AA = "fine in cell 2:";
      Femdata: Mesh _t16AB = extractFem(cPos1607, Mesh);
      int _t16AC = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t16AD = loadFem(MeshCell, _t16AB, _t16AC);
      string _t16AE = "\n";
      print (_t16AA, _t16AD, _t16AE);
    }
    vec3 _t16AF = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    vec3 _t16B0 = prim *0036<$[3]> (stepSize0410, _t16AF);
    vec3 _t16B1 = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    real _t16B2 = prim |()|00B5<$[3]> (_t16B1);
    vec3 altUp216B3 = prim /0057<$[3]> (_t16B0, _t16B2);
    vec3 _t16B4 = func nV15E7 (intermed167A);
    vec3 up216B5 = prim *0036<$[3]> (stepSize0410, _t16B4);
    vec3 _t16B6 = func altF15FB (altIntermed167B);
    vec3 _t16B7 = prim *0036<$[3]> (stepSize0410, _t16B6);
    vec3 _t16B8 = func altF15FB (altIntermed167B);
    real _t16B9 = prim |()|00B5<$[3]> (_t16B8);
    vec3 upCorrect216BA = prim /0057<$[3]> (_t16B7, _t16B9);
    cPos1607 = func fn_2FB1563 (cPos1607, up216B5);
    altCPos1608 = prim +0017<$[3]> (altCPos1608, altUp216B3);
    int _t16BB = 1;
    step1606 = prim +0015 (step1606, _t16BB);
    bool _t16BC;
    vec3 _t16BD = prim -0026<$[3]> (up216B5, upCorrect216BA);
    real _t16BE = prim |()|00B5<$[3]> (_t16BD);
    real _t16BF = 0.1e-5;
    bool _t16C0 = prim >0080 (_t16BE, _t16BF);
    if _t16C0 {
      _t16BC = true;
    } else {
      vec3 _t16C1 = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16C2 = prim |()|00B5<$[3]> (_t16C1);
      real _t16C3 = 0.1e-4;
      _t16BC = prim >0080 (_t16C2, _t16C3);
    }
    if _t16BC {
      string _t16C4 = "ERG:Error in evaluation on pos 2:";
      string _t16C5 = "\n";
      print (_t16C4, startPos15FF, _t16C5);
      string _t16C6 = "The errors are:";
      vec3 _t16C7 = prim -0026<$[3]> (up216B5, upCorrect216BA);
      real _t16C8 = prim |()|00B5<$[3]> (_t16C7);
      string _t16C9 = " and ";
      vec3 _t16CA = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16CB = prim |()|00B5<$[3]> (_t16CA);
      string _t16CC = "\n";
      print (_t16C6, _t16C8, _t16C9, _t16CB, _t16CC);
      string _t16CD = "The cells are:";
      Femdata: Mesh _t16CE = extractFem(intermed167A, Mesh);
      int _t16CF = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell _t16D0 = loadFem(MeshCell, _t16CE, _t16CF);
      string _t16D1 = " vs ";
      Femdata: MeshPos _t16D2 = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t16D3 = extractFem(_t16D2, Mesh);
      Femdata: MeshPos _t16D4 = func findPos041E (meshData03FD, altIntermed167B);
      int _t16D5 = extractFemItem(CellIndex(MeshPos), int, _t16D4);
      Femdata: MeshCell _t16D6 = loadFem(MeshCell, _t16D3, _t16D5);
      string _t16D7 = "\n";
      print (_t16CD, _t16D0, _t16D1, _t16D6, _t16D7);
    }
  }
}
collection {
  foreach x16D8 in startPoints040F {
    new gg (x16D8);
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData03FD;
input FemData:Space 0space0409_intermedateGlobal040A;
input FemData:FemFunc 0data040B_intermedateGlobal040C;
input int timeSteps040D = <default>;
input real timeEps040E = <default>;
input vec3[] startPoints040F;
input real stepSize0410 = <default>;
input int stepMax0411 = <default>;
input tensor[3,3] M0412;
input vec3 center0413;
constants {
  timeSteps040D = 32;
  timeEps040E = 0.1e-6;
  stepSize0410 = 0.1e-1;
  stepMax0411 = 300;
}
global Femdata: Space space0409;
global Femdata: FemFunc data040B;
global field(3)[3] F1561;
function bool#0 !=0414 (Femdata: MeshCell cell10415, Femdata: MeshCell cell10416)
{
  int _t0417 = extractFemItem(CellIndex(Mesh), int, cell10415);
  int _t0418 = extractFemItem(CellIndex(Mesh), int, cell10416);
  bool _t0419 = prim !=0086 (_t0417, _t0418);
  return _t0419;
}
function bool#0 ==041A (Femdata: MeshCell cell10415, Femdata: MeshCell cell10416)
{
  int _t041B = extractFemItem(CellIndex(Mesh), int, cell10415);
  int _t041C = extractFemItem(CellIndex(Mesh), int, cell10416);
  bool _t041D = prim ==0082 (_t041B, _t041C);
  return _t041D;
}
function Femdata: MeshPos#20 findPos041E (Femdata: Mesh mesh041F, vec3 pos0420)
{
  real _t0421 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0422 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0423 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0424 = [_t0421, _t0422, _t0423];
  newtonInt0425 = 0;
  cellInt0426 = extractFemItem(StartCell(Mesh), int, mesh041F);
  int _t0427 = extractFemItem(NumCell(Mesh), int, mesh041F);
  int _t0428 = 1;
  numCell0429 = prim -0024 (_t0427, _t0428);
  yayCells042A = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh041F, pos0420 : vec3);
  foreach cellItter042E in yayCells042A {
    real _t042B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn0424 = [_t042B, _t042C, _t042D];
    cellInt0426 = cellItter042E;
    field(3)[3] _t042F = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
    field(3)[3,3] _t0430 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042F);
    field(3)[3,3] _t0431 = prim inv015E<#∞; %3> (_t0430);
    real _t0432 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0433 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0435 = [_t0432, _t0433, _t0434];
    A0436 = prim @00A5<#∞; %3; $[3,3]> (_t0431, _t0435);
    int _t0437 = 0;
    int _t0438 = 16;
    int[] _t0439 = prim $range01C3 (_t0437, _t0438);
    foreach newtonItter0468 in _t0439 {
      field(3)[3] _t043A = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
      field(3)[3] _t043B = prim -002E<#∞; %3; $[3]> (_t043A, pos0420);
      field(3)[3] _t043C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0436, _t043B);
      delta043D = prim @00A5<#∞; %3; $[3]> (_t043C, xn0424);
      xn0424 = prim -0026<$[3]> (xn0424, delta043D);
      real _t043E = 0.1e-7;
      real _t043F = 0.1e-7;
      real _t0440 = prim *0034 (_t043E, _t043F);
      real _t0441 = prim •00CE<$[3]; $[3]; $[]> (delta043D, delta043D);
      bool _t0442 = prim >=007E (_t0440, _t0441);
      if _t0442 {
        real _t0443 = 0.1e1;
        real _t0444 = 0.1e-7;
        real _t0445 = prim +0017<$[]> (_t0443, _t0444);
        real _t0446 = 0.1e1;
        real _t0447 = 0.1e1;
        real _t0448 = 0.1e1;
        vec3 _t0449 = [_t0446, _t0447, _t0448];
        real _t044A = prim •00CE<$[3]; $[3]; $[]> (_t0449, xn0424);
        bool _t044B = prim >0080 (_t0445, _t044A);
        real _t044C = 0.1e-7;
        real _t044D = 0.1e-7;
        real _t044E = 0.1e-7;
        vec3 _t044F = [_t044C, _t044D, _t044E];
        vec3 _t0450 = prim +0017<$[3]> (_t044F, xn0424);
        real _t0451 = _t0450[0];
        real _t0452 = -0.e0;
        bool _t0453 = prim >0080 (_t0451, _t0452);
        real _t0454 = 0.1e-7;
        real _t0455 = 0.1e-7;
        real _t0456 = 0.1e-7;
        vec3 _t0457 = [_t0454, _t0455, _t0456];
        vec3 _t0458 = prim +0017<$[3]> (_t0457, xn0424);
        real _t0459 = _t0458[1];
        real _t045A = -0.e0;
        bool _t045B = prim >0080 (_t0459, _t045A);
        real _t045C = 0.1e-7;
        real _t045D = 0.1e-7;
        real _t045E = 0.1e-7;
        vec3 _t045F = [_t045C, _t045D, _t045E];
        vec3 _t0460 = prim +0017<$[3]> (_t045F, xn0424);
        real _t0461 = _t0460[2];
        real _t0462 = -0.e0;
        bool _t0463 = prim >0080 (_t0461, _t0462);
        bool _t0464 = prim $and01C4 (_t045B, _t0463);
        bool _t0465 = prim $and01C4 (_t0453, _t0464);
        bool _t0466 = prim $and01C4 (_t044B, _t0465);
        if _t0466 {
          Femdata: MeshPos _t0467 = extractFemItemN((mesh041F, cellInt0426, xn0424, pos0420),AllBuild(MeshPos),);
          return _t0467;
        }
      }
    }
  }
  Femdata: MeshPos _t0469 = extractFemItemN((mesh041F),InvalidBuild(MeshPos),);
  return _t0469;
}
function Femdata: RefCell#1 refcell046A (Femdata: Mesh arg0046B)
{
  Femdata: RefCell _t046C = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0046B);
  return _t046C;
}
function Femdata: MeshCell[]#0 cells046D (Femdata: Mesh arg0046E)
{
  Femdata: MeshCell[] _t046F = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg0046E);
  return _t046F;
}
function Femdata: MeshCell[]#0 cells0470 (Femdata: Mesh arg0046E)
{
  int _t0471 = 0;
  int _t0472 = extractFemItem(NumCell(Mesh), int, arg0046E);
  int[] _t0473 = prim $range01C3 (_t0471, _t0472);
  Femdata: MeshCell[] accum0476 = {};
  foreach i0474 in _t0473 {
    Femdata: MeshCell _t0475 = loadFem(MeshCell, arg0046E, i0474);
    accum0476 = prim @0010<Femdata: MeshCell> (accum0476, _t0475);
  }
  return accum0476;
}
function int#0 numCell0477 (Femdata: Mesh arg0046B)
{
  int _t0478 = extractFemItem(NumCell(Mesh), int, arg0046B);
  return _t0478;
}
function tensor[3,3,3,3]#0 mesh_t_transform_30479 (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t047D = femField(mesh047C,cell047B,field(3)[3],Transform,);
  field(3)[3,3] _t047E = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t047D);
  field(3)[3,3,3] _t047F = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t047E);
  field(3)[3,3,3,3] _t0480 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t047F);
  tensor[3,3,3,3] _t0481 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0480, pos047A);
  return _t0481;
}
function tensor[3,3,3]#0 mesh_t_transform_20482 (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t0483 = femField(mesh047C,cell047B,field(3)[3],Transform,);
  field(3)[3,3] _t0484 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0483);
  field(3)[3,3,3] _t0485 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0484);
  tensor[3,3,3] _t0486 = prim @00A5<#∞; %3; $[3,3,3]> (_t0485, pos047A);
  return _t0486;
}
function tensor[3,3]#0 mesh_t_transform_10487 (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t0488 = femField(mesh047C,cell047B,field(3)[3],Transform,);
  field(3)[3,3] _t0489 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0488);
  tensor[3,3] _t048A = prim @00A5<#∞; %3; $[3,3]> (_t0489, pos047A);
  return _t048A;
}
function vec3#2 mesh_t_transform_0048B (vec3 pos047A, int cell047B, Femdata: Mesh mesh047C)
{
  field(3)[3] _t048C = femField(mesh047C,cell047B,field(3)[3],Transform,);
  vec3 _t048D = prim @00A5<#∞; %3; $[3]> (_t048C, pos047A);
  return _t048D;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse048E (vec3 pos048F, int cellInt0490, Femdata: Mesh mesh0491)
{
  real _t0492 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0493 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0494 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0495 = [_t0492, _t0493, _t0494];
  field(3)[3] _t0496 = femField(mesh0491,cellInt0490,field(3)[3],Transform,);
  field(3)[3,3] _t0497 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0496);
  field(3)[3,3] _t0498 = prim inv015E<#∞; %3> (_t0497);
  real _t0499 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t049A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t049B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t049C = [_t0499, _t049A, _t049B];
  A049D = prim @00A5<#∞; %3; $[3,3]> (_t0498, _t049C);
  int _t049E = 0;
  int _t049F = 16;
  int[] _t04A0 = prim $range01C3 (_t049E, _t049F);
  foreach itter04D0 in _t04A0 {
    field(3)[3] _t04A1 = femField(mesh0491,cellInt0490,field(3)[3],Transform,);
    field(3)[3] _t04A2 = prim -002E<#∞; %3; $[3]> (_t04A1, pos048F);
    field(3)[3] _t04A3 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A049D, _t04A2);
    delta04A4 = prim @00A5<#∞; %3; $[3]> (_t04A3, xn0495);
    xn0495 = prim -0026<$[3]> (xn0495, delta04A4);
    real _t04A5 = 0.1e-7;
    real _t04A6 = 0.1e-7;
    real _t04A7 = prim *0034 (_t04A5, _t04A6);
    real _t04A8 = prim •00CE<$[3]; $[3]; $[]> (delta04A4, delta04A4);
    bool _t04A9 = prim >=007E (_t04A7, _t04A8);
    if _t04A9 {
      real _t04AA = 0.1e1;
      real _t04AB = 0.1e-7;
      real _t04AC = prim +0017<$[]> (_t04AA, _t04AB);
      real _t04AD = 0.1e1;
      real _t04AE = 0.1e1;
      real _t04AF = 0.1e1;
      vec3 _t04B0 = [_t04AD, _t04AE, _t04AF];
      real _t04B1 = prim •00CE<$[3]; $[3]; $[]> (_t04B0, xn0495);
      bool _t04B2 = prim >0080 (_t04AC, _t04B1);
      real _t04B3 = 0.1e-7;
      real _t04B4 = 0.1e-7;
      real _t04B5 = 0.1e-7;
      vec3 _t04B6 = [_t04B3, _t04B4, _t04B5];
      vec3 _t04B7 = prim +0017<$[3]> (_t04B6, xn0495);
      real _t04B8 = _t04B7[0];
      real _t04B9 = -0.e0;
      bool _t04BA = prim >0080 (_t04B8, _t04B9);
      real _t04BB = 0.1e-7;
      real _t04BC = 0.1e-7;
      real _t04BD = 0.1e-7;
      vec3 _t04BE = [_t04BB, _t04BC, _t04BD];
      vec3 _t04BF = prim +0017<$[3]> (_t04BE, xn0495);
      real _t04C0 = _t04BF[1];
      real _t04C1 = -0.e0;
      bool _t04C2 = prim >0080 (_t04C0, _t04C1);
      real _t04C3 = 0.1e-7;
      real _t04C4 = 0.1e-7;
      real _t04C5 = 0.1e-7;
      vec3 _t04C6 = [_t04C3, _t04C4, _t04C5];
      vec3 _t04C7 = prim +0017<$[3]> (_t04C6, xn0495);
      real _t04C8 = _t04C7[2];
      real _t04C9 = -0.e0;
      bool _t04CA = prim >0080 (_t04C8, _t04C9);
      bool _t04CB = prim $and01C4 (_t04C2, _t04CA);
      bool _t04CC = prim $and01C4 (_t04BA, _t04CB);
      bool _t04CD = prim $and01C4 (_t04B2, _t04CC);
      if _t04CD {
        Femdata: MeshPos _t04CE = extractFemItemN((mesh0491, cellInt0490, xn0495, pos048F),AllBuild(MeshPos),);
        return _t04CE;
      } else {
        Femdata: MeshPos _t04CF = extractFemItemN((mesh0491),InvalidBuild(MeshPos),);
        return _t04CF;
      }
    }
  }
  Femdata: MeshPos _t04D1 = extractFemItemN((mesh0491),InvalidBuild(MeshPos),);
  return _t04D1;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos04D2 (Femdata: MeshPos pos04D3)
{
  bool _t04D4 = extractFemItem(WorldTest(MeshPos), bool, pos04D3);
  if _t04D4 {
    vec3 _t04D5 = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
    int _t04D6 = extractFemItem(CellIndex(MeshPos), int, pos04D3);
    Femdata: Mesh _t04D7 = extractFem(pos04D3, Mesh);
    vec3 _t04D8 = func mesh_t_transform_0048B (_t04D5, _t04D6, _t04D7);
    Femdata: MeshPos _t04D9 = extractFemItemN((pos04D3, _t04D8),NewWorld(MeshPos),);
    return _t04D9;
  } else {
    return pos04D3;
  }
}
function vec3#8 worldPos04DA (Femdata: MeshPos pos04D3)
{
  vec3 _t04DB = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
  int _t04DC = extractFemItem(CellIndex(MeshPos), int, pos04D3);
  Femdata: Mesh _t04DD = extractFem(pos04D3, Mesh);
  vec3 _t04DE = func mesh_t_transform_0048B (_t04DB, _t04DC, _t04DD);
  return _t04DE;
}
function Femdata: MeshPos#1 $exitPos04DF (Femdata: Mesh mesh04E0, int cellId04E1, vec3 refPos04E2, vec3 dPos04E3, real[2] time04E4)
{
  int _t04E5 = -1;
  real _t04E6 = time04E4[1];
  int _t04E7 = prim $r2i01B7 (_t04E6);
  int[2] _t04E9 = func nextCell404E8 (_t04E7, cellId04E1, mesh04E0);
  int _t04EA = 0;
  int _t04EB = prim $sub01C0<int; %2> (_t04E9, _t04EA);
  bool _t04EC = prim !=0086 (_t04E5, _t04EB);
  if _t04EC {
    string _t04ED = "face ";
    real _t04EE = time04E4[1];
    int _t04EF = prim $r2i01B7 (_t04EE);
    string _t04F0 = " to ";
    real _t04F1 = time04E4[1];
    int _t04F2 = prim $r2i01B7 (_t04F1);
    int[2] _t04F3 = func nextCell404E8 (_t04F2, cellId04E1, mesh04E0);
    int _t04F4 = 1;
    int _t04F5 = prim $sub01C0<int; %2> (_t04F3, _t04F4);
    string _t04F6 = "\n";
    string _t04F7 = "got: ";
    real _t04F8 = 0.1e1;
    real _t04F9 = 0.e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.e0;
    vec4 _t04FC = [_t04F8, _t04F9, _t04FA, _t04FB];
    real _t04FD = 0.e0;
    real _t04FE = 0.1e1;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec4 _t0501 = [_t04FD, _t04FE, _t04FF, _t0500];
    real _t0502 = 0.e0;
    real _t0503 = 0.e0;
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    vec4 _t0506 = [_t0502, _t0503, _t0504, _t0505];
    real _t0507 = 0.971445146547e-16;
    real _t0508 = 0.e0;
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    vec4 _t050B = [_t0507, _t0508, _t0509, _t050A];
    tensor[4,4] _t050C = [_t04FC, _t0501, _t0506, _t050B];
    real _t050D = 0.57735026919e0;
    real _t050E = 0.57735026919e0;
    real _t050F = 0.57735026919e0;
    real _t0510 = -0.57735026919e0;
    vec4 _t0511 = [_t050D, _t050E, _t050F, _t0510];
    real _t0512 = -0.333333333333e0;
    real _t0513 = 0.666666666667e0;
    real _t0514 = -0.333333333333e0;
    real _t0515 = 0.333333333333e0;
    vec4 _t0516 = [_t0512, _t0513, _t0514, _t0515];
    real _t0517 = -0.333333333333e0;
    real _t0518 = -0.333333333333e0;
    real _t0519 = 0.666666666667e0;
    real _t051A = 0.333333333333e0;
    vec4 _t051B = [_t0517, _t0518, _t0519, _t051A];
    real _t051C = 0.971445146547e-16;
    real _t051D = 0.e0;
    real _t051E = 0.e0;
    real _t051F = 0.1e1;
    vec4 _t0520 = [_t051C, _t051D, _t051E, _t051F];
    tensor[4,4] _t0521 = [_t0511, _t0516, _t051B, _t0520];
    real _t0522 = -0.333333333333e0;
    real _t0523 = 0.666666666667e0;
    real _t0524 = -0.333333333333e0;
    real _t0525 = 0.333333333333e0;
    vec4 _t0526 = [_t0522, _t0523, _t0524, _t0525];
    real _t0527 = -0.57735026919e0;
    real _t0528 = -0.57735026919e0;
    real _t0529 = -0.57735026919e0;
    real _t052A = 0.57735026919e0;
    vec4 _t052B = [_t0527, _t0528, _t0529, _t052A];
    real _t052C = -0.333333333333e0;
    real _t052D = -0.333333333333e0;
    real _t052E = 0.666666666667e0;
    real _t052F = 0.333333333333e0;
    vec4 _t0530 = [_t052C, _t052D, _t052E, _t052F];
    real _t0531 = 0.971445146547e-16;
    real _t0532 = 0.e0;
    real _t0533 = 0.e0;
    real _t0534 = 0.1e1;
    vec4 _t0535 = [_t0531, _t0532, _t0533, _t0534];
    tensor[4,4] _t0536 = [_t0526, _t052B, _t0530, _t0535];
    real _t0537 = -0.333333333333e0;
    real _t0538 = 0.666666666667e0;
    real _t0539 = -0.333333333333e0;
    real _t053A = 0.333333333333e0;
    vec4 _t053B = [_t0537, _t0538, _t0539, _t053A];
    real _t053C = -0.333333333333e0;
    real _t053D = -0.333333333333e0;
    real _t053E = 0.666666666667e0;
    real _t053F = 0.333333333333e0;
    vec4 _t0540 = [_t053C, _t053D, _t053E, _t053F];
    real _t0541 = 0.57735026919e0;
    real _t0542 = 0.57735026919e0;
    real _t0543 = 0.57735026919e0;
    real _t0544 = -0.57735026919e0;
    vec4 _t0545 = [_t0541, _t0542, _t0543, _t0544];
    real _t0546 = 0.971445146547e-16;
    real _t0547 = 0.e0;
    real _t0548 = 0.e0;
    real _t0549 = 0.1e1;
    vec4 _t054A = [_t0546, _t0547, _t0548, _t0549];
    tensor[4,4] _t054B = [_t053B, _t0540, _t0545, _t054A];
    tensor[4,4][4] _t054C = {_t050C, _t0521, _t0536, _t054B};
    real _t054D = 0.57735026919e0;
    real _t054E = -0.1e1;
    real _t054F = -0.1e1;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    real _t0552 = 0.57735026919e0;
    real _t0553 = 0.1e1;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    vec4 _t0556 = [_t0552, _t0553, _t0554, _t0555];
    real _t0557 = 0.57735026919e0;
    real _t0558 = 0.e0;
    real _t0559 = 0.1e1;
    real _t055A = 0.e0;
    vec4 _t055B = [_t0557, _t0558, _t0559, _t055A];
    real _t055C = 0.e0;
    real _t055D = 0.e0;
    real _t055E = 0.e0;
    real _t055F = 0.1e1;
    vec4 _t0560 = [_t055C, _t055D, _t055E, _t055F];
    tensor[4,4] _t0561 = [_t0551, _t0556, _t055B, _t0560];
    real _t0562 = 0.1e1;
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.e0;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    real _t0567 = 0.e0;
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    vec4 _t056B = [_t0567, _t0568, _t0569, _t056A];
    real _t056C = 0.e0;
    real _t056D = 0.e0;
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    vec4 _t0570 = [_t056C, _t056D, _t056E, _t056F];
    real _t0571 = 0.e0;
    real _t0572 = 0.e0;
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    vec4 _t0575 = [_t0571, _t0572, _t0573, _t0574];
    tensor[4,4] _t0576 = [_t0566, _t056B, _t0570, _t0575];
    real _t0577 = 0.e0;
    real _t0578 = 0.1e1;
    real _t0579 = 0.e0;
    real _t057A = 0.e0;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    real _t057C = -0.1e1;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    vec4 _t0580 = [_t057C, _t057D, _t057E, _t057F];
    real _t0581 = 0.e0;
    real _t0582 = 0.e0;
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    vec4 _t0585 = [_t0581, _t0582, _t0583, _t0584];
    real _t0586 = 0.e0;
    real _t0587 = 0.e0;
    real _t0588 = 0.e0;
    real _t0589 = 0.1e1;
    vec4 _t058A = [_t0586, _t0587, _t0588, _t0589];
    tensor[4,4] _t058B = [_t057B, _t0580, _t0585, _t058A];
    real _t058C = 0.e0;
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    vec4 _t0590 = [_t058C, _t058D, _t058E, _t058F];
    real _t0591 = 0.e0;
    real _t0592 = 0.e0;
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    vec4 _t0595 = [_t0591, _t0592, _t0593, _t0594];
    real _t0596 = 0.1e1;
    real _t0597 = 0.e0;
    real _t0598 = 0.e0;
    real _t0599 = 0.e0;
    vec4 _t059A = [_t0596, _t0597, _t0598, _t0599];
    real _t059B = 0.e0;
    real _t059C = 0.e0;
    real _t059D = 0.e0;
    real _t059E = 0.1e1;
    vec4 _t059F = [_t059B, _t059C, _t059D, _t059E];
    tensor[4,4] _t05A0 = [_t0590, _t0595, _t059A, _t059F];
    tensor[4,4][4] _t05A1 = {_t0561, _t0576, _t058B, _t05A0};
    real _t05A2 = -0.1e1;
    real _t05A3 = -0.57735026919e0;
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.57735026919e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    vec4 _t05AB = [_t05A7, _t05A8, _t05A9, _t05AA];
    real _t05AC = 0.e0;
    real _t05AD = -0.57735026919e0;
    real _t05AE = 0.1e1;
    real _t05AF = 0.e0;
    vec4 _t05B0 = [_t05AC, _t05AD, _t05AE, _t05AF];
    real _t05B1 = 0.e0;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    vec4 _t05B5 = [_t05B1, _t05B2, _t05B3, _t05B4];
    tensor[4,4] _t05B6 = [_t05A6, _t05AB, _t05B0, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.e0;
    real _t05BA = 0.e0;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    real _t05BC = 0.1e1;
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    vec4 _t05C0 = [_t05BC, _t05BD, _t05BE, _t05BF];
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    vec4 _t05C5 = [_t05C1, _t05C2, _t05C3, _t05C4];
    real _t05C6 = 0.e0;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.1e1;
    vec4 _t05CA = [_t05C6, _t05C7, _t05C8, _t05C9];
    tensor[4,4] _t05CB = [_t05BB, _t05C0, _t05C5, _t05CA];
    real _t05CC = 0.1e1;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.e0;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    vec4 _t05D5 = [_t05D1, _t05D2, _t05D3, _t05D4];
    real _t05D6 = 0.e0;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    vec4 _t05DA = [_t05D6, _t05D7, _t05D8, _t05D9];
    real _t05DB = 0.e0;
    real _t05DC = 0.e0;
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    vec4 _t05DF = [_t05DB, _t05DC, _t05DD, _t05DE];
    tensor[4,4] _t05E0 = [_t05D0, _t05D5, _t05DA, _t05DF];
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    vec4 _t05E5 = [_t05E1, _t05E2, _t05E3, _t05E4];
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    vec4 _t05EA = [_t05E6, _t05E7, _t05E8, _t05E9];
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    vec4 _t05EF = [_t05EB, _t05EC, _t05ED, _t05EE];
    real _t05F0 = 0.e0;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    real _t05F3 = 0.1e1;
    vec4 _t05F4 = [_t05F0, _t05F1, _t05F2, _t05F3];
    tensor[4,4] _t05F5 = [_t05E5, _t05EA, _t05EF, _t05F4];
    tensor[4,4][4] _t05F6 = {_t05B6, _t05CB, _t05E0, _t05F5};
    real _t05F7 = -0.1e1;
    real _t05F8 = -0.1e1;
    real _t05F9 = 0.57735026919e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = 0.e0;
    real _t05FE = 0.57735026919e0;
    real _t05FF = 0.e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.1e1;
    real _t0603 = 0.57735026919e0;
    real _t0604 = 0.e0;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    real _t0606 = 0.e0;
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    vec4 _t060A = [_t0606, _t0607, _t0608, _t0609];
    tensor[4,4] _t060B = [_t05FB, _t0600, _t0605, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = 0.e0;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.1e1;
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    vec4 _t061F = [_t061B, _t061C, _t061D, _t061E];
    tensor[4,4] _t0620 = [_t0610, _t0615, _t061A, _t061F];
    real _t0621 = 0.1e1;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.e0;
    real _t0627 = 0.e0;
    real _t0628 = -0.1e1;
    real _t0629 = 0.e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.1e1;
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    real _t0630 = 0.e0;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    vec4 _t0634 = [_t0630, _t0631, _t0632, _t0633];
    tensor[4,4] _t0635 = [_t0625, _t062A, _t062F, _t0634];
    real _t0636 = 0.1e1;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    vec4 _t063F = [_t063B, _t063C, _t063D, _t063E];
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    vec4 _t0644 = [_t0640, _t0641, _t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    vec4 _t0649 = [_t0645, _t0646, _t0647, _t0648];
    tensor[4,4] _t064A = [_t063A, _t063F, _t0644, _t0649];
    tensor[4,4][4] _t064B = {_t060B, _t0620, _t0635, _t064A};
    tensor[4,4][4][4] _t064C = {_t054C, _t05A1, _t05F6, _t064B};
    real _t064D = time04E4[1];
    int _t064E = prim $r2i01B7 (_t064D);
    tensor[4,4][4] _t064F = prim $sub01C0<tensor[4,4][4]; %4> (_t064C, _t064E);
    real _t0650 = time04E4[1];
    int _t0651 = prim $r2i01B7 (_t0650);
    int[2] _t0652 = func nextCell404E8 (_t0651, cellId04E1, mesh04E0);
    int _t0653 = 1;
    int _t0654 = prim $sub01C0<int; %2> (_t0652, _t0653);
    tensor[4,4] _t0655 = prim $sub01C0<tensor[4,4]; %4> (_t064F, _t0654);
    string _t0656 = "\n";
    print (_t04ED, _t04EF, _t04F0, _t04F5, _t04F6, _t04F7, _t0655, _t0656);
    real _t0657 = time04E4[1];
    int _t0658 = prim $r2i01B7 (_t0657);
    int[2] _t0659 = func nextCell404E8 (_t0658, cellId04E1, mesh04E0);
    int _t065A = 0;
    int _t065B = prim $sub01C0<int; %2> (_t0659, _t065A);
    real _t065C = 0.1e1;
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.1e1;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.971445146547e-16;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.57735026919e0;
    real _t0672 = 0.57735026919e0;
    real _t0673 = 0.57735026919e0;
    real _t0674 = -0.57735026919e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = -0.333333333333e0;
    real _t0677 = 0.666666666667e0;
    real _t0678 = -0.333333333333e0;
    real _t0679 = 0.333333333333e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = -0.333333333333e0;
    real _t067C = -0.333333333333e0;
    real _t067D = 0.666666666667e0;
    real _t067E = 0.333333333333e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.971445146547e-16;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = -0.333333333333e0;
    real _t0687 = 0.666666666667e0;
    real _t0688 = -0.333333333333e0;
    real _t0689 = 0.333333333333e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = -0.57735026919e0;
    real _t068C = -0.57735026919e0;
    real _t068D = -0.57735026919e0;
    real _t068E = 0.57735026919e0;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = -0.333333333333e0;
    real _t0691 = -0.333333333333e0;
    real _t0692 = 0.666666666667e0;
    real _t0693 = 0.333333333333e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.971445146547e-16;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = -0.333333333333e0;
    real _t069C = 0.666666666667e0;
    real _t069D = -0.333333333333e0;
    real _t069E = 0.333333333333e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = -0.333333333333e0;
    real _t06A1 = -0.333333333333e0;
    real _t06A2 = 0.666666666667e0;
    real _t06A3 = 0.333333333333e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.57735026919e0;
    real _t06A6 = 0.57735026919e0;
    real _t06A7 = 0.57735026919e0;
    real _t06A8 = -0.57735026919e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.971445146547e-16;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][4] _t06B0 = {_t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.57735026919e0;
    real _t06B2 = -0.1e1;
    real _t06B3 = -0.1e1;
    real _t06B4 = 0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.57735026919e0;
    real _t06B7 = 0.1e1;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.57735026919e0;
    real _t06BC = 0.e0;
    real _t06BD = 0.1e1;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.e0;
    real _t06CC = 0.1e1;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.e0;
    real _t06DC = 0.1e1;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = -0.1e1;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    tensor[4,4][4] _t0705 = {_t06C5, _t06DA, _t06EF, _t0704};
    real _t0706 = -0.1e1;
    real _t0707 = -0.57735026919e0;
    real _t0708 = -0.1e1;
    real _t0709 = 0.1e1;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.1e1;
    real _t070C = -0.57735026919e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = -0.57735026919e0;
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    tensor[4,4] _t071A = [_t070A, _t070F, _t0714, _t0719];
    real _t071B = 0.e0;
    real _t071C = -0.1e1;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.1e1;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.1e1;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    tensor[4,4] _t072F = [_t071F, _t0724, _t0729, _t072E];
    real _t0730 = 0.1e1;
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.1e1;
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = 0.e0;
    real _t0750 = -0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    tensor[4,4][4] _t075A = {_t071A, _t072F, _t0744, _t0759};
    real _t075B = -0.1e1;
    real _t075C = -0.1e1;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.1e1;
    real _t0761 = 0.e0;
    real _t0762 = 0.57735026919e0;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.57735026919e0;
    real _t0768 = 0.e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    tensor[4,4] _t076F = [_t075F, _t0764, _t0769, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    tensor[4,4] _t0784 = [_t0774, _t0779, _t077E, _t0783];
    real _t0785 = 0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = -0.1e1;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.1e1;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    tensor[4,4] _t0799 = [_t0789, _t078E, _t0793, _t0798];
    real _t079A = 0.1e1;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.e0;
    vec4 _t079E = [_t079A, _t079B, _t079C, _t079D];
    real _t079F = 0.e0;
    real _t07A0 = 0.1e1;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    vec4 _t07A3 = [_t079F, _t07A0, _t07A1, _t07A2];
    real _t07A4 = 0.e0;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.1e1;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    real _t07AC = 0.1e1;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    tensor[4,4] _t07AE = [_t079E, _t07A3, _t07A8, _t07AD];
    tensor[4,4][4] _t07AF = {_t076F, _t0784, _t0799, _t07AE};
    tensor[4,4][4][4] _t07B0 = {_t06B0, _t0705, _t075A, _t07AF};
    real _t07B1 = time04E4[1];
    int _t07B2 = prim $r2i01B7 (_t07B1);
    tensor[4,4][4] _t07B3 = prim $sub01C0<tensor[4,4][4]; %4> (_t07B0, _t07B2);
    real _t07B4 = time04E4[1];
    int _t07B5 = prim $r2i01B7 (_t07B4);
    int[2] _t07B6 = func nextCell404E8 (_t07B5, cellId04E1, mesh04E0);
    int _t07B7 = 1;
    int _t07B8 = prim $sub01C0<int; %2> (_t07B6, _t07B7);
    tensor[4,4] _t07B9 = prim $sub01C0<tensor[4,4]; %4> (_t07B3, _t07B8);
    real _t07BA = time04E4[0];
    vec3 _t07BB = prim *0036<$[3]> (_t07BA, dPos04E3);
    vec3 _t07BC = prim +0017<$[3]> (_t07BB, refPos04E2);
    real _t07BD = _t07BC[0];
    real _t07BE = time04E4[0];
    vec3 _t07BF = prim *0036<$[3]> (_t07BE, dPos04E3);
    vec3 _t07C0 = prim +0017<$[3]> (_t07BF, refPos04E2);
    real _t07C1 = _t07C0[1];
    real _t07C2 = time04E4[0];
    vec3 _t07C3 = prim *0036<$[3]> (_t07C2, dPos04E3);
    vec3 _t07C4 = prim +0017<$[3]> (_t07C3, refPos04E2);
    real _t07C5 = _t07C4[2];
    real _t07C6 = 0.1e1;
    vec4 _t07C7 = [_t07BD, _t07C1, _t07C5, _t07C6];
    vec4 _t07C8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07B9, _t07C7);
    real _t07C9 = _t07C8[0];
    real _t07CA = 0.1e1;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.1e1;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    vec4 _t07D8 = [_t07D4, _t07D5, _t07D6, _t07D7];
    real _t07D9 = 0.971445146547e-16;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    tensor[4,4] _t07DE = [_t07CE, _t07D3, _t07D8, _t07DD];
    real _t07DF = 0.57735026919e0;
    real _t07E0 = 0.57735026919e0;
    real _t07E1 = 0.57735026919e0;
    real _t07E2 = -0.57735026919e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = -0.333333333333e0;
    real _t07E5 = 0.666666666667e0;
    real _t07E6 = -0.333333333333e0;
    real _t07E7 = 0.333333333333e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.333333333333e0;
    real _t07EA = -0.333333333333e0;
    real _t07EB = 0.666666666667e0;
    real _t07EC = 0.333333333333e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.971445146547e-16;
    real _t07EF = 0.e0;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.1e1;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    tensor[4,4] _t07F3 = [_t07E3, _t07E8, _t07ED, _t07F2];
    real _t07F4 = -0.333333333333e0;
    real _t07F5 = 0.666666666667e0;
    real _t07F6 = -0.333333333333e0;
    real _t07F7 = 0.333333333333e0;
    vec4 _t07F8 = [_t07F4, _t07F5, _t07F6, _t07F7];
    real _t07F9 = -0.57735026919e0;
    real _t07FA = -0.57735026919e0;
    real _t07FB = -0.57735026919e0;
    real _t07FC = 0.57735026919e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.333333333333e0;
    real _t07FF = -0.333333333333e0;
    real _t0800 = 0.666666666667e0;
    real _t0801 = 0.333333333333e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.971445146547e-16;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    tensor[4,4] _t0808 = [_t07F8, _t07FD, _t0802, _t0807];
    real _t0809 = -0.333333333333e0;
    real _t080A = 0.666666666667e0;
    real _t080B = -0.333333333333e0;
    real _t080C = 0.333333333333e0;
    vec4 _t080D = [_t0809, _t080A, _t080B, _t080C];
    real _t080E = -0.333333333333e0;
    real _t080F = -0.333333333333e0;
    real _t0810 = 0.666666666667e0;
    real _t0811 = 0.333333333333e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.57735026919e0;
    real _t0814 = 0.57735026919e0;
    real _t0815 = 0.57735026919e0;
    real _t0816 = -0.57735026919e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.971445146547e-16;
    real _t0819 = 0.e0;
    real _t081A = 0.e0;
    real _t081B = 0.1e1;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    tensor[4,4] _t081D = [_t080D, _t0812, _t0817, _t081C];
    tensor[4,4][4] _t081E = {_t07DE, _t07F3, _t0808, _t081D};
    real _t081F = 0.57735026919e0;
    real _t0820 = -0.1e1;
    real _t0821 = -0.1e1;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = 0.57735026919e0;
    real _t0825 = 0.1e1;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.57735026919e0;
    real _t082A = 0.e0;
    real _t082B = 0.1e1;
    real _t082C = 0.e0;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    tensor[4,4] _t0833 = [_t0823, _t0828, _t082D, _t0832];
    real _t0834 = 0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = 0.e0;
    real _t083A = 0.1e1;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = 0.e0;
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    tensor[4,4] _t0848 = [_t0838, _t083D, _t0842, _t0847];
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    real _t085B = 0.1e1;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    tensor[4,4] _t085D = [_t084D, _t0852, _t0857, _t085C];
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    vec4 _t0862 = [_t085E, _t085F, _t0860, _t0861];
    real _t0863 = 0.e0;
    real _t0864 = 0.e0;
    real _t0865 = 0.1e1;
    real _t0866 = 0.e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.1e1;
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.e0;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.1e1;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    tensor[4,4] _t0872 = [_t0862, _t0867, _t086C, _t0871];
    tensor[4,4][4] _t0873 = {_t0833, _t0848, _t085D, _t0872};
    real _t0874 = -0.1e1;
    real _t0875 = -0.57735026919e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.1e1;
    real _t087A = -0.57735026919e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = -0.57735026919e0;
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    vec4 _t0887 = [_t0883, _t0884, _t0885, _t0886];
    tensor[4,4] _t0888 = [_t0878, _t087D, _t0882, _t0887];
    real _t0889 = 0.e0;
    real _t088A = -0.1e1;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    vec4 _t089C = [_t0898, _t0899, _t089A, _t089B];
    tensor[4,4] _t089D = [_t088D, _t0892, _t0897, _t089C];
    real _t089E = 0.1e1;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.e0;
    real _t08A4 = 0.1e1;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    real _t08AD = 0.e0;
    real _t08AE = 0.e0;
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    vec4 _t08B1 = [_t08AD, _t08AE, _t08AF, _t08B0];
    tensor[4,4] _t08B2 = [_t08A2, _t08A7, _t08AC, _t08B1];
    real _t08B3 = 0.1e1;
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    vec4 _t08B7 = [_t08B3, _t08B4, _t08B5, _t08B6];
    real _t08B8 = 0.e0;
    real _t08B9 = 0.e0;
    real _t08BA = 0.1e1;
    real _t08BB = 0.e0;
    vec4 _t08BC = [_t08B8, _t08B9, _t08BA, _t08BB];
    real _t08BD = 0.e0;
    real _t08BE = -0.1e1;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    tensor[4,4] _t08C7 = [_t08B7, _t08BC, _t08C1, _t08C6];
    tensor[4,4][4] _t08C8 = {_t0888, _t089D, _t08B2, _t08C7};
    real _t08C9 = -0.1e1;
    real _t08CA = -0.1e1;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.1e1;
    real _t08CF = 0.e0;
    real _t08D0 = 0.57735026919e0;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.1e1;
    real _t08D5 = 0.57735026919e0;
    real _t08D6 = 0.e0;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.1e1;
    vec4 _t08DC = [_t08D8, _t08D9, _t08DA, _t08DB];
    tensor[4,4] _t08DD = [_t08CD, _t08D2, _t08D7, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.1e1;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.1e1;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    vec4 _t08F1 = [_t08ED, _t08EE, _t08EF, _t08F0];
    tensor[4,4] _t08F2 = [_t08E2, _t08E7, _t08EC, _t08F1];
    real _t08F3 = 0.1e1;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.e0;
    real _t08FA = -0.1e1;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    vec4 _t0906 = [_t0902, _t0903, _t0904, _t0905];
    tensor[4,4] _t0907 = [_t08F7, _t08FC, _t0901, _t0906];
    real _t0908 = 0.1e1;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.e0;
    vec4 _t090C = [_t0908, _t0909, _t090A, _t090B];
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    vec4 _t0911 = [_t090D, _t090E, _t090F, _t0910];
    real _t0912 = 0.e0;
    real _t0913 = 0.e0;
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    vec4 _t0916 = [_t0912, _t0913, _t0914, _t0915];
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    vec4 _t091B = [_t0917, _t0918, _t0919, _t091A];
    tensor[4,4] _t091C = [_t090C, _t0911, _t0916, _t091B];
    tensor[4,4][4] _t091D = {_t08DD, _t08F2, _t0907, _t091C};
    tensor[4,4][4][4] _t091E = {_t081E, _t0873, _t08C8, _t091D};
    real _t091F = time04E4[1];
    int _t0920 = prim $r2i01B7 (_t091F);
    tensor[4,4][4] _t0921 = prim $sub01C0<tensor[4,4][4]; %4> (_t091E, _t0920);
    real _t0922 = time04E4[1];
    int _t0923 = prim $r2i01B7 (_t0922);
    int[2] _t0924 = func nextCell404E8 (_t0923, cellId04E1, mesh04E0);
    int _t0925 = 1;
    int _t0926 = prim $sub01C0<int; %2> (_t0924, _t0925);
    tensor[4,4] _t0927 = prim $sub01C0<tensor[4,4]; %4> (_t0921, _t0926);
    real _t0928 = time04E4[0];
    vec3 _t0929 = prim *0036<$[3]> (_t0928, dPos04E3);
    vec3 _t092A = prim +0017<$[3]> (_t0929, refPos04E2);
    real _t092B = _t092A[0];
    real _t092C = time04E4[0];
    vec3 _t092D = prim *0036<$[3]> (_t092C, dPos04E3);
    vec3 _t092E = prim +0017<$[3]> (_t092D, refPos04E2);
    real _t092F = _t092E[1];
    real _t0930 = time04E4[0];
    vec3 _t0931 = prim *0036<$[3]> (_t0930, dPos04E3);
    vec3 _t0932 = prim +0017<$[3]> (_t0931, refPos04E2);
    real _t0933 = _t0932[2];
    real _t0934 = 0.1e1;
    vec4 _t0935 = [_t092B, _t092F, _t0933, _t0934];
    vec4 _t0936 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0927, _t0935);
    real _t0937 = _t0936[1];
    real _t0938 = 0.1e1;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.1e1;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    vec4 _t0946 = [_t0942, _t0943, _t0944, _t0945];
    real _t0947 = 0.971445146547e-16;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    vec4 _t094B = [_t0947, _t0948, _t0949, _t094A];
    tensor[4,4] _t094C = [_t093C, _t0941, _t0946, _t094B];
    real _t094D = 0.57735026919e0;
    real _t094E = 0.57735026919e0;
    real _t094F = 0.57735026919e0;
    real _t0950 = -0.57735026919e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = -0.333333333333e0;
    real _t0953 = 0.666666666667e0;
    real _t0954 = -0.333333333333e0;
    real _t0955 = 0.333333333333e0;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    real _t0957 = -0.333333333333e0;
    real _t0958 = -0.333333333333e0;
    real _t0959 = 0.666666666667e0;
    real _t095A = 0.333333333333e0;
    vec4 _t095B = [_t0957, _t0958, _t0959, _t095A];
    real _t095C = 0.971445146547e-16;
    real _t095D = 0.e0;
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    vec4 _t0960 = [_t095C, _t095D, _t095E, _t095F];
    tensor[4,4] _t0961 = [_t0951, _t0956, _t095B, _t0960];
    real _t0962 = -0.333333333333e0;
    real _t0963 = 0.666666666667e0;
    real _t0964 = -0.333333333333e0;
    real _t0965 = 0.333333333333e0;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    real _t0967 = -0.57735026919e0;
    real _t0968 = -0.57735026919e0;
    real _t0969 = -0.57735026919e0;
    real _t096A = 0.57735026919e0;
    vec4 _t096B = [_t0967, _t0968, _t0969, _t096A];
    real _t096C = -0.333333333333e0;
    real _t096D = -0.333333333333e0;
    real _t096E = 0.666666666667e0;
    real _t096F = 0.333333333333e0;
    vec4 _t0970 = [_t096C, _t096D, _t096E, _t096F];
    real _t0971 = 0.971445146547e-16;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.1e1;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    tensor[4,4] _t0976 = [_t0966, _t096B, _t0970, _t0975];
    real _t0977 = -0.333333333333e0;
    real _t0978 = 0.666666666667e0;
    real _t0979 = -0.333333333333e0;
    real _t097A = 0.333333333333e0;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    real _t097C = -0.333333333333e0;
    real _t097D = -0.333333333333e0;
    real _t097E = 0.666666666667e0;
    real _t097F = 0.333333333333e0;
    vec4 _t0980 = [_t097C, _t097D, _t097E, _t097F];
    real _t0981 = 0.57735026919e0;
    real _t0982 = 0.57735026919e0;
    real _t0983 = 0.57735026919e0;
    real _t0984 = -0.57735026919e0;
    vec4 _t0985 = [_t0981, _t0982, _t0983, _t0984];
    real _t0986 = 0.971445146547e-16;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.1e1;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    tensor[4,4] _t098B = [_t097B, _t0980, _t0985, _t098A];
    tensor[4,4][4] _t098C = {_t094C, _t0961, _t0976, _t098B};
    real _t098D = 0.57735026919e0;
    real _t098E = -0.1e1;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.57735026919e0;
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.57735026919e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    vec4 _t09A0 = [_t099C, _t099D, _t099E, _t099F];
    tensor[4,4] _t09A1 = [_t0991, _t0996, _t099B, _t09A0];
    real _t09A2 = 0.1e1;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.e0;
    real _t09A8 = 0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    real _t09B1 = 0.e0;
    real _t09B2 = 0.e0;
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    vec4 _t09B5 = [_t09B1, _t09B2, _t09B3, _t09B4];
    tensor[4,4] _t09B6 = [_t09A6, _t09AB, _t09B0, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    real _t09BC = -0.1e1;
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    vec4 _t09C0 = [_t09BC, _t09BD, _t09BE, _t09BF];
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    vec4 _t09C5 = [_t09C1, _t09C2, _t09C3, _t09C4];
    real _t09C6 = 0.e0;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    real _t09C9 = 0.1e1;
    vec4 _t09CA = [_t09C6, _t09C7, _t09C8, _t09C9];
    tensor[4,4] _t09CB = [_t09BB, _t09C0, _t09C5, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    real _t09D1 = 0.e0;
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    vec4 _t09D5 = [_t09D1, _t09D2, _t09D3, _t09D4];
    real _t09D6 = 0.1e1;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    vec4 _t09DA = [_t09D6, _t09D7, _t09D8, _t09D9];
    real _t09DB = 0.e0;
    real _t09DC = 0.e0;
    real _t09DD = 0.e0;
    real _t09DE = 0.1e1;
    vec4 _t09DF = [_t09DB, _t09DC, _t09DD, _t09DE];
    tensor[4,4] _t09E0 = [_t09D0, _t09D5, _t09DA, _t09DF];
    tensor[4,4][4] _t09E1 = {_t09A1, _t09B6, _t09CB, _t09E0};
    real _t09E2 = -0.1e1;
    real _t09E3 = -0.57735026919e0;
    real _t09E4 = -0.1e1;
    real _t09E5 = 0.1e1;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.1e1;
    real _t09E8 = -0.57735026919e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.57735026919e0;
    real _t09EE = 0.1e1;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.e0;
    real _t09F2 = 0.e0;
    real _t09F3 = 0.e0;
    real _t09F4 = 0.1e1;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    tensor[4,4] _t09F6 = [_t09E6, _t09EB, _t09F0, _t09F5];
    real _t09F7 = 0.e0;
    real _t09F8 = -0.1e1;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.1e1;
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    real _t0A06 = 0.e0;
    real _t0A07 = 0.e0;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.1e1;
    vec4 _t0A0A = [_t0A06, _t0A07, _t0A08, _t0A09];
    tensor[4,4] _t0A0B = [_t09FB, _t0A00, _t0A05, _t0A0A];
    real _t0A0C = 0.1e1;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    vec4 _t0A1F = [_t0A1B, _t0A1C, _t0A1D, _t0A1E];
    tensor[4,4] _t0A20 = [_t0A10, _t0A15, _t0A1A, _t0A1F];
    real _t0A21 = 0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = -0.1e1;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    real _t0A30 = 0.e0;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    vec4 _t0A34 = [_t0A30, _t0A31, _t0A32, _t0A33];
    tensor[4,4] _t0A35 = [_t0A25, _t0A2A, _t0A2F, _t0A34];
    tensor[4,4][4] _t0A36 = {_t09F6, _t0A0B, _t0A20, _t0A35};
    real _t0A37 = -0.1e1;
    real _t0A38 = -0.1e1;
    real _t0A39 = 0.57735026919e0;
    real _t0A3A = 0.1e1;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.57735026919e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.1e1;
    real _t0A43 = 0.57735026919e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.e0;
    real _t0A49 = 0.1e1;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    tensor[4,4] _t0A4B = [_t0A3B, _t0A40, _t0A45, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.e0;
    real _t0A5E = 0.1e1;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    tensor[4,4] _t0A60 = [_t0A50, _t0A55, _t0A5A, _t0A5F];
    real _t0A61 = 0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = -0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.1e1;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.1e1;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    tensor[4,4] _t0A75 = [_t0A65, _t0A6A, _t0A6F, _t0A74];
    real _t0A76 = 0.1e1;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.1e1;
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    real _t0A85 = 0.e0;
    real _t0A86 = 0.e0;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.1e1;
    vec4 _t0A89 = [_t0A85, _t0A86, _t0A87, _t0A88];
    tensor[4,4] _t0A8A = [_t0A7A, _t0A7F, _t0A84, _t0A89];
    tensor[4,4][4] _t0A8B = {_t0A4B, _t0A60, _t0A75, _t0A8A};
    tensor[4,4][4][4] _t0A8C = {_t098C, _t09E1, _t0A36, _t0A8B};
    real _t0A8D = time04E4[1];
    int _t0A8E = prim $r2i01B7 (_t0A8D);
    tensor[4,4][4] _t0A8F = prim $sub01C0<tensor[4,4][4]; %4> (_t0A8C, _t0A8E);
    real _t0A90 = time04E4[1];
    int _t0A91 = prim $r2i01B7 (_t0A90);
    int[2] _t0A92 = func nextCell404E8 (_t0A91, cellId04E1, mesh04E0);
    int _t0A93 = 1;
    int _t0A94 = prim $sub01C0<int; %2> (_t0A92, _t0A93);
    tensor[4,4] _t0A95 = prim $sub01C0<tensor[4,4]; %4> (_t0A8F, _t0A94);
    real _t0A96 = time04E4[0];
    vec3 _t0A97 = prim *0036<$[3]> (_t0A96, dPos04E3);
    vec3 _t0A98 = prim +0017<$[3]> (_t0A97, refPos04E2);
    real _t0A99 = _t0A98[0];
    real _t0A9A = time04E4[0];
    vec3 _t0A9B = prim *0036<$[3]> (_t0A9A, dPos04E3);
    vec3 _t0A9C = prim +0017<$[3]> (_t0A9B, refPos04E2);
    real _t0A9D = _t0A9C[1];
    real _t0A9E = time04E4[0];
    vec3 _t0A9F = prim *0036<$[3]> (_t0A9E, dPos04E3);
    vec3 _t0AA0 = prim +0017<$[3]> (_t0A9F, refPos04E2);
    real _t0AA1 = _t0AA0[2];
    real _t0AA2 = 0.1e1;
    vec4 _t0AA3 = [_t0A99, _t0A9D, _t0AA1, _t0AA2];
    vec4 _t0AA4 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A95, _t0AA3);
    real _t0AA5 = _t0AA4[2];
    vec3 _t0AA6 = [_t07C9, _t0937, _t0AA5];
    real _t0AA7 = time04E4[1];
    int _t0AA8 = prim $r2i01B7 (_t0AA7);
    int[2] _t0AA9 = func nextCell404E8 (_t0AA8, cellId04E1, mesh04E0);
    int _t0AAA = 1;
    int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
    Femdata: MeshPos _t0AAC = extractFemItemN((mesh04E0, _t065B, _t0AA6, _t0AAB),RefBuild(Mesh),);
    return _t0AAC;
  } else {
    real _t0AAD = time04E4[0];
    vec3 _t0AAE = prim *0036<$[3]> (_t0AAD, dPos04E3);
    vec3 _t0AAF = prim +0017<$[3]> (_t0AAE, refPos04E2);
    Femdata: MeshPos _t0AB0 = extractFemItemN((mesh04E0, _t0AAF),InvalidBuildBoundary(MeshPos),);
    return _t0AB0;
  }
}
function int[2]#8 nextCell404E8 (int faceIdx0AB1, int cell0AB2, Femdata: Mesh mesh0AB3)
{
  int _t0AB4 = -1;
  bool _t0AB5 = prim ==0082 (faceIdx0AB1, _t0AB4);
  if _t0AB5 {
    int _t0AB6 = -1;
    int _t0AB7 = -1;
    int[2] _t0AB8 = {_t0AB6, _t0AB7};
    return _t0AB8;
  } else {
    int _t0AB9 = 8;
    int _t0ABA = prim *0033 (cell0AB2, _t0AB9);
    int _t0ABB = 2;
    int _t0ABC = prim *0033 (faceIdx0AB1, _t0ABB);
    int _t0ABD = prim +0015 (_t0ABA, _t0ABC);
    int[2] _t0ABE = extractFemItemN((mesh0AB3, _t0ABD),CellFaceCell(Mesh),);
    return _t0ABE;
  }
}
function vec2#0 _enter0ABF (vec3 refPos0AC0, vec3 dPos0AC1)
{
  real time0AC2 = +inf;
  int face0AC3 = -1;
  real faceTime0AC4 = -inf;
  string _t0AC5 = "\ntest :";
  real _t0AC6 = 0.57735026919e0;
  real _t0AC7 = 0.57735026919e0;
  real _t0AC8 = 0.57735026919e0;
  real _t0AC9 = 0.57735026919e0;
  vec3 _t0ACA = [_t0AC7, _t0AC8, _t0AC9];
  real _t0ACB = prim •00CE<$[3]; $[3]; $[]> (_t0ACA, refPos0AC0);
  real _t0ACC = prim -0026<$[]> (_t0AC6, _t0ACB);
  real _t0ACD = 0.57735026919e0;
  real _t0ACE = 0.57735026919e0;
  real _t0ACF = 0.57735026919e0;
  vec3 _t0AD0 = [_t0ACD, _t0ACE, _t0ACF];
  real _t0AD1 = prim •00CE<$[3]; $[3]; $[]> (_t0AD0, dPos0AC1);
  real _t0AD2 = prim /0055 (_t0ACC, _t0AD1);
  string _t0AD3 = " test2: ";
  real _t0AD4 = 0.57735026919e0;
  real _t0AD5 = 0.57735026919e0;
  real _t0AD6 = 0.57735026919e0;
  vec3 _t0AD7 = [_t0AD4, _t0AD5, _t0AD6];
  real _t0AD8 = prim •00CE<$[3]; $[3]; $[]> (_t0AD7, dPos0AC1);
  string _t0AD9 = " insideTest: ";
  real _t0ADA = 0.1e1;
  real _t0ADB = 0.1e-7;
  real _t0ADC = prim +0017<$[]> (_t0ADA, _t0ADB);
  real _t0ADD = 0.1e1;
  real _t0ADE = 0.1e1;
  real _t0ADF = 0.1e1;
  vec3 _t0AE0 = [_t0ADD, _t0ADE, _t0ADF];
  real _t0AE1 = 0.57735026919e0;
  real _t0AE2 = 0.57735026919e0;
  real _t0AE3 = 0.57735026919e0;
  real _t0AE4 = 0.57735026919e0;
  vec3 _t0AE5 = [_t0AE2, _t0AE3, _t0AE4];
  real _t0AE6 = prim •00CE<$[3]; $[3]; $[]> (_t0AE5, refPos0AC0);
  real _t0AE7 = prim -0026<$[]> (_t0AE1, _t0AE6);
  real _t0AE8 = 0.57735026919e0;
  real _t0AE9 = 0.57735026919e0;
  real _t0AEA = 0.57735026919e0;
  vec3 _t0AEB = [_t0AE8, _t0AE9, _t0AEA];
  real _t0AEC = prim •00CE<$[3]; $[3]; $[]> (_t0AEB, dPos0AC1);
  real _t0AED = prim /0055 (_t0AE7, _t0AEC);
  vec3 _t0AEE = prim *0038<$[3]> (dPos0AC1, _t0AED);
  vec3 _t0AEF = prim +0017<$[3]> (refPos0AC0, _t0AEE);
  real _t0AF0 = prim •00CE<$[3]; $[3]; $[]> (_t0AE0, _t0AEF);
  bool _t0AF1 = prim >0080 (_t0ADC, _t0AF0);
  real _t0AF2 = 0.1e-7;
  real _t0AF3 = 0.1e-7;
  real _t0AF4 = 0.1e-7;
  vec3 _t0AF5 = [_t0AF2, _t0AF3, _t0AF4];
  real _t0AF6 = 0.57735026919e0;
  real _t0AF7 = 0.57735026919e0;
  real _t0AF8 = 0.57735026919e0;
  real _t0AF9 = 0.57735026919e0;
  vec3 _t0AFA = [_t0AF7, _t0AF8, _t0AF9];
  real _t0AFB = prim •00CE<$[3]; $[3]; $[]> (_t0AFA, refPos0AC0);
  real _t0AFC = prim -0026<$[]> (_t0AF6, _t0AFB);
  real _t0AFD = 0.57735026919e0;
  real _t0AFE = 0.57735026919e0;
  real _t0AFF = 0.57735026919e0;
  vec3 _t0B00 = [_t0AFD, _t0AFE, _t0AFF];
  real _t0B01 = prim •00CE<$[3]; $[3]; $[]> (_t0B00, dPos0AC1);
  real _t0B02 = prim /0055 (_t0AFC, _t0B01);
  vec3 _t0B03 = prim *0038<$[3]> (dPos0AC1, _t0B02);
  vec3 _t0B04 = prim +0017<$[3]> (refPos0AC0, _t0B03);
  vec3 _t0B05 = prim +0017<$[3]> (_t0AF5, _t0B04);
  real _t0B06 = _t0B05[0];
  real _t0B07 = -0.e0;
  bool _t0B08 = prim >0080 (_t0B06, _t0B07);
  real _t0B09 = 0.1e-7;
  real _t0B0A = 0.1e-7;
  real _t0B0B = 0.1e-7;
  vec3 _t0B0C = [_t0B09, _t0B0A, _t0B0B];
  real _t0B0D = 0.57735026919e0;
  real _t0B0E = 0.57735026919e0;
  real _t0B0F = 0.57735026919e0;
  real _t0B10 = 0.57735026919e0;
  vec3 _t0B11 = [_t0B0E, _t0B0F, _t0B10];
  real _t0B12 = prim •00CE<$[3]; $[3]; $[]> (_t0B11, refPos0AC0);
  real _t0B13 = prim -0026<$[]> (_t0B0D, _t0B12);
  real _t0B14 = 0.57735026919e0;
  real _t0B15 = 0.57735026919e0;
  real _t0B16 = 0.57735026919e0;
  vec3 _t0B17 = [_t0B14, _t0B15, _t0B16];
  real _t0B18 = prim •00CE<$[3]; $[3]; $[]> (_t0B17, dPos0AC1);
  real _t0B19 = prim /0055 (_t0B13, _t0B18);
  vec3 _t0B1A = prim *0038<$[3]> (dPos0AC1, _t0B19);
  vec3 _t0B1B = prim +0017<$[3]> (refPos0AC0, _t0B1A);
  vec3 _t0B1C = prim +0017<$[3]> (_t0B0C, _t0B1B);
  real _t0B1D = _t0B1C[1];
  real _t0B1E = -0.e0;
  bool _t0B1F = prim >0080 (_t0B1D, _t0B1E);
  real _t0B20 = 0.1e-7;
  real _t0B21 = 0.1e-7;
  real _t0B22 = 0.1e-7;
  vec3 _t0B23 = [_t0B20, _t0B21, _t0B22];
  real _t0B24 = 0.57735026919e0;
  real _t0B25 = 0.57735026919e0;
  real _t0B26 = 0.57735026919e0;
  real _t0B27 = 0.57735026919e0;
  vec3 _t0B28 = [_t0B25, _t0B26, _t0B27];
  real _t0B29 = prim •00CE<$[3]; $[3]; $[]> (_t0B28, refPos0AC0);
  real _t0B2A = prim -0026<$[]> (_t0B24, _t0B29);
  real _t0B2B = 0.57735026919e0;
  real _t0B2C = 0.57735026919e0;
  real _t0B2D = 0.57735026919e0;
  vec3 _t0B2E = [_t0B2B, _t0B2C, _t0B2D];
  real _t0B2F = prim •00CE<$[3]; $[3]; $[]> (_t0B2E, dPos0AC1);
  real _t0B30 = prim /0055 (_t0B2A, _t0B2F);
  vec3 _t0B31 = prim *0038<$[3]> (dPos0AC1, _t0B30);
  vec3 _t0B32 = prim +0017<$[3]> (refPos0AC0, _t0B31);
  vec3 _t0B33 = prim +0017<$[3]> (_t0B23, _t0B32);
  real _t0B34 = _t0B33[2];
  real _t0B35 = -0.e0;
  bool _t0B36 = prim >0080 (_t0B34, _t0B35);
  bool _t0B37 = prim $and01C4 (_t0B1F, _t0B36);
  bool _t0B38 = prim $and01C4 (_t0B08, _t0B37);
  bool _t0B39 = prim $and01C4 (_t0AF1, _t0B38);
  string _t0B3A = " dist: ";
  real _t0B3B = 0.57735026919e0;
  real _t0B3C = 0.57735026919e0;
  real _t0B3D = 0.57735026919e0;
  real _t0B3E = 0.57735026919e0;
  vec3 _t0B3F = [_t0B3C, _t0B3D, _t0B3E];
  real _t0B40 = prim •00CE<$[3]; $[3]; $[]> (_t0B3F, refPos0AC0);
  real _t0B41 = prim -0026<$[]> (_t0B3B, _t0B40);
  real _t0B42 = prim |()|00B5<$[]> (_t0B41);
  string _t0B43 = "signed dist: ";
  real _t0B44 = 0.57735026919e0;
  real _t0B45 = 0.57735026919e0;
  real _t0B46 = 0.57735026919e0;
  real _t0B47 = 0.57735026919e0;
  vec3 _t0B48 = [_t0B45, _t0B46, _t0B47];
  real _t0B49 = prim •00CE<$[3]; $[3]; $[]> (_t0B48, refPos0AC0);
  real _t0B4A = prim -0026<$[]> (_t0B44, _t0B49);
  string _t0B4B = " face: ";
  int _t0B4C = 0;
  string _t0B4D = " place: ";
  real _t0B4E = 0.57735026919e0;
  real _t0B4F = 0.57735026919e0;
  real _t0B50 = 0.57735026919e0;
  real _t0B51 = 0.57735026919e0;
  vec3 _t0B52 = [_t0B4F, _t0B50, _t0B51];
  real _t0B53 = prim •00CE<$[3]; $[3]; $[]> (_t0B52, refPos0AC0);
  real _t0B54 = prim -0026<$[]> (_t0B4E, _t0B53);
  real _t0B55 = 0.57735026919e0;
  real _t0B56 = 0.57735026919e0;
  real _t0B57 = 0.57735026919e0;
  vec3 _t0B58 = [_t0B55, _t0B56, _t0B57];
  real _t0B59 = prim •00CE<$[3]; $[3]; $[]> (_t0B58, dPos0AC1);
  real _t0B5A = prim /0055 (_t0B54, _t0B59);
  vec3 _t0B5B = prim *0038<$[3]> (dPos0AC1, _t0B5A);
  vec3 _t0B5C = prim +0017<$[3]> (refPos0AC0, _t0B5B);
  string _t0B5D = " error: ";
  real _t0B5E = 0.57735026919e0;
  real _t0B5F = 0.57735026919e0;
  real _t0B60 = 0.57735026919e0;
  real _t0B61 = 0.57735026919e0;
  vec3 _t0B62 = [_t0B5F, _t0B60, _t0B61];
  real _t0B63 = 0.57735026919e0;
  real _t0B64 = 0.57735026919e0;
  real _t0B65 = 0.57735026919e0;
  real _t0B66 = 0.57735026919e0;
  vec3 _t0B67 = [_t0B64, _t0B65, _t0B66];
  real _t0B68 = prim •00CE<$[3]; $[3]; $[]> (_t0B67, refPos0AC0);
  real _t0B69 = prim -0026<$[]> (_t0B63, _t0B68);
  real _t0B6A = 0.57735026919e0;
  real _t0B6B = 0.57735026919e0;
  real _t0B6C = 0.57735026919e0;
  vec3 _t0B6D = [_t0B6A, _t0B6B, _t0B6C];
  real _t0B6E = prim •00CE<$[3]; $[3]; $[]> (_t0B6D, dPos0AC1);
  real _t0B6F = prim /0055 (_t0B69, _t0B6E);
  vec3 _t0B70 = prim *0038<$[3]> (dPos0AC1, _t0B6F);
  vec3 _t0B71 = prim +0017<$[3]> (refPos0AC0, _t0B70);
  real _t0B72 = prim •00CE<$[3]; $[3]; $[]> (_t0B62, _t0B71);
  real _t0B73 = prim -0026<$[]> (_t0B5E, _t0B72);
  real _t0B74 = prim |()|00B5<$[]> (_t0B73);
  string _t0B75 = " offset :";
  string _t0B76 = " dp: ";
  string _t0B77 = " otherPossibleTime: ";
  string _t0B78 = "\n";
  print (_t0AC5, _t0AD2, _t0AD3, _t0AD8, _t0AD9, _t0B39, _t0B3A, _t0B42, _t0B43, _t0B4A, _t0B4B, _t0B4C, _t0B4D, _t0B5C, _t0B5D, _t0B74, _t0B75, refPos0AC0, _t0B76, dPos0AC1, _t0B77, faceTime0AC4, _t0B78);
  real _t0B79 = 0.57735026919e0;
  real _t0B7A = 0.57735026919e0;
  real _t0B7B = 0.57735026919e0;
  real _t0B7C = 0.57735026919e0;
  vec3 _t0B7D = [_t0B7A, _t0B7B, _t0B7C];
  real _t0B7E = prim •00CE<$[3]; $[3]; $[]> (_t0B7D, refPos0AC0);
  real _t0B7F = prim -0026<$[]> (_t0B79, _t0B7E);
  real _t0B80 = 0.57735026919e0;
  real _t0B81 = 0.57735026919e0;
  real _t0B82 = 0.57735026919e0;
  vec3 _t0B83 = [_t0B80, _t0B81, _t0B82];
  real _t0B84 = prim •00CE<$[3]; $[3]; $[]> (_t0B83, dPos0AC1);
  real _t0B85 = prim /0055 (_t0B7F, _t0B84);
  real _t0B86 = -0.1e-7;
  bool _t0B87 = prim >=007E (_t0B85, _t0B86);
  real _t0B88 = 0.57735026919e0;
  real _t0B89 = 0.57735026919e0;
  real _t0B8A = 0.57735026919e0;
  real _t0B8B = 0.57735026919e0;
  vec3 _t0B8C = [_t0B89, _t0B8A, _t0B8B];
  real _t0B8D = prim •00CE<$[3]; $[3]; $[]> (_t0B8C, refPos0AC0);
  real _t0B8E = prim -0026<$[]> (_t0B88, _t0B8D);
  real _t0B8F = 0.57735026919e0;
  real _t0B90 = 0.57735026919e0;
  real _t0B91 = 0.57735026919e0;
  vec3 _t0B92 = [_t0B8F, _t0B90, _t0B91];
  real _t0B93 = prim •00CE<$[3]; $[3]; $[]> (_t0B92, dPos0AC1);
  real _t0B94 = prim /0055 (_t0B8E, _t0B93);
  bool _t0B95 = prim >0080 (time0AC2, _t0B94);
  real _t0B96 = 0.57735026919e0;
  real _t0B97 = 0.57735026919e0;
  real _t0B98 = 0.57735026919e0;
  vec3 _t0B99 = [_t0B96, _t0B97, _t0B98];
  real _t0B9A = prim •00CE<$[3]; $[3]; $[]> (_t0B99, dPos0AC1);
  real _t0B9B = prim |()|00B5<$[]> (_t0B9A);
  real _t0B9C = 0.1e-7;
  bool _t0B9D = prim >=007E (_t0B9B, _t0B9C);
  bool _t0B9E = prim $and01C4 (_t0B95, _t0B9D);
  bool _t0B9F = prim $and01C4 (_t0B87, _t0B9E);
  if _t0B9F {
    real _t0BA0 = 0.1e1;
    real _t0BA1 = 0.1e-7;
    real _t0BA2 = prim +0017<$[]> (_t0BA0, _t0BA1);
    real _t0BA3 = 0.1e1;
    real _t0BA4 = 0.1e1;
    real _t0BA5 = 0.1e1;
    vec3 _t0BA6 = [_t0BA3, _t0BA4, _t0BA5];
    real _t0BA7 = 0.57735026919e0;
    real _t0BA8 = 0.57735026919e0;
    real _t0BA9 = 0.57735026919e0;
    real _t0BAA = 0.57735026919e0;
    vec3 _t0BAB = [_t0BA8, _t0BA9, _t0BAA];
    real _t0BAC = prim •00CE<$[3]; $[3]; $[]> (_t0BAB, refPos0AC0);
    real _t0BAD = prim -0026<$[]> (_t0BA7, _t0BAC);
    real _t0BAE = 0.57735026919e0;
    real _t0BAF = 0.57735026919e0;
    real _t0BB0 = 0.57735026919e0;
    vec3 _t0BB1 = [_t0BAE, _t0BAF, _t0BB0];
    real _t0BB2 = prim •00CE<$[3]; $[3]; $[]> (_t0BB1, dPos0AC1);
    real _t0BB3 = prim /0055 (_t0BAD, _t0BB2);
    vec3 _t0BB4 = prim *0038<$[3]> (dPos0AC1, _t0BB3);
    vec3 _t0BB5 = prim +0017<$[3]> (refPos0AC0, _t0BB4);
    real _t0BB6 = prim •00CE<$[3]; $[3]; $[]> (_t0BA6, _t0BB5);
    bool _t0BB7 = prim >0080 (_t0BA2, _t0BB6);
    real _t0BB8 = 0.1e-7;
    real _t0BB9 = 0.1e-7;
    real _t0BBA = 0.1e-7;
    vec3 _t0BBB = [_t0BB8, _t0BB9, _t0BBA];
    real _t0BBC = 0.57735026919e0;
    real _t0BBD = 0.57735026919e0;
    real _t0BBE = 0.57735026919e0;
    real _t0BBF = 0.57735026919e0;
    vec3 _t0BC0 = [_t0BBD, _t0BBE, _t0BBF];
    real _t0BC1 = prim •00CE<$[3]; $[3]; $[]> (_t0BC0, refPos0AC0);
    real _t0BC2 = prim -0026<$[]> (_t0BBC, _t0BC1);
    real _t0BC3 = 0.57735026919e0;
    real _t0BC4 = 0.57735026919e0;
    real _t0BC5 = 0.57735026919e0;
    vec3 _t0BC6 = [_t0BC3, _t0BC4, _t0BC5];
    real _t0BC7 = prim •00CE<$[3]; $[3]; $[]> (_t0BC6, dPos0AC1);
    real _t0BC8 = prim /0055 (_t0BC2, _t0BC7);
    vec3 _t0BC9 = prim *0038<$[3]> (dPos0AC1, _t0BC8);
    vec3 _t0BCA = prim +0017<$[3]> (refPos0AC0, _t0BC9);
    vec3 _t0BCB = prim +0017<$[3]> (_t0BBB, _t0BCA);
    real _t0BCC = _t0BCB[0];
    real _t0BCD = -0.e0;
    bool _t0BCE = prim >0080 (_t0BCC, _t0BCD);
    real _t0BCF = 0.1e-7;
    real _t0BD0 = 0.1e-7;
    real _t0BD1 = 0.1e-7;
    vec3 _t0BD2 = [_t0BCF, _t0BD0, _t0BD1];
    real _t0BD3 = 0.57735026919e0;
    real _t0BD4 = 0.57735026919e0;
    real _t0BD5 = 0.57735026919e0;
    real _t0BD6 = 0.57735026919e0;
    vec3 _t0BD7 = [_t0BD4, _t0BD5, _t0BD6];
    real _t0BD8 = prim •00CE<$[3]; $[3]; $[]> (_t0BD7, refPos0AC0);
    real _t0BD9 = prim -0026<$[]> (_t0BD3, _t0BD8);
    real _t0BDA = 0.57735026919e0;
    real _t0BDB = 0.57735026919e0;
    real _t0BDC = 0.57735026919e0;
    vec3 _t0BDD = [_t0BDA, _t0BDB, _t0BDC];
    real _t0BDE = prim •00CE<$[3]; $[3]; $[]> (_t0BDD, dPos0AC1);
    real _t0BDF = prim /0055 (_t0BD9, _t0BDE);
    vec3 _t0BE0 = prim *0038<$[3]> (dPos0AC1, _t0BDF);
    vec3 _t0BE1 = prim +0017<$[3]> (refPos0AC0, _t0BE0);
    vec3 _t0BE2 = prim +0017<$[3]> (_t0BD2, _t0BE1);
    real _t0BE3 = _t0BE2[1];
    real _t0BE4 = -0.e0;
    bool _t0BE5 = prim >0080 (_t0BE3, _t0BE4);
    real _t0BE6 = 0.1e-7;
    real _t0BE7 = 0.1e-7;
    real _t0BE8 = 0.1e-7;
    vec3 _t0BE9 = [_t0BE6, _t0BE7, _t0BE8];
    real _t0BEA = 0.57735026919e0;
    real _t0BEB = 0.57735026919e0;
    real _t0BEC = 0.57735026919e0;
    real _t0BED = 0.57735026919e0;
    vec3 _t0BEE = [_t0BEB, _t0BEC, _t0BED];
    real _t0BEF = prim •00CE<$[3]; $[3]; $[]> (_t0BEE, refPos0AC0);
    real _t0BF0 = prim -0026<$[]> (_t0BEA, _t0BEF);
    real _t0BF1 = 0.57735026919e0;
    real _t0BF2 = 0.57735026919e0;
    real _t0BF3 = 0.57735026919e0;
    vec3 _t0BF4 = [_t0BF1, _t0BF2, _t0BF3];
    real _t0BF5 = prim •00CE<$[3]; $[3]; $[]> (_t0BF4, dPos0AC1);
    real _t0BF6 = prim /0055 (_t0BF0, _t0BF5);
    vec3 _t0BF7 = prim *0038<$[3]> (dPos0AC1, _t0BF6);
    vec3 _t0BF8 = prim +0017<$[3]> (refPos0AC0, _t0BF7);
    vec3 _t0BF9 = prim +0017<$[3]> (_t0BE9, _t0BF8);
    real _t0BFA = _t0BF9[2];
    real _t0BFB = -0.e0;
    bool _t0BFC = prim >0080 (_t0BFA, _t0BFB);
    bool _t0BFD = prim $and01C4 (_t0BE5, _t0BFC);
    bool _t0BFE = prim $and01C4 (_t0BCE, _t0BFD);
    bool _t0BFF = prim $and01C4 (_t0BB7, _t0BFE);
    if _t0BFF {
      string _t0C00 = "Saving at this face!";
      real _t0C01 = 0.57735026919e0;
      real _t0C02 = 0.57735026919e0;
      real _t0C03 = 0.57735026919e0;
      real _t0C04 = 0.57735026919e0;
      vec3 _t0C05 = [_t0C02, _t0C03, _t0C04];
      real _t0C06 = prim •00CE<$[3]; $[3]; $[]> (_t0C05, refPos0AC0);
      real _t0C07 = prim -0026<$[]> (_t0C01, _t0C06);
      real _t0C08 = 0.57735026919e0;
      real _t0C09 = 0.57735026919e0;
      real _t0C0A = 0.57735026919e0;
      vec3 _t0C0B = [_t0C08, _t0C09, _t0C0A];
      real _t0C0C = prim •00CE<$[3]; $[3]; $[]> (_t0C0B, dPos0AC1);
      real _t0C0D = prim /0055 (_t0C07, _t0C0C);
      real _t0C0E = 0.57735026919e0;
      real _t0C0F = 0.57735026919e0;
      real _t0C10 = 0.57735026919e0;
      real _t0C11 = 0.57735026919e0;
      vec3 _t0C12 = [_t0C0F, _t0C10, _t0C11];
      real _t0C13 = prim •00CE<$[3]; $[3]; $[]> (_t0C12, refPos0AC0);
      real _t0C14 = prim -0026<$[]> (_t0C0E, _t0C13);
      real _t0C15 = 0.57735026919e0;
      real _t0C16 = 0.57735026919e0;
      real _t0C17 = 0.57735026919e0;
      vec3 _t0C18 = [_t0C15, _t0C16, _t0C17];
      real _t0C19 = prim •00CE<$[3]; $[3]; $[]> (_t0C18, dPos0AC1);
      real _t0C1A = prim /0055 (_t0C14, _t0C19);
      bool _t0C1B = prim >0080 (time0AC2, _t0C1A);
      string _t0C1C = "\n";
      print (_t0C00, _t0C0D, _t0C1B, _t0C1C);
      real _t0C1D = 0.57735026919e0;
      real _t0C1E = 0.57735026919e0;
      real _t0C1F = 0.57735026919e0;
      real _t0C20 = 0.57735026919e0;
      vec3 _t0C21 = [_t0C1E, _t0C1F, _t0C20];
      real _t0C22 = prim •00CE<$[3]; $[3]; $[]> (_t0C21, refPos0AC0);
      real _t0C23 = prim -0026<$[]> (_t0C1D, _t0C22);
      real _t0C24 = 0.57735026919e0;
      real _t0C25 = 0.57735026919e0;
      real _t0C26 = 0.57735026919e0;
      vec3 _t0C27 = [_t0C24, _t0C25, _t0C26];
      real _t0C28 = prim •00CE<$[3]; $[3]; $[]> (_t0C27, dPos0AC1);
      time0AC2 = prim /0055 (_t0C23, _t0C28);
      face0AC3 = 0;
    }
  }
  string _t0C29 = "\ntest :";
  real _t0C2A = 0.e0;
  real _t0C2B = -0.1e1;
  real _t0C2C = 0.e0;
  real _t0C2D = 0.e0;
  vec3 _t0C2E = [_t0C2B, _t0C2C, _t0C2D];
  real _t0C2F = prim •00CE<$[3]; $[3]; $[]> (_t0C2E, refPos0AC0);
  real _t0C30 = prim -0026<$[]> (_t0C2A, _t0C2F);
  real _t0C31 = -0.1e1;
  real _t0C32 = 0.e0;
  real _t0C33 = 0.e0;
  vec3 _t0C34 = [_t0C31, _t0C32, _t0C33];
  real _t0C35 = prim •00CE<$[3]; $[3]; $[]> (_t0C34, dPos0AC1);
  real _t0C36 = prim /0055 (_t0C30, _t0C35);
  string _t0C37 = " test2: ";
  real _t0C38 = -0.1e1;
  real _t0C39 = 0.e0;
  real _t0C3A = 0.e0;
  vec3 _t0C3B = [_t0C38, _t0C39, _t0C3A];
  real _t0C3C = prim •00CE<$[3]; $[3]; $[]> (_t0C3B, dPos0AC1);
  string _t0C3D = " insideTest: ";
  real _t0C3E = 0.1e1;
  real _t0C3F = 0.1e-7;
  real _t0C40 = prim +0017<$[]> (_t0C3E, _t0C3F);
  real _t0C41 = 0.1e1;
  real _t0C42 = 0.1e1;
  real _t0C43 = 0.1e1;
  vec3 _t0C44 = [_t0C41, _t0C42, _t0C43];
  real _t0C45 = 0.e0;
  real _t0C46 = -0.1e1;
  real _t0C47 = 0.e0;
  real _t0C48 = 0.e0;
  vec3 _t0C49 = [_t0C46, _t0C47, _t0C48];
  real _t0C4A = prim •00CE<$[3]; $[3]; $[]> (_t0C49, refPos0AC0);
  real _t0C4B = prim -0026<$[]> (_t0C45, _t0C4A);
  real _t0C4C = -0.1e1;
  real _t0C4D = 0.e0;
  real _t0C4E = 0.e0;
  vec3 _t0C4F = [_t0C4C, _t0C4D, _t0C4E];
  real _t0C50 = prim •00CE<$[3]; $[3]; $[]> (_t0C4F, dPos0AC1);
  real _t0C51 = prim /0055 (_t0C4B, _t0C50);
  vec3 _t0C52 = prim *0038<$[3]> (dPos0AC1, _t0C51);
  vec3 _t0C53 = prim +0017<$[3]> (refPos0AC0, _t0C52);
  real _t0C54 = prim •00CE<$[3]; $[3]; $[]> (_t0C44, _t0C53);
  bool _t0C55 = prim >0080 (_t0C40, _t0C54);
  real _t0C56 = 0.1e-7;
  real _t0C57 = 0.1e-7;
  real _t0C58 = 0.1e-7;
  vec3 _t0C59 = [_t0C56, _t0C57, _t0C58];
  real _t0C5A = 0.e0;
  real _t0C5B = -0.1e1;
  real _t0C5C = 0.e0;
  real _t0C5D = 0.e0;
  vec3 _t0C5E = [_t0C5B, _t0C5C, _t0C5D];
  real _t0C5F = prim •00CE<$[3]; $[3]; $[]> (_t0C5E, refPos0AC0);
  real _t0C60 = prim -0026<$[]> (_t0C5A, _t0C5F);
  real _t0C61 = -0.1e1;
  real _t0C62 = 0.e0;
  real _t0C63 = 0.e0;
  vec3 _t0C64 = [_t0C61, _t0C62, _t0C63];
  real _t0C65 = prim •00CE<$[3]; $[3]; $[]> (_t0C64, dPos0AC1);
  real _t0C66 = prim /0055 (_t0C60, _t0C65);
  vec3 _t0C67 = prim *0038<$[3]> (dPos0AC1, _t0C66);
  vec3 _t0C68 = prim +0017<$[3]> (refPos0AC0, _t0C67);
  vec3 _t0C69 = prim +0017<$[3]> (_t0C59, _t0C68);
  real _t0C6A = _t0C69[0];
  real _t0C6B = -0.e0;
  bool _t0C6C = prim >0080 (_t0C6A, _t0C6B);
  real _t0C6D = 0.1e-7;
  real _t0C6E = 0.1e-7;
  real _t0C6F = 0.1e-7;
  vec3 _t0C70 = [_t0C6D, _t0C6E, _t0C6F];
  real _t0C71 = 0.e0;
  real _t0C72 = -0.1e1;
  real _t0C73 = 0.e0;
  real _t0C74 = 0.e0;
  vec3 _t0C75 = [_t0C72, _t0C73, _t0C74];
  real _t0C76 = prim •00CE<$[3]; $[3]; $[]> (_t0C75, refPos0AC0);
  real _t0C77 = prim -0026<$[]> (_t0C71, _t0C76);
  real _t0C78 = -0.1e1;
  real _t0C79 = 0.e0;
  real _t0C7A = 0.e0;
  vec3 _t0C7B = [_t0C78, _t0C79, _t0C7A];
  real _t0C7C = prim •00CE<$[3]; $[3]; $[]> (_t0C7B, dPos0AC1);
  real _t0C7D = prim /0055 (_t0C77, _t0C7C);
  vec3 _t0C7E = prim *0038<$[3]> (dPos0AC1, _t0C7D);
  vec3 _t0C7F = prim +0017<$[3]> (refPos0AC0, _t0C7E);
  vec3 _t0C80 = prim +0017<$[3]> (_t0C70, _t0C7F);
  real _t0C81 = _t0C80[1];
  real _t0C82 = -0.e0;
  bool _t0C83 = prim >0080 (_t0C81, _t0C82);
  real _t0C84 = 0.1e-7;
  real _t0C85 = 0.1e-7;
  real _t0C86 = 0.1e-7;
  vec3 _t0C87 = [_t0C84, _t0C85, _t0C86];
  real _t0C88 = 0.e0;
  real _t0C89 = -0.1e1;
  real _t0C8A = 0.e0;
  real _t0C8B = 0.e0;
  vec3 _t0C8C = [_t0C89, _t0C8A, _t0C8B];
  real _t0C8D = prim •00CE<$[3]; $[3]; $[]> (_t0C8C, refPos0AC0);
  real _t0C8E = prim -0026<$[]> (_t0C88, _t0C8D);
  real _t0C8F = -0.1e1;
  real _t0C90 = 0.e0;
  real _t0C91 = 0.e0;
  vec3 _t0C92 = [_t0C8F, _t0C90, _t0C91];
  real _t0C93 = prim •00CE<$[3]; $[3]; $[]> (_t0C92, dPos0AC1);
  real _t0C94 = prim /0055 (_t0C8E, _t0C93);
  vec3 _t0C95 = prim *0038<$[3]> (dPos0AC1, _t0C94);
  vec3 _t0C96 = prim +0017<$[3]> (refPos0AC0, _t0C95);
  vec3 _t0C97 = prim +0017<$[3]> (_t0C87, _t0C96);
  real _t0C98 = _t0C97[2];
  real _t0C99 = -0.e0;
  bool _t0C9A = prim >0080 (_t0C98, _t0C99);
  bool _t0C9B = prim $and01C4 (_t0C83, _t0C9A);
  bool _t0C9C = prim $and01C4 (_t0C6C, _t0C9B);
  bool _t0C9D = prim $and01C4 (_t0C55, _t0C9C);
  string _t0C9E = " dist: ";
  real _t0C9F = 0.e0;
  real _t0CA0 = -0.1e1;
  real _t0CA1 = 0.e0;
  real _t0CA2 = 0.e0;
  vec3 _t0CA3 = [_t0CA0, _t0CA1, _t0CA2];
  real _t0CA4 = prim •00CE<$[3]; $[3]; $[]> (_t0CA3, refPos0AC0);
  real _t0CA5 = prim -0026<$[]> (_t0C9F, _t0CA4);
  real _t0CA6 = prim |()|00B5<$[]> (_t0CA5);
  string _t0CA7 = "signed dist: ";
  real _t0CA8 = 0.e0;
  real _t0CA9 = -0.1e1;
  real _t0CAA = 0.e0;
  real _t0CAB = 0.e0;
  vec3 _t0CAC = [_t0CA9, _t0CAA, _t0CAB];
  real _t0CAD = prim •00CE<$[3]; $[3]; $[]> (_t0CAC, refPos0AC0);
  real _t0CAE = prim -0026<$[]> (_t0CA8, _t0CAD);
  string _t0CAF = " face: ";
  int _t0CB0 = 1;
  string _t0CB1 = " place: ";
  real _t0CB2 = 0.e0;
  real _t0CB3 = -0.1e1;
  real _t0CB4 = 0.e0;
  real _t0CB5 = 0.e0;
  vec3 _t0CB6 = [_t0CB3, _t0CB4, _t0CB5];
  real _t0CB7 = prim •00CE<$[3]; $[3]; $[]> (_t0CB6, refPos0AC0);
  real _t0CB8 = prim -0026<$[]> (_t0CB2, _t0CB7);
  real _t0CB9 = -0.1e1;
  real _t0CBA = 0.e0;
  real _t0CBB = 0.e0;
  vec3 _t0CBC = [_t0CB9, _t0CBA, _t0CBB];
  real _t0CBD = prim •00CE<$[3]; $[3]; $[]> (_t0CBC, dPos0AC1);
  real _t0CBE = prim /0055 (_t0CB8, _t0CBD);
  vec3 _t0CBF = prim *0038<$[3]> (dPos0AC1, _t0CBE);
  vec3 _t0CC0 = prim +0017<$[3]> (refPos0AC0, _t0CBF);
  string _t0CC1 = " error: ";
  real _t0CC2 = 0.e0;
  real _t0CC3 = -0.1e1;
  real _t0CC4 = 0.e0;
  real _t0CC5 = 0.e0;
  vec3 _t0CC6 = [_t0CC3, _t0CC4, _t0CC5];
  real _t0CC7 = 0.e0;
  real _t0CC8 = -0.1e1;
  real _t0CC9 = 0.e0;
  real _t0CCA = 0.e0;
  vec3 _t0CCB = [_t0CC8, _t0CC9, _t0CCA];
  real _t0CCC = prim •00CE<$[3]; $[3]; $[]> (_t0CCB, refPos0AC0);
  real _t0CCD = prim -0026<$[]> (_t0CC7, _t0CCC);
  real _t0CCE = -0.1e1;
  real _t0CCF = 0.e0;
  real _t0CD0 = 0.e0;
  vec3 _t0CD1 = [_t0CCE, _t0CCF, _t0CD0];
  real _t0CD2 = prim •00CE<$[3]; $[3]; $[]> (_t0CD1, dPos0AC1);
  real _t0CD3 = prim /0055 (_t0CCD, _t0CD2);
  vec3 _t0CD4 = prim *0038<$[3]> (dPos0AC1, _t0CD3);
  vec3 _t0CD5 = prim +0017<$[3]> (refPos0AC0, _t0CD4);
  real _t0CD6 = prim •00CE<$[3]; $[3]; $[]> (_t0CC6, _t0CD5);
  real _t0CD7 = prim -0026<$[]> (_t0CC2, _t0CD6);
  real _t0CD8 = prim |()|00B5<$[]> (_t0CD7);
  string _t0CD9 = " offset :";
  string _t0CDA = " dp: ";
  string _t0CDB = " otherPossibleTime: ";
  string _t0CDC = "\n";
  print (_t0C29, _t0C36, _t0C37, _t0C3C, _t0C3D, _t0C9D, _t0C9E, _t0CA6, _t0CA7, _t0CAE, _t0CAF, _t0CB0, _t0CB1, _t0CC0, _t0CC1, _t0CD8, _t0CD9, refPos0AC0, _t0CDA, dPos0AC1, _t0CDB, faceTime0AC4, _t0CDC);
  real _t0CDD = 0.e0;
  real _t0CDE = -0.1e1;
  real _t0CDF = 0.e0;
  real _t0CE0 = 0.e0;
  vec3 _t0CE1 = [_t0CDE, _t0CDF, _t0CE0];
  real _t0CE2 = prim •00CE<$[3]; $[3]; $[]> (_t0CE1, refPos0AC0);
  real _t0CE3 = prim -0026<$[]> (_t0CDD, _t0CE2);
  real _t0CE4 = -0.1e1;
  real _t0CE5 = 0.e0;
  real _t0CE6 = 0.e0;
  vec3 _t0CE7 = [_t0CE4, _t0CE5, _t0CE6];
  real _t0CE8 = prim •00CE<$[3]; $[3]; $[]> (_t0CE7, dPos0AC1);
  real _t0CE9 = prim /0055 (_t0CE3, _t0CE8);
  real _t0CEA = -0.1e-7;
  bool _t0CEB = prim >=007E (_t0CE9, _t0CEA);
  real _t0CEC = 0.e0;
  real _t0CED = -0.1e1;
  real _t0CEE = 0.e0;
  real _t0CEF = 0.e0;
  vec3 _t0CF0 = [_t0CED, _t0CEE, _t0CEF];
  real _t0CF1 = prim •00CE<$[3]; $[3]; $[]> (_t0CF0, refPos0AC0);
  real _t0CF2 = prim -0026<$[]> (_t0CEC, _t0CF1);
  real _t0CF3 = -0.1e1;
  real _t0CF4 = 0.e0;
  real _t0CF5 = 0.e0;
  vec3 _t0CF6 = [_t0CF3, _t0CF4, _t0CF5];
  real _t0CF7 = prim •00CE<$[3]; $[3]; $[]> (_t0CF6, dPos0AC1);
  real _t0CF8 = prim /0055 (_t0CF2, _t0CF7);
  bool _t0CF9 = prim >0080 (time0AC2, _t0CF8);
  real _t0CFA = -0.1e1;
  real _t0CFB = 0.e0;
  real _t0CFC = 0.e0;
  vec3 _t0CFD = [_t0CFA, _t0CFB, _t0CFC];
  real _t0CFE = prim •00CE<$[3]; $[3]; $[]> (_t0CFD, dPos0AC1);
  real _t0CFF = prim |()|00B5<$[]> (_t0CFE);
  real _t0D00 = 0.1e-7;
  bool _t0D01 = prim >=007E (_t0CFF, _t0D00);
  bool _t0D02 = prim $and01C4 (_t0CF9, _t0D01);
  bool _t0D03 = prim $and01C4 (_t0CEB, _t0D02);
  if _t0D03 {
    real _t0D04 = 0.1e1;
    real _t0D05 = 0.1e-7;
    real _t0D06 = prim +0017<$[]> (_t0D04, _t0D05);
    real _t0D07 = 0.1e1;
    real _t0D08 = 0.1e1;
    real _t0D09 = 0.1e1;
    vec3 _t0D0A = [_t0D07, _t0D08, _t0D09];
    real _t0D0B = 0.e0;
    real _t0D0C = -0.1e1;
    real _t0D0D = 0.e0;
    real _t0D0E = 0.e0;
    vec3 _t0D0F = [_t0D0C, _t0D0D, _t0D0E];
    real _t0D10 = prim •00CE<$[3]; $[3]; $[]> (_t0D0F, refPos0AC0);
    real _t0D11 = prim -0026<$[]> (_t0D0B, _t0D10);
    real _t0D12 = -0.1e1;
    real _t0D13 = 0.e0;
    real _t0D14 = 0.e0;
    vec3 _t0D15 = [_t0D12, _t0D13, _t0D14];
    real _t0D16 = prim •00CE<$[3]; $[3]; $[]> (_t0D15, dPos0AC1);
    real _t0D17 = prim /0055 (_t0D11, _t0D16);
    vec3 _t0D18 = prim *0038<$[3]> (dPos0AC1, _t0D17);
    vec3 _t0D19 = prim +0017<$[3]> (refPos0AC0, _t0D18);
    real _t0D1A = prim •00CE<$[3]; $[3]; $[]> (_t0D0A, _t0D19);
    bool _t0D1B = prim >0080 (_t0D06, _t0D1A);
    real _t0D1C = 0.1e-7;
    real _t0D1D = 0.1e-7;
    real _t0D1E = 0.1e-7;
    vec3 _t0D1F = [_t0D1C, _t0D1D, _t0D1E];
    real _t0D20 = 0.e0;
    real _t0D21 = -0.1e1;
    real _t0D22 = 0.e0;
    real _t0D23 = 0.e0;
    vec3 _t0D24 = [_t0D21, _t0D22, _t0D23];
    real _t0D25 = prim •00CE<$[3]; $[3]; $[]> (_t0D24, refPos0AC0);
    real _t0D26 = prim -0026<$[]> (_t0D20, _t0D25);
    real _t0D27 = -0.1e1;
    real _t0D28 = 0.e0;
    real _t0D29 = 0.e0;
    vec3 _t0D2A = [_t0D27, _t0D28, _t0D29];
    real _t0D2B = prim •00CE<$[3]; $[3]; $[]> (_t0D2A, dPos0AC1);
    real _t0D2C = prim /0055 (_t0D26, _t0D2B);
    vec3 _t0D2D = prim *0038<$[3]> (dPos0AC1, _t0D2C);
    vec3 _t0D2E = prim +0017<$[3]> (refPos0AC0, _t0D2D);
    vec3 _t0D2F = prim +0017<$[3]> (_t0D1F, _t0D2E);
    real _t0D30 = _t0D2F[0];
    real _t0D31 = -0.e0;
    bool _t0D32 = prim >0080 (_t0D30, _t0D31);
    real _t0D33 = 0.1e-7;
    real _t0D34 = 0.1e-7;
    real _t0D35 = 0.1e-7;
    vec3 _t0D36 = [_t0D33, _t0D34, _t0D35];
    real _t0D37 = 0.e0;
    real _t0D38 = -0.1e1;
    real _t0D39 = 0.e0;
    real _t0D3A = 0.e0;
    vec3 _t0D3B = [_t0D38, _t0D39, _t0D3A];
    real _t0D3C = prim •00CE<$[3]; $[3]; $[]> (_t0D3B, refPos0AC0);
    real _t0D3D = prim -0026<$[]> (_t0D37, _t0D3C);
    real _t0D3E = -0.1e1;
    real _t0D3F = 0.e0;
    real _t0D40 = 0.e0;
    vec3 _t0D41 = [_t0D3E, _t0D3F, _t0D40];
    real _t0D42 = prim •00CE<$[3]; $[3]; $[]> (_t0D41, dPos0AC1);
    real _t0D43 = prim /0055 (_t0D3D, _t0D42);
    vec3 _t0D44 = prim *0038<$[3]> (dPos0AC1, _t0D43);
    vec3 _t0D45 = prim +0017<$[3]> (refPos0AC0, _t0D44);
    vec3 _t0D46 = prim +0017<$[3]> (_t0D36, _t0D45);
    real _t0D47 = _t0D46[1];
    real _t0D48 = -0.e0;
    bool _t0D49 = prim >0080 (_t0D47, _t0D48);
    real _t0D4A = 0.1e-7;
    real _t0D4B = 0.1e-7;
    real _t0D4C = 0.1e-7;
    vec3 _t0D4D = [_t0D4A, _t0D4B, _t0D4C];
    real _t0D4E = 0.e0;
    real _t0D4F = -0.1e1;
    real _t0D50 = 0.e0;
    real _t0D51 = 0.e0;
    vec3 _t0D52 = [_t0D4F, _t0D50, _t0D51];
    real _t0D53 = prim •00CE<$[3]; $[3]; $[]> (_t0D52, refPos0AC0);
    real _t0D54 = prim -0026<$[]> (_t0D4E, _t0D53);
    real _t0D55 = -0.1e1;
    real _t0D56 = 0.e0;
    real _t0D57 = 0.e0;
    vec3 _t0D58 = [_t0D55, _t0D56, _t0D57];
    real _t0D59 = prim •00CE<$[3]; $[3]; $[]> (_t0D58, dPos0AC1);
    real _t0D5A = prim /0055 (_t0D54, _t0D59);
    vec3 _t0D5B = prim *0038<$[3]> (dPos0AC1, _t0D5A);
    vec3 _t0D5C = prim +0017<$[3]> (refPos0AC0, _t0D5B);
    vec3 _t0D5D = prim +0017<$[3]> (_t0D4D, _t0D5C);
    real _t0D5E = _t0D5D[2];
    real _t0D5F = -0.e0;
    bool _t0D60 = prim >0080 (_t0D5E, _t0D5F);
    bool _t0D61 = prim $and01C4 (_t0D49, _t0D60);
    bool _t0D62 = prim $and01C4 (_t0D32, _t0D61);
    bool _t0D63 = prim $and01C4 (_t0D1B, _t0D62);
    if _t0D63 {
      string _t0D64 = "Saving at this face!";
      real _t0D65 = 0.e0;
      real _t0D66 = -0.1e1;
      real _t0D67 = 0.e0;
      real _t0D68 = 0.e0;
      vec3 _t0D69 = [_t0D66, _t0D67, _t0D68];
      real _t0D6A = prim •00CE<$[3]; $[3]; $[]> (_t0D69, refPos0AC0);
      real _t0D6B = prim -0026<$[]> (_t0D65, _t0D6A);
      real _t0D6C = -0.1e1;
      real _t0D6D = 0.e0;
      real _t0D6E = 0.e0;
      vec3 _t0D6F = [_t0D6C, _t0D6D, _t0D6E];
      real _t0D70 = prim •00CE<$[3]; $[3]; $[]> (_t0D6F, dPos0AC1);
      real _t0D71 = prim /0055 (_t0D6B, _t0D70);
      real _t0D72 = 0.e0;
      real _t0D73 = -0.1e1;
      real _t0D74 = 0.e0;
      real _t0D75 = 0.e0;
      vec3 _t0D76 = [_t0D73, _t0D74, _t0D75];
      real _t0D77 = prim •00CE<$[3]; $[3]; $[]> (_t0D76, refPos0AC0);
      real _t0D78 = prim -0026<$[]> (_t0D72, _t0D77);
      real _t0D79 = -0.1e1;
      real _t0D7A = 0.e0;
      real _t0D7B = 0.e0;
      vec3 _t0D7C = [_t0D79, _t0D7A, _t0D7B];
      real _t0D7D = prim •00CE<$[3]; $[3]; $[]> (_t0D7C, dPos0AC1);
      real _t0D7E = prim /0055 (_t0D78, _t0D7D);
      bool _t0D7F = prim >0080 (time0AC2, _t0D7E);
      string _t0D80 = "\n";
      print (_t0D64, _t0D71, _t0D7F, _t0D80);
      real _t0D81 = 0.e0;
      real _t0D82 = -0.1e1;
      real _t0D83 = 0.e0;
      real _t0D84 = 0.e0;
      vec3 _t0D85 = [_t0D82, _t0D83, _t0D84];
      real _t0D86 = prim •00CE<$[3]; $[3]; $[]> (_t0D85, refPos0AC0);
      real _t0D87 = prim -0026<$[]> (_t0D81, _t0D86);
      real _t0D88 = -0.1e1;
      real _t0D89 = 0.e0;
      real _t0D8A = 0.e0;
      vec3 _t0D8B = [_t0D88, _t0D89, _t0D8A];
      real _t0D8C = prim •00CE<$[3]; $[3]; $[]> (_t0D8B, dPos0AC1);
      time0AC2 = prim /0055 (_t0D87, _t0D8C);
      face0AC3 = 1;
    }
  }
  string _t0D8D = "\ntest :";
  real _t0D8E = 0.e0;
  real _t0D8F = 0.e0;
  real _t0D90 = -0.1e1;
  real _t0D91 = 0.e0;
  vec3 _t0D92 = [_t0D8F, _t0D90, _t0D91];
  real _t0D93 = prim •00CE<$[3]; $[3]; $[]> (_t0D92, refPos0AC0);
  real _t0D94 = prim -0026<$[]> (_t0D8E, _t0D93);
  real _t0D95 = 0.e0;
  real _t0D96 = -0.1e1;
  real _t0D97 = 0.e0;
  vec3 _t0D98 = [_t0D95, _t0D96, _t0D97];
  real _t0D99 = prim •00CE<$[3]; $[3]; $[]> (_t0D98, dPos0AC1);
  real _t0D9A = prim /0055 (_t0D94, _t0D99);
  string _t0D9B = " test2: ";
  real _t0D9C = 0.e0;
  real _t0D9D = -0.1e1;
  real _t0D9E = 0.e0;
  vec3 _t0D9F = [_t0D9C, _t0D9D, _t0D9E];
  real _t0DA0 = prim •00CE<$[3]; $[3]; $[]> (_t0D9F, dPos0AC1);
  string _t0DA1 = " insideTest: ";
  real _t0DA2 = 0.1e1;
  real _t0DA3 = 0.1e-7;
  real _t0DA4 = prim +0017<$[]> (_t0DA2, _t0DA3);
  real _t0DA5 = 0.1e1;
  real _t0DA6 = 0.1e1;
  real _t0DA7 = 0.1e1;
  vec3 _t0DA8 = [_t0DA5, _t0DA6, _t0DA7];
  real _t0DA9 = 0.e0;
  real _t0DAA = 0.e0;
  real _t0DAB = -0.1e1;
  real _t0DAC = 0.e0;
  vec3 _t0DAD = [_t0DAA, _t0DAB, _t0DAC];
  real _t0DAE = prim •00CE<$[3]; $[3]; $[]> (_t0DAD, refPos0AC0);
  real _t0DAF = prim -0026<$[]> (_t0DA9, _t0DAE);
  real _t0DB0 = 0.e0;
  real _t0DB1 = -0.1e1;
  real _t0DB2 = 0.e0;
  vec3 _t0DB3 = [_t0DB0, _t0DB1, _t0DB2];
  real _t0DB4 = prim •00CE<$[3]; $[3]; $[]> (_t0DB3, dPos0AC1);
  real _t0DB5 = prim /0055 (_t0DAF, _t0DB4);
  vec3 _t0DB6 = prim *0038<$[3]> (dPos0AC1, _t0DB5);
  vec3 _t0DB7 = prim +0017<$[3]> (refPos0AC0, _t0DB6);
  real _t0DB8 = prim •00CE<$[3]; $[3]; $[]> (_t0DA8, _t0DB7);
  bool _t0DB9 = prim >0080 (_t0DA4, _t0DB8);
  real _t0DBA = 0.1e-7;
  real _t0DBB = 0.1e-7;
  real _t0DBC = 0.1e-7;
  vec3 _t0DBD = [_t0DBA, _t0DBB, _t0DBC];
  real _t0DBE = 0.e0;
  real _t0DBF = 0.e0;
  real _t0DC0 = -0.1e1;
  real _t0DC1 = 0.e0;
  vec3 _t0DC2 = [_t0DBF, _t0DC0, _t0DC1];
  real _t0DC3 = prim •00CE<$[3]; $[3]; $[]> (_t0DC2, refPos0AC0);
  real _t0DC4 = prim -0026<$[]> (_t0DBE, _t0DC3);
  real _t0DC5 = 0.e0;
  real _t0DC6 = -0.1e1;
  real _t0DC7 = 0.e0;
  vec3 _t0DC8 = [_t0DC5, _t0DC6, _t0DC7];
  real _t0DC9 = prim •00CE<$[3]; $[3]; $[]> (_t0DC8, dPos0AC1);
  real _t0DCA = prim /0055 (_t0DC4, _t0DC9);
  vec3 _t0DCB = prim *0038<$[3]> (dPos0AC1, _t0DCA);
  vec3 _t0DCC = prim +0017<$[3]> (refPos0AC0, _t0DCB);
  vec3 _t0DCD = prim +0017<$[3]> (_t0DBD, _t0DCC);
  real _t0DCE = _t0DCD[0];
  real _t0DCF = -0.e0;
  bool _t0DD0 = prim >0080 (_t0DCE, _t0DCF);
  real _t0DD1 = 0.1e-7;
  real _t0DD2 = 0.1e-7;
  real _t0DD3 = 0.1e-7;
  vec3 _t0DD4 = [_t0DD1, _t0DD2, _t0DD3];
  real _t0DD5 = 0.e0;
  real _t0DD6 = 0.e0;
  real _t0DD7 = -0.1e1;
  real _t0DD8 = 0.e0;
  vec3 _t0DD9 = [_t0DD6, _t0DD7, _t0DD8];
  real _t0DDA = prim •00CE<$[3]; $[3]; $[]> (_t0DD9, refPos0AC0);
  real _t0DDB = prim -0026<$[]> (_t0DD5, _t0DDA);
  real _t0DDC = 0.e0;
  real _t0DDD = -0.1e1;
  real _t0DDE = 0.e0;
  vec3 _t0DDF = [_t0DDC, _t0DDD, _t0DDE];
  real _t0DE0 = prim •00CE<$[3]; $[3]; $[]> (_t0DDF, dPos0AC1);
  real _t0DE1 = prim /0055 (_t0DDB, _t0DE0);
  vec3 _t0DE2 = prim *0038<$[3]> (dPos0AC1, _t0DE1);
  vec3 _t0DE3 = prim +0017<$[3]> (refPos0AC0, _t0DE2);
  vec3 _t0DE4 = prim +0017<$[3]> (_t0DD4, _t0DE3);
  real _t0DE5 = _t0DE4[1];
  real _t0DE6 = -0.e0;
  bool _t0DE7 = prim >0080 (_t0DE5, _t0DE6);
  real _t0DE8 = 0.1e-7;
  real _t0DE9 = 0.1e-7;
  real _t0DEA = 0.1e-7;
  vec3 _t0DEB = [_t0DE8, _t0DE9, _t0DEA];
  real _t0DEC = 0.e0;
  real _t0DED = 0.e0;
  real _t0DEE = -0.1e1;
  real _t0DEF = 0.e0;
  vec3 _t0DF0 = [_t0DED, _t0DEE, _t0DEF];
  real _t0DF1 = prim •00CE<$[3]; $[3]; $[]> (_t0DF0, refPos0AC0);
  real _t0DF2 = prim -0026<$[]> (_t0DEC, _t0DF1);
  real _t0DF3 = 0.e0;
  real _t0DF4 = -0.1e1;
  real _t0DF5 = 0.e0;
  vec3 _t0DF6 = [_t0DF3, _t0DF4, _t0DF5];
  real _t0DF7 = prim •00CE<$[3]; $[3]; $[]> (_t0DF6, dPos0AC1);
  real _t0DF8 = prim /0055 (_t0DF2, _t0DF7);
  vec3 _t0DF9 = prim *0038<$[3]> (dPos0AC1, _t0DF8);
  vec3 _t0DFA = prim +0017<$[3]> (refPos0AC0, _t0DF9);
  vec3 _t0DFB = prim +0017<$[3]> (_t0DEB, _t0DFA);
  real _t0DFC = _t0DFB[2];
  real _t0DFD = -0.e0;
  bool _t0DFE = prim >0080 (_t0DFC, _t0DFD);
  bool _t0DFF = prim $and01C4 (_t0DE7, _t0DFE);
  bool _t0E00 = prim $and01C4 (_t0DD0, _t0DFF);
  bool _t0E01 = prim $and01C4 (_t0DB9, _t0E00);
  string _t0E02 = " dist: ";
  real _t0E03 = 0.e0;
  real _t0E04 = 0.e0;
  real _t0E05 = -0.1e1;
  real _t0E06 = 0.e0;
  vec3 _t0E07 = [_t0E04, _t0E05, _t0E06];
  real _t0E08 = prim •00CE<$[3]; $[3]; $[]> (_t0E07, refPos0AC0);
  real _t0E09 = prim -0026<$[]> (_t0E03, _t0E08);
  real _t0E0A = prim |()|00B5<$[]> (_t0E09);
  string _t0E0B = "signed dist: ";
  real _t0E0C = 0.e0;
  real _t0E0D = 0.e0;
  real _t0E0E = -0.1e1;
  real _t0E0F = 0.e0;
  vec3 _t0E10 = [_t0E0D, _t0E0E, _t0E0F];
  real _t0E11 = prim •00CE<$[3]; $[3]; $[]> (_t0E10, refPos0AC0);
  real _t0E12 = prim -0026<$[]> (_t0E0C, _t0E11);
  string _t0E13 = " face: ";
  int _t0E14 = 2;
  string _t0E15 = " place: ";
  real _t0E16 = 0.e0;
  real _t0E17 = 0.e0;
  real _t0E18 = -0.1e1;
  real _t0E19 = 0.e0;
  vec3 _t0E1A = [_t0E17, _t0E18, _t0E19];
  real _t0E1B = prim •00CE<$[3]; $[3]; $[]> (_t0E1A, refPos0AC0);
  real _t0E1C = prim -0026<$[]> (_t0E16, _t0E1B);
  real _t0E1D = 0.e0;
  real _t0E1E = -0.1e1;
  real _t0E1F = 0.e0;
  vec3 _t0E20 = [_t0E1D, _t0E1E, _t0E1F];
  real _t0E21 = prim •00CE<$[3]; $[3]; $[]> (_t0E20, dPos0AC1);
  real _t0E22 = prim /0055 (_t0E1C, _t0E21);
  vec3 _t0E23 = prim *0038<$[3]> (dPos0AC1, _t0E22);
  vec3 _t0E24 = prim +0017<$[3]> (refPos0AC0, _t0E23);
  string _t0E25 = " error: ";
  real _t0E26 = 0.e0;
  real _t0E27 = 0.e0;
  real _t0E28 = -0.1e1;
  real _t0E29 = 0.e0;
  vec3 _t0E2A = [_t0E27, _t0E28, _t0E29];
  real _t0E2B = 0.e0;
  real _t0E2C = 0.e0;
  real _t0E2D = -0.1e1;
  real _t0E2E = 0.e0;
  vec3 _t0E2F = [_t0E2C, _t0E2D, _t0E2E];
  real _t0E30 = prim •00CE<$[3]; $[3]; $[]> (_t0E2F, refPos0AC0);
  real _t0E31 = prim -0026<$[]> (_t0E2B, _t0E30);
  real _t0E32 = 0.e0;
  real _t0E33 = -0.1e1;
  real _t0E34 = 0.e0;
  vec3 _t0E35 = [_t0E32, _t0E33, _t0E34];
  real _t0E36 = prim •00CE<$[3]; $[3]; $[]> (_t0E35, dPos0AC1);
  real _t0E37 = prim /0055 (_t0E31, _t0E36);
  vec3 _t0E38 = prim *0038<$[3]> (dPos0AC1, _t0E37);
  vec3 _t0E39 = prim +0017<$[3]> (refPos0AC0, _t0E38);
  real _t0E3A = prim •00CE<$[3]; $[3]; $[]> (_t0E2A, _t0E39);
  real _t0E3B = prim -0026<$[]> (_t0E26, _t0E3A);
  real _t0E3C = prim |()|00B5<$[]> (_t0E3B);
  string _t0E3D = " offset :";
  string _t0E3E = " dp: ";
  string _t0E3F = " otherPossibleTime: ";
  string _t0E40 = "\n";
  print (_t0D8D, _t0D9A, _t0D9B, _t0DA0, _t0DA1, _t0E01, _t0E02, _t0E0A, _t0E0B, _t0E12, _t0E13, _t0E14, _t0E15, _t0E24, _t0E25, _t0E3C, _t0E3D, refPos0AC0, _t0E3E, dPos0AC1, _t0E3F, faceTime0AC4, _t0E40);
  real _t0E41 = 0.e0;
  real _t0E42 = 0.e0;
  real _t0E43 = -0.1e1;
  real _t0E44 = 0.e0;
  vec3 _t0E45 = [_t0E42, _t0E43, _t0E44];
  real _t0E46 = prim •00CE<$[3]; $[3]; $[]> (_t0E45, refPos0AC0);
  real _t0E47 = prim -0026<$[]> (_t0E41, _t0E46);
  real _t0E48 = 0.e0;
  real _t0E49 = -0.1e1;
  real _t0E4A = 0.e0;
  vec3 _t0E4B = [_t0E48, _t0E49, _t0E4A];
  real _t0E4C = prim •00CE<$[3]; $[3]; $[]> (_t0E4B, dPos0AC1);
  real _t0E4D = prim /0055 (_t0E47, _t0E4C);
  real _t0E4E = -0.1e-7;
  bool _t0E4F = prim >=007E (_t0E4D, _t0E4E);
  real _t0E50 = 0.e0;
  real _t0E51 = 0.e0;
  real _t0E52 = -0.1e1;
  real _t0E53 = 0.e0;
  vec3 _t0E54 = [_t0E51, _t0E52, _t0E53];
  real _t0E55 = prim •00CE<$[3]; $[3]; $[]> (_t0E54, refPos0AC0);
  real _t0E56 = prim -0026<$[]> (_t0E50, _t0E55);
  real _t0E57 = 0.e0;
  real _t0E58 = -0.1e1;
  real _t0E59 = 0.e0;
  vec3 _t0E5A = [_t0E57, _t0E58, _t0E59];
  real _t0E5B = prim •00CE<$[3]; $[3]; $[]> (_t0E5A, dPos0AC1);
  real _t0E5C = prim /0055 (_t0E56, _t0E5B);
  bool _t0E5D = prim >0080 (time0AC2, _t0E5C);
  real _t0E5E = 0.e0;
  real _t0E5F = -0.1e1;
  real _t0E60 = 0.e0;
  vec3 _t0E61 = [_t0E5E, _t0E5F, _t0E60];
  real _t0E62 = prim •00CE<$[3]; $[3]; $[]> (_t0E61, dPos0AC1);
  real _t0E63 = prim |()|00B5<$[]> (_t0E62);
  real _t0E64 = 0.1e-7;
  bool _t0E65 = prim >=007E (_t0E63, _t0E64);
  bool _t0E66 = prim $and01C4 (_t0E5D, _t0E65);
  bool _t0E67 = prim $and01C4 (_t0E4F, _t0E66);
  if _t0E67 {
    real _t0E68 = 0.1e1;
    real _t0E69 = 0.1e-7;
    real _t0E6A = prim +0017<$[]> (_t0E68, _t0E69);
    real _t0E6B = 0.1e1;
    real _t0E6C = 0.1e1;
    real _t0E6D = 0.1e1;
    vec3 _t0E6E = [_t0E6B, _t0E6C, _t0E6D];
    real _t0E6F = 0.e0;
    real _t0E70 = 0.e0;
    real _t0E71 = -0.1e1;
    real _t0E72 = 0.e0;
    vec3 _t0E73 = [_t0E70, _t0E71, _t0E72];
    real _t0E74 = prim •00CE<$[3]; $[3]; $[]> (_t0E73, refPos0AC0);
    real _t0E75 = prim -0026<$[]> (_t0E6F, _t0E74);
    real _t0E76 = 0.e0;
    real _t0E77 = -0.1e1;
    real _t0E78 = 0.e0;
    vec3 _t0E79 = [_t0E76, _t0E77, _t0E78];
    real _t0E7A = prim •00CE<$[3]; $[3]; $[]> (_t0E79, dPos0AC1);
    real _t0E7B = prim /0055 (_t0E75, _t0E7A);
    vec3 _t0E7C = prim *0038<$[3]> (dPos0AC1, _t0E7B);
    vec3 _t0E7D = prim +0017<$[3]> (refPos0AC0, _t0E7C);
    real _t0E7E = prim •00CE<$[3]; $[3]; $[]> (_t0E6E, _t0E7D);
    bool _t0E7F = prim >0080 (_t0E6A, _t0E7E);
    real _t0E80 = 0.1e-7;
    real _t0E81 = 0.1e-7;
    real _t0E82 = 0.1e-7;
    vec3 _t0E83 = [_t0E80, _t0E81, _t0E82];
    real _t0E84 = 0.e0;
    real _t0E85 = 0.e0;
    real _t0E86 = -0.1e1;
    real _t0E87 = 0.e0;
    vec3 _t0E88 = [_t0E85, _t0E86, _t0E87];
    real _t0E89 = prim •00CE<$[3]; $[3]; $[]> (_t0E88, refPos0AC0);
    real _t0E8A = prim -0026<$[]> (_t0E84, _t0E89);
    real _t0E8B = 0.e0;
    real _t0E8C = -0.1e1;
    real _t0E8D = 0.e0;
    vec3 _t0E8E = [_t0E8B, _t0E8C, _t0E8D];
    real _t0E8F = prim •00CE<$[3]; $[3]; $[]> (_t0E8E, dPos0AC1);
    real _t0E90 = prim /0055 (_t0E8A, _t0E8F);
    vec3 _t0E91 = prim *0038<$[3]> (dPos0AC1, _t0E90);
    vec3 _t0E92 = prim +0017<$[3]> (refPos0AC0, _t0E91);
    vec3 _t0E93 = prim +0017<$[3]> (_t0E83, _t0E92);
    real _t0E94 = _t0E93[0];
    real _t0E95 = -0.e0;
    bool _t0E96 = prim >0080 (_t0E94, _t0E95);
    real _t0E97 = 0.1e-7;
    real _t0E98 = 0.1e-7;
    real _t0E99 = 0.1e-7;
    vec3 _t0E9A = [_t0E97, _t0E98, _t0E99];
    real _t0E9B = 0.e0;
    real _t0E9C = 0.e0;
    real _t0E9D = -0.1e1;
    real _t0E9E = 0.e0;
    vec3 _t0E9F = [_t0E9C, _t0E9D, _t0E9E];
    real _t0EA0 = prim •00CE<$[3]; $[3]; $[]> (_t0E9F, refPos0AC0);
    real _t0EA1 = prim -0026<$[]> (_t0E9B, _t0EA0);
    real _t0EA2 = 0.e0;
    real _t0EA3 = -0.1e1;
    real _t0EA4 = 0.e0;
    vec3 _t0EA5 = [_t0EA2, _t0EA3, _t0EA4];
    real _t0EA6 = prim •00CE<$[3]; $[3]; $[]> (_t0EA5, dPos0AC1);
    real _t0EA7 = prim /0055 (_t0EA1, _t0EA6);
    vec3 _t0EA8 = prim *0038<$[3]> (dPos0AC1, _t0EA7);
    vec3 _t0EA9 = prim +0017<$[3]> (refPos0AC0, _t0EA8);
    vec3 _t0EAA = prim +0017<$[3]> (_t0E9A, _t0EA9);
    real _t0EAB = _t0EAA[1];
    real _t0EAC = -0.e0;
    bool _t0EAD = prim >0080 (_t0EAB, _t0EAC);
    real _t0EAE = 0.1e-7;
    real _t0EAF = 0.1e-7;
    real _t0EB0 = 0.1e-7;
    vec3 _t0EB1 = [_t0EAE, _t0EAF, _t0EB0];
    real _t0EB2 = 0.e0;
    real _t0EB3 = 0.e0;
    real _t0EB4 = -0.1e1;
    real _t0EB5 = 0.e0;
    vec3 _t0EB6 = [_t0EB3, _t0EB4, _t0EB5];
    real _t0EB7 = prim •00CE<$[3]; $[3]; $[]> (_t0EB6, refPos0AC0);
    real _t0EB8 = prim -0026<$[]> (_t0EB2, _t0EB7);
    real _t0EB9 = 0.e0;
    real _t0EBA = -0.1e1;
    real _t0EBB = 0.e0;
    vec3 _t0EBC = [_t0EB9, _t0EBA, _t0EBB];
    real _t0EBD = prim •00CE<$[3]; $[3]; $[]> (_t0EBC, dPos0AC1);
    real _t0EBE = prim /0055 (_t0EB8, _t0EBD);
    vec3 _t0EBF = prim *0038<$[3]> (dPos0AC1, _t0EBE);
    vec3 _t0EC0 = prim +0017<$[3]> (refPos0AC0, _t0EBF);
    vec3 _t0EC1 = prim +0017<$[3]> (_t0EB1, _t0EC0);
    real _t0EC2 = _t0EC1[2];
    real _t0EC3 = -0.e0;
    bool _t0EC4 = prim >0080 (_t0EC2, _t0EC3);
    bool _t0EC5 = prim $and01C4 (_t0EAD, _t0EC4);
    bool _t0EC6 = prim $and01C4 (_t0E96, _t0EC5);
    bool _t0EC7 = prim $and01C4 (_t0E7F, _t0EC6);
    if _t0EC7 {
      string _t0EC8 = "Saving at this face!";
      real _t0EC9 = 0.e0;
      real _t0ECA = 0.e0;
      real _t0ECB = -0.1e1;
      real _t0ECC = 0.e0;
      vec3 _t0ECD = [_t0ECA, _t0ECB, _t0ECC];
      real _t0ECE = prim •00CE<$[3]; $[3]; $[]> (_t0ECD, refPos0AC0);
      real _t0ECF = prim -0026<$[]> (_t0EC9, _t0ECE);
      real _t0ED0 = 0.e0;
      real _t0ED1 = -0.1e1;
      real _t0ED2 = 0.e0;
      vec3 _t0ED3 = [_t0ED0, _t0ED1, _t0ED2];
      real _t0ED4 = prim •00CE<$[3]; $[3]; $[]> (_t0ED3, dPos0AC1);
      real _t0ED5 = prim /0055 (_t0ECF, _t0ED4);
      real _t0ED6 = 0.e0;
      real _t0ED7 = 0.e0;
      real _t0ED8 = -0.1e1;
      real _t0ED9 = 0.e0;
      vec3 _t0EDA = [_t0ED7, _t0ED8, _t0ED9];
      real _t0EDB = prim •00CE<$[3]; $[3]; $[]> (_t0EDA, refPos0AC0);
      real _t0EDC = prim -0026<$[]> (_t0ED6, _t0EDB);
      real _t0EDD = 0.e0;
      real _t0EDE = -0.1e1;
      real _t0EDF = 0.e0;
      vec3 _t0EE0 = [_t0EDD, _t0EDE, _t0EDF];
      real _t0EE1 = prim •00CE<$[3]; $[3]; $[]> (_t0EE0, dPos0AC1);
      real _t0EE2 = prim /0055 (_t0EDC, _t0EE1);
      bool _t0EE3 = prim >0080 (time0AC2, _t0EE2);
      string _t0EE4 = "\n";
      print (_t0EC8, _t0ED5, _t0EE3, _t0EE4);
      real _t0EE5 = 0.e0;
      real _t0EE6 = 0.e0;
      real _t0EE7 = -0.1e1;
      real _t0EE8 = 0.e0;
      vec3 _t0EE9 = [_t0EE6, _t0EE7, _t0EE8];
      real _t0EEA = prim •00CE<$[3]; $[3]; $[]> (_t0EE9, refPos0AC0);
      real _t0EEB = prim -0026<$[]> (_t0EE5, _t0EEA);
      real _t0EEC = 0.e0;
      real _t0EED = -0.1e1;
      real _t0EEE = 0.e0;
      vec3 _t0EEF = [_t0EEC, _t0EED, _t0EEE];
      real _t0EF0 = prim •00CE<$[3]; $[3]; $[]> (_t0EEF, dPos0AC1);
      time0AC2 = prim /0055 (_t0EEB, _t0EF0);
      face0AC3 = 2;
    }
  }
  string _t0EF1 = "\ntest :";
  real _t0EF2 = 0.e0;
  real _t0EF3 = 0.e0;
  real _t0EF4 = 0.e0;
  real _t0EF5 = -0.1e1;
  vec3 _t0EF6 = [_t0EF3, _t0EF4, _t0EF5];
  real _t0EF7 = prim •00CE<$[3]; $[3]; $[]> (_t0EF6, refPos0AC0);
  real _t0EF8 = prim -0026<$[]> (_t0EF2, _t0EF7);
  real _t0EF9 = 0.e0;
  real _t0EFA = 0.e0;
  real _t0EFB = -0.1e1;
  vec3 _t0EFC = [_t0EF9, _t0EFA, _t0EFB];
  real _t0EFD = prim •00CE<$[3]; $[3]; $[]> (_t0EFC, dPos0AC1);
  real _t0EFE = prim /0055 (_t0EF8, _t0EFD);
  string _t0EFF = " test2: ";
  real _t0F00 = 0.e0;
  real _t0F01 = 0.e0;
  real _t0F02 = -0.1e1;
  vec3 _t0F03 = [_t0F00, _t0F01, _t0F02];
  real _t0F04 = prim •00CE<$[3]; $[3]; $[]> (_t0F03, dPos0AC1);
  string _t0F05 = " insideTest: ";
  real _t0F06 = 0.1e1;
  real _t0F07 = 0.1e-7;
  real _t0F08 = prim +0017<$[]> (_t0F06, _t0F07);
  real _t0F09 = 0.1e1;
  real _t0F0A = 0.1e1;
  real _t0F0B = 0.1e1;
  vec3 _t0F0C = [_t0F09, _t0F0A, _t0F0B];
  real _t0F0D = 0.e0;
  real _t0F0E = 0.e0;
  real _t0F0F = 0.e0;
  real _t0F10 = -0.1e1;
  vec3 _t0F11 = [_t0F0E, _t0F0F, _t0F10];
  real _t0F12 = prim •00CE<$[3]; $[3]; $[]> (_t0F11, refPos0AC0);
  real _t0F13 = prim -0026<$[]> (_t0F0D, _t0F12);
  real _t0F14 = 0.e0;
  real _t0F15 = 0.e0;
  real _t0F16 = -0.1e1;
  vec3 _t0F17 = [_t0F14, _t0F15, _t0F16];
  real _t0F18 = prim •00CE<$[3]; $[3]; $[]> (_t0F17, dPos0AC1);
  real _t0F19 = prim /0055 (_t0F13, _t0F18);
  vec3 _t0F1A = prim *0038<$[3]> (dPos0AC1, _t0F19);
  vec3 _t0F1B = prim +0017<$[3]> (refPos0AC0, _t0F1A);
  real _t0F1C = prim •00CE<$[3]; $[3]; $[]> (_t0F0C, _t0F1B);
  bool _t0F1D = prim >0080 (_t0F08, _t0F1C);
  real _t0F1E = 0.1e-7;
  real _t0F1F = 0.1e-7;
  real _t0F20 = 0.1e-7;
  vec3 _t0F21 = [_t0F1E, _t0F1F, _t0F20];
  real _t0F22 = 0.e0;
  real _t0F23 = 0.e0;
  real _t0F24 = 0.e0;
  real _t0F25 = -0.1e1;
  vec3 _t0F26 = [_t0F23, _t0F24, _t0F25];
  real _t0F27 = prim •00CE<$[3]; $[3]; $[]> (_t0F26, refPos0AC0);
  real _t0F28 = prim -0026<$[]> (_t0F22, _t0F27);
  real _t0F29 = 0.e0;
  real _t0F2A = 0.e0;
  real _t0F2B = -0.1e1;
  vec3 _t0F2C = [_t0F29, _t0F2A, _t0F2B];
  real _t0F2D = prim •00CE<$[3]; $[3]; $[]> (_t0F2C, dPos0AC1);
  real _t0F2E = prim /0055 (_t0F28, _t0F2D);
  vec3 _t0F2F = prim *0038<$[3]> (dPos0AC1, _t0F2E);
  vec3 _t0F30 = prim +0017<$[3]> (refPos0AC0, _t0F2F);
  vec3 _t0F31 = prim +0017<$[3]> (_t0F21, _t0F30);
  real _t0F32 = _t0F31[0];
  real _t0F33 = -0.e0;
  bool _t0F34 = prim >0080 (_t0F32, _t0F33);
  real _t0F35 = 0.1e-7;
  real _t0F36 = 0.1e-7;
  real _t0F37 = 0.1e-7;
  vec3 _t0F38 = [_t0F35, _t0F36, _t0F37];
  real _t0F39 = 0.e0;
  real _t0F3A = 0.e0;
  real _t0F3B = 0.e0;
  real _t0F3C = -0.1e1;
  vec3 _t0F3D = [_t0F3A, _t0F3B, _t0F3C];
  real _t0F3E = prim •00CE<$[3]; $[3]; $[]> (_t0F3D, refPos0AC0);
  real _t0F3F = prim -0026<$[]> (_t0F39, _t0F3E);
  real _t0F40 = 0.e0;
  real _t0F41 = 0.e0;
  real _t0F42 = -0.1e1;
  vec3 _t0F43 = [_t0F40, _t0F41, _t0F42];
  real _t0F44 = prim •00CE<$[3]; $[3]; $[]> (_t0F43, dPos0AC1);
  real _t0F45 = prim /0055 (_t0F3F, _t0F44);
  vec3 _t0F46 = prim *0038<$[3]> (dPos0AC1, _t0F45);
  vec3 _t0F47 = prim +0017<$[3]> (refPos0AC0, _t0F46);
  vec3 _t0F48 = prim +0017<$[3]> (_t0F38, _t0F47);
  real _t0F49 = _t0F48[1];
  real _t0F4A = -0.e0;
  bool _t0F4B = prim >0080 (_t0F49, _t0F4A);
  real _t0F4C = 0.1e-7;
  real _t0F4D = 0.1e-7;
  real _t0F4E = 0.1e-7;
  vec3 _t0F4F = [_t0F4C, _t0F4D, _t0F4E];
  real _t0F50 = 0.e0;
  real _t0F51 = 0.e0;
  real _t0F52 = 0.e0;
  real _t0F53 = -0.1e1;
  vec3 _t0F54 = [_t0F51, _t0F52, _t0F53];
  real _t0F55 = prim •00CE<$[3]; $[3]; $[]> (_t0F54, refPos0AC0);
  real _t0F56 = prim -0026<$[]> (_t0F50, _t0F55);
  real _t0F57 = 0.e0;
  real _t0F58 = 0.e0;
  real _t0F59 = -0.1e1;
  vec3 _t0F5A = [_t0F57, _t0F58, _t0F59];
  real _t0F5B = prim •00CE<$[3]; $[3]; $[]> (_t0F5A, dPos0AC1);
  real _t0F5C = prim /0055 (_t0F56, _t0F5B);
  vec3 _t0F5D = prim *0038<$[3]> (dPos0AC1, _t0F5C);
  vec3 _t0F5E = prim +0017<$[3]> (refPos0AC0, _t0F5D);
  vec3 _t0F5F = prim +0017<$[3]> (_t0F4F, _t0F5E);
  real _t0F60 = _t0F5F[2];
  real _t0F61 = -0.e0;
  bool _t0F62 = prim >0080 (_t0F60, _t0F61);
  bool _t0F63 = prim $and01C4 (_t0F4B, _t0F62);
  bool _t0F64 = prim $and01C4 (_t0F34, _t0F63);
  bool _t0F65 = prim $and01C4 (_t0F1D, _t0F64);
  string _t0F66 = " dist: ";
  real _t0F67 = 0.e0;
  real _t0F68 = 0.e0;
  real _t0F69 = 0.e0;
  real _t0F6A = -0.1e1;
  vec3 _t0F6B = [_t0F68, _t0F69, _t0F6A];
  real _t0F6C = prim •00CE<$[3]; $[3]; $[]> (_t0F6B, refPos0AC0);
  real _t0F6D = prim -0026<$[]> (_t0F67, _t0F6C);
  real _t0F6E = prim |()|00B5<$[]> (_t0F6D);
  string _t0F6F = "signed dist: ";
  real _t0F70 = 0.e0;
  real _t0F71 = 0.e0;
  real _t0F72 = 0.e0;
  real _t0F73 = -0.1e1;
  vec3 _t0F74 = [_t0F71, _t0F72, _t0F73];
  real _t0F75 = prim •00CE<$[3]; $[3]; $[]> (_t0F74, refPos0AC0);
  real _t0F76 = prim -0026<$[]> (_t0F70, _t0F75);
  string _t0F77 = " face: ";
  int _t0F78 = 3;
  string _t0F79 = " place: ";
  real _t0F7A = 0.e0;
  real _t0F7B = 0.e0;
  real _t0F7C = 0.e0;
  real _t0F7D = -0.1e1;
  vec3 _t0F7E = [_t0F7B, _t0F7C, _t0F7D];
  real _t0F7F = prim •00CE<$[3]; $[3]; $[]> (_t0F7E, refPos0AC0);
  real _t0F80 = prim -0026<$[]> (_t0F7A, _t0F7F);
  real _t0F81 = 0.e0;
  real _t0F82 = 0.e0;
  real _t0F83 = -0.1e1;
  vec3 _t0F84 = [_t0F81, _t0F82, _t0F83];
  real _t0F85 = prim •00CE<$[3]; $[3]; $[]> (_t0F84, dPos0AC1);
  real _t0F86 = prim /0055 (_t0F80, _t0F85);
  vec3 _t0F87 = prim *0038<$[3]> (dPos0AC1, _t0F86);
  vec3 _t0F88 = prim +0017<$[3]> (refPos0AC0, _t0F87);
  string _t0F89 = " error: ";
  real _t0F8A = 0.e0;
  real _t0F8B = 0.e0;
  real _t0F8C = 0.e0;
  real _t0F8D = -0.1e1;
  vec3 _t0F8E = [_t0F8B, _t0F8C, _t0F8D];
  real _t0F8F = 0.e0;
  real _t0F90 = 0.e0;
  real _t0F91 = 0.e0;
  real _t0F92 = -0.1e1;
  vec3 _t0F93 = [_t0F90, _t0F91, _t0F92];
  real _t0F94 = prim •00CE<$[3]; $[3]; $[]> (_t0F93, refPos0AC0);
  real _t0F95 = prim -0026<$[]> (_t0F8F, _t0F94);
  real _t0F96 = 0.e0;
  real _t0F97 = 0.e0;
  real _t0F98 = -0.1e1;
  vec3 _t0F99 = [_t0F96, _t0F97, _t0F98];
  real _t0F9A = prim •00CE<$[3]; $[3]; $[]> (_t0F99, dPos0AC1);
  real _t0F9B = prim /0055 (_t0F95, _t0F9A);
  vec3 _t0F9C = prim *0038<$[3]> (dPos0AC1, _t0F9B);
  vec3 _t0F9D = prim +0017<$[3]> (refPos0AC0, _t0F9C);
  real _t0F9E = prim •00CE<$[3]; $[3]; $[]> (_t0F8E, _t0F9D);
  real _t0F9F = prim -0026<$[]> (_t0F8A, _t0F9E);
  real _t0FA0 = prim |()|00B5<$[]> (_t0F9F);
  string _t0FA1 = " offset :";
  string _t0FA2 = " dp: ";
  string _t0FA3 = " otherPossibleTime: ";
  string _t0FA4 = "\n";
  print (_t0EF1, _t0EFE, _t0EFF, _t0F04, _t0F05, _t0F65, _t0F66, _t0F6E, _t0F6F, _t0F76, _t0F77, _t0F78, _t0F79, _t0F88, _t0F89, _t0FA0, _t0FA1, refPos0AC0, _t0FA2, dPos0AC1, _t0FA3, faceTime0AC4, _t0FA4);
  real _t0FA5 = 0.e0;
  real _t0FA6 = 0.e0;
  real _t0FA7 = 0.e0;
  real _t0FA8 = -0.1e1;
  vec3 _t0FA9 = [_t0FA6, _t0FA7, _t0FA8];
  real _t0FAA = prim •00CE<$[3]; $[3]; $[]> (_t0FA9, refPos0AC0);
  real _t0FAB = prim -0026<$[]> (_t0FA5, _t0FAA);
  real _t0FAC = 0.e0;
  real _t0FAD = 0.e0;
  real _t0FAE = -0.1e1;
  vec3 _t0FAF = [_t0FAC, _t0FAD, _t0FAE];
  real _t0FB0 = prim •00CE<$[3]; $[3]; $[]> (_t0FAF, dPos0AC1);
  real _t0FB1 = prim /0055 (_t0FAB, _t0FB0);
  real _t0FB2 = -0.1e-7;
  bool _t0FB3 = prim >=007E (_t0FB1, _t0FB2);
  real _t0FB4 = 0.e0;
  real _t0FB5 = 0.e0;
  real _t0FB6 = 0.e0;
  real _t0FB7 = -0.1e1;
  vec3 _t0FB8 = [_t0FB5, _t0FB6, _t0FB7];
  real _t0FB9 = prim •00CE<$[3]; $[3]; $[]> (_t0FB8, refPos0AC0);
  real _t0FBA = prim -0026<$[]> (_t0FB4, _t0FB9);
  real _t0FBB = 0.e0;
  real _t0FBC = 0.e0;
  real _t0FBD = -0.1e1;
  vec3 _t0FBE = [_t0FBB, _t0FBC, _t0FBD];
  real _t0FBF = prim •00CE<$[3]; $[3]; $[]> (_t0FBE, dPos0AC1);
  real _t0FC0 = prim /0055 (_t0FBA, _t0FBF);
  bool _t0FC1 = prim >0080 (time0AC2, _t0FC0);
  real _t0FC2 = 0.e0;
  real _t0FC3 = 0.e0;
  real _t0FC4 = -0.1e1;
  vec3 _t0FC5 = [_t0FC2, _t0FC3, _t0FC4];
  real _t0FC6 = prim •00CE<$[3]; $[3]; $[]> (_t0FC5, dPos0AC1);
  real _t0FC7 = prim |()|00B5<$[]> (_t0FC6);
  real _t0FC8 = 0.1e-7;
  bool _t0FC9 = prim >=007E (_t0FC7, _t0FC8);
  bool _t0FCA = prim $and01C4 (_t0FC1, _t0FC9);
  bool _t0FCB = prim $and01C4 (_t0FB3, _t0FCA);
  if _t0FCB {
    real _t0FCC = 0.1e1;
    real _t0FCD = 0.1e-7;
    real _t0FCE = prim +0017<$[]> (_t0FCC, _t0FCD);
    real _t0FCF = 0.1e1;
    real _t0FD0 = 0.1e1;
    real _t0FD1 = 0.1e1;
    vec3 _t0FD2 = [_t0FCF, _t0FD0, _t0FD1];
    real _t0FD3 = 0.e0;
    real _t0FD4 = 0.e0;
    real _t0FD5 = 0.e0;
    real _t0FD6 = -0.1e1;
    vec3 _t0FD7 = [_t0FD4, _t0FD5, _t0FD6];
    real _t0FD8 = prim •00CE<$[3]; $[3]; $[]> (_t0FD7, refPos0AC0);
    real _t0FD9 = prim -0026<$[]> (_t0FD3, _t0FD8);
    real _t0FDA = 0.e0;
    real _t0FDB = 0.e0;
    real _t0FDC = -0.1e1;
    vec3 _t0FDD = [_t0FDA, _t0FDB, _t0FDC];
    real _t0FDE = prim •00CE<$[3]; $[3]; $[]> (_t0FDD, dPos0AC1);
    real _t0FDF = prim /0055 (_t0FD9, _t0FDE);
    vec3 _t0FE0 = prim *0038<$[3]> (dPos0AC1, _t0FDF);
    vec3 _t0FE1 = prim +0017<$[3]> (refPos0AC0, _t0FE0);
    real _t0FE2 = prim •00CE<$[3]; $[3]; $[]> (_t0FD2, _t0FE1);
    bool _t0FE3 = prim >0080 (_t0FCE, _t0FE2);
    real _t0FE4 = 0.1e-7;
    real _t0FE5 = 0.1e-7;
    real _t0FE6 = 0.1e-7;
    vec3 _t0FE7 = [_t0FE4, _t0FE5, _t0FE6];
    real _t0FE8 = 0.e0;
    real _t0FE9 = 0.e0;
    real _t0FEA = 0.e0;
    real _t0FEB = -0.1e1;
    vec3 _t0FEC = [_t0FE9, _t0FEA, _t0FEB];
    real _t0FED = prim •00CE<$[3]; $[3]; $[]> (_t0FEC, refPos0AC0);
    real _t0FEE = prim -0026<$[]> (_t0FE8, _t0FED);
    real _t0FEF = 0.e0;
    real _t0FF0 = 0.e0;
    real _t0FF1 = -0.1e1;
    vec3 _t0FF2 = [_t0FEF, _t0FF0, _t0FF1];
    real _t0FF3 = prim •00CE<$[3]; $[3]; $[]> (_t0FF2, dPos0AC1);
    real _t0FF4 = prim /0055 (_t0FEE, _t0FF3);
    vec3 _t0FF5 = prim *0038<$[3]> (dPos0AC1, _t0FF4);
    vec3 _t0FF6 = prim +0017<$[3]> (refPos0AC0, _t0FF5);
    vec3 _t0FF7 = prim +0017<$[3]> (_t0FE7, _t0FF6);
    real _t0FF8 = _t0FF7[0];
    real _t0FF9 = -0.e0;
    bool _t0FFA = prim >0080 (_t0FF8, _t0FF9);
    real _t0FFB = 0.1e-7;
    real _t0FFC = 0.1e-7;
    real _t0FFD = 0.1e-7;
    vec3 _t0FFE = [_t0FFB, _t0FFC, _t0FFD];
    real _t0FFF = 0.e0;
    real _t1000 = 0.e0;
    real _t1001 = 0.e0;
    real _t1002 = -0.1e1;
    vec3 _t1003 = [_t1000, _t1001, _t1002];
    real _t1004 = prim •00CE<$[3]; $[3]; $[]> (_t1003, refPos0AC0);
    real _t1005 = prim -0026<$[]> (_t0FFF, _t1004);
    real _t1006 = 0.e0;
    real _t1007 = 0.e0;
    real _t1008 = -0.1e1;
    vec3 _t1009 = [_t1006, _t1007, _t1008];
    real _t100A = prim •00CE<$[3]; $[3]; $[]> (_t1009, dPos0AC1);
    real _t100B = prim /0055 (_t1005, _t100A);
    vec3 _t100C = prim *0038<$[3]> (dPos0AC1, _t100B);
    vec3 _t100D = prim +0017<$[3]> (refPos0AC0, _t100C);
    vec3 _t100E = prim +0017<$[3]> (_t0FFE, _t100D);
    real _t100F = _t100E[1];
    real _t1010 = -0.e0;
    bool _t1011 = prim >0080 (_t100F, _t1010);
    real _t1012 = 0.1e-7;
    real _t1013 = 0.1e-7;
    real _t1014 = 0.1e-7;
    vec3 _t1015 = [_t1012, _t1013, _t1014];
    real _t1016 = 0.e0;
    real _t1017 = 0.e0;
    real _t1018 = 0.e0;
    real _t1019 = -0.1e1;
    vec3 _t101A = [_t1017, _t1018, _t1019];
    real _t101B = prim •00CE<$[3]; $[3]; $[]> (_t101A, refPos0AC0);
    real _t101C = prim -0026<$[]> (_t1016, _t101B);
    real _t101D = 0.e0;
    real _t101E = 0.e0;
    real _t101F = -0.1e1;
    vec3 _t1020 = [_t101D, _t101E, _t101F];
    real _t1021 = prim •00CE<$[3]; $[3]; $[]> (_t1020, dPos0AC1);
    real _t1022 = prim /0055 (_t101C, _t1021);
    vec3 _t1023 = prim *0038<$[3]> (dPos0AC1, _t1022);
    vec3 _t1024 = prim +0017<$[3]> (refPos0AC0, _t1023);
    vec3 _t1025 = prim +0017<$[3]> (_t1015, _t1024);
    real _t1026 = _t1025[2];
    real _t1027 = -0.e0;
    bool _t1028 = prim >0080 (_t1026, _t1027);
    bool _t1029 = prim $and01C4 (_t1011, _t1028);
    bool _t102A = prim $and01C4 (_t0FFA, _t1029);
    bool _t102B = prim $and01C4 (_t0FE3, _t102A);
    if _t102B {
      string _t102C = "Saving at this face!";
      real _t102D = 0.e0;
      real _t102E = 0.e0;
      real _t102F = 0.e0;
      real _t1030 = -0.1e1;
      vec3 _t1031 = [_t102E, _t102F, _t1030];
      real _t1032 = prim •00CE<$[3]; $[3]; $[]> (_t1031, refPos0AC0);
      real _t1033 = prim -0026<$[]> (_t102D, _t1032);
      real _t1034 = 0.e0;
      real _t1035 = 0.e0;
      real _t1036 = -0.1e1;
      vec3 _t1037 = [_t1034, _t1035, _t1036];
      real _t1038 = prim •00CE<$[3]; $[3]; $[]> (_t1037, dPos0AC1);
      real _t1039 = prim /0055 (_t1033, _t1038);
      real _t103A = 0.e0;
      real _t103B = 0.e0;
      real _t103C = 0.e0;
      real _t103D = -0.1e1;
      vec3 _t103E = [_t103B, _t103C, _t103D];
      real _t103F = prim •00CE<$[3]; $[3]; $[]> (_t103E, refPos0AC0);
      real _t1040 = prim -0026<$[]> (_t103A, _t103F);
      real _t1041 = 0.e0;
      real _t1042 = 0.e0;
      real _t1043 = -0.1e1;
      vec3 _t1044 = [_t1041, _t1042, _t1043];
      real _t1045 = prim •00CE<$[3]; $[3]; $[]> (_t1044, dPos0AC1);
      real _t1046 = prim /0055 (_t1040, _t1045);
      bool _t1047 = prim >0080 (time0AC2, _t1046);
      string _t1048 = "\n";
      print (_t102C, _t1039, _t1047, _t1048);
      real _t1049 = 0.e0;
      real _t104A = 0.e0;
      real _t104B = 0.e0;
      real _t104C = -0.1e1;
      vec3 _t104D = [_t104A, _t104B, _t104C];
      real _t104E = prim •00CE<$[3]; $[3]; $[]> (_t104D, refPos0AC0);
      real _t104F = prim -0026<$[]> (_t1049, _t104E);
      real _t1050 = 0.e0;
      real _t1051 = 0.e0;
      real _t1052 = -0.1e1;
      vec3 _t1053 = [_t1050, _t1051, _t1052];
      real _t1054 = prim •00CE<$[3]; $[3]; $[]> (_t1053, dPos0AC1);
      time0AC2 = prim /0055 (_t104F, _t1054);
      face0AC3 = 3;
    }
  }
  int _t1055 = -1;
  bool _t1056 = prim !=0086 (face0AC3, _t1055);
  real _t1057 = 0.1e1;
  real _t1058 = 0.1e-7;
  real _t1059 = prim +0017<$[]> (_t1057, _t1058);
  real _t105A = 0.1e1;
  real _t105B = 0.1e1;
  real _t105C = 0.1e1;
  vec3 _t105D = [_t105A, _t105B, _t105C];
  real _t105E = 0.e0;
  real _t105F = prim max0125 (time0AC2, _t105E);
  vec3 _t1060 = prim *0038<$[3]> (dPos0AC1, _t105F);
  vec3 _t1061 = prim +0017<$[3]> (refPos0AC0, _t1060);
  real _t1062 = prim •00CE<$[3]; $[3]; $[]> (_t105D, _t1061);
  bool _t1063 = prim >0080 (_t1059, _t1062);
  real _t1064 = 0.1e-7;
  real _t1065 = 0.1e-7;
  real _t1066 = 0.1e-7;
  vec3 _t1067 = [_t1064, _t1065, _t1066];
  real _t1068 = 0.e0;
  real _t1069 = prim max0125 (time0AC2, _t1068);
  vec3 _t106A = prim *0038<$[3]> (dPos0AC1, _t1069);
  vec3 _t106B = prim +0017<$[3]> (refPos0AC0, _t106A);
  vec3 _t106C = prim +0017<$[3]> (_t1067, _t106B);
  real _t106D = _t106C[0];
  real _t106E = -0.e0;
  bool _t106F = prim >0080 (_t106D, _t106E);
  real _t1070 = 0.1e-7;
  real _t1071 = 0.1e-7;
  real _t1072 = 0.1e-7;
  vec3 _t1073 = [_t1070, _t1071, _t1072];
  real _t1074 = 0.e0;
  real _t1075 = prim max0125 (time0AC2, _t1074);
  vec3 _t1076 = prim *0038<$[3]> (dPos0AC1, _t1075);
  vec3 _t1077 = prim +0017<$[3]> (refPos0AC0, _t1076);
  vec3 _t1078 = prim +0017<$[3]> (_t1073, _t1077);
  real _t1079 = _t1078[1];
  real _t107A = -0.e0;
  bool _t107B = prim >0080 (_t1079, _t107A);
  real _t107C = 0.1e-7;
  real _t107D = 0.1e-7;
  real _t107E = 0.1e-7;
  vec3 _t107F = [_t107C, _t107D, _t107E];
  real _t1080 = 0.e0;
  real _t1081 = prim max0125 (time0AC2, _t1080);
  vec3 _t1082 = prim *0038<$[3]> (dPos0AC1, _t1081);
  vec3 _t1083 = prim +0017<$[3]> (refPos0AC0, _t1082);
  vec3 _t1084 = prim +0017<$[3]> (_t107F, _t1083);
  real _t1085 = _t1084[2];
  real _t1086 = -0.e0;
  bool _t1087 = prim >0080 (_t1085, _t1086);
  bool _t1088 = prim $and01C4 (_t107B, _t1087);
  bool _t1089 = prim $and01C4 (_t106F, _t1088);
  bool _t108A = prim $and01C4 (_t1063, _t1089);
  bool _t108B = prim $and01C4 (_t1056, _t108A);
  if _t108B {
    string _t108C = "\nReturning via standard : ";
    real _t108D = 0.e0;
    real _t108E = prim max0125 (time0AC2, _t108D);
    real _t108F = (real)face0AC3;
    vec2 _t1090 = [_t108E, _t108F];
    string _t1091 = "\n";
    print (_t108C, _t1090, _t1091);
    real _t1092 = 0.e0;
    real _t1093 = prim max0125 (time0AC2, _t1092);
    real _t1094 = (real)face0AC3;
    vec2 _t1095 = [_t1093, _t1094];
    return _t1095;
  } else {
    real _t1096 = -0.1e1;
    real _t1097 = -0.1e1;
    vec2 _t1098 = [_t1096, _t1097];
    return _t1098;
  }
}
function vec2#2 _exit1099 (vec3 refPos0AC0, vec3 dPos0AC1, int i109A)
{
  real time109B = +inf;
  int face109C = -1;
  real faceTime109D = -inf;
  string _t109E = "\ntest :";
  real _t109F = 0.57735026919e0;
  real _t10A0 = 0.57735026919e0;
  real _t10A1 = 0.57735026919e0;
  real _t10A2 = 0.57735026919e0;
  vec3 _t10A3 = [_t10A0, _t10A1, _t10A2];
  real _t10A4 = prim •00CE<$[3]; $[3]; $[]> (_t10A3, refPos0AC0);
  real _t10A5 = prim -0026<$[]> (_t109F, _t10A4);
  real _t10A6 = 0.57735026919e0;
  real _t10A7 = 0.57735026919e0;
  real _t10A8 = 0.57735026919e0;
  vec3 _t10A9 = [_t10A6, _t10A7, _t10A8];
  real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, dPos0AC1);
  real _t10AB = prim /0055 (_t10A5, _t10AA);
  string _t10AC = " test2: ";
  real _t10AD = 0.57735026919e0;
  real _t10AE = 0.57735026919e0;
  real _t10AF = 0.57735026919e0;
  vec3 _t10B0 = [_t10AD, _t10AE, _t10AF];
  real _t10B1 = prim •00CE<$[3]; $[3]; $[]> (_t10B0, dPos0AC1);
  string _t10B2 = " insideTest: ";
  real _t10B3 = 0.1e1;
  real _t10B4 = 0.1e-7;
  real _t10B5 = prim +0017<$[]> (_t10B3, _t10B4);
  real _t10B6 = 0.1e1;
  real _t10B7 = 0.1e1;
  real _t10B8 = 0.1e1;
  vec3 _t10B9 = [_t10B6, _t10B7, _t10B8];
  real _t10BA = 0.57735026919e0;
  real _t10BB = 0.57735026919e0;
  real _t10BC = 0.57735026919e0;
  real _t10BD = 0.57735026919e0;
  vec3 _t10BE = [_t10BB, _t10BC, _t10BD];
  real _t10BF = prim •00CE<$[3]; $[3]; $[]> (_t10BE, refPos0AC0);
  real _t10C0 = prim -0026<$[]> (_t10BA, _t10BF);
  real _t10C1 = 0.57735026919e0;
  real _t10C2 = 0.57735026919e0;
  real _t10C3 = 0.57735026919e0;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, dPos0AC1);
  real _t10C6 = prim /0055 (_t10C0, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0AC1, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0AC0, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10B9, _t10C8);
  bool _t10CA = prim >0080 (_t10B5, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.57735026919e0;
  real _t10D0 = 0.57735026919e0;
  real _t10D1 = 0.57735026919e0;
  real _t10D2 = 0.57735026919e0;
  vec3 _t10D3 = [_t10D0, _t10D1, _t10D2];
  real _t10D4 = prim •00CE<$[3]; $[3]; $[]> (_t10D3, refPos0AC0);
  real _t10D5 = prim -0026<$[]> (_t10CF, _t10D4);
  real _t10D6 = 0.57735026919e0;
  real _t10D7 = 0.57735026919e0;
  real _t10D8 = 0.57735026919e0;
  vec3 _t10D9 = [_t10D6, _t10D7, _t10D8];
  real _t10DA = prim •00CE<$[3]; $[3]; $[]> (_t10D9, dPos0AC1);
  real _t10DB = prim /0055 (_t10D5, _t10DA);
  vec3 _t10DC = prim *0038<$[3]> (dPos0AC1, _t10DB);
  vec3 _t10DD = prim +0017<$[3]> (refPos0AC0, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (_t10CE, _t10DD);
  real _t10DF = _t10DE[0];
  real _t10E0 = -0.e0;
  bool _t10E1 = prim >0080 (_t10DF, _t10E0);
  real _t10E2 = 0.1e-7;
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  vec3 _t10E5 = [_t10E2, _t10E3, _t10E4];
  real _t10E6 = 0.57735026919e0;
  real _t10E7 = 0.57735026919e0;
  real _t10E8 = 0.57735026919e0;
  real _t10E9 = 0.57735026919e0;
  vec3 _t10EA = [_t10E7, _t10E8, _t10E9];
  real _t10EB = prim •00CE<$[3]; $[3]; $[]> (_t10EA, refPos0AC0);
  real _t10EC = prim -0026<$[]> (_t10E6, _t10EB);
  real _t10ED = 0.57735026919e0;
  real _t10EE = 0.57735026919e0;
  real _t10EF = 0.57735026919e0;
  vec3 _t10F0 = [_t10ED, _t10EE, _t10EF];
  real _t10F1 = prim •00CE<$[3]; $[3]; $[]> (_t10F0, dPos0AC1);
  real _t10F2 = prim /0055 (_t10EC, _t10F1);
  vec3 _t10F3 = prim *0038<$[3]> (dPos0AC1, _t10F2);
  vec3 _t10F4 = prim +0017<$[3]> (refPos0AC0, _t10F3);
  vec3 _t10F5 = prim +0017<$[3]> (_t10E5, _t10F4);
  real _t10F6 = _t10F5[1];
  real _t10F7 = -0.e0;
  bool _t10F8 = prim >0080 (_t10F6, _t10F7);
  real _t10F9 = 0.1e-7;
  real _t10FA = 0.1e-7;
  real _t10FB = 0.1e-7;
  vec3 _t10FC = [_t10F9, _t10FA, _t10FB];
  real _t10FD = 0.57735026919e0;
  real _t10FE = 0.57735026919e0;
  real _t10FF = 0.57735026919e0;
  real _t1100 = 0.57735026919e0;
  vec3 _t1101 = [_t10FE, _t10FF, _t1100];
  real _t1102 = prim •00CE<$[3]; $[3]; $[]> (_t1101, refPos0AC0);
  real _t1103 = prim -0026<$[]> (_t10FD, _t1102);
  real _t1104 = 0.57735026919e0;
  real _t1105 = 0.57735026919e0;
  real _t1106 = 0.57735026919e0;
  vec3 _t1107 = [_t1104, _t1105, _t1106];
  real _t1108 = prim •00CE<$[3]; $[3]; $[]> (_t1107, dPos0AC1);
  real _t1109 = prim /0055 (_t1103, _t1108);
  vec3 _t110A = prim *0038<$[3]> (dPos0AC1, _t1109);
  vec3 _t110B = prim +0017<$[3]> (refPos0AC0, _t110A);
  vec3 _t110C = prim +0017<$[3]> (_t10FC, _t110B);
  real _t110D = _t110C[2];
  real _t110E = -0.e0;
  bool _t110F = prim >0080 (_t110D, _t110E);
  bool _t1110 = prim $and01C4 (_t10F8, _t110F);
  bool _t1111 = prim $and01C4 (_t10E1, _t1110);
  bool _t1112 = prim $and01C4 (_t10CA, _t1111);
  string _t1113 = " dist: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  real _t1117 = 0.57735026919e0;
  vec3 _t1118 = [_t1115, _t1116, _t1117];
  real _t1119 = prim •00CE<$[3]; $[3]; $[]> (_t1118, refPos0AC0);
  real _t111A = prim -0026<$[]> (_t1114, _t1119);
  real _t111B = prim |()|00B5<$[]> (_t111A);
  string _t111C = "signed dist: ";
  real _t111D = 0.57735026919e0;
  real _t111E = 0.57735026919e0;
  real _t111F = 0.57735026919e0;
  real _t1120 = 0.57735026919e0;
  vec3 _t1121 = [_t111E, _t111F, _t1120];
  real _t1122 = prim •00CE<$[3]; $[3]; $[]> (_t1121, refPos0AC0);
  real _t1123 = prim -0026<$[]> (_t111D, _t1122);
  string _t1124 = " face: ";
  int _t1125 = 0;
  string _t1126 = " place: ";
  real _t1127 = 0.57735026919e0;
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, refPos0AC0);
  real _t112D = prim -0026<$[]> (_t1127, _t112C);
  real _t112E = 0.57735026919e0;
  real _t112F = 0.57735026919e0;
  real _t1130 = 0.57735026919e0;
  vec3 _t1131 = [_t112E, _t112F, _t1130];
  real _t1132 = prim •00CE<$[3]; $[3]; $[]> (_t1131, dPos0AC1);
  real _t1133 = prim /0055 (_t112D, _t1132);
  vec3 _t1134 = prim *0038<$[3]> (dPos0AC1, _t1133);
  vec3 _t1135 = prim +0017<$[3]> (refPos0AC0, _t1134);
  string _t1136 = " error: ";
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  real _t113A = 0.57735026919e0;
  vec3 _t113B = [_t1138, _t1139, _t113A];
  real _t113C = 0.57735026919e0;
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, refPos0AC0);
  real _t1142 = prim -0026<$[]> (_t113C, _t1141);
  real _t1143 = 0.57735026919e0;
  real _t1144 = 0.57735026919e0;
  real _t1145 = 0.57735026919e0;
  vec3 _t1146 = [_t1143, _t1144, _t1145];
  real _t1147 = prim •00CE<$[3]; $[3]; $[]> (_t1146, dPos0AC1);
  real _t1148 = prim /0055 (_t1142, _t1147);
  vec3 _t1149 = prim *0038<$[3]> (dPos0AC1, _t1148);
  vec3 _t114A = prim +0017<$[3]> (refPos0AC0, _t1149);
  real _t114B = prim •00CE<$[3]; $[3]; $[]> (_t113B, _t114A);
  real _t114C = prim -0026<$[]> (_t1137, _t114B);
  real _t114D = prim |()|00B5<$[]> (_t114C);
  string _t114E = " offset :";
  string _t114F = " dp: ";
  string _t1150 = " otherPossibleTime: ";
  string _t1151 = "\n";
  string _t1152 = "\n original face: ";
  string _t1153 = " ";
  print (_t109E, _t10AB, _t10AC, _t10B1, _t10B2, _t1112, _t1113, _t111B, _t111C, _t1123, _t1124, _t1125, _t1126, _t1135, _t1136, _t114D, _t114E, refPos0AC0, _t114F, dPos0AC1, _t1150, faceTime109D, _t1151, _t1152, i109A, _t1153);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  real _t1157 = 0.57735026919e0;
  vec3 _t1158 = [_t1155, _t1156, _t1157];
  real _t1159 = prim •00CE<$[3]; $[3]; $[]> (_t1158, refPos0AC0);
  real _t115A = prim -0026<$[]> (_t1154, _t1159);
  real _t115B = 0.57735026919e0;
  real _t115C = 0.57735026919e0;
  real _t115D = 0.57735026919e0;
  vec3 _t115E = [_t115B, _t115C, _t115D];
  real _t115F = prim •00CE<$[3]; $[3]; $[]> (_t115E, dPos0AC1);
  real _t1160 = prim /0055 (_t115A, _t115F);
  real _t1161 = -0.1e-7;
  bool _t1162 = prim >=007E (_t1160, _t1161);
  real _t1163 = 0.57735026919e0;
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  vec3 _t1167 = [_t1164, _t1165, _t1166];
  real _t1168 = prim •00CE<$[3]; $[3]; $[]> (_t1167, refPos0AC0);
  real _t1169 = prim -0026<$[]> (_t1163, _t1168);
  real _t116A = 0.57735026919e0;
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  vec3 _t116D = [_t116A, _t116B, _t116C];
  real _t116E = prim •00CE<$[3]; $[3]; $[]> (_t116D, dPos0AC1);
  real _t116F = prim /0055 (_t1169, _t116E);
  bool _t1170 = prim >0080 (time109B, _t116F);
  real _t1171 = 0.57735026919e0;
  real _t1172 = 0.57735026919e0;
  real _t1173 = 0.57735026919e0;
  vec3 _t1174 = [_t1171, _t1172, _t1173];
  real _t1175 = prim •00CE<$[3]; $[3]; $[]> (_t1174, dPos0AC1);
  real _t1176 = prim |()|00B5<$[]> (_t1175);
  real _t1177 = 0.1e-7;
  bool _t1178 = prim >=007E (_t1176, _t1177);
  bool _t1179 = prim $and01C4 (_t1170, _t1178);
  bool _t117A = prim $and01C4 (_t1162, _t1179);
  if _t117A {
    int _t117B = 0;
    bool _t117C = prim !=0086 (i109A, _t117B);
    if _t117C {
      string _t117D = "Saving at this face!";
      real _t117E = 0.57735026919e0;
      real _t117F = 0.57735026919e0;
      real _t1180 = 0.57735026919e0;
      real _t1181 = 0.57735026919e0;
      vec3 _t1182 = [_t117F, _t1180, _t1181];
      real _t1183 = prim •00CE<$[3]; $[3]; $[]> (_t1182, refPos0AC0);
      real _t1184 = prim -0026<$[]> (_t117E, _t1183);
      real _t1185 = 0.57735026919e0;
      real _t1186 = 0.57735026919e0;
      real _t1187 = 0.57735026919e0;
      vec3 _t1188 = [_t1185, _t1186, _t1187];
      real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, dPos0AC1);
      real _t118A = prim /0055 (_t1184, _t1189);
      real _t118B = 0.57735026919e0;
      real _t118C = 0.57735026919e0;
      real _t118D = 0.57735026919e0;
      real _t118E = 0.57735026919e0;
      vec3 _t118F = [_t118C, _t118D, _t118E];
      real _t1190 = prim •00CE<$[3]; $[3]; $[]> (_t118F, refPos0AC0);
      real _t1191 = prim -0026<$[]> (_t118B, _t1190);
      real _t1192 = 0.57735026919e0;
      real _t1193 = 0.57735026919e0;
      real _t1194 = 0.57735026919e0;
      vec3 _t1195 = [_t1192, _t1193, _t1194];
      real _t1196 = prim •00CE<$[3]; $[3]; $[]> (_t1195, dPos0AC1);
      real _t1197 = prim /0055 (_t1191, _t1196);
      bool _t1198 = prim >0080 (time109B, _t1197);
      string _t1199 = "\n";
      print (_t117D, _t118A, _t1198, _t1199);
      real _t119A = 0.57735026919e0;
      real _t119B = 0.57735026919e0;
      real _t119C = 0.57735026919e0;
      real _t119D = 0.57735026919e0;
      vec3 _t119E = [_t119B, _t119C, _t119D];
      real _t119F = prim •00CE<$[3]; $[3]; $[]> (_t119E, refPos0AC0);
      real _t11A0 = prim -0026<$[]> (_t119A, _t119F);
      real _t11A1 = 0.57735026919e0;
      real _t11A2 = 0.57735026919e0;
      real _t11A3 = 0.57735026919e0;
      vec3 _t11A4 = [_t11A1, _t11A2, _t11A3];
      real _t11A5 = prim •00CE<$[3]; $[3]; $[]> (_t11A4, dPos0AC1);
      time109B = prim /0055 (_t11A0, _t11A5);
      face109C = 0;
    } else {
      real _t11A6 = 0.57735026919e0;
      real _t11A7 = 0.57735026919e0;
      real _t11A8 = 0.57735026919e0;
      real _t11A9 = 0.57735026919e0;
      vec3 _t11AA = [_t11A7, _t11A8, _t11A9];
      real _t11AB = prim •00CE<$[3]; $[3]; $[]> (_t11AA, refPos0AC0);
      real _t11AC = prim -0026<$[]> (_t11A6, _t11AB);
      real _t11AD = 0.57735026919e0;
      real _t11AE = 0.57735026919e0;
      real _t11AF = 0.57735026919e0;
      vec3 _t11B0 = [_t11AD, _t11AE, _t11AF];
      real _t11B1 = prim •00CE<$[3]; $[3]; $[]> (_t11B0, dPos0AC1);
      faceTime109D = prim /0055 (_t11AC, _t11B1);
      string _t11B2 = "Saving backup time: ";
      string _t11B3 = "\n";
      print (_t11B2, faceTime109D, _t11B3);
    }
  }
  string _t11B4 = "\ntest :";
  real _t11B5 = 0.e0;
  real _t11B6 = -0.1e1;
  real _t11B7 = 0.e0;
  real _t11B8 = 0.e0;
  vec3 _t11B9 = [_t11B6, _t11B7, _t11B8];
  real _t11BA = prim •00CE<$[3]; $[3]; $[]> (_t11B9, refPos0AC0);
  real _t11BB = prim -0026<$[]> (_t11B5, _t11BA);
  real _t11BC = -0.1e1;
  real _t11BD = 0.e0;
  real _t11BE = 0.e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, dPos0AC1);
  real _t11C1 = prim /0055 (_t11BB, _t11C0);
  string _t11C2 = " test2: ";
  real _t11C3 = -0.1e1;
  real _t11C4 = 0.e0;
  real _t11C5 = 0.e0;
  vec3 _t11C6 = [_t11C3, _t11C4, _t11C5];
  real _t11C7 = prim •00CE<$[3]; $[3]; $[]> (_t11C6, dPos0AC1);
  string _t11C8 = " insideTest: ";
  real _t11C9 = 0.1e1;
  real _t11CA = 0.1e-7;
  real _t11CB = prim +0017<$[]> (_t11C9, _t11CA);
  real _t11CC = 0.1e1;
  real _t11CD = 0.1e1;
  real _t11CE = 0.1e1;
  vec3 _t11CF = [_t11CC, _t11CD, _t11CE];
  real _t11D0 = 0.e0;
  real _t11D1 = -0.1e1;
  real _t11D2 = 0.e0;
  real _t11D3 = 0.e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, refPos0AC0);
  real _t11D6 = prim -0026<$[]> (_t11D0, _t11D5);
  real _t11D7 = -0.1e1;
  real _t11D8 = 0.e0;
  real _t11D9 = 0.e0;
  vec3 _t11DA = [_t11D7, _t11D8, _t11D9];
  real _t11DB = prim •00CE<$[3]; $[3]; $[]> (_t11DA, dPos0AC1);
  real _t11DC = prim /0055 (_t11D6, _t11DB);
  vec3 _t11DD = prim *0038<$[3]> (dPos0AC1, _t11DC);
  vec3 _t11DE = prim +0017<$[3]> (refPos0AC0, _t11DD);
  real _t11DF = prim •00CE<$[3]; $[3]; $[]> (_t11CF, _t11DE);
  bool _t11E0 = prim >0080 (_t11CB, _t11DF);
  real _t11E1 = 0.1e-7;
  real _t11E2 = 0.1e-7;
  real _t11E3 = 0.1e-7;
  vec3 _t11E4 = [_t11E1, _t11E2, _t11E3];
  real _t11E5 = 0.e0;
  real _t11E6 = -0.1e1;
  real _t11E7 = 0.e0;
  real _t11E8 = 0.e0;
  vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
  real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0AC0);
  real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
  real _t11EC = -0.1e1;
  real _t11ED = 0.e0;
  real _t11EE = 0.e0;
  vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
  real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0AC1);
  real _t11F1 = prim /0055 (_t11EB, _t11F0);
  vec3 _t11F2 = prim *0038<$[3]> (dPos0AC1, _t11F1);
  vec3 _t11F3 = prim +0017<$[3]> (refPos0AC0, _t11F2);
  vec3 _t11F4 = prim +0017<$[3]> (_t11E4, _t11F3);
  real _t11F5 = _t11F4[0];
  real _t11F6 = -0.e0;
  bool _t11F7 = prim >0080 (_t11F5, _t11F6);
  real _t11F8 = 0.1e-7;
  real _t11F9 = 0.1e-7;
  real _t11FA = 0.1e-7;
  vec3 _t11FB = [_t11F8, _t11F9, _t11FA];
  real _t11FC = 0.e0;
  real _t11FD = -0.1e1;
  real _t11FE = 0.e0;
  real _t11FF = 0.e0;
  vec3 _t1200 = [_t11FD, _t11FE, _t11FF];
  real _t1201 = prim •00CE<$[3]; $[3]; $[]> (_t1200, refPos0AC0);
  real _t1202 = prim -0026<$[]> (_t11FC, _t1201);
  real _t1203 = -0.1e1;
  real _t1204 = 0.e0;
  real _t1205 = 0.e0;
  vec3 _t1206 = [_t1203, _t1204, _t1205];
  real _t1207 = prim •00CE<$[3]; $[3]; $[]> (_t1206, dPos0AC1);
  real _t1208 = prim /0055 (_t1202, _t1207);
  vec3 _t1209 = prim *0038<$[3]> (dPos0AC1, _t1208);
  vec3 _t120A = prim +0017<$[3]> (refPos0AC0, _t1209);
  vec3 _t120B = prim +0017<$[3]> (_t11FB, _t120A);
  real _t120C = _t120B[1];
  real _t120D = -0.e0;
  bool _t120E = prim >0080 (_t120C, _t120D);
  real _t120F = 0.1e-7;
  real _t1210 = 0.1e-7;
  real _t1211 = 0.1e-7;
  vec3 _t1212 = [_t120F, _t1210, _t1211];
  real _t1213 = 0.e0;
  real _t1214 = -0.1e1;
  real _t1215 = 0.e0;
  real _t1216 = 0.e0;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos0AC0);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = -0.1e1;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos0AC1);
  real _t121F = prim /0055 (_t1219, _t121E);
  vec3 _t1220 = prim *0038<$[3]> (dPos0AC1, _t121F);
  vec3 _t1221 = prim +0017<$[3]> (refPos0AC0, _t1220);
  vec3 _t1222 = prim +0017<$[3]> (_t1212, _t1221);
  real _t1223 = _t1222[2];
  real _t1224 = -0.e0;
  bool _t1225 = prim >0080 (_t1223, _t1224);
  bool _t1226 = prim $and01C4 (_t120E, _t1225);
  bool _t1227 = prim $and01C4 (_t11F7, _t1226);
  bool _t1228 = prim $and01C4 (_t11E0, _t1227);
  string _t1229 = " dist: ";
  real _t122A = 0.e0;
  real _t122B = -0.1e1;
  real _t122C = 0.e0;
  real _t122D = 0.e0;
  vec3 _t122E = [_t122B, _t122C, _t122D];
  real _t122F = prim •00CE<$[3]; $[3]; $[]> (_t122E, refPos0AC0);
  real _t1230 = prim -0026<$[]> (_t122A, _t122F);
  real _t1231 = prim |()|00B5<$[]> (_t1230);
  string _t1232 = "signed dist: ";
  real _t1233 = 0.e0;
  real _t1234 = -0.1e1;
  real _t1235 = 0.e0;
  real _t1236 = 0.e0;
  vec3 _t1237 = [_t1234, _t1235, _t1236];
  real _t1238 = prim •00CE<$[3]; $[3]; $[]> (_t1237, refPos0AC0);
  real _t1239 = prim -0026<$[]> (_t1233, _t1238);
  string _t123A = " face: ";
  int _t123B = 1;
  string _t123C = " place: ";
  real _t123D = 0.e0;
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, refPos0AC0);
  real _t1243 = prim -0026<$[]> (_t123D, _t1242);
  real _t1244 = -0.1e1;
  real _t1245 = 0.e0;
  real _t1246 = 0.e0;
  vec3 _t1247 = [_t1244, _t1245, _t1246];
  real _t1248 = prim •00CE<$[3]; $[3]; $[]> (_t1247, dPos0AC1);
  real _t1249 = prim /0055 (_t1243, _t1248);
  vec3 _t124A = prim *0038<$[3]> (dPos0AC1, _t1249);
  vec3 _t124B = prim +0017<$[3]> (refPos0AC0, _t124A);
  string _t124C = " error: ";
  real _t124D = 0.e0;
  real _t124E = -0.1e1;
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  vec3 _t1251 = [_t124E, _t124F, _t1250];
  real _t1252 = 0.e0;
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos0AC0);
  real _t1258 = prim -0026<$[]> (_t1252, _t1257);
  real _t1259 = -0.1e1;
  real _t125A = 0.e0;
  real _t125B = 0.e0;
  vec3 _t125C = [_t1259, _t125A, _t125B];
  real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos0AC1);
  real _t125E = prim /0055 (_t1258, _t125D);
  vec3 _t125F = prim *0038<$[3]> (dPos0AC1, _t125E);
  vec3 _t1260 = prim +0017<$[3]> (refPos0AC0, _t125F);
  real _t1261 = prim •00CE<$[3]; $[3]; $[]> (_t1251, _t1260);
  real _t1262 = prim -0026<$[]> (_t124D, _t1261);
  real _t1263 = prim |()|00B5<$[]> (_t1262);
  string _t1264 = " offset :";
  string _t1265 = " dp: ";
  string _t1266 = " otherPossibleTime: ";
  string _t1267 = "\n";
  string _t1268 = "\n original face: ";
  string _t1269 = " ";
  print (_t11B4, _t11C1, _t11C2, _t11C7, _t11C8, _t1228, _t1229, _t1231, _t1232, _t1239, _t123A, _t123B, _t123C, _t124B, _t124C, _t1263, _t1264, refPos0AC0, _t1265, dPos0AC1, _t1266, faceTime109D, _t1267, _t1268, i109A, _t1269);
  real _t126A = 0.e0;
  real _t126B = -0.1e1;
  real _t126C = 0.e0;
  real _t126D = 0.e0;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, refPos0AC0);
  real _t1270 = prim -0026<$[]> (_t126A, _t126F);
  real _t1271 = -0.1e1;
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  vec3 _t1274 = [_t1271, _t1272, _t1273];
  real _t1275 = prim •00CE<$[3]; $[3]; $[]> (_t1274, dPos0AC1);
  real _t1276 = prim /0055 (_t1270, _t1275);
  real _t1277 = -0.1e-7;
  bool _t1278 = prim >=007E (_t1276, _t1277);
  real _t1279 = 0.e0;
  real _t127A = -0.1e1;
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  vec3 _t127D = [_t127A, _t127B, _t127C];
  real _t127E = prim •00CE<$[3]; $[3]; $[]> (_t127D, refPos0AC0);
  real _t127F = prim -0026<$[]> (_t1279, _t127E);
  real _t1280 = -0.1e1;
  real _t1281 = 0.e0;
  real _t1282 = 0.e0;
  vec3 _t1283 = [_t1280, _t1281, _t1282];
  real _t1284 = prim •00CE<$[3]; $[3]; $[]> (_t1283, dPos0AC1);
  real _t1285 = prim /0055 (_t127F, _t1284);
  bool _t1286 = prim >0080 (time109B, _t1285);
  real _t1287 = -0.1e1;
  real _t1288 = 0.e0;
  real _t1289 = 0.e0;
  vec3 _t128A = [_t1287, _t1288, _t1289];
  real _t128B = prim •00CE<$[3]; $[3]; $[]> (_t128A, dPos0AC1);
  real _t128C = prim |()|00B5<$[]> (_t128B);
  real _t128D = 0.1e-7;
  bool _t128E = prim >=007E (_t128C, _t128D);
  bool _t128F = prim $and01C4 (_t1286, _t128E);
  bool _t1290 = prim $and01C4 (_t1278, _t128F);
  if _t1290 {
    int _t1291 = 1;
    bool _t1292 = prim !=0086 (i109A, _t1291);
    if _t1292 {
      string _t1293 = "Saving at this face!";
      real _t1294 = 0.e0;
      real _t1295 = -0.1e1;
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      vec3 _t1298 = [_t1295, _t1296, _t1297];
      real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos0AC0);
      real _t129A = prim -0026<$[]> (_t1294, _t1299);
      real _t129B = -0.1e1;
      real _t129C = 0.e0;
      real _t129D = 0.e0;
      vec3 _t129E = [_t129B, _t129C, _t129D];
      real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos0AC1);
      real _t12A0 = prim /0055 (_t129A, _t129F);
      real _t12A1 = 0.e0;
      real _t12A2 = -0.1e1;
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
      real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, refPos0AC0);
      real _t12A7 = prim -0026<$[]> (_t12A1, _t12A6);
      real _t12A8 = -0.1e1;
      real _t12A9 = 0.e0;
      real _t12AA = 0.e0;
      vec3 _t12AB = [_t12A8, _t12A9, _t12AA];
      real _t12AC = prim •00CE<$[3]; $[3]; $[]> (_t12AB, dPos0AC1);
      real _t12AD = prim /0055 (_t12A7, _t12AC);
      bool _t12AE = prim >0080 (time109B, _t12AD);
      string _t12AF = "\n";
      print (_t1293, _t12A0, _t12AE, _t12AF);
      real _t12B0 = 0.e0;
      real _t12B1 = -0.1e1;
      real _t12B2 = 0.e0;
      real _t12B3 = 0.e0;
      vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
      real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, refPos0AC0);
      real _t12B6 = prim -0026<$[]> (_t12B0, _t12B5);
      real _t12B7 = -0.1e1;
      real _t12B8 = 0.e0;
      real _t12B9 = 0.e0;
      vec3 _t12BA = [_t12B7, _t12B8, _t12B9];
      real _t12BB = prim •00CE<$[3]; $[3]; $[]> (_t12BA, dPos0AC1);
      time109B = prim /0055 (_t12B6, _t12BB);
      face109C = 1;
    } else {
      real _t12BC = 0.e0;
      real _t12BD = -0.1e1;
      real _t12BE = 0.e0;
      real _t12BF = 0.e0;
      vec3 _t12C0 = [_t12BD, _t12BE, _t12BF];
      real _t12C1 = prim •00CE<$[3]; $[3]; $[]> (_t12C0, refPos0AC0);
      real _t12C2 = prim -0026<$[]> (_t12BC, _t12C1);
      real _t12C3 = -0.1e1;
      real _t12C4 = 0.e0;
      real _t12C5 = 0.e0;
      vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
      real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, dPos0AC1);
      faceTime109D = prim /0055 (_t12C2, _t12C7);
      string _t12C8 = "Saving backup time: ";
      string _t12C9 = "\n";
      print (_t12C8, faceTime109D, _t12C9);
    }
  }
  string _t12CA = "\ntest :";
  real _t12CB = 0.e0;
  real _t12CC = 0.e0;
  real _t12CD = -0.1e1;
  real _t12CE = 0.e0;
  vec3 _t12CF = [_t12CC, _t12CD, _t12CE];
  real _t12D0 = prim •00CE<$[3]; $[3]; $[]> (_t12CF, refPos0AC0);
  real _t12D1 = prim -0026<$[]> (_t12CB, _t12D0);
  real _t12D2 = 0.e0;
  real _t12D3 = -0.1e1;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, dPos0AC1);
  real _t12D7 = prim /0055 (_t12D1, _t12D6);
  string _t12D8 = " test2: ";
  real _t12D9 = 0.e0;
  real _t12DA = -0.1e1;
  real _t12DB = 0.e0;
  vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
  real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, dPos0AC1);
  string _t12DE = " insideTest: ";
  real _t12DF = 0.1e1;
  real _t12E0 = 0.1e-7;
  real _t12E1 = prim +0017<$[]> (_t12DF, _t12E0);
  real _t12E2 = 0.1e1;
  real _t12E3 = 0.1e1;
  real _t12E4 = 0.1e1;
  vec3 _t12E5 = [_t12E2, _t12E3, _t12E4];
  real _t12E6 = 0.e0;
  real _t12E7 = 0.e0;
  real _t12E8 = -0.1e1;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, refPos0AC0);
  real _t12EC = prim -0026<$[]> (_t12E6, _t12EB);
  real _t12ED = 0.e0;
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  vec3 _t12F0 = [_t12ED, _t12EE, _t12EF];
  real _t12F1 = prim •00CE<$[3]; $[3]; $[]> (_t12F0, dPos0AC1);
  real _t12F2 = prim /0055 (_t12EC, _t12F1);
  vec3 _t12F3 = prim *0038<$[3]> (dPos0AC1, _t12F2);
  vec3 _t12F4 = prim +0017<$[3]> (refPos0AC0, _t12F3);
  real _t12F5 = prim •00CE<$[3]; $[3]; $[]> (_t12E5, _t12F4);
  bool _t12F6 = prim >0080 (_t12E1, _t12F5);
  real _t12F7 = 0.1e-7;
  real _t12F8 = 0.1e-7;
  real _t12F9 = 0.1e-7;
  vec3 _t12FA = [_t12F7, _t12F8, _t12F9];
  real _t12FB = 0.e0;
  real _t12FC = 0.e0;
  real _t12FD = -0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0AC0);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = -0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0AC1);
  real _t1307 = prim /0055 (_t1301, _t1306);
  vec3 _t1308 = prim *0038<$[3]> (dPos0AC1, _t1307);
  vec3 _t1309 = prim +0017<$[3]> (refPos0AC0, _t1308);
  vec3 _t130A = prim +0017<$[3]> (_t12FA, _t1309);
  real _t130B = _t130A[0];
  real _t130C = -0.e0;
  bool _t130D = prim >0080 (_t130B, _t130C);
  real _t130E = 0.1e-7;
  real _t130F = 0.1e-7;
  real _t1310 = 0.1e-7;
  vec3 _t1311 = [_t130E, _t130F, _t1310];
  real _t1312 = 0.e0;
  real _t1313 = 0.e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, refPos0AC0);
  real _t1318 = prim -0026<$[]> (_t1312, _t1317);
  real _t1319 = 0.e0;
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  vec3 _t131C = [_t1319, _t131A, _t131B];
  real _t131D = prim •00CE<$[3]; $[3]; $[]> (_t131C, dPos0AC1);
  real _t131E = prim /0055 (_t1318, _t131D);
  vec3 _t131F = prim *0038<$[3]> (dPos0AC1, _t131E);
  vec3 _t1320 = prim +0017<$[3]> (refPos0AC0, _t131F);
  vec3 _t1321 = prim +0017<$[3]> (_t1311, _t1320);
  real _t1322 = _t1321[1];
  real _t1323 = -0.e0;
  bool _t1324 = prim >0080 (_t1322, _t1323);
  real _t1325 = 0.1e-7;
  real _t1326 = 0.1e-7;
  real _t1327 = 0.1e-7;
  vec3 _t1328 = [_t1325, _t1326, _t1327];
  real _t1329 = 0.e0;
  real _t132A = 0.e0;
  real _t132B = -0.1e1;
  real _t132C = 0.e0;
  vec3 _t132D = [_t132A, _t132B, _t132C];
  real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, refPos0AC0);
  real _t132F = prim -0026<$[]> (_t1329, _t132E);
  real _t1330 = 0.e0;
  real _t1331 = -0.1e1;
  real _t1332 = 0.e0;
  vec3 _t1333 = [_t1330, _t1331, _t1332];
  real _t1334 = prim •00CE<$[3]; $[3]; $[]> (_t1333, dPos0AC1);
  real _t1335 = prim /0055 (_t132F, _t1334);
  vec3 _t1336 = prim *0038<$[3]> (dPos0AC1, _t1335);
  vec3 _t1337 = prim +0017<$[3]> (refPos0AC0, _t1336);
  vec3 _t1338 = prim +0017<$[3]> (_t1328, _t1337);
  real _t1339 = _t1338[2];
  real _t133A = -0.e0;
  bool _t133B = prim >0080 (_t1339, _t133A);
  bool _t133C = prim $and01C4 (_t1324, _t133B);
  bool _t133D = prim $and01C4 (_t130D, _t133C);
  bool _t133E = prim $and01C4 (_t12F6, _t133D);
  string _t133F = " dist: ";
  real _t1340 = 0.e0;
  real _t1341 = 0.e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  vec3 _t1344 = [_t1341, _t1342, _t1343];
  real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, refPos0AC0);
  real _t1346 = prim -0026<$[]> (_t1340, _t1345);
  real _t1347 = prim |()|00B5<$[]> (_t1346);
  string _t1348 = "signed dist: ";
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  real _t134B = -0.1e1;
  real _t134C = 0.e0;
  vec3 _t134D = [_t134A, _t134B, _t134C];
  real _t134E = prim •00CE<$[3]; $[3]; $[]> (_t134D, refPos0AC0);
  real _t134F = prim -0026<$[]> (_t1349, _t134E);
  string _t1350 = " face: ";
  int _t1351 = 2;
  string _t1352 = " place: ";
  real _t1353 = 0.e0;
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos0AC0);
  real _t1359 = prim -0026<$[]> (_t1353, _t1358);
  real _t135A = 0.e0;
  real _t135B = -0.1e1;
  real _t135C = 0.e0;
  vec3 _t135D = [_t135A, _t135B, _t135C];
  real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos0AC1);
  real _t135F = prim /0055 (_t1359, _t135E);
  vec3 _t1360 = prim *0038<$[3]> (dPos0AC1, _t135F);
  vec3 _t1361 = prim +0017<$[3]> (refPos0AC0, _t1360);
  string _t1362 = " error: ";
  real _t1363 = 0.e0;
  real _t1364 = 0.e0;
  real _t1365 = -0.1e1;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = 0.e0;
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos0AC0);
  real _t136E = prim -0026<$[]> (_t1368, _t136D);
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos0AC1);
  real _t1374 = prim /0055 (_t136E, _t1373);
  vec3 _t1375 = prim *0038<$[3]> (dPos0AC1, _t1374);
  vec3 _t1376 = prim +0017<$[3]> (refPos0AC0, _t1375);
  real _t1377 = prim •00CE<$[3]; $[3]; $[]> (_t1367, _t1376);
  real _t1378 = prim -0026<$[]> (_t1363, _t1377);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  string _t137A = " offset :";
  string _t137B = " dp: ";
  string _t137C = " otherPossibleTime: ";
  string _t137D = "\n";
  string _t137E = "\n original face: ";
  string _t137F = " ";
  print (_t12CA, _t12D7, _t12D8, _t12DD, _t12DE, _t133E, _t133F, _t1347, _t1348, _t134F, _t1350, _t1351, _t1352, _t1361, _t1362, _t1379, _t137A, refPos0AC0, _t137B, dPos0AC1, _t137C, faceTime109D, _t137D, _t137E, i109A, _t137F);
  real _t1380 = 0.e0;
  real _t1381 = 0.e0;
  real _t1382 = -0.1e1;
  real _t1383 = 0.e0;
  vec3 _t1384 = [_t1381, _t1382, _t1383];
  real _t1385 = prim •00CE<$[3]; $[3]; $[]> (_t1384, refPos0AC0);
  real _t1386 = prim -0026<$[]> (_t1380, _t1385);
  real _t1387 = 0.e0;
  real _t1388 = -0.1e1;
  real _t1389 = 0.e0;
  vec3 _t138A = [_t1387, _t1388, _t1389];
  real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, dPos0AC1);
  real _t138C = prim /0055 (_t1386, _t138B);
  real _t138D = -0.1e-7;
  bool _t138E = prim >=007E (_t138C, _t138D);
  real _t138F = 0.e0;
  real _t1390 = 0.e0;
  real _t1391 = -0.1e1;
  real _t1392 = 0.e0;
  vec3 _t1393 = [_t1390, _t1391, _t1392];
  real _t1394 = prim •00CE<$[3]; $[3]; $[]> (_t1393, refPos0AC0);
  real _t1395 = prim -0026<$[]> (_t138F, _t1394);
  real _t1396 = 0.e0;
  real _t1397 = -0.1e1;
  real _t1398 = 0.e0;
  vec3 _t1399 = [_t1396, _t1397, _t1398];
  real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, dPos0AC1);
  real _t139B = prim /0055 (_t1395, _t139A);
  bool _t139C = prim >0080 (time109B, _t139B);
  real _t139D = 0.e0;
  real _t139E = -0.1e1;
  real _t139F = 0.e0;
  vec3 _t13A0 = [_t139D, _t139E, _t139F];
  real _t13A1 = prim •00CE<$[3]; $[3]; $[]> (_t13A0, dPos0AC1);
  real _t13A2 = prim |()|00B5<$[]> (_t13A1);
  real _t13A3 = 0.1e-7;
  bool _t13A4 = prim >=007E (_t13A2, _t13A3);
  bool _t13A5 = prim $and01C4 (_t139C, _t13A4);
  bool _t13A6 = prim $and01C4 (_t138E, _t13A5);
  if _t13A6 {
    int _t13A7 = 2;
    bool _t13A8 = prim !=0086 (i109A, _t13A7);
    if _t13A8 {
      string _t13A9 = "Saving at this face!";
      real _t13AA = 0.e0;
      real _t13AB = 0.e0;
      real _t13AC = -0.1e1;
      real _t13AD = 0.e0;
      vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
      real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos0AC0);
      real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
      real _t13B1 = 0.e0;
      real _t13B2 = -0.1e1;
      real _t13B3 = 0.e0;
      vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
      real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos0AC1);
      real _t13B6 = prim /0055 (_t13B0, _t13B5);
      real _t13B7 = 0.e0;
      real _t13B8 = 0.e0;
      real _t13B9 = -0.1e1;
      real _t13BA = 0.e0;
      vec3 _t13BB = [_t13B8, _t13B9, _t13BA];
      real _t13BC = prim •00CE<$[3]; $[3]; $[]> (_t13BB, refPos0AC0);
      real _t13BD = prim -0026<$[]> (_t13B7, _t13BC);
      real _t13BE = 0.e0;
      real _t13BF = -0.1e1;
      real _t13C0 = 0.e0;
      vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
      real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos0AC1);
      real _t13C3 = prim /0055 (_t13BD, _t13C2);
      bool _t13C4 = prim >0080 (time109B, _t13C3);
      string _t13C5 = "\n";
      print (_t13A9, _t13B6, _t13C4, _t13C5);
      real _t13C6 = 0.e0;
      real _t13C7 = 0.e0;
      real _t13C8 = -0.1e1;
      real _t13C9 = 0.e0;
      vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
      real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, refPos0AC0);
      real _t13CC = prim -0026<$[]> (_t13C6, _t13CB);
      real _t13CD = 0.e0;
      real _t13CE = -0.1e1;
      real _t13CF = 0.e0;
      vec3 _t13D0 = [_t13CD, _t13CE, _t13CF];
      real _t13D1 = prim •00CE<$[3]; $[3]; $[]> (_t13D0, dPos0AC1);
      time109B = prim /0055 (_t13CC, _t13D1);
      face109C = 2;
    } else {
      real _t13D2 = 0.e0;
      real _t13D3 = 0.e0;
      real _t13D4 = -0.1e1;
      real _t13D5 = 0.e0;
      vec3 _t13D6 = [_t13D3, _t13D4, _t13D5];
      real _t13D7 = prim •00CE<$[3]; $[3]; $[]> (_t13D6, refPos0AC0);
      real _t13D8 = prim -0026<$[]> (_t13D2, _t13D7);
      real _t13D9 = 0.e0;
      real _t13DA = -0.1e1;
      real _t13DB = 0.e0;
      vec3 _t13DC = [_t13D9, _t13DA, _t13DB];
      real _t13DD = prim •00CE<$[3]; $[3]; $[]> (_t13DC, dPos0AC1);
      faceTime109D = prim /0055 (_t13D8, _t13DD);
      string _t13DE = "Saving backup time: ";
      string _t13DF = "\n";
      print (_t13DE, faceTime109D, _t13DF);
    }
  }
  string _t13E0 = "\ntest :";
  real _t13E1 = 0.e0;
  real _t13E2 = 0.e0;
  real _t13E3 = 0.e0;
  real _t13E4 = -0.1e1;
  vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
  real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, refPos0AC0);
  real _t13E7 = prim -0026<$[]> (_t13E1, _t13E6);
  real _t13E8 = 0.e0;
  real _t13E9 = 0.e0;
  real _t13EA = -0.1e1;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, dPos0AC1);
  real _t13ED = prim /0055 (_t13E7, _t13EC);
  string _t13EE = " test2: ";
  real _t13EF = 0.e0;
  real _t13F0 = 0.e0;
  real _t13F1 = -0.1e1;
  vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
  real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos0AC1);
  string _t13F4 = " insideTest: ";
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.1e-7;
  real _t13F7 = prim +0017<$[]> (_t13F5, _t13F6);
  real _t13F8 = 0.1e1;
  real _t13F9 = 0.1e1;
  real _t13FA = 0.1e1;
  vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
  real _t13FC = 0.e0;
  real _t13FD = 0.e0;
  real _t13FE = 0.e0;
  real _t13FF = -0.1e1;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, refPos0AC0);
  real _t1402 = prim -0026<$[]> (_t13FC, _t1401);
  real _t1403 = 0.e0;
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  vec3 _t1406 = [_t1403, _t1404, _t1405];
  real _t1407 = prim •00CE<$[3]; $[3]; $[]> (_t1406, dPos0AC1);
  real _t1408 = prim /0055 (_t1402, _t1407);
  vec3 _t1409 = prim *0038<$[3]> (dPos0AC1, _t1408);
  vec3 _t140A = prim +0017<$[3]> (refPos0AC0, _t1409);
  real _t140B = prim •00CE<$[3]; $[3]; $[]> (_t13FB, _t140A);
  bool _t140C = prim >0080 (_t13F7, _t140B);
  real _t140D = 0.1e-7;
  real _t140E = 0.1e-7;
  real _t140F = 0.1e-7;
  vec3 _t1410 = [_t140D, _t140E, _t140F];
  real _t1411 = 0.e0;
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = -0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0AC0);
  real _t1417 = prim -0026<$[]> (_t1411, _t1416);
  real _t1418 = 0.e0;
  real _t1419 = 0.e0;
  real _t141A = -0.1e1;
  vec3 _t141B = [_t1418, _t1419, _t141A];
  real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0AC1);
  real _t141D = prim /0055 (_t1417, _t141C);
  vec3 _t141E = prim *0038<$[3]> (dPos0AC1, _t141D);
  vec3 _t141F = prim +0017<$[3]> (refPos0AC0, _t141E);
  vec3 _t1420 = prim +0017<$[3]> (_t1410, _t141F);
  real _t1421 = _t1420[0];
  real _t1422 = -0.e0;
  bool _t1423 = prim >0080 (_t1421, _t1422);
  real _t1424 = 0.1e-7;
  real _t1425 = 0.1e-7;
  real _t1426 = 0.1e-7;
  vec3 _t1427 = [_t1424, _t1425, _t1426];
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = -0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, refPos0AC0);
  real _t142E = prim -0026<$[]> (_t1428, _t142D);
  real _t142F = 0.e0;
  real _t1430 = 0.e0;
  real _t1431 = -0.1e1;
  vec3 _t1432 = [_t142F, _t1430, _t1431];
  real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, dPos0AC1);
  real _t1434 = prim /0055 (_t142E, _t1433);
  vec3 _t1435 = prim *0038<$[3]> (dPos0AC1, _t1434);
  vec3 _t1436 = prim +0017<$[3]> (refPos0AC0, _t1435);
  vec3 _t1437 = prim +0017<$[3]> (_t1427, _t1436);
  real _t1438 = _t1437[1];
  real _t1439 = -0.e0;
  bool _t143A = prim >0080 (_t1438, _t1439);
  real _t143B = 0.1e-7;
  real _t143C = 0.1e-7;
  real _t143D = 0.1e-7;
  vec3 _t143E = [_t143B, _t143C, _t143D];
  real _t143F = 0.e0;
  real _t1440 = 0.e0;
  real _t1441 = 0.e0;
  real _t1442 = -0.1e1;
  vec3 _t1443 = [_t1440, _t1441, _t1442];
  real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, refPos0AC0);
  real _t1445 = prim -0026<$[]> (_t143F, _t1444);
  real _t1446 = 0.e0;
  real _t1447 = 0.e0;
  real _t1448 = -0.1e1;
  vec3 _t1449 = [_t1446, _t1447, _t1448];
  real _t144A = prim •00CE<$[3]; $[3]; $[]> (_t1449, dPos0AC1);
  real _t144B = prim /0055 (_t1445, _t144A);
  vec3 _t144C = prim *0038<$[3]> (dPos0AC1, _t144B);
  vec3 _t144D = prim +0017<$[3]> (refPos0AC0, _t144C);
  vec3 _t144E = prim +0017<$[3]> (_t143E, _t144D);
  real _t144F = _t144E[2];
  real _t1450 = -0.e0;
  bool _t1451 = prim >0080 (_t144F, _t1450);
  bool _t1452 = prim $and01C4 (_t143A, _t1451);
  bool _t1453 = prim $and01C4 (_t1423, _t1452);
  bool _t1454 = prim $and01C4 (_t140C, _t1453);
  string _t1455 = " dist: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.e0;
  real _t1459 = -0.1e1;
  vec3 _t145A = [_t1457, _t1458, _t1459];
  real _t145B = prim •00CE<$[3]; $[3]; $[]> (_t145A, refPos0AC0);
  real _t145C = prim -0026<$[]> (_t1456, _t145B);
  real _t145D = prim |()|00B5<$[]> (_t145C);
  string _t145E = "signed dist: ";
  real _t145F = 0.e0;
  real _t1460 = 0.e0;
  real _t1461 = 0.e0;
  real _t1462 = -0.1e1;
  vec3 _t1463 = [_t1460, _t1461, _t1462];
  real _t1464 = prim •00CE<$[3]; $[3]; $[]> (_t1463, refPos0AC0);
  real _t1465 = prim -0026<$[]> (_t145F, _t1464);
  string _t1466 = " face: ";
  int _t1467 = 3;
  string _t1468 = " place: ";
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, refPos0AC0);
  real _t146F = prim -0026<$[]> (_t1469, _t146E);
  real _t1470 = 0.e0;
  real _t1471 = 0.e0;
  real _t1472 = -0.1e1;
  vec3 _t1473 = [_t1470, _t1471, _t1472];
  real _t1474 = prim •00CE<$[3]; $[3]; $[]> (_t1473, dPos0AC1);
  real _t1475 = prim /0055 (_t146F, _t1474);
  vec3 _t1476 = prim *0038<$[3]> (dPos0AC1, _t1475);
  vec3 _t1477 = prim +0017<$[3]> (refPos0AC0, _t1476);
  string _t1478 = " error: ";
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = 0.e0;
  real _t147C = -0.1e1;
  vec3 _t147D = [_t147A, _t147B, _t147C];
  real _t147E = 0.e0;
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos0AC0);
  real _t1484 = prim -0026<$[]> (_t147E, _t1483);
  real _t1485 = 0.e0;
  real _t1486 = 0.e0;
  real _t1487 = -0.1e1;
  vec3 _t1488 = [_t1485, _t1486, _t1487];
  real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos0AC1);
  real _t148A = prim /0055 (_t1484, _t1489);
  vec3 _t148B = prim *0038<$[3]> (dPos0AC1, _t148A);
  vec3 _t148C = prim +0017<$[3]> (refPos0AC0, _t148B);
  real _t148D = prim •00CE<$[3]; $[3]; $[]> (_t147D, _t148C);
  real _t148E = prim -0026<$[]> (_t1479, _t148D);
  real _t148F = prim |()|00B5<$[]> (_t148E);
  string _t1490 = " offset :";
  string _t1491 = " dp: ";
  string _t1492 = " otherPossibleTime: ";
  string _t1493 = "\n";
  string _t1494 = "\n original face: ";
  string _t1495 = " ";
  print (_t13E0, _t13ED, _t13EE, _t13F3, _t13F4, _t1454, _t1455, _t145D, _t145E, _t1465, _t1466, _t1467, _t1468, _t1477, _t1478, _t148F, _t1490, refPos0AC0, _t1491, dPos0AC1, _t1492, faceTime109D, _t1493, _t1494, i109A, _t1495);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = -0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos0AC0);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = -0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos0AC1);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-7;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = -0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos0AC0);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = -0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos0AC1);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time109B, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = -0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos0AC1);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-7;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 3;
    bool _t14BE = prim !=0086 (i109A, _t14BD);
    if _t14BE {
      string _t14BF = "Saving at this face!";
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.e0;
      real _t14C3 = -0.1e1;
      vec3 _t14C4 = [_t14C1, _t14C2, _t14C3];
      real _t14C5 = prim •00CE<$[3]; $[3]; $[]> (_t14C4, refPos0AC0);
      real _t14C6 = prim -0026<$[]> (_t14C0, _t14C5);
      real _t14C7 = 0.e0;
      real _t14C8 = 0.e0;
      real _t14C9 = -0.1e1;
      vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
      real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, dPos0AC1);
      real _t14CC = prim /0055 (_t14C6, _t14CB);
      real _t14CD = 0.e0;
      real _t14CE = 0.e0;
      real _t14CF = 0.e0;
      real _t14D0 = -0.1e1;
      vec3 _t14D1 = [_t14CE, _t14CF, _t14D0];
      real _t14D2 = prim •00CE<$[3]; $[3]; $[]> (_t14D1, refPos0AC0);
      real _t14D3 = prim -0026<$[]> (_t14CD, _t14D2);
      real _t14D4 = 0.e0;
      real _t14D5 = 0.e0;
      real _t14D6 = -0.1e1;
      vec3 _t14D7 = [_t14D4, _t14D5, _t14D6];
      real _t14D8 = prim •00CE<$[3]; $[3]; $[]> (_t14D7, dPos0AC1);
      real _t14D9 = prim /0055 (_t14D3, _t14D8);
      bool _t14DA = prim >0080 (time109B, _t14D9);
      string _t14DB = "\n";
      print (_t14BF, _t14CC, _t14DA, _t14DB);
      real _t14DC = 0.e0;
      real _t14DD = 0.e0;
      real _t14DE = 0.e0;
      real _t14DF = -0.1e1;
      vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
      real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, refPos0AC0);
      real _t14E2 = prim -0026<$[]> (_t14DC, _t14E1);
      real _t14E3 = 0.e0;
      real _t14E4 = 0.e0;
      real _t14E5 = -0.1e1;
      vec3 _t14E6 = [_t14E3, _t14E4, _t14E5];
      real _t14E7 = prim •00CE<$[3]; $[3]; $[]> (_t14E6, dPos0AC1);
      time109B = prim /0055 (_t14E2, _t14E7);
      face109C = 3;
    } else {
      real _t14E8 = 0.e0;
      real _t14E9 = 0.e0;
      real _t14EA = 0.e0;
      real _t14EB = -0.1e1;
      vec3 _t14EC = [_t14E9, _t14EA, _t14EB];
      real _t14ED = prim •00CE<$[3]; $[3]; $[]> (_t14EC, refPos0AC0);
      real _t14EE = prim -0026<$[]> (_t14E8, _t14ED);
      real _t14EF = 0.e0;
      real _t14F0 = 0.e0;
      real _t14F1 = -0.1e1;
      vec3 _t14F2 = [_t14EF, _t14F0, _t14F1];
      real _t14F3 = prim •00CE<$[3]; $[3]; $[]> (_t14F2, dPos0AC1);
      faceTime109D = prim /0055 (_t14EE, _t14F3);
      string _t14F4 = "Saving backup time: ";
      string _t14F5 = "\n";
      print (_t14F4, faceTime109D, _t14F5);
    }
  }
  int _t14F6 = -1;
  bool _t14F7 = prim !=0086 (face109C, _t14F6);
  real _t14F8 = 0.1e1;
  real _t14F9 = 0.1e-7;
  real _t14FA = prim +0017<$[]> (_t14F8, _t14F9);
  real _t14FB = 0.1e1;
  real _t14FC = 0.1e1;
  real _t14FD = 0.1e1;
  vec3 _t14FE = [_t14FB, _t14FC, _t14FD];
  real _t14FF = 0.e0;
  real _t1500 = prim max0125 (time109B, _t14FF);
  vec3 _t1501 = prim *0038<$[3]> (dPos0AC1, _t1500);
  vec3 _t1502 = prim +0017<$[3]> (refPos0AC0, _t1501);
  real _t1503 = prim •00CE<$[3]; $[3]; $[]> (_t14FE, _t1502);
  bool _t1504 = prim >0080 (_t14FA, _t1503);
  real _t1505 = 0.1e-7;
  real _t1506 = 0.1e-7;
  real _t1507 = 0.1e-7;
  vec3 _t1508 = [_t1505, _t1506, _t1507];
  real _t1509 = 0.e0;
  real _t150A = prim max0125 (time109B, _t1509);
  vec3 _t150B = prim *0038<$[3]> (dPos0AC1, _t150A);
  vec3 _t150C = prim +0017<$[3]> (refPos0AC0, _t150B);
  vec3 _t150D = prim +0017<$[3]> (_t1508, _t150C);
  real _t150E = _t150D[0];
  real _t150F = -0.e0;
  bool _t1510 = prim >0080 (_t150E, _t150F);
  real _t1511 = 0.1e-7;
  real _t1512 = 0.1e-7;
  real _t1513 = 0.1e-7;
  vec3 _t1514 = [_t1511, _t1512, _t1513];
  real _t1515 = 0.e0;
  real _t1516 = prim max0125 (time109B, _t1515);
  vec3 _t1517 = prim *0038<$[3]> (dPos0AC1, _t1516);
  vec3 _t1518 = prim +0017<$[3]> (refPos0AC0, _t1517);
  vec3 _t1519 = prim +0017<$[3]> (_t1514, _t1518);
  real _t151A = _t1519[1];
  real _t151B = -0.e0;
  bool _t151C = prim >0080 (_t151A, _t151B);
  real _t151D = 0.1e-7;
  real _t151E = 0.1e-7;
  real _t151F = 0.1e-7;
  vec3 _t1520 = [_t151D, _t151E, _t151F];
  real _t1521 = 0.e0;
  real _t1522 = prim max0125 (time109B, _t1521);
  vec3 _t1523 = prim *0038<$[3]> (dPos0AC1, _t1522);
  vec3 _t1524 = prim +0017<$[3]> (refPos0AC0, _t1523);
  vec3 _t1525 = prim +0017<$[3]> (_t1520, _t1524);
  real _t1526 = _t1525[2];
  real _t1527 = -0.e0;
  bool _t1528 = prim >0080 (_t1526, _t1527);
  bool _t1529 = prim $and01C4 (_t151C, _t1528);
  bool _t152A = prim $and01C4 (_t1510, _t1529);
  bool _t152B = prim $and01C4 (_t1504, _t152A);
  bool _t152C = prim $and01C4 (_t14F7, _t152B);
  if _t152C {
    string _t152D = "\nReturning via standard : ";
    real _t152E = 0.e0;
    real _t152F = prim max0125 (time109B, _t152E);
    real _t1530 = (real)face109C;
    vec2 _t1531 = [_t152F, _t1530];
    string _t1532 = "\n";
    print (_t152D, _t1531, _t1532);
    real _t1533 = 0.e0;
    real _t1534 = prim max0125 (time109B, _t1533);
    real _t1535 = (real)face109C;
    vec2 _t1536 = [_t1534, _t1535];
    return _t1536;
  } else {
    real _t1537 = -inf;
    bool _t1538 = prim ==0084 (_t1537, faceTime109D);
    if _t1538 {
      string _t1539 = "\nReturning via fail : ";
      real _t153A = -0.1e1;
      real _t153B = -0.1e1;
      vec2 _t153C = [_t153A, _t153B];
      string _t153D = "\n";
      print (_t1539, _t153C, _t153D);
      real _t153E = -0.1e1;
      real _t153F = -0.1e1;
      vec2 _t1540 = [_t153E, _t153F];
      return _t1540;
    } else {
      string _t1541 = "\nReturning via backup : ";
      real _t1542 = 0.e0;
      real _t1543 = prim max0125 (faceTime109D, _t1542);
      real _t1544 = (real)i109A;
      vec2 _t1545 = [_t1543, _t1544];
      string _t1546 = "\n";
      print (_t1541, _t1545, _t1546);
      real _t1547 = 0.e0;
      real _t1548 = prim max0125 (faceTime109D, _t1547);
      real _t1549 = (real)i109A;
      vec2 _t154A = [_t1548, _t1549];
      return _t154A;
    }
  }
}
function Femdata: Mesh#0 domain154B (Femdata: Space arg0154C)
{
  Femdata: Mesh _t154D = extractFem(arg0154C, Mesh);
  return _t154D;
}
function Femdata: Space#0 space154E (Femdata: FemFunc arg0154F)
{
  Femdata: Space _t1550 = extractFem(arg0154F, Space);
  return _t1550;
}
function Femdata: FuncCell#3 funcCell1551 (Femdata: FemFunc arg01552, Femdata: MeshCell arg11553)
{
  int _t1554 = extractFemItem(CellIndex(MeshCell), int, arg11553);
  Femdata: FuncCell _t1555 = loadFem(FuncCell, arg01552, _t1554);
  return _t1555;
}
function Femdata: MeshPos#2 fn_2FB1563 (Femdata: MeshPos x1564, vec3 dPos1565)
{
  bool _t1566 = extractFemItem(Valid(MeshPos), bool, x1564);
  bool _t1567 = prim !00BC (_t1566);
  if _t1567 {
    return x1564;
  }
  real time1568 = 0.1e1;
  Femdata: MeshPos cmp1569 = x1564;
  int _t156A = 0;
  int[] _t156B = prim $range01C3 (_t156A, timeSteps040D);
  foreach i15E3 in _t156B {
    Femdata: Mesh _t156C = extractFem(cmp1569, Mesh);
    int _t156D = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t156E = loadFem(MeshCell, _t156C, _t156D);
    Femdata: Mesh _t156F = extractFem(_t156E, Mesh);
    Femdata: Mesh _t1570 = extractFem(cmp1569, Mesh);
    int _t1571 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1572 = loadFem(MeshCell, _t1570, _t1571);
    Femdata: Mesh _t1573 = extractFem(_t1572, Mesh);
    Femdata: Mesh _t1574 = extractFem(cmp1569, Mesh);
    int _t1575 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1576 = loadFem(MeshCell, _t1574, _t1575);
    int _t1577 = extractFemItem(CellIndex(MeshCell), int, _t1576);
    field(3)[3] _t1578 = femField(_t156F,_t1577,field(3)[3],Transform,);
    field(3)[3,3] _t1579 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1578);
    vec3 _t157A = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    tensor[3,3] _t157B = prim @00A5<#∞; %3; $[3,3]> (_t1579, _t157A);
    tensor[3,3] _t157C = prim inv0155 (_t157B);
    vec3 deltaP157D = prim •00CE<$[3,3]; $[3]; $[3]> (_t157C, dPos1565);
    real _t157E = prim |()|00B5<$[3]> (deltaP157D);
    vec3 normDetaP157F = prim /0057<$[3]> (deltaP157D, _t157E);
    vec3 _t1580 = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    vec3 _t1581 = prim *0036<$[3]> (time1568, deltaP157D);
    vec3 newPos1582 = prim +0017<$[3]> (_t1580, _t1581);
    continue;
  }
  string _t15E4 = "Took stupid way out!\n";
  print (_t15E4);
  vec3 _t15E5 = func worldPos04DA (x1564);
  vec3 _t15E6 = prim +0017<$[3]> (_t15E5, dPos1565);
  cmp1569 = func findPos041E (meshData03FD, _t15E6);
  return cmp1569;
}
function vec3#2 nV15E7 (Femdata: MeshPos x15E8)
{
  bool _t15E9 = extractFemItem(Valid(MeshPos), bool, x15E8);
  if _t15E9 {
    Femdata: Mesh _t15EA = extractFem(x15E8, Mesh);
    int _t15EB = extractFemItem(CellIndex(MeshPos), int, x15E8);
    Femdata: MeshCell c15EC = loadFem(MeshCell, _t15EA, _t15EB);
    vec3 ref15ED = extractFemItem(RefPos(MeshPos), vec3, x15E8);
    Femdata: FuncCell _t15EE = func funcCell1551 (data040B, c15EC);
    Femdata: FemFunc _t15EF = extractFem(_t15EE, FemFunc);
    Femdata: FuncCell _t15F0 = func funcCell1551 (data040B, c15EC);
    Femdata: FemFunc _t15F1 = extractFem(_t15F0, FemFunc);
    Femdata: Space _t15F2 = extractFem(_t15F1, Space);
    Femdata: FuncCell _t15F3 = func funcCell1551 (data040B, c15EC);
    int _t15F4 = extractFemItem(CellIndex(FuncCell), int, _t15F3);
    field(3)[3] _t15F5 = femField(_t15EF,_t15F4,field(3)[3],refField,);
    vec3 val15F6 = prim @00A5<#∞; %3; $[3]> (_t15F5, ref15ED);
    real _t15F7 = prim |()|00B5<$[3]> (val15F6);
    vec3 _t15F8 = prim /0057<$[3]> (val15F6, _t15F7);
    return _t15F8;
  } else {
    string _t15F9 = "QWE:Eval at 0\n";
    print (_t15F9);
    vec3 _t15FA = prim $zero01BB<$[3]> ();
    return _t15FA;
  }
}
function vec3#4 altF15FB (vec3 x15FC)
{
  vec3 _t15FD = prim -0026<$[3]> (x15FC, center0413);
  vec3 _t15FE = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t15FD);
  return _t15FE;
}
globalInit {
  int _t0401 = 0;
  int _t03FF = 1;
  int _t0403 = extractFemItem(NumCell(Mesh), int, meshData03FD);
  int _t0402 = prim -0024 (_t0403, _t03FF);
  int[] _t0406 = prim $range01C3 (_t0401, _t0402);
  Femdata: MeshCell[] _t0407 = {};
  foreach _t0405 in _t0406 {
    Femdata: MeshCell _t0408 = loadFem(MeshCell, meshData03FD, _t0405);
    _t0407 = prim @0010<Femdata: MeshCell> (_t0407, _t0408);
  }
  space0409 = loadFem(Space, 0space0409_intermedateGlobal040A, meshData03FD);
  data040B = loadFem(FemFunc, 0data040B_intermedateGlobal040C, space0409);
  Femdata: Space _t1556 = extractFem(data040B, Space);
  Femdata: Space _t1557 = extractFem(data040B, Space);
  Femdata: Mesh _t1558 = extractFem(_t1557, Mesh);
  field(3)[3] _t1559 = femField(data040B,_t1558,field(3)[3],refField,findPos041E );
  Femdata: Space _t155A = extractFem(data040B, Space);
  Femdata: Mesh _t155B = extractFem(_t155A, Mesh);
  Femdata: Space _t155C = extractFem(data040B, Space);
  Femdata: Mesh _t155D = extractFem(_t155C, Mesh);
  Femdata: Space _t155E = extractFem(data040B, Space);
  Femdata: Mesh _t155F = extractFem(_t155E, Mesh);
  field(3)[3] _t1560 = femField(_t155B,_t155F,field(3)[3],InvTransform,findPos041E );
  F1561 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t1559, _t1560);
  simplex1562 = func refcell046A (meshData03FD);
}
strand gg (vec3 startPos15FF) {
  output vec3[] stream1600;
  output vec3[] newStream1603;
  int step1606;
  Femdata: MeshPos cPos1607;
  vec3 altCPos1608;
  {
    vec3[0] _t1601 = {};
    vec3[] _t1602 = (vec3[])_t1601;
    stream1600 = _t1602;
    vec3[0] _t1604 = {};
    vec3[] _t1605 = (vec3[])_t1604;
    newStream1603 = _t1605;
    step1606 = 0;
    cPos1607 = func findPos041E (meshData03FD, startPos15FF);
    altCPos1608 = startPos15FF;
  }
  update
  {
    int _t1609 = 0;
    bool _t160A = prim ==0082 (step1606, _t1609);
    if _t160A {
      bool _t160B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      if _t160B {
        vec3 rp160C = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
        real _t160D = rp160C[0];
        real _t160E = 0.1e-5;
        bool _t160F = prim <=007C (_t160D, _t160E);
        if _t160F {
          stabilize;
        }
        real _t1610 = rp160C[1];
        real _t1611 = 0.1e-5;
        bool _t1612 = prim <=007C (_t1610, _t1611);
        if _t1612 {
          stabilize;
        }
        real _t1613 = rp160C[2];
        real _t1614 = 0.1e-5;
        bool _t1615 = prim <=007C (_t1613, _t1614);
        if _t1615 {
          stabilize;
        }
        real _t1616 = 0.1e1;
        real _t1617 = 0.1e1;
        real _t1618 = 0.1e1;
        vec3 _t1619 = [_t1616, _t1617, _t1618];
        real r161A = prim •00CE<$[3]; $[3]; $[]> (_t1619, rp160C);
        real _t161B = 0.9999999e0;
        bool _t161C = prim <=007C (_t161B, r161A);
        if _t161C {
          stabilize;
        }
      }
    }
    bool _t161D = extractFemItem(Valid(MeshPos), bool, cPos1607);
    Femdata: MeshPos _t161E = func findPos041E (meshData03FD, altCPos1608);
    bool _t161F = extractFemItem(Valid(MeshPos), bool, _t161E);
    bool _t1620 = prim !=0085 (_t161D, _t161F);
    if _t1620 {
      string _t1621 = "ERG:Warning of validity startPos:";
      string _t1622 = "\n";
      print (_t1621, startPos15FF, _t1622);
    }
    bool _t1623;
    bool _t1624 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    bool _t1625 = prim !00BC (_t1624);
    if _t1625 {
      _t1623 = true;
    } else {
      bool _t1626;
      Femdata: MeshPos _t1627 = func findPos041E (meshData03FD, altCPos1608);
      bool _t1628 = extractFemItem(Valid(MeshPos), bool, _t1627);
      bool _t1629 = prim !00BC (_t1628);
      if _t1629 {
        _t1626 = true;
      } else {
        _t1626 = prim ==0082 (step1606, stepMax0411);
      }
      _t1623 = _t1626;
    }
    if _t1623 {
      string _t162A = "Went off the mesh\?";
      bool _t162B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      bool _t162C = prim !00BC (_t162B);
      string _t162D = " and ";
      string _t162E = " and ";
      Femdata: MeshPos _t162F = func findPos041E (meshData03FD, altCPos1608);
      bool _t1630 = extractFemItem(Valid(MeshPos), bool, _t162F);
      bool _t1631 = prim !00BC (_t1630);
      string _t1632 = "\n";
      print (_t162A, _t162C, _t162D, altCPos1608, _t162E, _t1631, _t1632);
      string _t1633 = "Pos is:";
      vec3 _t1634 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1635 = "\n";
      print (_t1633, _t1634, _t1635);
      string _t1636 = "\n";
      string _t1637 = "\n";
      print (stream1600, _t1636, newStream1603, _t1637);
      stabilize;
    }
    vec3 _t1638 = func worldPos04DA (cPos1607);
    vec3[1] _t1639 = {_t1638};
    vec3[] _t163A = (vec3[])_t1639;
    stream1600 = prim @0014<vec3> (stream1600, _t163A);
    vec3[1] _t163B = {altCPos1608};
    vec3[] _t163C = (vec3[])_t163B;
    newStream1603 = prim @0014<vec3> (newStream1603, _t163C);
    vec3 _t163D = func worldPos04DA (cPos1607);
    vec3 _t163E = prim -0026<$[3]> (_t163D, altCPos1608);
    real _t163F = prim |()|00B5<$[3]> (_t163E);
    real _t1640 = 0.1e-5;
    bool _t1641 = prim >0080 (_t163F, _t1640);
    if _t1641 {
      string _t1642 = "ERG:Error in tracing 1: At step:";
      string _t1643 = " with particle:";
      string _t1644 = "\n";
      print (_t1642, step1606, _t1643, startPos15FF, _t1644);
      string _t1645 = "Poses are:";
      vec3 _t1646 = func worldPos04DA (cPos1607);
      string _t1647 = "\n";
      print (_t1645, _t1646, altCPos1608, _t1647);
      string _t1648 = "Cells are:";
      Femdata: Mesh _t1649 = extractFem(cPos1607, Mesh);
      int _t164A = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t164B = loadFem(MeshCell, _t1649, _t164A);
      string _t164C = " and ";
      Femdata: MeshPos _t164D = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t164E = extractFem(_t164D, Mesh);
      Femdata: MeshPos _t164F = func findPos041E (meshData03FD, altCPos1608);
      int _t1650 = extractFemItem(CellIndex(MeshPos), int, _t164F);
      Femdata: MeshCell _t1651 = loadFem(MeshCell, _t164E, _t1650);
      string _t1652 = "\n";
      print (_t1648, _t164B, _t164C, _t1651, _t1652);
      string _t1653 = "Ref poses are:";
      vec3 _t1654 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1655 = " and ";
      Femdata: MeshPos _t1656 = func findPos041E (meshData03FD, altCPos1608);
      vec3 _t1657 = extractFemItem(RefPos(MeshPos), vec3, _t1656);
      string _t1658 = "\n";
      print (_t1653, _t1654, _t1655, _t1657, _t1658);
      stabilize;
    } else {
      string _t1659 = "fine in cell 1:";
      Femdata: Mesh _t165A = extractFem(cPos1607, Mesh);
      int _t165B = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t165C = loadFem(MeshCell, _t165A, _t165B);
      string _t165D = "\n";
      print (_t1659, _t165C, _t165D);
    }
    real _t165E = 0.5e0;
    real _t165F = prim *0034 (_t165E, stepSize0410);
    vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    vec3 _t1661 = prim *0036<$[3]> (_t165F, _t1660);
    vec3 _t1662 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    real _t1663 = prim |()|00B5<$[3]> (_t1662);
    vec3 altUp11664 = prim /0057<$[3]> (_t1661, _t1663);
    real _t1665 = 0.5e0;
    real _t1666 = prim *0034 (_t1665, stepSize0410);
    vec3 _t1667 = func nV15E7 (cPos1607);
    vec3 up11668 = prim *0036<$[3]> (_t1666, _t1667);
    real _t1669 = 0.5e0;
    real _t166A = prim *0034 (_t1669, stepSize0410);
    vec3 _t166B = func altF15FB (altCPos1608);
    vec3 _t166C = prim *0036<$[3]> (_t166A, _t166B);
    vec3 _t166D = func altF15FB (altCPos1608);
    real _t166E = prim |()|00B5<$[3]> (_t166D);
    vec3 upCorrect1166F = prim /0057<$[3]> (_t166C, _t166E);
    bool _t1670;
    vec3 _t1671 = prim -0026<$[3]> (up11668, upCorrect1166F);
    real _t1672 = prim |()|00B5<$[3]> (_t1671);
    real _t1673 = 0.1e-5;
    bool _t1674 = prim >0080 (_t1672, _t1673);
    if _t1674 {
      _t1670 = true;
    } else {
      vec3 _t1675 = prim -0026<$[3]> (up11668, altUp11664);
      real _t1676 = prim |()|00B5<$[3]> (_t1675);
      real _t1677 = 0.1e-5;
      _t1670 = prim >0080 (_t1676, _t1677);
    }
    if _t1670 {
      string _t1678 = "ERG:Error in evaluation on pos 1:";
      string _t1679 = "\n";
      print (_t1678, startPos15FF, _t1679);
    }
    Femdata: MeshPos intermed167A = func fn_2FB1563 (cPos1607, up11668);
    vec3 altIntermed167B = prim +0017<$[3]> (altCPos1608, altUp11664);
    bool _t167C = extractFemItem(Valid(MeshPos), bool, intermed167A);
    Femdata: MeshPos _t167D = func findPos041E (meshData03FD, altIntermed167B);
    bool _t167E = extractFemItem(Valid(MeshPos), bool, _t167D);
    bool _t167F = prim !=0085 (_t167C, _t167E);
    if _t167F {
      string _t1680 = "ERG:Warning of validity intermed";
      string _t1681 = "\n";
      print (_t1680, startPos15FF, _t1681);
      string _t1682 = "Real location:";
      string _t1683 = "\n";
      print (_t1682, altIntermed167B, _t1683);
      string _t1684 = "Cell change: ";
      Femdata: MeshPos _t1685 = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t1686 = extractFem(_t1685, Mesh);
      Femdata: MeshPos _t1687 = func findPos041E (meshData03FD, altCPos1608);
      int _t1688 = extractFemItem(CellIndex(MeshPos), int, _t1687);
      Femdata: MeshCell _t1689 = loadFem(MeshCell, _t1686, _t1688);
      string _t168A = " to ";
      Femdata: MeshPos _t168B = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t168C = extractFem(_t168B, Mesh);
      Femdata: MeshPos _t168D = func findPos041E (meshData03FD, altIntermed167B);
      int _t168E = extractFemItem(CellIndex(MeshPos), int, _t168D);
      Femdata: MeshCell _t168F = loadFem(MeshCell, _t168C, _t168E);
      string _t1690 = "\n";
      print (_t1684, _t1689, _t168A, _t168F, _t1690);
    }
    bool _t1691;
    bool _t1692 = extractFemItem(Valid(MeshPos), bool, intermed167A);
    bool _t1693 = prim !00BC (_t1692);
    if _t1693 {
      _t1691 = true;
    } else {
      Femdata: MeshPos _t1694 = func findPos041E (meshData03FD, altIntermed167B);
      bool _t1695 = extractFemItem(Valid(MeshPos), bool, _t1694);
      _t1691 = prim !00BC (_t1695);
    }
    if _t1691 {
      string _t1696 = "Went off the mesh\?";
      bool _t1697 = extractFemItem(Valid(MeshPos), bool, intermed167A);
      bool _t1698 = prim !00BC (_t1697);
      string _t1699 = " and ";
      string _t169A = " and ";
      Femdata: MeshPos _t169B = func findPos041E (meshData03FD, altIntermed167B);
      bool _t169C = extractFemItem(Valid(MeshPos), bool, _t169B);
      bool _t169D = prim !00BC (_t169C);
      string _t169E = "\n";
      print (_t1696, _t1698, _t1699, altIntermed167B, _t169A, _t169D, _t169E);
      stabilize;
    }
    vec3 _t169F = func worldPos04DA (intermed167A);
    vec3 _t16A0 = prim -0026<$[3]> (_t169F, altIntermed167B);
    real _t16A1 = prim |()|00B5<$[3]> (_t16A0);
    real _t16A2 = 0.1e-5;
    bool _t16A3 = prim >0080 (_t16A1, _t16A2);
    if _t16A3 {
      string _t16A4 = "ERG:Error in tracing 2: At step:";
      string _t16A5 = " with particle:";
      string _t16A6 = "\n";
      print (_t16A4, step1606, _t16A5, startPos15FF, _t16A6);
      string _t16A7 = "Poses are:";
      vec3 _t16A8 = func worldPos04DA (intermed167A);
      string _t16A9 = "\n";
      print (_t16A7, _t16A8, altIntermed167B, _t16A9);
      stabilize;
    } else {
      string _t16AA = "fine in cell 2:";
      Femdata: Mesh _t16AB = extractFem(cPos1607, Mesh);
      int _t16AC = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t16AD = loadFem(MeshCell, _t16AB, _t16AC);
      string _t16AE = "\n";
      print (_t16AA, _t16AD, _t16AE);
    }
    vec3 _t16AF = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    vec3 _t16B0 = prim *0036<$[3]> (stepSize0410, _t16AF);
    vec3 _t16B1 = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    real _t16B2 = prim |()|00B5<$[3]> (_t16B1);
    vec3 altUp216B3 = prim /0057<$[3]> (_t16B0, _t16B2);
    vec3 _t16B4 = func nV15E7 (intermed167A);
    vec3 up216B5 = prim *0036<$[3]> (stepSize0410, _t16B4);
    vec3 _t16B6 = func altF15FB (altIntermed167B);
    vec3 _t16B7 = prim *0036<$[3]> (stepSize0410, _t16B6);
    vec3 _t16B8 = func altF15FB (altIntermed167B);
    real _t16B9 = prim |()|00B5<$[3]> (_t16B8);
    vec3 upCorrect216BA = prim /0057<$[3]> (_t16B7, _t16B9);
    cPos1607 = func fn_2FB1563 (cPos1607, up216B5);
    altCPos1608 = prim +0017<$[3]> (altCPos1608, altUp216B3);
    int _t16BB = 1;
    step1606 = prim +0015 (step1606, _t16BB);
    bool _t16BC;
    vec3 _t16BD = prim -0026<$[3]> (up216B5, upCorrect216BA);
    real _t16BE = prim |()|00B5<$[3]> (_t16BD);
    real _t16BF = 0.1e-5;
    bool _t16C0 = prim >0080 (_t16BE, _t16BF);
    if _t16C0 {
      _t16BC = true;
    } else {
      vec3 _t16C1 = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16C2 = prim |()|00B5<$[3]> (_t16C1);
      real _t16C3 = 0.1e-4;
      _t16BC = prim >0080 (_t16C2, _t16C3);
    }
    if _t16BC {
      string _t16C4 = "ERG:Error in evaluation on pos 2:";
      string _t16C5 = "\n";
      print (_t16C4, startPos15FF, _t16C5);
      string _t16C6 = "The errors are:";
      vec3 _t16C7 = prim -0026<$[3]> (up216B5, upCorrect216BA);
      real _t16C8 = prim |()|00B5<$[3]> (_t16C7);
      string _t16C9 = " and ";
      vec3 _t16CA = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16CB = prim |()|00B5<$[3]> (_t16CA);
      string _t16CC = "\n";
      print (_t16C6, _t16C8, _t16C9, _t16CB, _t16CC);
      string _t16CD = "The cells are:";
      Femdata: Mesh _t16CE = extractFem(intermed167A, Mesh);
      int _t16CF = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell _t16D0 = loadFem(MeshCell, _t16CE, _t16CF);
      string _t16D1 = " vs ";
      Femdata: MeshPos _t16D2 = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t16D3 = extractFem(_t16D2, Mesh);
      Femdata: MeshPos _t16D4 = func findPos041E (meshData03FD, altIntermed167B);
      int _t16D5 = extractFemItem(CellIndex(MeshPos), int, _t16D4);
      Femdata: MeshCell _t16D6 = loadFem(MeshCell, _t16D3, _t16D5);
      string _t16D7 = "\n";
      print (_t16CD, _t16D0, _t16D1, _t16D6, _t16D7);
    }
  }
}
collection {
  foreach x16D8 in startPoints040F {
    new gg (x16D8);
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData03FD;
input FemData:Space 0space0409_intermedateGlobal040A;
input FemData:FemFunc 0data040B_intermedateGlobal040C;
input int timeSteps040D = <default>;
input real timeEps040E = <default>;
input vec3[] startPoints040F;
input real stepSize0410 = <default>;
input int stepMax0411 = <default>;
input tensor[3,3] M0412;
input vec3 center0413;
constants {
  timeSteps040D = 32;
  timeEps040E = 0.1e-6;
  stepSize0410 = 0.1e-1;
  stepMax0411 = 300;
}
global Femdata: Space space0409;
global Femdata: FemFunc data040B;
global field(3)[3] F1561;
function Femdata: MeshPos#20 findPos041E (Femdata: Mesh mesh041F, vec3 pos0420)
{
  real _t0421 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0422 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0423 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0424 = [_t0421, _t0422, _t0423];
  newtonInt0425 = 0;
  cellInt0426 = extractFemItem(StartCell(Mesh), int, mesh041F);
  int _t0427 = extractFemItem(NumCell(Mesh), int, mesh041F);
  int _t0428 = 1;
  numCell0429 = prim -0024 (_t0427, _t0428);
  yayCells042A = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh041F, pos0420 : vec3);
  foreach cellItter042E in yayCells042A {
    real _t042B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn0424 = [_t042B, _t042C, _t042D];
    cellInt0426 = cellItter042E;
    field(3)[3] _t042F = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
    field(3)[3,3] _t0430 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042F);
    field(3)[3,3] _t0431 = prim inv015E<#∞; %3> (_t0430);
    real _t0432 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0433 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0435 = [_t0432, _t0433, _t0434];
    A0436 = prim @00A5<#∞; %3; $[3,3]> (_t0431, _t0435);
    int _t0437 = 0;
    int _t0438 = 16;
    int[] _t0439 = prim $range01C3 (_t0437, _t0438);
    foreach newtonItter0468 in _t0439 {
      field(3)[3] _t043A = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
      field(3)[3] _t043B = prim -002E<#∞; %3; $[3]> (_t043A, pos0420);
      field(3)[3] _t043C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0436, _t043B);
      delta043D = prim @00A5<#∞; %3; $[3]> (_t043C, xn0424);
      xn0424 = prim -0026<$[3]> (xn0424, delta043D);
      real _t043E = 0.1e-7;
      real _t043F = 0.1e-7;
      real _t0440 = prim *0034 (_t043E, _t043F);
      real _t0441 = prim •00CE<$[3]; $[3]; $[]> (delta043D, delta043D);
      bool _t0442 = prim >=007E (_t0440, _t0441);
      if _t0442 {
        real _t0443 = 0.1e1;
        real _t0444 = 0.1e-7;
        real _t0445 = prim +0017<$[]> (_t0443, _t0444);
        real _t0446 = 0.1e1;
        real _t0447 = 0.1e1;
        real _t0448 = 0.1e1;
        vec3 _t0449 = [_t0446, _t0447, _t0448];
        real _t044A = prim •00CE<$[3]; $[3]; $[]> (_t0449, xn0424);
        bool _t044B = prim >0080 (_t0445, _t044A);
        real _t044C = 0.1e-7;
        real _t044D = 0.1e-7;
        real _t044E = 0.1e-7;
        vec3 _t044F = [_t044C, _t044D, _t044E];
        vec3 _t0450 = prim +0017<$[3]> (_t044F, xn0424);
        real _t0451 = _t0450[0];
        real _t0452 = -0.e0;
        bool _t0453 = prim >0080 (_t0451, _t0452);
        real _t0454 = 0.1e-7;
        real _t0455 = 0.1e-7;
        real _t0456 = 0.1e-7;
        vec3 _t0457 = [_t0454, _t0455, _t0456];
        vec3 _t0458 = prim +0017<$[3]> (_t0457, xn0424);
        real _t0459 = _t0458[1];
        real _t045A = -0.e0;
        bool _t045B = prim >0080 (_t0459, _t045A);
        real _t045C = 0.1e-7;
        real _t045D = 0.1e-7;
        real _t045E = 0.1e-7;
        vec3 _t045F = [_t045C, _t045D, _t045E];
        vec3 _t0460 = prim +0017<$[3]> (_t045F, xn0424);
        real _t0461 = _t0460[2];
        real _t0462 = -0.e0;
        bool _t0463 = prim >0080 (_t0461, _t0462);
        bool _t0464 = prim $and01C4 (_t045B, _t0463);
        bool _t0465 = prim $and01C4 (_t0453, _t0464);
        bool _t0466 = prim $and01C4 (_t044B, _t0465);
        if _t0466 {
          Femdata: MeshPos _t0467 = extractFemItemN((mesh041F, cellInt0426, xn0424, pos0420),AllBuild(MeshPos),);
          return _t0467;
        }
      }
    }
  }
  Femdata: MeshPos _t0469 = extractFemItemN((mesh041F),InvalidBuild(MeshPos),);
  return _t0469;
}
function vec3#2 worldPos04DA (Femdata: MeshPos pos04D3)
{
  vec3 _t04DB = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
  int _t04DC = extractFemItem(CellIndex(MeshPos), int, pos04D3);
  Femdata: Mesh _t04DD = extractFem(pos04D3, Mesh);
  vec3 _t04DE;
  field(3)[3] _t16DB = femField(_t04DD,_t04DC,field(3)[3],Transform,);
  vec3 _t16DC = prim @00A5<#∞; %3; $[3]> (_t16DB, _t04DB);
  _t04DE = _t16DC;
  return _t04DE;
}
function Femdata: MeshPos#1 $exitPos04DF (Femdata: Mesh mesh04E0, int cellId04E1, vec3 refPos04E2, vec3 dPos04E3, real[2] time04E4)
{
  int _t04E5 = -1;
  real _t04E6 = time04E4[1];
  int _t04E7 = prim $r2i01B7 (_t04E6);
  int[2] _t04E9 = func nextCell404E8 (_t04E7, cellId04E1, mesh04E0);
  int _t04EA = 0;
  int _t04EB = prim $sub01C0<int; %2> (_t04E9, _t04EA);
  bool _t04EC = prim !=0086 (_t04E5, _t04EB);
  if _t04EC {
    string _t04ED = "face ";
    real _t04EE = time04E4[1];
    int _t04EF = prim $r2i01B7 (_t04EE);
    string _t04F0 = " to ";
    real _t04F1 = time04E4[1];
    int _t04F2 = prim $r2i01B7 (_t04F1);
    int[2] _t04F3 = func nextCell404E8 (_t04F2, cellId04E1, mesh04E0);
    int _t04F4 = 1;
    int _t04F5 = prim $sub01C0<int; %2> (_t04F3, _t04F4);
    string _t04F6 = "\n";
    string _t04F7 = "got: ";
    real _t04F8 = 0.1e1;
    real _t04F9 = 0.e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.e0;
    vec4 _t04FC = [_t04F8, _t04F9, _t04FA, _t04FB];
    real _t04FD = 0.e0;
    real _t04FE = 0.1e1;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec4 _t0501 = [_t04FD, _t04FE, _t04FF, _t0500];
    real _t0502 = 0.e0;
    real _t0503 = 0.e0;
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    vec4 _t0506 = [_t0502, _t0503, _t0504, _t0505];
    real _t0507 = 0.971445146547e-16;
    real _t0508 = 0.e0;
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    vec4 _t050B = [_t0507, _t0508, _t0509, _t050A];
    tensor[4,4] _t050C = [_t04FC, _t0501, _t0506, _t050B];
    real _t050D = 0.57735026919e0;
    real _t050E = 0.57735026919e0;
    real _t050F = 0.57735026919e0;
    real _t0510 = -0.57735026919e0;
    vec4 _t0511 = [_t050D, _t050E, _t050F, _t0510];
    real _t0512 = -0.333333333333e0;
    real _t0513 = 0.666666666667e0;
    real _t0514 = -0.333333333333e0;
    real _t0515 = 0.333333333333e0;
    vec4 _t0516 = [_t0512, _t0513, _t0514, _t0515];
    real _t0517 = -0.333333333333e0;
    real _t0518 = -0.333333333333e0;
    real _t0519 = 0.666666666667e0;
    real _t051A = 0.333333333333e0;
    vec4 _t051B = [_t0517, _t0518, _t0519, _t051A];
    real _t051C = 0.971445146547e-16;
    real _t051D = 0.e0;
    real _t051E = 0.e0;
    real _t051F = 0.1e1;
    vec4 _t0520 = [_t051C, _t051D, _t051E, _t051F];
    tensor[4,4] _t0521 = [_t0511, _t0516, _t051B, _t0520];
    real _t0522 = -0.333333333333e0;
    real _t0523 = 0.666666666667e0;
    real _t0524 = -0.333333333333e0;
    real _t0525 = 0.333333333333e0;
    vec4 _t0526 = [_t0522, _t0523, _t0524, _t0525];
    real _t0527 = -0.57735026919e0;
    real _t0528 = -0.57735026919e0;
    real _t0529 = -0.57735026919e0;
    real _t052A = 0.57735026919e0;
    vec4 _t052B = [_t0527, _t0528, _t0529, _t052A];
    real _t052C = -0.333333333333e0;
    real _t052D = -0.333333333333e0;
    real _t052E = 0.666666666667e0;
    real _t052F = 0.333333333333e0;
    vec4 _t0530 = [_t052C, _t052D, _t052E, _t052F];
    real _t0531 = 0.971445146547e-16;
    real _t0532 = 0.e0;
    real _t0533 = 0.e0;
    real _t0534 = 0.1e1;
    vec4 _t0535 = [_t0531, _t0532, _t0533, _t0534];
    tensor[4,4] _t0536 = [_t0526, _t052B, _t0530, _t0535];
    real _t0537 = -0.333333333333e0;
    real _t0538 = 0.666666666667e0;
    real _t0539 = -0.333333333333e0;
    real _t053A = 0.333333333333e0;
    vec4 _t053B = [_t0537, _t0538, _t0539, _t053A];
    real _t053C = -0.333333333333e0;
    real _t053D = -0.333333333333e0;
    real _t053E = 0.666666666667e0;
    real _t053F = 0.333333333333e0;
    vec4 _t0540 = [_t053C, _t053D, _t053E, _t053F];
    real _t0541 = 0.57735026919e0;
    real _t0542 = 0.57735026919e0;
    real _t0543 = 0.57735026919e0;
    real _t0544 = -0.57735026919e0;
    vec4 _t0545 = [_t0541, _t0542, _t0543, _t0544];
    real _t0546 = 0.971445146547e-16;
    real _t0547 = 0.e0;
    real _t0548 = 0.e0;
    real _t0549 = 0.1e1;
    vec4 _t054A = [_t0546, _t0547, _t0548, _t0549];
    tensor[4,4] _t054B = [_t053B, _t0540, _t0545, _t054A];
    tensor[4,4][4] _t054C = {_t050C, _t0521, _t0536, _t054B};
    real _t054D = 0.57735026919e0;
    real _t054E = -0.1e1;
    real _t054F = -0.1e1;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    real _t0552 = 0.57735026919e0;
    real _t0553 = 0.1e1;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    vec4 _t0556 = [_t0552, _t0553, _t0554, _t0555];
    real _t0557 = 0.57735026919e0;
    real _t0558 = 0.e0;
    real _t0559 = 0.1e1;
    real _t055A = 0.e0;
    vec4 _t055B = [_t0557, _t0558, _t0559, _t055A];
    real _t055C = 0.e0;
    real _t055D = 0.e0;
    real _t055E = 0.e0;
    real _t055F = 0.1e1;
    vec4 _t0560 = [_t055C, _t055D, _t055E, _t055F];
    tensor[4,4] _t0561 = [_t0551, _t0556, _t055B, _t0560];
    real _t0562 = 0.1e1;
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.e0;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    real _t0567 = 0.e0;
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    vec4 _t056B = [_t0567, _t0568, _t0569, _t056A];
    real _t056C = 0.e0;
    real _t056D = 0.e0;
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    vec4 _t0570 = [_t056C, _t056D, _t056E, _t056F];
    real _t0571 = 0.e0;
    real _t0572 = 0.e0;
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    vec4 _t0575 = [_t0571, _t0572, _t0573, _t0574];
    tensor[4,4] _t0576 = [_t0566, _t056B, _t0570, _t0575];
    real _t0577 = 0.e0;
    real _t0578 = 0.1e1;
    real _t0579 = 0.e0;
    real _t057A = 0.e0;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    real _t057C = -0.1e1;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    vec4 _t0580 = [_t057C, _t057D, _t057E, _t057F];
    real _t0581 = 0.e0;
    real _t0582 = 0.e0;
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    vec4 _t0585 = [_t0581, _t0582, _t0583, _t0584];
    real _t0586 = 0.e0;
    real _t0587 = 0.e0;
    real _t0588 = 0.e0;
    real _t0589 = 0.1e1;
    vec4 _t058A = [_t0586, _t0587, _t0588, _t0589];
    tensor[4,4] _t058B = [_t057B, _t0580, _t0585, _t058A];
    real _t058C = 0.e0;
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    vec4 _t0590 = [_t058C, _t058D, _t058E, _t058F];
    real _t0591 = 0.e0;
    real _t0592 = 0.e0;
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    vec4 _t0595 = [_t0591, _t0592, _t0593, _t0594];
    real _t0596 = 0.1e1;
    real _t0597 = 0.e0;
    real _t0598 = 0.e0;
    real _t0599 = 0.e0;
    vec4 _t059A = [_t0596, _t0597, _t0598, _t0599];
    real _t059B = 0.e0;
    real _t059C = 0.e0;
    real _t059D = 0.e0;
    real _t059E = 0.1e1;
    vec4 _t059F = [_t059B, _t059C, _t059D, _t059E];
    tensor[4,4] _t05A0 = [_t0590, _t0595, _t059A, _t059F];
    tensor[4,4][4] _t05A1 = {_t0561, _t0576, _t058B, _t05A0};
    real _t05A2 = -0.1e1;
    real _t05A3 = -0.57735026919e0;
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.57735026919e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    vec4 _t05AB = [_t05A7, _t05A8, _t05A9, _t05AA];
    real _t05AC = 0.e0;
    real _t05AD = -0.57735026919e0;
    real _t05AE = 0.1e1;
    real _t05AF = 0.e0;
    vec4 _t05B0 = [_t05AC, _t05AD, _t05AE, _t05AF];
    real _t05B1 = 0.e0;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    vec4 _t05B5 = [_t05B1, _t05B2, _t05B3, _t05B4];
    tensor[4,4] _t05B6 = [_t05A6, _t05AB, _t05B0, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.e0;
    real _t05BA = 0.e0;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    real _t05BC = 0.1e1;
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    vec4 _t05C0 = [_t05BC, _t05BD, _t05BE, _t05BF];
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    vec4 _t05C5 = [_t05C1, _t05C2, _t05C3, _t05C4];
    real _t05C6 = 0.e0;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.1e1;
    vec4 _t05CA = [_t05C6, _t05C7, _t05C8, _t05C9];
    tensor[4,4] _t05CB = [_t05BB, _t05C0, _t05C5, _t05CA];
    real _t05CC = 0.1e1;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.e0;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    vec4 _t05D5 = [_t05D1, _t05D2, _t05D3, _t05D4];
    real _t05D6 = 0.e0;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    vec4 _t05DA = [_t05D6, _t05D7, _t05D8, _t05D9];
    real _t05DB = 0.e0;
    real _t05DC = 0.e0;
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    vec4 _t05DF = [_t05DB, _t05DC, _t05DD, _t05DE];
    tensor[4,4] _t05E0 = [_t05D0, _t05D5, _t05DA, _t05DF];
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    vec4 _t05E5 = [_t05E1, _t05E2, _t05E3, _t05E4];
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    vec4 _t05EA = [_t05E6, _t05E7, _t05E8, _t05E9];
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    vec4 _t05EF = [_t05EB, _t05EC, _t05ED, _t05EE];
    real _t05F0 = 0.e0;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    real _t05F3 = 0.1e1;
    vec4 _t05F4 = [_t05F0, _t05F1, _t05F2, _t05F3];
    tensor[4,4] _t05F5 = [_t05E5, _t05EA, _t05EF, _t05F4];
    tensor[4,4][4] _t05F6 = {_t05B6, _t05CB, _t05E0, _t05F5};
    real _t05F7 = -0.1e1;
    real _t05F8 = -0.1e1;
    real _t05F9 = 0.57735026919e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = 0.e0;
    real _t05FE = 0.57735026919e0;
    real _t05FF = 0.e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.1e1;
    real _t0603 = 0.57735026919e0;
    real _t0604 = 0.e0;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    real _t0606 = 0.e0;
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    vec4 _t060A = [_t0606, _t0607, _t0608, _t0609];
    tensor[4,4] _t060B = [_t05FB, _t0600, _t0605, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = 0.e0;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.1e1;
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    vec4 _t061F = [_t061B, _t061C, _t061D, _t061E];
    tensor[4,4] _t0620 = [_t0610, _t0615, _t061A, _t061F];
    real _t0621 = 0.1e1;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.e0;
    real _t0627 = 0.e0;
    real _t0628 = -0.1e1;
    real _t0629 = 0.e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.1e1;
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    real _t0630 = 0.e0;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    vec4 _t0634 = [_t0630, _t0631, _t0632, _t0633];
    tensor[4,4] _t0635 = [_t0625, _t062A, _t062F, _t0634];
    real _t0636 = 0.1e1;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    vec4 _t063F = [_t063B, _t063C, _t063D, _t063E];
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    vec4 _t0644 = [_t0640, _t0641, _t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    vec4 _t0649 = [_t0645, _t0646, _t0647, _t0648];
    tensor[4,4] _t064A = [_t063A, _t063F, _t0644, _t0649];
    tensor[4,4][4] _t064B = {_t060B, _t0620, _t0635, _t064A};
    tensor[4,4][4][4] _t064C = {_t054C, _t05A1, _t05F6, _t064B};
    real _t064D = time04E4[1];
    int _t064E = prim $r2i01B7 (_t064D);
    tensor[4,4][4] _t064F = prim $sub01C0<tensor[4,4][4]; %4> (_t064C, _t064E);
    real _t0650 = time04E4[1];
    int _t0651 = prim $r2i01B7 (_t0650);
    int[2] _t0652 = func nextCell404E8 (_t0651, cellId04E1, mesh04E0);
    int _t0653 = 1;
    int _t0654 = prim $sub01C0<int; %2> (_t0652, _t0653);
    tensor[4,4] _t0655 = prim $sub01C0<tensor[4,4]; %4> (_t064F, _t0654);
    string _t0656 = "\n";
    print (_t04ED, _t04EF, _t04F0, _t04F5, _t04F6, _t04F7, _t0655, _t0656);
    real _t0657 = time04E4[1];
    int _t0658 = prim $r2i01B7 (_t0657);
    int[2] _t0659 = func nextCell404E8 (_t0658, cellId04E1, mesh04E0);
    int _t065A = 0;
    int _t065B = prim $sub01C0<int; %2> (_t0659, _t065A);
    real _t065C = 0.1e1;
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.1e1;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.971445146547e-16;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.57735026919e0;
    real _t0672 = 0.57735026919e0;
    real _t0673 = 0.57735026919e0;
    real _t0674 = -0.57735026919e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = -0.333333333333e0;
    real _t0677 = 0.666666666667e0;
    real _t0678 = -0.333333333333e0;
    real _t0679 = 0.333333333333e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = -0.333333333333e0;
    real _t067C = -0.333333333333e0;
    real _t067D = 0.666666666667e0;
    real _t067E = 0.333333333333e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.971445146547e-16;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = -0.333333333333e0;
    real _t0687 = 0.666666666667e0;
    real _t0688 = -0.333333333333e0;
    real _t0689 = 0.333333333333e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = -0.57735026919e0;
    real _t068C = -0.57735026919e0;
    real _t068D = -0.57735026919e0;
    real _t068E = 0.57735026919e0;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = -0.333333333333e0;
    real _t0691 = -0.333333333333e0;
    real _t0692 = 0.666666666667e0;
    real _t0693 = 0.333333333333e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.971445146547e-16;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = -0.333333333333e0;
    real _t069C = 0.666666666667e0;
    real _t069D = -0.333333333333e0;
    real _t069E = 0.333333333333e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = -0.333333333333e0;
    real _t06A1 = -0.333333333333e0;
    real _t06A2 = 0.666666666667e0;
    real _t06A3 = 0.333333333333e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.57735026919e0;
    real _t06A6 = 0.57735026919e0;
    real _t06A7 = 0.57735026919e0;
    real _t06A8 = -0.57735026919e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.971445146547e-16;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][4] _t06B0 = {_t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.57735026919e0;
    real _t06B2 = -0.1e1;
    real _t06B3 = -0.1e1;
    real _t06B4 = 0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.57735026919e0;
    real _t06B7 = 0.1e1;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.57735026919e0;
    real _t06BC = 0.e0;
    real _t06BD = 0.1e1;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.e0;
    real _t06CC = 0.1e1;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.e0;
    real _t06DC = 0.1e1;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = -0.1e1;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    tensor[4,4][4] _t0705 = {_t06C5, _t06DA, _t06EF, _t0704};
    real _t0706 = -0.1e1;
    real _t0707 = -0.57735026919e0;
    real _t0708 = -0.1e1;
    real _t0709 = 0.1e1;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.1e1;
    real _t070C = -0.57735026919e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = -0.57735026919e0;
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    tensor[4,4] _t071A = [_t070A, _t070F, _t0714, _t0719];
    real _t071B = 0.e0;
    real _t071C = -0.1e1;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.1e1;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.1e1;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    tensor[4,4] _t072F = [_t071F, _t0724, _t0729, _t072E];
    real _t0730 = 0.1e1;
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.1e1;
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = 0.e0;
    real _t0750 = -0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    tensor[4,4][4] _t075A = {_t071A, _t072F, _t0744, _t0759};
    real _t075B = -0.1e1;
    real _t075C = -0.1e1;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.1e1;
    real _t0761 = 0.e0;
    real _t0762 = 0.57735026919e0;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.57735026919e0;
    real _t0768 = 0.e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    tensor[4,4] _t076F = [_t075F, _t0764, _t0769, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    tensor[4,4] _t0784 = [_t0774, _t0779, _t077E, _t0783];
    real _t0785 = 0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = -0.1e1;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.1e1;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    tensor[4,4] _t0799 = [_t0789, _t078E, _t0793, _t0798];
    real _t079A = 0.1e1;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.e0;
    vec4 _t079E = [_t079A, _t079B, _t079C, _t079D];
    real _t079F = 0.e0;
    real _t07A0 = 0.1e1;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    vec4 _t07A3 = [_t079F, _t07A0, _t07A1, _t07A2];
    real _t07A4 = 0.e0;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.1e1;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    real _t07AC = 0.1e1;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    tensor[4,4] _t07AE = [_t079E, _t07A3, _t07A8, _t07AD];
    tensor[4,4][4] _t07AF = {_t076F, _t0784, _t0799, _t07AE};
    tensor[4,4][4][4] _t07B0 = {_t06B0, _t0705, _t075A, _t07AF};
    real _t07B1 = time04E4[1];
    int _t07B2 = prim $r2i01B7 (_t07B1);
    tensor[4,4][4] _t07B3 = prim $sub01C0<tensor[4,4][4]; %4> (_t07B0, _t07B2);
    real _t07B4 = time04E4[1];
    int _t07B5 = prim $r2i01B7 (_t07B4);
    int[2] _t07B6 = func nextCell404E8 (_t07B5, cellId04E1, mesh04E0);
    int _t07B7 = 1;
    int _t07B8 = prim $sub01C0<int; %2> (_t07B6, _t07B7);
    tensor[4,4] _t07B9 = prim $sub01C0<tensor[4,4]; %4> (_t07B3, _t07B8);
    real _t07BA = time04E4[0];
    vec3 _t07BB = prim *0036<$[3]> (_t07BA, dPos04E3);
    vec3 _t07BC = prim +0017<$[3]> (_t07BB, refPos04E2);
    real _t07BD = _t07BC[0];
    real _t07BE = time04E4[0];
    vec3 _t07BF = prim *0036<$[3]> (_t07BE, dPos04E3);
    vec3 _t07C0 = prim +0017<$[3]> (_t07BF, refPos04E2);
    real _t07C1 = _t07C0[1];
    real _t07C2 = time04E4[0];
    vec3 _t07C3 = prim *0036<$[3]> (_t07C2, dPos04E3);
    vec3 _t07C4 = prim +0017<$[3]> (_t07C3, refPos04E2);
    real _t07C5 = _t07C4[2];
    real _t07C6 = 0.1e1;
    vec4 _t07C7 = [_t07BD, _t07C1, _t07C5, _t07C6];
    vec4 _t07C8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07B9, _t07C7);
    real _t07C9 = _t07C8[0];
    real _t07CA = 0.1e1;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.1e1;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    vec4 _t07D8 = [_t07D4, _t07D5, _t07D6, _t07D7];
    real _t07D9 = 0.971445146547e-16;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    tensor[4,4] _t07DE = [_t07CE, _t07D3, _t07D8, _t07DD];
    real _t07DF = 0.57735026919e0;
    real _t07E0 = 0.57735026919e0;
    real _t07E1 = 0.57735026919e0;
    real _t07E2 = -0.57735026919e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = -0.333333333333e0;
    real _t07E5 = 0.666666666667e0;
    real _t07E6 = -0.333333333333e0;
    real _t07E7 = 0.333333333333e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.333333333333e0;
    real _t07EA = -0.333333333333e0;
    real _t07EB = 0.666666666667e0;
    real _t07EC = 0.333333333333e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.971445146547e-16;
    real _t07EF = 0.e0;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.1e1;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    tensor[4,4] _t07F3 = [_t07E3, _t07E8, _t07ED, _t07F2];
    real _t07F4 = -0.333333333333e0;
    real _t07F5 = 0.666666666667e0;
    real _t07F6 = -0.333333333333e0;
    real _t07F7 = 0.333333333333e0;
    vec4 _t07F8 = [_t07F4, _t07F5, _t07F6, _t07F7];
    real _t07F9 = -0.57735026919e0;
    real _t07FA = -0.57735026919e0;
    real _t07FB = -0.57735026919e0;
    real _t07FC = 0.57735026919e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.333333333333e0;
    real _t07FF = -0.333333333333e0;
    real _t0800 = 0.666666666667e0;
    real _t0801 = 0.333333333333e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.971445146547e-16;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    tensor[4,4] _t0808 = [_t07F8, _t07FD, _t0802, _t0807];
    real _t0809 = -0.333333333333e0;
    real _t080A = 0.666666666667e0;
    real _t080B = -0.333333333333e0;
    real _t080C = 0.333333333333e0;
    vec4 _t080D = [_t0809, _t080A, _t080B, _t080C];
    real _t080E = -0.333333333333e0;
    real _t080F = -0.333333333333e0;
    real _t0810 = 0.666666666667e0;
    real _t0811 = 0.333333333333e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.57735026919e0;
    real _t0814 = 0.57735026919e0;
    real _t0815 = 0.57735026919e0;
    real _t0816 = -0.57735026919e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.971445146547e-16;
    real _t0819 = 0.e0;
    real _t081A = 0.e0;
    real _t081B = 0.1e1;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    tensor[4,4] _t081D = [_t080D, _t0812, _t0817, _t081C];
    tensor[4,4][4] _t081E = {_t07DE, _t07F3, _t0808, _t081D};
    real _t081F = 0.57735026919e0;
    real _t0820 = -0.1e1;
    real _t0821 = -0.1e1;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = 0.57735026919e0;
    real _t0825 = 0.1e1;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.57735026919e0;
    real _t082A = 0.e0;
    real _t082B = 0.1e1;
    real _t082C = 0.e0;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    tensor[4,4] _t0833 = [_t0823, _t0828, _t082D, _t0832];
    real _t0834 = 0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = 0.e0;
    real _t083A = 0.1e1;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = 0.e0;
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    tensor[4,4] _t0848 = [_t0838, _t083D, _t0842, _t0847];
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    real _t085B = 0.1e1;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    tensor[4,4] _t085D = [_t084D, _t0852, _t0857, _t085C];
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    vec4 _t0862 = [_t085E, _t085F, _t0860, _t0861];
    real _t0863 = 0.e0;
    real _t0864 = 0.e0;
    real _t0865 = 0.1e1;
    real _t0866 = 0.e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.1e1;
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.e0;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.1e1;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    tensor[4,4] _t0872 = [_t0862, _t0867, _t086C, _t0871];
    tensor[4,4][4] _t0873 = {_t0833, _t0848, _t085D, _t0872};
    real _t0874 = -0.1e1;
    real _t0875 = -0.57735026919e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.1e1;
    real _t087A = -0.57735026919e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = -0.57735026919e0;
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    vec4 _t0887 = [_t0883, _t0884, _t0885, _t0886];
    tensor[4,4] _t0888 = [_t0878, _t087D, _t0882, _t0887];
    real _t0889 = 0.e0;
    real _t088A = -0.1e1;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    vec4 _t089C = [_t0898, _t0899, _t089A, _t089B];
    tensor[4,4] _t089D = [_t088D, _t0892, _t0897, _t089C];
    real _t089E = 0.1e1;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.e0;
    real _t08A4 = 0.1e1;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    real _t08AD = 0.e0;
    real _t08AE = 0.e0;
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    vec4 _t08B1 = [_t08AD, _t08AE, _t08AF, _t08B0];
    tensor[4,4] _t08B2 = [_t08A2, _t08A7, _t08AC, _t08B1];
    real _t08B3 = 0.1e1;
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    vec4 _t08B7 = [_t08B3, _t08B4, _t08B5, _t08B6];
    real _t08B8 = 0.e0;
    real _t08B9 = 0.e0;
    real _t08BA = 0.1e1;
    real _t08BB = 0.e0;
    vec4 _t08BC = [_t08B8, _t08B9, _t08BA, _t08BB];
    real _t08BD = 0.e0;
    real _t08BE = -0.1e1;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    tensor[4,4] _t08C7 = [_t08B7, _t08BC, _t08C1, _t08C6];
    tensor[4,4][4] _t08C8 = {_t0888, _t089D, _t08B2, _t08C7};
    real _t08C9 = -0.1e1;
    real _t08CA = -0.1e1;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.1e1;
    real _t08CF = 0.e0;
    real _t08D0 = 0.57735026919e0;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.1e1;
    real _t08D5 = 0.57735026919e0;
    real _t08D6 = 0.e0;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.1e1;
    vec4 _t08DC = [_t08D8, _t08D9, _t08DA, _t08DB];
    tensor[4,4] _t08DD = [_t08CD, _t08D2, _t08D7, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.1e1;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.1e1;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    vec4 _t08F1 = [_t08ED, _t08EE, _t08EF, _t08F0];
    tensor[4,4] _t08F2 = [_t08E2, _t08E7, _t08EC, _t08F1];
    real _t08F3 = 0.1e1;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.e0;
    real _t08FA = -0.1e1;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    vec4 _t0906 = [_t0902, _t0903, _t0904, _t0905];
    tensor[4,4] _t0907 = [_t08F7, _t08FC, _t0901, _t0906];
    real _t0908 = 0.1e1;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.e0;
    vec4 _t090C = [_t0908, _t0909, _t090A, _t090B];
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    vec4 _t0911 = [_t090D, _t090E, _t090F, _t0910];
    real _t0912 = 0.e0;
    real _t0913 = 0.e0;
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    vec4 _t0916 = [_t0912, _t0913, _t0914, _t0915];
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    vec4 _t091B = [_t0917, _t0918, _t0919, _t091A];
    tensor[4,4] _t091C = [_t090C, _t0911, _t0916, _t091B];
    tensor[4,4][4] _t091D = {_t08DD, _t08F2, _t0907, _t091C};
    tensor[4,4][4][4] _t091E = {_t081E, _t0873, _t08C8, _t091D};
    real _t091F = time04E4[1];
    int _t0920 = prim $r2i01B7 (_t091F);
    tensor[4,4][4] _t0921 = prim $sub01C0<tensor[4,4][4]; %4> (_t091E, _t0920);
    real _t0922 = time04E4[1];
    int _t0923 = prim $r2i01B7 (_t0922);
    int[2] _t0924 = func nextCell404E8 (_t0923, cellId04E1, mesh04E0);
    int _t0925 = 1;
    int _t0926 = prim $sub01C0<int; %2> (_t0924, _t0925);
    tensor[4,4] _t0927 = prim $sub01C0<tensor[4,4]; %4> (_t0921, _t0926);
    real _t0928 = time04E4[0];
    vec3 _t0929 = prim *0036<$[3]> (_t0928, dPos04E3);
    vec3 _t092A = prim +0017<$[3]> (_t0929, refPos04E2);
    real _t092B = _t092A[0];
    real _t092C = time04E4[0];
    vec3 _t092D = prim *0036<$[3]> (_t092C, dPos04E3);
    vec3 _t092E = prim +0017<$[3]> (_t092D, refPos04E2);
    real _t092F = _t092E[1];
    real _t0930 = time04E4[0];
    vec3 _t0931 = prim *0036<$[3]> (_t0930, dPos04E3);
    vec3 _t0932 = prim +0017<$[3]> (_t0931, refPos04E2);
    real _t0933 = _t0932[2];
    real _t0934 = 0.1e1;
    vec4 _t0935 = [_t092B, _t092F, _t0933, _t0934];
    vec4 _t0936 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0927, _t0935);
    real _t0937 = _t0936[1];
    real _t0938 = 0.1e1;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.1e1;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    vec4 _t0946 = [_t0942, _t0943, _t0944, _t0945];
    real _t0947 = 0.971445146547e-16;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    vec4 _t094B = [_t0947, _t0948, _t0949, _t094A];
    tensor[4,4] _t094C = [_t093C, _t0941, _t0946, _t094B];
    real _t094D = 0.57735026919e0;
    real _t094E = 0.57735026919e0;
    real _t094F = 0.57735026919e0;
    real _t0950 = -0.57735026919e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = -0.333333333333e0;
    real _t0953 = 0.666666666667e0;
    real _t0954 = -0.333333333333e0;
    real _t0955 = 0.333333333333e0;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    real _t0957 = -0.333333333333e0;
    real _t0958 = -0.333333333333e0;
    real _t0959 = 0.666666666667e0;
    real _t095A = 0.333333333333e0;
    vec4 _t095B = [_t0957, _t0958, _t0959, _t095A];
    real _t095C = 0.971445146547e-16;
    real _t095D = 0.e0;
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    vec4 _t0960 = [_t095C, _t095D, _t095E, _t095F];
    tensor[4,4] _t0961 = [_t0951, _t0956, _t095B, _t0960];
    real _t0962 = -0.333333333333e0;
    real _t0963 = 0.666666666667e0;
    real _t0964 = -0.333333333333e0;
    real _t0965 = 0.333333333333e0;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    real _t0967 = -0.57735026919e0;
    real _t0968 = -0.57735026919e0;
    real _t0969 = -0.57735026919e0;
    real _t096A = 0.57735026919e0;
    vec4 _t096B = [_t0967, _t0968, _t0969, _t096A];
    real _t096C = -0.333333333333e0;
    real _t096D = -0.333333333333e0;
    real _t096E = 0.666666666667e0;
    real _t096F = 0.333333333333e0;
    vec4 _t0970 = [_t096C, _t096D, _t096E, _t096F];
    real _t0971 = 0.971445146547e-16;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.1e1;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    tensor[4,4] _t0976 = [_t0966, _t096B, _t0970, _t0975];
    real _t0977 = -0.333333333333e0;
    real _t0978 = 0.666666666667e0;
    real _t0979 = -0.333333333333e0;
    real _t097A = 0.333333333333e0;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    real _t097C = -0.333333333333e0;
    real _t097D = -0.333333333333e0;
    real _t097E = 0.666666666667e0;
    real _t097F = 0.333333333333e0;
    vec4 _t0980 = [_t097C, _t097D, _t097E, _t097F];
    real _t0981 = 0.57735026919e0;
    real _t0982 = 0.57735026919e0;
    real _t0983 = 0.57735026919e0;
    real _t0984 = -0.57735026919e0;
    vec4 _t0985 = [_t0981, _t0982, _t0983, _t0984];
    real _t0986 = 0.971445146547e-16;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.1e1;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    tensor[4,4] _t098B = [_t097B, _t0980, _t0985, _t098A];
    tensor[4,4][4] _t098C = {_t094C, _t0961, _t0976, _t098B};
    real _t098D = 0.57735026919e0;
    real _t098E = -0.1e1;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.57735026919e0;
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.57735026919e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    vec4 _t09A0 = [_t099C, _t099D, _t099E, _t099F];
    tensor[4,4] _t09A1 = [_t0991, _t0996, _t099B, _t09A0];
    real _t09A2 = 0.1e1;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.e0;
    real _t09A8 = 0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    real _t09B1 = 0.e0;
    real _t09B2 = 0.e0;
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    vec4 _t09B5 = [_t09B1, _t09B2, _t09B3, _t09B4];
    tensor[4,4] _t09B6 = [_t09A6, _t09AB, _t09B0, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    real _t09BC = -0.1e1;
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    vec4 _t09C0 = [_t09BC, _t09BD, _t09BE, _t09BF];
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    vec4 _t09C5 = [_t09C1, _t09C2, _t09C3, _t09C4];
    real _t09C6 = 0.e0;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    real _t09C9 = 0.1e1;
    vec4 _t09CA = [_t09C6, _t09C7, _t09C8, _t09C9];
    tensor[4,4] _t09CB = [_t09BB, _t09C0, _t09C5, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    real _t09D1 = 0.e0;
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    vec4 _t09D5 = [_t09D1, _t09D2, _t09D3, _t09D4];
    real _t09D6 = 0.1e1;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    vec4 _t09DA = [_t09D6, _t09D7, _t09D8, _t09D9];
    real _t09DB = 0.e0;
    real _t09DC = 0.e0;
    real _t09DD = 0.e0;
    real _t09DE = 0.1e1;
    vec4 _t09DF = [_t09DB, _t09DC, _t09DD, _t09DE];
    tensor[4,4] _t09E0 = [_t09D0, _t09D5, _t09DA, _t09DF];
    tensor[4,4][4] _t09E1 = {_t09A1, _t09B6, _t09CB, _t09E0};
    real _t09E2 = -0.1e1;
    real _t09E3 = -0.57735026919e0;
    real _t09E4 = -0.1e1;
    real _t09E5 = 0.1e1;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.1e1;
    real _t09E8 = -0.57735026919e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.57735026919e0;
    real _t09EE = 0.1e1;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.e0;
    real _t09F2 = 0.e0;
    real _t09F3 = 0.e0;
    real _t09F4 = 0.1e1;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    tensor[4,4] _t09F6 = [_t09E6, _t09EB, _t09F0, _t09F5];
    real _t09F7 = 0.e0;
    real _t09F8 = -0.1e1;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.1e1;
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    real _t0A06 = 0.e0;
    real _t0A07 = 0.e0;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.1e1;
    vec4 _t0A0A = [_t0A06, _t0A07, _t0A08, _t0A09];
    tensor[4,4] _t0A0B = [_t09FB, _t0A00, _t0A05, _t0A0A];
    real _t0A0C = 0.1e1;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    vec4 _t0A1F = [_t0A1B, _t0A1C, _t0A1D, _t0A1E];
    tensor[4,4] _t0A20 = [_t0A10, _t0A15, _t0A1A, _t0A1F];
    real _t0A21 = 0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = -0.1e1;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    real _t0A30 = 0.e0;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    vec4 _t0A34 = [_t0A30, _t0A31, _t0A32, _t0A33];
    tensor[4,4] _t0A35 = [_t0A25, _t0A2A, _t0A2F, _t0A34];
    tensor[4,4][4] _t0A36 = {_t09F6, _t0A0B, _t0A20, _t0A35};
    real _t0A37 = -0.1e1;
    real _t0A38 = -0.1e1;
    real _t0A39 = 0.57735026919e0;
    real _t0A3A = 0.1e1;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.57735026919e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.1e1;
    real _t0A43 = 0.57735026919e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.e0;
    real _t0A49 = 0.1e1;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    tensor[4,4] _t0A4B = [_t0A3B, _t0A40, _t0A45, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.e0;
    real _t0A5E = 0.1e1;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    tensor[4,4] _t0A60 = [_t0A50, _t0A55, _t0A5A, _t0A5F];
    real _t0A61 = 0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = -0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.1e1;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.1e1;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    tensor[4,4] _t0A75 = [_t0A65, _t0A6A, _t0A6F, _t0A74];
    real _t0A76 = 0.1e1;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.1e1;
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    real _t0A85 = 0.e0;
    real _t0A86 = 0.e0;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.1e1;
    vec4 _t0A89 = [_t0A85, _t0A86, _t0A87, _t0A88];
    tensor[4,4] _t0A8A = [_t0A7A, _t0A7F, _t0A84, _t0A89];
    tensor[4,4][4] _t0A8B = {_t0A4B, _t0A60, _t0A75, _t0A8A};
    tensor[4,4][4][4] _t0A8C = {_t098C, _t09E1, _t0A36, _t0A8B};
    real _t0A8D = time04E4[1];
    int _t0A8E = prim $r2i01B7 (_t0A8D);
    tensor[4,4][4] _t0A8F = prim $sub01C0<tensor[4,4][4]; %4> (_t0A8C, _t0A8E);
    real _t0A90 = time04E4[1];
    int _t0A91 = prim $r2i01B7 (_t0A90);
    int[2] _t0A92 = func nextCell404E8 (_t0A91, cellId04E1, mesh04E0);
    int _t0A93 = 1;
    int _t0A94 = prim $sub01C0<int; %2> (_t0A92, _t0A93);
    tensor[4,4] _t0A95 = prim $sub01C0<tensor[4,4]; %4> (_t0A8F, _t0A94);
    real _t0A96 = time04E4[0];
    vec3 _t0A97 = prim *0036<$[3]> (_t0A96, dPos04E3);
    vec3 _t0A98 = prim +0017<$[3]> (_t0A97, refPos04E2);
    real _t0A99 = _t0A98[0];
    real _t0A9A = time04E4[0];
    vec3 _t0A9B = prim *0036<$[3]> (_t0A9A, dPos04E3);
    vec3 _t0A9C = prim +0017<$[3]> (_t0A9B, refPos04E2);
    real _t0A9D = _t0A9C[1];
    real _t0A9E = time04E4[0];
    vec3 _t0A9F = prim *0036<$[3]> (_t0A9E, dPos04E3);
    vec3 _t0AA0 = prim +0017<$[3]> (_t0A9F, refPos04E2);
    real _t0AA1 = _t0AA0[2];
    real _t0AA2 = 0.1e1;
    vec4 _t0AA3 = [_t0A99, _t0A9D, _t0AA1, _t0AA2];
    vec4 _t0AA4 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A95, _t0AA3);
    real _t0AA5 = _t0AA4[2];
    vec3 _t0AA6 = [_t07C9, _t0937, _t0AA5];
    real _t0AA7 = time04E4[1];
    int _t0AA8 = prim $r2i01B7 (_t0AA7);
    int[2] _t0AA9 = func nextCell404E8 (_t0AA8, cellId04E1, mesh04E0);
    int _t0AAA = 1;
    int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
    Femdata: MeshPos _t0AAC = extractFemItemN((mesh04E0, _t065B, _t0AA6, _t0AAB),RefBuild(Mesh),);
    return _t0AAC;
  } else {
    real _t0AAD = time04E4[0];
    vec3 _t0AAE = prim *0036<$[3]> (_t0AAD, dPos04E3);
    vec3 _t0AAF = prim +0017<$[3]> (_t0AAE, refPos04E2);
    Femdata: MeshPos _t0AB0 = extractFemItemN((mesh04E0, _t0AAF),InvalidBuildBoundary(MeshPos),);
    return _t0AB0;
  }
}
function int[2]#8 nextCell404E8 (int faceIdx0AB1, int cell0AB2, Femdata: Mesh mesh0AB3)
{
  int _t0AB4 = -1;
  bool _t0AB5 = prim ==0082 (faceIdx0AB1, _t0AB4);
  if _t0AB5 {
    int _t0AB6 = -1;
    int _t0AB7 = -1;
    int[2] _t0AB8 = {_t0AB6, _t0AB7};
    return _t0AB8;
  } else {
    int _t0AB9 = 8;
    int _t0ABA = prim *0033 (cell0AB2, _t0AB9);
    int _t0ABB = 2;
    int _t0ABC = prim *0033 (faceIdx0AB1, _t0ABB);
    int _t0ABD = prim +0015 (_t0ABA, _t0ABC);
    int[2] _t0ABE = extractFemItemN((mesh0AB3, _t0ABD),CellFaceCell(Mesh),);
    return _t0ABE;
  }
}
function vec2#2 _exit1099 (vec3 refPos0AC0, vec3 dPos0AC1, int i109A)
{
  real time109B = +inf;
  int face109C = -1;
  real faceTime109D = -inf;
  string _t109E = "\ntest :";
  real _t109F = 0.57735026919e0;
  real _t10A0 = 0.57735026919e0;
  real _t10A1 = 0.57735026919e0;
  real _t10A2 = 0.57735026919e0;
  vec3 _t10A3 = [_t10A0, _t10A1, _t10A2];
  real _t10A4 = prim •00CE<$[3]; $[3]; $[]> (_t10A3, refPos0AC0);
  real _t10A5 = prim -0026<$[]> (_t109F, _t10A4);
  real _t10A6 = 0.57735026919e0;
  real _t10A7 = 0.57735026919e0;
  real _t10A8 = 0.57735026919e0;
  vec3 _t10A9 = [_t10A6, _t10A7, _t10A8];
  real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, dPos0AC1);
  real _t10AB = prim /0055 (_t10A5, _t10AA);
  string _t10AC = " test2: ";
  real _t10AD = 0.57735026919e0;
  real _t10AE = 0.57735026919e0;
  real _t10AF = 0.57735026919e0;
  vec3 _t10B0 = [_t10AD, _t10AE, _t10AF];
  real _t10B1 = prim •00CE<$[3]; $[3]; $[]> (_t10B0, dPos0AC1);
  string _t10B2 = " insideTest: ";
  real _t10B3 = 0.1e1;
  real _t10B4 = 0.1e-7;
  real _t10B5 = prim +0017<$[]> (_t10B3, _t10B4);
  real _t10B6 = 0.1e1;
  real _t10B7 = 0.1e1;
  real _t10B8 = 0.1e1;
  vec3 _t10B9 = [_t10B6, _t10B7, _t10B8];
  real _t10BA = 0.57735026919e0;
  real _t10BB = 0.57735026919e0;
  real _t10BC = 0.57735026919e0;
  real _t10BD = 0.57735026919e0;
  vec3 _t10BE = [_t10BB, _t10BC, _t10BD];
  real _t10BF = prim •00CE<$[3]; $[3]; $[]> (_t10BE, refPos0AC0);
  real _t10C0 = prim -0026<$[]> (_t10BA, _t10BF);
  real _t10C1 = 0.57735026919e0;
  real _t10C2 = 0.57735026919e0;
  real _t10C3 = 0.57735026919e0;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, dPos0AC1);
  real _t10C6 = prim /0055 (_t10C0, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0AC1, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0AC0, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10B9, _t10C8);
  bool _t10CA = prim >0080 (_t10B5, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.57735026919e0;
  real _t10D0 = 0.57735026919e0;
  real _t10D1 = 0.57735026919e0;
  real _t10D2 = 0.57735026919e0;
  vec3 _t10D3 = [_t10D0, _t10D1, _t10D2];
  real _t10D4 = prim •00CE<$[3]; $[3]; $[]> (_t10D3, refPos0AC0);
  real _t10D5 = prim -0026<$[]> (_t10CF, _t10D4);
  real _t10D6 = 0.57735026919e0;
  real _t10D7 = 0.57735026919e0;
  real _t10D8 = 0.57735026919e0;
  vec3 _t10D9 = [_t10D6, _t10D7, _t10D8];
  real _t10DA = prim •00CE<$[3]; $[3]; $[]> (_t10D9, dPos0AC1);
  real _t10DB = prim /0055 (_t10D5, _t10DA);
  vec3 _t10DC = prim *0038<$[3]> (dPos0AC1, _t10DB);
  vec3 _t10DD = prim +0017<$[3]> (refPos0AC0, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (_t10CE, _t10DD);
  real _t10DF = _t10DE[0];
  real _t10E0 = -0.e0;
  bool _t10E1 = prim >0080 (_t10DF, _t10E0);
  real _t10E2 = 0.1e-7;
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  vec3 _t10E5 = [_t10E2, _t10E3, _t10E4];
  real _t10E6 = 0.57735026919e0;
  real _t10E7 = 0.57735026919e0;
  real _t10E8 = 0.57735026919e0;
  real _t10E9 = 0.57735026919e0;
  vec3 _t10EA = [_t10E7, _t10E8, _t10E9];
  real _t10EB = prim •00CE<$[3]; $[3]; $[]> (_t10EA, refPos0AC0);
  real _t10EC = prim -0026<$[]> (_t10E6, _t10EB);
  real _t10ED = 0.57735026919e0;
  real _t10EE = 0.57735026919e0;
  real _t10EF = 0.57735026919e0;
  vec3 _t10F0 = [_t10ED, _t10EE, _t10EF];
  real _t10F1 = prim •00CE<$[3]; $[3]; $[]> (_t10F0, dPos0AC1);
  real _t10F2 = prim /0055 (_t10EC, _t10F1);
  vec3 _t10F3 = prim *0038<$[3]> (dPos0AC1, _t10F2);
  vec3 _t10F4 = prim +0017<$[3]> (refPos0AC0, _t10F3);
  vec3 _t10F5 = prim +0017<$[3]> (_t10E5, _t10F4);
  real _t10F6 = _t10F5[1];
  real _t10F7 = -0.e0;
  bool _t10F8 = prim >0080 (_t10F6, _t10F7);
  real _t10F9 = 0.1e-7;
  real _t10FA = 0.1e-7;
  real _t10FB = 0.1e-7;
  vec3 _t10FC = [_t10F9, _t10FA, _t10FB];
  real _t10FD = 0.57735026919e0;
  real _t10FE = 0.57735026919e0;
  real _t10FF = 0.57735026919e0;
  real _t1100 = 0.57735026919e0;
  vec3 _t1101 = [_t10FE, _t10FF, _t1100];
  real _t1102 = prim •00CE<$[3]; $[3]; $[]> (_t1101, refPos0AC0);
  real _t1103 = prim -0026<$[]> (_t10FD, _t1102);
  real _t1104 = 0.57735026919e0;
  real _t1105 = 0.57735026919e0;
  real _t1106 = 0.57735026919e0;
  vec3 _t1107 = [_t1104, _t1105, _t1106];
  real _t1108 = prim •00CE<$[3]; $[3]; $[]> (_t1107, dPos0AC1);
  real _t1109 = prim /0055 (_t1103, _t1108);
  vec3 _t110A = prim *0038<$[3]> (dPos0AC1, _t1109);
  vec3 _t110B = prim +0017<$[3]> (refPos0AC0, _t110A);
  vec3 _t110C = prim +0017<$[3]> (_t10FC, _t110B);
  real _t110D = _t110C[2];
  real _t110E = -0.e0;
  bool _t110F = prim >0080 (_t110D, _t110E);
  bool _t1110 = prim $and01C4 (_t10F8, _t110F);
  bool _t1111 = prim $and01C4 (_t10E1, _t1110);
  bool _t1112 = prim $and01C4 (_t10CA, _t1111);
  string _t1113 = " dist: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  real _t1117 = 0.57735026919e0;
  vec3 _t1118 = [_t1115, _t1116, _t1117];
  real _t1119 = prim •00CE<$[3]; $[3]; $[]> (_t1118, refPos0AC0);
  real _t111A = prim -0026<$[]> (_t1114, _t1119);
  real _t111B = prim |()|00B5<$[]> (_t111A);
  string _t111C = "signed dist: ";
  real _t111D = 0.57735026919e0;
  real _t111E = 0.57735026919e0;
  real _t111F = 0.57735026919e0;
  real _t1120 = 0.57735026919e0;
  vec3 _t1121 = [_t111E, _t111F, _t1120];
  real _t1122 = prim •00CE<$[3]; $[3]; $[]> (_t1121, refPos0AC0);
  real _t1123 = prim -0026<$[]> (_t111D, _t1122);
  string _t1124 = " face: ";
  int _t1125 = 0;
  string _t1126 = " place: ";
  real _t1127 = 0.57735026919e0;
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, refPos0AC0);
  real _t112D = prim -0026<$[]> (_t1127, _t112C);
  real _t112E = 0.57735026919e0;
  real _t112F = 0.57735026919e0;
  real _t1130 = 0.57735026919e0;
  vec3 _t1131 = [_t112E, _t112F, _t1130];
  real _t1132 = prim •00CE<$[3]; $[3]; $[]> (_t1131, dPos0AC1);
  real _t1133 = prim /0055 (_t112D, _t1132);
  vec3 _t1134 = prim *0038<$[3]> (dPos0AC1, _t1133);
  vec3 _t1135 = prim +0017<$[3]> (refPos0AC0, _t1134);
  string _t1136 = " error: ";
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  real _t113A = 0.57735026919e0;
  vec3 _t113B = [_t1138, _t1139, _t113A];
  real _t113C = 0.57735026919e0;
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, refPos0AC0);
  real _t1142 = prim -0026<$[]> (_t113C, _t1141);
  real _t1143 = 0.57735026919e0;
  real _t1144 = 0.57735026919e0;
  real _t1145 = 0.57735026919e0;
  vec3 _t1146 = [_t1143, _t1144, _t1145];
  real _t1147 = prim •00CE<$[3]; $[3]; $[]> (_t1146, dPos0AC1);
  real _t1148 = prim /0055 (_t1142, _t1147);
  vec3 _t1149 = prim *0038<$[3]> (dPos0AC1, _t1148);
  vec3 _t114A = prim +0017<$[3]> (refPos0AC0, _t1149);
  real _t114B = prim •00CE<$[3]; $[3]; $[]> (_t113B, _t114A);
  real _t114C = prim -0026<$[]> (_t1137, _t114B);
  real _t114D = prim |()|00B5<$[]> (_t114C);
  string _t114E = " offset :";
  string _t114F = " dp: ";
  string _t1150 = " otherPossibleTime: ";
  string _t1151 = "\n";
  string _t1152 = "\n original face: ";
  string _t1153 = " ";
  print (_t109E, _t10AB, _t10AC, _t10B1, _t10B2, _t1112, _t1113, _t111B, _t111C, _t1123, _t1124, _t1125, _t1126, _t1135, _t1136, _t114D, _t114E, refPos0AC0, _t114F, dPos0AC1, _t1150, faceTime109D, _t1151, _t1152, i109A, _t1153);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  real _t1157 = 0.57735026919e0;
  vec3 _t1158 = [_t1155, _t1156, _t1157];
  real _t1159 = prim •00CE<$[3]; $[3]; $[]> (_t1158, refPos0AC0);
  real _t115A = prim -0026<$[]> (_t1154, _t1159);
  real _t115B = 0.57735026919e0;
  real _t115C = 0.57735026919e0;
  real _t115D = 0.57735026919e0;
  vec3 _t115E = [_t115B, _t115C, _t115D];
  real _t115F = prim •00CE<$[3]; $[3]; $[]> (_t115E, dPos0AC1);
  real _t1160 = prim /0055 (_t115A, _t115F);
  real _t1161 = -0.1e-7;
  bool _t1162 = prim >=007E (_t1160, _t1161);
  real _t1163 = 0.57735026919e0;
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  vec3 _t1167 = [_t1164, _t1165, _t1166];
  real _t1168 = prim •00CE<$[3]; $[3]; $[]> (_t1167, refPos0AC0);
  real _t1169 = prim -0026<$[]> (_t1163, _t1168);
  real _t116A = 0.57735026919e0;
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  vec3 _t116D = [_t116A, _t116B, _t116C];
  real _t116E = prim •00CE<$[3]; $[3]; $[]> (_t116D, dPos0AC1);
  real _t116F = prim /0055 (_t1169, _t116E);
  bool _t1170 = prim >0080 (time109B, _t116F);
  real _t1171 = 0.57735026919e0;
  real _t1172 = 0.57735026919e0;
  real _t1173 = 0.57735026919e0;
  vec3 _t1174 = [_t1171, _t1172, _t1173];
  real _t1175 = prim •00CE<$[3]; $[3]; $[]> (_t1174, dPos0AC1);
  real _t1176 = prim |()|00B5<$[]> (_t1175);
  real _t1177 = 0.1e-7;
  bool _t1178 = prim >=007E (_t1176, _t1177);
  bool _t1179 = prim $and01C4 (_t1170, _t1178);
  bool _t117A = prim $and01C4 (_t1162, _t1179);
  if _t117A {
    int _t117B = 0;
    bool _t117C = prim !=0086 (i109A, _t117B);
    if _t117C {
      string _t117D = "Saving at this face!";
      real _t117E = 0.57735026919e0;
      real _t117F = 0.57735026919e0;
      real _t1180 = 0.57735026919e0;
      real _t1181 = 0.57735026919e0;
      vec3 _t1182 = [_t117F, _t1180, _t1181];
      real _t1183 = prim •00CE<$[3]; $[3]; $[]> (_t1182, refPos0AC0);
      real _t1184 = prim -0026<$[]> (_t117E, _t1183);
      real _t1185 = 0.57735026919e0;
      real _t1186 = 0.57735026919e0;
      real _t1187 = 0.57735026919e0;
      vec3 _t1188 = [_t1185, _t1186, _t1187];
      real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, dPos0AC1);
      real _t118A = prim /0055 (_t1184, _t1189);
      real _t118B = 0.57735026919e0;
      real _t118C = 0.57735026919e0;
      real _t118D = 0.57735026919e0;
      real _t118E = 0.57735026919e0;
      vec3 _t118F = [_t118C, _t118D, _t118E];
      real _t1190 = prim •00CE<$[3]; $[3]; $[]> (_t118F, refPos0AC0);
      real _t1191 = prim -0026<$[]> (_t118B, _t1190);
      real _t1192 = 0.57735026919e0;
      real _t1193 = 0.57735026919e0;
      real _t1194 = 0.57735026919e0;
      vec3 _t1195 = [_t1192, _t1193, _t1194];
      real _t1196 = prim •00CE<$[3]; $[3]; $[]> (_t1195, dPos0AC1);
      real _t1197 = prim /0055 (_t1191, _t1196);
      bool _t1198 = prim >0080 (time109B, _t1197);
      string _t1199 = "\n";
      print (_t117D, _t118A, _t1198, _t1199);
      real _t119A = 0.57735026919e0;
      real _t119B = 0.57735026919e0;
      real _t119C = 0.57735026919e0;
      real _t119D = 0.57735026919e0;
      vec3 _t119E = [_t119B, _t119C, _t119D];
      real _t119F = prim •00CE<$[3]; $[3]; $[]> (_t119E, refPos0AC0);
      real _t11A0 = prim -0026<$[]> (_t119A, _t119F);
      real _t11A1 = 0.57735026919e0;
      real _t11A2 = 0.57735026919e0;
      real _t11A3 = 0.57735026919e0;
      vec3 _t11A4 = [_t11A1, _t11A2, _t11A3];
      real _t11A5 = prim •00CE<$[3]; $[3]; $[]> (_t11A4, dPos0AC1);
      time109B = prim /0055 (_t11A0, _t11A5);
      face109C = 0;
    } else {
      real _t11A6 = 0.57735026919e0;
      real _t11A7 = 0.57735026919e0;
      real _t11A8 = 0.57735026919e0;
      real _t11A9 = 0.57735026919e0;
      vec3 _t11AA = [_t11A7, _t11A8, _t11A9];
      real _t11AB = prim •00CE<$[3]; $[3]; $[]> (_t11AA, refPos0AC0);
      real _t11AC = prim -0026<$[]> (_t11A6, _t11AB);
      real _t11AD = 0.57735026919e0;
      real _t11AE = 0.57735026919e0;
      real _t11AF = 0.57735026919e0;
      vec3 _t11B0 = [_t11AD, _t11AE, _t11AF];
      real _t11B1 = prim •00CE<$[3]; $[3]; $[]> (_t11B0, dPos0AC1);
      faceTime109D = prim /0055 (_t11AC, _t11B1);
      string _t11B2 = "Saving backup time: ";
      string _t11B3 = "\n";
      print (_t11B2, faceTime109D, _t11B3);
    }
  }
  string _t11B4 = "\ntest :";
  real _t11B5 = 0.e0;
  real _t11B6 = -0.1e1;
  real _t11B7 = 0.e0;
  real _t11B8 = 0.e0;
  vec3 _t11B9 = [_t11B6, _t11B7, _t11B8];
  real _t11BA = prim •00CE<$[3]; $[3]; $[]> (_t11B9, refPos0AC0);
  real _t11BB = prim -0026<$[]> (_t11B5, _t11BA);
  real _t11BC = -0.1e1;
  real _t11BD = 0.e0;
  real _t11BE = 0.e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, dPos0AC1);
  real _t11C1 = prim /0055 (_t11BB, _t11C0);
  string _t11C2 = " test2: ";
  real _t11C3 = -0.1e1;
  real _t11C4 = 0.e0;
  real _t11C5 = 0.e0;
  vec3 _t11C6 = [_t11C3, _t11C4, _t11C5];
  real _t11C7 = prim •00CE<$[3]; $[3]; $[]> (_t11C6, dPos0AC1);
  string _t11C8 = " insideTest: ";
  real _t11C9 = 0.1e1;
  real _t11CA = 0.1e-7;
  real _t11CB = prim +0017<$[]> (_t11C9, _t11CA);
  real _t11CC = 0.1e1;
  real _t11CD = 0.1e1;
  real _t11CE = 0.1e1;
  vec3 _t11CF = [_t11CC, _t11CD, _t11CE];
  real _t11D0 = 0.e0;
  real _t11D1 = -0.1e1;
  real _t11D2 = 0.e0;
  real _t11D3 = 0.e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, refPos0AC0);
  real _t11D6 = prim -0026<$[]> (_t11D0, _t11D5);
  real _t11D7 = -0.1e1;
  real _t11D8 = 0.e0;
  real _t11D9 = 0.e0;
  vec3 _t11DA = [_t11D7, _t11D8, _t11D9];
  real _t11DB = prim •00CE<$[3]; $[3]; $[]> (_t11DA, dPos0AC1);
  real _t11DC = prim /0055 (_t11D6, _t11DB);
  vec3 _t11DD = prim *0038<$[3]> (dPos0AC1, _t11DC);
  vec3 _t11DE = prim +0017<$[3]> (refPos0AC0, _t11DD);
  real _t11DF = prim •00CE<$[3]; $[3]; $[]> (_t11CF, _t11DE);
  bool _t11E0 = prim >0080 (_t11CB, _t11DF);
  real _t11E1 = 0.1e-7;
  real _t11E2 = 0.1e-7;
  real _t11E3 = 0.1e-7;
  vec3 _t11E4 = [_t11E1, _t11E2, _t11E3];
  real _t11E5 = 0.e0;
  real _t11E6 = -0.1e1;
  real _t11E7 = 0.e0;
  real _t11E8 = 0.e0;
  vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
  real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0AC0);
  real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
  real _t11EC = -0.1e1;
  real _t11ED = 0.e0;
  real _t11EE = 0.e0;
  vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
  real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0AC1);
  real _t11F1 = prim /0055 (_t11EB, _t11F0);
  vec3 _t11F2 = prim *0038<$[3]> (dPos0AC1, _t11F1);
  vec3 _t11F3 = prim +0017<$[3]> (refPos0AC0, _t11F2);
  vec3 _t11F4 = prim +0017<$[3]> (_t11E4, _t11F3);
  real _t11F5 = _t11F4[0];
  real _t11F6 = -0.e0;
  bool _t11F7 = prim >0080 (_t11F5, _t11F6);
  real _t11F8 = 0.1e-7;
  real _t11F9 = 0.1e-7;
  real _t11FA = 0.1e-7;
  vec3 _t11FB = [_t11F8, _t11F9, _t11FA];
  real _t11FC = 0.e0;
  real _t11FD = -0.1e1;
  real _t11FE = 0.e0;
  real _t11FF = 0.e0;
  vec3 _t1200 = [_t11FD, _t11FE, _t11FF];
  real _t1201 = prim •00CE<$[3]; $[3]; $[]> (_t1200, refPos0AC0);
  real _t1202 = prim -0026<$[]> (_t11FC, _t1201);
  real _t1203 = -0.1e1;
  real _t1204 = 0.e0;
  real _t1205 = 0.e0;
  vec3 _t1206 = [_t1203, _t1204, _t1205];
  real _t1207 = prim •00CE<$[3]; $[3]; $[]> (_t1206, dPos0AC1);
  real _t1208 = prim /0055 (_t1202, _t1207);
  vec3 _t1209 = prim *0038<$[3]> (dPos0AC1, _t1208);
  vec3 _t120A = prim +0017<$[3]> (refPos0AC0, _t1209);
  vec3 _t120B = prim +0017<$[3]> (_t11FB, _t120A);
  real _t120C = _t120B[1];
  real _t120D = -0.e0;
  bool _t120E = prim >0080 (_t120C, _t120D);
  real _t120F = 0.1e-7;
  real _t1210 = 0.1e-7;
  real _t1211 = 0.1e-7;
  vec3 _t1212 = [_t120F, _t1210, _t1211];
  real _t1213 = 0.e0;
  real _t1214 = -0.1e1;
  real _t1215 = 0.e0;
  real _t1216 = 0.e0;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos0AC0);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = -0.1e1;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos0AC1);
  real _t121F = prim /0055 (_t1219, _t121E);
  vec3 _t1220 = prim *0038<$[3]> (dPos0AC1, _t121F);
  vec3 _t1221 = prim +0017<$[3]> (refPos0AC0, _t1220);
  vec3 _t1222 = prim +0017<$[3]> (_t1212, _t1221);
  real _t1223 = _t1222[2];
  real _t1224 = -0.e0;
  bool _t1225 = prim >0080 (_t1223, _t1224);
  bool _t1226 = prim $and01C4 (_t120E, _t1225);
  bool _t1227 = prim $and01C4 (_t11F7, _t1226);
  bool _t1228 = prim $and01C4 (_t11E0, _t1227);
  string _t1229 = " dist: ";
  real _t122A = 0.e0;
  real _t122B = -0.1e1;
  real _t122C = 0.e0;
  real _t122D = 0.e0;
  vec3 _t122E = [_t122B, _t122C, _t122D];
  real _t122F = prim •00CE<$[3]; $[3]; $[]> (_t122E, refPos0AC0);
  real _t1230 = prim -0026<$[]> (_t122A, _t122F);
  real _t1231 = prim |()|00B5<$[]> (_t1230);
  string _t1232 = "signed dist: ";
  real _t1233 = 0.e0;
  real _t1234 = -0.1e1;
  real _t1235 = 0.e0;
  real _t1236 = 0.e0;
  vec3 _t1237 = [_t1234, _t1235, _t1236];
  real _t1238 = prim •00CE<$[3]; $[3]; $[]> (_t1237, refPos0AC0);
  real _t1239 = prim -0026<$[]> (_t1233, _t1238);
  string _t123A = " face: ";
  int _t123B = 1;
  string _t123C = " place: ";
  real _t123D = 0.e0;
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, refPos0AC0);
  real _t1243 = prim -0026<$[]> (_t123D, _t1242);
  real _t1244 = -0.1e1;
  real _t1245 = 0.e0;
  real _t1246 = 0.e0;
  vec3 _t1247 = [_t1244, _t1245, _t1246];
  real _t1248 = prim •00CE<$[3]; $[3]; $[]> (_t1247, dPos0AC1);
  real _t1249 = prim /0055 (_t1243, _t1248);
  vec3 _t124A = prim *0038<$[3]> (dPos0AC1, _t1249);
  vec3 _t124B = prim +0017<$[3]> (refPos0AC0, _t124A);
  string _t124C = " error: ";
  real _t124D = 0.e0;
  real _t124E = -0.1e1;
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  vec3 _t1251 = [_t124E, _t124F, _t1250];
  real _t1252 = 0.e0;
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos0AC0);
  real _t1258 = prim -0026<$[]> (_t1252, _t1257);
  real _t1259 = -0.1e1;
  real _t125A = 0.e0;
  real _t125B = 0.e0;
  vec3 _t125C = [_t1259, _t125A, _t125B];
  real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos0AC1);
  real _t125E = prim /0055 (_t1258, _t125D);
  vec3 _t125F = prim *0038<$[3]> (dPos0AC1, _t125E);
  vec3 _t1260 = prim +0017<$[3]> (refPos0AC0, _t125F);
  real _t1261 = prim •00CE<$[3]; $[3]; $[]> (_t1251, _t1260);
  real _t1262 = prim -0026<$[]> (_t124D, _t1261);
  real _t1263 = prim |()|00B5<$[]> (_t1262);
  string _t1264 = " offset :";
  string _t1265 = " dp: ";
  string _t1266 = " otherPossibleTime: ";
  string _t1267 = "\n";
  string _t1268 = "\n original face: ";
  string _t1269 = " ";
  print (_t11B4, _t11C1, _t11C2, _t11C7, _t11C8, _t1228, _t1229, _t1231, _t1232, _t1239, _t123A, _t123B, _t123C, _t124B, _t124C, _t1263, _t1264, refPos0AC0, _t1265, dPos0AC1, _t1266, faceTime109D, _t1267, _t1268, i109A, _t1269);
  real _t126A = 0.e0;
  real _t126B = -0.1e1;
  real _t126C = 0.e0;
  real _t126D = 0.e0;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, refPos0AC0);
  real _t1270 = prim -0026<$[]> (_t126A, _t126F);
  real _t1271 = -0.1e1;
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  vec3 _t1274 = [_t1271, _t1272, _t1273];
  real _t1275 = prim •00CE<$[3]; $[3]; $[]> (_t1274, dPos0AC1);
  real _t1276 = prim /0055 (_t1270, _t1275);
  real _t1277 = -0.1e-7;
  bool _t1278 = prim >=007E (_t1276, _t1277);
  real _t1279 = 0.e0;
  real _t127A = -0.1e1;
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  vec3 _t127D = [_t127A, _t127B, _t127C];
  real _t127E = prim •00CE<$[3]; $[3]; $[]> (_t127D, refPos0AC0);
  real _t127F = prim -0026<$[]> (_t1279, _t127E);
  real _t1280 = -0.1e1;
  real _t1281 = 0.e0;
  real _t1282 = 0.e0;
  vec3 _t1283 = [_t1280, _t1281, _t1282];
  real _t1284 = prim •00CE<$[3]; $[3]; $[]> (_t1283, dPos0AC1);
  real _t1285 = prim /0055 (_t127F, _t1284);
  bool _t1286 = prim >0080 (time109B, _t1285);
  real _t1287 = -0.1e1;
  real _t1288 = 0.e0;
  real _t1289 = 0.e0;
  vec3 _t128A = [_t1287, _t1288, _t1289];
  real _t128B = prim •00CE<$[3]; $[3]; $[]> (_t128A, dPos0AC1);
  real _t128C = prim |()|00B5<$[]> (_t128B);
  real _t128D = 0.1e-7;
  bool _t128E = prim >=007E (_t128C, _t128D);
  bool _t128F = prim $and01C4 (_t1286, _t128E);
  bool _t1290 = prim $and01C4 (_t1278, _t128F);
  if _t1290 {
    int _t1291 = 1;
    bool _t1292 = prim !=0086 (i109A, _t1291);
    if _t1292 {
      string _t1293 = "Saving at this face!";
      real _t1294 = 0.e0;
      real _t1295 = -0.1e1;
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      vec3 _t1298 = [_t1295, _t1296, _t1297];
      real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos0AC0);
      real _t129A = prim -0026<$[]> (_t1294, _t1299);
      real _t129B = -0.1e1;
      real _t129C = 0.e0;
      real _t129D = 0.e0;
      vec3 _t129E = [_t129B, _t129C, _t129D];
      real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos0AC1);
      real _t12A0 = prim /0055 (_t129A, _t129F);
      real _t12A1 = 0.e0;
      real _t12A2 = -0.1e1;
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
      real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, refPos0AC0);
      real _t12A7 = prim -0026<$[]> (_t12A1, _t12A6);
      real _t12A8 = -0.1e1;
      real _t12A9 = 0.e0;
      real _t12AA = 0.e0;
      vec3 _t12AB = [_t12A8, _t12A9, _t12AA];
      real _t12AC = prim •00CE<$[3]; $[3]; $[]> (_t12AB, dPos0AC1);
      real _t12AD = prim /0055 (_t12A7, _t12AC);
      bool _t12AE = prim >0080 (time109B, _t12AD);
      string _t12AF = "\n";
      print (_t1293, _t12A0, _t12AE, _t12AF);
      real _t12B0 = 0.e0;
      real _t12B1 = -0.1e1;
      real _t12B2 = 0.e0;
      real _t12B3 = 0.e0;
      vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
      real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, refPos0AC0);
      real _t12B6 = prim -0026<$[]> (_t12B0, _t12B5);
      real _t12B7 = -0.1e1;
      real _t12B8 = 0.e0;
      real _t12B9 = 0.e0;
      vec3 _t12BA = [_t12B7, _t12B8, _t12B9];
      real _t12BB = prim •00CE<$[3]; $[3]; $[]> (_t12BA, dPos0AC1);
      time109B = prim /0055 (_t12B6, _t12BB);
      face109C = 1;
    } else {
      real _t12BC = 0.e0;
      real _t12BD = -0.1e1;
      real _t12BE = 0.e0;
      real _t12BF = 0.e0;
      vec3 _t12C0 = [_t12BD, _t12BE, _t12BF];
      real _t12C1 = prim •00CE<$[3]; $[3]; $[]> (_t12C0, refPos0AC0);
      real _t12C2 = prim -0026<$[]> (_t12BC, _t12C1);
      real _t12C3 = -0.1e1;
      real _t12C4 = 0.e0;
      real _t12C5 = 0.e0;
      vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
      real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, dPos0AC1);
      faceTime109D = prim /0055 (_t12C2, _t12C7);
      string _t12C8 = "Saving backup time: ";
      string _t12C9 = "\n";
      print (_t12C8, faceTime109D, _t12C9);
    }
  }
  string _t12CA = "\ntest :";
  real _t12CB = 0.e0;
  real _t12CC = 0.e0;
  real _t12CD = -0.1e1;
  real _t12CE = 0.e0;
  vec3 _t12CF = [_t12CC, _t12CD, _t12CE];
  real _t12D0 = prim •00CE<$[3]; $[3]; $[]> (_t12CF, refPos0AC0);
  real _t12D1 = prim -0026<$[]> (_t12CB, _t12D0);
  real _t12D2 = 0.e0;
  real _t12D3 = -0.1e1;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, dPos0AC1);
  real _t12D7 = prim /0055 (_t12D1, _t12D6);
  string _t12D8 = " test2: ";
  real _t12D9 = 0.e0;
  real _t12DA = -0.1e1;
  real _t12DB = 0.e0;
  vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
  real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, dPos0AC1);
  string _t12DE = " insideTest: ";
  real _t12DF = 0.1e1;
  real _t12E0 = 0.1e-7;
  real _t12E1 = prim +0017<$[]> (_t12DF, _t12E0);
  real _t12E2 = 0.1e1;
  real _t12E3 = 0.1e1;
  real _t12E4 = 0.1e1;
  vec3 _t12E5 = [_t12E2, _t12E3, _t12E4];
  real _t12E6 = 0.e0;
  real _t12E7 = 0.e0;
  real _t12E8 = -0.1e1;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, refPos0AC0);
  real _t12EC = prim -0026<$[]> (_t12E6, _t12EB);
  real _t12ED = 0.e0;
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  vec3 _t12F0 = [_t12ED, _t12EE, _t12EF];
  real _t12F1 = prim •00CE<$[3]; $[3]; $[]> (_t12F0, dPos0AC1);
  real _t12F2 = prim /0055 (_t12EC, _t12F1);
  vec3 _t12F3 = prim *0038<$[3]> (dPos0AC1, _t12F2);
  vec3 _t12F4 = prim +0017<$[3]> (refPos0AC0, _t12F3);
  real _t12F5 = prim •00CE<$[3]; $[3]; $[]> (_t12E5, _t12F4);
  bool _t12F6 = prim >0080 (_t12E1, _t12F5);
  real _t12F7 = 0.1e-7;
  real _t12F8 = 0.1e-7;
  real _t12F9 = 0.1e-7;
  vec3 _t12FA = [_t12F7, _t12F8, _t12F9];
  real _t12FB = 0.e0;
  real _t12FC = 0.e0;
  real _t12FD = -0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0AC0);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = -0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0AC1);
  real _t1307 = prim /0055 (_t1301, _t1306);
  vec3 _t1308 = prim *0038<$[3]> (dPos0AC1, _t1307);
  vec3 _t1309 = prim +0017<$[3]> (refPos0AC0, _t1308);
  vec3 _t130A = prim +0017<$[3]> (_t12FA, _t1309);
  real _t130B = _t130A[0];
  real _t130C = -0.e0;
  bool _t130D = prim >0080 (_t130B, _t130C);
  real _t130E = 0.1e-7;
  real _t130F = 0.1e-7;
  real _t1310 = 0.1e-7;
  vec3 _t1311 = [_t130E, _t130F, _t1310];
  real _t1312 = 0.e0;
  real _t1313 = 0.e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, refPos0AC0);
  real _t1318 = prim -0026<$[]> (_t1312, _t1317);
  real _t1319 = 0.e0;
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  vec3 _t131C = [_t1319, _t131A, _t131B];
  real _t131D = prim •00CE<$[3]; $[3]; $[]> (_t131C, dPos0AC1);
  real _t131E = prim /0055 (_t1318, _t131D);
  vec3 _t131F = prim *0038<$[3]> (dPos0AC1, _t131E);
  vec3 _t1320 = prim +0017<$[3]> (refPos0AC0, _t131F);
  vec3 _t1321 = prim +0017<$[3]> (_t1311, _t1320);
  real _t1322 = _t1321[1];
  real _t1323 = -0.e0;
  bool _t1324 = prim >0080 (_t1322, _t1323);
  real _t1325 = 0.1e-7;
  real _t1326 = 0.1e-7;
  real _t1327 = 0.1e-7;
  vec3 _t1328 = [_t1325, _t1326, _t1327];
  real _t1329 = 0.e0;
  real _t132A = 0.e0;
  real _t132B = -0.1e1;
  real _t132C = 0.e0;
  vec3 _t132D = [_t132A, _t132B, _t132C];
  real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, refPos0AC0);
  real _t132F = prim -0026<$[]> (_t1329, _t132E);
  real _t1330 = 0.e0;
  real _t1331 = -0.1e1;
  real _t1332 = 0.e0;
  vec3 _t1333 = [_t1330, _t1331, _t1332];
  real _t1334 = prim •00CE<$[3]; $[3]; $[]> (_t1333, dPos0AC1);
  real _t1335 = prim /0055 (_t132F, _t1334);
  vec3 _t1336 = prim *0038<$[3]> (dPos0AC1, _t1335);
  vec3 _t1337 = prim +0017<$[3]> (refPos0AC0, _t1336);
  vec3 _t1338 = prim +0017<$[3]> (_t1328, _t1337);
  real _t1339 = _t1338[2];
  real _t133A = -0.e0;
  bool _t133B = prim >0080 (_t1339, _t133A);
  bool _t133C = prim $and01C4 (_t1324, _t133B);
  bool _t133D = prim $and01C4 (_t130D, _t133C);
  bool _t133E = prim $and01C4 (_t12F6, _t133D);
  string _t133F = " dist: ";
  real _t1340 = 0.e0;
  real _t1341 = 0.e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  vec3 _t1344 = [_t1341, _t1342, _t1343];
  real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, refPos0AC0);
  real _t1346 = prim -0026<$[]> (_t1340, _t1345);
  real _t1347 = prim |()|00B5<$[]> (_t1346);
  string _t1348 = "signed dist: ";
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  real _t134B = -0.1e1;
  real _t134C = 0.e0;
  vec3 _t134D = [_t134A, _t134B, _t134C];
  real _t134E = prim •00CE<$[3]; $[3]; $[]> (_t134D, refPos0AC0);
  real _t134F = prim -0026<$[]> (_t1349, _t134E);
  string _t1350 = " face: ";
  int _t1351 = 2;
  string _t1352 = " place: ";
  real _t1353 = 0.e0;
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos0AC0);
  real _t1359 = prim -0026<$[]> (_t1353, _t1358);
  real _t135A = 0.e0;
  real _t135B = -0.1e1;
  real _t135C = 0.e0;
  vec3 _t135D = [_t135A, _t135B, _t135C];
  real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos0AC1);
  real _t135F = prim /0055 (_t1359, _t135E);
  vec3 _t1360 = prim *0038<$[3]> (dPos0AC1, _t135F);
  vec3 _t1361 = prim +0017<$[3]> (refPos0AC0, _t1360);
  string _t1362 = " error: ";
  real _t1363 = 0.e0;
  real _t1364 = 0.e0;
  real _t1365 = -0.1e1;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = 0.e0;
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos0AC0);
  real _t136E = prim -0026<$[]> (_t1368, _t136D);
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos0AC1);
  real _t1374 = prim /0055 (_t136E, _t1373);
  vec3 _t1375 = prim *0038<$[3]> (dPos0AC1, _t1374);
  vec3 _t1376 = prim +0017<$[3]> (refPos0AC0, _t1375);
  real _t1377 = prim •00CE<$[3]; $[3]; $[]> (_t1367, _t1376);
  real _t1378 = prim -0026<$[]> (_t1363, _t1377);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  string _t137A = " offset :";
  string _t137B = " dp: ";
  string _t137C = " otherPossibleTime: ";
  string _t137D = "\n";
  string _t137E = "\n original face: ";
  string _t137F = " ";
  print (_t12CA, _t12D7, _t12D8, _t12DD, _t12DE, _t133E, _t133F, _t1347, _t1348, _t134F, _t1350, _t1351, _t1352, _t1361, _t1362, _t1379, _t137A, refPos0AC0, _t137B, dPos0AC1, _t137C, faceTime109D, _t137D, _t137E, i109A, _t137F);
  real _t1380 = 0.e0;
  real _t1381 = 0.e0;
  real _t1382 = -0.1e1;
  real _t1383 = 0.e0;
  vec3 _t1384 = [_t1381, _t1382, _t1383];
  real _t1385 = prim •00CE<$[3]; $[3]; $[]> (_t1384, refPos0AC0);
  real _t1386 = prim -0026<$[]> (_t1380, _t1385);
  real _t1387 = 0.e0;
  real _t1388 = -0.1e1;
  real _t1389 = 0.e0;
  vec3 _t138A = [_t1387, _t1388, _t1389];
  real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, dPos0AC1);
  real _t138C = prim /0055 (_t1386, _t138B);
  real _t138D = -0.1e-7;
  bool _t138E = prim >=007E (_t138C, _t138D);
  real _t138F = 0.e0;
  real _t1390 = 0.e0;
  real _t1391 = -0.1e1;
  real _t1392 = 0.e0;
  vec3 _t1393 = [_t1390, _t1391, _t1392];
  real _t1394 = prim •00CE<$[3]; $[3]; $[]> (_t1393, refPos0AC0);
  real _t1395 = prim -0026<$[]> (_t138F, _t1394);
  real _t1396 = 0.e0;
  real _t1397 = -0.1e1;
  real _t1398 = 0.e0;
  vec3 _t1399 = [_t1396, _t1397, _t1398];
  real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, dPos0AC1);
  real _t139B = prim /0055 (_t1395, _t139A);
  bool _t139C = prim >0080 (time109B, _t139B);
  real _t139D = 0.e0;
  real _t139E = -0.1e1;
  real _t139F = 0.e0;
  vec3 _t13A0 = [_t139D, _t139E, _t139F];
  real _t13A1 = prim •00CE<$[3]; $[3]; $[]> (_t13A0, dPos0AC1);
  real _t13A2 = prim |()|00B5<$[]> (_t13A1);
  real _t13A3 = 0.1e-7;
  bool _t13A4 = prim >=007E (_t13A2, _t13A3);
  bool _t13A5 = prim $and01C4 (_t139C, _t13A4);
  bool _t13A6 = prim $and01C4 (_t138E, _t13A5);
  if _t13A6 {
    int _t13A7 = 2;
    bool _t13A8 = prim !=0086 (i109A, _t13A7);
    if _t13A8 {
      string _t13A9 = "Saving at this face!";
      real _t13AA = 0.e0;
      real _t13AB = 0.e0;
      real _t13AC = -0.1e1;
      real _t13AD = 0.e0;
      vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
      real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos0AC0);
      real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
      real _t13B1 = 0.e0;
      real _t13B2 = -0.1e1;
      real _t13B3 = 0.e0;
      vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
      real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos0AC1);
      real _t13B6 = prim /0055 (_t13B0, _t13B5);
      real _t13B7 = 0.e0;
      real _t13B8 = 0.e0;
      real _t13B9 = -0.1e1;
      real _t13BA = 0.e0;
      vec3 _t13BB = [_t13B8, _t13B9, _t13BA];
      real _t13BC = prim •00CE<$[3]; $[3]; $[]> (_t13BB, refPos0AC0);
      real _t13BD = prim -0026<$[]> (_t13B7, _t13BC);
      real _t13BE = 0.e0;
      real _t13BF = -0.1e1;
      real _t13C0 = 0.e0;
      vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
      real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos0AC1);
      real _t13C3 = prim /0055 (_t13BD, _t13C2);
      bool _t13C4 = prim >0080 (time109B, _t13C3);
      string _t13C5 = "\n";
      print (_t13A9, _t13B6, _t13C4, _t13C5);
      real _t13C6 = 0.e0;
      real _t13C7 = 0.e0;
      real _t13C8 = -0.1e1;
      real _t13C9 = 0.e0;
      vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
      real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, refPos0AC0);
      real _t13CC = prim -0026<$[]> (_t13C6, _t13CB);
      real _t13CD = 0.e0;
      real _t13CE = -0.1e1;
      real _t13CF = 0.e0;
      vec3 _t13D0 = [_t13CD, _t13CE, _t13CF];
      real _t13D1 = prim •00CE<$[3]; $[3]; $[]> (_t13D0, dPos0AC1);
      time109B = prim /0055 (_t13CC, _t13D1);
      face109C = 2;
    } else {
      real _t13D2 = 0.e0;
      real _t13D3 = 0.e0;
      real _t13D4 = -0.1e1;
      real _t13D5 = 0.e0;
      vec3 _t13D6 = [_t13D3, _t13D4, _t13D5];
      real _t13D7 = prim •00CE<$[3]; $[3]; $[]> (_t13D6, refPos0AC0);
      real _t13D8 = prim -0026<$[]> (_t13D2, _t13D7);
      real _t13D9 = 0.e0;
      real _t13DA = -0.1e1;
      real _t13DB = 0.e0;
      vec3 _t13DC = [_t13D9, _t13DA, _t13DB];
      real _t13DD = prim •00CE<$[3]; $[3]; $[]> (_t13DC, dPos0AC1);
      faceTime109D = prim /0055 (_t13D8, _t13DD);
      string _t13DE = "Saving backup time: ";
      string _t13DF = "\n";
      print (_t13DE, faceTime109D, _t13DF);
    }
  }
  string _t13E0 = "\ntest :";
  real _t13E1 = 0.e0;
  real _t13E2 = 0.e0;
  real _t13E3 = 0.e0;
  real _t13E4 = -0.1e1;
  vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
  real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, refPos0AC0);
  real _t13E7 = prim -0026<$[]> (_t13E1, _t13E6);
  real _t13E8 = 0.e0;
  real _t13E9 = 0.e0;
  real _t13EA = -0.1e1;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, dPos0AC1);
  real _t13ED = prim /0055 (_t13E7, _t13EC);
  string _t13EE = " test2: ";
  real _t13EF = 0.e0;
  real _t13F0 = 0.e0;
  real _t13F1 = -0.1e1;
  vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
  real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos0AC1);
  string _t13F4 = " insideTest: ";
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.1e-7;
  real _t13F7 = prim +0017<$[]> (_t13F5, _t13F6);
  real _t13F8 = 0.1e1;
  real _t13F9 = 0.1e1;
  real _t13FA = 0.1e1;
  vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
  real _t13FC = 0.e0;
  real _t13FD = 0.e0;
  real _t13FE = 0.e0;
  real _t13FF = -0.1e1;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, refPos0AC0);
  real _t1402 = prim -0026<$[]> (_t13FC, _t1401);
  real _t1403 = 0.e0;
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  vec3 _t1406 = [_t1403, _t1404, _t1405];
  real _t1407 = prim •00CE<$[3]; $[3]; $[]> (_t1406, dPos0AC1);
  real _t1408 = prim /0055 (_t1402, _t1407);
  vec3 _t1409 = prim *0038<$[3]> (dPos0AC1, _t1408);
  vec3 _t140A = prim +0017<$[3]> (refPos0AC0, _t1409);
  real _t140B = prim •00CE<$[3]; $[3]; $[]> (_t13FB, _t140A);
  bool _t140C = prim >0080 (_t13F7, _t140B);
  real _t140D = 0.1e-7;
  real _t140E = 0.1e-7;
  real _t140F = 0.1e-7;
  vec3 _t1410 = [_t140D, _t140E, _t140F];
  real _t1411 = 0.e0;
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = -0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0AC0);
  real _t1417 = prim -0026<$[]> (_t1411, _t1416);
  real _t1418 = 0.e0;
  real _t1419 = 0.e0;
  real _t141A = -0.1e1;
  vec3 _t141B = [_t1418, _t1419, _t141A];
  real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0AC1);
  real _t141D = prim /0055 (_t1417, _t141C);
  vec3 _t141E = prim *0038<$[3]> (dPos0AC1, _t141D);
  vec3 _t141F = prim +0017<$[3]> (refPos0AC0, _t141E);
  vec3 _t1420 = prim +0017<$[3]> (_t1410, _t141F);
  real _t1421 = _t1420[0];
  real _t1422 = -0.e0;
  bool _t1423 = prim >0080 (_t1421, _t1422);
  real _t1424 = 0.1e-7;
  real _t1425 = 0.1e-7;
  real _t1426 = 0.1e-7;
  vec3 _t1427 = [_t1424, _t1425, _t1426];
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = -0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, refPos0AC0);
  real _t142E = prim -0026<$[]> (_t1428, _t142D);
  real _t142F = 0.e0;
  real _t1430 = 0.e0;
  real _t1431 = -0.1e1;
  vec3 _t1432 = [_t142F, _t1430, _t1431];
  real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, dPos0AC1);
  real _t1434 = prim /0055 (_t142E, _t1433);
  vec3 _t1435 = prim *0038<$[3]> (dPos0AC1, _t1434);
  vec3 _t1436 = prim +0017<$[3]> (refPos0AC0, _t1435);
  vec3 _t1437 = prim +0017<$[3]> (_t1427, _t1436);
  real _t1438 = _t1437[1];
  real _t1439 = -0.e0;
  bool _t143A = prim >0080 (_t1438, _t1439);
  real _t143B = 0.1e-7;
  real _t143C = 0.1e-7;
  real _t143D = 0.1e-7;
  vec3 _t143E = [_t143B, _t143C, _t143D];
  real _t143F = 0.e0;
  real _t1440 = 0.e0;
  real _t1441 = 0.e0;
  real _t1442 = -0.1e1;
  vec3 _t1443 = [_t1440, _t1441, _t1442];
  real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, refPos0AC0);
  real _t1445 = prim -0026<$[]> (_t143F, _t1444);
  real _t1446 = 0.e0;
  real _t1447 = 0.e0;
  real _t1448 = -0.1e1;
  vec3 _t1449 = [_t1446, _t1447, _t1448];
  real _t144A = prim •00CE<$[3]; $[3]; $[]> (_t1449, dPos0AC1);
  real _t144B = prim /0055 (_t1445, _t144A);
  vec3 _t144C = prim *0038<$[3]> (dPos0AC1, _t144B);
  vec3 _t144D = prim +0017<$[3]> (refPos0AC0, _t144C);
  vec3 _t144E = prim +0017<$[3]> (_t143E, _t144D);
  real _t144F = _t144E[2];
  real _t1450 = -0.e0;
  bool _t1451 = prim >0080 (_t144F, _t1450);
  bool _t1452 = prim $and01C4 (_t143A, _t1451);
  bool _t1453 = prim $and01C4 (_t1423, _t1452);
  bool _t1454 = prim $and01C4 (_t140C, _t1453);
  string _t1455 = " dist: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.e0;
  real _t1459 = -0.1e1;
  vec3 _t145A = [_t1457, _t1458, _t1459];
  real _t145B = prim •00CE<$[3]; $[3]; $[]> (_t145A, refPos0AC0);
  real _t145C = prim -0026<$[]> (_t1456, _t145B);
  real _t145D = prim |()|00B5<$[]> (_t145C);
  string _t145E = "signed dist: ";
  real _t145F = 0.e0;
  real _t1460 = 0.e0;
  real _t1461 = 0.e0;
  real _t1462 = -0.1e1;
  vec3 _t1463 = [_t1460, _t1461, _t1462];
  real _t1464 = prim •00CE<$[3]; $[3]; $[]> (_t1463, refPos0AC0);
  real _t1465 = prim -0026<$[]> (_t145F, _t1464);
  string _t1466 = " face: ";
  int _t1467 = 3;
  string _t1468 = " place: ";
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, refPos0AC0);
  real _t146F = prim -0026<$[]> (_t1469, _t146E);
  real _t1470 = 0.e0;
  real _t1471 = 0.e0;
  real _t1472 = -0.1e1;
  vec3 _t1473 = [_t1470, _t1471, _t1472];
  real _t1474 = prim •00CE<$[3]; $[3]; $[]> (_t1473, dPos0AC1);
  real _t1475 = prim /0055 (_t146F, _t1474);
  vec3 _t1476 = prim *0038<$[3]> (dPos0AC1, _t1475);
  vec3 _t1477 = prim +0017<$[3]> (refPos0AC0, _t1476);
  string _t1478 = " error: ";
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = 0.e0;
  real _t147C = -0.1e1;
  vec3 _t147D = [_t147A, _t147B, _t147C];
  real _t147E = 0.e0;
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos0AC0);
  real _t1484 = prim -0026<$[]> (_t147E, _t1483);
  real _t1485 = 0.e0;
  real _t1486 = 0.e0;
  real _t1487 = -0.1e1;
  vec3 _t1488 = [_t1485, _t1486, _t1487];
  real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos0AC1);
  real _t148A = prim /0055 (_t1484, _t1489);
  vec3 _t148B = prim *0038<$[3]> (dPos0AC1, _t148A);
  vec3 _t148C = prim +0017<$[3]> (refPos0AC0, _t148B);
  real _t148D = prim •00CE<$[3]; $[3]; $[]> (_t147D, _t148C);
  real _t148E = prim -0026<$[]> (_t1479, _t148D);
  real _t148F = prim |()|00B5<$[]> (_t148E);
  string _t1490 = " offset :";
  string _t1491 = " dp: ";
  string _t1492 = " otherPossibleTime: ";
  string _t1493 = "\n";
  string _t1494 = "\n original face: ";
  string _t1495 = " ";
  print (_t13E0, _t13ED, _t13EE, _t13F3, _t13F4, _t1454, _t1455, _t145D, _t145E, _t1465, _t1466, _t1467, _t1468, _t1477, _t1478, _t148F, _t1490, refPos0AC0, _t1491, dPos0AC1, _t1492, faceTime109D, _t1493, _t1494, i109A, _t1495);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = -0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos0AC0);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = -0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos0AC1);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-7;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = -0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos0AC0);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = -0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos0AC1);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time109B, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = -0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos0AC1);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-7;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 3;
    bool _t14BE = prim !=0086 (i109A, _t14BD);
    if _t14BE {
      string _t14BF = "Saving at this face!";
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.e0;
      real _t14C3 = -0.1e1;
      vec3 _t14C4 = [_t14C1, _t14C2, _t14C3];
      real _t14C5 = prim •00CE<$[3]; $[3]; $[]> (_t14C4, refPos0AC0);
      real _t14C6 = prim -0026<$[]> (_t14C0, _t14C5);
      real _t14C7 = 0.e0;
      real _t14C8 = 0.e0;
      real _t14C9 = -0.1e1;
      vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
      real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, dPos0AC1);
      real _t14CC = prim /0055 (_t14C6, _t14CB);
      real _t14CD = 0.e0;
      real _t14CE = 0.e0;
      real _t14CF = 0.e0;
      real _t14D0 = -0.1e1;
      vec3 _t14D1 = [_t14CE, _t14CF, _t14D0];
      real _t14D2 = prim •00CE<$[3]; $[3]; $[]> (_t14D1, refPos0AC0);
      real _t14D3 = prim -0026<$[]> (_t14CD, _t14D2);
      real _t14D4 = 0.e0;
      real _t14D5 = 0.e0;
      real _t14D6 = -0.1e1;
      vec3 _t14D7 = [_t14D4, _t14D5, _t14D6];
      real _t14D8 = prim •00CE<$[3]; $[3]; $[]> (_t14D7, dPos0AC1);
      real _t14D9 = prim /0055 (_t14D3, _t14D8);
      bool _t14DA = prim >0080 (time109B, _t14D9);
      string _t14DB = "\n";
      print (_t14BF, _t14CC, _t14DA, _t14DB);
      real _t14DC = 0.e0;
      real _t14DD = 0.e0;
      real _t14DE = 0.e0;
      real _t14DF = -0.1e1;
      vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
      real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, refPos0AC0);
      real _t14E2 = prim -0026<$[]> (_t14DC, _t14E1);
      real _t14E3 = 0.e0;
      real _t14E4 = 0.e0;
      real _t14E5 = -0.1e1;
      vec3 _t14E6 = [_t14E3, _t14E4, _t14E5];
      real _t14E7 = prim •00CE<$[3]; $[3]; $[]> (_t14E6, dPos0AC1);
      time109B = prim /0055 (_t14E2, _t14E7);
      face109C = 3;
    } else {
      real _t14E8 = 0.e0;
      real _t14E9 = 0.e0;
      real _t14EA = 0.e0;
      real _t14EB = -0.1e1;
      vec3 _t14EC = [_t14E9, _t14EA, _t14EB];
      real _t14ED = prim •00CE<$[3]; $[3]; $[]> (_t14EC, refPos0AC0);
      real _t14EE = prim -0026<$[]> (_t14E8, _t14ED);
      real _t14EF = 0.e0;
      real _t14F0 = 0.e0;
      real _t14F1 = -0.1e1;
      vec3 _t14F2 = [_t14EF, _t14F0, _t14F1];
      real _t14F3 = prim •00CE<$[3]; $[3]; $[]> (_t14F2, dPos0AC1);
      faceTime109D = prim /0055 (_t14EE, _t14F3);
      string _t14F4 = "Saving backup time: ";
      string _t14F5 = "\n";
      print (_t14F4, faceTime109D, _t14F5);
    }
  }
  int _t14F6 = -1;
  bool _t14F7 = prim !=0086 (face109C, _t14F6);
  real _t14F8 = 0.1e1;
  real _t14F9 = 0.1e-7;
  real _t14FA = prim +0017<$[]> (_t14F8, _t14F9);
  real _t14FB = 0.1e1;
  real _t14FC = 0.1e1;
  real _t14FD = 0.1e1;
  vec3 _t14FE = [_t14FB, _t14FC, _t14FD];
  real _t14FF = 0.e0;
  real _t1500 = prim max0125 (time109B, _t14FF);
  vec3 _t1501 = prim *0038<$[3]> (dPos0AC1, _t1500);
  vec3 _t1502 = prim +0017<$[3]> (refPos0AC0, _t1501);
  real _t1503 = prim •00CE<$[3]; $[3]; $[]> (_t14FE, _t1502);
  bool _t1504 = prim >0080 (_t14FA, _t1503);
  real _t1505 = 0.1e-7;
  real _t1506 = 0.1e-7;
  real _t1507 = 0.1e-7;
  vec3 _t1508 = [_t1505, _t1506, _t1507];
  real _t1509 = 0.e0;
  real _t150A = prim max0125 (time109B, _t1509);
  vec3 _t150B = prim *0038<$[3]> (dPos0AC1, _t150A);
  vec3 _t150C = prim +0017<$[3]> (refPos0AC0, _t150B);
  vec3 _t150D = prim +0017<$[3]> (_t1508, _t150C);
  real _t150E = _t150D[0];
  real _t150F = -0.e0;
  bool _t1510 = prim >0080 (_t150E, _t150F);
  real _t1511 = 0.1e-7;
  real _t1512 = 0.1e-7;
  real _t1513 = 0.1e-7;
  vec3 _t1514 = [_t1511, _t1512, _t1513];
  real _t1515 = 0.e0;
  real _t1516 = prim max0125 (time109B, _t1515);
  vec3 _t1517 = prim *0038<$[3]> (dPos0AC1, _t1516);
  vec3 _t1518 = prim +0017<$[3]> (refPos0AC0, _t1517);
  vec3 _t1519 = prim +0017<$[3]> (_t1514, _t1518);
  real _t151A = _t1519[1];
  real _t151B = -0.e0;
  bool _t151C = prim >0080 (_t151A, _t151B);
  real _t151D = 0.1e-7;
  real _t151E = 0.1e-7;
  real _t151F = 0.1e-7;
  vec3 _t1520 = [_t151D, _t151E, _t151F];
  real _t1521 = 0.e0;
  real _t1522 = prim max0125 (time109B, _t1521);
  vec3 _t1523 = prim *0038<$[3]> (dPos0AC1, _t1522);
  vec3 _t1524 = prim +0017<$[3]> (refPos0AC0, _t1523);
  vec3 _t1525 = prim +0017<$[3]> (_t1520, _t1524);
  real _t1526 = _t1525[2];
  real _t1527 = -0.e0;
  bool _t1528 = prim >0080 (_t1526, _t1527);
  bool _t1529 = prim $and01C4 (_t151C, _t1528);
  bool _t152A = prim $and01C4 (_t1510, _t1529);
  bool _t152B = prim $and01C4 (_t1504, _t152A);
  bool _t152C = prim $and01C4 (_t14F7, _t152B);
  if _t152C {
    string _t152D = "\nReturning via standard : ";
    real _t152E = 0.e0;
    real _t152F = prim max0125 (time109B, _t152E);
    real _t1530 = (real)face109C;
    vec2 _t1531 = [_t152F, _t1530];
    string _t1532 = "\n";
    print (_t152D, _t1531, _t1532);
    real _t1533 = 0.e0;
    real _t1534 = prim max0125 (time109B, _t1533);
    real _t1535 = (real)face109C;
    vec2 _t1536 = [_t1534, _t1535];
    return _t1536;
  } else {
    real _t1537 = -inf;
    bool _t1538 = prim ==0084 (_t1537, faceTime109D);
    if _t1538 {
      string _t1539 = "\nReturning via fail : ";
      real _t153A = -0.1e1;
      real _t153B = -0.1e1;
      vec2 _t153C = [_t153A, _t153B];
      string _t153D = "\n";
      print (_t1539, _t153C, _t153D);
      real _t153E = -0.1e1;
      real _t153F = -0.1e1;
      vec2 _t1540 = [_t153E, _t153F];
      return _t1540;
    } else {
      string _t1541 = "\nReturning via backup : ";
      real _t1542 = 0.e0;
      real _t1543 = prim max0125 (faceTime109D, _t1542);
      real _t1544 = (real)i109A;
      vec2 _t1545 = [_t1543, _t1544];
      string _t1546 = "\n";
      print (_t1541, _t1545, _t1546);
      real _t1547 = 0.e0;
      real _t1548 = prim max0125 (faceTime109D, _t1547);
      real _t1549 = (real)i109A;
      vec2 _t154A = [_t1548, _t1549];
      return _t154A;
    }
  }
}
function Femdata: MeshPos#2 fn_2FB1563 (Femdata: MeshPos x1564, vec3 dPos1565)
{
  bool _t1566 = extractFemItem(Valid(MeshPos), bool, x1564);
  bool _t1567 = prim !00BC (_t1566);
  if _t1567 {
    return x1564;
  }
  real time1568 = 0.1e1;
  Femdata: MeshPos cmp1569 = x1564;
  int _t156A = 0;
  int[] _t156B = prim $range01C3 (_t156A, timeSteps040D);
  foreach i15E3 in _t156B {
    Femdata: Mesh _t156C = extractFem(cmp1569, Mesh);
    int _t156D = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t156E = loadFem(MeshCell, _t156C, _t156D);
    Femdata: Mesh _t156F = extractFem(_t156E, Mesh);
    Femdata: Mesh _t1570 = extractFem(cmp1569, Mesh);
    int _t1571 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1572 = loadFem(MeshCell, _t1570, _t1571);
    Femdata: Mesh _t1573 = extractFem(_t1572, Mesh);
    Femdata: Mesh _t1574 = extractFem(cmp1569, Mesh);
    int _t1575 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1576 = loadFem(MeshCell, _t1574, _t1575);
    int _t1577 = extractFemItem(CellIndex(MeshCell), int, _t1576);
    field(3)[3] _t1578 = femField(_t156F,_t1577,field(3)[3],Transform,);
    field(3)[3,3] _t1579 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1578);
    vec3 _t157A = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    tensor[3,3] _t157B = prim @00A5<#∞; %3; $[3,3]> (_t1579, _t157A);
    tensor[3,3] _t157C = prim inv0155 (_t157B);
    vec3 deltaP157D = prim •00CE<$[3,3]; $[3]; $[3]> (_t157C, dPos1565);
    real _t157E = prim |()|00B5<$[3]> (deltaP157D);
    vec3 normDetaP157F = prim /0057<$[3]> (deltaP157D, _t157E);
    vec3 _t1580 = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    vec3 _t1581 = prim *0036<$[3]> (time1568, deltaP157D);
    vec3 newPos1582 = prim +0017<$[3]> (_t1580, _t1581);
    continue;
  }
  string _t15E4 = "Took stupid way out!\n";
  print (_t15E4);
  vec3 _t15E5;
  vec3 _t16DD = extractFemItem(RefPos(MeshPos), vec3, x1564);
  int _t16DE = extractFemItem(CellIndex(MeshPos), int, x1564);
  Femdata: Mesh _t16DF = extractFem(x1564, Mesh);
  vec3 _t16E0;
  field(3)[3] _t16E1 = femField(_t16DF,_t16DE,field(3)[3],Transform,);
  vec3 _t16E2 = prim @00A5<#∞; %3; $[3]> (_t16E1, _t16DD);
  _t16E0 = _t16E2;
  _t15E5 = _t16E0;
  vec3 _t15E6 = prim +0017<$[3]> (_t15E5, dPos1565);
  cmp1569 = func findPos041E (meshData03FD, _t15E6);
  return cmp1569;
}
globalInit {
  int _t0401 = 0;
  int _t03FF = 1;
  int _t0403 = extractFemItem(NumCell(Mesh), int, meshData03FD);
  int _t0402 = prim -0024 (_t0403, _t03FF);
  int[] _t0406 = prim $range01C3 (_t0401, _t0402);
  Femdata: MeshCell[] _t0407 = {};
  foreach _t0405 in _t0406 {
    Femdata: MeshCell _t0408 = loadFem(MeshCell, meshData03FD, _t0405);
    _t0407 = prim @0010<Femdata: MeshCell> (_t0407, _t0408);
  }
  space0409 = loadFem(Space, 0space0409_intermedateGlobal040A, meshData03FD);
  data040B = loadFem(FemFunc, 0data040B_intermedateGlobal040C, space0409);
  Femdata: Space _t1556 = extractFem(data040B, Space);
  Femdata: Space _t1557 = extractFem(data040B, Space);
  Femdata: Mesh _t1558 = extractFem(_t1557, Mesh);
  field(3)[3] _t1559 = femField(data040B,_t1558,field(3)[3],refField,findPos041E );
  Femdata: Space _t155A = extractFem(data040B, Space);
  Femdata: Mesh _t155B = extractFem(_t155A, Mesh);
  Femdata: Space _t155C = extractFem(data040B, Space);
  Femdata: Mesh _t155D = extractFem(_t155C, Mesh);
  Femdata: Space _t155E = extractFem(data040B, Space);
  Femdata: Mesh _t155F = extractFem(_t155E, Mesh);
  field(3)[3] _t1560 = femField(_t155B,_t155F,field(3)[3],InvTransform,findPos041E );
  F1561 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t1559, _t1560);
  Femdata: RefCell simplex16E9;
  Femdata: RefCell _t16EA = extractFemItem(RefCell(Mesh), Femdata: RefCell, meshData03FD);
  simplex16E9 = _t16EA;
  simplex1562 = simplex16E9;
}
strand gg (vec3 startPos15FF) {
  output vec3[] stream1600;
  output vec3[] newStream1603;
  int step1606;
  Femdata: MeshPos cPos1607;
  vec3 altCPos1608;
  {
    vec3[0] _t1601 = {};
    vec3[] _t1602 = (vec3[])_t1601;
    stream1600 = _t1602;
    vec3[0] _t1604 = {};
    vec3[] _t1605 = (vec3[])_t1604;
    newStream1603 = _t1605;
    step1606 = 0;
    cPos1607 = func findPos041E (meshData03FD, startPos15FF);
    altCPos1608 = startPos15FF;
  }
  update
  {
    int _t1609 = 0;
    bool _t160A = prim ==0082 (step1606, _t1609);
    if _t160A {
      bool _t160B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      if _t160B {
        vec3 rp160C = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
        real _t160D = rp160C[0];
        real _t160E = 0.1e-5;
        bool _t160F = prim <=007C (_t160D, _t160E);
        if _t160F {
          stabilize;
        }
        real _t1610 = rp160C[1];
        real _t1611 = 0.1e-5;
        bool _t1612 = prim <=007C (_t1610, _t1611);
        if _t1612 {
          stabilize;
        }
        real _t1613 = rp160C[2];
        real _t1614 = 0.1e-5;
        bool _t1615 = prim <=007C (_t1613, _t1614);
        if _t1615 {
          stabilize;
        }
        real _t1616 = 0.1e1;
        real _t1617 = 0.1e1;
        real _t1618 = 0.1e1;
        vec3 _t1619 = [_t1616, _t1617, _t1618];
        real r161A = prim •00CE<$[3]; $[3]; $[]> (_t1619, rp160C);
        real _t161B = 0.9999999e0;
        bool _t161C = prim <=007C (_t161B, r161A);
        if _t161C {
          stabilize;
        }
      }
    }
    bool _t161D = extractFemItem(Valid(MeshPos), bool, cPos1607);
    Femdata: MeshPos _t161E = func findPos041E (meshData03FD, altCPos1608);
    bool _t161F = extractFemItem(Valid(MeshPos), bool, _t161E);
    bool _t1620 = prim !=0085 (_t161D, _t161F);
    if _t1620 {
      string _t1621 = "ERG:Warning of validity startPos:";
      string _t1622 = "\n";
      print (_t1621, startPos15FF, _t1622);
    }
    bool _t1623;
    bool _t1624 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    bool _t1625 = prim !00BC (_t1624);
    if _t1625 {
      _t1623 = true;
    } else {
      bool _t1626;
      Femdata: MeshPos _t1627 = func findPos041E (meshData03FD, altCPos1608);
      bool _t1628 = extractFemItem(Valid(MeshPos), bool, _t1627);
      bool _t1629 = prim !00BC (_t1628);
      if _t1629 {
        _t1626 = true;
      } else {
        _t1626 = prim ==0082 (step1606, stepMax0411);
      }
      _t1623 = _t1626;
    }
    if _t1623 {
      string _t162A = "Went off the mesh\?";
      bool _t162B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      bool _t162C = prim !00BC (_t162B);
      string _t162D = " and ";
      string _t162E = " and ";
      Femdata: MeshPos _t162F = func findPos041E (meshData03FD, altCPos1608);
      bool _t1630 = extractFemItem(Valid(MeshPos), bool, _t162F);
      bool _t1631 = prim !00BC (_t1630);
      string _t1632 = "\n";
      print (_t162A, _t162C, _t162D, altCPos1608, _t162E, _t1631, _t1632);
      string _t1633 = "Pos is:";
      vec3 _t1634 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1635 = "\n";
      print (_t1633, _t1634, _t1635);
      string _t1636 = "\n";
      string _t1637 = "\n";
      print (stream1600, _t1636, newStream1603, _t1637);
      stabilize;
    }
    vec3 _t1638;
    vec3 _t173B = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
    int _t173C = extractFemItem(CellIndex(MeshPos), int, cPos1607);
    Femdata: Mesh _t173D = extractFem(cPos1607, Mesh);
    vec3 _t173E;
    field(3)[3] _t173F = femField(_t173D,_t173C,field(3)[3],Transform,);
    vec3 _t1740 = prim @00A5<#∞; %3; $[3]> (_t173F, _t173B);
    _t173E = _t1740;
    _t1638 = _t173E;
    vec3[1] _t1639 = {_t1638};
    vec3[] _t163A = (vec3[])_t1639;
    stream1600 = prim @0014<vec3> (stream1600, _t163A);
    vec3[1] _t163B = {altCPos1608};
    vec3[] _t163C = (vec3[])_t163B;
    newStream1603 = prim @0014<vec3> (newStream1603, _t163C);
    vec3 _t163D;
    vec3 _t1735 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
    int _t1736 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
    Femdata: Mesh _t1737 = extractFem(cPos1607, Mesh);
    vec3 _t1738;
    field(3)[3] _t1739 = femField(_t1737,_t1736,field(3)[3],Transform,);
    vec3 _t173A = prim @00A5<#∞; %3; $[3]> (_t1739, _t1735);
    _t1738 = _t173A;
    _t163D = _t1738;
    vec3 _t163E = prim -0026<$[3]> (_t163D, altCPos1608);
    real _t163F = prim |()|00B5<$[3]> (_t163E);
    real _t1640 = 0.1e-5;
    bool _t1641 = prim >0080 (_t163F, _t1640);
    if _t1641 {
      string _t1642 = "ERG:Error in tracing 1: At step:";
      string _t1643 = " with particle:";
      string _t1644 = "\n";
      print (_t1642, step1606, _t1643, startPos15FF, _t1644);
      string _t1645 = "Poses are:";
      vec3 _t1646;
      vec3 _t172F = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      int _t1730 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: Mesh _t1731 = extractFem(cPos1607, Mesh);
      vec3 _t1732;
      field(3)[3] _t1733 = femField(_t1731,_t1730,field(3)[3],Transform,);
      vec3 _t1734 = prim @00A5<#∞; %3; $[3]> (_t1733, _t172F);
      _t1732 = _t1734;
      _t1646 = _t1732;
      string _t1647 = "\n";
      print (_t1645, _t1646, altCPos1608, _t1647);
      string _t1648 = "Cells are:";
      Femdata: Mesh _t1649 = extractFem(cPos1607, Mesh);
      int _t164A = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t164B = loadFem(MeshCell, _t1649, _t164A);
      string _t164C = " and ";
      Femdata: MeshPos _t164D = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t164E = extractFem(_t164D, Mesh);
      Femdata: MeshPos _t164F = func findPos041E (meshData03FD, altCPos1608);
      int _t1650 = extractFemItem(CellIndex(MeshPos), int, _t164F);
      Femdata: MeshCell _t1651 = loadFem(MeshCell, _t164E, _t1650);
      string _t1652 = "\n";
      print (_t1648, _t164B, _t164C, _t1651, _t1652);
      string _t1653 = "Ref poses are:";
      vec3 _t1654 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1655 = " and ";
      Femdata: MeshPos _t1656 = func findPos041E (meshData03FD, altCPos1608);
      vec3 _t1657 = extractFemItem(RefPos(MeshPos), vec3, _t1656);
      string _t1658 = "\n";
      print (_t1653, _t1654, _t1655, _t1657, _t1658);
      stabilize;
    } else {
      string _t1659 = "fine in cell 1:";
      Femdata: Mesh _t165A = extractFem(cPos1607, Mesh);
      int _t165B = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t165C = loadFem(MeshCell, _t165A, _t165B);
      string _t165D = "\n";
      print (_t1659, _t165C, _t165D);
    }
    real _t165E = 0.5e0;
    real _t165F = prim *0034 (_t165E, stepSize0410);
    vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    vec3 _t1661 = prim *0036<$[3]> (_t165F, _t1660);
    vec3 _t1662 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    real _t1663 = prim |()|00B5<$[3]> (_t1662);
    vec3 altUp11664 = prim /0057<$[3]> (_t1661, _t1663);
    real _t1665 = 0.5e0;
    real _t1666 = prim *0034 (_t1665, stepSize0410);
    vec3 _t1667;
    bool _t1717 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    if _t1717 {
      Femdata: Mesh _t1718 = extractFem(cPos1607, Mesh);
      int _t1719 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell c171A = loadFem(MeshCell, _t1718, _t1719);
      vec3 ref171B = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      Femdata: FuncCell _t171C;
      int _t171D = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t171E = loadFem(FuncCell, data040B, _t171D);
      _t171C = _t171E;
      Femdata: FemFunc _t171F = extractFem(_t171C, FemFunc);
      Femdata: FuncCell _t1720;
      int _t1721 = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t1722 = loadFem(FuncCell, data040B, _t1721);
      _t1720 = _t1722;
      Femdata: FemFunc _t1723 = extractFem(_t1720, FemFunc);
      Femdata: Space _t1724 = extractFem(_t1723, Space);
      Femdata: FuncCell _t1725;
      int _t1726 = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t1727 = loadFem(FuncCell, data040B, _t1726);
      _t1725 = _t1727;
      int _t1728 = extractFemItem(CellIndex(FuncCell), int, _t1725);
      field(3)[3] _t1729 = femField(_t171F,_t1728,field(3)[3],refField,);
      vec3 val172A = prim @00A5<#∞; %3; $[3]> (_t1729, ref171B);
      real _t172B = prim |()|00B5<$[3]> (val172A);
      vec3 _t172C = prim /0057<$[3]> (val172A, _t172B);
      _t1667 = _t172C;
    } else {
      string _t172D = "QWE:Eval at 0\n";
      print (_t172D);
      vec3 _t172E = prim $zero01BB<$[3]> ();
      _t1667 = _t172E;
    }
    vec3 up11668 = prim *0036<$[3]> (_t1666, _t1667);
    real _t1669 = 0.5e0;
    real _t166A = prim *0034 (_t1669, stepSize0410);
    vec3 _t166B;
    vec3 _t1715 = prim -0026<$[3]> (altCPos1608, center0413);
    vec3 _t1716 = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t1715);
    _t166B = _t1716;
    vec3 _t166C = prim *0036<$[3]> (_t166A, _t166B);
    vec3 _t166D;
    vec3 _t1713 = prim -0026<$[3]> (altCPos1608, center0413);
    vec3 _t1714 = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t1713);
    _t166D = _t1714;
    real _t166E = prim |()|00B5<$[3]> (_t166D);
    vec3 upCorrect1166F = prim /0057<$[3]> (_t166C, _t166E);
    bool _t1670;
    vec3 _t1671 = prim -0026<$[3]> (up11668, upCorrect1166F);
    real _t1672 = prim |()|00B5<$[3]> (_t1671);
    real _t1673 = 0.1e-5;
    bool _t1674 = prim >0080 (_t1672, _t1673);
    if _t1674 {
      _t1670 = true;
    } else {
      vec3 _t1675 = prim -0026<$[3]> (up11668, altUp11664);
      real _t1676 = prim |()|00B5<$[3]> (_t1675);
      real _t1677 = 0.1e-5;
      _t1670 = prim >0080 (_t1676, _t1677);
    }
    if _t1670 {
      string _t1678 = "ERG:Error in evaluation on pos 1:";
      string _t1679 = "\n";
      print (_t1678, startPos15FF, _t1679);
    }
    Femdata: MeshPos intermed167A = func fn_2FB1563 (cPos1607, up11668);
    vec3 altIntermed167B = prim +0017<$[3]> (altCPos1608, altUp11664);
    bool _t167C = extractFemItem(Valid(MeshPos), bool, intermed167A);
    Femdata: MeshPos _t167D = func findPos041E (meshData03FD, altIntermed167B);
    bool _t167E = extractFemItem(Valid(MeshPos), bool, _t167D);
    bool _t167F = prim !=0085 (_t167C, _t167E);
    if _t167F {
      string _t1680 = "ERG:Warning of validity intermed";
      string _t1681 = "\n";
      print (_t1680, startPos15FF, _t1681);
      string _t1682 = "Real location:";
      string _t1683 = "\n";
      print (_t1682, altIntermed167B, _t1683);
      string _t1684 = "Cell change: ";
      Femdata: MeshPos _t1685 = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t1686 = extractFem(_t1685, Mesh);
      Femdata: MeshPos _t1687 = func findPos041E (meshData03FD, altCPos1608);
      int _t1688 = extractFemItem(CellIndex(MeshPos), int, _t1687);
      Femdata: MeshCell _t1689 = loadFem(MeshCell, _t1686, _t1688);
      string _t168A = " to ";
      Femdata: MeshPos _t168B = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t168C = extractFem(_t168B, Mesh);
      Femdata: MeshPos _t168D = func findPos041E (meshData03FD, altIntermed167B);
      int _t168E = extractFemItem(CellIndex(MeshPos), int, _t168D);
      Femdata: MeshCell _t168F = loadFem(MeshCell, _t168C, _t168E);
      string _t1690 = "\n";
      print (_t1684, _t1689, _t168A, _t168F, _t1690);
    }
    bool _t1691;
    bool _t1692 = extractFemItem(Valid(MeshPos), bool, intermed167A);
    bool _t1693 = prim !00BC (_t1692);
    if _t1693 {
      _t1691 = true;
    } else {
      Femdata: MeshPos _t1694 = func findPos041E (meshData03FD, altIntermed167B);
      bool _t1695 = extractFemItem(Valid(MeshPos), bool, _t1694);
      _t1691 = prim !00BC (_t1695);
    }
    if _t1691 {
      string _t1696 = "Went off the mesh\?";
      bool _t1697 = extractFemItem(Valid(MeshPos), bool, intermed167A);
      bool _t1698 = prim !00BC (_t1697);
      string _t1699 = " and ";
      string _t169A = " and ";
      Femdata: MeshPos _t169B = func findPos041E (meshData03FD, altIntermed167B);
      bool _t169C = extractFemItem(Valid(MeshPos), bool, _t169B);
      bool _t169D = prim !00BC (_t169C);
      string _t169E = "\n";
      print (_t1696, _t1698, _t1699, altIntermed167B, _t169A, _t169D, _t169E);
      stabilize;
    }
    vec3 _t169F;
    vec3 _t170D = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
    int _t170E = extractFemItem(CellIndex(MeshPos), int, intermed167A);
    Femdata: Mesh _t170F = extractFem(intermed167A, Mesh);
    vec3 _t1710;
    field(3)[3] _t1711 = femField(_t170F,_t170E,field(3)[3],Transform,);
    vec3 _t1712 = prim @00A5<#∞; %3; $[3]> (_t1711, _t170D);
    _t1710 = _t1712;
    _t169F = _t1710;
    vec3 _t16A0 = prim -0026<$[3]> (_t169F, altIntermed167B);
    real _t16A1 = prim |()|00B5<$[3]> (_t16A0);
    real _t16A2 = 0.1e-5;
    bool _t16A3 = prim >0080 (_t16A1, _t16A2);
    if _t16A3 {
      string _t16A4 = "ERG:Error in tracing 2: At step:";
      string _t16A5 = " with particle:";
      string _t16A6 = "\n";
      print (_t16A4, step1606, _t16A5, startPos15FF, _t16A6);
      string _t16A7 = "Poses are:";
      vec3 _t16A8;
      vec3 _t1707 = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
      int _t1708 = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: Mesh _t1709 = extractFem(intermed167A, Mesh);
      vec3 _t170A;
      field(3)[3] _t170B = femField(_t1709,_t1708,field(3)[3],Transform,);
      vec3 _t170C = prim @00A5<#∞; %3; $[3]> (_t170B, _t1707);
      _t170A = _t170C;
      _t16A8 = _t170A;
      string _t16A9 = "\n";
      print (_t16A7, _t16A8, altIntermed167B, _t16A9);
      stabilize;
    } else {
      string _t16AA = "fine in cell 2:";
      Femdata: Mesh _t16AB = extractFem(cPos1607, Mesh);
      int _t16AC = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t16AD = loadFem(MeshCell, _t16AB, _t16AC);
      string _t16AE = "\n";
      print (_t16AA, _t16AD, _t16AE);
    }
    vec3 _t16AF = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    vec3 _t16B0 = prim *0036<$[3]> (stepSize0410, _t16AF);
    vec3 _t16B1 = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    real _t16B2 = prim |()|00B5<$[3]> (_t16B1);
    vec3 altUp216B3 = prim /0057<$[3]> (_t16B0, _t16B2);
    vec3 _t16B4;
    bool _t16EF = extractFemItem(Valid(MeshPos), bool, intermed167A);
    if _t16EF {
      Femdata: Mesh _t16F0 = extractFem(intermed167A, Mesh);
      int _t16F1 = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell c16F2 = loadFem(MeshCell, _t16F0, _t16F1);
      vec3 ref16F3 = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
      Femdata: FuncCell _t16F4;
      int _t16F5 = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16F6 = loadFem(FuncCell, data040B, _t16F5);
      _t16F4 = _t16F6;
      Femdata: FemFunc _t16F7 = extractFem(_t16F4, FemFunc);
      Femdata: FuncCell _t16F8;
      int _t16F9 = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16FA = loadFem(FuncCell, data040B, _t16F9);
      _t16F8 = _t16FA;
      Femdata: FemFunc _t16FB = extractFem(_t16F8, FemFunc);
      Femdata: Space _t16FC = extractFem(_t16FB, Space);
      Femdata: FuncCell _t16FD;
      int _t16FE = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16FF = loadFem(FuncCell, data040B, _t16FE);
      _t16FD = _t16FF;
      int _t1700 = extractFemItem(CellIndex(FuncCell), int, _t16FD);
      field(3)[3] _t1701 = femField(_t16F7,_t1700,field(3)[3],refField,);
      vec3 val1702 = prim @00A5<#∞; %3; $[3]> (_t1701, ref16F3);
      real _t1703 = prim |()|00B5<$[3]> (val1702);
      vec3 _t1704 = prim /0057<$[3]> (val1702, _t1703);
      _t16B4 = _t1704;
    } else {
      string _t1705 = "QWE:Eval at 0\n";
      print (_t1705);
      vec3 _t1706 = prim $zero01BB<$[3]> ();
      _t16B4 = _t1706;
    }
    vec3 up216B5 = prim *0036<$[3]> (stepSize0410, _t16B4);
    vec3 _t16B6;
    vec3 _t16ED = prim -0026<$[3]> (altIntermed167B, center0413);
    vec3 _t16EE = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t16ED);
    _t16B6 = _t16EE;
    vec3 _t16B7 = prim *0036<$[3]> (stepSize0410, _t16B6);
    vec3 _t16B8;
    vec3 _t16EB = prim -0026<$[3]> (altIntermed167B, center0413);
    vec3 _t16EC = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t16EB);
    _t16B8 = _t16EC;
    real _t16B9 = prim |()|00B5<$[3]> (_t16B8);
    vec3 upCorrect216BA = prim /0057<$[3]> (_t16B7, _t16B9);
    cPos1607 = func fn_2FB1563 (cPos1607, up216B5);
    altCPos1608 = prim +0017<$[3]> (altCPos1608, altUp216B3);
    int _t16BB = 1;
    step1606 = prim +0015 (step1606, _t16BB);
    bool _t16BC;
    vec3 _t16BD = prim -0026<$[3]> (up216B5, upCorrect216BA);
    real _t16BE = prim |()|00B5<$[3]> (_t16BD);
    real _t16BF = 0.1e-5;
    bool _t16C0 = prim >0080 (_t16BE, _t16BF);
    if _t16C0 {
      _t16BC = true;
    } else {
      vec3 _t16C1 = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16C2 = prim |()|00B5<$[3]> (_t16C1);
      real _t16C3 = 0.1e-4;
      _t16BC = prim >0080 (_t16C2, _t16C3);
    }
    if _t16BC {
      string _t16C4 = "ERG:Error in evaluation on pos 2:";
      string _t16C5 = "\n";
      print (_t16C4, startPos15FF, _t16C5);
      string _t16C6 = "The errors are:";
      vec3 _t16C7 = prim -0026<$[3]> (up216B5, upCorrect216BA);
      real _t16C8 = prim |()|00B5<$[3]> (_t16C7);
      string _t16C9 = " and ";
      vec3 _t16CA = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16CB = prim |()|00B5<$[3]> (_t16CA);
      string _t16CC = "\n";
      print (_t16C6, _t16C8, _t16C9, _t16CB, _t16CC);
      string _t16CD = "The cells are:";
      Femdata: Mesh _t16CE = extractFem(intermed167A, Mesh);
      int _t16CF = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell _t16D0 = loadFem(MeshCell, _t16CE, _t16CF);
      string _t16D1 = " vs ";
      Femdata: MeshPos _t16D2 = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t16D3 = extractFem(_t16D2, Mesh);
      Femdata: MeshPos _t16D4 = func findPos041E (meshData03FD, altIntermed167B);
      int _t16D5 = extractFemItem(CellIndex(MeshPos), int, _t16D4);
      Femdata: MeshCell _t16D6 = loadFem(MeshCell, _t16D3, _t16D5);
      string _t16D7 = "\n";
      print (_t16CD, _t16D0, _t16D1, _t16D6, _t16D7);
    }
  }
}
collection {
  foreach x16D8 in startPoints040F {
    new gg (x16D8);
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData03FD;
input FemData:Space 0space0409_intermedateGlobal040A;
input FemData:FemFunc 0data040B_intermedateGlobal040C;
input int timeSteps040D = <default>;
input real timeEps040E = <default>;
input vec3[] startPoints040F;
input real stepSize0410 = <default>;
input int stepMax0411 = <default>;
input tensor[3,3] M0412;
input vec3 center0413;
constants {
  timeSteps040D = 32;
  timeEps040E = 0.1e-6;
  stepSize0410 = 0.1e-1;
  stepMax0411 = 300;
}
global Femdata: Space space0409;
global Femdata: FemFunc data040B;
global field(3)[3] F1561;
function Femdata: MeshPos#20 findPos041E (Femdata: Mesh mesh041F, vec3 pos0420)
{
  real _t0421 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0422 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0423 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0424 = [_t0421, _t0422, _t0423];
  newtonInt0425 = 0;
  cellInt0426 = extractFemItem(StartCell(Mesh), int, mesh041F);
  int _t0427 = extractFemItem(NumCell(Mesh), int, mesh041F);
  int _t0428 = 1;
  numCell0429 = prim -0024 (_t0427, _t0428);
  yayCells042A = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh041F, pos0420 : vec3);
  foreach cellItter042E in yayCells042A {
    real _t042B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn0424 = [_t042B, _t042C, _t042D];
    cellInt0426 = cellItter042E;
    field(3)[3] _t042F = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
    field(3)[3,3] _t0430 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042F);
    field(3)[3,3] _t0431 = prim inv015E<#∞; %3> (_t0430);
    real _t0432 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0433 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0435 = [_t0432, _t0433, _t0434];
    A0436 = prim @00A5<#∞; %3; $[3,3]> (_t0431, _t0435);
    int _t0437 = 0;
    int _t0438 = 16;
    int[] _t0439 = prim $range01C3 (_t0437, _t0438);
    foreach newtonItter0468 in _t0439 {
      field(3)[3] _t043A = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
      field(3)[3] _t043B = prim -002E<#∞; %3; $[3]> (_t043A, pos0420);
      field(3)[3] _t043C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0436, _t043B);
      delta043D = prim @00A5<#∞; %3; $[3]> (_t043C, xn0424);
      xn0424 = prim -0026<$[3]> (xn0424, delta043D);
      real _t043E = 0.1e-7;
      real _t043F = 0.1e-7;
      real _t0440 = prim *0034 (_t043E, _t043F);
      real _t0441 = prim •00CE<$[3]; $[3]; $[]> (delta043D, delta043D);
      bool _t0442 = prim >=007E (_t0440, _t0441);
      if _t0442 {
        real _t0443 = 0.1e1;
        real _t0444 = 0.1e-7;
        real _t0445 = prim +0017<$[]> (_t0443, _t0444);
        real _t0446 = 0.1e1;
        real _t0447 = 0.1e1;
        real _t0448 = 0.1e1;
        vec3 _t0449 = [_t0446, _t0447, _t0448];
        real _t044A = prim •00CE<$[3]; $[3]; $[]> (_t0449, xn0424);
        bool _t044B = prim >0080 (_t0445, _t044A);
        real _t044C = 0.1e-7;
        real _t044D = 0.1e-7;
        real _t044E = 0.1e-7;
        vec3 _t044F = [_t044C, _t044D, _t044E];
        vec3 _t0450 = prim +0017<$[3]> (_t044F, xn0424);
        real _t0451 = _t0450[0];
        real _t0452 = -0.e0;
        bool _t0453 = prim >0080 (_t0451, _t0452);
        real _t0454 = 0.1e-7;
        real _t0455 = 0.1e-7;
        real _t0456 = 0.1e-7;
        vec3 _t0457 = [_t0454, _t0455, _t0456];
        vec3 _t0458 = prim +0017<$[3]> (_t0457, xn0424);
        real _t0459 = _t0458[1];
        real _t045A = -0.e0;
        bool _t045B = prim >0080 (_t0459, _t045A);
        real _t045C = 0.1e-7;
        real _t045D = 0.1e-7;
        real _t045E = 0.1e-7;
        vec3 _t045F = [_t045C, _t045D, _t045E];
        vec3 _t0460 = prim +0017<$[3]> (_t045F, xn0424);
        real _t0461 = _t0460[2];
        real _t0462 = -0.e0;
        bool _t0463 = prim >0080 (_t0461, _t0462);
        bool _t0464 = prim $and01C4 (_t045B, _t0463);
        bool _t0465 = prim $and01C4 (_t0453, _t0464);
        bool _t0466 = prim $and01C4 (_t044B, _t0465);
        if _t0466 {
          Femdata: MeshPos _t0467 = extractFemItemN((mesh041F, cellInt0426, xn0424, pos0420),AllBuild(MeshPos),);
          return _t0467;
        }
      }
    }
  }
  Femdata: MeshPos _t0469 = extractFemItemN((mesh041F),InvalidBuild(MeshPos),);
  return _t0469;
}
function vec3#2 worldPos04DA (Femdata: MeshPos pos04D3)
{
  vec3 _t04DB = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
  int _t04DC = extractFemItem(CellIndex(MeshPos), int, pos04D3);
  Femdata: Mesh _t04DD = extractFem(pos04D3, Mesh);
  vec3 _t04DE;
  field(3)[3] _t16DB = femField(_t04DD,_t04DC,field(3)[3],Transform,);
  vec3 _t16DC = prim @00A5<#∞; %3; $[3]> (_t16DB, _t04DB);
  _t04DE = _t16DC;
  return _t04DE;
}
function Femdata: MeshPos#1 $exitPos04DF (Femdata: Mesh mesh04E0, int cellId04E1, vec3 refPos04E2, vec3 dPos04E3, real[2] time04E4)
{
  int _t04E5 = -1;
  real _t04E6 = time04E4[1];
  int _t04E7 = prim $r2i01B7 (_t04E6);
  int[2] _t04E9 = func nextCell404E8 (_t04E7, cellId04E1, mesh04E0);
  int _t04EA = 0;
  int _t04EB = prim $sub01C0<int; %2> (_t04E9, _t04EA);
  bool _t04EC = prim !=0086 (_t04E5, _t04EB);
  if _t04EC {
    string _t04ED = "face ";
    real _t04EE = time04E4[1];
    int _t04EF = prim $r2i01B7 (_t04EE);
    string _t04F0 = " to ";
    real _t04F1 = time04E4[1];
    int _t04F2 = prim $r2i01B7 (_t04F1);
    int[2] _t04F3 = func nextCell404E8 (_t04F2, cellId04E1, mesh04E0);
    int _t04F4 = 1;
    int _t04F5 = prim $sub01C0<int; %2> (_t04F3, _t04F4);
    string _t04F6 = "\n";
    string _t04F7 = "got: ";
    real _t04F8 = 0.1e1;
    real _t04F9 = 0.e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.e0;
    vec4 _t04FC = [_t04F8, _t04F9, _t04FA, _t04FB];
    real _t04FD = 0.e0;
    real _t04FE = 0.1e1;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec4 _t0501 = [_t04FD, _t04FE, _t04FF, _t0500];
    real _t0502 = 0.e0;
    real _t0503 = 0.e0;
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    vec4 _t0506 = [_t0502, _t0503, _t0504, _t0505];
    real _t0507 = 0.971445146547e-16;
    real _t0508 = 0.e0;
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    vec4 _t050B = [_t0507, _t0508, _t0509, _t050A];
    tensor[4,4] _t050C = [_t04FC, _t0501, _t0506, _t050B];
    real _t050D = 0.57735026919e0;
    real _t050E = 0.57735026919e0;
    real _t050F = 0.57735026919e0;
    real _t0510 = -0.57735026919e0;
    vec4 _t0511 = [_t050D, _t050E, _t050F, _t0510];
    real _t0512 = -0.333333333333e0;
    real _t0513 = 0.666666666667e0;
    real _t0514 = -0.333333333333e0;
    real _t0515 = 0.333333333333e0;
    vec4 _t0516 = [_t0512, _t0513, _t0514, _t0515];
    real _t0517 = -0.333333333333e0;
    real _t0518 = -0.333333333333e0;
    real _t0519 = 0.666666666667e0;
    real _t051A = 0.333333333333e0;
    vec4 _t051B = [_t0517, _t0518, _t0519, _t051A];
    real _t051C = 0.971445146547e-16;
    real _t051D = 0.e0;
    real _t051E = 0.e0;
    real _t051F = 0.1e1;
    vec4 _t0520 = [_t051C, _t051D, _t051E, _t051F];
    tensor[4,4] _t0521 = [_t0511, _t0516, _t051B, _t0520];
    real _t0522 = -0.333333333333e0;
    real _t0523 = 0.666666666667e0;
    real _t0524 = -0.333333333333e0;
    real _t0525 = 0.333333333333e0;
    vec4 _t0526 = [_t0522, _t0523, _t0524, _t0525];
    real _t0527 = -0.57735026919e0;
    real _t0528 = -0.57735026919e0;
    real _t0529 = -0.57735026919e0;
    real _t052A = 0.57735026919e0;
    vec4 _t052B = [_t0527, _t0528, _t0529, _t052A];
    real _t052C = -0.333333333333e0;
    real _t052D = -0.333333333333e0;
    real _t052E = 0.666666666667e0;
    real _t052F = 0.333333333333e0;
    vec4 _t0530 = [_t052C, _t052D, _t052E, _t052F];
    real _t0531 = 0.971445146547e-16;
    real _t0532 = 0.e0;
    real _t0533 = 0.e0;
    real _t0534 = 0.1e1;
    vec4 _t0535 = [_t0531, _t0532, _t0533, _t0534];
    tensor[4,4] _t0536 = [_t0526, _t052B, _t0530, _t0535];
    real _t0537 = -0.333333333333e0;
    real _t0538 = 0.666666666667e0;
    real _t0539 = -0.333333333333e0;
    real _t053A = 0.333333333333e0;
    vec4 _t053B = [_t0537, _t0538, _t0539, _t053A];
    real _t053C = -0.333333333333e0;
    real _t053D = -0.333333333333e0;
    real _t053E = 0.666666666667e0;
    real _t053F = 0.333333333333e0;
    vec4 _t0540 = [_t053C, _t053D, _t053E, _t053F];
    real _t0541 = 0.57735026919e0;
    real _t0542 = 0.57735026919e0;
    real _t0543 = 0.57735026919e0;
    real _t0544 = -0.57735026919e0;
    vec4 _t0545 = [_t0541, _t0542, _t0543, _t0544];
    real _t0546 = 0.971445146547e-16;
    real _t0547 = 0.e0;
    real _t0548 = 0.e0;
    real _t0549 = 0.1e1;
    vec4 _t054A = [_t0546, _t0547, _t0548, _t0549];
    tensor[4,4] _t054B = [_t053B, _t0540, _t0545, _t054A];
    tensor[4,4][4] _t054C = {_t050C, _t0521, _t0536, _t054B};
    real _t054D = 0.57735026919e0;
    real _t054E = -0.1e1;
    real _t054F = -0.1e1;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    real _t0552 = 0.57735026919e0;
    real _t0553 = 0.1e1;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    vec4 _t0556 = [_t0552, _t0553, _t0554, _t0555];
    real _t0557 = 0.57735026919e0;
    real _t0558 = 0.e0;
    real _t0559 = 0.1e1;
    real _t055A = 0.e0;
    vec4 _t055B = [_t0557, _t0558, _t0559, _t055A];
    real _t055C = 0.e0;
    real _t055D = 0.e0;
    real _t055E = 0.e0;
    real _t055F = 0.1e1;
    vec4 _t0560 = [_t055C, _t055D, _t055E, _t055F];
    tensor[4,4] _t0561 = [_t0551, _t0556, _t055B, _t0560];
    real _t0562 = 0.1e1;
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.e0;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    real _t0567 = 0.e0;
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    vec4 _t056B = [_t0567, _t0568, _t0569, _t056A];
    real _t056C = 0.e0;
    real _t056D = 0.e0;
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    vec4 _t0570 = [_t056C, _t056D, _t056E, _t056F];
    real _t0571 = 0.e0;
    real _t0572 = 0.e0;
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    vec4 _t0575 = [_t0571, _t0572, _t0573, _t0574];
    tensor[4,4] _t0576 = [_t0566, _t056B, _t0570, _t0575];
    real _t0577 = 0.e0;
    real _t0578 = 0.1e1;
    real _t0579 = 0.e0;
    real _t057A = 0.e0;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    real _t057C = -0.1e1;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    vec4 _t0580 = [_t057C, _t057D, _t057E, _t057F];
    real _t0581 = 0.e0;
    real _t0582 = 0.e0;
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    vec4 _t0585 = [_t0581, _t0582, _t0583, _t0584];
    real _t0586 = 0.e0;
    real _t0587 = 0.e0;
    real _t0588 = 0.e0;
    real _t0589 = 0.1e1;
    vec4 _t058A = [_t0586, _t0587, _t0588, _t0589];
    tensor[4,4] _t058B = [_t057B, _t0580, _t0585, _t058A];
    real _t058C = 0.e0;
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    vec4 _t0590 = [_t058C, _t058D, _t058E, _t058F];
    real _t0591 = 0.e0;
    real _t0592 = 0.e0;
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    vec4 _t0595 = [_t0591, _t0592, _t0593, _t0594];
    real _t0596 = 0.1e1;
    real _t0597 = 0.e0;
    real _t0598 = 0.e0;
    real _t0599 = 0.e0;
    vec4 _t059A = [_t0596, _t0597, _t0598, _t0599];
    real _t059B = 0.e0;
    real _t059C = 0.e0;
    real _t059D = 0.e0;
    real _t059E = 0.1e1;
    vec4 _t059F = [_t059B, _t059C, _t059D, _t059E];
    tensor[4,4] _t05A0 = [_t0590, _t0595, _t059A, _t059F];
    tensor[4,4][4] _t05A1 = {_t0561, _t0576, _t058B, _t05A0};
    real _t05A2 = -0.1e1;
    real _t05A3 = -0.57735026919e0;
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.57735026919e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    vec4 _t05AB = [_t05A7, _t05A8, _t05A9, _t05AA];
    real _t05AC = 0.e0;
    real _t05AD = -0.57735026919e0;
    real _t05AE = 0.1e1;
    real _t05AF = 0.e0;
    vec4 _t05B0 = [_t05AC, _t05AD, _t05AE, _t05AF];
    real _t05B1 = 0.e0;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    vec4 _t05B5 = [_t05B1, _t05B2, _t05B3, _t05B4];
    tensor[4,4] _t05B6 = [_t05A6, _t05AB, _t05B0, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.e0;
    real _t05BA = 0.e0;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    real _t05BC = 0.1e1;
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    vec4 _t05C0 = [_t05BC, _t05BD, _t05BE, _t05BF];
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    vec4 _t05C5 = [_t05C1, _t05C2, _t05C3, _t05C4];
    real _t05C6 = 0.e0;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.1e1;
    vec4 _t05CA = [_t05C6, _t05C7, _t05C8, _t05C9];
    tensor[4,4] _t05CB = [_t05BB, _t05C0, _t05C5, _t05CA];
    real _t05CC = 0.1e1;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.e0;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    vec4 _t05D5 = [_t05D1, _t05D2, _t05D3, _t05D4];
    real _t05D6 = 0.e0;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    vec4 _t05DA = [_t05D6, _t05D7, _t05D8, _t05D9];
    real _t05DB = 0.e0;
    real _t05DC = 0.e0;
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    vec4 _t05DF = [_t05DB, _t05DC, _t05DD, _t05DE];
    tensor[4,4] _t05E0 = [_t05D0, _t05D5, _t05DA, _t05DF];
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    vec4 _t05E5 = [_t05E1, _t05E2, _t05E3, _t05E4];
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    vec4 _t05EA = [_t05E6, _t05E7, _t05E8, _t05E9];
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    vec4 _t05EF = [_t05EB, _t05EC, _t05ED, _t05EE];
    real _t05F0 = 0.e0;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    real _t05F3 = 0.1e1;
    vec4 _t05F4 = [_t05F0, _t05F1, _t05F2, _t05F3];
    tensor[4,4] _t05F5 = [_t05E5, _t05EA, _t05EF, _t05F4];
    tensor[4,4][4] _t05F6 = {_t05B6, _t05CB, _t05E0, _t05F5};
    real _t05F7 = -0.1e1;
    real _t05F8 = -0.1e1;
    real _t05F9 = 0.57735026919e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = 0.e0;
    real _t05FE = 0.57735026919e0;
    real _t05FF = 0.e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.1e1;
    real _t0603 = 0.57735026919e0;
    real _t0604 = 0.e0;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    real _t0606 = 0.e0;
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    vec4 _t060A = [_t0606, _t0607, _t0608, _t0609];
    tensor[4,4] _t060B = [_t05FB, _t0600, _t0605, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = 0.e0;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.1e1;
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    vec4 _t061F = [_t061B, _t061C, _t061D, _t061E];
    tensor[4,4] _t0620 = [_t0610, _t0615, _t061A, _t061F];
    real _t0621 = 0.1e1;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.e0;
    real _t0627 = 0.e0;
    real _t0628 = -0.1e1;
    real _t0629 = 0.e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.1e1;
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    real _t0630 = 0.e0;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    vec4 _t0634 = [_t0630, _t0631, _t0632, _t0633];
    tensor[4,4] _t0635 = [_t0625, _t062A, _t062F, _t0634];
    real _t0636 = 0.1e1;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    vec4 _t063F = [_t063B, _t063C, _t063D, _t063E];
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    vec4 _t0644 = [_t0640, _t0641, _t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    vec4 _t0649 = [_t0645, _t0646, _t0647, _t0648];
    tensor[4,4] _t064A = [_t063A, _t063F, _t0644, _t0649];
    tensor[4,4][4] _t064B = {_t060B, _t0620, _t0635, _t064A};
    tensor[4,4][4][4] _t064C = {_t054C, _t05A1, _t05F6, _t064B};
    real _t064D = time04E4[1];
    int _t064E = prim $r2i01B7 (_t064D);
    tensor[4,4][4] _t064F = prim $sub01C0<tensor[4,4][4]; %4> (_t064C, _t064E);
    real _t0650 = time04E4[1];
    int _t0651 = prim $r2i01B7 (_t0650);
    int[2] _t0652 = func nextCell404E8 (_t0651, cellId04E1, mesh04E0);
    int _t0653 = 1;
    int _t0654 = prim $sub01C0<int; %2> (_t0652, _t0653);
    tensor[4,4] _t0655 = prim $sub01C0<tensor[4,4]; %4> (_t064F, _t0654);
    string _t0656 = "\n";
    print (_t04ED, _t04EF, _t04F0, _t04F5, _t04F6, _t04F7, _t0655, _t0656);
    real _t0657 = time04E4[1];
    int _t0658 = prim $r2i01B7 (_t0657);
    int[2] _t0659 = func nextCell404E8 (_t0658, cellId04E1, mesh04E0);
    int _t065A = 0;
    int _t065B = prim $sub01C0<int; %2> (_t0659, _t065A);
    real _t065C = 0.1e1;
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.1e1;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.971445146547e-16;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.57735026919e0;
    real _t0672 = 0.57735026919e0;
    real _t0673 = 0.57735026919e0;
    real _t0674 = -0.57735026919e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = -0.333333333333e0;
    real _t0677 = 0.666666666667e0;
    real _t0678 = -0.333333333333e0;
    real _t0679 = 0.333333333333e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = -0.333333333333e0;
    real _t067C = -0.333333333333e0;
    real _t067D = 0.666666666667e0;
    real _t067E = 0.333333333333e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.971445146547e-16;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = -0.333333333333e0;
    real _t0687 = 0.666666666667e0;
    real _t0688 = -0.333333333333e0;
    real _t0689 = 0.333333333333e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = -0.57735026919e0;
    real _t068C = -0.57735026919e0;
    real _t068D = -0.57735026919e0;
    real _t068E = 0.57735026919e0;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = -0.333333333333e0;
    real _t0691 = -0.333333333333e0;
    real _t0692 = 0.666666666667e0;
    real _t0693 = 0.333333333333e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.971445146547e-16;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = -0.333333333333e0;
    real _t069C = 0.666666666667e0;
    real _t069D = -0.333333333333e0;
    real _t069E = 0.333333333333e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = -0.333333333333e0;
    real _t06A1 = -0.333333333333e0;
    real _t06A2 = 0.666666666667e0;
    real _t06A3 = 0.333333333333e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.57735026919e0;
    real _t06A6 = 0.57735026919e0;
    real _t06A7 = 0.57735026919e0;
    real _t06A8 = -0.57735026919e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.971445146547e-16;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][4] _t06B0 = {_t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.57735026919e0;
    real _t06B2 = -0.1e1;
    real _t06B3 = -0.1e1;
    real _t06B4 = 0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.57735026919e0;
    real _t06B7 = 0.1e1;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.57735026919e0;
    real _t06BC = 0.e0;
    real _t06BD = 0.1e1;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.e0;
    real _t06CC = 0.1e1;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.e0;
    real _t06DC = 0.1e1;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = -0.1e1;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    tensor[4,4][4] _t0705 = {_t06C5, _t06DA, _t06EF, _t0704};
    real _t0706 = -0.1e1;
    real _t0707 = -0.57735026919e0;
    real _t0708 = -0.1e1;
    real _t0709 = 0.1e1;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.1e1;
    real _t070C = -0.57735026919e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = -0.57735026919e0;
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    tensor[4,4] _t071A = [_t070A, _t070F, _t0714, _t0719];
    real _t071B = 0.e0;
    real _t071C = -0.1e1;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.1e1;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.1e1;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    tensor[4,4] _t072F = [_t071F, _t0724, _t0729, _t072E];
    real _t0730 = 0.1e1;
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.1e1;
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = 0.e0;
    real _t0750 = -0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    tensor[4,4][4] _t075A = {_t071A, _t072F, _t0744, _t0759};
    real _t075B = -0.1e1;
    real _t075C = -0.1e1;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.1e1;
    real _t0761 = 0.e0;
    real _t0762 = 0.57735026919e0;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.57735026919e0;
    real _t0768 = 0.e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    tensor[4,4] _t076F = [_t075F, _t0764, _t0769, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    tensor[4,4] _t0784 = [_t0774, _t0779, _t077E, _t0783];
    real _t0785 = 0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = -0.1e1;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.1e1;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    tensor[4,4] _t0799 = [_t0789, _t078E, _t0793, _t0798];
    real _t079A = 0.1e1;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.e0;
    vec4 _t079E = [_t079A, _t079B, _t079C, _t079D];
    real _t079F = 0.e0;
    real _t07A0 = 0.1e1;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    vec4 _t07A3 = [_t079F, _t07A0, _t07A1, _t07A2];
    real _t07A4 = 0.e0;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.1e1;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    real _t07AC = 0.1e1;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    tensor[4,4] _t07AE = [_t079E, _t07A3, _t07A8, _t07AD];
    tensor[4,4][4] _t07AF = {_t076F, _t0784, _t0799, _t07AE};
    tensor[4,4][4][4] _t07B0 = {_t06B0, _t0705, _t075A, _t07AF};
    real _t07B1 = time04E4[1];
    int _t07B2 = prim $r2i01B7 (_t07B1);
    tensor[4,4][4] _t07B3 = prim $sub01C0<tensor[4,4][4]; %4> (_t07B0, _t07B2);
    real _t07B4 = time04E4[1];
    int _t07B5 = prim $r2i01B7 (_t07B4);
    int[2] _t07B6 = func nextCell404E8 (_t07B5, cellId04E1, mesh04E0);
    int _t07B7 = 1;
    int _t07B8 = prim $sub01C0<int; %2> (_t07B6, _t07B7);
    tensor[4,4] _t07B9 = prim $sub01C0<tensor[4,4]; %4> (_t07B3, _t07B8);
    real _t07BA = time04E4[0];
    vec3 _t07BB = prim *0036<$[3]> (_t07BA, dPos04E3);
    vec3 _t07BC = prim +0017<$[3]> (_t07BB, refPos04E2);
    real _t07BD = _t07BC[0];
    real _t07BE = time04E4[0];
    vec3 _t07BF = prim *0036<$[3]> (_t07BE, dPos04E3);
    vec3 _t07C0 = prim +0017<$[3]> (_t07BF, refPos04E2);
    real _t07C1 = _t07C0[1];
    real _t07C2 = time04E4[0];
    vec3 _t07C3 = prim *0036<$[3]> (_t07C2, dPos04E3);
    vec3 _t07C4 = prim +0017<$[3]> (_t07C3, refPos04E2);
    real _t07C5 = _t07C4[2];
    real _t07C6 = 0.1e1;
    vec4 _t07C7 = [_t07BD, _t07C1, _t07C5, _t07C6];
    vec4 _t07C8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07B9, _t07C7);
    real _t07C9 = _t07C8[0];
    real _t07CA = 0.1e1;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.1e1;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    vec4 _t07D8 = [_t07D4, _t07D5, _t07D6, _t07D7];
    real _t07D9 = 0.971445146547e-16;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    tensor[4,4] _t07DE = [_t07CE, _t07D3, _t07D8, _t07DD];
    real _t07DF = 0.57735026919e0;
    real _t07E0 = 0.57735026919e0;
    real _t07E1 = 0.57735026919e0;
    real _t07E2 = -0.57735026919e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = -0.333333333333e0;
    real _t07E5 = 0.666666666667e0;
    real _t07E6 = -0.333333333333e0;
    real _t07E7 = 0.333333333333e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.333333333333e0;
    real _t07EA = -0.333333333333e0;
    real _t07EB = 0.666666666667e0;
    real _t07EC = 0.333333333333e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.971445146547e-16;
    real _t07EF = 0.e0;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.1e1;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    tensor[4,4] _t07F3 = [_t07E3, _t07E8, _t07ED, _t07F2];
    real _t07F4 = -0.333333333333e0;
    real _t07F5 = 0.666666666667e0;
    real _t07F6 = -0.333333333333e0;
    real _t07F7 = 0.333333333333e0;
    vec4 _t07F8 = [_t07F4, _t07F5, _t07F6, _t07F7];
    real _t07F9 = -0.57735026919e0;
    real _t07FA = -0.57735026919e0;
    real _t07FB = -0.57735026919e0;
    real _t07FC = 0.57735026919e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.333333333333e0;
    real _t07FF = -0.333333333333e0;
    real _t0800 = 0.666666666667e0;
    real _t0801 = 0.333333333333e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.971445146547e-16;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    tensor[4,4] _t0808 = [_t07F8, _t07FD, _t0802, _t0807];
    real _t0809 = -0.333333333333e0;
    real _t080A = 0.666666666667e0;
    real _t080B = -0.333333333333e0;
    real _t080C = 0.333333333333e0;
    vec4 _t080D = [_t0809, _t080A, _t080B, _t080C];
    real _t080E = -0.333333333333e0;
    real _t080F = -0.333333333333e0;
    real _t0810 = 0.666666666667e0;
    real _t0811 = 0.333333333333e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.57735026919e0;
    real _t0814 = 0.57735026919e0;
    real _t0815 = 0.57735026919e0;
    real _t0816 = -0.57735026919e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.971445146547e-16;
    real _t0819 = 0.e0;
    real _t081A = 0.e0;
    real _t081B = 0.1e1;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    tensor[4,4] _t081D = [_t080D, _t0812, _t0817, _t081C];
    tensor[4,4][4] _t081E = {_t07DE, _t07F3, _t0808, _t081D};
    real _t081F = 0.57735026919e0;
    real _t0820 = -0.1e1;
    real _t0821 = -0.1e1;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = 0.57735026919e0;
    real _t0825 = 0.1e1;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.57735026919e0;
    real _t082A = 0.e0;
    real _t082B = 0.1e1;
    real _t082C = 0.e0;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    tensor[4,4] _t0833 = [_t0823, _t0828, _t082D, _t0832];
    real _t0834 = 0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = 0.e0;
    real _t083A = 0.1e1;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = 0.e0;
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    tensor[4,4] _t0848 = [_t0838, _t083D, _t0842, _t0847];
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    real _t085B = 0.1e1;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    tensor[4,4] _t085D = [_t084D, _t0852, _t0857, _t085C];
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    vec4 _t0862 = [_t085E, _t085F, _t0860, _t0861];
    real _t0863 = 0.e0;
    real _t0864 = 0.e0;
    real _t0865 = 0.1e1;
    real _t0866 = 0.e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.1e1;
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.e0;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.1e1;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    tensor[4,4] _t0872 = [_t0862, _t0867, _t086C, _t0871];
    tensor[4,4][4] _t0873 = {_t0833, _t0848, _t085D, _t0872};
    real _t0874 = -0.1e1;
    real _t0875 = -0.57735026919e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.1e1;
    real _t087A = -0.57735026919e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = -0.57735026919e0;
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    vec4 _t0887 = [_t0883, _t0884, _t0885, _t0886];
    tensor[4,4] _t0888 = [_t0878, _t087D, _t0882, _t0887];
    real _t0889 = 0.e0;
    real _t088A = -0.1e1;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    vec4 _t089C = [_t0898, _t0899, _t089A, _t089B];
    tensor[4,4] _t089D = [_t088D, _t0892, _t0897, _t089C];
    real _t089E = 0.1e1;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.e0;
    real _t08A4 = 0.1e1;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    real _t08AD = 0.e0;
    real _t08AE = 0.e0;
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    vec4 _t08B1 = [_t08AD, _t08AE, _t08AF, _t08B0];
    tensor[4,4] _t08B2 = [_t08A2, _t08A7, _t08AC, _t08B1];
    real _t08B3 = 0.1e1;
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    vec4 _t08B7 = [_t08B3, _t08B4, _t08B5, _t08B6];
    real _t08B8 = 0.e0;
    real _t08B9 = 0.e0;
    real _t08BA = 0.1e1;
    real _t08BB = 0.e0;
    vec4 _t08BC = [_t08B8, _t08B9, _t08BA, _t08BB];
    real _t08BD = 0.e0;
    real _t08BE = -0.1e1;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    tensor[4,4] _t08C7 = [_t08B7, _t08BC, _t08C1, _t08C6];
    tensor[4,4][4] _t08C8 = {_t0888, _t089D, _t08B2, _t08C7};
    real _t08C9 = -0.1e1;
    real _t08CA = -0.1e1;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.1e1;
    real _t08CF = 0.e0;
    real _t08D0 = 0.57735026919e0;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.1e1;
    real _t08D5 = 0.57735026919e0;
    real _t08D6 = 0.e0;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.1e1;
    vec4 _t08DC = [_t08D8, _t08D9, _t08DA, _t08DB];
    tensor[4,4] _t08DD = [_t08CD, _t08D2, _t08D7, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.1e1;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.1e1;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    vec4 _t08F1 = [_t08ED, _t08EE, _t08EF, _t08F0];
    tensor[4,4] _t08F2 = [_t08E2, _t08E7, _t08EC, _t08F1];
    real _t08F3 = 0.1e1;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.e0;
    real _t08FA = -0.1e1;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    vec4 _t0906 = [_t0902, _t0903, _t0904, _t0905];
    tensor[4,4] _t0907 = [_t08F7, _t08FC, _t0901, _t0906];
    real _t0908 = 0.1e1;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.e0;
    vec4 _t090C = [_t0908, _t0909, _t090A, _t090B];
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    vec4 _t0911 = [_t090D, _t090E, _t090F, _t0910];
    real _t0912 = 0.e0;
    real _t0913 = 0.e0;
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    vec4 _t0916 = [_t0912, _t0913, _t0914, _t0915];
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    vec4 _t091B = [_t0917, _t0918, _t0919, _t091A];
    tensor[4,4] _t091C = [_t090C, _t0911, _t0916, _t091B];
    tensor[4,4][4] _t091D = {_t08DD, _t08F2, _t0907, _t091C};
    tensor[4,4][4][4] _t091E = {_t081E, _t0873, _t08C8, _t091D};
    real _t091F = time04E4[1];
    int _t0920 = prim $r2i01B7 (_t091F);
    tensor[4,4][4] _t0921 = prim $sub01C0<tensor[4,4][4]; %4> (_t091E, _t0920);
    real _t0922 = time04E4[1];
    int _t0923 = prim $r2i01B7 (_t0922);
    int[2] _t0924 = func nextCell404E8 (_t0923, cellId04E1, mesh04E0);
    int _t0925 = 1;
    int _t0926 = prim $sub01C0<int; %2> (_t0924, _t0925);
    tensor[4,4] _t0927 = prim $sub01C0<tensor[4,4]; %4> (_t0921, _t0926);
    real _t0928 = time04E4[0];
    vec3 _t0929 = prim *0036<$[3]> (_t0928, dPos04E3);
    vec3 _t092A = prim +0017<$[3]> (_t0929, refPos04E2);
    real _t092B = _t092A[0];
    real _t092C = time04E4[0];
    vec3 _t092D = prim *0036<$[3]> (_t092C, dPos04E3);
    vec3 _t092E = prim +0017<$[3]> (_t092D, refPos04E2);
    real _t092F = _t092E[1];
    real _t0930 = time04E4[0];
    vec3 _t0931 = prim *0036<$[3]> (_t0930, dPos04E3);
    vec3 _t0932 = prim +0017<$[3]> (_t0931, refPos04E2);
    real _t0933 = _t0932[2];
    real _t0934 = 0.1e1;
    vec4 _t0935 = [_t092B, _t092F, _t0933, _t0934];
    vec4 _t0936 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0927, _t0935);
    real _t0937 = _t0936[1];
    real _t0938 = 0.1e1;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.1e1;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    vec4 _t0946 = [_t0942, _t0943, _t0944, _t0945];
    real _t0947 = 0.971445146547e-16;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    vec4 _t094B = [_t0947, _t0948, _t0949, _t094A];
    tensor[4,4] _t094C = [_t093C, _t0941, _t0946, _t094B];
    real _t094D = 0.57735026919e0;
    real _t094E = 0.57735026919e0;
    real _t094F = 0.57735026919e0;
    real _t0950 = -0.57735026919e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = -0.333333333333e0;
    real _t0953 = 0.666666666667e0;
    real _t0954 = -0.333333333333e0;
    real _t0955 = 0.333333333333e0;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    real _t0957 = -0.333333333333e0;
    real _t0958 = -0.333333333333e0;
    real _t0959 = 0.666666666667e0;
    real _t095A = 0.333333333333e0;
    vec4 _t095B = [_t0957, _t0958, _t0959, _t095A];
    real _t095C = 0.971445146547e-16;
    real _t095D = 0.e0;
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    vec4 _t0960 = [_t095C, _t095D, _t095E, _t095F];
    tensor[4,4] _t0961 = [_t0951, _t0956, _t095B, _t0960];
    real _t0962 = -0.333333333333e0;
    real _t0963 = 0.666666666667e0;
    real _t0964 = -0.333333333333e0;
    real _t0965 = 0.333333333333e0;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    real _t0967 = -0.57735026919e0;
    real _t0968 = -0.57735026919e0;
    real _t0969 = -0.57735026919e0;
    real _t096A = 0.57735026919e0;
    vec4 _t096B = [_t0967, _t0968, _t0969, _t096A];
    real _t096C = -0.333333333333e0;
    real _t096D = -0.333333333333e0;
    real _t096E = 0.666666666667e0;
    real _t096F = 0.333333333333e0;
    vec4 _t0970 = [_t096C, _t096D, _t096E, _t096F];
    real _t0971 = 0.971445146547e-16;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.1e1;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    tensor[4,4] _t0976 = [_t0966, _t096B, _t0970, _t0975];
    real _t0977 = -0.333333333333e0;
    real _t0978 = 0.666666666667e0;
    real _t0979 = -0.333333333333e0;
    real _t097A = 0.333333333333e0;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    real _t097C = -0.333333333333e0;
    real _t097D = -0.333333333333e0;
    real _t097E = 0.666666666667e0;
    real _t097F = 0.333333333333e0;
    vec4 _t0980 = [_t097C, _t097D, _t097E, _t097F];
    real _t0981 = 0.57735026919e0;
    real _t0982 = 0.57735026919e0;
    real _t0983 = 0.57735026919e0;
    real _t0984 = -0.57735026919e0;
    vec4 _t0985 = [_t0981, _t0982, _t0983, _t0984];
    real _t0986 = 0.971445146547e-16;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.1e1;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    tensor[4,4] _t098B = [_t097B, _t0980, _t0985, _t098A];
    tensor[4,4][4] _t098C = {_t094C, _t0961, _t0976, _t098B};
    real _t098D = 0.57735026919e0;
    real _t098E = -0.1e1;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.57735026919e0;
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.57735026919e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    vec4 _t09A0 = [_t099C, _t099D, _t099E, _t099F];
    tensor[4,4] _t09A1 = [_t0991, _t0996, _t099B, _t09A0];
    real _t09A2 = 0.1e1;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.e0;
    real _t09A8 = 0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    real _t09B1 = 0.e0;
    real _t09B2 = 0.e0;
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    vec4 _t09B5 = [_t09B1, _t09B2, _t09B3, _t09B4];
    tensor[4,4] _t09B6 = [_t09A6, _t09AB, _t09B0, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    real _t09BC = -0.1e1;
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    vec4 _t09C0 = [_t09BC, _t09BD, _t09BE, _t09BF];
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    vec4 _t09C5 = [_t09C1, _t09C2, _t09C3, _t09C4];
    real _t09C6 = 0.e0;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    real _t09C9 = 0.1e1;
    vec4 _t09CA = [_t09C6, _t09C7, _t09C8, _t09C9];
    tensor[4,4] _t09CB = [_t09BB, _t09C0, _t09C5, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    real _t09D1 = 0.e0;
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    vec4 _t09D5 = [_t09D1, _t09D2, _t09D3, _t09D4];
    real _t09D6 = 0.1e1;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    vec4 _t09DA = [_t09D6, _t09D7, _t09D8, _t09D9];
    real _t09DB = 0.e0;
    real _t09DC = 0.e0;
    real _t09DD = 0.e0;
    real _t09DE = 0.1e1;
    vec4 _t09DF = [_t09DB, _t09DC, _t09DD, _t09DE];
    tensor[4,4] _t09E0 = [_t09D0, _t09D5, _t09DA, _t09DF];
    tensor[4,4][4] _t09E1 = {_t09A1, _t09B6, _t09CB, _t09E0};
    real _t09E2 = -0.1e1;
    real _t09E3 = -0.57735026919e0;
    real _t09E4 = -0.1e1;
    real _t09E5 = 0.1e1;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.1e1;
    real _t09E8 = -0.57735026919e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.57735026919e0;
    real _t09EE = 0.1e1;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.e0;
    real _t09F2 = 0.e0;
    real _t09F3 = 0.e0;
    real _t09F4 = 0.1e1;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    tensor[4,4] _t09F6 = [_t09E6, _t09EB, _t09F0, _t09F5];
    real _t09F7 = 0.e0;
    real _t09F8 = -0.1e1;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.1e1;
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    real _t0A06 = 0.e0;
    real _t0A07 = 0.e0;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.1e1;
    vec4 _t0A0A = [_t0A06, _t0A07, _t0A08, _t0A09];
    tensor[4,4] _t0A0B = [_t09FB, _t0A00, _t0A05, _t0A0A];
    real _t0A0C = 0.1e1;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    vec4 _t0A1F = [_t0A1B, _t0A1C, _t0A1D, _t0A1E];
    tensor[4,4] _t0A20 = [_t0A10, _t0A15, _t0A1A, _t0A1F];
    real _t0A21 = 0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = -0.1e1;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    real _t0A30 = 0.e0;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    vec4 _t0A34 = [_t0A30, _t0A31, _t0A32, _t0A33];
    tensor[4,4] _t0A35 = [_t0A25, _t0A2A, _t0A2F, _t0A34];
    tensor[4,4][4] _t0A36 = {_t09F6, _t0A0B, _t0A20, _t0A35};
    real _t0A37 = -0.1e1;
    real _t0A38 = -0.1e1;
    real _t0A39 = 0.57735026919e0;
    real _t0A3A = 0.1e1;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.57735026919e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.1e1;
    real _t0A43 = 0.57735026919e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.e0;
    real _t0A49 = 0.1e1;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    tensor[4,4] _t0A4B = [_t0A3B, _t0A40, _t0A45, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.e0;
    real _t0A5E = 0.1e1;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    tensor[4,4] _t0A60 = [_t0A50, _t0A55, _t0A5A, _t0A5F];
    real _t0A61 = 0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = -0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.1e1;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.1e1;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    tensor[4,4] _t0A75 = [_t0A65, _t0A6A, _t0A6F, _t0A74];
    real _t0A76 = 0.1e1;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.1e1;
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    real _t0A85 = 0.e0;
    real _t0A86 = 0.e0;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.1e1;
    vec4 _t0A89 = [_t0A85, _t0A86, _t0A87, _t0A88];
    tensor[4,4] _t0A8A = [_t0A7A, _t0A7F, _t0A84, _t0A89];
    tensor[4,4][4] _t0A8B = {_t0A4B, _t0A60, _t0A75, _t0A8A};
    tensor[4,4][4][4] _t0A8C = {_t098C, _t09E1, _t0A36, _t0A8B};
    real _t0A8D = time04E4[1];
    int _t0A8E = prim $r2i01B7 (_t0A8D);
    tensor[4,4][4] _t0A8F = prim $sub01C0<tensor[4,4][4]; %4> (_t0A8C, _t0A8E);
    real _t0A90 = time04E4[1];
    int _t0A91 = prim $r2i01B7 (_t0A90);
    int[2] _t0A92 = func nextCell404E8 (_t0A91, cellId04E1, mesh04E0);
    int _t0A93 = 1;
    int _t0A94 = prim $sub01C0<int; %2> (_t0A92, _t0A93);
    tensor[4,4] _t0A95 = prim $sub01C0<tensor[4,4]; %4> (_t0A8F, _t0A94);
    real _t0A96 = time04E4[0];
    vec3 _t0A97 = prim *0036<$[3]> (_t0A96, dPos04E3);
    vec3 _t0A98 = prim +0017<$[3]> (_t0A97, refPos04E2);
    real _t0A99 = _t0A98[0];
    real _t0A9A = time04E4[0];
    vec3 _t0A9B = prim *0036<$[3]> (_t0A9A, dPos04E3);
    vec3 _t0A9C = prim +0017<$[3]> (_t0A9B, refPos04E2);
    real _t0A9D = _t0A9C[1];
    real _t0A9E = time04E4[0];
    vec3 _t0A9F = prim *0036<$[3]> (_t0A9E, dPos04E3);
    vec3 _t0AA0 = prim +0017<$[3]> (_t0A9F, refPos04E2);
    real _t0AA1 = _t0AA0[2];
    real _t0AA2 = 0.1e1;
    vec4 _t0AA3 = [_t0A99, _t0A9D, _t0AA1, _t0AA2];
    vec4 _t0AA4 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A95, _t0AA3);
    real _t0AA5 = _t0AA4[2];
    vec3 _t0AA6 = [_t07C9, _t0937, _t0AA5];
    real _t0AA7 = time04E4[1];
    int _t0AA8 = prim $r2i01B7 (_t0AA7);
    int[2] _t0AA9 = func nextCell404E8 (_t0AA8, cellId04E1, mesh04E0);
    int _t0AAA = 1;
    int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
    Femdata: MeshPos _t0AAC = extractFemItemN((mesh04E0, _t065B, _t0AA6, _t0AAB),RefBuild(Mesh),);
    return _t0AAC;
  } else {
    real _t0AAD = time04E4[0];
    vec3 _t0AAE = prim *0036<$[3]> (_t0AAD, dPos04E3);
    vec3 _t0AAF = prim +0017<$[3]> (_t0AAE, refPos04E2);
    Femdata: MeshPos _t0AB0 = extractFemItemN((mesh04E0, _t0AAF),InvalidBuildBoundary(MeshPos),);
    return _t0AB0;
  }
}
function int[2]#8 nextCell404E8 (int faceIdx0AB1, int cell0AB2, Femdata: Mesh mesh0AB3)
{
  int _t0AB4 = -1;
  bool _t0AB5 = prim ==0082 (faceIdx0AB1, _t0AB4);
  if _t0AB5 {
    int _t0AB6 = -1;
    int _t0AB7 = -1;
    int[2] _t0AB8 = {_t0AB6, _t0AB7};
    return _t0AB8;
  } else {
    int _t0AB9 = 8;
    int _t0ABA = prim *0033 (cell0AB2, _t0AB9);
    int _t0ABB = 2;
    int _t0ABC = prim *0033 (faceIdx0AB1, _t0ABB);
    int _t0ABD = prim +0015 (_t0ABA, _t0ABC);
    int[2] _t0ABE = extractFemItemN((mesh0AB3, _t0ABD),CellFaceCell(Mesh),);
    return _t0ABE;
  }
}
function vec2#2 _exit1099 (vec3 refPos0AC0, vec3 dPos0AC1, int i109A)
{
  real time109B = +inf;
  int face109C = -1;
  real faceTime109D = -inf;
  string _t109E = "\ntest :";
  real _t109F = 0.57735026919e0;
  real _t10A0 = 0.57735026919e0;
  real _t10A1 = 0.57735026919e0;
  real _t10A2 = 0.57735026919e0;
  vec3 _t10A3 = [_t10A0, _t10A1, _t10A2];
  real _t10A4 = prim •00CE<$[3]; $[3]; $[]> (_t10A3, refPos0AC0);
  real _t10A5 = prim -0026<$[]> (_t109F, _t10A4);
  real _t10A6 = 0.57735026919e0;
  real _t10A7 = 0.57735026919e0;
  real _t10A8 = 0.57735026919e0;
  vec3 _t10A9 = [_t10A6, _t10A7, _t10A8];
  real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, dPos0AC1);
  real _t10AB = prim /0055 (_t10A5, _t10AA);
  string _t10AC = " test2: ";
  real _t10AD = 0.57735026919e0;
  real _t10AE = 0.57735026919e0;
  real _t10AF = 0.57735026919e0;
  vec3 _t10B0 = [_t10AD, _t10AE, _t10AF];
  real _t10B1 = prim •00CE<$[3]; $[3]; $[]> (_t10B0, dPos0AC1);
  string _t10B2 = " insideTest: ";
  real _t10B3 = 0.1e1;
  real _t10B4 = 0.1e-7;
  real _t10B5 = prim +0017<$[]> (_t10B3, _t10B4);
  real _t10B6 = 0.1e1;
  real _t10B7 = 0.1e1;
  real _t10B8 = 0.1e1;
  vec3 _t10B9 = [_t10B6, _t10B7, _t10B8];
  real _t10BA = 0.57735026919e0;
  real _t10BB = 0.57735026919e0;
  real _t10BC = 0.57735026919e0;
  real _t10BD = 0.57735026919e0;
  vec3 _t10BE = [_t10BB, _t10BC, _t10BD];
  real _t10BF = prim •00CE<$[3]; $[3]; $[]> (_t10BE, refPos0AC0);
  real _t10C0 = prim -0026<$[]> (_t10BA, _t10BF);
  real _t10C1 = 0.57735026919e0;
  real _t10C2 = 0.57735026919e0;
  real _t10C3 = 0.57735026919e0;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, dPos0AC1);
  real _t10C6 = prim /0055 (_t10C0, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0AC1, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0AC0, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10B9, _t10C8);
  bool _t10CA = prim >0080 (_t10B5, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.57735026919e0;
  real _t10D0 = 0.57735026919e0;
  real _t10D1 = 0.57735026919e0;
  real _t10D2 = 0.57735026919e0;
  vec3 _t10D3 = [_t10D0, _t10D1, _t10D2];
  real _t10D4 = prim •00CE<$[3]; $[3]; $[]> (_t10D3, refPos0AC0);
  real _t10D5 = prim -0026<$[]> (_t10CF, _t10D4);
  real _t10D6 = 0.57735026919e0;
  real _t10D7 = 0.57735026919e0;
  real _t10D8 = 0.57735026919e0;
  vec3 _t10D9 = [_t10D6, _t10D7, _t10D8];
  real _t10DA = prim •00CE<$[3]; $[3]; $[]> (_t10D9, dPos0AC1);
  real _t10DB = prim /0055 (_t10D5, _t10DA);
  vec3 _t10DC = prim *0038<$[3]> (dPos0AC1, _t10DB);
  vec3 _t10DD = prim +0017<$[3]> (refPos0AC0, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (_t10CE, _t10DD);
  real _t10DF = _t10DE[0];
  real _t10E0 = -0.e0;
  bool _t10E1 = prim >0080 (_t10DF, _t10E0);
  real _t10E2 = 0.1e-7;
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  vec3 _t10E5 = [_t10E2, _t10E3, _t10E4];
  real _t10E6 = 0.57735026919e0;
  real _t10E7 = 0.57735026919e0;
  real _t10E8 = 0.57735026919e0;
  real _t10E9 = 0.57735026919e0;
  vec3 _t10EA = [_t10E7, _t10E8, _t10E9];
  real _t10EB = prim •00CE<$[3]; $[3]; $[]> (_t10EA, refPos0AC0);
  real _t10EC = prim -0026<$[]> (_t10E6, _t10EB);
  real _t10ED = 0.57735026919e0;
  real _t10EE = 0.57735026919e0;
  real _t10EF = 0.57735026919e0;
  vec3 _t10F0 = [_t10ED, _t10EE, _t10EF];
  real _t10F1 = prim •00CE<$[3]; $[3]; $[]> (_t10F0, dPos0AC1);
  real _t10F2 = prim /0055 (_t10EC, _t10F1);
  vec3 _t10F3 = prim *0038<$[3]> (dPos0AC1, _t10F2);
  vec3 _t10F4 = prim +0017<$[3]> (refPos0AC0, _t10F3);
  vec3 _t10F5 = prim +0017<$[3]> (_t10E5, _t10F4);
  real _t10F6 = _t10F5[1];
  real _t10F7 = -0.e0;
  bool _t10F8 = prim >0080 (_t10F6, _t10F7);
  real _t10F9 = 0.1e-7;
  real _t10FA = 0.1e-7;
  real _t10FB = 0.1e-7;
  vec3 _t10FC = [_t10F9, _t10FA, _t10FB];
  real _t10FD = 0.57735026919e0;
  real _t10FE = 0.57735026919e0;
  real _t10FF = 0.57735026919e0;
  real _t1100 = 0.57735026919e0;
  vec3 _t1101 = [_t10FE, _t10FF, _t1100];
  real _t1102 = prim •00CE<$[3]; $[3]; $[]> (_t1101, refPos0AC0);
  real _t1103 = prim -0026<$[]> (_t10FD, _t1102);
  real _t1104 = 0.57735026919e0;
  real _t1105 = 0.57735026919e0;
  real _t1106 = 0.57735026919e0;
  vec3 _t1107 = [_t1104, _t1105, _t1106];
  real _t1108 = prim •00CE<$[3]; $[3]; $[]> (_t1107, dPos0AC1);
  real _t1109 = prim /0055 (_t1103, _t1108);
  vec3 _t110A = prim *0038<$[3]> (dPos0AC1, _t1109);
  vec3 _t110B = prim +0017<$[3]> (refPos0AC0, _t110A);
  vec3 _t110C = prim +0017<$[3]> (_t10FC, _t110B);
  real _t110D = _t110C[2];
  real _t110E = -0.e0;
  bool _t110F = prim >0080 (_t110D, _t110E);
  bool _t1110 = prim $and01C4 (_t10F8, _t110F);
  bool _t1111 = prim $and01C4 (_t10E1, _t1110);
  bool _t1112 = prim $and01C4 (_t10CA, _t1111);
  string _t1113 = " dist: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  real _t1117 = 0.57735026919e0;
  vec3 _t1118 = [_t1115, _t1116, _t1117];
  real _t1119 = prim •00CE<$[3]; $[3]; $[]> (_t1118, refPos0AC0);
  real _t111A = prim -0026<$[]> (_t1114, _t1119);
  real _t111B = prim |()|00B5<$[]> (_t111A);
  string _t111C = "signed dist: ";
  real _t111D = 0.57735026919e0;
  real _t111E = 0.57735026919e0;
  real _t111F = 0.57735026919e0;
  real _t1120 = 0.57735026919e0;
  vec3 _t1121 = [_t111E, _t111F, _t1120];
  real _t1122 = prim •00CE<$[3]; $[3]; $[]> (_t1121, refPos0AC0);
  real _t1123 = prim -0026<$[]> (_t111D, _t1122);
  string _t1124 = " face: ";
  int _t1125 = 0;
  string _t1126 = " place: ";
  real _t1127 = 0.57735026919e0;
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, refPos0AC0);
  real _t112D = prim -0026<$[]> (_t1127, _t112C);
  real _t112E = 0.57735026919e0;
  real _t112F = 0.57735026919e0;
  real _t1130 = 0.57735026919e0;
  vec3 _t1131 = [_t112E, _t112F, _t1130];
  real _t1132 = prim •00CE<$[3]; $[3]; $[]> (_t1131, dPos0AC1);
  real _t1133 = prim /0055 (_t112D, _t1132);
  vec3 _t1134 = prim *0038<$[3]> (dPos0AC1, _t1133);
  vec3 _t1135 = prim +0017<$[3]> (refPos0AC0, _t1134);
  string _t1136 = " error: ";
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  real _t113A = 0.57735026919e0;
  vec3 _t113B = [_t1138, _t1139, _t113A];
  real _t113C = 0.57735026919e0;
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, refPos0AC0);
  real _t1142 = prim -0026<$[]> (_t113C, _t1141);
  real _t1143 = 0.57735026919e0;
  real _t1144 = 0.57735026919e0;
  real _t1145 = 0.57735026919e0;
  vec3 _t1146 = [_t1143, _t1144, _t1145];
  real _t1147 = prim •00CE<$[3]; $[3]; $[]> (_t1146, dPos0AC1);
  real _t1148 = prim /0055 (_t1142, _t1147);
  vec3 _t1149 = prim *0038<$[3]> (dPos0AC1, _t1148);
  vec3 _t114A = prim +0017<$[3]> (refPos0AC0, _t1149);
  real _t114B = prim •00CE<$[3]; $[3]; $[]> (_t113B, _t114A);
  real _t114C = prim -0026<$[]> (_t1137, _t114B);
  real _t114D = prim |()|00B5<$[]> (_t114C);
  string _t114E = " offset :";
  string _t114F = " dp: ";
  string _t1150 = " otherPossibleTime: ";
  string _t1151 = "\n";
  string _t1152 = "\n original face: ";
  string _t1153 = " ";
  print (_t109E, _t10AB, _t10AC, _t10B1, _t10B2, _t1112, _t1113, _t111B, _t111C, _t1123, _t1124, _t1125, _t1126, _t1135, _t1136, _t114D, _t114E, refPos0AC0, _t114F, dPos0AC1, _t1150, faceTime109D, _t1151, _t1152, i109A, _t1153);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  real _t1157 = 0.57735026919e0;
  vec3 _t1158 = [_t1155, _t1156, _t1157];
  real _t1159 = prim •00CE<$[3]; $[3]; $[]> (_t1158, refPos0AC0);
  real _t115A = prim -0026<$[]> (_t1154, _t1159);
  real _t115B = 0.57735026919e0;
  real _t115C = 0.57735026919e0;
  real _t115D = 0.57735026919e0;
  vec3 _t115E = [_t115B, _t115C, _t115D];
  real _t115F = prim •00CE<$[3]; $[3]; $[]> (_t115E, dPos0AC1);
  real _t1160 = prim /0055 (_t115A, _t115F);
  real _t1161 = -0.1e-7;
  bool _t1162 = prim >=007E (_t1160, _t1161);
  real _t1163 = 0.57735026919e0;
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  vec3 _t1167 = [_t1164, _t1165, _t1166];
  real _t1168 = prim •00CE<$[3]; $[3]; $[]> (_t1167, refPos0AC0);
  real _t1169 = prim -0026<$[]> (_t1163, _t1168);
  real _t116A = 0.57735026919e0;
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  vec3 _t116D = [_t116A, _t116B, _t116C];
  real _t116E = prim •00CE<$[3]; $[3]; $[]> (_t116D, dPos0AC1);
  real _t116F = prim /0055 (_t1169, _t116E);
  bool _t1170 = prim >0080 (time109B, _t116F);
  real _t1171 = 0.57735026919e0;
  real _t1172 = 0.57735026919e0;
  real _t1173 = 0.57735026919e0;
  vec3 _t1174 = [_t1171, _t1172, _t1173];
  real _t1175 = prim •00CE<$[3]; $[3]; $[]> (_t1174, dPos0AC1);
  real _t1176 = prim |()|00B5<$[]> (_t1175);
  real _t1177 = 0.1e-7;
  bool _t1178 = prim >=007E (_t1176, _t1177);
  bool _t1179 = prim $and01C4 (_t1170, _t1178);
  bool _t117A = prim $and01C4 (_t1162, _t1179);
  if _t117A {
    int _t117B = 0;
    bool _t117C = prim !=0086 (i109A, _t117B);
    if _t117C {
      string _t117D = "Saving at this face!";
      real _t117E = 0.57735026919e0;
      real _t117F = 0.57735026919e0;
      real _t1180 = 0.57735026919e0;
      real _t1181 = 0.57735026919e0;
      vec3 _t1182 = [_t117F, _t1180, _t1181];
      real _t1183 = prim •00CE<$[3]; $[3]; $[]> (_t1182, refPos0AC0);
      real _t1184 = prim -0026<$[]> (_t117E, _t1183);
      real _t1185 = 0.57735026919e0;
      real _t1186 = 0.57735026919e0;
      real _t1187 = 0.57735026919e0;
      vec3 _t1188 = [_t1185, _t1186, _t1187];
      real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, dPos0AC1);
      real _t118A = prim /0055 (_t1184, _t1189);
      real _t118B = 0.57735026919e0;
      real _t118C = 0.57735026919e0;
      real _t118D = 0.57735026919e0;
      real _t118E = 0.57735026919e0;
      vec3 _t118F = [_t118C, _t118D, _t118E];
      real _t1190 = prim •00CE<$[3]; $[3]; $[]> (_t118F, refPos0AC0);
      real _t1191 = prim -0026<$[]> (_t118B, _t1190);
      real _t1192 = 0.57735026919e0;
      real _t1193 = 0.57735026919e0;
      real _t1194 = 0.57735026919e0;
      vec3 _t1195 = [_t1192, _t1193, _t1194];
      real _t1196 = prim •00CE<$[3]; $[3]; $[]> (_t1195, dPos0AC1);
      real _t1197 = prim /0055 (_t1191, _t1196);
      bool _t1198 = prim >0080 (time109B, _t1197);
      string _t1199 = "\n";
      print (_t117D, _t118A, _t1198, _t1199);
      real _t119A = 0.57735026919e0;
      real _t119B = 0.57735026919e0;
      real _t119C = 0.57735026919e0;
      real _t119D = 0.57735026919e0;
      vec3 _t119E = [_t119B, _t119C, _t119D];
      real _t119F = prim •00CE<$[3]; $[3]; $[]> (_t119E, refPos0AC0);
      real _t11A0 = prim -0026<$[]> (_t119A, _t119F);
      real _t11A1 = 0.57735026919e0;
      real _t11A2 = 0.57735026919e0;
      real _t11A3 = 0.57735026919e0;
      vec3 _t11A4 = [_t11A1, _t11A2, _t11A3];
      real _t11A5 = prim •00CE<$[3]; $[3]; $[]> (_t11A4, dPos0AC1);
      time109B = prim /0055 (_t11A0, _t11A5);
      face109C = 0;
    } else {
      real _t11A6 = 0.57735026919e0;
      real _t11A7 = 0.57735026919e0;
      real _t11A8 = 0.57735026919e0;
      real _t11A9 = 0.57735026919e0;
      vec3 _t11AA = [_t11A7, _t11A8, _t11A9];
      real _t11AB = prim •00CE<$[3]; $[3]; $[]> (_t11AA, refPos0AC0);
      real _t11AC = prim -0026<$[]> (_t11A6, _t11AB);
      real _t11AD = 0.57735026919e0;
      real _t11AE = 0.57735026919e0;
      real _t11AF = 0.57735026919e0;
      vec3 _t11B0 = [_t11AD, _t11AE, _t11AF];
      real _t11B1 = prim •00CE<$[3]; $[3]; $[]> (_t11B0, dPos0AC1);
      faceTime109D = prim /0055 (_t11AC, _t11B1);
      string _t11B2 = "Saving backup time: ";
      string _t11B3 = "\n";
      print (_t11B2, faceTime109D, _t11B3);
    }
  }
  string _t11B4 = "\ntest :";
  real _t11B5 = 0.e0;
  real _t11B6 = -0.1e1;
  real _t11B7 = 0.e0;
  real _t11B8 = 0.e0;
  vec3 _t11B9 = [_t11B6, _t11B7, _t11B8];
  real _t11BA = prim •00CE<$[3]; $[3]; $[]> (_t11B9, refPos0AC0);
  real _t11BB = prim -0026<$[]> (_t11B5, _t11BA);
  real _t11BC = -0.1e1;
  real _t11BD = 0.e0;
  real _t11BE = 0.e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, dPos0AC1);
  real _t11C1 = prim /0055 (_t11BB, _t11C0);
  string _t11C2 = " test2: ";
  real _t11C3 = -0.1e1;
  real _t11C4 = 0.e0;
  real _t11C5 = 0.e0;
  vec3 _t11C6 = [_t11C3, _t11C4, _t11C5];
  real _t11C7 = prim •00CE<$[3]; $[3]; $[]> (_t11C6, dPos0AC1);
  string _t11C8 = " insideTest: ";
  real _t11C9 = 0.1e1;
  real _t11CA = 0.1e-7;
  real _t11CB = prim +0017<$[]> (_t11C9, _t11CA);
  real _t11CC = 0.1e1;
  real _t11CD = 0.1e1;
  real _t11CE = 0.1e1;
  vec3 _t11CF = [_t11CC, _t11CD, _t11CE];
  real _t11D0 = 0.e0;
  real _t11D1 = -0.1e1;
  real _t11D2 = 0.e0;
  real _t11D3 = 0.e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, refPos0AC0);
  real _t11D6 = prim -0026<$[]> (_t11D0, _t11D5);
  real _t11D7 = -0.1e1;
  real _t11D8 = 0.e0;
  real _t11D9 = 0.e0;
  vec3 _t11DA = [_t11D7, _t11D8, _t11D9];
  real _t11DB = prim •00CE<$[3]; $[3]; $[]> (_t11DA, dPos0AC1);
  real _t11DC = prim /0055 (_t11D6, _t11DB);
  vec3 _t11DD = prim *0038<$[3]> (dPos0AC1, _t11DC);
  vec3 _t11DE = prim +0017<$[3]> (refPos0AC0, _t11DD);
  real _t11DF = prim •00CE<$[3]; $[3]; $[]> (_t11CF, _t11DE);
  bool _t11E0 = prim >0080 (_t11CB, _t11DF);
  real _t11E1 = 0.1e-7;
  real _t11E2 = 0.1e-7;
  real _t11E3 = 0.1e-7;
  vec3 _t11E4 = [_t11E1, _t11E2, _t11E3];
  real _t11E5 = 0.e0;
  real _t11E6 = -0.1e1;
  real _t11E7 = 0.e0;
  real _t11E8 = 0.e0;
  vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
  real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0AC0);
  real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
  real _t11EC = -0.1e1;
  real _t11ED = 0.e0;
  real _t11EE = 0.e0;
  vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
  real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0AC1);
  real _t11F1 = prim /0055 (_t11EB, _t11F0);
  vec3 _t11F2 = prim *0038<$[3]> (dPos0AC1, _t11F1);
  vec3 _t11F3 = prim +0017<$[3]> (refPos0AC0, _t11F2);
  vec3 _t11F4 = prim +0017<$[3]> (_t11E4, _t11F3);
  real _t11F5 = _t11F4[0];
  real _t11F6 = -0.e0;
  bool _t11F7 = prim >0080 (_t11F5, _t11F6);
  real _t11F8 = 0.1e-7;
  real _t11F9 = 0.1e-7;
  real _t11FA = 0.1e-7;
  vec3 _t11FB = [_t11F8, _t11F9, _t11FA];
  real _t11FC = 0.e0;
  real _t11FD = -0.1e1;
  real _t11FE = 0.e0;
  real _t11FF = 0.e0;
  vec3 _t1200 = [_t11FD, _t11FE, _t11FF];
  real _t1201 = prim •00CE<$[3]; $[3]; $[]> (_t1200, refPos0AC0);
  real _t1202 = prim -0026<$[]> (_t11FC, _t1201);
  real _t1203 = -0.1e1;
  real _t1204 = 0.e0;
  real _t1205 = 0.e0;
  vec3 _t1206 = [_t1203, _t1204, _t1205];
  real _t1207 = prim •00CE<$[3]; $[3]; $[]> (_t1206, dPos0AC1);
  real _t1208 = prim /0055 (_t1202, _t1207);
  vec3 _t1209 = prim *0038<$[3]> (dPos0AC1, _t1208);
  vec3 _t120A = prim +0017<$[3]> (refPos0AC0, _t1209);
  vec3 _t120B = prim +0017<$[3]> (_t11FB, _t120A);
  real _t120C = _t120B[1];
  real _t120D = -0.e0;
  bool _t120E = prim >0080 (_t120C, _t120D);
  real _t120F = 0.1e-7;
  real _t1210 = 0.1e-7;
  real _t1211 = 0.1e-7;
  vec3 _t1212 = [_t120F, _t1210, _t1211];
  real _t1213 = 0.e0;
  real _t1214 = -0.1e1;
  real _t1215 = 0.e0;
  real _t1216 = 0.e0;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos0AC0);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = -0.1e1;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos0AC1);
  real _t121F = prim /0055 (_t1219, _t121E);
  vec3 _t1220 = prim *0038<$[3]> (dPos0AC1, _t121F);
  vec3 _t1221 = prim +0017<$[3]> (refPos0AC0, _t1220);
  vec3 _t1222 = prim +0017<$[3]> (_t1212, _t1221);
  real _t1223 = _t1222[2];
  real _t1224 = -0.e0;
  bool _t1225 = prim >0080 (_t1223, _t1224);
  bool _t1226 = prim $and01C4 (_t120E, _t1225);
  bool _t1227 = prim $and01C4 (_t11F7, _t1226);
  bool _t1228 = prim $and01C4 (_t11E0, _t1227);
  string _t1229 = " dist: ";
  real _t122A = 0.e0;
  real _t122B = -0.1e1;
  real _t122C = 0.e0;
  real _t122D = 0.e0;
  vec3 _t122E = [_t122B, _t122C, _t122D];
  real _t122F = prim •00CE<$[3]; $[3]; $[]> (_t122E, refPos0AC0);
  real _t1230 = prim -0026<$[]> (_t122A, _t122F);
  real _t1231 = prim |()|00B5<$[]> (_t1230);
  string _t1232 = "signed dist: ";
  real _t1233 = 0.e0;
  real _t1234 = -0.1e1;
  real _t1235 = 0.e0;
  real _t1236 = 0.e0;
  vec3 _t1237 = [_t1234, _t1235, _t1236];
  real _t1238 = prim •00CE<$[3]; $[3]; $[]> (_t1237, refPos0AC0);
  real _t1239 = prim -0026<$[]> (_t1233, _t1238);
  string _t123A = " face: ";
  int _t123B = 1;
  string _t123C = " place: ";
  real _t123D = 0.e0;
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, refPos0AC0);
  real _t1243 = prim -0026<$[]> (_t123D, _t1242);
  real _t1244 = -0.1e1;
  real _t1245 = 0.e0;
  real _t1246 = 0.e0;
  vec3 _t1247 = [_t1244, _t1245, _t1246];
  real _t1248 = prim •00CE<$[3]; $[3]; $[]> (_t1247, dPos0AC1);
  real _t1249 = prim /0055 (_t1243, _t1248);
  vec3 _t124A = prim *0038<$[3]> (dPos0AC1, _t1249);
  vec3 _t124B = prim +0017<$[3]> (refPos0AC0, _t124A);
  string _t124C = " error: ";
  real _t124D = 0.e0;
  real _t124E = -0.1e1;
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  vec3 _t1251 = [_t124E, _t124F, _t1250];
  real _t1252 = 0.e0;
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos0AC0);
  real _t1258 = prim -0026<$[]> (_t1252, _t1257);
  real _t1259 = -0.1e1;
  real _t125A = 0.e0;
  real _t125B = 0.e0;
  vec3 _t125C = [_t1259, _t125A, _t125B];
  real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos0AC1);
  real _t125E = prim /0055 (_t1258, _t125D);
  vec3 _t125F = prim *0038<$[3]> (dPos0AC1, _t125E);
  vec3 _t1260 = prim +0017<$[3]> (refPos0AC0, _t125F);
  real _t1261 = prim •00CE<$[3]; $[3]; $[]> (_t1251, _t1260);
  real _t1262 = prim -0026<$[]> (_t124D, _t1261);
  real _t1263 = prim |()|00B5<$[]> (_t1262);
  string _t1264 = " offset :";
  string _t1265 = " dp: ";
  string _t1266 = " otherPossibleTime: ";
  string _t1267 = "\n";
  string _t1268 = "\n original face: ";
  string _t1269 = " ";
  print (_t11B4, _t11C1, _t11C2, _t11C7, _t11C8, _t1228, _t1229, _t1231, _t1232, _t1239, _t123A, _t123B, _t123C, _t124B, _t124C, _t1263, _t1264, refPos0AC0, _t1265, dPos0AC1, _t1266, faceTime109D, _t1267, _t1268, i109A, _t1269);
  real _t126A = 0.e0;
  real _t126B = -0.1e1;
  real _t126C = 0.e0;
  real _t126D = 0.e0;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, refPos0AC0);
  real _t1270 = prim -0026<$[]> (_t126A, _t126F);
  real _t1271 = -0.1e1;
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  vec3 _t1274 = [_t1271, _t1272, _t1273];
  real _t1275 = prim •00CE<$[3]; $[3]; $[]> (_t1274, dPos0AC1);
  real _t1276 = prim /0055 (_t1270, _t1275);
  real _t1277 = -0.1e-7;
  bool _t1278 = prim >=007E (_t1276, _t1277);
  real _t1279 = 0.e0;
  real _t127A = -0.1e1;
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  vec3 _t127D = [_t127A, _t127B, _t127C];
  real _t127E = prim •00CE<$[3]; $[3]; $[]> (_t127D, refPos0AC0);
  real _t127F = prim -0026<$[]> (_t1279, _t127E);
  real _t1280 = -0.1e1;
  real _t1281 = 0.e0;
  real _t1282 = 0.e0;
  vec3 _t1283 = [_t1280, _t1281, _t1282];
  real _t1284 = prim •00CE<$[3]; $[3]; $[]> (_t1283, dPos0AC1);
  real _t1285 = prim /0055 (_t127F, _t1284);
  bool _t1286 = prim >0080 (time109B, _t1285);
  real _t1287 = -0.1e1;
  real _t1288 = 0.e0;
  real _t1289 = 0.e0;
  vec3 _t128A = [_t1287, _t1288, _t1289];
  real _t128B = prim •00CE<$[3]; $[3]; $[]> (_t128A, dPos0AC1);
  real _t128C = prim |()|00B5<$[]> (_t128B);
  real _t128D = 0.1e-7;
  bool _t128E = prim >=007E (_t128C, _t128D);
  bool _t128F = prim $and01C4 (_t1286, _t128E);
  bool _t1290 = prim $and01C4 (_t1278, _t128F);
  if _t1290 {
    int _t1291 = 1;
    bool _t1292 = prim !=0086 (i109A, _t1291);
    if _t1292 {
      string _t1293 = "Saving at this face!";
      real _t1294 = 0.e0;
      real _t1295 = -0.1e1;
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      vec3 _t1298 = [_t1295, _t1296, _t1297];
      real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos0AC0);
      real _t129A = prim -0026<$[]> (_t1294, _t1299);
      real _t129B = -0.1e1;
      real _t129C = 0.e0;
      real _t129D = 0.e0;
      vec3 _t129E = [_t129B, _t129C, _t129D];
      real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos0AC1);
      real _t12A0 = prim /0055 (_t129A, _t129F);
      real _t12A1 = 0.e0;
      real _t12A2 = -0.1e1;
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
      real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, refPos0AC0);
      real _t12A7 = prim -0026<$[]> (_t12A1, _t12A6);
      real _t12A8 = -0.1e1;
      real _t12A9 = 0.e0;
      real _t12AA = 0.e0;
      vec3 _t12AB = [_t12A8, _t12A9, _t12AA];
      real _t12AC = prim •00CE<$[3]; $[3]; $[]> (_t12AB, dPos0AC1);
      real _t12AD = prim /0055 (_t12A7, _t12AC);
      bool _t12AE = prim >0080 (time109B, _t12AD);
      string _t12AF = "\n";
      print (_t1293, _t12A0, _t12AE, _t12AF);
      real _t12B0 = 0.e0;
      real _t12B1 = -0.1e1;
      real _t12B2 = 0.e0;
      real _t12B3 = 0.e0;
      vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
      real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, refPos0AC0);
      real _t12B6 = prim -0026<$[]> (_t12B0, _t12B5);
      real _t12B7 = -0.1e1;
      real _t12B8 = 0.e0;
      real _t12B9 = 0.e0;
      vec3 _t12BA = [_t12B7, _t12B8, _t12B9];
      real _t12BB = prim •00CE<$[3]; $[3]; $[]> (_t12BA, dPos0AC1);
      time109B = prim /0055 (_t12B6, _t12BB);
      face109C = 1;
    } else {
      real _t12BC = 0.e0;
      real _t12BD = -0.1e1;
      real _t12BE = 0.e0;
      real _t12BF = 0.e0;
      vec3 _t12C0 = [_t12BD, _t12BE, _t12BF];
      real _t12C1 = prim •00CE<$[3]; $[3]; $[]> (_t12C0, refPos0AC0);
      real _t12C2 = prim -0026<$[]> (_t12BC, _t12C1);
      real _t12C3 = -0.1e1;
      real _t12C4 = 0.e0;
      real _t12C5 = 0.e0;
      vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
      real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, dPos0AC1);
      faceTime109D = prim /0055 (_t12C2, _t12C7);
      string _t12C8 = "Saving backup time: ";
      string _t12C9 = "\n";
      print (_t12C8, faceTime109D, _t12C9);
    }
  }
  string _t12CA = "\ntest :";
  real _t12CB = 0.e0;
  real _t12CC = 0.e0;
  real _t12CD = -0.1e1;
  real _t12CE = 0.e0;
  vec3 _t12CF = [_t12CC, _t12CD, _t12CE];
  real _t12D0 = prim •00CE<$[3]; $[3]; $[]> (_t12CF, refPos0AC0);
  real _t12D1 = prim -0026<$[]> (_t12CB, _t12D0);
  real _t12D2 = 0.e0;
  real _t12D3 = -0.1e1;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, dPos0AC1);
  real _t12D7 = prim /0055 (_t12D1, _t12D6);
  string _t12D8 = " test2: ";
  real _t12D9 = 0.e0;
  real _t12DA = -0.1e1;
  real _t12DB = 0.e0;
  vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
  real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, dPos0AC1);
  string _t12DE = " insideTest: ";
  real _t12DF = 0.1e1;
  real _t12E0 = 0.1e-7;
  real _t12E1 = prim +0017<$[]> (_t12DF, _t12E0);
  real _t12E2 = 0.1e1;
  real _t12E3 = 0.1e1;
  real _t12E4 = 0.1e1;
  vec3 _t12E5 = [_t12E2, _t12E3, _t12E4];
  real _t12E6 = 0.e0;
  real _t12E7 = 0.e0;
  real _t12E8 = -0.1e1;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, refPos0AC0);
  real _t12EC = prim -0026<$[]> (_t12E6, _t12EB);
  real _t12ED = 0.e0;
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  vec3 _t12F0 = [_t12ED, _t12EE, _t12EF];
  real _t12F1 = prim •00CE<$[3]; $[3]; $[]> (_t12F0, dPos0AC1);
  real _t12F2 = prim /0055 (_t12EC, _t12F1);
  vec3 _t12F3 = prim *0038<$[3]> (dPos0AC1, _t12F2);
  vec3 _t12F4 = prim +0017<$[3]> (refPos0AC0, _t12F3);
  real _t12F5 = prim •00CE<$[3]; $[3]; $[]> (_t12E5, _t12F4);
  bool _t12F6 = prim >0080 (_t12E1, _t12F5);
  real _t12F7 = 0.1e-7;
  real _t12F8 = 0.1e-7;
  real _t12F9 = 0.1e-7;
  vec3 _t12FA = [_t12F7, _t12F8, _t12F9];
  real _t12FB = 0.e0;
  real _t12FC = 0.e0;
  real _t12FD = -0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0AC0);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = -0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0AC1);
  real _t1307 = prim /0055 (_t1301, _t1306);
  vec3 _t1308 = prim *0038<$[3]> (dPos0AC1, _t1307);
  vec3 _t1309 = prim +0017<$[3]> (refPos0AC0, _t1308);
  vec3 _t130A = prim +0017<$[3]> (_t12FA, _t1309);
  real _t130B = _t130A[0];
  real _t130C = -0.e0;
  bool _t130D = prim >0080 (_t130B, _t130C);
  real _t130E = 0.1e-7;
  real _t130F = 0.1e-7;
  real _t1310 = 0.1e-7;
  vec3 _t1311 = [_t130E, _t130F, _t1310];
  real _t1312 = 0.e0;
  real _t1313 = 0.e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, refPos0AC0);
  real _t1318 = prim -0026<$[]> (_t1312, _t1317);
  real _t1319 = 0.e0;
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  vec3 _t131C = [_t1319, _t131A, _t131B];
  real _t131D = prim •00CE<$[3]; $[3]; $[]> (_t131C, dPos0AC1);
  real _t131E = prim /0055 (_t1318, _t131D);
  vec3 _t131F = prim *0038<$[3]> (dPos0AC1, _t131E);
  vec3 _t1320 = prim +0017<$[3]> (refPos0AC0, _t131F);
  vec3 _t1321 = prim +0017<$[3]> (_t1311, _t1320);
  real _t1322 = _t1321[1];
  real _t1323 = -0.e0;
  bool _t1324 = prim >0080 (_t1322, _t1323);
  real _t1325 = 0.1e-7;
  real _t1326 = 0.1e-7;
  real _t1327 = 0.1e-7;
  vec3 _t1328 = [_t1325, _t1326, _t1327];
  real _t1329 = 0.e0;
  real _t132A = 0.e0;
  real _t132B = -0.1e1;
  real _t132C = 0.e0;
  vec3 _t132D = [_t132A, _t132B, _t132C];
  real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, refPos0AC0);
  real _t132F = prim -0026<$[]> (_t1329, _t132E);
  real _t1330 = 0.e0;
  real _t1331 = -0.1e1;
  real _t1332 = 0.e0;
  vec3 _t1333 = [_t1330, _t1331, _t1332];
  real _t1334 = prim •00CE<$[3]; $[3]; $[]> (_t1333, dPos0AC1);
  real _t1335 = prim /0055 (_t132F, _t1334);
  vec3 _t1336 = prim *0038<$[3]> (dPos0AC1, _t1335);
  vec3 _t1337 = prim +0017<$[3]> (refPos0AC0, _t1336);
  vec3 _t1338 = prim +0017<$[3]> (_t1328, _t1337);
  real _t1339 = _t1338[2];
  real _t133A = -0.e0;
  bool _t133B = prim >0080 (_t1339, _t133A);
  bool _t133C = prim $and01C4 (_t1324, _t133B);
  bool _t133D = prim $and01C4 (_t130D, _t133C);
  bool _t133E = prim $and01C4 (_t12F6, _t133D);
  string _t133F = " dist: ";
  real _t1340 = 0.e0;
  real _t1341 = 0.e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  vec3 _t1344 = [_t1341, _t1342, _t1343];
  real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, refPos0AC0);
  real _t1346 = prim -0026<$[]> (_t1340, _t1345);
  real _t1347 = prim |()|00B5<$[]> (_t1346);
  string _t1348 = "signed dist: ";
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  real _t134B = -0.1e1;
  real _t134C = 0.e0;
  vec3 _t134D = [_t134A, _t134B, _t134C];
  real _t134E = prim •00CE<$[3]; $[3]; $[]> (_t134D, refPos0AC0);
  real _t134F = prim -0026<$[]> (_t1349, _t134E);
  string _t1350 = " face: ";
  int _t1351 = 2;
  string _t1352 = " place: ";
  real _t1353 = 0.e0;
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos0AC0);
  real _t1359 = prim -0026<$[]> (_t1353, _t1358);
  real _t135A = 0.e0;
  real _t135B = -0.1e1;
  real _t135C = 0.e0;
  vec3 _t135D = [_t135A, _t135B, _t135C];
  real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos0AC1);
  real _t135F = prim /0055 (_t1359, _t135E);
  vec3 _t1360 = prim *0038<$[3]> (dPos0AC1, _t135F);
  vec3 _t1361 = prim +0017<$[3]> (refPos0AC0, _t1360);
  string _t1362 = " error: ";
  real _t1363 = 0.e0;
  real _t1364 = 0.e0;
  real _t1365 = -0.1e1;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = 0.e0;
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos0AC0);
  real _t136E = prim -0026<$[]> (_t1368, _t136D);
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos0AC1);
  real _t1374 = prim /0055 (_t136E, _t1373);
  vec3 _t1375 = prim *0038<$[3]> (dPos0AC1, _t1374);
  vec3 _t1376 = prim +0017<$[3]> (refPos0AC0, _t1375);
  real _t1377 = prim •00CE<$[3]; $[3]; $[]> (_t1367, _t1376);
  real _t1378 = prim -0026<$[]> (_t1363, _t1377);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  string _t137A = " offset :";
  string _t137B = " dp: ";
  string _t137C = " otherPossibleTime: ";
  string _t137D = "\n";
  string _t137E = "\n original face: ";
  string _t137F = " ";
  print (_t12CA, _t12D7, _t12D8, _t12DD, _t12DE, _t133E, _t133F, _t1347, _t1348, _t134F, _t1350, _t1351, _t1352, _t1361, _t1362, _t1379, _t137A, refPos0AC0, _t137B, dPos0AC1, _t137C, faceTime109D, _t137D, _t137E, i109A, _t137F);
  real _t1380 = 0.e0;
  real _t1381 = 0.e0;
  real _t1382 = -0.1e1;
  real _t1383 = 0.e0;
  vec3 _t1384 = [_t1381, _t1382, _t1383];
  real _t1385 = prim •00CE<$[3]; $[3]; $[]> (_t1384, refPos0AC0);
  real _t1386 = prim -0026<$[]> (_t1380, _t1385);
  real _t1387 = 0.e0;
  real _t1388 = -0.1e1;
  real _t1389 = 0.e0;
  vec3 _t138A = [_t1387, _t1388, _t1389];
  real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, dPos0AC1);
  real _t138C = prim /0055 (_t1386, _t138B);
  real _t138D = -0.1e-7;
  bool _t138E = prim >=007E (_t138C, _t138D);
  real _t138F = 0.e0;
  real _t1390 = 0.e0;
  real _t1391 = -0.1e1;
  real _t1392 = 0.e0;
  vec3 _t1393 = [_t1390, _t1391, _t1392];
  real _t1394 = prim •00CE<$[3]; $[3]; $[]> (_t1393, refPos0AC0);
  real _t1395 = prim -0026<$[]> (_t138F, _t1394);
  real _t1396 = 0.e0;
  real _t1397 = -0.1e1;
  real _t1398 = 0.e0;
  vec3 _t1399 = [_t1396, _t1397, _t1398];
  real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, dPos0AC1);
  real _t139B = prim /0055 (_t1395, _t139A);
  bool _t139C = prim >0080 (time109B, _t139B);
  real _t139D = 0.e0;
  real _t139E = -0.1e1;
  real _t139F = 0.e0;
  vec3 _t13A0 = [_t139D, _t139E, _t139F];
  real _t13A1 = prim •00CE<$[3]; $[3]; $[]> (_t13A0, dPos0AC1);
  real _t13A2 = prim |()|00B5<$[]> (_t13A1);
  real _t13A3 = 0.1e-7;
  bool _t13A4 = prim >=007E (_t13A2, _t13A3);
  bool _t13A5 = prim $and01C4 (_t139C, _t13A4);
  bool _t13A6 = prim $and01C4 (_t138E, _t13A5);
  if _t13A6 {
    int _t13A7 = 2;
    bool _t13A8 = prim !=0086 (i109A, _t13A7);
    if _t13A8 {
      string _t13A9 = "Saving at this face!";
      real _t13AA = 0.e0;
      real _t13AB = 0.e0;
      real _t13AC = -0.1e1;
      real _t13AD = 0.e0;
      vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
      real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos0AC0);
      real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
      real _t13B1 = 0.e0;
      real _t13B2 = -0.1e1;
      real _t13B3 = 0.e0;
      vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
      real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos0AC1);
      real _t13B6 = prim /0055 (_t13B0, _t13B5);
      real _t13B7 = 0.e0;
      real _t13B8 = 0.e0;
      real _t13B9 = -0.1e1;
      real _t13BA = 0.e0;
      vec3 _t13BB = [_t13B8, _t13B9, _t13BA];
      real _t13BC = prim •00CE<$[3]; $[3]; $[]> (_t13BB, refPos0AC0);
      real _t13BD = prim -0026<$[]> (_t13B7, _t13BC);
      real _t13BE = 0.e0;
      real _t13BF = -0.1e1;
      real _t13C0 = 0.e0;
      vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
      real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos0AC1);
      real _t13C3 = prim /0055 (_t13BD, _t13C2);
      bool _t13C4 = prim >0080 (time109B, _t13C3);
      string _t13C5 = "\n";
      print (_t13A9, _t13B6, _t13C4, _t13C5);
      real _t13C6 = 0.e0;
      real _t13C7 = 0.e0;
      real _t13C8 = -0.1e1;
      real _t13C9 = 0.e0;
      vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
      real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, refPos0AC0);
      real _t13CC = prim -0026<$[]> (_t13C6, _t13CB);
      real _t13CD = 0.e0;
      real _t13CE = -0.1e1;
      real _t13CF = 0.e0;
      vec3 _t13D0 = [_t13CD, _t13CE, _t13CF];
      real _t13D1 = prim •00CE<$[3]; $[3]; $[]> (_t13D0, dPos0AC1);
      time109B = prim /0055 (_t13CC, _t13D1);
      face109C = 2;
    } else {
      real _t13D2 = 0.e0;
      real _t13D3 = 0.e0;
      real _t13D4 = -0.1e1;
      real _t13D5 = 0.e0;
      vec3 _t13D6 = [_t13D3, _t13D4, _t13D5];
      real _t13D7 = prim •00CE<$[3]; $[3]; $[]> (_t13D6, refPos0AC0);
      real _t13D8 = prim -0026<$[]> (_t13D2, _t13D7);
      real _t13D9 = 0.e0;
      real _t13DA = -0.1e1;
      real _t13DB = 0.e0;
      vec3 _t13DC = [_t13D9, _t13DA, _t13DB];
      real _t13DD = prim •00CE<$[3]; $[3]; $[]> (_t13DC, dPos0AC1);
      faceTime109D = prim /0055 (_t13D8, _t13DD);
      string _t13DE = "Saving backup time: ";
      string _t13DF = "\n";
      print (_t13DE, faceTime109D, _t13DF);
    }
  }
  string _t13E0 = "\ntest :";
  real _t13E1 = 0.e0;
  real _t13E2 = 0.e0;
  real _t13E3 = 0.e0;
  real _t13E4 = -0.1e1;
  vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
  real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, refPos0AC0);
  real _t13E7 = prim -0026<$[]> (_t13E1, _t13E6);
  real _t13E8 = 0.e0;
  real _t13E9 = 0.e0;
  real _t13EA = -0.1e1;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, dPos0AC1);
  real _t13ED = prim /0055 (_t13E7, _t13EC);
  string _t13EE = " test2: ";
  real _t13EF = 0.e0;
  real _t13F0 = 0.e0;
  real _t13F1 = -0.1e1;
  vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
  real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos0AC1);
  string _t13F4 = " insideTest: ";
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.1e-7;
  real _t13F7 = prim +0017<$[]> (_t13F5, _t13F6);
  real _t13F8 = 0.1e1;
  real _t13F9 = 0.1e1;
  real _t13FA = 0.1e1;
  vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
  real _t13FC = 0.e0;
  real _t13FD = 0.e0;
  real _t13FE = 0.e0;
  real _t13FF = -0.1e1;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, refPos0AC0);
  real _t1402 = prim -0026<$[]> (_t13FC, _t1401);
  real _t1403 = 0.e0;
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  vec3 _t1406 = [_t1403, _t1404, _t1405];
  real _t1407 = prim •00CE<$[3]; $[3]; $[]> (_t1406, dPos0AC1);
  real _t1408 = prim /0055 (_t1402, _t1407);
  vec3 _t1409 = prim *0038<$[3]> (dPos0AC1, _t1408);
  vec3 _t140A = prim +0017<$[3]> (refPos0AC0, _t1409);
  real _t140B = prim •00CE<$[3]; $[3]; $[]> (_t13FB, _t140A);
  bool _t140C = prim >0080 (_t13F7, _t140B);
  real _t140D = 0.1e-7;
  real _t140E = 0.1e-7;
  real _t140F = 0.1e-7;
  vec3 _t1410 = [_t140D, _t140E, _t140F];
  real _t1411 = 0.e0;
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = -0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0AC0);
  real _t1417 = prim -0026<$[]> (_t1411, _t1416);
  real _t1418 = 0.e0;
  real _t1419 = 0.e0;
  real _t141A = -0.1e1;
  vec3 _t141B = [_t1418, _t1419, _t141A];
  real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0AC1);
  real _t141D = prim /0055 (_t1417, _t141C);
  vec3 _t141E = prim *0038<$[3]> (dPos0AC1, _t141D);
  vec3 _t141F = prim +0017<$[3]> (refPos0AC0, _t141E);
  vec3 _t1420 = prim +0017<$[3]> (_t1410, _t141F);
  real _t1421 = _t1420[0];
  real _t1422 = -0.e0;
  bool _t1423 = prim >0080 (_t1421, _t1422);
  real _t1424 = 0.1e-7;
  real _t1425 = 0.1e-7;
  real _t1426 = 0.1e-7;
  vec3 _t1427 = [_t1424, _t1425, _t1426];
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = -0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, refPos0AC0);
  real _t142E = prim -0026<$[]> (_t1428, _t142D);
  real _t142F = 0.e0;
  real _t1430 = 0.e0;
  real _t1431 = -0.1e1;
  vec3 _t1432 = [_t142F, _t1430, _t1431];
  real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, dPos0AC1);
  real _t1434 = prim /0055 (_t142E, _t1433);
  vec3 _t1435 = prim *0038<$[3]> (dPos0AC1, _t1434);
  vec3 _t1436 = prim +0017<$[3]> (refPos0AC0, _t1435);
  vec3 _t1437 = prim +0017<$[3]> (_t1427, _t1436);
  real _t1438 = _t1437[1];
  real _t1439 = -0.e0;
  bool _t143A = prim >0080 (_t1438, _t1439);
  real _t143B = 0.1e-7;
  real _t143C = 0.1e-7;
  real _t143D = 0.1e-7;
  vec3 _t143E = [_t143B, _t143C, _t143D];
  real _t143F = 0.e0;
  real _t1440 = 0.e0;
  real _t1441 = 0.e0;
  real _t1442 = -0.1e1;
  vec3 _t1443 = [_t1440, _t1441, _t1442];
  real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, refPos0AC0);
  real _t1445 = prim -0026<$[]> (_t143F, _t1444);
  real _t1446 = 0.e0;
  real _t1447 = 0.e0;
  real _t1448 = -0.1e1;
  vec3 _t1449 = [_t1446, _t1447, _t1448];
  real _t144A = prim •00CE<$[3]; $[3]; $[]> (_t1449, dPos0AC1);
  real _t144B = prim /0055 (_t1445, _t144A);
  vec3 _t144C = prim *0038<$[3]> (dPos0AC1, _t144B);
  vec3 _t144D = prim +0017<$[3]> (refPos0AC0, _t144C);
  vec3 _t144E = prim +0017<$[3]> (_t143E, _t144D);
  real _t144F = _t144E[2];
  real _t1450 = -0.e0;
  bool _t1451 = prim >0080 (_t144F, _t1450);
  bool _t1452 = prim $and01C4 (_t143A, _t1451);
  bool _t1453 = prim $and01C4 (_t1423, _t1452);
  bool _t1454 = prim $and01C4 (_t140C, _t1453);
  string _t1455 = " dist: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.e0;
  real _t1459 = -0.1e1;
  vec3 _t145A = [_t1457, _t1458, _t1459];
  real _t145B = prim •00CE<$[3]; $[3]; $[]> (_t145A, refPos0AC0);
  real _t145C = prim -0026<$[]> (_t1456, _t145B);
  real _t145D = prim |()|00B5<$[]> (_t145C);
  string _t145E = "signed dist: ";
  real _t145F = 0.e0;
  real _t1460 = 0.e0;
  real _t1461 = 0.e0;
  real _t1462 = -0.1e1;
  vec3 _t1463 = [_t1460, _t1461, _t1462];
  real _t1464 = prim •00CE<$[3]; $[3]; $[]> (_t1463, refPos0AC0);
  real _t1465 = prim -0026<$[]> (_t145F, _t1464);
  string _t1466 = " face: ";
  int _t1467 = 3;
  string _t1468 = " place: ";
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, refPos0AC0);
  real _t146F = prim -0026<$[]> (_t1469, _t146E);
  real _t1470 = 0.e0;
  real _t1471 = 0.e0;
  real _t1472 = -0.1e1;
  vec3 _t1473 = [_t1470, _t1471, _t1472];
  real _t1474 = prim •00CE<$[3]; $[3]; $[]> (_t1473, dPos0AC1);
  real _t1475 = prim /0055 (_t146F, _t1474);
  vec3 _t1476 = prim *0038<$[3]> (dPos0AC1, _t1475);
  vec3 _t1477 = prim +0017<$[3]> (refPos0AC0, _t1476);
  string _t1478 = " error: ";
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = 0.e0;
  real _t147C = -0.1e1;
  vec3 _t147D = [_t147A, _t147B, _t147C];
  real _t147E = 0.e0;
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos0AC0);
  real _t1484 = prim -0026<$[]> (_t147E, _t1483);
  real _t1485 = 0.e0;
  real _t1486 = 0.e0;
  real _t1487 = -0.1e1;
  vec3 _t1488 = [_t1485, _t1486, _t1487];
  real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos0AC1);
  real _t148A = prim /0055 (_t1484, _t1489);
  vec3 _t148B = prim *0038<$[3]> (dPos0AC1, _t148A);
  vec3 _t148C = prim +0017<$[3]> (refPos0AC0, _t148B);
  real _t148D = prim •00CE<$[3]; $[3]; $[]> (_t147D, _t148C);
  real _t148E = prim -0026<$[]> (_t1479, _t148D);
  real _t148F = prim |()|00B5<$[]> (_t148E);
  string _t1490 = " offset :";
  string _t1491 = " dp: ";
  string _t1492 = " otherPossibleTime: ";
  string _t1493 = "\n";
  string _t1494 = "\n original face: ";
  string _t1495 = " ";
  print (_t13E0, _t13ED, _t13EE, _t13F3, _t13F4, _t1454, _t1455, _t145D, _t145E, _t1465, _t1466, _t1467, _t1468, _t1477, _t1478, _t148F, _t1490, refPos0AC0, _t1491, dPos0AC1, _t1492, faceTime109D, _t1493, _t1494, i109A, _t1495);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = -0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos0AC0);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = -0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos0AC1);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-7;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = -0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos0AC0);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = -0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos0AC1);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time109B, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = -0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos0AC1);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-7;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 3;
    bool _t14BE = prim !=0086 (i109A, _t14BD);
    if _t14BE {
      string _t14BF = "Saving at this face!";
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.e0;
      real _t14C3 = -0.1e1;
      vec3 _t14C4 = [_t14C1, _t14C2, _t14C3];
      real _t14C5 = prim •00CE<$[3]; $[3]; $[]> (_t14C4, refPos0AC0);
      real _t14C6 = prim -0026<$[]> (_t14C0, _t14C5);
      real _t14C7 = 0.e0;
      real _t14C8 = 0.e0;
      real _t14C9 = -0.1e1;
      vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
      real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, dPos0AC1);
      real _t14CC = prim /0055 (_t14C6, _t14CB);
      real _t14CD = 0.e0;
      real _t14CE = 0.e0;
      real _t14CF = 0.e0;
      real _t14D0 = -0.1e1;
      vec3 _t14D1 = [_t14CE, _t14CF, _t14D0];
      real _t14D2 = prim •00CE<$[3]; $[3]; $[]> (_t14D1, refPos0AC0);
      real _t14D3 = prim -0026<$[]> (_t14CD, _t14D2);
      real _t14D4 = 0.e0;
      real _t14D5 = 0.e0;
      real _t14D6 = -0.1e1;
      vec3 _t14D7 = [_t14D4, _t14D5, _t14D6];
      real _t14D8 = prim •00CE<$[3]; $[3]; $[]> (_t14D7, dPos0AC1);
      real _t14D9 = prim /0055 (_t14D3, _t14D8);
      bool _t14DA = prim >0080 (time109B, _t14D9);
      string _t14DB = "\n";
      print (_t14BF, _t14CC, _t14DA, _t14DB);
      real _t14DC = 0.e0;
      real _t14DD = 0.e0;
      real _t14DE = 0.e0;
      real _t14DF = -0.1e1;
      vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
      real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, refPos0AC0);
      real _t14E2 = prim -0026<$[]> (_t14DC, _t14E1);
      real _t14E3 = 0.e0;
      real _t14E4 = 0.e0;
      real _t14E5 = -0.1e1;
      vec3 _t14E6 = [_t14E3, _t14E4, _t14E5];
      real _t14E7 = prim •00CE<$[3]; $[3]; $[]> (_t14E6, dPos0AC1);
      time109B = prim /0055 (_t14E2, _t14E7);
      face109C = 3;
    } else {
      real _t14E8 = 0.e0;
      real _t14E9 = 0.e0;
      real _t14EA = 0.e0;
      real _t14EB = -0.1e1;
      vec3 _t14EC = [_t14E9, _t14EA, _t14EB];
      real _t14ED = prim •00CE<$[3]; $[3]; $[]> (_t14EC, refPos0AC0);
      real _t14EE = prim -0026<$[]> (_t14E8, _t14ED);
      real _t14EF = 0.e0;
      real _t14F0 = 0.e0;
      real _t14F1 = -0.1e1;
      vec3 _t14F2 = [_t14EF, _t14F0, _t14F1];
      real _t14F3 = prim •00CE<$[3]; $[3]; $[]> (_t14F2, dPos0AC1);
      faceTime109D = prim /0055 (_t14EE, _t14F3);
      string _t14F4 = "Saving backup time: ";
      string _t14F5 = "\n";
      print (_t14F4, faceTime109D, _t14F5);
    }
  }
  int _t14F6 = -1;
  bool _t14F7 = prim !=0086 (face109C, _t14F6);
  real _t14F8 = 0.1e1;
  real _t14F9 = 0.1e-7;
  real _t14FA = prim +0017<$[]> (_t14F8, _t14F9);
  real _t14FB = 0.1e1;
  real _t14FC = 0.1e1;
  real _t14FD = 0.1e1;
  vec3 _t14FE = [_t14FB, _t14FC, _t14FD];
  real _t14FF = 0.e0;
  real _t1500 = prim max0125 (time109B, _t14FF);
  vec3 _t1501 = prim *0038<$[3]> (dPos0AC1, _t1500);
  vec3 _t1502 = prim +0017<$[3]> (refPos0AC0, _t1501);
  real _t1503 = prim •00CE<$[3]; $[3]; $[]> (_t14FE, _t1502);
  bool _t1504 = prim >0080 (_t14FA, _t1503);
  real _t1505 = 0.1e-7;
  real _t1506 = 0.1e-7;
  real _t1507 = 0.1e-7;
  vec3 _t1508 = [_t1505, _t1506, _t1507];
  real _t1509 = 0.e0;
  real _t150A = prim max0125 (time109B, _t1509);
  vec3 _t150B = prim *0038<$[3]> (dPos0AC1, _t150A);
  vec3 _t150C = prim +0017<$[3]> (refPos0AC0, _t150B);
  vec3 _t150D = prim +0017<$[3]> (_t1508, _t150C);
  real _t150E = _t150D[0];
  real _t150F = -0.e0;
  bool _t1510 = prim >0080 (_t150E, _t150F);
  real _t1511 = 0.1e-7;
  real _t1512 = 0.1e-7;
  real _t1513 = 0.1e-7;
  vec3 _t1514 = [_t1511, _t1512, _t1513];
  real _t1515 = 0.e0;
  real _t1516 = prim max0125 (time109B, _t1515);
  vec3 _t1517 = prim *0038<$[3]> (dPos0AC1, _t1516);
  vec3 _t1518 = prim +0017<$[3]> (refPos0AC0, _t1517);
  vec3 _t1519 = prim +0017<$[3]> (_t1514, _t1518);
  real _t151A = _t1519[1];
  real _t151B = -0.e0;
  bool _t151C = prim >0080 (_t151A, _t151B);
  real _t151D = 0.1e-7;
  real _t151E = 0.1e-7;
  real _t151F = 0.1e-7;
  vec3 _t1520 = [_t151D, _t151E, _t151F];
  real _t1521 = 0.e0;
  real _t1522 = prim max0125 (time109B, _t1521);
  vec3 _t1523 = prim *0038<$[3]> (dPos0AC1, _t1522);
  vec3 _t1524 = prim +0017<$[3]> (refPos0AC0, _t1523);
  vec3 _t1525 = prim +0017<$[3]> (_t1520, _t1524);
  real _t1526 = _t1525[2];
  real _t1527 = -0.e0;
  bool _t1528 = prim >0080 (_t1526, _t1527);
  bool _t1529 = prim $and01C4 (_t151C, _t1528);
  bool _t152A = prim $and01C4 (_t1510, _t1529);
  bool _t152B = prim $and01C4 (_t1504, _t152A);
  bool _t152C = prim $and01C4 (_t14F7, _t152B);
  if _t152C {
    string _t152D = "\nReturning via standard : ";
    real _t152E = 0.e0;
    real _t152F = prim max0125 (time109B, _t152E);
    real _t1530 = (real)face109C;
    vec2 _t1531 = [_t152F, _t1530];
    string _t1532 = "\n";
    print (_t152D, _t1531, _t1532);
    real _t1533 = 0.e0;
    real _t1534 = prim max0125 (time109B, _t1533);
    real _t1535 = (real)face109C;
    vec2 _t1536 = [_t1534, _t1535];
    return _t1536;
  } else {
    real _t1537 = -inf;
    bool _t1538 = prim ==0084 (_t1537, faceTime109D);
    if _t1538 {
      string _t1539 = "\nReturning via fail : ";
      real _t153A = -0.1e1;
      real _t153B = -0.1e1;
      vec2 _t153C = [_t153A, _t153B];
      string _t153D = "\n";
      print (_t1539, _t153C, _t153D);
      real _t153E = -0.1e1;
      real _t153F = -0.1e1;
      vec2 _t1540 = [_t153E, _t153F];
      return _t1540;
    } else {
      string _t1541 = "\nReturning via backup : ";
      real _t1542 = 0.e0;
      real _t1543 = prim max0125 (faceTime109D, _t1542);
      real _t1544 = (real)i109A;
      vec2 _t1545 = [_t1543, _t1544];
      string _t1546 = "\n";
      print (_t1541, _t1545, _t1546);
      real _t1547 = 0.e0;
      real _t1548 = prim max0125 (faceTime109D, _t1547);
      real _t1549 = (real)i109A;
      vec2 _t154A = [_t1548, _t1549];
      return _t154A;
    }
  }
}
function Femdata: MeshPos#2 fn_2FB1563 (Femdata: MeshPos x1564, vec3 dPos1565)
{
  bool _t1566 = extractFemItem(Valid(MeshPos), bool, x1564);
  bool _t1567 = prim !00BC (_t1566);
  if _t1567 {
    return x1564;
  }
  real time1568 = 0.1e1;
  Femdata: MeshPos cmp1569 = x1564;
  int _t156A = 0;
  int[] _t156B = prim $range01C3 (_t156A, timeSteps040D);
  foreach i15E3 in _t156B {
    Femdata: Mesh _t156C = extractFem(cmp1569, Mesh);
    int _t156D = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t156E = loadFem(MeshCell, _t156C, _t156D);
    Femdata: Mesh _t156F = extractFem(_t156E, Mesh);
    Femdata: Mesh _t1570 = extractFem(cmp1569, Mesh);
    int _t1571 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1572 = loadFem(MeshCell, _t1570, _t1571);
    Femdata: Mesh _t1573 = extractFem(_t1572, Mesh);
    Femdata: Mesh _t1574 = extractFem(cmp1569, Mesh);
    int _t1575 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1576 = loadFem(MeshCell, _t1574, _t1575);
    int _t1577 = extractFemItem(CellIndex(MeshCell), int, _t1576);
    field(3)[3] _t1578 = femField(_t156F,_t1577,field(3)[3],Transform,);
    field(3)[3,3] _t1579 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1578);
    vec3 _t157A = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    tensor[3,3] _t157B = prim @00A5<#∞; %3; $[3,3]> (_t1579, _t157A);
    tensor[3,3] _t157C = prim inv0155 (_t157B);
    vec3 deltaP157D = prim •00CE<$[3,3]; $[3]; $[3]> (_t157C, dPos1565);
    real _t157E = prim |()|00B5<$[3]> (deltaP157D);
    vec3 normDetaP157F = prim /0057<$[3]> (deltaP157D, _t157E);
    vec3 _t1580 = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    vec3 _t1581 = prim *0036<$[3]> (time1568, deltaP157D);
    vec3 newPos1582 = prim +0017<$[3]> (_t1580, _t1581);
    continue;
  }
  string _t15E4 = "Took stupid way out!\n";
  print (_t15E4);
  vec3 _t15E5;
  vec3 _t16DD = extractFemItem(RefPos(MeshPos), vec3, x1564);
  int _t16DE = extractFemItem(CellIndex(MeshPos), int, x1564);
  Femdata: Mesh _t16DF = extractFem(x1564, Mesh);
  vec3 _t16E0;
  field(3)[3] _t16E1 = femField(_t16DF,_t16DE,field(3)[3],Transform,);
  vec3 _t16E2 = prim @00A5<#∞; %3; $[3]> (_t16E1, _t16DD);
  _t16E0 = _t16E2;
  _t15E5 = _t16E0;
  vec3 _t15E6 = prim +0017<$[3]> (_t15E5, dPos1565);
  cmp1569 = func findPos041E (meshData03FD, _t15E6);
  return cmp1569;
}
globalInit {
  int _t0401 = 0;
  int _t03FF = 1;
  int _t0403 = extractFemItem(NumCell(Mesh), int, meshData03FD);
  int _t0402 = prim -0024 (_t0403, _t03FF);
  int[] _t0406 = prim $range01C3 (_t0401, _t0402);
  Femdata: MeshCell[] _t0407 = {};
  foreach _t0405 in _t0406 {
    Femdata: MeshCell _t0408 = loadFem(MeshCell, meshData03FD, _t0405);
    _t0407 = prim @0010<Femdata: MeshCell> (_t0407, _t0408);
  }
  space0409 = loadFem(Space, 0space0409_intermedateGlobal040A, meshData03FD);
  data040B = loadFem(FemFunc, 0data040B_intermedateGlobal040C, space0409);
  Femdata: Space _t1556 = extractFem(data040B, Space);
  Femdata: Space _t1557 = extractFem(data040B, Space);
  Femdata: Mesh _t1558 = extractFem(_t1557, Mesh);
  field(3)[3] _t1559 = femField(data040B,_t1558,field(3)[3],refField,findPos041E );
  Femdata: Space _t155A = extractFem(data040B, Space);
  Femdata: Mesh _t155B = extractFem(_t155A, Mesh);
  Femdata: Space _t155C = extractFem(data040B, Space);
  Femdata: Mesh _t155D = extractFem(_t155C, Mesh);
  Femdata: Space _t155E = extractFem(data040B, Space);
  Femdata: Mesh _t155F = extractFem(_t155E, Mesh);
  field(3)[3] _t1560 = femField(_t155B,_t155F,field(3)[3],InvTransform,findPos041E );
  F1561 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t1559, _t1560);
}
strand gg (vec3 startPos15FF) {
  output vec3[] stream1600;
  output vec3[] newStream1603;
  int step1606;
  Femdata: MeshPos cPos1607;
  vec3 altCPos1608;
  {
    vec3[0] _t1601 = {};
    vec3[] _t1602 = (vec3[])_t1601;
    stream1600 = _t1602;
    vec3[0] _t1604 = {};
    vec3[] _t1605 = (vec3[])_t1604;
    newStream1603 = _t1605;
    step1606 = 0;
    cPos1607 = func findPos041E (meshData03FD, startPos15FF);
    altCPos1608 = startPos15FF;
  }
  update
  {
    int _t1609 = 0;
    bool _t160A = prim ==0082 (step1606, _t1609);
    if _t160A {
      bool _t160B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      if _t160B {
        vec3 rp160C = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
        real _t160D = rp160C[0];
        real _t160E = 0.1e-5;
        bool _t160F = prim <=007C (_t160D, _t160E);
        if _t160F {
          stabilize;
        }
        real _t1610 = rp160C[1];
        real _t1611 = 0.1e-5;
        bool _t1612 = prim <=007C (_t1610, _t1611);
        if _t1612 {
          stabilize;
        }
        real _t1613 = rp160C[2];
        real _t1614 = 0.1e-5;
        bool _t1615 = prim <=007C (_t1613, _t1614);
        if _t1615 {
          stabilize;
        }
        real _t1616 = 0.1e1;
        real _t1617 = 0.1e1;
        real _t1618 = 0.1e1;
        vec3 _t1619 = [_t1616, _t1617, _t1618];
        real r161A = prim •00CE<$[3]; $[3]; $[]> (_t1619, rp160C);
        real _t161B = 0.9999999e0;
        bool _t161C = prim <=007C (_t161B, r161A);
        if _t161C {
          stabilize;
        }
      }
    }
    bool _t161D = extractFemItem(Valid(MeshPos), bool, cPos1607);
    Femdata: MeshPos _t161E = func findPos041E (meshData03FD, altCPos1608);
    bool _t161F = extractFemItem(Valid(MeshPos), bool, _t161E);
    bool _t1620 = prim !=0085 (_t161D, _t161F);
    if _t1620 {
      string _t1621 = "ERG:Warning of validity startPos:";
      string _t1622 = "\n";
      print (_t1621, startPos15FF, _t1622);
    }
    bool _t1623;
    bool _t1624 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    bool _t1625 = prim !00BC (_t1624);
    if _t1625 {
      _t1623 = true;
    } else {
      bool _t1626;
      Femdata: MeshPos _t1627 = func findPos041E (meshData03FD, altCPos1608);
      bool _t1628 = extractFemItem(Valid(MeshPos), bool, _t1627);
      bool _t1629 = prim !00BC (_t1628);
      if _t1629 {
        _t1626 = true;
      } else {
        _t1626 = prim ==0082 (step1606, stepMax0411);
      }
      _t1623 = _t1626;
    }
    if _t1623 {
      string _t162A = "Went off the mesh\?";
      bool _t162B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      bool _t162C = prim !00BC (_t162B);
      string _t162D = " and ";
      string _t162E = " and ";
      Femdata: MeshPos _t162F = func findPos041E (meshData03FD, altCPos1608);
      bool _t1630 = extractFemItem(Valid(MeshPos), bool, _t162F);
      bool _t1631 = prim !00BC (_t1630);
      string _t1632 = "\n";
      print (_t162A, _t162C, _t162D, altCPos1608, _t162E, _t1631, _t1632);
      string _t1633 = "Pos is:";
      vec3 _t1634 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1635 = "\n";
      print (_t1633, _t1634, _t1635);
      string _t1636 = "\n";
      string _t1637 = "\n";
      print (stream1600, _t1636, newStream1603, _t1637);
      stabilize;
    }
    vec3 _t1638;
    vec3 _t173B = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
    int _t173C = extractFemItem(CellIndex(MeshPos), int, cPos1607);
    Femdata: Mesh _t173D = extractFem(cPos1607, Mesh);
    vec3 _t173E;
    field(3)[3] _t173F = femField(_t173D,_t173C,field(3)[3],Transform,);
    vec3 _t1740 = prim @00A5<#∞; %3; $[3]> (_t173F, _t173B);
    _t173E = _t1740;
    _t1638 = _t173E;
    vec3[1] _t1639 = {_t1638};
    vec3[] _t163A = (vec3[])_t1639;
    stream1600 = prim @0014<vec3> (stream1600, _t163A);
    vec3[1] _t163B = {altCPos1608};
    vec3[] _t163C = (vec3[])_t163B;
    newStream1603 = prim @0014<vec3> (newStream1603, _t163C);
    vec3 _t163D;
    vec3 _t1735 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
    int _t1736 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
    Femdata: Mesh _t1737 = extractFem(cPos1607, Mesh);
    vec3 _t1738;
    field(3)[3] _t1739 = femField(_t1737,_t1736,field(3)[3],Transform,);
    vec3 _t173A = prim @00A5<#∞; %3; $[3]> (_t1739, _t1735);
    _t1738 = _t173A;
    _t163D = _t1738;
    vec3 _t163E = prim -0026<$[3]> (_t163D, altCPos1608);
    real _t163F = prim |()|00B5<$[3]> (_t163E);
    real _t1640 = 0.1e-5;
    bool _t1641 = prim >0080 (_t163F, _t1640);
    if _t1641 {
      string _t1642 = "ERG:Error in tracing 1: At step:";
      string _t1643 = " with particle:";
      string _t1644 = "\n";
      print (_t1642, step1606, _t1643, startPos15FF, _t1644);
      string _t1645 = "Poses are:";
      vec3 _t1646;
      vec3 _t172F = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      int _t1730 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: Mesh _t1731 = extractFem(cPos1607, Mesh);
      vec3 _t1732;
      field(3)[3] _t1733 = femField(_t1731,_t1730,field(3)[3],Transform,);
      vec3 _t1734 = prim @00A5<#∞; %3; $[3]> (_t1733, _t172F);
      _t1732 = _t1734;
      _t1646 = _t1732;
      string _t1647 = "\n";
      print (_t1645, _t1646, altCPos1608, _t1647);
      string _t1648 = "Cells are:";
      Femdata: Mesh _t1649 = extractFem(cPos1607, Mesh);
      int _t164A = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t164B = loadFem(MeshCell, _t1649, _t164A);
      string _t164C = " and ";
      Femdata: MeshPos _t164D = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t164E = extractFem(_t164D, Mesh);
      Femdata: MeshPos _t164F = func findPos041E (meshData03FD, altCPos1608);
      int _t1650 = extractFemItem(CellIndex(MeshPos), int, _t164F);
      Femdata: MeshCell _t1651 = loadFem(MeshCell, _t164E, _t1650);
      string _t1652 = "\n";
      print (_t1648, _t164B, _t164C, _t1651, _t1652);
      string _t1653 = "Ref poses are:";
      vec3 _t1654 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1655 = " and ";
      Femdata: MeshPos _t1656 = func findPos041E (meshData03FD, altCPos1608);
      vec3 _t1657 = extractFemItem(RefPos(MeshPos), vec3, _t1656);
      string _t1658 = "\n";
      print (_t1653, _t1654, _t1655, _t1657, _t1658);
      stabilize;
    } else {
      string _t1659 = "fine in cell 1:";
      Femdata: Mesh _t165A = extractFem(cPos1607, Mesh);
      int _t165B = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t165C = loadFem(MeshCell, _t165A, _t165B);
      string _t165D = "\n";
      print (_t1659, _t165C, _t165D);
    }
    real _t165E = 0.5e0;
    real _t165F = prim *0034 (_t165E, stepSize0410);
    vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    vec3 _t1661 = prim *0036<$[3]> (_t165F, _t1660);
    vec3 _t1662 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    real _t1663 = prim |()|00B5<$[3]> (_t1662);
    vec3 altUp11664 = prim /0057<$[3]> (_t1661, _t1663);
    real _t1665 = 0.5e0;
    real _t1666 = prim *0034 (_t1665, stepSize0410);
    vec3 _t1667;
    bool _t1717 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    if _t1717 {
      Femdata: Mesh _t1718 = extractFem(cPos1607, Mesh);
      int _t1719 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell c171A = loadFem(MeshCell, _t1718, _t1719);
      vec3 ref171B = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      Femdata: FuncCell _t171C;
      int _t171D = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t171E = loadFem(FuncCell, data040B, _t171D);
      _t171C = _t171E;
      Femdata: FemFunc _t171F = extractFem(_t171C, FemFunc);
      Femdata: FuncCell _t1720;
      int _t1721 = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t1722 = loadFem(FuncCell, data040B, _t1721);
      _t1720 = _t1722;
      Femdata: FemFunc _t1723 = extractFem(_t1720, FemFunc);
      Femdata: Space _t1724 = extractFem(_t1723, Space);
      Femdata: FuncCell _t1725;
      int _t1726 = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t1727 = loadFem(FuncCell, data040B, _t1726);
      _t1725 = _t1727;
      int _t1728 = extractFemItem(CellIndex(FuncCell), int, _t1725);
      field(3)[3] _t1729 = femField(_t171F,_t1728,field(3)[3],refField,);
      vec3 val172A = prim @00A5<#∞; %3; $[3]> (_t1729, ref171B);
      real _t172B = prim |()|00B5<$[3]> (val172A);
      vec3 _t172C = prim /0057<$[3]> (val172A, _t172B);
      _t1667 = _t172C;
    } else {
      string _t172D = "QWE:Eval at 0\n";
      print (_t172D);
      vec3 _t172E = prim $zero01BB<$[3]> ();
      _t1667 = _t172E;
    }
    vec3 up11668 = prim *0036<$[3]> (_t1666, _t1667);
    real _t1669 = 0.5e0;
    real _t166A = prim *0034 (_t1669, stepSize0410);
    vec3 _t166B;
    vec3 _t1715 = prim -0026<$[3]> (altCPos1608, center0413);
    vec3 _t1716 = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t1715);
    _t166B = _t1716;
    vec3 _t166C = prim *0036<$[3]> (_t166A, _t166B);
    vec3 _t166D;
    vec3 _t1713 = prim -0026<$[3]> (altCPos1608, center0413);
    vec3 _t1714 = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t1713);
    _t166D = _t1714;
    real _t166E = prim |()|00B5<$[3]> (_t166D);
    vec3 upCorrect1166F = prim /0057<$[3]> (_t166C, _t166E);
    bool _t1670;
    vec3 _t1671 = prim -0026<$[3]> (up11668, upCorrect1166F);
    real _t1672 = prim |()|00B5<$[3]> (_t1671);
    real _t1673 = 0.1e-5;
    bool _t1674 = prim >0080 (_t1672, _t1673);
    if _t1674 {
      _t1670 = true;
    } else {
      vec3 _t1675 = prim -0026<$[3]> (up11668, altUp11664);
      real _t1676 = prim |()|00B5<$[3]> (_t1675);
      real _t1677 = 0.1e-5;
      _t1670 = prim >0080 (_t1676, _t1677);
    }
    if _t1670 {
      string _t1678 = "ERG:Error in evaluation on pos 1:";
      string _t1679 = "\n";
      print (_t1678, startPos15FF, _t1679);
    }
    Femdata: MeshPos intermed167A = func fn_2FB1563 (cPos1607, up11668);
    vec3 altIntermed167B = prim +0017<$[3]> (altCPos1608, altUp11664);
    bool _t167C = extractFemItem(Valid(MeshPos), bool, intermed167A);
    Femdata: MeshPos _t167D = func findPos041E (meshData03FD, altIntermed167B);
    bool _t167E = extractFemItem(Valid(MeshPos), bool, _t167D);
    bool _t167F = prim !=0085 (_t167C, _t167E);
    if _t167F {
      string _t1680 = "ERG:Warning of validity intermed";
      string _t1681 = "\n";
      print (_t1680, startPos15FF, _t1681);
      string _t1682 = "Real location:";
      string _t1683 = "\n";
      print (_t1682, altIntermed167B, _t1683);
      string _t1684 = "Cell change: ";
      Femdata: MeshPos _t1685 = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t1686 = extractFem(_t1685, Mesh);
      Femdata: MeshPos _t1687 = func findPos041E (meshData03FD, altCPos1608);
      int _t1688 = extractFemItem(CellIndex(MeshPos), int, _t1687);
      Femdata: MeshCell _t1689 = loadFem(MeshCell, _t1686, _t1688);
      string _t168A = " to ";
      Femdata: MeshPos _t168B = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t168C = extractFem(_t168B, Mesh);
      Femdata: MeshPos _t168D = func findPos041E (meshData03FD, altIntermed167B);
      int _t168E = extractFemItem(CellIndex(MeshPos), int, _t168D);
      Femdata: MeshCell _t168F = loadFem(MeshCell, _t168C, _t168E);
      string _t1690 = "\n";
      print (_t1684, _t1689, _t168A, _t168F, _t1690);
    }
    bool _t1691;
    bool _t1692 = extractFemItem(Valid(MeshPos), bool, intermed167A);
    bool _t1693 = prim !00BC (_t1692);
    if _t1693 {
      _t1691 = true;
    } else {
      Femdata: MeshPos _t1694 = func findPos041E (meshData03FD, altIntermed167B);
      bool _t1695 = extractFemItem(Valid(MeshPos), bool, _t1694);
      _t1691 = prim !00BC (_t1695);
    }
    if _t1691 {
      string _t1696 = "Went off the mesh\?";
      bool _t1697 = extractFemItem(Valid(MeshPos), bool, intermed167A);
      bool _t1698 = prim !00BC (_t1697);
      string _t1699 = " and ";
      string _t169A = " and ";
      Femdata: MeshPos _t169B = func findPos041E (meshData03FD, altIntermed167B);
      bool _t169C = extractFemItem(Valid(MeshPos), bool, _t169B);
      bool _t169D = prim !00BC (_t169C);
      string _t169E = "\n";
      print (_t1696, _t1698, _t1699, altIntermed167B, _t169A, _t169D, _t169E);
      stabilize;
    }
    vec3 _t169F;
    vec3 _t170D = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
    int _t170E = extractFemItem(CellIndex(MeshPos), int, intermed167A);
    Femdata: Mesh _t170F = extractFem(intermed167A, Mesh);
    vec3 _t1710;
    field(3)[3] _t1711 = femField(_t170F,_t170E,field(3)[3],Transform,);
    vec3 _t1712 = prim @00A5<#∞; %3; $[3]> (_t1711, _t170D);
    _t1710 = _t1712;
    _t169F = _t1710;
    vec3 _t16A0 = prim -0026<$[3]> (_t169F, altIntermed167B);
    real _t16A1 = prim |()|00B5<$[3]> (_t16A0);
    real _t16A2 = 0.1e-5;
    bool _t16A3 = prim >0080 (_t16A1, _t16A2);
    if _t16A3 {
      string _t16A4 = "ERG:Error in tracing 2: At step:";
      string _t16A5 = " with particle:";
      string _t16A6 = "\n";
      print (_t16A4, step1606, _t16A5, startPos15FF, _t16A6);
      string _t16A7 = "Poses are:";
      vec3 _t16A8;
      vec3 _t1707 = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
      int _t1708 = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: Mesh _t1709 = extractFem(intermed167A, Mesh);
      vec3 _t170A;
      field(3)[3] _t170B = femField(_t1709,_t1708,field(3)[3],Transform,);
      vec3 _t170C = prim @00A5<#∞; %3; $[3]> (_t170B, _t1707);
      _t170A = _t170C;
      _t16A8 = _t170A;
      string _t16A9 = "\n";
      print (_t16A7, _t16A8, altIntermed167B, _t16A9);
      stabilize;
    } else {
      string _t16AA = "fine in cell 2:";
      Femdata: Mesh _t16AB = extractFem(cPos1607, Mesh);
      int _t16AC = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t16AD = loadFem(MeshCell, _t16AB, _t16AC);
      string _t16AE = "\n";
      print (_t16AA, _t16AD, _t16AE);
    }
    vec3 _t16AF = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    vec3 _t16B0 = prim *0036<$[3]> (stepSize0410, _t16AF);
    vec3 _t16B1 = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    real _t16B2 = prim |()|00B5<$[3]> (_t16B1);
    vec3 altUp216B3 = prim /0057<$[3]> (_t16B0, _t16B2);
    vec3 _t16B4;
    bool _t16EF = extractFemItem(Valid(MeshPos), bool, intermed167A);
    if _t16EF {
      Femdata: Mesh _t16F0 = extractFem(intermed167A, Mesh);
      int _t16F1 = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell c16F2 = loadFem(MeshCell, _t16F0, _t16F1);
      vec3 ref16F3 = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
      Femdata: FuncCell _t16F4;
      int _t16F5 = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16F6 = loadFem(FuncCell, data040B, _t16F5);
      _t16F4 = _t16F6;
      Femdata: FemFunc _t16F7 = extractFem(_t16F4, FemFunc);
      Femdata: FuncCell _t16F8;
      int _t16F9 = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16FA = loadFem(FuncCell, data040B, _t16F9);
      _t16F8 = _t16FA;
      Femdata: FemFunc _t16FB = extractFem(_t16F8, FemFunc);
      Femdata: Space _t16FC = extractFem(_t16FB, Space);
      Femdata: FuncCell _t16FD;
      int _t16FE = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16FF = loadFem(FuncCell, data040B, _t16FE);
      _t16FD = _t16FF;
      int _t1700 = extractFemItem(CellIndex(FuncCell), int, _t16FD);
      field(3)[3] _t1701 = femField(_t16F7,_t1700,field(3)[3],refField,);
      vec3 val1702 = prim @00A5<#∞; %3; $[3]> (_t1701, ref16F3);
      real _t1703 = prim |()|00B5<$[3]> (val1702);
      vec3 _t1704 = prim /0057<$[3]> (val1702, _t1703);
      _t16B4 = _t1704;
    } else {
      string _t1705 = "QWE:Eval at 0\n";
      print (_t1705);
      vec3 _t1706 = prim $zero01BB<$[3]> ();
      _t16B4 = _t1706;
    }
    vec3 up216B5 = prim *0036<$[3]> (stepSize0410, _t16B4);
    vec3 _t16B6;
    vec3 _t16ED = prim -0026<$[3]> (altIntermed167B, center0413);
    vec3 _t16EE = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t16ED);
    _t16B6 = _t16EE;
    vec3 _t16B7 = prim *0036<$[3]> (stepSize0410, _t16B6);
    vec3 _t16B8;
    vec3 _t16EB = prim -0026<$[3]> (altIntermed167B, center0413);
    vec3 _t16EC = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t16EB);
    _t16B8 = _t16EC;
    real _t16B9 = prim |()|00B5<$[3]> (_t16B8);
    vec3 upCorrect216BA = prim /0057<$[3]> (_t16B7, _t16B9);
    cPos1607 = func fn_2FB1563 (cPos1607, up216B5);
    altCPos1608 = prim +0017<$[3]> (altCPos1608, altUp216B3);
    int _t16BB = 1;
    step1606 = prim +0015 (step1606, _t16BB);
    bool _t16BC;
    vec3 _t16BD = prim -0026<$[3]> (up216B5, upCorrect216BA);
    real _t16BE = prim |()|00B5<$[3]> (_t16BD);
    real _t16BF = 0.1e-5;
    bool _t16C0 = prim >0080 (_t16BE, _t16BF);
    if _t16C0 {
      _t16BC = true;
    } else {
      vec3 _t16C1 = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16C2 = prim |()|00B5<$[3]> (_t16C1);
      real _t16C3 = 0.1e-4;
      _t16BC = prim >0080 (_t16C2, _t16C3);
    }
    if _t16BC {
      string _t16C4 = "ERG:Error in evaluation on pos 2:";
      string _t16C5 = "\n";
      print (_t16C4, startPos15FF, _t16C5);
      string _t16C6 = "The errors are:";
      vec3 _t16C7 = prim -0026<$[3]> (up216B5, upCorrect216BA);
      real _t16C8 = prim |()|00B5<$[3]> (_t16C7);
      string _t16C9 = " and ";
      vec3 _t16CA = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16CB = prim |()|00B5<$[3]> (_t16CA);
      string _t16CC = "\n";
      print (_t16C6, _t16C8, _t16C9, _t16CB, _t16CC);
      string _t16CD = "The cells are:";
      Femdata: Mesh _t16CE = extractFem(intermed167A, Mesh);
      int _t16CF = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell _t16D0 = loadFem(MeshCell, _t16CE, _t16CF);
      string _t16D1 = " vs ";
      Femdata: MeshPos _t16D2 = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t16D3 = extractFem(_t16D2, Mesh);
      Femdata: MeshPos _t16D4 = func findPos041E (meshData03FD, altIntermed167B);
      int _t16D5 = extractFemItem(CellIndex(MeshPos), int, _t16D4);
      Femdata: MeshCell _t16D6 = loadFem(MeshCell, _t16D3, _t16D5);
      string _t16D7 = "\n";
      print (_t16CD, _t16D0, _t16D1, _t16D6, _t16D7);
    }
  }
}
collection {
  foreach x16D8 in startPoints040F {
    new gg (x16D8);
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData03FD;
input FemData:Space 0space0409_intermedateGlobal040A;
input FemData:FemFunc 0data040B_intermedateGlobal040C;
input int timeSteps040D = <default>;
input real timeEps040E = <default>;
input vec3[] startPoints040F;
input real stepSize0410 = <default>;
input int stepMax0411 = <default>;
input tensor[3,3] M0412;
input vec3 center0413;
constants {
  timeSteps040D = 32;
  timeEps040E = 0.1e-6;
  stepSize0410 = 0.1e-1;
  stepMax0411 = 300;
}
global Femdata: Space space0409;
global Femdata: FemFunc data040B;
global field(3)[3] F1561;
function Femdata: MeshPos#20 findPos041E (Femdata: Mesh mesh041F, vec3 pos0420)
{
  real _t0421 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0422 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0423 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0424 = [_t0421, _t0422, _t0423];
  newtonInt0425 = 0;
  cellInt0426 = extractFemItem(StartCell(Mesh), int, mesh041F);
  int _t0427 = extractFemItem(NumCell(Mesh), int, mesh041F);
  int _t0428 = 1;
  numCell0429 = prim -0024 (_t0427, _t0428);
  yayCells042A = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh041F, pos0420 : vec3);
  foreach cellItter042E in yayCells042A {
    real _t042B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn0424 = [_t042B, _t042C, _t042D];
    cellInt0426 = cellItter042E;
    field(3)[3] _t042F = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
    field(3)[3,3] _t0430 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042F);
    field(3)[3,3] _t0431 = prim inv015E<#∞; %3> (_t0430);
    real _t0432 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0433 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0435 = [_t0432, _t0433, _t0434];
    A0436 = prim @00A5<#∞; %3; $[3,3]> (_t0431, _t0435);
    int _t0437 = 0;
    int _t0438 = 16;
    int[] _t0439 = prim $range01C3 (_t0437, _t0438);
    foreach newtonItter0468 in _t0439 {
      field(3)[3] _t043A = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
      field(3)[3] _t043B = prim -002E<#∞; %3; $[3]> (_t043A, pos0420);
      field(3)[3] _t043C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0436, _t043B);
      delta043D = prim @00A5<#∞; %3; $[3]> (_t043C, xn0424);
      xn0424 = prim -0026<$[3]> (xn0424, delta043D);
      real _t043E = 0.1e-7;
      real _t043F = 0.1e-7;
      real _t0440 = prim *0034 (_t043E, _t043F);
      real _t0441 = prim •00CE<$[3]; $[3]; $[]> (delta043D, delta043D);
      bool _t0442 = prim >=007E (_t0440, _t0441);
      if _t0442 {
        real _t0443 = 0.1e1;
        real _t0444 = 0.1e-7;
        real _t0445 = prim +0017<$[]> (_t0443, _t0444);
        real _t0446 = 0.1e1;
        real _t0447 = 0.1e1;
        real _t0448 = 0.1e1;
        vec3 _t0449 = [_t0446, _t0447, _t0448];
        real _t044A = prim •00CE<$[3]; $[3]; $[]> (_t0449, xn0424);
        bool _t044B = prim >0080 (_t0445, _t044A);
        real _t044C = 0.1e-7;
        real _t044D = 0.1e-7;
        real _t044E = 0.1e-7;
        vec3 _t044F = [_t044C, _t044D, _t044E];
        vec3 _t0450 = prim +0017<$[3]> (_t044F, xn0424);
        real _t0451 = _t0450[0];
        real _t0452 = -0.e0;
        bool _t0453 = prim >0080 (_t0451, _t0452);
        real _t0454 = 0.1e-7;
        real _t0455 = 0.1e-7;
        real _t0456 = 0.1e-7;
        vec3 _t0457 = [_t0454, _t0455, _t0456];
        vec3 _t0458 = prim +0017<$[3]> (_t0457, xn0424);
        real _t0459 = _t0458[1];
        real _t045A = -0.e0;
        bool _t045B = prim >0080 (_t0459, _t045A);
        real _t045C = 0.1e-7;
        real _t045D = 0.1e-7;
        real _t045E = 0.1e-7;
        vec3 _t045F = [_t045C, _t045D, _t045E];
        vec3 _t0460 = prim +0017<$[3]> (_t045F, xn0424);
        real _t0461 = _t0460[2];
        real _t0462 = -0.e0;
        bool _t0463 = prim >0080 (_t0461, _t0462);
        bool _t0464 = prim $and01C4 (_t045B, _t0463);
        bool _t0465 = prim $and01C4 (_t0453, _t0464);
        bool _t0466 = prim $and01C4 (_t044B, _t0465);
        if _t0466 {
          Femdata: MeshPos _t0467 = extractFemItemN((mesh041F, cellInt0426, xn0424, pos0420),AllBuild(MeshPos),);
          return _t0467;
        }
      }
    }
  }
  Femdata: MeshPos _t0469 = extractFemItemN((mesh041F),InvalidBuild(MeshPos),);
  return _t0469;
}
function vec3#2 worldPos04DA (Femdata: MeshPos pos04D3)
{
  vec3 _t04DB = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
  int _t04DC = extractFemItem(CellIndex(MeshPos), int, pos04D3);
  Femdata: Mesh _t04DD = extractFem(pos04D3, Mesh);
  vec3 _t04DE;
  field(3)[3] _t16DB = femField(_t04DD,_t04DC,field(3)[3],Transform,);
  vec3 _t16DC = prim @00A5<#∞; %3; $[3]> (_t16DB, _t04DB);
  _t04DE = _t16DC;
  return _t04DE;
}
function Femdata: MeshPos#1 $exitPos04DF (Femdata: Mesh mesh04E0, int cellId04E1, vec3 refPos04E2, vec3 dPos04E3, real[2] time04E4)
{
  int _t04E5 = -1;
  real _t04E6 = time04E4[1];
  int _t04E7 = prim $r2i01B7 (_t04E6);
  int[2] _t04E9 = func nextCell404E8 (_t04E7, cellId04E1, mesh04E0);
  int _t04EA = 0;
  int _t04EB = prim $sub01C0<int; %2> (_t04E9, _t04EA);
  bool _t04EC = prim !=0086 (_t04E5, _t04EB);
  if _t04EC {
    string _t04ED = "face ";
    real _t04EE = time04E4[1];
    int _t04EF = prim $r2i01B7 (_t04EE);
    string _t04F0 = " to ";
    real _t04F1 = time04E4[1];
    int _t04F2 = prim $r2i01B7 (_t04F1);
    int[2] _t04F3 = func nextCell404E8 (_t04F2, cellId04E1, mesh04E0);
    int _t04F4 = 1;
    int _t04F5 = prim $sub01C0<int; %2> (_t04F3, _t04F4);
    string _t04F6 = "\n";
    string _t04F7 = "got: ";
    real _t04F8 = 0.1e1;
    real _t04F9 = 0.e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.e0;
    vec4 _t04FC = [_t04F8, _t04F9, _t04FA, _t04FB];
    real _t04FD = 0.e0;
    real _t04FE = 0.1e1;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec4 _t0501 = [_t04FD, _t04FE, _t04FF, _t0500];
    real _t0502 = 0.e0;
    real _t0503 = 0.e0;
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    vec4 _t0506 = [_t0502, _t0503, _t0504, _t0505];
    real _t0507 = 0.971445146547e-16;
    real _t0508 = 0.e0;
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    vec4 _t050B = [_t0507, _t0508, _t0509, _t050A];
    tensor[4,4] _t050C = [_t04FC, _t0501, _t0506, _t050B];
    real _t050D = 0.57735026919e0;
    real _t050E = 0.57735026919e0;
    real _t050F = 0.57735026919e0;
    real _t0510 = -0.57735026919e0;
    vec4 _t0511 = [_t050D, _t050E, _t050F, _t0510];
    real _t0512 = -0.333333333333e0;
    real _t0513 = 0.666666666667e0;
    real _t0514 = -0.333333333333e0;
    real _t0515 = 0.333333333333e0;
    vec4 _t0516 = [_t0512, _t0513, _t0514, _t0515];
    real _t0517 = -0.333333333333e0;
    real _t0518 = -0.333333333333e0;
    real _t0519 = 0.666666666667e0;
    real _t051A = 0.333333333333e0;
    vec4 _t051B = [_t0517, _t0518, _t0519, _t051A];
    real _t051C = 0.971445146547e-16;
    real _t051D = 0.e0;
    real _t051E = 0.e0;
    real _t051F = 0.1e1;
    vec4 _t0520 = [_t051C, _t051D, _t051E, _t051F];
    tensor[4,4] _t0521 = [_t0511, _t0516, _t051B, _t0520];
    real _t0522 = -0.333333333333e0;
    real _t0523 = 0.666666666667e0;
    real _t0524 = -0.333333333333e0;
    real _t0525 = 0.333333333333e0;
    vec4 _t0526 = [_t0522, _t0523, _t0524, _t0525];
    real _t0527 = -0.57735026919e0;
    real _t0528 = -0.57735026919e0;
    real _t0529 = -0.57735026919e0;
    real _t052A = 0.57735026919e0;
    vec4 _t052B = [_t0527, _t0528, _t0529, _t052A];
    real _t052C = -0.333333333333e0;
    real _t052D = -0.333333333333e0;
    real _t052E = 0.666666666667e0;
    real _t052F = 0.333333333333e0;
    vec4 _t0530 = [_t052C, _t052D, _t052E, _t052F];
    real _t0531 = 0.971445146547e-16;
    real _t0532 = 0.e0;
    real _t0533 = 0.e0;
    real _t0534 = 0.1e1;
    vec4 _t0535 = [_t0531, _t0532, _t0533, _t0534];
    tensor[4,4] _t0536 = [_t0526, _t052B, _t0530, _t0535];
    real _t0537 = -0.333333333333e0;
    real _t0538 = 0.666666666667e0;
    real _t0539 = -0.333333333333e0;
    real _t053A = 0.333333333333e0;
    vec4 _t053B = [_t0537, _t0538, _t0539, _t053A];
    real _t053C = -0.333333333333e0;
    real _t053D = -0.333333333333e0;
    real _t053E = 0.666666666667e0;
    real _t053F = 0.333333333333e0;
    vec4 _t0540 = [_t053C, _t053D, _t053E, _t053F];
    real _t0541 = 0.57735026919e0;
    real _t0542 = 0.57735026919e0;
    real _t0543 = 0.57735026919e0;
    real _t0544 = -0.57735026919e0;
    vec4 _t0545 = [_t0541, _t0542, _t0543, _t0544];
    real _t0546 = 0.971445146547e-16;
    real _t0547 = 0.e0;
    real _t0548 = 0.e0;
    real _t0549 = 0.1e1;
    vec4 _t054A = [_t0546, _t0547, _t0548, _t0549];
    tensor[4,4] _t054B = [_t053B, _t0540, _t0545, _t054A];
    tensor[4,4][4] _t054C = {_t050C, _t0521, _t0536, _t054B};
    real _t054D = 0.57735026919e0;
    real _t054E = -0.1e1;
    real _t054F = -0.1e1;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    real _t0552 = 0.57735026919e0;
    real _t0553 = 0.1e1;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    vec4 _t0556 = [_t0552, _t0553, _t0554, _t0555];
    real _t0557 = 0.57735026919e0;
    real _t0558 = 0.e0;
    real _t0559 = 0.1e1;
    real _t055A = 0.e0;
    vec4 _t055B = [_t0557, _t0558, _t0559, _t055A];
    real _t055C = 0.e0;
    real _t055D = 0.e0;
    real _t055E = 0.e0;
    real _t055F = 0.1e1;
    vec4 _t0560 = [_t055C, _t055D, _t055E, _t055F];
    tensor[4,4] _t0561 = [_t0551, _t0556, _t055B, _t0560];
    real _t0562 = 0.1e1;
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.e0;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    real _t0567 = 0.e0;
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    vec4 _t056B = [_t0567, _t0568, _t0569, _t056A];
    real _t056C = 0.e0;
    real _t056D = 0.e0;
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    vec4 _t0570 = [_t056C, _t056D, _t056E, _t056F];
    real _t0571 = 0.e0;
    real _t0572 = 0.e0;
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    vec4 _t0575 = [_t0571, _t0572, _t0573, _t0574];
    tensor[4,4] _t0576 = [_t0566, _t056B, _t0570, _t0575];
    real _t0577 = 0.e0;
    real _t0578 = 0.1e1;
    real _t0579 = 0.e0;
    real _t057A = 0.e0;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    real _t057C = -0.1e1;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    vec4 _t0580 = [_t057C, _t057D, _t057E, _t057F];
    real _t0581 = 0.e0;
    real _t0582 = 0.e0;
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    vec4 _t0585 = [_t0581, _t0582, _t0583, _t0584];
    real _t0586 = 0.e0;
    real _t0587 = 0.e0;
    real _t0588 = 0.e0;
    real _t0589 = 0.1e1;
    vec4 _t058A = [_t0586, _t0587, _t0588, _t0589];
    tensor[4,4] _t058B = [_t057B, _t0580, _t0585, _t058A];
    real _t058C = 0.e0;
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    vec4 _t0590 = [_t058C, _t058D, _t058E, _t058F];
    real _t0591 = 0.e0;
    real _t0592 = 0.e0;
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    vec4 _t0595 = [_t0591, _t0592, _t0593, _t0594];
    real _t0596 = 0.1e1;
    real _t0597 = 0.e0;
    real _t0598 = 0.e0;
    real _t0599 = 0.e0;
    vec4 _t059A = [_t0596, _t0597, _t0598, _t0599];
    real _t059B = 0.e0;
    real _t059C = 0.e0;
    real _t059D = 0.e0;
    real _t059E = 0.1e1;
    vec4 _t059F = [_t059B, _t059C, _t059D, _t059E];
    tensor[4,4] _t05A0 = [_t0590, _t0595, _t059A, _t059F];
    tensor[4,4][4] _t05A1 = {_t0561, _t0576, _t058B, _t05A0};
    real _t05A2 = -0.1e1;
    real _t05A3 = -0.57735026919e0;
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.57735026919e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    vec4 _t05AB = [_t05A7, _t05A8, _t05A9, _t05AA];
    real _t05AC = 0.e0;
    real _t05AD = -0.57735026919e0;
    real _t05AE = 0.1e1;
    real _t05AF = 0.e0;
    vec4 _t05B0 = [_t05AC, _t05AD, _t05AE, _t05AF];
    real _t05B1 = 0.e0;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    vec4 _t05B5 = [_t05B1, _t05B2, _t05B3, _t05B4];
    tensor[4,4] _t05B6 = [_t05A6, _t05AB, _t05B0, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.e0;
    real _t05BA = 0.e0;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    real _t05BC = 0.1e1;
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    vec4 _t05C0 = [_t05BC, _t05BD, _t05BE, _t05BF];
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    vec4 _t05C5 = [_t05C1, _t05C2, _t05C3, _t05C4];
    real _t05C6 = 0.e0;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.1e1;
    vec4 _t05CA = [_t05C6, _t05C7, _t05C8, _t05C9];
    tensor[4,4] _t05CB = [_t05BB, _t05C0, _t05C5, _t05CA];
    real _t05CC = 0.1e1;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.e0;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    vec4 _t05D5 = [_t05D1, _t05D2, _t05D3, _t05D4];
    real _t05D6 = 0.e0;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    vec4 _t05DA = [_t05D6, _t05D7, _t05D8, _t05D9];
    real _t05DB = 0.e0;
    real _t05DC = 0.e0;
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    vec4 _t05DF = [_t05DB, _t05DC, _t05DD, _t05DE];
    tensor[4,4] _t05E0 = [_t05D0, _t05D5, _t05DA, _t05DF];
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    vec4 _t05E5 = [_t05E1, _t05E2, _t05E3, _t05E4];
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    vec4 _t05EA = [_t05E6, _t05E7, _t05E8, _t05E9];
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    vec4 _t05EF = [_t05EB, _t05EC, _t05ED, _t05EE];
    real _t05F0 = 0.e0;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    real _t05F3 = 0.1e1;
    vec4 _t05F4 = [_t05F0, _t05F1, _t05F2, _t05F3];
    tensor[4,4] _t05F5 = [_t05E5, _t05EA, _t05EF, _t05F4];
    tensor[4,4][4] _t05F6 = {_t05B6, _t05CB, _t05E0, _t05F5};
    real _t05F7 = -0.1e1;
    real _t05F8 = -0.1e1;
    real _t05F9 = 0.57735026919e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = 0.e0;
    real _t05FE = 0.57735026919e0;
    real _t05FF = 0.e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.1e1;
    real _t0603 = 0.57735026919e0;
    real _t0604 = 0.e0;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    real _t0606 = 0.e0;
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    vec4 _t060A = [_t0606, _t0607, _t0608, _t0609];
    tensor[4,4] _t060B = [_t05FB, _t0600, _t0605, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = 0.e0;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.1e1;
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    vec4 _t061F = [_t061B, _t061C, _t061D, _t061E];
    tensor[4,4] _t0620 = [_t0610, _t0615, _t061A, _t061F];
    real _t0621 = 0.1e1;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.e0;
    real _t0627 = 0.e0;
    real _t0628 = -0.1e1;
    real _t0629 = 0.e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.1e1;
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    real _t0630 = 0.e0;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    vec4 _t0634 = [_t0630, _t0631, _t0632, _t0633];
    tensor[4,4] _t0635 = [_t0625, _t062A, _t062F, _t0634];
    real _t0636 = 0.1e1;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    vec4 _t063F = [_t063B, _t063C, _t063D, _t063E];
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    vec4 _t0644 = [_t0640, _t0641, _t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    vec4 _t0649 = [_t0645, _t0646, _t0647, _t0648];
    tensor[4,4] _t064A = [_t063A, _t063F, _t0644, _t0649];
    tensor[4,4][4] _t064B = {_t060B, _t0620, _t0635, _t064A};
    tensor[4,4][4][4] _t064C = {_t054C, _t05A1, _t05F6, _t064B};
    real _t064D = time04E4[1];
    int _t064E = prim $r2i01B7 (_t064D);
    tensor[4,4][4] _t064F = prim $sub01C0<tensor[4,4][4]; %4> (_t064C, _t064E);
    real _t0650 = time04E4[1];
    int _t0651 = prim $r2i01B7 (_t0650);
    int[2] _t0652 = func nextCell404E8 (_t0651, cellId04E1, mesh04E0);
    int _t0653 = 1;
    int _t0654 = prim $sub01C0<int; %2> (_t0652, _t0653);
    tensor[4,4] _t0655 = prim $sub01C0<tensor[4,4]; %4> (_t064F, _t0654);
    string _t0656 = "\n";
    print (_t04ED, _t04EF, _t04F0, _t04F5, _t04F6, _t04F7, _t0655, _t0656);
    real _t0657 = time04E4[1];
    int _t0658 = prim $r2i01B7 (_t0657);
    int[2] _t0659 = func nextCell404E8 (_t0658, cellId04E1, mesh04E0);
    int _t065A = 0;
    int _t065B = prim $sub01C0<int; %2> (_t0659, _t065A);
    real _t065C = 0.1e1;
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.1e1;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.971445146547e-16;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.57735026919e0;
    real _t0672 = 0.57735026919e0;
    real _t0673 = 0.57735026919e0;
    real _t0674 = -0.57735026919e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = -0.333333333333e0;
    real _t0677 = 0.666666666667e0;
    real _t0678 = -0.333333333333e0;
    real _t0679 = 0.333333333333e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = -0.333333333333e0;
    real _t067C = -0.333333333333e0;
    real _t067D = 0.666666666667e0;
    real _t067E = 0.333333333333e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.971445146547e-16;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = -0.333333333333e0;
    real _t0687 = 0.666666666667e0;
    real _t0688 = -0.333333333333e0;
    real _t0689 = 0.333333333333e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = -0.57735026919e0;
    real _t068C = -0.57735026919e0;
    real _t068D = -0.57735026919e0;
    real _t068E = 0.57735026919e0;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = -0.333333333333e0;
    real _t0691 = -0.333333333333e0;
    real _t0692 = 0.666666666667e0;
    real _t0693 = 0.333333333333e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.971445146547e-16;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = -0.333333333333e0;
    real _t069C = 0.666666666667e0;
    real _t069D = -0.333333333333e0;
    real _t069E = 0.333333333333e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = -0.333333333333e0;
    real _t06A1 = -0.333333333333e0;
    real _t06A2 = 0.666666666667e0;
    real _t06A3 = 0.333333333333e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.57735026919e0;
    real _t06A6 = 0.57735026919e0;
    real _t06A7 = 0.57735026919e0;
    real _t06A8 = -0.57735026919e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.971445146547e-16;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][4] _t06B0 = {_t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.57735026919e0;
    real _t06B2 = -0.1e1;
    real _t06B3 = -0.1e1;
    real _t06B4 = 0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.57735026919e0;
    real _t06B7 = 0.1e1;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.57735026919e0;
    real _t06BC = 0.e0;
    real _t06BD = 0.1e1;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.e0;
    real _t06CC = 0.1e1;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.e0;
    real _t06DC = 0.1e1;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = -0.1e1;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    tensor[4,4][4] _t0705 = {_t06C5, _t06DA, _t06EF, _t0704};
    real _t0706 = -0.1e1;
    real _t0707 = -0.57735026919e0;
    real _t0708 = -0.1e1;
    real _t0709 = 0.1e1;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.1e1;
    real _t070C = -0.57735026919e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = -0.57735026919e0;
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    tensor[4,4] _t071A = [_t070A, _t070F, _t0714, _t0719];
    real _t071B = 0.e0;
    real _t071C = -0.1e1;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.1e1;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.1e1;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    tensor[4,4] _t072F = [_t071F, _t0724, _t0729, _t072E];
    real _t0730 = 0.1e1;
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.1e1;
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = 0.e0;
    real _t0750 = -0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    tensor[4,4][4] _t075A = {_t071A, _t072F, _t0744, _t0759};
    real _t075B = -0.1e1;
    real _t075C = -0.1e1;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.1e1;
    real _t0761 = 0.e0;
    real _t0762 = 0.57735026919e0;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.57735026919e0;
    real _t0768 = 0.e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    tensor[4,4] _t076F = [_t075F, _t0764, _t0769, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    tensor[4,4] _t0784 = [_t0774, _t0779, _t077E, _t0783];
    real _t0785 = 0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = -0.1e1;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.1e1;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    tensor[4,4] _t0799 = [_t0789, _t078E, _t0793, _t0798];
    real _t079A = 0.1e1;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.e0;
    vec4 _t079E = [_t079A, _t079B, _t079C, _t079D];
    real _t079F = 0.e0;
    real _t07A0 = 0.1e1;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    vec4 _t07A3 = [_t079F, _t07A0, _t07A1, _t07A2];
    real _t07A4 = 0.e0;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.1e1;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    real _t07AC = 0.1e1;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    tensor[4,4] _t07AE = [_t079E, _t07A3, _t07A8, _t07AD];
    tensor[4,4][4] _t07AF = {_t076F, _t0784, _t0799, _t07AE};
    tensor[4,4][4][4] _t07B0 = {_t06B0, _t0705, _t075A, _t07AF};
    real _t07B1 = time04E4[1];
    int _t07B2 = prim $r2i01B7 (_t07B1);
    tensor[4,4][4] _t07B3 = prim $sub01C0<tensor[4,4][4]; %4> (_t07B0, _t07B2);
    real _t07B4 = time04E4[1];
    int _t07B5 = prim $r2i01B7 (_t07B4);
    int[2] _t07B6 = func nextCell404E8 (_t07B5, cellId04E1, mesh04E0);
    int _t07B7 = 1;
    int _t07B8 = prim $sub01C0<int; %2> (_t07B6, _t07B7);
    tensor[4,4] _t07B9 = prim $sub01C0<tensor[4,4]; %4> (_t07B3, _t07B8);
    real _t07BA = time04E4[0];
    vec3 _t07BB = prim *0036<$[3]> (_t07BA, dPos04E3);
    vec3 _t07BC = prim +0017<$[3]> (_t07BB, refPos04E2);
    real _t07BD = _t07BC[0];
    real _t07BE = time04E4[0];
    vec3 _t07BF = prim *0036<$[3]> (_t07BE, dPos04E3);
    vec3 _t07C0 = prim +0017<$[3]> (_t07BF, refPos04E2);
    real _t07C1 = _t07C0[1];
    real _t07C2 = time04E4[0];
    vec3 _t07C3 = prim *0036<$[3]> (_t07C2, dPos04E3);
    vec3 _t07C4 = prim +0017<$[3]> (_t07C3, refPos04E2);
    real _t07C5 = _t07C4[2];
    real _t07C6 = 0.1e1;
    vec4 _t07C7 = [_t07BD, _t07C1, _t07C5, _t07C6];
    vec4 _t07C8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07B9, _t07C7);
    real _t07C9 = _t07C8[0];
    real _t07CA = 0.1e1;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.1e1;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    vec4 _t07D8 = [_t07D4, _t07D5, _t07D6, _t07D7];
    real _t07D9 = 0.971445146547e-16;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    tensor[4,4] _t07DE = [_t07CE, _t07D3, _t07D8, _t07DD];
    real _t07DF = 0.57735026919e0;
    real _t07E0 = 0.57735026919e0;
    real _t07E1 = 0.57735026919e0;
    real _t07E2 = -0.57735026919e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = -0.333333333333e0;
    real _t07E5 = 0.666666666667e0;
    real _t07E6 = -0.333333333333e0;
    real _t07E7 = 0.333333333333e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.333333333333e0;
    real _t07EA = -0.333333333333e0;
    real _t07EB = 0.666666666667e0;
    real _t07EC = 0.333333333333e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.971445146547e-16;
    real _t07EF = 0.e0;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.1e1;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    tensor[4,4] _t07F3 = [_t07E3, _t07E8, _t07ED, _t07F2];
    real _t07F4 = -0.333333333333e0;
    real _t07F5 = 0.666666666667e0;
    real _t07F6 = -0.333333333333e0;
    real _t07F7 = 0.333333333333e0;
    vec4 _t07F8 = [_t07F4, _t07F5, _t07F6, _t07F7];
    real _t07F9 = -0.57735026919e0;
    real _t07FA = -0.57735026919e0;
    real _t07FB = -0.57735026919e0;
    real _t07FC = 0.57735026919e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.333333333333e0;
    real _t07FF = -0.333333333333e0;
    real _t0800 = 0.666666666667e0;
    real _t0801 = 0.333333333333e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.971445146547e-16;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    tensor[4,4] _t0808 = [_t07F8, _t07FD, _t0802, _t0807];
    real _t0809 = -0.333333333333e0;
    real _t080A = 0.666666666667e0;
    real _t080B = -0.333333333333e0;
    real _t080C = 0.333333333333e0;
    vec4 _t080D = [_t0809, _t080A, _t080B, _t080C];
    real _t080E = -0.333333333333e0;
    real _t080F = -0.333333333333e0;
    real _t0810 = 0.666666666667e0;
    real _t0811 = 0.333333333333e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.57735026919e0;
    real _t0814 = 0.57735026919e0;
    real _t0815 = 0.57735026919e0;
    real _t0816 = -0.57735026919e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.971445146547e-16;
    real _t0819 = 0.e0;
    real _t081A = 0.e0;
    real _t081B = 0.1e1;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    tensor[4,4] _t081D = [_t080D, _t0812, _t0817, _t081C];
    tensor[4,4][4] _t081E = {_t07DE, _t07F3, _t0808, _t081D};
    real _t081F = 0.57735026919e0;
    real _t0820 = -0.1e1;
    real _t0821 = -0.1e1;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = 0.57735026919e0;
    real _t0825 = 0.1e1;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.57735026919e0;
    real _t082A = 0.e0;
    real _t082B = 0.1e1;
    real _t082C = 0.e0;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    tensor[4,4] _t0833 = [_t0823, _t0828, _t082D, _t0832];
    real _t0834 = 0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = 0.e0;
    real _t083A = 0.1e1;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = 0.e0;
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    tensor[4,4] _t0848 = [_t0838, _t083D, _t0842, _t0847];
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    real _t085B = 0.1e1;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    tensor[4,4] _t085D = [_t084D, _t0852, _t0857, _t085C];
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    vec4 _t0862 = [_t085E, _t085F, _t0860, _t0861];
    real _t0863 = 0.e0;
    real _t0864 = 0.e0;
    real _t0865 = 0.1e1;
    real _t0866 = 0.e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.1e1;
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.e0;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.1e1;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    tensor[4,4] _t0872 = [_t0862, _t0867, _t086C, _t0871];
    tensor[4,4][4] _t0873 = {_t0833, _t0848, _t085D, _t0872};
    real _t0874 = -0.1e1;
    real _t0875 = -0.57735026919e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.1e1;
    real _t087A = -0.57735026919e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = -0.57735026919e0;
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    vec4 _t0887 = [_t0883, _t0884, _t0885, _t0886];
    tensor[4,4] _t0888 = [_t0878, _t087D, _t0882, _t0887];
    real _t0889 = 0.e0;
    real _t088A = -0.1e1;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    vec4 _t089C = [_t0898, _t0899, _t089A, _t089B];
    tensor[4,4] _t089D = [_t088D, _t0892, _t0897, _t089C];
    real _t089E = 0.1e1;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.e0;
    real _t08A4 = 0.1e1;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    real _t08AD = 0.e0;
    real _t08AE = 0.e0;
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    vec4 _t08B1 = [_t08AD, _t08AE, _t08AF, _t08B0];
    tensor[4,4] _t08B2 = [_t08A2, _t08A7, _t08AC, _t08B1];
    real _t08B3 = 0.1e1;
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    vec4 _t08B7 = [_t08B3, _t08B4, _t08B5, _t08B6];
    real _t08B8 = 0.e0;
    real _t08B9 = 0.e0;
    real _t08BA = 0.1e1;
    real _t08BB = 0.e0;
    vec4 _t08BC = [_t08B8, _t08B9, _t08BA, _t08BB];
    real _t08BD = 0.e0;
    real _t08BE = -0.1e1;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    tensor[4,4] _t08C7 = [_t08B7, _t08BC, _t08C1, _t08C6];
    tensor[4,4][4] _t08C8 = {_t0888, _t089D, _t08B2, _t08C7};
    real _t08C9 = -0.1e1;
    real _t08CA = -0.1e1;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.1e1;
    real _t08CF = 0.e0;
    real _t08D0 = 0.57735026919e0;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.1e1;
    real _t08D5 = 0.57735026919e0;
    real _t08D6 = 0.e0;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.1e1;
    vec4 _t08DC = [_t08D8, _t08D9, _t08DA, _t08DB];
    tensor[4,4] _t08DD = [_t08CD, _t08D2, _t08D7, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.1e1;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.1e1;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    vec4 _t08F1 = [_t08ED, _t08EE, _t08EF, _t08F0];
    tensor[4,4] _t08F2 = [_t08E2, _t08E7, _t08EC, _t08F1];
    real _t08F3 = 0.1e1;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.e0;
    real _t08FA = -0.1e1;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    vec4 _t0906 = [_t0902, _t0903, _t0904, _t0905];
    tensor[4,4] _t0907 = [_t08F7, _t08FC, _t0901, _t0906];
    real _t0908 = 0.1e1;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.e0;
    vec4 _t090C = [_t0908, _t0909, _t090A, _t090B];
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    vec4 _t0911 = [_t090D, _t090E, _t090F, _t0910];
    real _t0912 = 0.e0;
    real _t0913 = 0.e0;
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    vec4 _t0916 = [_t0912, _t0913, _t0914, _t0915];
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    vec4 _t091B = [_t0917, _t0918, _t0919, _t091A];
    tensor[4,4] _t091C = [_t090C, _t0911, _t0916, _t091B];
    tensor[4,4][4] _t091D = {_t08DD, _t08F2, _t0907, _t091C};
    tensor[4,4][4][4] _t091E = {_t081E, _t0873, _t08C8, _t091D};
    real _t091F = time04E4[1];
    int _t0920 = prim $r2i01B7 (_t091F);
    tensor[4,4][4] _t0921 = prim $sub01C0<tensor[4,4][4]; %4> (_t091E, _t0920);
    real _t0922 = time04E4[1];
    int _t0923 = prim $r2i01B7 (_t0922);
    int[2] _t0924 = func nextCell404E8 (_t0923, cellId04E1, mesh04E0);
    int _t0925 = 1;
    int _t0926 = prim $sub01C0<int; %2> (_t0924, _t0925);
    tensor[4,4] _t0927 = prim $sub01C0<tensor[4,4]; %4> (_t0921, _t0926);
    real _t0928 = time04E4[0];
    vec3 _t0929 = prim *0036<$[3]> (_t0928, dPos04E3);
    vec3 _t092A = prim +0017<$[3]> (_t0929, refPos04E2);
    real _t092B = _t092A[0];
    real _t092C = time04E4[0];
    vec3 _t092D = prim *0036<$[3]> (_t092C, dPos04E3);
    vec3 _t092E = prim +0017<$[3]> (_t092D, refPos04E2);
    real _t092F = _t092E[1];
    real _t0930 = time04E4[0];
    vec3 _t0931 = prim *0036<$[3]> (_t0930, dPos04E3);
    vec3 _t0932 = prim +0017<$[3]> (_t0931, refPos04E2);
    real _t0933 = _t0932[2];
    real _t0934 = 0.1e1;
    vec4 _t0935 = [_t092B, _t092F, _t0933, _t0934];
    vec4 _t0936 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0927, _t0935);
    real _t0937 = _t0936[1];
    real _t0938 = 0.1e1;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.1e1;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    vec4 _t0946 = [_t0942, _t0943, _t0944, _t0945];
    real _t0947 = 0.971445146547e-16;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    vec4 _t094B = [_t0947, _t0948, _t0949, _t094A];
    tensor[4,4] _t094C = [_t093C, _t0941, _t0946, _t094B];
    real _t094D = 0.57735026919e0;
    real _t094E = 0.57735026919e0;
    real _t094F = 0.57735026919e0;
    real _t0950 = -0.57735026919e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = -0.333333333333e0;
    real _t0953 = 0.666666666667e0;
    real _t0954 = -0.333333333333e0;
    real _t0955 = 0.333333333333e0;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    real _t0957 = -0.333333333333e0;
    real _t0958 = -0.333333333333e0;
    real _t0959 = 0.666666666667e0;
    real _t095A = 0.333333333333e0;
    vec4 _t095B = [_t0957, _t0958, _t0959, _t095A];
    real _t095C = 0.971445146547e-16;
    real _t095D = 0.e0;
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    vec4 _t0960 = [_t095C, _t095D, _t095E, _t095F];
    tensor[4,4] _t0961 = [_t0951, _t0956, _t095B, _t0960];
    real _t0962 = -0.333333333333e0;
    real _t0963 = 0.666666666667e0;
    real _t0964 = -0.333333333333e0;
    real _t0965 = 0.333333333333e0;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    real _t0967 = -0.57735026919e0;
    real _t0968 = -0.57735026919e0;
    real _t0969 = -0.57735026919e0;
    real _t096A = 0.57735026919e0;
    vec4 _t096B = [_t0967, _t0968, _t0969, _t096A];
    real _t096C = -0.333333333333e0;
    real _t096D = -0.333333333333e0;
    real _t096E = 0.666666666667e0;
    real _t096F = 0.333333333333e0;
    vec4 _t0970 = [_t096C, _t096D, _t096E, _t096F];
    real _t0971 = 0.971445146547e-16;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.1e1;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    tensor[4,4] _t0976 = [_t0966, _t096B, _t0970, _t0975];
    real _t0977 = -0.333333333333e0;
    real _t0978 = 0.666666666667e0;
    real _t0979 = -0.333333333333e0;
    real _t097A = 0.333333333333e0;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    real _t097C = -0.333333333333e0;
    real _t097D = -0.333333333333e0;
    real _t097E = 0.666666666667e0;
    real _t097F = 0.333333333333e0;
    vec4 _t0980 = [_t097C, _t097D, _t097E, _t097F];
    real _t0981 = 0.57735026919e0;
    real _t0982 = 0.57735026919e0;
    real _t0983 = 0.57735026919e0;
    real _t0984 = -0.57735026919e0;
    vec4 _t0985 = [_t0981, _t0982, _t0983, _t0984];
    real _t0986 = 0.971445146547e-16;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.1e1;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    tensor[4,4] _t098B = [_t097B, _t0980, _t0985, _t098A];
    tensor[4,4][4] _t098C = {_t094C, _t0961, _t0976, _t098B};
    real _t098D = 0.57735026919e0;
    real _t098E = -0.1e1;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.57735026919e0;
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.57735026919e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    vec4 _t09A0 = [_t099C, _t099D, _t099E, _t099F];
    tensor[4,4] _t09A1 = [_t0991, _t0996, _t099B, _t09A0];
    real _t09A2 = 0.1e1;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.e0;
    real _t09A8 = 0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    real _t09B1 = 0.e0;
    real _t09B2 = 0.e0;
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    vec4 _t09B5 = [_t09B1, _t09B2, _t09B3, _t09B4];
    tensor[4,4] _t09B6 = [_t09A6, _t09AB, _t09B0, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    real _t09BC = -0.1e1;
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    vec4 _t09C0 = [_t09BC, _t09BD, _t09BE, _t09BF];
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    vec4 _t09C5 = [_t09C1, _t09C2, _t09C3, _t09C4];
    real _t09C6 = 0.e0;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    real _t09C9 = 0.1e1;
    vec4 _t09CA = [_t09C6, _t09C7, _t09C8, _t09C9];
    tensor[4,4] _t09CB = [_t09BB, _t09C0, _t09C5, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    real _t09D1 = 0.e0;
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    vec4 _t09D5 = [_t09D1, _t09D2, _t09D3, _t09D4];
    real _t09D6 = 0.1e1;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    vec4 _t09DA = [_t09D6, _t09D7, _t09D8, _t09D9];
    real _t09DB = 0.e0;
    real _t09DC = 0.e0;
    real _t09DD = 0.e0;
    real _t09DE = 0.1e1;
    vec4 _t09DF = [_t09DB, _t09DC, _t09DD, _t09DE];
    tensor[4,4] _t09E0 = [_t09D0, _t09D5, _t09DA, _t09DF];
    tensor[4,4][4] _t09E1 = {_t09A1, _t09B6, _t09CB, _t09E0};
    real _t09E2 = -0.1e1;
    real _t09E3 = -0.57735026919e0;
    real _t09E4 = -0.1e1;
    real _t09E5 = 0.1e1;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.1e1;
    real _t09E8 = -0.57735026919e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.57735026919e0;
    real _t09EE = 0.1e1;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.e0;
    real _t09F2 = 0.e0;
    real _t09F3 = 0.e0;
    real _t09F4 = 0.1e1;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    tensor[4,4] _t09F6 = [_t09E6, _t09EB, _t09F0, _t09F5];
    real _t09F7 = 0.e0;
    real _t09F8 = -0.1e1;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.1e1;
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    real _t0A06 = 0.e0;
    real _t0A07 = 0.e0;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.1e1;
    vec4 _t0A0A = [_t0A06, _t0A07, _t0A08, _t0A09];
    tensor[4,4] _t0A0B = [_t09FB, _t0A00, _t0A05, _t0A0A];
    real _t0A0C = 0.1e1;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    vec4 _t0A1F = [_t0A1B, _t0A1C, _t0A1D, _t0A1E];
    tensor[4,4] _t0A20 = [_t0A10, _t0A15, _t0A1A, _t0A1F];
    real _t0A21 = 0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = -0.1e1;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    real _t0A30 = 0.e0;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    vec4 _t0A34 = [_t0A30, _t0A31, _t0A32, _t0A33];
    tensor[4,4] _t0A35 = [_t0A25, _t0A2A, _t0A2F, _t0A34];
    tensor[4,4][4] _t0A36 = {_t09F6, _t0A0B, _t0A20, _t0A35};
    real _t0A37 = -0.1e1;
    real _t0A38 = -0.1e1;
    real _t0A39 = 0.57735026919e0;
    real _t0A3A = 0.1e1;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.57735026919e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.1e1;
    real _t0A43 = 0.57735026919e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.e0;
    real _t0A49 = 0.1e1;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    tensor[4,4] _t0A4B = [_t0A3B, _t0A40, _t0A45, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.e0;
    real _t0A5E = 0.1e1;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    tensor[4,4] _t0A60 = [_t0A50, _t0A55, _t0A5A, _t0A5F];
    real _t0A61 = 0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = -0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.1e1;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.1e1;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    tensor[4,4] _t0A75 = [_t0A65, _t0A6A, _t0A6F, _t0A74];
    real _t0A76 = 0.1e1;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.1e1;
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    real _t0A85 = 0.e0;
    real _t0A86 = 0.e0;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.1e1;
    vec4 _t0A89 = [_t0A85, _t0A86, _t0A87, _t0A88];
    tensor[4,4] _t0A8A = [_t0A7A, _t0A7F, _t0A84, _t0A89];
    tensor[4,4][4] _t0A8B = {_t0A4B, _t0A60, _t0A75, _t0A8A};
    tensor[4,4][4][4] _t0A8C = {_t098C, _t09E1, _t0A36, _t0A8B};
    real _t0A8D = time04E4[1];
    int _t0A8E = prim $r2i01B7 (_t0A8D);
    tensor[4,4][4] _t0A8F = prim $sub01C0<tensor[4,4][4]; %4> (_t0A8C, _t0A8E);
    real _t0A90 = time04E4[1];
    int _t0A91 = prim $r2i01B7 (_t0A90);
    int[2] _t0A92 = func nextCell404E8 (_t0A91, cellId04E1, mesh04E0);
    int _t0A93 = 1;
    int _t0A94 = prim $sub01C0<int; %2> (_t0A92, _t0A93);
    tensor[4,4] _t0A95 = prim $sub01C0<tensor[4,4]; %4> (_t0A8F, _t0A94);
    real _t0A96 = time04E4[0];
    vec3 _t0A97 = prim *0036<$[3]> (_t0A96, dPos04E3);
    vec3 _t0A98 = prim +0017<$[3]> (_t0A97, refPos04E2);
    real _t0A99 = _t0A98[0];
    real _t0A9A = time04E4[0];
    vec3 _t0A9B = prim *0036<$[3]> (_t0A9A, dPos04E3);
    vec3 _t0A9C = prim +0017<$[3]> (_t0A9B, refPos04E2);
    real _t0A9D = _t0A9C[1];
    real _t0A9E = time04E4[0];
    vec3 _t0A9F = prim *0036<$[3]> (_t0A9E, dPos04E3);
    vec3 _t0AA0 = prim +0017<$[3]> (_t0A9F, refPos04E2);
    real _t0AA1 = _t0AA0[2];
    real _t0AA2 = 0.1e1;
    vec4 _t0AA3 = [_t0A99, _t0A9D, _t0AA1, _t0AA2];
    vec4 _t0AA4 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A95, _t0AA3);
    real _t0AA5 = _t0AA4[2];
    vec3 _t0AA6 = [_t07C9, _t0937, _t0AA5];
    real _t0AA7 = time04E4[1];
    int _t0AA8 = prim $r2i01B7 (_t0AA7);
    int[2] _t0AA9 = func nextCell404E8 (_t0AA8, cellId04E1, mesh04E0);
    int _t0AAA = 1;
    int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
    Femdata: MeshPos _t0AAC = extractFemItemN((mesh04E0, _t065B, _t0AA6, _t0AAB),RefBuild(Mesh),);
    return _t0AAC;
  } else {
    real _t0AAD = time04E4[0];
    vec3 _t0AAE = prim *0036<$[3]> (_t0AAD, dPos04E3);
    vec3 _t0AAF = prim +0017<$[3]> (_t0AAE, refPos04E2);
    Femdata: MeshPos _t0AB0 = extractFemItemN((mesh04E0, _t0AAF),InvalidBuildBoundary(MeshPos),);
    return _t0AB0;
  }
}
function int[2]#8 nextCell404E8 (int faceIdx0AB1, int cell0AB2, Femdata: Mesh mesh0AB3)
{
  int _t0AB4 = -1;
  bool _t0AB5 = prim ==0082 (faceIdx0AB1, _t0AB4);
  if _t0AB5 {
    int _t0AB6 = -1;
    int _t0AB7 = -1;
    int[2] _t0AB8 = {_t0AB6, _t0AB7};
    return _t0AB8;
  } else {
    int _t0AB9 = 8;
    int _t0ABA = prim *0033 (cell0AB2, _t0AB9);
    int _t0ABB = 2;
    int _t0ABC = prim *0033 (faceIdx0AB1, _t0ABB);
    int _t0ABD = prim +0015 (_t0ABA, _t0ABC);
    int[2] _t0ABE = extractFemItemN((mesh0AB3, _t0ABD),CellFaceCell(Mesh),);
    return _t0ABE;
  }
}
function vec2#2 _exit1099 (vec3 refPos0AC0, vec3 dPos0AC1, int i109A)
{
  real time109B = +inf;
  int face109C = -1;
  real faceTime109D = -inf;
  string _t109E = "\ntest :";
  real _t109F = 0.57735026919e0;
  real _t10A0 = 0.57735026919e0;
  real _t10A1 = 0.57735026919e0;
  real _t10A2 = 0.57735026919e0;
  vec3 _t10A3 = [_t10A0, _t10A1, _t10A2];
  real _t10A4 = prim •00CE<$[3]; $[3]; $[]> (_t10A3, refPos0AC0);
  real _t10A5 = prim -0026<$[]> (_t109F, _t10A4);
  real _t10A6 = 0.57735026919e0;
  real _t10A7 = 0.57735026919e0;
  real _t10A8 = 0.57735026919e0;
  vec3 _t10A9 = [_t10A6, _t10A7, _t10A8];
  real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, dPos0AC1);
  real _t10AB = prim /0055 (_t10A5, _t10AA);
  string _t10AC = " test2: ";
  real _t10AD = 0.57735026919e0;
  real _t10AE = 0.57735026919e0;
  real _t10AF = 0.57735026919e0;
  vec3 _t10B0 = [_t10AD, _t10AE, _t10AF];
  real _t10B1 = prim •00CE<$[3]; $[3]; $[]> (_t10B0, dPos0AC1);
  string _t10B2 = " insideTest: ";
  real _t10B3 = 0.1e1;
  real _t10B4 = 0.1e-7;
  real _t10B5 = prim +0017<$[]> (_t10B3, _t10B4);
  real _t10B6 = 0.1e1;
  real _t10B7 = 0.1e1;
  real _t10B8 = 0.1e1;
  vec3 _t10B9 = [_t10B6, _t10B7, _t10B8];
  real _t10BA = 0.57735026919e0;
  real _t10BB = 0.57735026919e0;
  real _t10BC = 0.57735026919e0;
  real _t10BD = 0.57735026919e0;
  vec3 _t10BE = [_t10BB, _t10BC, _t10BD];
  real _t10BF = prim •00CE<$[3]; $[3]; $[]> (_t10BE, refPos0AC0);
  real _t10C0 = prim -0026<$[]> (_t10BA, _t10BF);
  real _t10C1 = 0.57735026919e0;
  real _t10C2 = 0.57735026919e0;
  real _t10C3 = 0.57735026919e0;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, dPos0AC1);
  real _t10C6 = prim /0055 (_t10C0, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0AC1, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0AC0, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10B9, _t10C8);
  bool _t10CA = prim >0080 (_t10B5, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.57735026919e0;
  real _t10D0 = 0.57735026919e0;
  real _t10D1 = 0.57735026919e0;
  real _t10D2 = 0.57735026919e0;
  vec3 _t10D3 = [_t10D0, _t10D1, _t10D2];
  real _t10D4 = prim •00CE<$[3]; $[3]; $[]> (_t10D3, refPos0AC0);
  real _t10D5 = prim -0026<$[]> (_t10CF, _t10D4);
  real _t10D6 = 0.57735026919e0;
  real _t10D7 = 0.57735026919e0;
  real _t10D8 = 0.57735026919e0;
  vec3 _t10D9 = [_t10D6, _t10D7, _t10D8];
  real _t10DA = prim •00CE<$[3]; $[3]; $[]> (_t10D9, dPos0AC1);
  real _t10DB = prim /0055 (_t10D5, _t10DA);
  vec3 _t10DC = prim *0038<$[3]> (dPos0AC1, _t10DB);
  vec3 _t10DD = prim +0017<$[3]> (refPos0AC0, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (_t10CE, _t10DD);
  real _t10DF = _t10DE[0];
  real _t10E0 = -0.e0;
  bool _t10E1 = prim >0080 (_t10DF, _t10E0);
  real _t10E2 = 0.1e-7;
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  vec3 _t10E5 = [_t10E2, _t10E3, _t10E4];
  real _t10E6 = 0.57735026919e0;
  real _t10E7 = 0.57735026919e0;
  real _t10E8 = 0.57735026919e0;
  real _t10E9 = 0.57735026919e0;
  vec3 _t10EA = [_t10E7, _t10E8, _t10E9];
  real _t10EB = prim •00CE<$[3]; $[3]; $[]> (_t10EA, refPos0AC0);
  real _t10EC = prim -0026<$[]> (_t10E6, _t10EB);
  real _t10ED = 0.57735026919e0;
  real _t10EE = 0.57735026919e0;
  real _t10EF = 0.57735026919e0;
  vec3 _t10F0 = [_t10ED, _t10EE, _t10EF];
  real _t10F1 = prim •00CE<$[3]; $[3]; $[]> (_t10F0, dPos0AC1);
  real _t10F2 = prim /0055 (_t10EC, _t10F1);
  vec3 _t10F3 = prim *0038<$[3]> (dPos0AC1, _t10F2);
  vec3 _t10F4 = prim +0017<$[3]> (refPos0AC0, _t10F3);
  vec3 _t10F5 = prim +0017<$[3]> (_t10E5, _t10F4);
  real _t10F6 = _t10F5[1];
  real _t10F7 = -0.e0;
  bool _t10F8 = prim >0080 (_t10F6, _t10F7);
  real _t10F9 = 0.1e-7;
  real _t10FA = 0.1e-7;
  real _t10FB = 0.1e-7;
  vec3 _t10FC = [_t10F9, _t10FA, _t10FB];
  real _t10FD = 0.57735026919e0;
  real _t10FE = 0.57735026919e0;
  real _t10FF = 0.57735026919e0;
  real _t1100 = 0.57735026919e0;
  vec3 _t1101 = [_t10FE, _t10FF, _t1100];
  real _t1102 = prim •00CE<$[3]; $[3]; $[]> (_t1101, refPos0AC0);
  real _t1103 = prim -0026<$[]> (_t10FD, _t1102);
  real _t1104 = 0.57735026919e0;
  real _t1105 = 0.57735026919e0;
  real _t1106 = 0.57735026919e0;
  vec3 _t1107 = [_t1104, _t1105, _t1106];
  real _t1108 = prim •00CE<$[3]; $[3]; $[]> (_t1107, dPos0AC1);
  real _t1109 = prim /0055 (_t1103, _t1108);
  vec3 _t110A = prim *0038<$[3]> (dPos0AC1, _t1109);
  vec3 _t110B = prim +0017<$[3]> (refPos0AC0, _t110A);
  vec3 _t110C = prim +0017<$[3]> (_t10FC, _t110B);
  real _t110D = _t110C[2];
  real _t110E = -0.e0;
  bool _t110F = prim >0080 (_t110D, _t110E);
  bool _t1110 = prim $and01C4 (_t10F8, _t110F);
  bool _t1111 = prim $and01C4 (_t10E1, _t1110);
  bool _t1112 = prim $and01C4 (_t10CA, _t1111);
  string _t1113 = " dist: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  real _t1117 = 0.57735026919e0;
  vec3 _t1118 = [_t1115, _t1116, _t1117];
  real _t1119 = prim •00CE<$[3]; $[3]; $[]> (_t1118, refPos0AC0);
  real _t111A = prim -0026<$[]> (_t1114, _t1119);
  real _t111B = prim |()|00B5<$[]> (_t111A);
  string _t111C = "signed dist: ";
  real _t111D = 0.57735026919e0;
  real _t111E = 0.57735026919e0;
  real _t111F = 0.57735026919e0;
  real _t1120 = 0.57735026919e0;
  vec3 _t1121 = [_t111E, _t111F, _t1120];
  real _t1122 = prim •00CE<$[3]; $[3]; $[]> (_t1121, refPos0AC0);
  real _t1123 = prim -0026<$[]> (_t111D, _t1122);
  string _t1124 = " face: ";
  int _t1125 = 0;
  string _t1126 = " place: ";
  real _t1127 = 0.57735026919e0;
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, refPos0AC0);
  real _t112D = prim -0026<$[]> (_t1127, _t112C);
  real _t112E = 0.57735026919e0;
  real _t112F = 0.57735026919e0;
  real _t1130 = 0.57735026919e0;
  vec3 _t1131 = [_t112E, _t112F, _t1130];
  real _t1132 = prim •00CE<$[3]; $[3]; $[]> (_t1131, dPos0AC1);
  real _t1133 = prim /0055 (_t112D, _t1132);
  vec3 _t1134 = prim *0038<$[3]> (dPos0AC1, _t1133);
  vec3 _t1135 = prim +0017<$[3]> (refPos0AC0, _t1134);
  string _t1136 = " error: ";
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  real _t113A = 0.57735026919e0;
  vec3 _t113B = [_t1138, _t1139, _t113A];
  real _t113C = 0.57735026919e0;
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, refPos0AC0);
  real _t1142 = prim -0026<$[]> (_t113C, _t1141);
  real _t1143 = 0.57735026919e0;
  real _t1144 = 0.57735026919e0;
  real _t1145 = 0.57735026919e0;
  vec3 _t1146 = [_t1143, _t1144, _t1145];
  real _t1147 = prim •00CE<$[3]; $[3]; $[]> (_t1146, dPos0AC1);
  real _t1148 = prim /0055 (_t1142, _t1147);
  vec3 _t1149 = prim *0038<$[3]> (dPos0AC1, _t1148);
  vec3 _t114A = prim +0017<$[3]> (refPos0AC0, _t1149);
  real _t114B = prim •00CE<$[3]; $[3]; $[]> (_t113B, _t114A);
  real _t114C = prim -0026<$[]> (_t1137, _t114B);
  real _t114D = prim |()|00B5<$[]> (_t114C);
  string _t114E = " offset :";
  string _t114F = " dp: ";
  string _t1150 = " otherPossibleTime: ";
  string _t1151 = "\n";
  string _t1152 = "\n original face: ";
  string _t1153 = " ";
  print (_t109E, _t10AB, _t10AC, _t10B1, _t10B2, _t1112, _t1113, _t111B, _t111C, _t1123, _t1124, _t1125, _t1126, _t1135, _t1136, _t114D, _t114E, refPos0AC0, _t114F, dPos0AC1, _t1150, faceTime109D, _t1151, _t1152, i109A, _t1153);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  real _t1157 = 0.57735026919e0;
  vec3 _t1158 = [_t1155, _t1156, _t1157];
  real _t1159 = prim •00CE<$[3]; $[3]; $[]> (_t1158, refPos0AC0);
  real _t115A = prim -0026<$[]> (_t1154, _t1159);
  real _t115B = 0.57735026919e0;
  real _t115C = 0.57735026919e0;
  real _t115D = 0.57735026919e0;
  vec3 _t115E = [_t115B, _t115C, _t115D];
  real _t115F = prim •00CE<$[3]; $[3]; $[]> (_t115E, dPos0AC1);
  real _t1160 = prim /0055 (_t115A, _t115F);
  real _t1161 = -0.1e-7;
  bool _t1162 = prim >=007E (_t1160, _t1161);
  real _t1163 = 0.57735026919e0;
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  vec3 _t1167 = [_t1164, _t1165, _t1166];
  real _t1168 = prim •00CE<$[3]; $[3]; $[]> (_t1167, refPos0AC0);
  real _t1169 = prim -0026<$[]> (_t1163, _t1168);
  real _t116A = 0.57735026919e0;
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  vec3 _t116D = [_t116A, _t116B, _t116C];
  real _t116E = prim •00CE<$[3]; $[3]; $[]> (_t116D, dPos0AC1);
  real _t116F = prim /0055 (_t1169, _t116E);
  bool _t1170 = prim >0080 (time109B, _t116F);
  real _t1171 = 0.57735026919e0;
  real _t1172 = 0.57735026919e0;
  real _t1173 = 0.57735026919e0;
  vec3 _t1174 = [_t1171, _t1172, _t1173];
  real _t1175 = prim •00CE<$[3]; $[3]; $[]> (_t1174, dPos0AC1);
  real _t1176 = prim |()|00B5<$[]> (_t1175);
  real _t1177 = 0.1e-7;
  bool _t1178 = prim >=007E (_t1176, _t1177);
  bool _t1179 = prim $and01C4 (_t1170, _t1178);
  bool _t117A = prim $and01C4 (_t1162, _t1179);
  if _t117A {
    int _t117B = 0;
    bool _t117C = prim !=0086 (i109A, _t117B);
    if _t117C {
      string _t117D = "Saving at this face!";
      real _t117E = 0.57735026919e0;
      real _t117F = 0.57735026919e0;
      real _t1180 = 0.57735026919e0;
      real _t1181 = 0.57735026919e0;
      vec3 _t1182 = [_t117F, _t1180, _t1181];
      real _t1183 = prim •00CE<$[3]; $[3]; $[]> (_t1182, refPos0AC0);
      real _t1184 = prim -0026<$[]> (_t117E, _t1183);
      real _t1185 = 0.57735026919e0;
      real _t1186 = 0.57735026919e0;
      real _t1187 = 0.57735026919e0;
      vec3 _t1188 = [_t1185, _t1186, _t1187];
      real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, dPos0AC1);
      real _t118A = prim /0055 (_t1184, _t1189);
      real _t118B = 0.57735026919e0;
      real _t118C = 0.57735026919e0;
      real _t118D = 0.57735026919e0;
      real _t118E = 0.57735026919e0;
      vec3 _t118F = [_t118C, _t118D, _t118E];
      real _t1190 = prim •00CE<$[3]; $[3]; $[]> (_t118F, refPos0AC0);
      real _t1191 = prim -0026<$[]> (_t118B, _t1190);
      real _t1192 = 0.57735026919e0;
      real _t1193 = 0.57735026919e0;
      real _t1194 = 0.57735026919e0;
      vec3 _t1195 = [_t1192, _t1193, _t1194];
      real _t1196 = prim •00CE<$[3]; $[3]; $[]> (_t1195, dPos0AC1);
      real _t1197 = prim /0055 (_t1191, _t1196);
      bool _t1198 = prim >0080 (time109B, _t1197);
      string _t1199 = "\n";
      print (_t117D, _t118A, _t1198, _t1199);
      real _t119A = 0.57735026919e0;
      real _t119B = 0.57735026919e0;
      real _t119C = 0.57735026919e0;
      real _t119D = 0.57735026919e0;
      vec3 _t119E = [_t119B, _t119C, _t119D];
      real _t119F = prim •00CE<$[3]; $[3]; $[]> (_t119E, refPos0AC0);
      real _t11A0 = prim -0026<$[]> (_t119A, _t119F);
      real _t11A1 = 0.57735026919e0;
      real _t11A2 = 0.57735026919e0;
      real _t11A3 = 0.57735026919e0;
      vec3 _t11A4 = [_t11A1, _t11A2, _t11A3];
      real _t11A5 = prim •00CE<$[3]; $[3]; $[]> (_t11A4, dPos0AC1);
      time109B = prim /0055 (_t11A0, _t11A5);
      face109C = 0;
    } else {
      real _t11A6 = 0.57735026919e0;
      real _t11A7 = 0.57735026919e0;
      real _t11A8 = 0.57735026919e0;
      real _t11A9 = 0.57735026919e0;
      vec3 _t11AA = [_t11A7, _t11A8, _t11A9];
      real _t11AB = prim •00CE<$[3]; $[3]; $[]> (_t11AA, refPos0AC0);
      real _t11AC = prim -0026<$[]> (_t11A6, _t11AB);
      real _t11AD = 0.57735026919e0;
      real _t11AE = 0.57735026919e0;
      real _t11AF = 0.57735026919e0;
      vec3 _t11B0 = [_t11AD, _t11AE, _t11AF];
      real _t11B1 = prim •00CE<$[3]; $[3]; $[]> (_t11B0, dPos0AC1);
      faceTime109D = prim /0055 (_t11AC, _t11B1);
      string _t11B2 = "Saving backup time: ";
      string _t11B3 = "\n";
      print (_t11B2, faceTime109D, _t11B3);
    }
  }
  string _t11B4 = "\ntest :";
  real _t11B5 = 0.e0;
  real _t11B6 = -0.1e1;
  real _t11B7 = 0.e0;
  real _t11B8 = 0.e0;
  vec3 _t11B9 = [_t11B6, _t11B7, _t11B8];
  real _t11BA = prim •00CE<$[3]; $[3]; $[]> (_t11B9, refPos0AC0);
  real _t11BB = prim -0026<$[]> (_t11B5, _t11BA);
  real _t11BC = -0.1e1;
  real _t11BD = 0.e0;
  real _t11BE = 0.e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, dPos0AC1);
  real _t11C1 = prim /0055 (_t11BB, _t11C0);
  string _t11C2 = " test2: ";
  real _t11C3 = -0.1e1;
  real _t11C4 = 0.e0;
  real _t11C5 = 0.e0;
  vec3 _t11C6 = [_t11C3, _t11C4, _t11C5];
  real _t11C7 = prim •00CE<$[3]; $[3]; $[]> (_t11C6, dPos0AC1);
  string _t11C8 = " insideTest: ";
  real _t11C9 = 0.1e1;
  real _t11CA = 0.1e-7;
  real _t11CB = prim +0017<$[]> (_t11C9, _t11CA);
  real _t11CC = 0.1e1;
  real _t11CD = 0.1e1;
  real _t11CE = 0.1e1;
  vec3 _t11CF = [_t11CC, _t11CD, _t11CE];
  real _t11D0 = 0.e0;
  real _t11D1 = -0.1e1;
  real _t11D2 = 0.e0;
  real _t11D3 = 0.e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, refPos0AC0);
  real _t11D6 = prim -0026<$[]> (_t11D0, _t11D5);
  real _t11D7 = -0.1e1;
  real _t11D8 = 0.e0;
  real _t11D9 = 0.e0;
  vec3 _t11DA = [_t11D7, _t11D8, _t11D9];
  real _t11DB = prim •00CE<$[3]; $[3]; $[]> (_t11DA, dPos0AC1);
  real _t11DC = prim /0055 (_t11D6, _t11DB);
  vec3 _t11DD = prim *0038<$[3]> (dPos0AC1, _t11DC);
  vec3 _t11DE = prim +0017<$[3]> (refPos0AC0, _t11DD);
  real _t11DF = prim •00CE<$[3]; $[3]; $[]> (_t11CF, _t11DE);
  bool _t11E0 = prim >0080 (_t11CB, _t11DF);
  real _t11E1 = 0.1e-7;
  real _t11E2 = 0.1e-7;
  real _t11E3 = 0.1e-7;
  vec3 _t11E4 = [_t11E1, _t11E2, _t11E3];
  real _t11E5 = 0.e0;
  real _t11E6 = -0.1e1;
  real _t11E7 = 0.e0;
  real _t11E8 = 0.e0;
  vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
  real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0AC0);
  real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
  real _t11EC = -0.1e1;
  real _t11ED = 0.e0;
  real _t11EE = 0.e0;
  vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
  real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0AC1);
  real _t11F1 = prim /0055 (_t11EB, _t11F0);
  vec3 _t11F2 = prim *0038<$[3]> (dPos0AC1, _t11F1);
  vec3 _t11F3 = prim +0017<$[3]> (refPos0AC0, _t11F2);
  vec3 _t11F4 = prim +0017<$[3]> (_t11E4, _t11F3);
  real _t11F5 = _t11F4[0];
  real _t11F6 = -0.e0;
  bool _t11F7 = prim >0080 (_t11F5, _t11F6);
  real _t11F8 = 0.1e-7;
  real _t11F9 = 0.1e-7;
  real _t11FA = 0.1e-7;
  vec3 _t11FB = [_t11F8, _t11F9, _t11FA];
  real _t11FC = 0.e0;
  real _t11FD = -0.1e1;
  real _t11FE = 0.e0;
  real _t11FF = 0.e0;
  vec3 _t1200 = [_t11FD, _t11FE, _t11FF];
  real _t1201 = prim •00CE<$[3]; $[3]; $[]> (_t1200, refPos0AC0);
  real _t1202 = prim -0026<$[]> (_t11FC, _t1201);
  real _t1203 = -0.1e1;
  real _t1204 = 0.e0;
  real _t1205 = 0.e0;
  vec3 _t1206 = [_t1203, _t1204, _t1205];
  real _t1207 = prim •00CE<$[3]; $[3]; $[]> (_t1206, dPos0AC1);
  real _t1208 = prim /0055 (_t1202, _t1207);
  vec3 _t1209 = prim *0038<$[3]> (dPos0AC1, _t1208);
  vec3 _t120A = prim +0017<$[3]> (refPos0AC0, _t1209);
  vec3 _t120B = prim +0017<$[3]> (_t11FB, _t120A);
  real _t120C = _t120B[1];
  real _t120D = -0.e0;
  bool _t120E = prim >0080 (_t120C, _t120D);
  real _t120F = 0.1e-7;
  real _t1210 = 0.1e-7;
  real _t1211 = 0.1e-7;
  vec3 _t1212 = [_t120F, _t1210, _t1211];
  real _t1213 = 0.e0;
  real _t1214 = -0.1e1;
  real _t1215 = 0.e0;
  real _t1216 = 0.e0;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos0AC0);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = -0.1e1;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos0AC1);
  real _t121F = prim /0055 (_t1219, _t121E);
  vec3 _t1220 = prim *0038<$[3]> (dPos0AC1, _t121F);
  vec3 _t1221 = prim +0017<$[3]> (refPos0AC0, _t1220);
  vec3 _t1222 = prim +0017<$[3]> (_t1212, _t1221);
  real _t1223 = _t1222[2];
  real _t1224 = -0.e0;
  bool _t1225 = prim >0080 (_t1223, _t1224);
  bool _t1226 = prim $and01C4 (_t120E, _t1225);
  bool _t1227 = prim $and01C4 (_t11F7, _t1226);
  bool _t1228 = prim $and01C4 (_t11E0, _t1227);
  string _t1229 = " dist: ";
  real _t122A = 0.e0;
  real _t122B = -0.1e1;
  real _t122C = 0.e0;
  real _t122D = 0.e0;
  vec3 _t122E = [_t122B, _t122C, _t122D];
  real _t122F = prim •00CE<$[3]; $[3]; $[]> (_t122E, refPos0AC0);
  real _t1230 = prim -0026<$[]> (_t122A, _t122F);
  real _t1231 = prim |()|00B5<$[]> (_t1230);
  string _t1232 = "signed dist: ";
  real _t1233 = 0.e0;
  real _t1234 = -0.1e1;
  real _t1235 = 0.e0;
  real _t1236 = 0.e0;
  vec3 _t1237 = [_t1234, _t1235, _t1236];
  real _t1238 = prim •00CE<$[3]; $[3]; $[]> (_t1237, refPos0AC0);
  real _t1239 = prim -0026<$[]> (_t1233, _t1238);
  string _t123A = " face: ";
  int _t123B = 1;
  string _t123C = " place: ";
  real _t123D = 0.e0;
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, refPos0AC0);
  real _t1243 = prim -0026<$[]> (_t123D, _t1242);
  real _t1244 = -0.1e1;
  real _t1245 = 0.e0;
  real _t1246 = 0.e0;
  vec3 _t1247 = [_t1244, _t1245, _t1246];
  real _t1248 = prim •00CE<$[3]; $[3]; $[]> (_t1247, dPos0AC1);
  real _t1249 = prim /0055 (_t1243, _t1248);
  vec3 _t124A = prim *0038<$[3]> (dPos0AC1, _t1249);
  vec3 _t124B = prim +0017<$[3]> (refPos0AC0, _t124A);
  string _t124C = " error: ";
  real _t124D = 0.e0;
  real _t124E = -0.1e1;
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  vec3 _t1251 = [_t124E, _t124F, _t1250];
  real _t1252 = 0.e0;
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos0AC0);
  real _t1258 = prim -0026<$[]> (_t1252, _t1257);
  real _t1259 = -0.1e1;
  real _t125A = 0.e0;
  real _t125B = 0.e0;
  vec3 _t125C = [_t1259, _t125A, _t125B];
  real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos0AC1);
  real _t125E = prim /0055 (_t1258, _t125D);
  vec3 _t125F = prim *0038<$[3]> (dPos0AC1, _t125E);
  vec3 _t1260 = prim +0017<$[3]> (refPos0AC0, _t125F);
  real _t1261 = prim •00CE<$[3]; $[3]; $[]> (_t1251, _t1260);
  real _t1262 = prim -0026<$[]> (_t124D, _t1261);
  real _t1263 = prim |()|00B5<$[]> (_t1262);
  string _t1264 = " offset :";
  string _t1265 = " dp: ";
  string _t1266 = " otherPossibleTime: ";
  string _t1267 = "\n";
  string _t1268 = "\n original face: ";
  string _t1269 = " ";
  print (_t11B4, _t11C1, _t11C2, _t11C7, _t11C8, _t1228, _t1229, _t1231, _t1232, _t1239, _t123A, _t123B, _t123C, _t124B, _t124C, _t1263, _t1264, refPos0AC0, _t1265, dPos0AC1, _t1266, faceTime109D, _t1267, _t1268, i109A, _t1269);
  real _t126A = 0.e0;
  real _t126B = -0.1e1;
  real _t126C = 0.e0;
  real _t126D = 0.e0;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, refPos0AC0);
  real _t1270 = prim -0026<$[]> (_t126A, _t126F);
  real _t1271 = -0.1e1;
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  vec3 _t1274 = [_t1271, _t1272, _t1273];
  real _t1275 = prim •00CE<$[3]; $[3]; $[]> (_t1274, dPos0AC1);
  real _t1276 = prim /0055 (_t1270, _t1275);
  real _t1277 = -0.1e-7;
  bool _t1278 = prim >=007E (_t1276, _t1277);
  real _t1279 = 0.e0;
  real _t127A = -0.1e1;
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  vec3 _t127D = [_t127A, _t127B, _t127C];
  real _t127E = prim •00CE<$[3]; $[3]; $[]> (_t127D, refPos0AC0);
  real _t127F = prim -0026<$[]> (_t1279, _t127E);
  real _t1280 = -0.1e1;
  real _t1281 = 0.e0;
  real _t1282 = 0.e0;
  vec3 _t1283 = [_t1280, _t1281, _t1282];
  real _t1284 = prim •00CE<$[3]; $[3]; $[]> (_t1283, dPos0AC1);
  real _t1285 = prim /0055 (_t127F, _t1284);
  bool _t1286 = prim >0080 (time109B, _t1285);
  real _t1287 = -0.1e1;
  real _t1288 = 0.e0;
  real _t1289 = 0.e0;
  vec3 _t128A = [_t1287, _t1288, _t1289];
  real _t128B = prim •00CE<$[3]; $[3]; $[]> (_t128A, dPos0AC1);
  real _t128C = prim |()|00B5<$[]> (_t128B);
  real _t128D = 0.1e-7;
  bool _t128E = prim >=007E (_t128C, _t128D);
  bool _t128F = prim $and01C4 (_t1286, _t128E);
  bool _t1290 = prim $and01C4 (_t1278, _t128F);
  if _t1290 {
    int _t1291 = 1;
    bool _t1292 = prim !=0086 (i109A, _t1291);
    if _t1292 {
      string _t1293 = "Saving at this face!";
      real _t1294 = 0.e0;
      real _t1295 = -0.1e1;
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      vec3 _t1298 = [_t1295, _t1296, _t1297];
      real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos0AC0);
      real _t129A = prim -0026<$[]> (_t1294, _t1299);
      real _t129B = -0.1e1;
      real _t129C = 0.e0;
      real _t129D = 0.e0;
      vec3 _t129E = [_t129B, _t129C, _t129D];
      real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos0AC1);
      real _t12A0 = prim /0055 (_t129A, _t129F);
      real _t12A1 = 0.e0;
      real _t12A2 = -0.1e1;
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
      real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, refPos0AC0);
      real _t12A7 = prim -0026<$[]> (_t12A1, _t12A6);
      real _t12A8 = -0.1e1;
      real _t12A9 = 0.e0;
      real _t12AA = 0.e0;
      vec3 _t12AB = [_t12A8, _t12A9, _t12AA];
      real _t12AC = prim •00CE<$[3]; $[3]; $[]> (_t12AB, dPos0AC1);
      real _t12AD = prim /0055 (_t12A7, _t12AC);
      bool _t12AE = prim >0080 (time109B, _t12AD);
      string _t12AF = "\n";
      print (_t1293, _t12A0, _t12AE, _t12AF);
      real _t12B0 = 0.e0;
      real _t12B1 = -0.1e1;
      real _t12B2 = 0.e0;
      real _t12B3 = 0.e0;
      vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
      real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, refPos0AC0);
      real _t12B6 = prim -0026<$[]> (_t12B0, _t12B5);
      real _t12B7 = -0.1e1;
      real _t12B8 = 0.e0;
      real _t12B9 = 0.e0;
      vec3 _t12BA = [_t12B7, _t12B8, _t12B9];
      real _t12BB = prim •00CE<$[3]; $[3]; $[]> (_t12BA, dPos0AC1);
      time109B = prim /0055 (_t12B6, _t12BB);
      face109C = 1;
    } else {
      real _t12BC = 0.e0;
      real _t12BD = -0.1e1;
      real _t12BE = 0.e0;
      real _t12BF = 0.e0;
      vec3 _t12C0 = [_t12BD, _t12BE, _t12BF];
      real _t12C1 = prim •00CE<$[3]; $[3]; $[]> (_t12C0, refPos0AC0);
      real _t12C2 = prim -0026<$[]> (_t12BC, _t12C1);
      real _t12C3 = -0.1e1;
      real _t12C4 = 0.e0;
      real _t12C5 = 0.e0;
      vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
      real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, dPos0AC1);
      faceTime109D = prim /0055 (_t12C2, _t12C7);
      string _t12C8 = "Saving backup time: ";
      string _t12C9 = "\n";
      print (_t12C8, faceTime109D, _t12C9);
    }
  }
  string _t12CA = "\ntest :";
  real _t12CB = 0.e0;
  real _t12CC = 0.e0;
  real _t12CD = -0.1e1;
  real _t12CE = 0.e0;
  vec3 _t12CF = [_t12CC, _t12CD, _t12CE];
  real _t12D0 = prim •00CE<$[3]; $[3]; $[]> (_t12CF, refPos0AC0);
  real _t12D1 = prim -0026<$[]> (_t12CB, _t12D0);
  real _t12D2 = 0.e0;
  real _t12D3 = -0.1e1;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, dPos0AC1);
  real _t12D7 = prim /0055 (_t12D1, _t12D6);
  string _t12D8 = " test2: ";
  real _t12D9 = 0.e0;
  real _t12DA = -0.1e1;
  real _t12DB = 0.e0;
  vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
  real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, dPos0AC1);
  string _t12DE = " insideTest: ";
  real _t12DF = 0.1e1;
  real _t12E0 = 0.1e-7;
  real _t12E1 = prim +0017<$[]> (_t12DF, _t12E0);
  real _t12E2 = 0.1e1;
  real _t12E3 = 0.1e1;
  real _t12E4 = 0.1e1;
  vec3 _t12E5 = [_t12E2, _t12E3, _t12E4];
  real _t12E6 = 0.e0;
  real _t12E7 = 0.e0;
  real _t12E8 = -0.1e1;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, refPos0AC0);
  real _t12EC = prim -0026<$[]> (_t12E6, _t12EB);
  real _t12ED = 0.e0;
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  vec3 _t12F0 = [_t12ED, _t12EE, _t12EF];
  real _t12F1 = prim •00CE<$[3]; $[3]; $[]> (_t12F0, dPos0AC1);
  real _t12F2 = prim /0055 (_t12EC, _t12F1);
  vec3 _t12F3 = prim *0038<$[3]> (dPos0AC1, _t12F2);
  vec3 _t12F4 = prim +0017<$[3]> (refPos0AC0, _t12F3);
  real _t12F5 = prim •00CE<$[3]; $[3]; $[]> (_t12E5, _t12F4);
  bool _t12F6 = prim >0080 (_t12E1, _t12F5);
  real _t12F7 = 0.1e-7;
  real _t12F8 = 0.1e-7;
  real _t12F9 = 0.1e-7;
  vec3 _t12FA = [_t12F7, _t12F8, _t12F9];
  real _t12FB = 0.e0;
  real _t12FC = 0.e0;
  real _t12FD = -0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0AC0);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = -0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0AC1);
  real _t1307 = prim /0055 (_t1301, _t1306);
  vec3 _t1308 = prim *0038<$[3]> (dPos0AC1, _t1307);
  vec3 _t1309 = prim +0017<$[3]> (refPos0AC0, _t1308);
  vec3 _t130A = prim +0017<$[3]> (_t12FA, _t1309);
  real _t130B = _t130A[0];
  real _t130C = -0.e0;
  bool _t130D = prim >0080 (_t130B, _t130C);
  real _t130E = 0.1e-7;
  real _t130F = 0.1e-7;
  real _t1310 = 0.1e-7;
  vec3 _t1311 = [_t130E, _t130F, _t1310];
  real _t1312 = 0.e0;
  real _t1313 = 0.e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, refPos0AC0);
  real _t1318 = prim -0026<$[]> (_t1312, _t1317);
  real _t1319 = 0.e0;
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  vec3 _t131C = [_t1319, _t131A, _t131B];
  real _t131D = prim •00CE<$[3]; $[3]; $[]> (_t131C, dPos0AC1);
  real _t131E = prim /0055 (_t1318, _t131D);
  vec3 _t131F = prim *0038<$[3]> (dPos0AC1, _t131E);
  vec3 _t1320 = prim +0017<$[3]> (refPos0AC0, _t131F);
  vec3 _t1321 = prim +0017<$[3]> (_t1311, _t1320);
  real _t1322 = _t1321[1];
  real _t1323 = -0.e0;
  bool _t1324 = prim >0080 (_t1322, _t1323);
  real _t1325 = 0.1e-7;
  real _t1326 = 0.1e-7;
  real _t1327 = 0.1e-7;
  vec3 _t1328 = [_t1325, _t1326, _t1327];
  real _t1329 = 0.e0;
  real _t132A = 0.e0;
  real _t132B = -0.1e1;
  real _t132C = 0.e0;
  vec3 _t132D = [_t132A, _t132B, _t132C];
  real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, refPos0AC0);
  real _t132F = prim -0026<$[]> (_t1329, _t132E);
  real _t1330 = 0.e0;
  real _t1331 = -0.1e1;
  real _t1332 = 0.e0;
  vec3 _t1333 = [_t1330, _t1331, _t1332];
  real _t1334 = prim •00CE<$[3]; $[3]; $[]> (_t1333, dPos0AC1);
  real _t1335 = prim /0055 (_t132F, _t1334);
  vec3 _t1336 = prim *0038<$[3]> (dPos0AC1, _t1335);
  vec3 _t1337 = prim +0017<$[3]> (refPos0AC0, _t1336);
  vec3 _t1338 = prim +0017<$[3]> (_t1328, _t1337);
  real _t1339 = _t1338[2];
  real _t133A = -0.e0;
  bool _t133B = prim >0080 (_t1339, _t133A);
  bool _t133C = prim $and01C4 (_t1324, _t133B);
  bool _t133D = prim $and01C4 (_t130D, _t133C);
  bool _t133E = prim $and01C4 (_t12F6, _t133D);
  string _t133F = " dist: ";
  real _t1340 = 0.e0;
  real _t1341 = 0.e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  vec3 _t1344 = [_t1341, _t1342, _t1343];
  real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, refPos0AC0);
  real _t1346 = prim -0026<$[]> (_t1340, _t1345);
  real _t1347 = prim |()|00B5<$[]> (_t1346);
  string _t1348 = "signed dist: ";
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  real _t134B = -0.1e1;
  real _t134C = 0.e0;
  vec3 _t134D = [_t134A, _t134B, _t134C];
  real _t134E = prim •00CE<$[3]; $[3]; $[]> (_t134D, refPos0AC0);
  real _t134F = prim -0026<$[]> (_t1349, _t134E);
  string _t1350 = " face: ";
  int _t1351 = 2;
  string _t1352 = " place: ";
  real _t1353 = 0.e0;
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos0AC0);
  real _t1359 = prim -0026<$[]> (_t1353, _t1358);
  real _t135A = 0.e0;
  real _t135B = -0.1e1;
  real _t135C = 0.e0;
  vec3 _t135D = [_t135A, _t135B, _t135C];
  real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos0AC1);
  real _t135F = prim /0055 (_t1359, _t135E);
  vec3 _t1360 = prim *0038<$[3]> (dPos0AC1, _t135F);
  vec3 _t1361 = prim +0017<$[3]> (refPos0AC0, _t1360);
  string _t1362 = " error: ";
  real _t1363 = 0.e0;
  real _t1364 = 0.e0;
  real _t1365 = -0.1e1;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = 0.e0;
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos0AC0);
  real _t136E = prim -0026<$[]> (_t1368, _t136D);
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos0AC1);
  real _t1374 = prim /0055 (_t136E, _t1373);
  vec3 _t1375 = prim *0038<$[3]> (dPos0AC1, _t1374);
  vec3 _t1376 = prim +0017<$[3]> (refPos0AC0, _t1375);
  real _t1377 = prim •00CE<$[3]; $[3]; $[]> (_t1367, _t1376);
  real _t1378 = prim -0026<$[]> (_t1363, _t1377);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  string _t137A = " offset :";
  string _t137B = " dp: ";
  string _t137C = " otherPossibleTime: ";
  string _t137D = "\n";
  string _t137E = "\n original face: ";
  string _t137F = " ";
  print (_t12CA, _t12D7, _t12D8, _t12DD, _t12DE, _t133E, _t133F, _t1347, _t1348, _t134F, _t1350, _t1351, _t1352, _t1361, _t1362, _t1379, _t137A, refPos0AC0, _t137B, dPos0AC1, _t137C, faceTime109D, _t137D, _t137E, i109A, _t137F);
  real _t1380 = 0.e0;
  real _t1381 = 0.e0;
  real _t1382 = -0.1e1;
  real _t1383 = 0.e0;
  vec3 _t1384 = [_t1381, _t1382, _t1383];
  real _t1385 = prim •00CE<$[3]; $[3]; $[]> (_t1384, refPos0AC0);
  real _t1386 = prim -0026<$[]> (_t1380, _t1385);
  real _t1387 = 0.e0;
  real _t1388 = -0.1e1;
  real _t1389 = 0.e0;
  vec3 _t138A = [_t1387, _t1388, _t1389];
  real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, dPos0AC1);
  real _t138C = prim /0055 (_t1386, _t138B);
  real _t138D = -0.1e-7;
  bool _t138E = prim >=007E (_t138C, _t138D);
  real _t138F = 0.e0;
  real _t1390 = 0.e0;
  real _t1391 = -0.1e1;
  real _t1392 = 0.e0;
  vec3 _t1393 = [_t1390, _t1391, _t1392];
  real _t1394 = prim •00CE<$[3]; $[3]; $[]> (_t1393, refPos0AC0);
  real _t1395 = prim -0026<$[]> (_t138F, _t1394);
  real _t1396 = 0.e0;
  real _t1397 = -0.1e1;
  real _t1398 = 0.e0;
  vec3 _t1399 = [_t1396, _t1397, _t1398];
  real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, dPos0AC1);
  real _t139B = prim /0055 (_t1395, _t139A);
  bool _t139C = prim >0080 (time109B, _t139B);
  real _t139D = 0.e0;
  real _t139E = -0.1e1;
  real _t139F = 0.e0;
  vec3 _t13A0 = [_t139D, _t139E, _t139F];
  real _t13A1 = prim •00CE<$[3]; $[3]; $[]> (_t13A0, dPos0AC1);
  real _t13A2 = prim |()|00B5<$[]> (_t13A1);
  real _t13A3 = 0.1e-7;
  bool _t13A4 = prim >=007E (_t13A2, _t13A3);
  bool _t13A5 = prim $and01C4 (_t139C, _t13A4);
  bool _t13A6 = prim $and01C4 (_t138E, _t13A5);
  if _t13A6 {
    int _t13A7 = 2;
    bool _t13A8 = prim !=0086 (i109A, _t13A7);
    if _t13A8 {
      string _t13A9 = "Saving at this face!";
      real _t13AA = 0.e0;
      real _t13AB = 0.e0;
      real _t13AC = -0.1e1;
      real _t13AD = 0.e0;
      vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
      real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos0AC0);
      real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
      real _t13B1 = 0.e0;
      real _t13B2 = -0.1e1;
      real _t13B3 = 0.e0;
      vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
      real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos0AC1);
      real _t13B6 = prim /0055 (_t13B0, _t13B5);
      real _t13B7 = 0.e0;
      real _t13B8 = 0.e0;
      real _t13B9 = -0.1e1;
      real _t13BA = 0.e0;
      vec3 _t13BB = [_t13B8, _t13B9, _t13BA];
      real _t13BC = prim •00CE<$[3]; $[3]; $[]> (_t13BB, refPos0AC0);
      real _t13BD = prim -0026<$[]> (_t13B7, _t13BC);
      real _t13BE = 0.e0;
      real _t13BF = -0.1e1;
      real _t13C0 = 0.e0;
      vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
      real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos0AC1);
      real _t13C3 = prim /0055 (_t13BD, _t13C2);
      bool _t13C4 = prim >0080 (time109B, _t13C3);
      string _t13C5 = "\n";
      print (_t13A9, _t13B6, _t13C4, _t13C5);
      real _t13C6 = 0.e0;
      real _t13C7 = 0.e0;
      real _t13C8 = -0.1e1;
      real _t13C9 = 0.e0;
      vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
      real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, refPos0AC0);
      real _t13CC = prim -0026<$[]> (_t13C6, _t13CB);
      real _t13CD = 0.e0;
      real _t13CE = -0.1e1;
      real _t13CF = 0.e0;
      vec3 _t13D0 = [_t13CD, _t13CE, _t13CF];
      real _t13D1 = prim •00CE<$[3]; $[3]; $[]> (_t13D0, dPos0AC1);
      time109B = prim /0055 (_t13CC, _t13D1);
      face109C = 2;
    } else {
      real _t13D2 = 0.e0;
      real _t13D3 = 0.e0;
      real _t13D4 = -0.1e1;
      real _t13D5 = 0.e0;
      vec3 _t13D6 = [_t13D3, _t13D4, _t13D5];
      real _t13D7 = prim •00CE<$[3]; $[3]; $[]> (_t13D6, refPos0AC0);
      real _t13D8 = prim -0026<$[]> (_t13D2, _t13D7);
      real _t13D9 = 0.e0;
      real _t13DA = -0.1e1;
      real _t13DB = 0.e0;
      vec3 _t13DC = [_t13D9, _t13DA, _t13DB];
      real _t13DD = prim •00CE<$[3]; $[3]; $[]> (_t13DC, dPos0AC1);
      faceTime109D = prim /0055 (_t13D8, _t13DD);
      string _t13DE = "Saving backup time: ";
      string _t13DF = "\n";
      print (_t13DE, faceTime109D, _t13DF);
    }
  }
  string _t13E0 = "\ntest :";
  real _t13E1 = 0.e0;
  real _t13E2 = 0.e0;
  real _t13E3 = 0.e0;
  real _t13E4 = -0.1e1;
  vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
  real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, refPos0AC0);
  real _t13E7 = prim -0026<$[]> (_t13E1, _t13E6);
  real _t13E8 = 0.e0;
  real _t13E9 = 0.e0;
  real _t13EA = -0.1e1;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, dPos0AC1);
  real _t13ED = prim /0055 (_t13E7, _t13EC);
  string _t13EE = " test2: ";
  real _t13EF = 0.e0;
  real _t13F0 = 0.e0;
  real _t13F1 = -0.1e1;
  vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
  real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos0AC1);
  string _t13F4 = " insideTest: ";
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.1e-7;
  real _t13F7 = prim +0017<$[]> (_t13F5, _t13F6);
  real _t13F8 = 0.1e1;
  real _t13F9 = 0.1e1;
  real _t13FA = 0.1e1;
  vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
  real _t13FC = 0.e0;
  real _t13FD = 0.e0;
  real _t13FE = 0.e0;
  real _t13FF = -0.1e1;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, refPos0AC0);
  real _t1402 = prim -0026<$[]> (_t13FC, _t1401);
  real _t1403 = 0.e0;
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  vec3 _t1406 = [_t1403, _t1404, _t1405];
  real _t1407 = prim •00CE<$[3]; $[3]; $[]> (_t1406, dPos0AC1);
  real _t1408 = prim /0055 (_t1402, _t1407);
  vec3 _t1409 = prim *0038<$[3]> (dPos0AC1, _t1408);
  vec3 _t140A = prim +0017<$[3]> (refPos0AC0, _t1409);
  real _t140B = prim •00CE<$[3]; $[3]; $[]> (_t13FB, _t140A);
  bool _t140C = prim >0080 (_t13F7, _t140B);
  real _t140D = 0.1e-7;
  real _t140E = 0.1e-7;
  real _t140F = 0.1e-7;
  vec3 _t1410 = [_t140D, _t140E, _t140F];
  real _t1411 = 0.e0;
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = -0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0AC0);
  real _t1417 = prim -0026<$[]> (_t1411, _t1416);
  real _t1418 = 0.e0;
  real _t1419 = 0.e0;
  real _t141A = -0.1e1;
  vec3 _t141B = [_t1418, _t1419, _t141A];
  real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0AC1);
  real _t141D = prim /0055 (_t1417, _t141C);
  vec3 _t141E = prim *0038<$[3]> (dPos0AC1, _t141D);
  vec3 _t141F = prim +0017<$[3]> (refPos0AC0, _t141E);
  vec3 _t1420 = prim +0017<$[3]> (_t1410, _t141F);
  real _t1421 = _t1420[0];
  real _t1422 = -0.e0;
  bool _t1423 = prim >0080 (_t1421, _t1422);
  real _t1424 = 0.1e-7;
  real _t1425 = 0.1e-7;
  real _t1426 = 0.1e-7;
  vec3 _t1427 = [_t1424, _t1425, _t1426];
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = -0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, refPos0AC0);
  real _t142E = prim -0026<$[]> (_t1428, _t142D);
  real _t142F = 0.e0;
  real _t1430 = 0.e0;
  real _t1431 = -0.1e1;
  vec3 _t1432 = [_t142F, _t1430, _t1431];
  real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, dPos0AC1);
  real _t1434 = prim /0055 (_t142E, _t1433);
  vec3 _t1435 = prim *0038<$[3]> (dPos0AC1, _t1434);
  vec3 _t1436 = prim +0017<$[3]> (refPos0AC0, _t1435);
  vec3 _t1437 = prim +0017<$[3]> (_t1427, _t1436);
  real _t1438 = _t1437[1];
  real _t1439 = -0.e0;
  bool _t143A = prim >0080 (_t1438, _t1439);
  real _t143B = 0.1e-7;
  real _t143C = 0.1e-7;
  real _t143D = 0.1e-7;
  vec3 _t143E = [_t143B, _t143C, _t143D];
  real _t143F = 0.e0;
  real _t1440 = 0.e0;
  real _t1441 = 0.e0;
  real _t1442 = -0.1e1;
  vec3 _t1443 = [_t1440, _t1441, _t1442];
  real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, refPos0AC0);
  real _t1445 = prim -0026<$[]> (_t143F, _t1444);
  real _t1446 = 0.e0;
  real _t1447 = 0.e0;
  real _t1448 = -0.1e1;
  vec3 _t1449 = [_t1446, _t1447, _t1448];
  real _t144A = prim •00CE<$[3]; $[3]; $[]> (_t1449, dPos0AC1);
  real _t144B = prim /0055 (_t1445, _t144A);
  vec3 _t144C = prim *0038<$[3]> (dPos0AC1, _t144B);
  vec3 _t144D = prim +0017<$[3]> (refPos0AC0, _t144C);
  vec3 _t144E = prim +0017<$[3]> (_t143E, _t144D);
  real _t144F = _t144E[2];
  real _t1450 = -0.e0;
  bool _t1451 = prim >0080 (_t144F, _t1450);
  bool _t1452 = prim $and01C4 (_t143A, _t1451);
  bool _t1453 = prim $and01C4 (_t1423, _t1452);
  bool _t1454 = prim $and01C4 (_t140C, _t1453);
  string _t1455 = " dist: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.e0;
  real _t1459 = -0.1e1;
  vec3 _t145A = [_t1457, _t1458, _t1459];
  real _t145B = prim •00CE<$[3]; $[3]; $[]> (_t145A, refPos0AC0);
  real _t145C = prim -0026<$[]> (_t1456, _t145B);
  real _t145D = prim |()|00B5<$[]> (_t145C);
  string _t145E = "signed dist: ";
  real _t145F = 0.e0;
  real _t1460 = 0.e0;
  real _t1461 = 0.e0;
  real _t1462 = -0.1e1;
  vec3 _t1463 = [_t1460, _t1461, _t1462];
  real _t1464 = prim •00CE<$[3]; $[3]; $[]> (_t1463, refPos0AC0);
  real _t1465 = prim -0026<$[]> (_t145F, _t1464);
  string _t1466 = " face: ";
  int _t1467 = 3;
  string _t1468 = " place: ";
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, refPos0AC0);
  real _t146F = prim -0026<$[]> (_t1469, _t146E);
  real _t1470 = 0.e0;
  real _t1471 = 0.e0;
  real _t1472 = -0.1e1;
  vec3 _t1473 = [_t1470, _t1471, _t1472];
  real _t1474 = prim •00CE<$[3]; $[3]; $[]> (_t1473, dPos0AC1);
  real _t1475 = prim /0055 (_t146F, _t1474);
  vec3 _t1476 = prim *0038<$[3]> (dPos0AC1, _t1475);
  vec3 _t1477 = prim +0017<$[3]> (refPos0AC0, _t1476);
  string _t1478 = " error: ";
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = 0.e0;
  real _t147C = -0.1e1;
  vec3 _t147D = [_t147A, _t147B, _t147C];
  real _t147E = 0.e0;
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos0AC0);
  real _t1484 = prim -0026<$[]> (_t147E, _t1483);
  real _t1485 = 0.e0;
  real _t1486 = 0.e0;
  real _t1487 = -0.1e1;
  vec3 _t1488 = [_t1485, _t1486, _t1487];
  real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos0AC1);
  real _t148A = prim /0055 (_t1484, _t1489);
  vec3 _t148B = prim *0038<$[3]> (dPos0AC1, _t148A);
  vec3 _t148C = prim +0017<$[3]> (refPos0AC0, _t148B);
  real _t148D = prim •00CE<$[3]; $[3]; $[]> (_t147D, _t148C);
  real _t148E = prim -0026<$[]> (_t1479, _t148D);
  real _t148F = prim |()|00B5<$[]> (_t148E);
  string _t1490 = " offset :";
  string _t1491 = " dp: ";
  string _t1492 = " otherPossibleTime: ";
  string _t1493 = "\n";
  string _t1494 = "\n original face: ";
  string _t1495 = " ";
  print (_t13E0, _t13ED, _t13EE, _t13F3, _t13F4, _t1454, _t1455, _t145D, _t145E, _t1465, _t1466, _t1467, _t1468, _t1477, _t1478, _t148F, _t1490, refPos0AC0, _t1491, dPos0AC1, _t1492, faceTime109D, _t1493, _t1494, i109A, _t1495);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = -0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos0AC0);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = -0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos0AC1);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-7;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = -0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos0AC0);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = -0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos0AC1);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time109B, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = -0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos0AC1);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-7;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 3;
    bool _t14BE = prim !=0086 (i109A, _t14BD);
    if _t14BE {
      string _t14BF = "Saving at this face!";
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.e0;
      real _t14C3 = -0.1e1;
      vec3 _t14C4 = [_t14C1, _t14C2, _t14C3];
      real _t14C5 = prim •00CE<$[3]; $[3]; $[]> (_t14C4, refPos0AC0);
      real _t14C6 = prim -0026<$[]> (_t14C0, _t14C5);
      real _t14C7 = 0.e0;
      real _t14C8 = 0.e0;
      real _t14C9 = -0.1e1;
      vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
      real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, dPos0AC1);
      real _t14CC = prim /0055 (_t14C6, _t14CB);
      real _t14CD = 0.e0;
      real _t14CE = 0.e0;
      real _t14CF = 0.e0;
      real _t14D0 = -0.1e1;
      vec3 _t14D1 = [_t14CE, _t14CF, _t14D0];
      real _t14D2 = prim •00CE<$[3]; $[3]; $[]> (_t14D1, refPos0AC0);
      real _t14D3 = prim -0026<$[]> (_t14CD, _t14D2);
      real _t14D4 = 0.e0;
      real _t14D5 = 0.e0;
      real _t14D6 = -0.1e1;
      vec3 _t14D7 = [_t14D4, _t14D5, _t14D6];
      real _t14D8 = prim •00CE<$[3]; $[3]; $[]> (_t14D7, dPos0AC1);
      real _t14D9 = prim /0055 (_t14D3, _t14D8);
      bool _t14DA = prim >0080 (time109B, _t14D9);
      string _t14DB = "\n";
      print (_t14BF, _t14CC, _t14DA, _t14DB);
      real _t14DC = 0.e0;
      real _t14DD = 0.e0;
      real _t14DE = 0.e0;
      real _t14DF = -0.1e1;
      vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
      real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, refPos0AC0);
      real _t14E2 = prim -0026<$[]> (_t14DC, _t14E1);
      real _t14E3 = 0.e0;
      real _t14E4 = 0.e0;
      real _t14E5 = -0.1e1;
      vec3 _t14E6 = [_t14E3, _t14E4, _t14E5];
      real _t14E7 = prim •00CE<$[3]; $[3]; $[]> (_t14E6, dPos0AC1);
      time109B = prim /0055 (_t14E2, _t14E7);
      face109C = 3;
    } else {
      real _t14E8 = 0.e0;
      real _t14E9 = 0.e0;
      real _t14EA = 0.e0;
      real _t14EB = -0.1e1;
      vec3 _t14EC = [_t14E9, _t14EA, _t14EB];
      real _t14ED = prim •00CE<$[3]; $[3]; $[]> (_t14EC, refPos0AC0);
      real _t14EE = prim -0026<$[]> (_t14E8, _t14ED);
      real _t14EF = 0.e0;
      real _t14F0 = 0.e0;
      real _t14F1 = -0.1e1;
      vec3 _t14F2 = [_t14EF, _t14F0, _t14F1];
      real _t14F3 = prim •00CE<$[3]; $[3]; $[]> (_t14F2, dPos0AC1);
      faceTime109D = prim /0055 (_t14EE, _t14F3);
      string _t14F4 = "Saving backup time: ";
      string _t14F5 = "\n";
      print (_t14F4, faceTime109D, _t14F5);
    }
  }
  int _t14F6 = -1;
  bool _t14F7 = prim !=0086 (face109C, _t14F6);
  real _t14F8 = 0.1e1;
  real _t14F9 = 0.1e-7;
  real _t14FA = prim +0017<$[]> (_t14F8, _t14F9);
  real _t14FB = 0.1e1;
  real _t14FC = 0.1e1;
  real _t14FD = 0.1e1;
  vec3 _t14FE = [_t14FB, _t14FC, _t14FD];
  real _t14FF = 0.e0;
  real _t1500 = prim max0125 (time109B, _t14FF);
  vec3 _t1501 = prim *0038<$[3]> (dPos0AC1, _t1500);
  vec3 _t1502 = prim +0017<$[3]> (refPos0AC0, _t1501);
  real _t1503 = prim •00CE<$[3]; $[3]; $[]> (_t14FE, _t1502);
  bool _t1504 = prim >0080 (_t14FA, _t1503);
  real _t1505 = 0.1e-7;
  real _t1506 = 0.1e-7;
  real _t1507 = 0.1e-7;
  vec3 _t1508 = [_t1505, _t1506, _t1507];
  real _t1509 = 0.e0;
  real _t150A = prim max0125 (time109B, _t1509);
  vec3 _t150B = prim *0038<$[3]> (dPos0AC1, _t150A);
  vec3 _t150C = prim +0017<$[3]> (refPos0AC0, _t150B);
  vec3 _t150D = prim +0017<$[3]> (_t1508, _t150C);
  real _t150E = _t150D[0];
  real _t150F = -0.e0;
  bool _t1510 = prim >0080 (_t150E, _t150F);
  real _t1511 = 0.1e-7;
  real _t1512 = 0.1e-7;
  real _t1513 = 0.1e-7;
  vec3 _t1514 = [_t1511, _t1512, _t1513];
  real _t1515 = 0.e0;
  real _t1516 = prim max0125 (time109B, _t1515);
  vec3 _t1517 = prim *0038<$[3]> (dPos0AC1, _t1516);
  vec3 _t1518 = prim +0017<$[3]> (refPos0AC0, _t1517);
  vec3 _t1519 = prim +0017<$[3]> (_t1514, _t1518);
  real _t151A = _t1519[1];
  real _t151B = -0.e0;
  bool _t151C = prim >0080 (_t151A, _t151B);
  real _t151D = 0.1e-7;
  real _t151E = 0.1e-7;
  real _t151F = 0.1e-7;
  vec3 _t1520 = [_t151D, _t151E, _t151F];
  real _t1521 = 0.e0;
  real _t1522 = prim max0125 (time109B, _t1521);
  vec3 _t1523 = prim *0038<$[3]> (dPos0AC1, _t1522);
  vec3 _t1524 = prim +0017<$[3]> (refPos0AC0, _t1523);
  vec3 _t1525 = prim +0017<$[3]> (_t1520, _t1524);
  real _t1526 = _t1525[2];
  real _t1527 = -0.e0;
  bool _t1528 = prim >0080 (_t1526, _t1527);
  bool _t1529 = prim $and01C4 (_t151C, _t1528);
  bool _t152A = prim $and01C4 (_t1510, _t1529);
  bool _t152B = prim $and01C4 (_t1504, _t152A);
  bool _t152C = prim $and01C4 (_t14F7, _t152B);
  if _t152C {
    string _t152D = "\nReturning via standard : ";
    real _t152E = 0.e0;
    real _t152F = prim max0125 (time109B, _t152E);
    real _t1530 = (real)face109C;
    vec2 _t1531 = [_t152F, _t1530];
    string _t1532 = "\n";
    print (_t152D, _t1531, _t1532);
    real _t1533 = 0.e0;
    real _t1534 = prim max0125 (time109B, _t1533);
    real _t1535 = (real)face109C;
    vec2 _t1536 = [_t1534, _t1535];
    return _t1536;
  } else {
    real _t1537 = -inf;
    bool _t1538 = prim ==0084 (_t1537, faceTime109D);
    if _t1538 {
      string _t1539 = "\nReturning via fail : ";
      real _t153A = -0.1e1;
      real _t153B = -0.1e1;
      vec2 _t153C = [_t153A, _t153B];
      string _t153D = "\n";
      print (_t1539, _t153C, _t153D);
      real _t153E = -0.1e1;
      real _t153F = -0.1e1;
      vec2 _t1540 = [_t153E, _t153F];
      return _t1540;
    } else {
      string _t1541 = "\nReturning via backup : ";
      real _t1542 = 0.e0;
      real _t1543 = prim max0125 (faceTime109D, _t1542);
      real _t1544 = (real)i109A;
      vec2 _t1545 = [_t1543, _t1544];
      string _t1546 = "\n";
      print (_t1541, _t1545, _t1546);
      real _t1547 = 0.e0;
      real _t1548 = prim max0125 (faceTime109D, _t1547);
      real _t1549 = (real)i109A;
      vec2 _t154A = [_t1548, _t1549];
      return _t154A;
    }
  }
}
function Femdata: MeshPos#2 fn_2FB1563 (Femdata: MeshPos x1564, vec3 dPos1565)
{
  bool _t1566 = extractFemItem(Valid(MeshPos), bool, x1564);
  bool _t1567 = prim !00BC (_t1566);
  if _t1567 {
    return x1564;
  }
  real time1568 = 0.1e1;
  Femdata: MeshPos cmp1569 = x1564;
  int _t156A = 0;
  int[] _t156B = prim $range01C3 (_t156A, timeSteps040D);
  foreach i15E3 in _t156B {
    Femdata: Mesh _t156C = extractFem(cmp1569, Mesh);
    int _t156D = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t156E = loadFem(MeshCell, _t156C, _t156D);
    Femdata: Mesh _t156F = extractFem(_t156E, Mesh);
    Femdata: Mesh _t1570 = extractFem(cmp1569, Mesh);
    int _t1571 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1572 = loadFem(MeshCell, _t1570, _t1571);
    Femdata: Mesh _t1573 = extractFem(_t1572, Mesh);
    Femdata: Mesh _t1574 = extractFem(cmp1569, Mesh);
    int _t1575 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1576 = loadFem(MeshCell, _t1574, _t1575);
    int _t1577 = extractFemItem(CellIndex(MeshCell), int, _t1576);
    field(3)[3] _t1578 = femField(_t156F,_t1577,field(3)[3],Transform,);
    field(3)[3,3] _t1579 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1578);
    vec3 _t157A = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    tensor[3,3] _t157B = prim @00A5<#∞; %3; $[3,3]> (_t1579, _t157A);
    tensor[3,3] _t157C = prim inv0155 (_t157B);
    vec3 deltaP157D = prim •00CE<$[3,3]; $[3]; $[3]> (_t157C, dPos1565);
    real _t157E = prim |()|00B5<$[3]> (deltaP157D);
    vec3 normDetaP157F = prim /0057<$[3]> (deltaP157D, _t157E);
    vec3 _t1580 = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    vec3 _t1581 = prim *0036<$[3]> (time1568, deltaP157D);
    vec3 newPos1582 = prim +0017<$[3]> (_t1580, _t1581);
    continue;
  }
  string _t15E4 = "Took stupid way out!\n";
  print (_t15E4);
  vec3 _t15E5;
  vec3 _t16DD = extractFemItem(RefPos(MeshPos), vec3, x1564);
  int _t16DE = extractFemItem(CellIndex(MeshPos), int, x1564);
  Femdata: Mesh _t16DF = extractFem(x1564, Mesh);
  vec3 _t16E0;
  field(3)[3] _t16E1 = femField(_t16DF,_t16DE,field(3)[3],Transform,);
  vec3 _t16E2 = prim @00A5<#∞; %3; $[3]> (_t16E1, _t16DD);
  _t16E0 = _t16E2;
  _t15E5 = _t16E0;
  vec3 _t15E6 = prim +0017<$[3]> (_t15E5, dPos1565);
  cmp1569 = func findPos041E (meshData03FD, _t15E6);
  return cmp1569;
}
globalInit {
  int _t0401 = 0;
  int _t03FF = 1;
  int _t0403 = extractFemItem(NumCell(Mesh), int, meshData03FD);
  int _t0402 = prim -0024 (_t0403, _t03FF);
  int[] _t0406 = prim $range01C3 (_t0401, _t0402);
  Femdata: MeshCell[] _t0407 = {};
  foreach _t0405 in _t0406 {
    Femdata: MeshCell _t0408 = loadFem(MeshCell, meshData03FD, _t0405);
    _t0407 = prim @0010<Femdata: MeshCell> (_t0407, _t0408);
  }
  space0409 = loadFem(Space, 0space0409_intermedateGlobal040A, meshData03FD);
  data040B = loadFem(FemFunc, 0data040B_intermedateGlobal040C, space0409);
  Femdata: Space _t1556 = extractFem(data040B, Space);
  Femdata: Space _t1557 = extractFem(data040B, Space);
  Femdata: Mesh _t1558 = extractFem(_t1557, Mesh);
  field(3)[3] _t1559 = femField(data040B,_t1558,field(3)[3],refField,findPos041E );
  Femdata: Space _t155A = extractFem(data040B, Space);
  Femdata: Mesh _t155B = extractFem(_t155A, Mesh);
  Femdata: Space _t155C = extractFem(data040B, Space);
  Femdata: Mesh _t155D = extractFem(_t155C, Mesh);
  Femdata: Space _t155E = extractFem(data040B, Space);
  Femdata: Mesh _t155F = extractFem(_t155E, Mesh);
  field(3)[3] _t1560 = femField(_t155B,_t155F,field(3)[3],InvTransform,findPos041E );
  F1561 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t1559, _t1560);
}
strand gg (vec3 startPos15FF) {
  output vec3[] stream1600;
  output vec3[] newStream1603;
  int step1606;
  Femdata: MeshPos cPos1607;
  vec3 altCPos1608;
  {
    vec3[0] _t1601 = {};
    vec3[] _t1602 = (vec3[])_t1601;
    stream1600 = _t1602;
    vec3[0] _t1604 = {};
    vec3[] _t1605 = (vec3[])_t1604;
    newStream1603 = _t1605;
    step1606 = 0;
    cPos1607 = func findPos041E (meshData03FD, startPos15FF);
    altCPos1608 = startPos15FF;
  }
  update
  {
    int _t1609 = 0;
    bool _t160A = prim ==0082 (step1606, _t1609);
    if _t160A {
      bool _t160B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      if _t160B {
        vec3 rp160C = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
        real _t160D = rp160C[0];
        real _t160E = 0.1e-5;
        bool _t160F = prim <=007C (_t160D, _t160E);
        if _t160F {
          stabilize;
        }
        real _t1610 = rp160C[1];
        real _t1611 = 0.1e-5;
        bool _t1612 = prim <=007C (_t1610, _t1611);
        if _t1612 {
          stabilize;
        }
        real _t1613 = rp160C[2];
        real _t1614 = 0.1e-5;
        bool _t1615 = prim <=007C (_t1613, _t1614);
        if _t1615 {
          stabilize;
        }
        real _t1616 = 0.1e1;
        real _t1617 = 0.1e1;
        real _t1618 = 0.1e1;
        vec3 _t1619 = [_t1616, _t1617, _t1618];
        real r161A = prim •00CE<$[3]; $[3]; $[]> (_t1619, rp160C);
        real _t161B = 0.9999999e0;
        bool _t161C = prim <=007C (_t161B, r161A);
        if _t161C {
          stabilize;
        }
      }
    }
    bool _t161D = extractFemItem(Valid(MeshPos), bool, cPos1607);
    Femdata: MeshPos _t161E = func findPos041E (meshData03FD, altCPos1608);
    bool _t161F = extractFemItem(Valid(MeshPos), bool, _t161E);
    bool _t1620 = prim !=0085 (_t161D, _t161F);
    if _t1620 {
      string _t1621 = "ERG:Warning of validity startPos:";
      string _t1622 = "\n";
      print (_t1621, startPos15FF, _t1622);
    }
    bool _t1623;
    bool _t1624 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    bool _t1625 = prim !00BC (_t1624);
    if _t1625 {
      _t1623 = true;
    } else {
      bool _t1626;
      Femdata: MeshPos _t1627 = func findPos041E (meshData03FD, altCPos1608);
      bool _t1628 = extractFemItem(Valid(MeshPos), bool, _t1627);
      bool _t1629 = prim !00BC (_t1628);
      if _t1629 {
        _t1626 = true;
      } else {
        _t1626 = prim ==0082 (step1606, stepMax0411);
      }
      _t1623 = _t1626;
    }
    if _t1623 {
      string _t162A = "Went off the mesh\?";
      bool _t162B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      bool _t162C = prim !00BC (_t162B);
      string _t162D = " and ";
      string _t162E = " and ";
      Femdata: MeshPos _t162F = func findPos041E (meshData03FD, altCPos1608);
      bool _t1630 = extractFemItem(Valid(MeshPos), bool, _t162F);
      bool _t1631 = prim !00BC (_t1630);
      string _t1632 = "\n";
      print (_t162A, _t162C, _t162D, altCPos1608, _t162E, _t1631, _t1632);
      string _t1633 = "Pos is:";
      vec3 _t1634 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1635 = "\n";
      print (_t1633, _t1634, _t1635);
      string _t1636 = "\n";
      string _t1637 = "\n";
      print (stream1600, _t1636, newStream1603, _t1637);
      stabilize;
    }
    vec3 _t1638;
    vec3 _t173B = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
    int _t173C = extractFemItem(CellIndex(MeshPos), int, cPos1607);
    Femdata: Mesh _t173D = extractFem(cPos1607, Mesh);
    vec3 _t173E;
    field(3)[3] _t173F = femField(_t173D,_t173C,field(3)[3],Transform,);
    vec3 _t1740 = prim @00A5<#∞; %3; $[3]> (_t173F, _t173B);
    _t173E = _t1740;
    _t1638 = _t173E;
    vec3[1] _t1639 = {_t1638};
    vec3[] _t163A = (vec3[])_t1639;
    stream1600 = prim @0014<vec3> (stream1600, _t163A);
    vec3[1] _t163B = {altCPos1608};
    vec3[] _t163C = (vec3[])_t163B;
    newStream1603 = prim @0014<vec3> (newStream1603, _t163C);
    vec3 _t163D;
    vec3 _t1735 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
    int _t1736 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
    Femdata: Mesh _t1737 = extractFem(cPos1607, Mesh);
    vec3 _t1738;
    field(3)[3] _t1739 = femField(_t1737,_t1736,field(3)[3],Transform,);
    vec3 _t173A = prim @00A5<#∞; %3; $[3]> (_t1739, _t1735);
    _t1738 = _t173A;
    _t163D = _t1738;
    vec3 _t163E = prim -0026<$[3]> (_t163D, altCPos1608);
    real _t163F = prim |()|00B5<$[3]> (_t163E);
    real _t1640 = 0.1e-5;
    bool _t1641 = prim >0080 (_t163F, _t1640);
    if _t1641 {
      string _t1642 = "ERG:Error in tracing 1: At step:";
      string _t1643 = " with particle:";
      string _t1644 = "\n";
      print (_t1642, step1606, _t1643, startPos15FF, _t1644);
      string _t1645 = "Poses are:";
      vec3 _t1646;
      vec3 _t172F = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      int _t1730 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: Mesh _t1731 = extractFem(cPos1607, Mesh);
      vec3 _t1732;
      field(3)[3] _t1733 = femField(_t1731,_t1730,field(3)[3],Transform,);
      vec3 _t1734 = prim @00A5<#∞; %3; $[3]> (_t1733, _t172F);
      _t1732 = _t1734;
      _t1646 = _t1732;
      string _t1647 = "\n";
      print (_t1645, _t1646, altCPos1608, _t1647);
      string _t1648 = "Cells are:";
      Femdata: Mesh _t1649 = extractFem(cPos1607, Mesh);
      int _t164A = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t164B = loadFem(MeshCell, _t1649, _t164A);
      string _t164C = " and ";
      Femdata: MeshPos _t164D = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t164E = extractFem(_t164D, Mesh);
      Femdata: MeshPos _t164F = func findPos041E (meshData03FD, altCPos1608);
      int _t1650 = extractFemItem(CellIndex(MeshPos), int, _t164F);
      Femdata: MeshCell _t1651 = loadFem(MeshCell, _t164E, _t1650);
      string _t1652 = "\n";
      print (_t1648, _t164B, _t164C, _t1651, _t1652);
      string _t1653 = "Ref poses are:";
      vec3 _t1654 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1655 = " and ";
      Femdata: MeshPos _t1656 = func findPos041E (meshData03FD, altCPos1608);
      vec3 _t1657 = extractFemItem(RefPos(MeshPos), vec3, _t1656);
      string _t1658 = "\n";
      print (_t1653, _t1654, _t1655, _t1657, _t1658);
      stabilize;
    } else {
      string _t1659 = "fine in cell 1:";
      Femdata: Mesh _t165A = extractFem(cPos1607, Mesh);
      int _t165B = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t165C = loadFem(MeshCell, _t165A, _t165B);
      string _t165D = "\n";
      print (_t1659, _t165C, _t165D);
    }
    real _t165E = 0.5e0;
    real _t165F = prim *0034 (_t165E, stepSize0410);
    vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    vec3 _t1661 = prim *0036<$[3]> (_t165F, _t1660);
    vec3 _t1662 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    real _t1663 = prim |()|00B5<$[3]> (_t1662);
    vec3 altUp11664 = prim /0057<$[3]> (_t1661, _t1663);
    real _t1665 = 0.5e0;
    real _t1666 = prim *0034 (_t1665, stepSize0410);
    vec3 _t1667;
    bool _t1717 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    if _t1717 {
      Femdata: Mesh _t1718 = extractFem(cPos1607, Mesh);
      int _t1719 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell c171A = loadFem(MeshCell, _t1718, _t1719);
      vec3 ref171B = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      Femdata: FuncCell _t171C;
      int _t171D = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t171E = loadFem(FuncCell, data040B, _t171D);
      _t171C = _t171E;
      Femdata: FemFunc _t171F = extractFem(_t171C, FemFunc);
      Femdata: FuncCell _t1720;
      int _t1721 = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t1722 = loadFem(FuncCell, data040B, _t1721);
      _t1720 = _t1722;
      Femdata: FemFunc _t1723 = extractFem(_t1720, FemFunc);
      Femdata: Space _t1724 = extractFem(_t1723, Space);
      Femdata: FuncCell _t1725;
      int _t1726 = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t1727 = loadFem(FuncCell, data040B, _t1726);
      _t1725 = _t1727;
      int _t1728 = extractFemItem(CellIndex(FuncCell), int, _t1725);
      field(3)[3] _t1729 = femField(_t171F,_t1728,field(3)[3],refField,);
      vec3 val172A = prim @00A5<#∞; %3; $[3]> (_t1729, ref171B);
      real _t172B = prim |()|00B5<$[3]> (val172A);
      vec3 _t172C = prim /0057<$[3]> (val172A, _t172B);
      _t1667 = _t172C;
    } else {
      string _t172D = "QWE:Eval at 0\n";
      print (_t172D);
      vec3 _t172E = prim $zero01BB<$[3]> ();
      _t1667 = _t172E;
    }
    vec3 up11668 = prim *0036<$[3]> (_t1666, _t1667);
    real _t1669 = 0.5e0;
    real _t166A = prim *0034 (_t1669, stepSize0410);
    vec3 _t166B;
    vec3 _t1715 = prim -0026<$[3]> (altCPos1608, center0413);
    vec3 _t1716 = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t1715);
    _t166B = _t1716;
    vec3 _t166C = prim *0036<$[3]> (_t166A, _t166B);
    vec3 _t166D;
    vec3 _t1713 = prim -0026<$[3]> (altCPos1608, center0413);
    vec3 _t1714 = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t1713);
    _t166D = _t1714;
    real _t166E = prim |()|00B5<$[3]> (_t166D);
    vec3 upCorrect1166F = prim /0057<$[3]> (_t166C, _t166E);
    bool _t1670;
    vec3 _t1671 = prim -0026<$[3]> (up11668, upCorrect1166F);
    real _t1672 = prim |()|00B5<$[3]> (_t1671);
    real _t1673 = 0.1e-5;
    bool _t1674 = prim >0080 (_t1672, _t1673);
    if _t1674 {
      _t1670 = true;
    } else {
      vec3 _t1675 = prim -0026<$[3]> (up11668, altUp11664);
      real _t1676 = prim |()|00B5<$[3]> (_t1675);
      real _t1677 = 0.1e-5;
      _t1670 = prim >0080 (_t1676, _t1677);
    }
    if _t1670 {
      string _t1678 = "ERG:Error in evaluation on pos 1:";
      string _t1679 = "\n";
      print (_t1678, startPos15FF, _t1679);
    }
    Femdata: MeshPos intermed167A = func fn_2FB1563 (cPos1607, up11668);
    vec3 altIntermed167B = prim +0017<$[3]> (altCPos1608, altUp11664);
    bool _t167C = extractFemItem(Valid(MeshPos), bool, intermed167A);
    Femdata: MeshPos _t167D = func findPos041E (meshData03FD, altIntermed167B);
    bool _t167E = extractFemItem(Valid(MeshPos), bool, _t167D);
    bool _t167F = prim !=0085 (_t167C, _t167E);
    if _t167F {
      string _t1680 = "ERG:Warning of validity intermed";
      string _t1681 = "\n";
      print (_t1680, startPos15FF, _t1681);
      string _t1682 = "Real location:";
      string _t1683 = "\n";
      print (_t1682, altIntermed167B, _t1683);
      string _t1684 = "Cell change: ";
      Femdata: MeshPos _t1685 = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t1686 = extractFem(_t1685, Mesh);
      Femdata: MeshPos _t1687 = func findPos041E (meshData03FD, altCPos1608);
      int _t1688 = extractFemItem(CellIndex(MeshPos), int, _t1687);
      Femdata: MeshCell _t1689 = loadFem(MeshCell, _t1686, _t1688);
      string _t168A = " to ";
      Femdata: MeshPos _t168B = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t168C = extractFem(_t168B, Mesh);
      Femdata: MeshPos _t168D = func findPos041E (meshData03FD, altIntermed167B);
      int _t168E = extractFemItem(CellIndex(MeshPos), int, _t168D);
      Femdata: MeshCell _t168F = loadFem(MeshCell, _t168C, _t168E);
      string _t1690 = "\n";
      print (_t1684, _t1689, _t168A, _t168F, _t1690);
    }
    bool _t1691;
    bool _t1692 = extractFemItem(Valid(MeshPos), bool, intermed167A);
    bool _t1693 = prim !00BC (_t1692);
    if _t1693 {
      _t1691 = true;
    } else {
      Femdata: MeshPos _t1694 = func findPos041E (meshData03FD, altIntermed167B);
      bool _t1695 = extractFemItem(Valid(MeshPos), bool, _t1694);
      _t1691 = prim !00BC (_t1695);
    }
    if _t1691 {
      string _t1696 = "Went off the mesh\?";
      bool _t1697 = extractFemItem(Valid(MeshPos), bool, intermed167A);
      bool _t1698 = prim !00BC (_t1697);
      string _t1699 = " and ";
      string _t169A = " and ";
      Femdata: MeshPos _t169B = func findPos041E (meshData03FD, altIntermed167B);
      bool _t169C = extractFemItem(Valid(MeshPos), bool, _t169B);
      bool _t169D = prim !00BC (_t169C);
      string _t169E = "\n";
      print (_t1696, _t1698, _t1699, altIntermed167B, _t169A, _t169D, _t169E);
      stabilize;
    }
    vec3 _t169F;
    vec3 _t170D = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
    int _t170E = extractFemItem(CellIndex(MeshPos), int, intermed167A);
    Femdata: Mesh _t170F = extractFem(intermed167A, Mesh);
    vec3 _t1710;
    field(3)[3] _t1711 = femField(_t170F,_t170E,field(3)[3],Transform,);
    vec3 _t1712 = prim @00A5<#∞; %3; $[3]> (_t1711, _t170D);
    _t1710 = _t1712;
    _t169F = _t1710;
    vec3 _t16A0 = prim -0026<$[3]> (_t169F, altIntermed167B);
    real _t16A1 = prim |()|00B5<$[3]> (_t16A0);
    real _t16A2 = 0.1e-5;
    bool _t16A3 = prim >0080 (_t16A1, _t16A2);
    if _t16A3 {
      string _t16A4 = "ERG:Error in tracing 2: At step:";
      string _t16A5 = " with particle:";
      string _t16A6 = "\n";
      print (_t16A4, step1606, _t16A5, startPos15FF, _t16A6);
      string _t16A7 = "Poses are:";
      vec3 _t16A8;
      vec3 _t1707 = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
      int _t1708 = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: Mesh _t1709 = extractFem(intermed167A, Mesh);
      vec3 _t170A;
      field(3)[3] _t170B = femField(_t1709,_t1708,field(3)[3],Transform,);
      vec3 _t170C = prim @00A5<#∞; %3; $[3]> (_t170B, _t1707);
      _t170A = _t170C;
      _t16A8 = _t170A;
      string _t16A9 = "\n";
      print (_t16A7, _t16A8, altIntermed167B, _t16A9);
      stabilize;
    } else {
      string _t16AA = "fine in cell 2:";
      Femdata: Mesh _t16AB = extractFem(cPos1607, Mesh);
      int _t16AC = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t16AD = loadFem(MeshCell, _t16AB, _t16AC);
      string _t16AE = "\n";
      print (_t16AA, _t16AD, _t16AE);
    }
    vec3 _t16AF = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    vec3 _t16B0 = prim *0036<$[3]> (stepSize0410, _t16AF);
    vec3 _t16B1 = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    real _t16B2 = prim |()|00B5<$[3]> (_t16B1);
    vec3 altUp216B3 = prim /0057<$[3]> (_t16B0, _t16B2);
    vec3 _t16B4;
    bool _t16EF = extractFemItem(Valid(MeshPos), bool, intermed167A);
    if _t16EF {
      Femdata: Mesh _t16F0 = extractFem(intermed167A, Mesh);
      int _t16F1 = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell c16F2 = loadFem(MeshCell, _t16F0, _t16F1);
      vec3 ref16F3 = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
      Femdata: FuncCell _t16F4;
      int _t16F5 = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16F6 = loadFem(FuncCell, data040B, _t16F5);
      _t16F4 = _t16F6;
      Femdata: FemFunc _t16F7 = extractFem(_t16F4, FemFunc);
      Femdata: FuncCell _t16F8;
      int _t16F9 = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16FA = loadFem(FuncCell, data040B, _t16F9);
      _t16F8 = _t16FA;
      Femdata: FemFunc _t16FB = extractFem(_t16F8, FemFunc);
      Femdata: Space _t16FC = extractFem(_t16FB, Space);
      Femdata: FuncCell _t16FD;
      int _t16FE = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16FF = loadFem(FuncCell, data040B, _t16FE);
      _t16FD = _t16FF;
      int _t1700 = extractFemItem(CellIndex(FuncCell), int, _t16FD);
      field(3)[3] _t1701 = femField(_t16F7,_t1700,field(3)[3],refField,);
      vec3 val1702 = prim @00A5<#∞; %3; $[3]> (_t1701, ref16F3);
      real _t1703 = prim |()|00B5<$[3]> (val1702);
      vec3 _t1704 = prim /0057<$[3]> (val1702, _t1703);
      _t16B4 = _t1704;
    } else {
      string _t1705 = "QWE:Eval at 0\n";
      print (_t1705);
      vec3 _t1706 = prim $zero01BB<$[3]> ();
      _t16B4 = _t1706;
    }
    vec3 up216B5 = prim *0036<$[3]> (stepSize0410, _t16B4);
    vec3 _t16B6;
    vec3 _t16ED = prim -0026<$[3]> (altIntermed167B, center0413);
    vec3 _t16EE = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t16ED);
    _t16B6 = _t16EE;
    vec3 _t16B7 = prim *0036<$[3]> (stepSize0410, _t16B6);
    vec3 _t16B8;
    vec3 _t16EB = prim -0026<$[3]> (altIntermed167B, center0413);
    vec3 _t16EC = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t16EB);
    _t16B8 = _t16EC;
    real _t16B9 = prim |()|00B5<$[3]> (_t16B8);
    vec3 upCorrect216BA = prim /0057<$[3]> (_t16B7, _t16B9);
    cPos1607 = func fn_2FB1563 (cPos1607, up216B5);
    altCPos1608 = prim +0017<$[3]> (altCPos1608, altUp216B3);
    int _t16BB = 1;
    step1606 = prim +0015 (step1606, _t16BB);
    bool _t16BC;
    vec3 _t16BD = prim -0026<$[3]> (up216B5, upCorrect216BA);
    real _t16BE = prim |()|00B5<$[3]> (_t16BD);
    real _t16BF = 0.1e-5;
    bool _t16C0 = prim >0080 (_t16BE, _t16BF);
    if _t16C0 {
      _t16BC = true;
    } else {
      vec3 _t16C1 = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16C2 = prim |()|00B5<$[3]> (_t16C1);
      real _t16C3 = 0.1e-4;
      _t16BC = prim >0080 (_t16C2, _t16C3);
    }
    if _t16BC {
      string _t16C4 = "ERG:Error in evaluation on pos 2:";
      string _t16C5 = "\n";
      print (_t16C4, startPos15FF, _t16C5);
      string _t16C6 = "The errors are:";
      vec3 _t16C7 = prim -0026<$[3]> (up216B5, upCorrect216BA);
      real _t16C8 = prim |()|00B5<$[3]> (_t16C7);
      string _t16C9 = " and ";
      vec3 _t16CA = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16CB = prim |()|00B5<$[3]> (_t16CA);
      string _t16CC = "\n";
      print (_t16C6, _t16C8, _t16C9, _t16CB, _t16CC);
      string _t16CD = "The cells are:";
      Femdata: Mesh _t16CE = extractFem(intermed167A, Mesh);
      int _t16CF = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell _t16D0 = loadFem(MeshCell, _t16CE, _t16CF);
      string _t16D1 = " vs ";
      Femdata: MeshPos _t16D2 = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t16D3 = extractFem(_t16D2, Mesh);
      Femdata: MeshPos _t16D4 = func findPos041E (meshData03FD, altIntermed167B);
      int _t16D5 = extractFemItem(CellIndex(MeshPos), int, _t16D4);
      Femdata: MeshCell _t16D6 = loadFem(MeshCell, _t16D3, _t16D5);
      string _t16D7 = "\n";
      print (_t16CD, _t16D0, _t16D1, _t16D6, _t16D7);
    }
  }
}
collection {
  foreach x16D8 in startPoints040F {
    new gg (x16D8);
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData03FD;
input FemData:Space 0space0409_intermedateGlobal040A;
input FemData:FemFunc 0data040B_intermedateGlobal040C;
input int timeSteps040D = <default>;
input real timeEps040E = <default>;
input vec3[] startPoints040F;
input real stepSize0410 = <default>;
input int stepMax0411 = <default>;
input tensor[3,3] M0412;
input vec3 center0413;
constants {
  timeSteps040D = 32;
  timeEps040E = 0.1e-6;
  stepSize0410 = 0.1e-1;
  stepMax0411 = 300;
}
global Femdata: Space space0409;
global Femdata: FemFunc data040B;
global field(3)[3] F1561;
function Femdata: MeshPos#20 findPos041E (Femdata: Mesh mesh041F, vec3 pos0420)
{
  real _t0421 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0422 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0423 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0424 = [_t0421, _t0422, _t0423];
  newtonInt0425 = 0;
  cellInt0426 = extractFemItem(StartCell(Mesh), int, mesh041F);
  int _t0427 = extractFemItem(NumCell(Mesh), int, mesh041F);
  int _t0428 = 1;
  numCell0429 = prim -0024 (_t0427, _t0428);
  yayCells042A = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh041F, pos0420 : vec3);
  foreach cellItter042E in yayCells042A {
    real _t042B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn0424 = [_t042B, _t042C, _t042D];
    cellInt0426 = cellItter042E;
    field(3)[3] _t042F = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
    field(3)[3,3] _t0430 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042F);
    field(3)[3,3] _t0431 = prim inv015E<#∞; %3> (_t0430);
    real _t0432 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0433 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0435 = [_t0432, _t0433, _t0434];
    A0436 = prim @00A5<#∞; %3; $[3,3]> (_t0431, _t0435);
    int _t0437 = 0;
    int _t0438 = 16;
    int[] _t0439 = prim $range01C3 (_t0437, _t0438);
    foreach newtonItter0468 in _t0439 {
      field(3)[3] _t043A = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
      field(3)[3] _t043B = prim -002E<#∞; %3; $[3]> (_t043A, pos0420);
      field(3)[3] _t043C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0436, _t043B);
      delta043D = prim @00A5<#∞; %3; $[3]> (_t043C, xn0424);
      xn0424 = prim -0026<$[3]> (xn0424, delta043D);
      real _t043E = 0.1e-7;
      real _t043F = 0.1e-7;
      real _t0440 = prim *0034 (_t043E, _t043F);
      real _t0441 = prim •00CE<$[3]; $[3]; $[]> (delta043D, delta043D);
      bool _t0442 = prim >=007E (_t0440, _t0441);
      if _t0442 {
        real _t0443 = 0.1e1;
        real _t0444 = 0.1e-7;
        real _t0445 = prim +0017<$[]> (_t0443, _t0444);
        real _t0446 = 0.1e1;
        real _t0447 = 0.1e1;
        real _t0448 = 0.1e1;
        vec3 _t0449 = [_t0446, _t0447, _t0448];
        real _t044A = prim •00CE<$[3]; $[3]; $[]> (_t0449, xn0424);
        bool _t044B = prim >0080 (_t0445, _t044A);
        real _t044C = 0.1e-7;
        real _t044D = 0.1e-7;
        real _t044E = 0.1e-7;
        vec3 _t044F = [_t044C, _t044D, _t044E];
        vec3 _t0450 = prim +0017<$[3]> (_t044F, xn0424);
        real _t0451 = _t0450[0];
        real _t0452 = -0.e0;
        bool _t0453 = prim >0080 (_t0451, _t0452);
        real _t0454 = 0.1e-7;
        real _t0455 = 0.1e-7;
        real _t0456 = 0.1e-7;
        vec3 _t0457 = [_t0454, _t0455, _t0456];
        vec3 _t0458 = prim +0017<$[3]> (_t0457, xn0424);
        real _t0459 = _t0458[1];
        real _t045A = -0.e0;
        bool _t045B = prim >0080 (_t0459, _t045A);
        real _t045C = 0.1e-7;
        real _t045D = 0.1e-7;
        real _t045E = 0.1e-7;
        vec3 _t045F = [_t045C, _t045D, _t045E];
        vec3 _t0460 = prim +0017<$[3]> (_t045F, xn0424);
        real _t0461 = _t0460[2];
        real _t0462 = -0.e0;
        bool _t0463 = prim >0080 (_t0461, _t0462);
        bool _t0464 = prim $and01C4 (_t045B, _t0463);
        bool _t0465 = prim $and01C4 (_t0453, _t0464);
        bool _t0466 = prim $and01C4 (_t044B, _t0465);
        if _t0466 {
          Femdata: MeshPos _t0467 = extractFemItemN((mesh041F, cellInt0426, xn0424, pos0420),AllBuild(MeshPos),);
          return _t0467;
        }
      }
    }
  }
  Femdata: MeshPos _t0469 = extractFemItemN((mesh041F),InvalidBuild(MeshPos),);
  return _t0469;
}
function vec3#2 worldPos04DA (Femdata: MeshPos pos04D3)
{
  vec3 _t04DB = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
  int _t04DC = extractFemItem(CellIndex(MeshPos), int, pos04D3);
  Femdata: Mesh _t04DD = extractFem(pos04D3, Mesh);
  vec3 _t04DE;
  field(3)[3] _t16DB = femField(_t04DD,_t04DC,field(3)[3],Transform,);
  vec3 _t16DC = prim @00A5<#∞; %3; $[3]> (_t16DB, _t04DB);
  _t04DE = _t16DC;
  return _t04DE;
}
function Femdata: MeshPos#1 $exitPos04DF (Femdata: Mesh mesh04E0, int cellId04E1, vec3 refPos04E2, vec3 dPos04E3, real[2] time04E4)
{
  int _t04E5 = -1;
  real _t04E6 = time04E4[1];
  int _t04E7 = prim $r2i01B7 (_t04E6);
  int[2] _t04E9 = func nextCell404E8 (_t04E7, cellId04E1, mesh04E0);
  int _t04EA = 0;
  int _t04EB = prim $sub01C0<int; %2> (_t04E9, _t04EA);
  bool _t04EC = prim !=0086 (_t04E5, _t04EB);
  if _t04EC {
    string _t04ED = "face ";
    real _t04EE = time04E4[1];
    int _t04EF = prim $r2i01B7 (_t04EE);
    string _t04F0 = " to ";
    real _t04F1 = time04E4[1];
    int _t04F2 = prim $r2i01B7 (_t04F1);
    int[2] _t04F3 = func nextCell404E8 (_t04F2, cellId04E1, mesh04E0);
    int _t04F4 = 1;
    int _t04F5 = prim $sub01C0<int; %2> (_t04F3, _t04F4);
    string _t04F6 = "\n";
    string _t04F7 = "got: ";
    real _t04F8 = 0.1e1;
    real _t04F9 = 0.e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.e0;
    vec4 _t04FC = [_t04F8, _t04F9, _t04FA, _t04FB];
    real _t04FD = 0.e0;
    real _t04FE = 0.1e1;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec4 _t0501 = [_t04FD, _t04FE, _t04FF, _t0500];
    real _t0502 = 0.e0;
    real _t0503 = 0.e0;
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    vec4 _t0506 = [_t0502, _t0503, _t0504, _t0505];
    real _t0507 = 0.971445146547e-16;
    real _t0508 = 0.e0;
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    vec4 _t050B = [_t0507, _t0508, _t0509, _t050A];
    tensor[4,4] _t050C = [_t04FC, _t0501, _t0506, _t050B];
    real _t050D = 0.57735026919e0;
    real _t050E = 0.57735026919e0;
    real _t050F = 0.57735026919e0;
    real _t0510 = -0.57735026919e0;
    vec4 _t0511 = [_t050D, _t050E, _t050F, _t0510];
    real _t0512 = -0.333333333333e0;
    real _t0513 = 0.666666666667e0;
    real _t0514 = -0.333333333333e0;
    real _t0515 = 0.333333333333e0;
    vec4 _t0516 = [_t0512, _t0513, _t0514, _t0515];
    real _t0517 = -0.333333333333e0;
    real _t0518 = -0.333333333333e0;
    real _t0519 = 0.666666666667e0;
    real _t051A = 0.333333333333e0;
    vec4 _t051B = [_t0517, _t0518, _t0519, _t051A];
    real _t051C = 0.971445146547e-16;
    real _t051D = 0.e0;
    real _t051E = 0.e0;
    real _t051F = 0.1e1;
    vec4 _t0520 = [_t051C, _t051D, _t051E, _t051F];
    tensor[4,4] _t0521 = [_t0511, _t0516, _t051B, _t0520];
    real _t0522 = -0.333333333333e0;
    real _t0523 = 0.666666666667e0;
    real _t0524 = -0.333333333333e0;
    real _t0525 = 0.333333333333e0;
    vec4 _t0526 = [_t0522, _t0523, _t0524, _t0525];
    real _t0527 = -0.57735026919e0;
    real _t0528 = -0.57735026919e0;
    real _t0529 = -0.57735026919e0;
    real _t052A = 0.57735026919e0;
    vec4 _t052B = [_t0527, _t0528, _t0529, _t052A];
    real _t052C = -0.333333333333e0;
    real _t052D = -0.333333333333e0;
    real _t052E = 0.666666666667e0;
    real _t052F = 0.333333333333e0;
    vec4 _t0530 = [_t052C, _t052D, _t052E, _t052F];
    real _t0531 = 0.971445146547e-16;
    real _t0532 = 0.e0;
    real _t0533 = 0.e0;
    real _t0534 = 0.1e1;
    vec4 _t0535 = [_t0531, _t0532, _t0533, _t0534];
    tensor[4,4] _t0536 = [_t0526, _t052B, _t0530, _t0535];
    real _t0537 = -0.333333333333e0;
    real _t0538 = 0.666666666667e0;
    real _t0539 = -0.333333333333e0;
    real _t053A = 0.333333333333e0;
    vec4 _t053B = [_t0537, _t0538, _t0539, _t053A];
    real _t053C = -0.333333333333e0;
    real _t053D = -0.333333333333e0;
    real _t053E = 0.666666666667e0;
    real _t053F = 0.333333333333e0;
    vec4 _t0540 = [_t053C, _t053D, _t053E, _t053F];
    real _t0541 = 0.57735026919e0;
    real _t0542 = 0.57735026919e0;
    real _t0543 = 0.57735026919e0;
    real _t0544 = -0.57735026919e0;
    vec4 _t0545 = [_t0541, _t0542, _t0543, _t0544];
    real _t0546 = 0.971445146547e-16;
    real _t0547 = 0.e0;
    real _t0548 = 0.e0;
    real _t0549 = 0.1e1;
    vec4 _t054A = [_t0546, _t0547, _t0548, _t0549];
    tensor[4,4] _t054B = [_t053B, _t0540, _t0545, _t054A];
    tensor[4,4][4] _t054C = {_t050C, _t0521, _t0536, _t054B};
    real _t054D = 0.57735026919e0;
    real _t054E = -0.1e1;
    real _t054F = -0.1e1;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    real _t0552 = 0.57735026919e0;
    real _t0553 = 0.1e1;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    vec4 _t0556 = [_t0552, _t0553, _t0554, _t0555];
    real _t0557 = 0.57735026919e0;
    real _t0558 = 0.e0;
    real _t0559 = 0.1e1;
    real _t055A = 0.e0;
    vec4 _t055B = [_t0557, _t0558, _t0559, _t055A];
    real _t055C = 0.e0;
    real _t055D = 0.e0;
    real _t055E = 0.e0;
    real _t055F = 0.1e1;
    vec4 _t0560 = [_t055C, _t055D, _t055E, _t055F];
    tensor[4,4] _t0561 = [_t0551, _t0556, _t055B, _t0560];
    real _t0562 = 0.1e1;
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.e0;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    real _t0567 = 0.e0;
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    vec4 _t056B = [_t0567, _t0568, _t0569, _t056A];
    real _t056C = 0.e0;
    real _t056D = 0.e0;
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    vec4 _t0570 = [_t056C, _t056D, _t056E, _t056F];
    real _t0571 = 0.e0;
    real _t0572 = 0.e0;
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    vec4 _t0575 = [_t0571, _t0572, _t0573, _t0574];
    tensor[4,4] _t0576 = [_t0566, _t056B, _t0570, _t0575];
    real _t0577 = 0.e0;
    real _t0578 = 0.1e1;
    real _t0579 = 0.e0;
    real _t057A = 0.e0;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    real _t057C = -0.1e1;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    vec4 _t0580 = [_t057C, _t057D, _t057E, _t057F];
    real _t0581 = 0.e0;
    real _t0582 = 0.e0;
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    vec4 _t0585 = [_t0581, _t0582, _t0583, _t0584];
    real _t0586 = 0.e0;
    real _t0587 = 0.e0;
    real _t0588 = 0.e0;
    real _t0589 = 0.1e1;
    vec4 _t058A = [_t0586, _t0587, _t0588, _t0589];
    tensor[4,4] _t058B = [_t057B, _t0580, _t0585, _t058A];
    real _t058C = 0.e0;
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    vec4 _t0590 = [_t058C, _t058D, _t058E, _t058F];
    real _t0591 = 0.e0;
    real _t0592 = 0.e0;
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    vec4 _t0595 = [_t0591, _t0592, _t0593, _t0594];
    real _t0596 = 0.1e1;
    real _t0597 = 0.e0;
    real _t0598 = 0.e0;
    real _t0599 = 0.e0;
    vec4 _t059A = [_t0596, _t0597, _t0598, _t0599];
    real _t059B = 0.e0;
    real _t059C = 0.e0;
    real _t059D = 0.e0;
    real _t059E = 0.1e1;
    vec4 _t059F = [_t059B, _t059C, _t059D, _t059E];
    tensor[4,4] _t05A0 = [_t0590, _t0595, _t059A, _t059F];
    tensor[4,4][4] _t05A1 = {_t0561, _t0576, _t058B, _t05A0};
    real _t05A2 = -0.1e1;
    real _t05A3 = -0.57735026919e0;
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.57735026919e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    vec4 _t05AB = [_t05A7, _t05A8, _t05A9, _t05AA];
    real _t05AC = 0.e0;
    real _t05AD = -0.57735026919e0;
    real _t05AE = 0.1e1;
    real _t05AF = 0.e0;
    vec4 _t05B0 = [_t05AC, _t05AD, _t05AE, _t05AF];
    real _t05B1 = 0.e0;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    vec4 _t05B5 = [_t05B1, _t05B2, _t05B3, _t05B4];
    tensor[4,4] _t05B6 = [_t05A6, _t05AB, _t05B0, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.e0;
    real _t05BA = 0.e0;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    real _t05BC = 0.1e1;
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    vec4 _t05C0 = [_t05BC, _t05BD, _t05BE, _t05BF];
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    vec4 _t05C5 = [_t05C1, _t05C2, _t05C3, _t05C4];
    real _t05C6 = 0.e0;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.1e1;
    vec4 _t05CA = [_t05C6, _t05C7, _t05C8, _t05C9];
    tensor[4,4] _t05CB = [_t05BB, _t05C0, _t05C5, _t05CA];
    real _t05CC = 0.1e1;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.e0;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    vec4 _t05D5 = [_t05D1, _t05D2, _t05D3, _t05D4];
    real _t05D6 = 0.e0;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    vec4 _t05DA = [_t05D6, _t05D7, _t05D8, _t05D9];
    real _t05DB = 0.e0;
    real _t05DC = 0.e0;
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    vec4 _t05DF = [_t05DB, _t05DC, _t05DD, _t05DE];
    tensor[4,4] _t05E0 = [_t05D0, _t05D5, _t05DA, _t05DF];
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    vec4 _t05E5 = [_t05E1, _t05E2, _t05E3, _t05E4];
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    vec4 _t05EA = [_t05E6, _t05E7, _t05E8, _t05E9];
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    vec4 _t05EF = [_t05EB, _t05EC, _t05ED, _t05EE];
    real _t05F0 = 0.e0;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    real _t05F3 = 0.1e1;
    vec4 _t05F4 = [_t05F0, _t05F1, _t05F2, _t05F3];
    tensor[4,4] _t05F5 = [_t05E5, _t05EA, _t05EF, _t05F4];
    tensor[4,4][4] _t05F6 = {_t05B6, _t05CB, _t05E0, _t05F5};
    real _t05F7 = -0.1e1;
    real _t05F8 = -0.1e1;
    real _t05F9 = 0.57735026919e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = 0.e0;
    real _t05FE = 0.57735026919e0;
    real _t05FF = 0.e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.1e1;
    real _t0603 = 0.57735026919e0;
    real _t0604 = 0.e0;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    real _t0606 = 0.e0;
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    vec4 _t060A = [_t0606, _t0607, _t0608, _t0609];
    tensor[4,4] _t060B = [_t05FB, _t0600, _t0605, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = 0.e0;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.1e1;
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    vec4 _t061F = [_t061B, _t061C, _t061D, _t061E];
    tensor[4,4] _t0620 = [_t0610, _t0615, _t061A, _t061F];
    real _t0621 = 0.1e1;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.e0;
    real _t0627 = 0.e0;
    real _t0628 = -0.1e1;
    real _t0629 = 0.e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.1e1;
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    real _t0630 = 0.e0;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    vec4 _t0634 = [_t0630, _t0631, _t0632, _t0633];
    tensor[4,4] _t0635 = [_t0625, _t062A, _t062F, _t0634];
    real _t0636 = 0.1e1;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    vec4 _t063F = [_t063B, _t063C, _t063D, _t063E];
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    vec4 _t0644 = [_t0640, _t0641, _t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    vec4 _t0649 = [_t0645, _t0646, _t0647, _t0648];
    tensor[4,4] _t064A = [_t063A, _t063F, _t0644, _t0649];
    tensor[4,4][4] _t064B = {_t060B, _t0620, _t0635, _t064A};
    tensor[4,4][4][4] _t064C = {_t054C, _t05A1, _t05F6, _t064B};
    real _t064D = time04E4[1];
    int _t064E = prim $r2i01B7 (_t064D);
    tensor[4,4][4] _t064F = prim $sub01C0<tensor[4,4][4]; %4> (_t064C, _t064E);
    real _t0650 = time04E4[1];
    int _t0651 = prim $r2i01B7 (_t0650);
    int[2] _t0652 = func nextCell404E8 (_t0651, cellId04E1, mesh04E0);
    int _t0653 = 1;
    int _t0654 = prim $sub01C0<int; %2> (_t0652, _t0653);
    tensor[4,4] _t0655 = prim $sub01C0<tensor[4,4]; %4> (_t064F, _t0654);
    string _t0656 = "\n";
    print (_t04ED, _t04EF, _t04F0, _t04F5, _t04F6, _t04F7, _t0655, _t0656);
    real _t0657 = time04E4[1];
    int _t0658 = prim $r2i01B7 (_t0657);
    int[2] _t0659 = func nextCell404E8 (_t0658, cellId04E1, mesh04E0);
    int _t065A = 0;
    int _t065B = prim $sub01C0<int; %2> (_t0659, _t065A);
    real _t065C = 0.1e1;
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.1e1;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.971445146547e-16;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.57735026919e0;
    real _t0672 = 0.57735026919e0;
    real _t0673 = 0.57735026919e0;
    real _t0674 = -0.57735026919e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = -0.333333333333e0;
    real _t0677 = 0.666666666667e0;
    real _t0678 = -0.333333333333e0;
    real _t0679 = 0.333333333333e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = -0.333333333333e0;
    real _t067C = -0.333333333333e0;
    real _t067D = 0.666666666667e0;
    real _t067E = 0.333333333333e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.971445146547e-16;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = -0.333333333333e0;
    real _t0687 = 0.666666666667e0;
    real _t0688 = -0.333333333333e0;
    real _t0689 = 0.333333333333e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = -0.57735026919e0;
    real _t068C = -0.57735026919e0;
    real _t068D = -0.57735026919e0;
    real _t068E = 0.57735026919e0;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = -0.333333333333e0;
    real _t0691 = -0.333333333333e0;
    real _t0692 = 0.666666666667e0;
    real _t0693 = 0.333333333333e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.971445146547e-16;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = -0.333333333333e0;
    real _t069C = 0.666666666667e0;
    real _t069D = -0.333333333333e0;
    real _t069E = 0.333333333333e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = -0.333333333333e0;
    real _t06A1 = -0.333333333333e0;
    real _t06A2 = 0.666666666667e0;
    real _t06A3 = 0.333333333333e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.57735026919e0;
    real _t06A6 = 0.57735026919e0;
    real _t06A7 = 0.57735026919e0;
    real _t06A8 = -0.57735026919e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.971445146547e-16;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][4] _t06B0 = {_t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.57735026919e0;
    real _t06B2 = -0.1e1;
    real _t06B3 = -0.1e1;
    real _t06B4 = 0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.57735026919e0;
    real _t06B7 = 0.1e1;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.57735026919e0;
    real _t06BC = 0.e0;
    real _t06BD = 0.1e1;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.e0;
    real _t06CC = 0.1e1;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.e0;
    real _t06DC = 0.1e1;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = -0.1e1;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    tensor[4,4][4] _t0705 = {_t06C5, _t06DA, _t06EF, _t0704};
    real _t0706 = -0.1e1;
    real _t0707 = -0.57735026919e0;
    real _t0708 = -0.1e1;
    real _t0709 = 0.1e1;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.1e1;
    real _t070C = -0.57735026919e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = -0.57735026919e0;
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    tensor[4,4] _t071A = [_t070A, _t070F, _t0714, _t0719];
    real _t071B = 0.e0;
    real _t071C = -0.1e1;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.1e1;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.1e1;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    tensor[4,4] _t072F = [_t071F, _t0724, _t0729, _t072E];
    real _t0730 = 0.1e1;
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.1e1;
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = 0.e0;
    real _t0750 = -0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    tensor[4,4][4] _t075A = {_t071A, _t072F, _t0744, _t0759};
    real _t075B = -0.1e1;
    real _t075C = -0.1e1;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.1e1;
    real _t0761 = 0.e0;
    real _t0762 = 0.57735026919e0;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.57735026919e0;
    real _t0768 = 0.e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    tensor[4,4] _t076F = [_t075F, _t0764, _t0769, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    tensor[4,4] _t0784 = [_t0774, _t0779, _t077E, _t0783];
    real _t0785 = 0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = -0.1e1;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.1e1;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    tensor[4,4] _t0799 = [_t0789, _t078E, _t0793, _t0798];
    real _t079A = 0.1e1;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.e0;
    vec4 _t079E = [_t079A, _t079B, _t079C, _t079D];
    real _t079F = 0.e0;
    real _t07A0 = 0.1e1;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    vec4 _t07A3 = [_t079F, _t07A0, _t07A1, _t07A2];
    real _t07A4 = 0.e0;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.1e1;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    real _t07AC = 0.1e1;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    tensor[4,4] _t07AE = [_t079E, _t07A3, _t07A8, _t07AD];
    tensor[4,4][4] _t07AF = {_t076F, _t0784, _t0799, _t07AE};
    tensor[4,4][4][4] _t07B0 = {_t06B0, _t0705, _t075A, _t07AF};
    real _t07B1 = time04E4[1];
    int _t07B2 = prim $r2i01B7 (_t07B1);
    tensor[4,4][4] _t07B3 = prim $sub01C0<tensor[4,4][4]; %4> (_t07B0, _t07B2);
    real _t07B4 = time04E4[1];
    int _t07B5 = prim $r2i01B7 (_t07B4);
    int[2] _t07B6 = func nextCell404E8 (_t07B5, cellId04E1, mesh04E0);
    int _t07B7 = 1;
    int _t07B8 = prim $sub01C0<int; %2> (_t07B6, _t07B7);
    tensor[4,4] _t07B9 = prim $sub01C0<tensor[4,4]; %4> (_t07B3, _t07B8);
    real _t07BA = time04E4[0];
    vec3 _t07BB = prim *0036<$[3]> (_t07BA, dPos04E3);
    vec3 _t07BC = prim +0017<$[3]> (_t07BB, refPos04E2);
    real _t07BD = _t07BC[0];
    real _t07BE = time04E4[0];
    vec3 _t07BF = prim *0036<$[3]> (_t07BE, dPos04E3);
    vec3 _t07C0 = prim +0017<$[3]> (_t07BF, refPos04E2);
    real _t07C1 = _t07C0[1];
    real _t07C2 = time04E4[0];
    vec3 _t07C3 = prim *0036<$[3]> (_t07C2, dPos04E3);
    vec3 _t07C4 = prim +0017<$[3]> (_t07C3, refPos04E2);
    real _t07C5 = _t07C4[2];
    real _t07C6 = 0.1e1;
    vec4 _t07C7 = [_t07BD, _t07C1, _t07C5, _t07C6];
    vec4 _t07C8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07B9, _t07C7);
    real _t07C9 = _t07C8[0];
    real _t07CA = 0.1e1;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.1e1;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    vec4 _t07D8 = [_t07D4, _t07D5, _t07D6, _t07D7];
    real _t07D9 = 0.971445146547e-16;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    tensor[4,4] _t07DE = [_t07CE, _t07D3, _t07D8, _t07DD];
    real _t07DF = 0.57735026919e0;
    real _t07E0 = 0.57735026919e0;
    real _t07E1 = 0.57735026919e0;
    real _t07E2 = -0.57735026919e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = -0.333333333333e0;
    real _t07E5 = 0.666666666667e0;
    real _t07E6 = -0.333333333333e0;
    real _t07E7 = 0.333333333333e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.333333333333e0;
    real _t07EA = -0.333333333333e0;
    real _t07EB = 0.666666666667e0;
    real _t07EC = 0.333333333333e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.971445146547e-16;
    real _t07EF = 0.e0;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.1e1;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    tensor[4,4] _t07F3 = [_t07E3, _t07E8, _t07ED, _t07F2];
    real _t07F4 = -0.333333333333e0;
    real _t07F5 = 0.666666666667e0;
    real _t07F6 = -0.333333333333e0;
    real _t07F7 = 0.333333333333e0;
    vec4 _t07F8 = [_t07F4, _t07F5, _t07F6, _t07F7];
    real _t07F9 = -0.57735026919e0;
    real _t07FA = -0.57735026919e0;
    real _t07FB = -0.57735026919e0;
    real _t07FC = 0.57735026919e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.333333333333e0;
    real _t07FF = -0.333333333333e0;
    real _t0800 = 0.666666666667e0;
    real _t0801 = 0.333333333333e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.971445146547e-16;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    tensor[4,4] _t0808 = [_t07F8, _t07FD, _t0802, _t0807];
    real _t0809 = -0.333333333333e0;
    real _t080A = 0.666666666667e0;
    real _t080B = -0.333333333333e0;
    real _t080C = 0.333333333333e0;
    vec4 _t080D = [_t0809, _t080A, _t080B, _t080C];
    real _t080E = -0.333333333333e0;
    real _t080F = -0.333333333333e0;
    real _t0810 = 0.666666666667e0;
    real _t0811 = 0.333333333333e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.57735026919e0;
    real _t0814 = 0.57735026919e0;
    real _t0815 = 0.57735026919e0;
    real _t0816 = -0.57735026919e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.971445146547e-16;
    real _t0819 = 0.e0;
    real _t081A = 0.e0;
    real _t081B = 0.1e1;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    tensor[4,4] _t081D = [_t080D, _t0812, _t0817, _t081C];
    tensor[4,4][4] _t081E = {_t07DE, _t07F3, _t0808, _t081D};
    real _t081F = 0.57735026919e0;
    real _t0820 = -0.1e1;
    real _t0821 = -0.1e1;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = 0.57735026919e0;
    real _t0825 = 0.1e1;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.57735026919e0;
    real _t082A = 0.e0;
    real _t082B = 0.1e1;
    real _t082C = 0.e0;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    tensor[4,4] _t0833 = [_t0823, _t0828, _t082D, _t0832];
    real _t0834 = 0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = 0.e0;
    real _t083A = 0.1e1;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = 0.e0;
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    tensor[4,4] _t0848 = [_t0838, _t083D, _t0842, _t0847];
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    real _t085B = 0.1e1;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    tensor[4,4] _t085D = [_t084D, _t0852, _t0857, _t085C];
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    vec4 _t0862 = [_t085E, _t085F, _t0860, _t0861];
    real _t0863 = 0.e0;
    real _t0864 = 0.e0;
    real _t0865 = 0.1e1;
    real _t0866 = 0.e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.1e1;
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.e0;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.1e1;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    tensor[4,4] _t0872 = [_t0862, _t0867, _t086C, _t0871];
    tensor[4,4][4] _t0873 = {_t0833, _t0848, _t085D, _t0872};
    real _t0874 = -0.1e1;
    real _t0875 = -0.57735026919e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.1e1;
    real _t087A = -0.57735026919e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = -0.57735026919e0;
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    vec4 _t0887 = [_t0883, _t0884, _t0885, _t0886];
    tensor[4,4] _t0888 = [_t0878, _t087D, _t0882, _t0887];
    real _t0889 = 0.e0;
    real _t088A = -0.1e1;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    vec4 _t089C = [_t0898, _t0899, _t089A, _t089B];
    tensor[4,4] _t089D = [_t088D, _t0892, _t0897, _t089C];
    real _t089E = 0.1e1;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.e0;
    real _t08A4 = 0.1e1;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    real _t08AD = 0.e0;
    real _t08AE = 0.e0;
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    vec4 _t08B1 = [_t08AD, _t08AE, _t08AF, _t08B0];
    tensor[4,4] _t08B2 = [_t08A2, _t08A7, _t08AC, _t08B1];
    real _t08B3 = 0.1e1;
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    vec4 _t08B7 = [_t08B3, _t08B4, _t08B5, _t08B6];
    real _t08B8 = 0.e0;
    real _t08B9 = 0.e0;
    real _t08BA = 0.1e1;
    real _t08BB = 0.e0;
    vec4 _t08BC = [_t08B8, _t08B9, _t08BA, _t08BB];
    real _t08BD = 0.e0;
    real _t08BE = -0.1e1;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    tensor[4,4] _t08C7 = [_t08B7, _t08BC, _t08C1, _t08C6];
    tensor[4,4][4] _t08C8 = {_t0888, _t089D, _t08B2, _t08C7};
    real _t08C9 = -0.1e1;
    real _t08CA = -0.1e1;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.1e1;
    real _t08CF = 0.e0;
    real _t08D0 = 0.57735026919e0;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.1e1;
    real _t08D5 = 0.57735026919e0;
    real _t08D6 = 0.e0;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.1e1;
    vec4 _t08DC = [_t08D8, _t08D9, _t08DA, _t08DB];
    tensor[4,4] _t08DD = [_t08CD, _t08D2, _t08D7, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.1e1;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.1e1;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    vec4 _t08F1 = [_t08ED, _t08EE, _t08EF, _t08F0];
    tensor[4,4] _t08F2 = [_t08E2, _t08E7, _t08EC, _t08F1];
    real _t08F3 = 0.1e1;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.e0;
    real _t08FA = -0.1e1;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    vec4 _t0906 = [_t0902, _t0903, _t0904, _t0905];
    tensor[4,4] _t0907 = [_t08F7, _t08FC, _t0901, _t0906];
    real _t0908 = 0.1e1;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.e0;
    vec4 _t090C = [_t0908, _t0909, _t090A, _t090B];
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    vec4 _t0911 = [_t090D, _t090E, _t090F, _t0910];
    real _t0912 = 0.e0;
    real _t0913 = 0.e0;
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    vec4 _t0916 = [_t0912, _t0913, _t0914, _t0915];
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    vec4 _t091B = [_t0917, _t0918, _t0919, _t091A];
    tensor[4,4] _t091C = [_t090C, _t0911, _t0916, _t091B];
    tensor[4,4][4] _t091D = {_t08DD, _t08F2, _t0907, _t091C};
    tensor[4,4][4][4] _t091E = {_t081E, _t0873, _t08C8, _t091D};
    real _t091F = time04E4[1];
    int _t0920 = prim $r2i01B7 (_t091F);
    tensor[4,4][4] _t0921 = prim $sub01C0<tensor[4,4][4]; %4> (_t091E, _t0920);
    real _t0922 = time04E4[1];
    int _t0923 = prim $r2i01B7 (_t0922);
    int[2] _t0924 = func nextCell404E8 (_t0923, cellId04E1, mesh04E0);
    int _t0925 = 1;
    int _t0926 = prim $sub01C0<int; %2> (_t0924, _t0925);
    tensor[4,4] _t0927 = prim $sub01C0<tensor[4,4]; %4> (_t0921, _t0926);
    real _t0928 = time04E4[0];
    vec3 _t0929 = prim *0036<$[3]> (_t0928, dPos04E3);
    vec3 _t092A = prim +0017<$[3]> (_t0929, refPos04E2);
    real _t092B = _t092A[0];
    real _t092C = time04E4[0];
    vec3 _t092D = prim *0036<$[3]> (_t092C, dPos04E3);
    vec3 _t092E = prim +0017<$[3]> (_t092D, refPos04E2);
    real _t092F = _t092E[1];
    real _t0930 = time04E4[0];
    vec3 _t0931 = prim *0036<$[3]> (_t0930, dPos04E3);
    vec3 _t0932 = prim +0017<$[3]> (_t0931, refPos04E2);
    real _t0933 = _t0932[2];
    real _t0934 = 0.1e1;
    vec4 _t0935 = [_t092B, _t092F, _t0933, _t0934];
    vec4 _t0936 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0927, _t0935);
    real _t0937 = _t0936[1];
    real _t0938 = 0.1e1;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.1e1;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    vec4 _t0946 = [_t0942, _t0943, _t0944, _t0945];
    real _t0947 = 0.971445146547e-16;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    vec4 _t094B = [_t0947, _t0948, _t0949, _t094A];
    tensor[4,4] _t094C = [_t093C, _t0941, _t0946, _t094B];
    real _t094D = 0.57735026919e0;
    real _t094E = 0.57735026919e0;
    real _t094F = 0.57735026919e0;
    real _t0950 = -0.57735026919e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = -0.333333333333e0;
    real _t0953 = 0.666666666667e0;
    real _t0954 = -0.333333333333e0;
    real _t0955 = 0.333333333333e0;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    real _t0957 = -0.333333333333e0;
    real _t0958 = -0.333333333333e0;
    real _t0959 = 0.666666666667e0;
    real _t095A = 0.333333333333e0;
    vec4 _t095B = [_t0957, _t0958, _t0959, _t095A];
    real _t095C = 0.971445146547e-16;
    real _t095D = 0.e0;
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    vec4 _t0960 = [_t095C, _t095D, _t095E, _t095F];
    tensor[4,4] _t0961 = [_t0951, _t0956, _t095B, _t0960];
    real _t0962 = -0.333333333333e0;
    real _t0963 = 0.666666666667e0;
    real _t0964 = -0.333333333333e0;
    real _t0965 = 0.333333333333e0;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    real _t0967 = -0.57735026919e0;
    real _t0968 = -0.57735026919e0;
    real _t0969 = -0.57735026919e0;
    real _t096A = 0.57735026919e0;
    vec4 _t096B = [_t0967, _t0968, _t0969, _t096A];
    real _t096C = -0.333333333333e0;
    real _t096D = -0.333333333333e0;
    real _t096E = 0.666666666667e0;
    real _t096F = 0.333333333333e0;
    vec4 _t0970 = [_t096C, _t096D, _t096E, _t096F];
    real _t0971 = 0.971445146547e-16;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.1e1;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    tensor[4,4] _t0976 = [_t0966, _t096B, _t0970, _t0975];
    real _t0977 = -0.333333333333e0;
    real _t0978 = 0.666666666667e0;
    real _t0979 = -0.333333333333e0;
    real _t097A = 0.333333333333e0;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    real _t097C = -0.333333333333e0;
    real _t097D = -0.333333333333e0;
    real _t097E = 0.666666666667e0;
    real _t097F = 0.333333333333e0;
    vec4 _t0980 = [_t097C, _t097D, _t097E, _t097F];
    real _t0981 = 0.57735026919e0;
    real _t0982 = 0.57735026919e0;
    real _t0983 = 0.57735026919e0;
    real _t0984 = -0.57735026919e0;
    vec4 _t0985 = [_t0981, _t0982, _t0983, _t0984];
    real _t0986 = 0.971445146547e-16;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.1e1;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    tensor[4,4] _t098B = [_t097B, _t0980, _t0985, _t098A];
    tensor[4,4][4] _t098C = {_t094C, _t0961, _t0976, _t098B};
    real _t098D = 0.57735026919e0;
    real _t098E = -0.1e1;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.57735026919e0;
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.57735026919e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    vec4 _t09A0 = [_t099C, _t099D, _t099E, _t099F];
    tensor[4,4] _t09A1 = [_t0991, _t0996, _t099B, _t09A0];
    real _t09A2 = 0.1e1;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.e0;
    real _t09A8 = 0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    real _t09B1 = 0.e0;
    real _t09B2 = 0.e0;
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    vec4 _t09B5 = [_t09B1, _t09B2, _t09B3, _t09B4];
    tensor[4,4] _t09B6 = [_t09A6, _t09AB, _t09B0, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    real _t09BC = -0.1e1;
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    vec4 _t09C0 = [_t09BC, _t09BD, _t09BE, _t09BF];
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    vec4 _t09C5 = [_t09C1, _t09C2, _t09C3, _t09C4];
    real _t09C6 = 0.e0;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    real _t09C9 = 0.1e1;
    vec4 _t09CA = [_t09C6, _t09C7, _t09C8, _t09C9];
    tensor[4,4] _t09CB = [_t09BB, _t09C0, _t09C5, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    real _t09D1 = 0.e0;
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    vec4 _t09D5 = [_t09D1, _t09D2, _t09D3, _t09D4];
    real _t09D6 = 0.1e1;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    vec4 _t09DA = [_t09D6, _t09D7, _t09D8, _t09D9];
    real _t09DB = 0.e0;
    real _t09DC = 0.e0;
    real _t09DD = 0.e0;
    real _t09DE = 0.1e1;
    vec4 _t09DF = [_t09DB, _t09DC, _t09DD, _t09DE];
    tensor[4,4] _t09E0 = [_t09D0, _t09D5, _t09DA, _t09DF];
    tensor[4,4][4] _t09E1 = {_t09A1, _t09B6, _t09CB, _t09E0};
    real _t09E2 = -0.1e1;
    real _t09E3 = -0.57735026919e0;
    real _t09E4 = -0.1e1;
    real _t09E5 = 0.1e1;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.1e1;
    real _t09E8 = -0.57735026919e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.57735026919e0;
    real _t09EE = 0.1e1;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.e0;
    real _t09F2 = 0.e0;
    real _t09F3 = 0.e0;
    real _t09F4 = 0.1e1;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    tensor[4,4] _t09F6 = [_t09E6, _t09EB, _t09F0, _t09F5];
    real _t09F7 = 0.e0;
    real _t09F8 = -0.1e1;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.1e1;
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    real _t0A06 = 0.e0;
    real _t0A07 = 0.e0;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.1e1;
    vec4 _t0A0A = [_t0A06, _t0A07, _t0A08, _t0A09];
    tensor[4,4] _t0A0B = [_t09FB, _t0A00, _t0A05, _t0A0A];
    real _t0A0C = 0.1e1;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    vec4 _t0A1F = [_t0A1B, _t0A1C, _t0A1D, _t0A1E];
    tensor[4,4] _t0A20 = [_t0A10, _t0A15, _t0A1A, _t0A1F];
    real _t0A21 = 0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = -0.1e1;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    real _t0A30 = 0.e0;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    vec4 _t0A34 = [_t0A30, _t0A31, _t0A32, _t0A33];
    tensor[4,4] _t0A35 = [_t0A25, _t0A2A, _t0A2F, _t0A34];
    tensor[4,4][4] _t0A36 = {_t09F6, _t0A0B, _t0A20, _t0A35};
    real _t0A37 = -0.1e1;
    real _t0A38 = -0.1e1;
    real _t0A39 = 0.57735026919e0;
    real _t0A3A = 0.1e1;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.57735026919e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.1e1;
    real _t0A43 = 0.57735026919e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.e0;
    real _t0A49 = 0.1e1;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    tensor[4,4] _t0A4B = [_t0A3B, _t0A40, _t0A45, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.e0;
    real _t0A5E = 0.1e1;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    tensor[4,4] _t0A60 = [_t0A50, _t0A55, _t0A5A, _t0A5F];
    real _t0A61 = 0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = -0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.1e1;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.1e1;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    tensor[4,4] _t0A75 = [_t0A65, _t0A6A, _t0A6F, _t0A74];
    real _t0A76 = 0.1e1;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.1e1;
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    real _t0A85 = 0.e0;
    real _t0A86 = 0.e0;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.1e1;
    vec4 _t0A89 = [_t0A85, _t0A86, _t0A87, _t0A88];
    tensor[4,4] _t0A8A = [_t0A7A, _t0A7F, _t0A84, _t0A89];
    tensor[4,4][4] _t0A8B = {_t0A4B, _t0A60, _t0A75, _t0A8A};
    tensor[4,4][4][4] _t0A8C = {_t098C, _t09E1, _t0A36, _t0A8B};
    real _t0A8D = time04E4[1];
    int _t0A8E = prim $r2i01B7 (_t0A8D);
    tensor[4,4][4] _t0A8F = prim $sub01C0<tensor[4,4][4]; %4> (_t0A8C, _t0A8E);
    real _t0A90 = time04E4[1];
    int _t0A91 = prim $r2i01B7 (_t0A90);
    int[2] _t0A92 = func nextCell404E8 (_t0A91, cellId04E1, mesh04E0);
    int _t0A93 = 1;
    int _t0A94 = prim $sub01C0<int; %2> (_t0A92, _t0A93);
    tensor[4,4] _t0A95 = prim $sub01C0<tensor[4,4]; %4> (_t0A8F, _t0A94);
    real _t0A96 = time04E4[0];
    vec3 _t0A97 = prim *0036<$[3]> (_t0A96, dPos04E3);
    vec3 _t0A98 = prim +0017<$[3]> (_t0A97, refPos04E2);
    real _t0A99 = _t0A98[0];
    real _t0A9A = time04E4[0];
    vec3 _t0A9B = prim *0036<$[3]> (_t0A9A, dPos04E3);
    vec3 _t0A9C = prim +0017<$[3]> (_t0A9B, refPos04E2);
    real _t0A9D = _t0A9C[1];
    real _t0A9E = time04E4[0];
    vec3 _t0A9F = prim *0036<$[3]> (_t0A9E, dPos04E3);
    vec3 _t0AA0 = prim +0017<$[3]> (_t0A9F, refPos04E2);
    real _t0AA1 = _t0AA0[2];
    real _t0AA2 = 0.1e1;
    vec4 _t0AA3 = [_t0A99, _t0A9D, _t0AA1, _t0AA2];
    vec4 _t0AA4 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A95, _t0AA3);
    real _t0AA5 = _t0AA4[2];
    vec3 _t0AA6 = [_t07C9, _t0937, _t0AA5];
    real _t0AA7 = time04E4[1];
    int _t0AA8 = prim $r2i01B7 (_t0AA7);
    int[2] _t0AA9 = func nextCell404E8 (_t0AA8, cellId04E1, mesh04E0);
    int _t0AAA = 1;
    int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
    Femdata: MeshPos _t0AAC = extractFemItemN((mesh04E0, _t065B, _t0AA6, _t0AAB),RefBuild(Mesh),);
    return _t0AAC;
  } else {
    real _t0AAD = time04E4[0];
    vec3 _t0AAE = prim *0036<$[3]> (_t0AAD, dPos04E3);
    vec3 _t0AAF = prim +0017<$[3]> (_t0AAE, refPos04E2);
    Femdata: MeshPos _t0AB0 = extractFemItemN((mesh04E0, _t0AAF),InvalidBuildBoundary(MeshPos),);
    return _t0AB0;
  }
}
function int[2]#8 nextCell404E8 (int faceIdx0AB1, int cell0AB2, Femdata: Mesh mesh0AB3)
{
  int _t0AB4 = -1;
  bool _t0AB5 = prim ==0082 (faceIdx0AB1, _t0AB4);
  if _t0AB5 {
    int _t0AB6 = -1;
    int _t0AB7 = -1;
    int[2] _t0AB8 = {_t0AB6, _t0AB7};
    return _t0AB8;
  } else {
    int _t0AB9 = 8;
    int _t0ABA = prim *0033 (cell0AB2, _t0AB9);
    int _t0ABB = 2;
    int _t0ABC = prim *0033 (faceIdx0AB1, _t0ABB);
    int _t0ABD = prim +0015 (_t0ABA, _t0ABC);
    int[2] _t0ABE = extractFemItemN((mesh0AB3, _t0ABD),CellFaceCell(Mesh),);
    return _t0ABE;
  }
}
function vec2#2 _exit1099 (vec3 refPos0AC0, vec3 dPos0AC1, int i109A)
{
  real time109B = +inf;
  int face109C = -1;
  real faceTime109D = -inf;
  string _t109E = "\ntest :";
  real _t109F = 0.57735026919e0;
  real _t10A0 = 0.57735026919e0;
  real _t10A1 = 0.57735026919e0;
  real _t10A2 = 0.57735026919e0;
  vec3 _t10A3 = [_t10A0, _t10A1, _t10A2];
  real _t10A4 = prim •00CE<$[3]; $[3]; $[]> (_t10A3, refPos0AC0);
  real _t10A5 = prim -0026<$[]> (_t109F, _t10A4);
  real _t10A6 = 0.57735026919e0;
  real _t10A7 = 0.57735026919e0;
  real _t10A8 = 0.57735026919e0;
  vec3 _t10A9 = [_t10A6, _t10A7, _t10A8];
  real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, dPos0AC1);
  real _t10AB = prim /0055 (_t10A5, _t10AA);
  string _t10AC = " test2: ";
  real _t10AD = 0.57735026919e0;
  real _t10AE = 0.57735026919e0;
  real _t10AF = 0.57735026919e0;
  vec3 _t10B0 = [_t10AD, _t10AE, _t10AF];
  real _t10B1 = prim •00CE<$[3]; $[3]; $[]> (_t10B0, dPos0AC1);
  string _t10B2 = " insideTest: ";
  real _t10B3 = 0.1e1;
  real _t10B4 = 0.1e-7;
  real _t10B5 = prim +0017<$[]> (_t10B3, _t10B4);
  real _t10B6 = 0.1e1;
  real _t10B7 = 0.1e1;
  real _t10B8 = 0.1e1;
  vec3 _t10B9 = [_t10B6, _t10B7, _t10B8];
  real _t10BA = 0.57735026919e0;
  real _t10BB = 0.57735026919e0;
  real _t10BC = 0.57735026919e0;
  real _t10BD = 0.57735026919e0;
  vec3 _t10BE = [_t10BB, _t10BC, _t10BD];
  real _t10BF = prim •00CE<$[3]; $[3]; $[]> (_t10BE, refPos0AC0);
  real _t10C0 = prim -0026<$[]> (_t10BA, _t10BF);
  real _t10C1 = 0.57735026919e0;
  real _t10C2 = 0.57735026919e0;
  real _t10C3 = 0.57735026919e0;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, dPos0AC1);
  real _t10C6 = prim /0055 (_t10C0, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0AC1, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0AC0, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10B9, _t10C8);
  bool _t10CA = prim >0080 (_t10B5, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.57735026919e0;
  real _t10D0 = 0.57735026919e0;
  real _t10D1 = 0.57735026919e0;
  real _t10D2 = 0.57735026919e0;
  vec3 _t10D3 = [_t10D0, _t10D1, _t10D2];
  real _t10D4 = prim •00CE<$[3]; $[3]; $[]> (_t10D3, refPos0AC0);
  real _t10D5 = prim -0026<$[]> (_t10CF, _t10D4);
  real _t10D6 = 0.57735026919e0;
  real _t10D7 = 0.57735026919e0;
  real _t10D8 = 0.57735026919e0;
  vec3 _t10D9 = [_t10D6, _t10D7, _t10D8];
  real _t10DA = prim •00CE<$[3]; $[3]; $[]> (_t10D9, dPos0AC1);
  real _t10DB = prim /0055 (_t10D5, _t10DA);
  vec3 _t10DC = prim *0038<$[3]> (dPos0AC1, _t10DB);
  vec3 _t10DD = prim +0017<$[3]> (refPos0AC0, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (_t10CE, _t10DD);
  real _t10DF = _t10DE[0];
  real _t10E0 = -0.e0;
  bool _t10E1 = prim >0080 (_t10DF, _t10E0);
  real _t10E2 = 0.1e-7;
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  vec3 _t10E5 = [_t10E2, _t10E3, _t10E4];
  real _t10E6 = 0.57735026919e0;
  real _t10E7 = 0.57735026919e0;
  real _t10E8 = 0.57735026919e0;
  real _t10E9 = 0.57735026919e0;
  vec3 _t10EA = [_t10E7, _t10E8, _t10E9];
  real _t10EB = prim •00CE<$[3]; $[3]; $[]> (_t10EA, refPos0AC0);
  real _t10EC = prim -0026<$[]> (_t10E6, _t10EB);
  real _t10ED = 0.57735026919e0;
  real _t10EE = 0.57735026919e0;
  real _t10EF = 0.57735026919e0;
  vec3 _t10F0 = [_t10ED, _t10EE, _t10EF];
  real _t10F1 = prim •00CE<$[3]; $[3]; $[]> (_t10F0, dPos0AC1);
  real _t10F2 = prim /0055 (_t10EC, _t10F1);
  vec3 _t10F3 = prim *0038<$[3]> (dPos0AC1, _t10F2);
  vec3 _t10F4 = prim +0017<$[3]> (refPos0AC0, _t10F3);
  vec3 _t10F5 = prim +0017<$[3]> (_t10E5, _t10F4);
  real _t10F6 = _t10F5[1];
  real _t10F7 = -0.e0;
  bool _t10F8 = prim >0080 (_t10F6, _t10F7);
  real _t10F9 = 0.1e-7;
  real _t10FA = 0.1e-7;
  real _t10FB = 0.1e-7;
  vec3 _t10FC = [_t10F9, _t10FA, _t10FB];
  real _t10FD = 0.57735026919e0;
  real _t10FE = 0.57735026919e0;
  real _t10FF = 0.57735026919e0;
  real _t1100 = 0.57735026919e0;
  vec3 _t1101 = [_t10FE, _t10FF, _t1100];
  real _t1102 = prim •00CE<$[3]; $[3]; $[]> (_t1101, refPos0AC0);
  real _t1103 = prim -0026<$[]> (_t10FD, _t1102);
  real _t1104 = 0.57735026919e0;
  real _t1105 = 0.57735026919e0;
  real _t1106 = 0.57735026919e0;
  vec3 _t1107 = [_t1104, _t1105, _t1106];
  real _t1108 = prim •00CE<$[3]; $[3]; $[]> (_t1107, dPos0AC1);
  real _t1109 = prim /0055 (_t1103, _t1108);
  vec3 _t110A = prim *0038<$[3]> (dPos0AC1, _t1109);
  vec3 _t110B = prim +0017<$[3]> (refPos0AC0, _t110A);
  vec3 _t110C = prim +0017<$[3]> (_t10FC, _t110B);
  real _t110D = _t110C[2];
  real _t110E = -0.e0;
  bool _t110F = prim >0080 (_t110D, _t110E);
  bool _t1110 = prim $and01C4 (_t10F8, _t110F);
  bool _t1111 = prim $and01C4 (_t10E1, _t1110);
  bool _t1112 = prim $and01C4 (_t10CA, _t1111);
  string _t1113 = " dist: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  real _t1117 = 0.57735026919e0;
  vec3 _t1118 = [_t1115, _t1116, _t1117];
  real _t1119 = prim •00CE<$[3]; $[3]; $[]> (_t1118, refPos0AC0);
  real _t111A = prim -0026<$[]> (_t1114, _t1119);
  real _t111B = prim |()|00B5<$[]> (_t111A);
  string _t111C = "signed dist: ";
  real _t111D = 0.57735026919e0;
  real _t111E = 0.57735026919e0;
  real _t111F = 0.57735026919e0;
  real _t1120 = 0.57735026919e0;
  vec3 _t1121 = [_t111E, _t111F, _t1120];
  real _t1122 = prim •00CE<$[3]; $[3]; $[]> (_t1121, refPos0AC0);
  real _t1123 = prim -0026<$[]> (_t111D, _t1122);
  string _t1124 = " face: ";
  int _t1125 = 0;
  string _t1126 = " place: ";
  real _t1127 = 0.57735026919e0;
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, refPos0AC0);
  real _t112D = prim -0026<$[]> (_t1127, _t112C);
  real _t112E = 0.57735026919e0;
  real _t112F = 0.57735026919e0;
  real _t1130 = 0.57735026919e0;
  vec3 _t1131 = [_t112E, _t112F, _t1130];
  real _t1132 = prim •00CE<$[3]; $[3]; $[]> (_t1131, dPos0AC1);
  real _t1133 = prim /0055 (_t112D, _t1132);
  vec3 _t1134 = prim *0038<$[3]> (dPos0AC1, _t1133);
  vec3 _t1135 = prim +0017<$[3]> (refPos0AC0, _t1134);
  string _t1136 = " error: ";
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  real _t113A = 0.57735026919e0;
  vec3 _t113B = [_t1138, _t1139, _t113A];
  real _t113C = 0.57735026919e0;
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, refPos0AC0);
  real _t1142 = prim -0026<$[]> (_t113C, _t1141);
  real _t1143 = 0.57735026919e0;
  real _t1144 = 0.57735026919e0;
  real _t1145 = 0.57735026919e0;
  vec3 _t1146 = [_t1143, _t1144, _t1145];
  real _t1147 = prim •00CE<$[3]; $[3]; $[]> (_t1146, dPos0AC1);
  real _t1148 = prim /0055 (_t1142, _t1147);
  vec3 _t1149 = prim *0038<$[3]> (dPos0AC1, _t1148);
  vec3 _t114A = prim +0017<$[3]> (refPos0AC0, _t1149);
  real _t114B = prim •00CE<$[3]; $[3]; $[]> (_t113B, _t114A);
  real _t114C = prim -0026<$[]> (_t1137, _t114B);
  real _t114D = prim |()|00B5<$[]> (_t114C);
  string _t114E = " offset :";
  string _t114F = " dp: ";
  string _t1150 = " otherPossibleTime: ";
  string _t1151 = "\n";
  string _t1152 = "\n original face: ";
  string _t1153 = " ";
  print (_t109E, _t10AB, _t10AC, _t10B1, _t10B2, _t1112, _t1113, _t111B, _t111C, _t1123, _t1124, _t1125, _t1126, _t1135, _t1136, _t114D, _t114E, refPos0AC0, _t114F, dPos0AC1, _t1150, faceTime109D, _t1151, _t1152, i109A, _t1153);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  real _t1157 = 0.57735026919e0;
  vec3 _t1158 = [_t1155, _t1156, _t1157];
  real _t1159 = prim •00CE<$[3]; $[3]; $[]> (_t1158, refPos0AC0);
  real _t115A = prim -0026<$[]> (_t1154, _t1159);
  real _t115B = 0.57735026919e0;
  real _t115C = 0.57735026919e0;
  real _t115D = 0.57735026919e0;
  vec3 _t115E = [_t115B, _t115C, _t115D];
  real _t115F = prim •00CE<$[3]; $[3]; $[]> (_t115E, dPos0AC1);
  real _t1160 = prim /0055 (_t115A, _t115F);
  real _t1161 = -0.1e-7;
  bool _t1162 = prim >=007E (_t1160, _t1161);
  real _t1163 = 0.57735026919e0;
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  vec3 _t1167 = [_t1164, _t1165, _t1166];
  real _t1168 = prim •00CE<$[3]; $[3]; $[]> (_t1167, refPos0AC0);
  real _t1169 = prim -0026<$[]> (_t1163, _t1168);
  real _t116A = 0.57735026919e0;
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  vec3 _t116D = [_t116A, _t116B, _t116C];
  real _t116E = prim •00CE<$[3]; $[3]; $[]> (_t116D, dPos0AC1);
  real _t116F = prim /0055 (_t1169, _t116E);
  bool _t1170 = prim >0080 (time109B, _t116F);
  real _t1171 = 0.57735026919e0;
  real _t1172 = 0.57735026919e0;
  real _t1173 = 0.57735026919e0;
  vec3 _t1174 = [_t1171, _t1172, _t1173];
  real _t1175 = prim •00CE<$[3]; $[3]; $[]> (_t1174, dPos0AC1);
  real _t1176 = prim |()|00B5<$[]> (_t1175);
  real _t1177 = 0.1e-7;
  bool _t1178 = prim >=007E (_t1176, _t1177);
  bool _t1179 = prim $and01C4 (_t1170, _t1178);
  bool _t117A = prim $and01C4 (_t1162, _t1179);
  if _t117A {
    int _t117B = 0;
    bool _t117C = prim !=0086 (i109A, _t117B);
    if _t117C {
      string _t117D = "Saving at this face!";
      real _t117E = 0.57735026919e0;
      real _t117F = 0.57735026919e0;
      real _t1180 = 0.57735026919e0;
      real _t1181 = 0.57735026919e0;
      vec3 _t1182 = [_t117F, _t1180, _t1181];
      real _t1183 = prim •00CE<$[3]; $[3]; $[]> (_t1182, refPos0AC0);
      real _t1184 = prim -0026<$[]> (_t117E, _t1183);
      real _t1185 = 0.57735026919e0;
      real _t1186 = 0.57735026919e0;
      real _t1187 = 0.57735026919e0;
      vec3 _t1188 = [_t1185, _t1186, _t1187];
      real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, dPos0AC1);
      real _t118A = prim /0055 (_t1184, _t1189);
      real _t118B = 0.57735026919e0;
      real _t118C = 0.57735026919e0;
      real _t118D = 0.57735026919e0;
      real _t118E = 0.57735026919e0;
      vec3 _t118F = [_t118C, _t118D, _t118E];
      real _t1190 = prim •00CE<$[3]; $[3]; $[]> (_t118F, refPos0AC0);
      real _t1191 = prim -0026<$[]> (_t118B, _t1190);
      real _t1192 = 0.57735026919e0;
      real _t1193 = 0.57735026919e0;
      real _t1194 = 0.57735026919e0;
      vec3 _t1195 = [_t1192, _t1193, _t1194];
      real _t1196 = prim •00CE<$[3]; $[3]; $[]> (_t1195, dPos0AC1);
      real _t1197 = prim /0055 (_t1191, _t1196);
      bool _t1198 = prim >0080 (time109B, _t1197);
      string _t1199 = "\n";
      print (_t117D, _t118A, _t1198, _t1199);
      real _t119A = 0.57735026919e0;
      real _t119B = 0.57735026919e0;
      real _t119C = 0.57735026919e0;
      real _t119D = 0.57735026919e0;
      vec3 _t119E = [_t119B, _t119C, _t119D];
      real _t119F = prim •00CE<$[3]; $[3]; $[]> (_t119E, refPos0AC0);
      real _t11A0 = prim -0026<$[]> (_t119A, _t119F);
      real _t11A1 = 0.57735026919e0;
      real _t11A2 = 0.57735026919e0;
      real _t11A3 = 0.57735026919e0;
      vec3 _t11A4 = [_t11A1, _t11A2, _t11A3];
      real _t11A5 = prim •00CE<$[3]; $[3]; $[]> (_t11A4, dPos0AC1);
      time109B = prim /0055 (_t11A0, _t11A5);
      face109C = 0;
    } else {
      real _t11A6 = 0.57735026919e0;
      real _t11A7 = 0.57735026919e0;
      real _t11A8 = 0.57735026919e0;
      real _t11A9 = 0.57735026919e0;
      vec3 _t11AA = [_t11A7, _t11A8, _t11A9];
      real _t11AB = prim •00CE<$[3]; $[3]; $[]> (_t11AA, refPos0AC0);
      real _t11AC = prim -0026<$[]> (_t11A6, _t11AB);
      real _t11AD = 0.57735026919e0;
      real _t11AE = 0.57735026919e0;
      real _t11AF = 0.57735026919e0;
      vec3 _t11B0 = [_t11AD, _t11AE, _t11AF];
      real _t11B1 = prim •00CE<$[3]; $[3]; $[]> (_t11B0, dPos0AC1);
      faceTime109D = prim /0055 (_t11AC, _t11B1);
      string _t11B2 = "Saving backup time: ";
      string _t11B3 = "\n";
      print (_t11B2, faceTime109D, _t11B3);
    }
  }
  string _t11B4 = "\ntest :";
  real _t11B5 = 0.e0;
  real _t11B6 = -0.1e1;
  real _t11B7 = 0.e0;
  real _t11B8 = 0.e0;
  vec3 _t11B9 = [_t11B6, _t11B7, _t11B8];
  real _t11BA = prim •00CE<$[3]; $[3]; $[]> (_t11B9, refPos0AC0);
  real _t11BB = prim -0026<$[]> (_t11B5, _t11BA);
  real _t11BC = -0.1e1;
  real _t11BD = 0.e0;
  real _t11BE = 0.e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, dPos0AC1);
  real _t11C1 = prim /0055 (_t11BB, _t11C0);
  string _t11C2 = " test2: ";
  real _t11C3 = -0.1e1;
  real _t11C4 = 0.e0;
  real _t11C5 = 0.e0;
  vec3 _t11C6 = [_t11C3, _t11C4, _t11C5];
  real _t11C7 = prim •00CE<$[3]; $[3]; $[]> (_t11C6, dPos0AC1);
  string _t11C8 = " insideTest: ";
  real _t11C9 = 0.1e1;
  real _t11CA = 0.1e-7;
  real _t11CB = prim +0017<$[]> (_t11C9, _t11CA);
  real _t11CC = 0.1e1;
  real _t11CD = 0.1e1;
  real _t11CE = 0.1e1;
  vec3 _t11CF = [_t11CC, _t11CD, _t11CE];
  real _t11D0 = 0.e0;
  real _t11D1 = -0.1e1;
  real _t11D2 = 0.e0;
  real _t11D3 = 0.e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, refPos0AC0);
  real _t11D6 = prim -0026<$[]> (_t11D0, _t11D5);
  real _t11D7 = -0.1e1;
  real _t11D8 = 0.e0;
  real _t11D9 = 0.e0;
  vec3 _t11DA = [_t11D7, _t11D8, _t11D9];
  real _t11DB = prim •00CE<$[3]; $[3]; $[]> (_t11DA, dPos0AC1);
  real _t11DC = prim /0055 (_t11D6, _t11DB);
  vec3 _t11DD = prim *0038<$[3]> (dPos0AC1, _t11DC);
  vec3 _t11DE = prim +0017<$[3]> (refPos0AC0, _t11DD);
  real _t11DF = prim •00CE<$[3]; $[3]; $[]> (_t11CF, _t11DE);
  bool _t11E0 = prim >0080 (_t11CB, _t11DF);
  real _t11E1 = 0.1e-7;
  real _t11E2 = 0.1e-7;
  real _t11E3 = 0.1e-7;
  vec3 _t11E4 = [_t11E1, _t11E2, _t11E3];
  real _t11E5 = 0.e0;
  real _t11E6 = -0.1e1;
  real _t11E7 = 0.e0;
  real _t11E8 = 0.e0;
  vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
  real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0AC0);
  real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
  real _t11EC = -0.1e1;
  real _t11ED = 0.e0;
  real _t11EE = 0.e0;
  vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
  real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0AC1);
  real _t11F1 = prim /0055 (_t11EB, _t11F0);
  vec3 _t11F2 = prim *0038<$[3]> (dPos0AC1, _t11F1);
  vec3 _t11F3 = prim +0017<$[3]> (refPos0AC0, _t11F2);
  vec3 _t11F4 = prim +0017<$[3]> (_t11E4, _t11F3);
  real _t11F5 = _t11F4[0];
  real _t11F6 = -0.e0;
  bool _t11F7 = prim >0080 (_t11F5, _t11F6);
  real _t11F8 = 0.1e-7;
  real _t11F9 = 0.1e-7;
  real _t11FA = 0.1e-7;
  vec3 _t11FB = [_t11F8, _t11F9, _t11FA];
  real _t11FC = 0.e0;
  real _t11FD = -0.1e1;
  real _t11FE = 0.e0;
  real _t11FF = 0.e0;
  vec3 _t1200 = [_t11FD, _t11FE, _t11FF];
  real _t1201 = prim •00CE<$[3]; $[3]; $[]> (_t1200, refPos0AC0);
  real _t1202 = prim -0026<$[]> (_t11FC, _t1201);
  real _t1203 = -0.1e1;
  real _t1204 = 0.e0;
  real _t1205 = 0.e0;
  vec3 _t1206 = [_t1203, _t1204, _t1205];
  real _t1207 = prim •00CE<$[3]; $[3]; $[]> (_t1206, dPos0AC1);
  real _t1208 = prim /0055 (_t1202, _t1207);
  vec3 _t1209 = prim *0038<$[3]> (dPos0AC1, _t1208);
  vec3 _t120A = prim +0017<$[3]> (refPos0AC0, _t1209);
  vec3 _t120B = prim +0017<$[3]> (_t11FB, _t120A);
  real _t120C = _t120B[1];
  real _t120D = -0.e0;
  bool _t120E = prim >0080 (_t120C, _t120D);
  real _t120F = 0.1e-7;
  real _t1210 = 0.1e-7;
  real _t1211 = 0.1e-7;
  vec3 _t1212 = [_t120F, _t1210, _t1211];
  real _t1213 = 0.e0;
  real _t1214 = -0.1e1;
  real _t1215 = 0.e0;
  real _t1216 = 0.e0;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos0AC0);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = -0.1e1;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos0AC1);
  real _t121F = prim /0055 (_t1219, _t121E);
  vec3 _t1220 = prim *0038<$[3]> (dPos0AC1, _t121F);
  vec3 _t1221 = prim +0017<$[3]> (refPos0AC0, _t1220);
  vec3 _t1222 = prim +0017<$[3]> (_t1212, _t1221);
  real _t1223 = _t1222[2];
  real _t1224 = -0.e0;
  bool _t1225 = prim >0080 (_t1223, _t1224);
  bool _t1226 = prim $and01C4 (_t120E, _t1225);
  bool _t1227 = prim $and01C4 (_t11F7, _t1226);
  bool _t1228 = prim $and01C4 (_t11E0, _t1227);
  string _t1229 = " dist: ";
  real _t122A = 0.e0;
  real _t122B = -0.1e1;
  real _t122C = 0.e0;
  real _t122D = 0.e0;
  vec3 _t122E = [_t122B, _t122C, _t122D];
  real _t122F = prim •00CE<$[3]; $[3]; $[]> (_t122E, refPos0AC0);
  real _t1230 = prim -0026<$[]> (_t122A, _t122F);
  real _t1231 = prim |()|00B5<$[]> (_t1230);
  string _t1232 = "signed dist: ";
  real _t1233 = 0.e0;
  real _t1234 = -0.1e1;
  real _t1235 = 0.e0;
  real _t1236 = 0.e0;
  vec3 _t1237 = [_t1234, _t1235, _t1236];
  real _t1238 = prim •00CE<$[3]; $[3]; $[]> (_t1237, refPos0AC0);
  real _t1239 = prim -0026<$[]> (_t1233, _t1238);
  string _t123A = " face: ";
  int _t123B = 1;
  string _t123C = " place: ";
  real _t123D = 0.e0;
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, refPos0AC0);
  real _t1243 = prim -0026<$[]> (_t123D, _t1242);
  real _t1244 = -0.1e1;
  real _t1245 = 0.e0;
  real _t1246 = 0.e0;
  vec3 _t1247 = [_t1244, _t1245, _t1246];
  real _t1248 = prim •00CE<$[3]; $[3]; $[]> (_t1247, dPos0AC1);
  real _t1249 = prim /0055 (_t1243, _t1248);
  vec3 _t124A = prim *0038<$[3]> (dPos0AC1, _t1249);
  vec3 _t124B = prim +0017<$[3]> (refPos0AC0, _t124A);
  string _t124C = " error: ";
  real _t124D = 0.e0;
  real _t124E = -0.1e1;
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  vec3 _t1251 = [_t124E, _t124F, _t1250];
  real _t1252 = 0.e0;
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos0AC0);
  real _t1258 = prim -0026<$[]> (_t1252, _t1257);
  real _t1259 = -0.1e1;
  real _t125A = 0.e0;
  real _t125B = 0.e0;
  vec3 _t125C = [_t1259, _t125A, _t125B];
  real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos0AC1);
  real _t125E = prim /0055 (_t1258, _t125D);
  vec3 _t125F = prim *0038<$[3]> (dPos0AC1, _t125E);
  vec3 _t1260 = prim +0017<$[3]> (refPos0AC0, _t125F);
  real _t1261 = prim •00CE<$[3]; $[3]; $[]> (_t1251, _t1260);
  real _t1262 = prim -0026<$[]> (_t124D, _t1261);
  real _t1263 = prim |()|00B5<$[]> (_t1262);
  string _t1264 = " offset :";
  string _t1265 = " dp: ";
  string _t1266 = " otherPossibleTime: ";
  string _t1267 = "\n";
  string _t1268 = "\n original face: ";
  string _t1269 = " ";
  print (_t11B4, _t11C1, _t11C2, _t11C7, _t11C8, _t1228, _t1229, _t1231, _t1232, _t1239, _t123A, _t123B, _t123C, _t124B, _t124C, _t1263, _t1264, refPos0AC0, _t1265, dPos0AC1, _t1266, faceTime109D, _t1267, _t1268, i109A, _t1269);
  real _t126A = 0.e0;
  real _t126B = -0.1e1;
  real _t126C = 0.e0;
  real _t126D = 0.e0;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, refPos0AC0);
  real _t1270 = prim -0026<$[]> (_t126A, _t126F);
  real _t1271 = -0.1e1;
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  vec3 _t1274 = [_t1271, _t1272, _t1273];
  real _t1275 = prim •00CE<$[3]; $[3]; $[]> (_t1274, dPos0AC1);
  real _t1276 = prim /0055 (_t1270, _t1275);
  real _t1277 = -0.1e-7;
  bool _t1278 = prim >=007E (_t1276, _t1277);
  real _t1279 = 0.e0;
  real _t127A = -0.1e1;
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  vec3 _t127D = [_t127A, _t127B, _t127C];
  real _t127E = prim •00CE<$[3]; $[3]; $[]> (_t127D, refPos0AC0);
  real _t127F = prim -0026<$[]> (_t1279, _t127E);
  real _t1280 = -0.1e1;
  real _t1281 = 0.e0;
  real _t1282 = 0.e0;
  vec3 _t1283 = [_t1280, _t1281, _t1282];
  real _t1284 = prim •00CE<$[3]; $[3]; $[]> (_t1283, dPos0AC1);
  real _t1285 = prim /0055 (_t127F, _t1284);
  bool _t1286 = prim >0080 (time109B, _t1285);
  real _t1287 = -0.1e1;
  real _t1288 = 0.e0;
  real _t1289 = 0.e0;
  vec3 _t128A = [_t1287, _t1288, _t1289];
  real _t128B = prim •00CE<$[3]; $[3]; $[]> (_t128A, dPos0AC1);
  real _t128C = prim |()|00B5<$[]> (_t128B);
  real _t128D = 0.1e-7;
  bool _t128E = prim >=007E (_t128C, _t128D);
  bool _t128F = prim $and01C4 (_t1286, _t128E);
  bool _t1290 = prim $and01C4 (_t1278, _t128F);
  if _t1290 {
    int _t1291 = 1;
    bool _t1292 = prim !=0086 (i109A, _t1291);
    if _t1292 {
      string _t1293 = "Saving at this face!";
      real _t1294 = 0.e0;
      real _t1295 = -0.1e1;
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      vec3 _t1298 = [_t1295, _t1296, _t1297];
      real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos0AC0);
      real _t129A = prim -0026<$[]> (_t1294, _t1299);
      real _t129B = -0.1e1;
      real _t129C = 0.e0;
      real _t129D = 0.e0;
      vec3 _t129E = [_t129B, _t129C, _t129D];
      real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos0AC1);
      real _t12A0 = prim /0055 (_t129A, _t129F);
      real _t12A1 = 0.e0;
      real _t12A2 = -0.1e1;
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
      real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, refPos0AC0);
      real _t12A7 = prim -0026<$[]> (_t12A1, _t12A6);
      real _t12A8 = -0.1e1;
      real _t12A9 = 0.e0;
      real _t12AA = 0.e0;
      vec3 _t12AB = [_t12A8, _t12A9, _t12AA];
      real _t12AC = prim •00CE<$[3]; $[3]; $[]> (_t12AB, dPos0AC1);
      real _t12AD = prim /0055 (_t12A7, _t12AC);
      bool _t12AE = prim >0080 (time109B, _t12AD);
      string _t12AF = "\n";
      print (_t1293, _t12A0, _t12AE, _t12AF);
      real _t12B0 = 0.e0;
      real _t12B1 = -0.1e1;
      real _t12B2 = 0.e0;
      real _t12B3 = 0.e0;
      vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
      real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, refPos0AC0);
      real _t12B6 = prim -0026<$[]> (_t12B0, _t12B5);
      real _t12B7 = -0.1e1;
      real _t12B8 = 0.e0;
      real _t12B9 = 0.e0;
      vec3 _t12BA = [_t12B7, _t12B8, _t12B9];
      real _t12BB = prim •00CE<$[3]; $[3]; $[]> (_t12BA, dPos0AC1);
      time109B = prim /0055 (_t12B6, _t12BB);
      face109C = 1;
    } else {
      real _t12BC = 0.e0;
      real _t12BD = -0.1e1;
      real _t12BE = 0.e0;
      real _t12BF = 0.e0;
      vec3 _t12C0 = [_t12BD, _t12BE, _t12BF];
      real _t12C1 = prim •00CE<$[3]; $[3]; $[]> (_t12C0, refPos0AC0);
      real _t12C2 = prim -0026<$[]> (_t12BC, _t12C1);
      real _t12C3 = -0.1e1;
      real _t12C4 = 0.e0;
      real _t12C5 = 0.e0;
      vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
      real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, dPos0AC1);
      faceTime109D = prim /0055 (_t12C2, _t12C7);
      string _t12C8 = "Saving backup time: ";
      string _t12C9 = "\n";
      print (_t12C8, faceTime109D, _t12C9);
    }
  }
  string _t12CA = "\ntest :";
  real _t12CB = 0.e0;
  real _t12CC = 0.e0;
  real _t12CD = -0.1e1;
  real _t12CE = 0.e0;
  vec3 _t12CF = [_t12CC, _t12CD, _t12CE];
  real _t12D0 = prim •00CE<$[3]; $[3]; $[]> (_t12CF, refPos0AC0);
  real _t12D1 = prim -0026<$[]> (_t12CB, _t12D0);
  real _t12D2 = 0.e0;
  real _t12D3 = -0.1e1;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, dPos0AC1);
  real _t12D7 = prim /0055 (_t12D1, _t12D6);
  string _t12D8 = " test2: ";
  real _t12D9 = 0.e0;
  real _t12DA = -0.1e1;
  real _t12DB = 0.e0;
  vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
  real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, dPos0AC1);
  string _t12DE = " insideTest: ";
  real _t12DF = 0.1e1;
  real _t12E0 = 0.1e-7;
  real _t12E1 = prim +0017<$[]> (_t12DF, _t12E0);
  real _t12E2 = 0.1e1;
  real _t12E3 = 0.1e1;
  real _t12E4 = 0.1e1;
  vec3 _t12E5 = [_t12E2, _t12E3, _t12E4];
  real _t12E6 = 0.e0;
  real _t12E7 = 0.e0;
  real _t12E8 = -0.1e1;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, refPos0AC0);
  real _t12EC = prim -0026<$[]> (_t12E6, _t12EB);
  real _t12ED = 0.e0;
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  vec3 _t12F0 = [_t12ED, _t12EE, _t12EF];
  real _t12F1 = prim •00CE<$[3]; $[3]; $[]> (_t12F0, dPos0AC1);
  real _t12F2 = prim /0055 (_t12EC, _t12F1);
  vec3 _t12F3 = prim *0038<$[3]> (dPos0AC1, _t12F2);
  vec3 _t12F4 = prim +0017<$[3]> (refPos0AC0, _t12F3);
  real _t12F5 = prim •00CE<$[3]; $[3]; $[]> (_t12E5, _t12F4);
  bool _t12F6 = prim >0080 (_t12E1, _t12F5);
  real _t12F7 = 0.1e-7;
  real _t12F8 = 0.1e-7;
  real _t12F9 = 0.1e-7;
  vec3 _t12FA = [_t12F7, _t12F8, _t12F9];
  real _t12FB = 0.e0;
  real _t12FC = 0.e0;
  real _t12FD = -0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0AC0);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = -0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0AC1);
  real _t1307 = prim /0055 (_t1301, _t1306);
  vec3 _t1308 = prim *0038<$[3]> (dPos0AC1, _t1307);
  vec3 _t1309 = prim +0017<$[3]> (refPos0AC0, _t1308);
  vec3 _t130A = prim +0017<$[3]> (_t12FA, _t1309);
  real _t130B = _t130A[0];
  real _t130C = -0.e0;
  bool _t130D = prim >0080 (_t130B, _t130C);
  real _t130E = 0.1e-7;
  real _t130F = 0.1e-7;
  real _t1310 = 0.1e-7;
  vec3 _t1311 = [_t130E, _t130F, _t1310];
  real _t1312 = 0.e0;
  real _t1313 = 0.e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, refPos0AC0);
  real _t1318 = prim -0026<$[]> (_t1312, _t1317);
  real _t1319 = 0.e0;
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  vec3 _t131C = [_t1319, _t131A, _t131B];
  real _t131D = prim •00CE<$[3]; $[3]; $[]> (_t131C, dPos0AC1);
  real _t131E = prim /0055 (_t1318, _t131D);
  vec3 _t131F = prim *0038<$[3]> (dPos0AC1, _t131E);
  vec3 _t1320 = prim +0017<$[3]> (refPos0AC0, _t131F);
  vec3 _t1321 = prim +0017<$[3]> (_t1311, _t1320);
  real _t1322 = _t1321[1];
  real _t1323 = -0.e0;
  bool _t1324 = prim >0080 (_t1322, _t1323);
  real _t1325 = 0.1e-7;
  real _t1326 = 0.1e-7;
  real _t1327 = 0.1e-7;
  vec3 _t1328 = [_t1325, _t1326, _t1327];
  real _t1329 = 0.e0;
  real _t132A = 0.e0;
  real _t132B = -0.1e1;
  real _t132C = 0.e0;
  vec3 _t132D = [_t132A, _t132B, _t132C];
  real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, refPos0AC0);
  real _t132F = prim -0026<$[]> (_t1329, _t132E);
  real _t1330 = 0.e0;
  real _t1331 = -0.1e1;
  real _t1332 = 0.e0;
  vec3 _t1333 = [_t1330, _t1331, _t1332];
  real _t1334 = prim •00CE<$[3]; $[3]; $[]> (_t1333, dPos0AC1);
  real _t1335 = prim /0055 (_t132F, _t1334);
  vec3 _t1336 = prim *0038<$[3]> (dPos0AC1, _t1335);
  vec3 _t1337 = prim +0017<$[3]> (refPos0AC0, _t1336);
  vec3 _t1338 = prim +0017<$[3]> (_t1328, _t1337);
  real _t1339 = _t1338[2];
  real _t133A = -0.e0;
  bool _t133B = prim >0080 (_t1339, _t133A);
  bool _t133C = prim $and01C4 (_t1324, _t133B);
  bool _t133D = prim $and01C4 (_t130D, _t133C);
  bool _t133E = prim $and01C4 (_t12F6, _t133D);
  string _t133F = " dist: ";
  real _t1340 = 0.e0;
  real _t1341 = 0.e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  vec3 _t1344 = [_t1341, _t1342, _t1343];
  real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, refPos0AC0);
  real _t1346 = prim -0026<$[]> (_t1340, _t1345);
  real _t1347 = prim |()|00B5<$[]> (_t1346);
  string _t1348 = "signed dist: ";
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  real _t134B = -0.1e1;
  real _t134C = 0.e0;
  vec3 _t134D = [_t134A, _t134B, _t134C];
  real _t134E = prim •00CE<$[3]; $[3]; $[]> (_t134D, refPos0AC0);
  real _t134F = prim -0026<$[]> (_t1349, _t134E);
  string _t1350 = " face: ";
  int _t1351 = 2;
  string _t1352 = " place: ";
  real _t1353 = 0.e0;
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos0AC0);
  real _t1359 = prim -0026<$[]> (_t1353, _t1358);
  real _t135A = 0.e0;
  real _t135B = -0.1e1;
  real _t135C = 0.e0;
  vec3 _t135D = [_t135A, _t135B, _t135C];
  real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos0AC1);
  real _t135F = prim /0055 (_t1359, _t135E);
  vec3 _t1360 = prim *0038<$[3]> (dPos0AC1, _t135F);
  vec3 _t1361 = prim +0017<$[3]> (refPos0AC0, _t1360);
  string _t1362 = " error: ";
  real _t1363 = 0.e0;
  real _t1364 = 0.e0;
  real _t1365 = -0.1e1;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = 0.e0;
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos0AC0);
  real _t136E = prim -0026<$[]> (_t1368, _t136D);
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos0AC1);
  real _t1374 = prim /0055 (_t136E, _t1373);
  vec3 _t1375 = prim *0038<$[3]> (dPos0AC1, _t1374);
  vec3 _t1376 = prim +0017<$[3]> (refPos0AC0, _t1375);
  real _t1377 = prim •00CE<$[3]; $[3]; $[]> (_t1367, _t1376);
  real _t1378 = prim -0026<$[]> (_t1363, _t1377);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  string _t137A = " offset :";
  string _t137B = " dp: ";
  string _t137C = " otherPossibleTime: ";
  string _t137D = "\n";
  string _t137E = "\n original face: ";
  string _t137F = " ";
  print (_t12CA, _t12D7, _t12D8, _t12DD, _t12DE, _t133E, _t133F, _t1347, _t1348, _t134F, _t1350, _t1351, _t1352, _t1361, _t1362, _t1379, _t137A, refPos0AC0, _t137B, dPos0AC1, _t137C, faceTime109D, _t137D, _t137E, i109A, _t137F);
  real _t1380 = 0.e0;
  real _t1381 = 0.e0;
  real _t1382 = -0.1e1;
  real _t1383 = 0.e0;
  vec3 _t1384 = [_t1381, _t1382, _t1383];
  real _t1385 = prim •00CE<$[3]; $[3]; $[]> (_t1384, refPos0AC0);
  real _t1386 = prim -0026<$[]> (_t1380, _t1385);
  real _t1387 = 0.e0;
  real _t1388 = -0.1e1;
  real _t1389 = 0.e0;
  vec3 _t138A = [_t1387, _t1388, _t1389];
  real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, dPos0AC1);
  real _t138C = prim /0055 (_t1386, _t138B);
  real _t138D = -0.1e-7;
  bool _t138E = prim >=007E (_t138C, _t138D);
  real _t138F = 0.e0;
  real _t1390 = 0.e0;
  real _t1391 = -0.1e1;
  real _t1392 = 0.e0;
  vec3 _t1393 = [_t1390, _t1391, _t1392];
  real _t1394 = prim •00CE<$[3]; $[3]; $[]> (_t1393, refPos0AC0);
  real _t1395 = prim -0026<$[]> (_t138F, _t1394);
  real _t1396 = 0.e0;
  real _t1397 = -0.1e1;
  real _t1398 = 0.e0;
  vec3 _t1399 = [_t1396, _t1397, _t1398];
  real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, dPos0AC1);
  real _t139B = prim /0055 (_t1395, _t139A);
  bool _t139C = prim >0080 (time109B, _t139B);
  real _t139D = 0.e0;
  real _t139E = -0.1e1;
  real _t139F = 0.e0;
  vec3 _t13A0 = [_t139D, _t139E, _t139F];
  real _t13A1 = prim •00CE<$[3]; $[3]; $[]> (_t13A0, dPos0AC1);
  real _t13A2 = prim |()|00B5<$[]> (_t13A1);
  real _t13A3 = 0.1e-7;
  bool _t13A4 = prim >=007E (_t13A2, _t13A3);
  bool _t13A5 = prim $and01C4 (_t139C, _t13A4);
  bool _t13A6 = prim $and01C4 (_t138E, _t13A5);
  if _t13A6 {
    int _t13A7 = 2;
    bool _t13A8 = prim !=0086 (i109A, _t13A7);
    if _t13A8 {
      string _t13A9 = "Saving at this face!";
      real _t13AA = 0.e0;
      real _t13AB = 0.e0;
      real _t13AC = -0.1e1;
      real _t13AD = 0.e0;
      vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
      real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos0AC0);
      real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
      real _t13B1 = 0.e0;
      real _t13B2 = -0.1e1;
      real _t13B3 = 0.e0;
      vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
      real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos0AC1);
      real _t13B6 = prim /0055 (_t13B0, _t13B5);
      real _t13B7 = 0.e0;
      real _t13B8 = 0.e0;
      real _t13B9 = -0.1e1;
      real _t13BA = 0.e0;
      vec3 _t13BB = [_t13B8, _t13B9, _t13BA];
      real _t13BC = prim •00CE<$[3]; $[3]; $[]> (_t13BB, refPos0AC0);
      real _t13BD = prim -0026<$[]> (_t13B7, _t13BC);
      real _t13BE = 0.e0;
      real _t13BF = -0.1e1;
      real _t13C0 = 0.e0;
      vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
      real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos0AC1);
      real _t13C3 = prim /0055 (_t13BD, _t13C2);
      bool _t13C4 = prim >0080 (time109B, _t13C3);
      string _t13C5 = "\n";
      print (_t13A9, _t13B6, _t13C4, _t13C5);
      real _t13C6 = 0.e0;
      real _t13C7 = 0.e0;
      real _t13C8 = -0.1e1;
      real _t13C9 = 0.e0;
      vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
      real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, refPos0AC0);
      real _t13CC = prim -0026<$[]> (_t13C6, _t13CB);
      real _t13CD = 0.e0;
      real _t13CE = -0.1e1;
      real _t13CF = 0.e0;
      vec3 _t13D0 = [_t13CD, _t13CE, _t13CF];
      real _t13D1 = prim •00CE<$[3]; $[3]; $[]> (_t13D0, dPos0AC1);
      time109B = prim /0055 (_t13CC, _t13D1);
      face109C = 2;
    } else {
      real _t13D2 = 0.e0;
      real _t13D3 = 0.e0;
      real _t13D4 = -0.1e1;
      real _t13D5 = 0.e0;
      vec3 _t13D6 = [_t13D3, _t13D4, _t13D5];
      real _t13D7 = prim •00CE<$[3]; $[3]; $[]> (_t13D6, refPos0AC0);
      real _t13D8 = prim -0026<$[]> (_t13D2, _t13D7);
      real _t13D9 = 0.e0;
      real _t13DA = -0.1e1;
      real _t13DB = 0.e0;
      vec3 _t13DC = [_t13D9, _t13DA, _t13DB];
      real _t13DD = prim •00CE<$[3]; $[3]; $[]> (_t13DC, dPos0AC1);
      faceTime109D = prim /0055 (_t13D8, _t13DD);
      string _t13DE = "Saving backup time: ";
      string _t13DF = "\n";
      print (_t13DE, faceTime109D, _t13DF);
    }
  }
  string _t13E0 = "\ntest :";
  real _t13E1 = 0.e0;
  real _t13E2 = 0.e0;
  real _t13E3 = 0.e0;
  real _t13E4 = -0.1e1;
  vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
  real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, refPos0AC0);
  real _t13E7 = prim -0026<$[]> (_t13E1, _t13E6);
  real _t13E8 = 0.e0;
  real _t13E9 = 0.e0;
  real _t13EA = -0.1e1;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, dPos0AC1);
  real _t13ED = prim /0055 (_t13E7, _t13EC);
  string _t13EE = " test2: ";
  real _t13EF = 0.e0;
  real _t13F0 = 0.e0;
  real _t13F1 = -0.1e1;
  vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
  real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos0AC1);
  string _t13F4 = " insideTest: ";
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.1e-7;
  real _t13F7 = prim +0017<$[]> (_t13F5, _t13F6);
  real _t13F8 = 0.1e1;
  real _t13F9 = 0.1e1;
  real _t13FA = 0.1e1;
  vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
  real _t13FC = 0.e0;
  real _t13FD = 0.e0;
  real _t13FE = 0.e0;
  real _t13FF = -0.1e1;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, refPos0AC0);
  real _t1402 = prim -0026<$[]> (_t13FC, _t1401);
  real _t1403 = 0.e0;
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  vec3 _t1406 = [_t1403, _t1404, _t1405];
  real _t1407 = prim •00CE<$[3]; $[3]; $[]> (_t1406, dPos0AC1);
  real _t1408 = prim /0055 (_t1402, _t1407);
  vec3 _t1409 = prim *0038<$[3]> (dPos0AC1, _t1408);
  vec3 _t140A = prim +0017<$[3]> (refPos0AC0, _t1409);
  real _t140B = prim •00CE<$[3]; $[3]; $[]> (_t13FB, _t140A);
  bool _t140C = prim >0080 (_t13F7, _t140B);
  real _t140D = 0.1e-7;
  real _t140E = 0.1e-7;
  real _t140F = 0.1e-7;
  vec3 _t1410 = [_t140D, _t140E, _t140F];
  real _t1411 = 0.e0;
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = -0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0AC0);
  real _t1417 = prim -0026<$[]> (_t1411, _t1416);
  real _t1418 = 0.e0;
  real _t1419 = 0.e0;
  real _t141A = -0.1e1;
  vec3 _t141B = [_t1418, _t1419, _t141A];
  real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0AC1);
  real _t141D = prim /0055 (_t1417, _t141C);
  vec3 _t141E = prim *0038<$[3]> (dPos0AC1, _t141D);
  vec3 _t141F = prim +0017<$[3]> (refPos0AC0, _t141E);
  vec3 _t1420 = prim +0017<$[3]> (_t1410, _t141F);
  real _t1421 = _t1420[0];
  real _t1422 = -0.e0;
  bool _t1423 = prim >0080 (_t1421, _t1422);
  real _t1424 = 0.1e-7;
  real _t1425 = 0.1e-7;
  real _t1426 = 0.1e-7;
  vec3 _t1427 = [_t1424, _t1425, _t1426];
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = -0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, refPos0AC0);
  real _t142E = prim -0026<$[]> (_t1428, _t142D);
  real _t142F = 0.e0;
  real _t1430 = 0.e0;
  real _t1431 = -0.1e1;
  vec3 _t1432 = [_t142F, _t1430, _t1431];
  real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, dPos0AC1);
  real _t1434 = prim /0055 (_t142E, _t1433);
  vec3 _t1435 = prim *0038<$[3]> (dPos0AC1, _t1434);
  vec3 _t1436 = prim +0017<$[3]> (refPos0AC0, _t1435);
  vec3 _t1437 = prim +0017<$[3]> (_t1427, _t1436);
  real _t1438 = _t1437[1];
  real _t1439 = -0.e0;
  bool _t143A = prim >0080 (_t1438, _t1439);
  real _t143B = 0.1e-7;
  real _t143C = 0.1e-7;
  real _t143D = 0.1e-7;
  vec3 _t143E = [_t143B, _t143C, _t143D];
  real _t143F = 0.e0;
  real _t1440 = 0.e0;
  real _t1441 = 0.e0;
  real _t1442 = -0.1e1;
  vec3 _t1443 = [_t1440, _t1441, _t1442];
  real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, refPos0AC0);
  real _t1445 = prim -0026<$[]> (_t143F, _t1444);
  real _t1446 = 0.e0;
  real _t1447 = 0.e0;
  real _t1448 = -0.1e1;
  vec3 _t1449 = [_t1446, _t1447, _t1448];
  real _t144A = prim •00CE<$[3]; $[3]; $[]> (_t1449, dPos0AC1);
  real _t144B = prim /0055 (_t1445, _t144A);
  vec3 _t144C = prim *0038<$[3]> (dPos0AC1, _t144B);
  vec3 _t144D = prim +0017<$[3]> (refPos0AC0, _t144C);
  vec3 _t144E = prim +0017<$[3]> (_t143E, _t144D);
  real _t144F = _t144E[2];
  real _t1450 = -0.e0;
  bool _t1451 = prim >0080 (_t144F, _t1450);
  bool _t1452 = prim $and01C4 (_t143A, _t1451);
  bool _t1453 = prim $and01C4 (_t1423, _t1452);
  bool _t1454 = prim $and01C4 (_t140C, _t1453);
  string _t1455 = " dist: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.e0;
  real _t1459 = -0.1e1;
  vec3 _t145A = [_t1457, _t1458, _t1459];
  real _t145B = prim •00CE<$[3]; $[3]; $[]> (_t145A, refPos0AC0);
  real _t145C = prim -0026<$[]> (_t1456, _t145B);
  real _t145D = prim |()|00B5<$[]> (_t145C);
  string _t145E = "signed dist: ";
  real _t145F = 0.e0;
  real _t1460 = 0.e0;
  real _t1461 = 0.e0;
  real _t1462 = -0.1e1;
  vec3 _t1463 = [_t1460, _t1461, _t1462];
  real _t1464 = prim •00CE<$[3]; $[3]; $[]> (_t1463, refPos0AC0);
  real _t1465 = prim -0026<$[]> (_t145F, _t1464);
  string _t1466 = " face: ";
  int _t1467 = 3;
  string _t1468 = " place: ";
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, refPos0AC0);
  real _t146F = prim -0026<$[]> (_t1469, _t146E);
  real _t1470 = 0.e0;
  real _t1471 = 0.e0;
  real _t1472 = -0.1e1;
  vec3 _t1473 = [_t1470, _t1471, _t1472];
  real _t1474 = prim •00CE<$[3]; $[3]; $[]> (_t1473, dPos0AC1);
  real _t1475 = prim /0055 (_t146F, _t1474);
  vec3 _t1476 = prim *0038<$[3]> (dPos0AC1, _t1475);
  vec3 _t1477 = prim +0017<$[3]> (refPos0AC0, _t1476);
  string _t1478 = " error: ";
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = 0.e0;
  real _t147C = -0.1e1;
  vec3 _t147D = [_t147A, _t147B, _t147C];
  real _t147E = 0.e0;
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos0AC0);
  real _t1484 = prim -0026<$[]> (_t147E, _t1483);
  real _t1485 = 0.e0;
  real _t1486 = 0.e0;
  real _t1487 = -0.1e1;
  vec3 _t1488 = [_t1485, _t1486, _t1487];
  real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos0AC1);
  real _t148A = prim /0055 (_t1484, _t1489);
  vec3 _t148B = prim *0038<$[3]> (dPos0AC1, _t148A);
  vec3 _t148C = prim +0017<$[3]> (refPos0AC0, _t148B);
  real _t148D = prim •00CE<$[3]; $[3]; $[]> (_t147D, _t148C);
  real _t148E = prim -0026<$[]> (_t1479, _t148D);
  real _t148F = prim |()|00B5<$[]> (_t148E);
  string _t1490 = " offset :";
  string _t1491 = " dp: ";
  string _t1492 = " otherPossibleTime: ";
  string _t1493 = "\n";
  string _t1494 = "\n original face: ";
  string _t1495 = " ";
  print (_t13E0, _t13ED, _t13EE, _t13F3, _t13F4, _t1454, _t1455, _t145D, _t145E, _t1465, _t1466, _t1467, _t1468, _t1477, _t1478, _t148F, _t1490, refPos0AC0, _t1491, dPos0AC1, _t1492, faceTime109D, _t1493, _t1494, i109A, _t1495);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = -0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos0AC0);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = -0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos0AC1);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-7;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = -0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos0AC0);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = -0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos0AC1);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time109B, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = -0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos0AC1);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-7;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 3;
    bool _t14BE = prim !=0086 (i109A, _t14BD);
    if _t14BE {
      string _t14BF = "Saving at this face!";
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.e0;
      real _t14C3 = -0.1e1;
      vec3 _t14C4 = [_t14C1, _t14C2, _t14C3];
      real _t14C5 = prim •00CE<$[3]; $[3]; $[]> (_t14C4, refPos0AC0);
      real _t14C6 = prim -0026<$[]> (_t14C0, _t14C5);
      real _t14C7 = 0.e0;
      real _t14C8 = 0.e0;
      real _t14C9 = -0.1e1;
      vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
      real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, dPos0AC1);
      real _t14CC = prim /0055 (_t14C6, _t14CB);
      real _t14CD = 0.e0;
      real _t14CE = 0.e0;
      real _t14CF = 0.e0;
      real _t14D0 = -0.1e1;
      vec3 _t14D1 = [_t14CE, _t14CF, _t14D0];
      real _t14D2 = prim •00CE<$[3]; $[3]; $[]> (_t14D1, refPos0AC0);
      real _t14D3 = prim -0026<$[]> (_t14CD, _t14D2);
      real _t14D4 = 0.e0;
      real _t14D5 = 0.e0;
      real _t14D6 = -0.1e1;
      vec3 _t14D7 = [_t14D4, _t14D5, _t14D6];
      real _t14D8 = prim •00CE<$[3]; $[3]; $[]> (_t14D7, dPos0AC1);
      real _t14D9 = prim /0055 (_t14D3, _t14D8);
      bool _t14DA = prim >0080 (time109B, _t14D9);
      string _t14DB = "\n";
      print (_t14BF, _t14CC, _t14DA, _t14DB);
      real _t14DC = 0.e0;
      real _t14DD = 0.e0;
      real _t14DE = 0.e0;
      real _t14DF = -0.1e1;
      vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
      real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, refPos0AC0);
      real _t14E2 = prim -0026<$[]> (_t14DC, _t14E1);
      real _t14E3 = 0.e0;
      real _t14E4 = 0.e0;
      real _t14E5 = -0.1e1;
      vec3 _t14E6 = [_t14E3, _t14E4, _t14E5];
      real _t14E7 = prim •00CE<$[3]; $[3]; $[]> (_t14E6, dPos0AC1);
      time109B = prim /0055 (_t14E2, _t14E7);
      face109C = 3;
    } else {
      real _t14E8 = 0.e0;
      real _t14E9 = 0.e0;
      real _t14EA = 0.e0;
      real _t14EB = -0.1e1;
      vec3 _t14EC = [_t14E9, _t14EA, _t14EB];
      real _t14ED = prim •00CE<$[3]; $[3]; $[]> (_t14EC, refPos0AC0);
      real _t14EE = prim -0026<$[]> (_t14E8, _t14ED);
      real _t14EF = 0.e0;
      real _t14F0 = 0.e0;
      real _t14F1 = -0.1e1;
      vec3 _t14F2 = [_t14EF, _t14F0, _t14F1];
      real _t14F3 = prim •00CE<$[3]; $[3]; $[]> (_t14F2, dPos0AC1);
      faceTime109D = prim /0055 (_t14EE, _t14F3);
      string _t14F4 = "Saving backup time: ";
      string _t14F5 = "\n";
      print (_t14F4, faceTime109D, _t14F5);
    }
  }
  int _t14F6 = -1;
  bool _t14F7 = prim !=0086 (face109C, _t14F6);
  real _t14F8 = 0.1e1;
  real _t14F9 = 0.1e-7;
  real _t14FA = prim +0017<$[]> (_t14F8, _t14F9);
  real _t14FB = 0.1e1;
  real _t14FC = 0.1e1;
  real _t14FD = 0.1e1;
  vec3 _t14FE = [_t14FB, _t14FC, _t14FD];
  real _t14FF = 0.e0;
  real _t1500 = prim max0125 (time109B, _t14FF);
  vec3 _t1501 = prim *0038<$[3]> (dPos0AC1, _t1500);
  vec3 _t1502 = prim +0017<$[3]> (refPos0AC0, _t1501);
  real _t1503 = prim •00CE<$[3]; $[3]; $[]> (_t14FE, _t1502);
  bool _t1504 = prim >0080 (_t14FA, _t1503);
  real _t1505 = 0.1e-7;
  real _t1506 = 0.1e-7;
  real _t1507 = 0.1e-7;
  vec3 _t1508 = [_t1505, _t1506, _t1507];
  real _t1509 = 0.e0;
  real _t150A = prim max0125 (time109B, _t1509);
  vec3 _t150B = prim *0038<$[3]> (dPos0AC1, _t150A);
  vec3 _t150C = prim +0017<$[3]> (refPos0AC0, _t150B);
  vec3 _t150D = prim +0017<$[3]> (_t1508, _t150C);
  real _t150E = _t150D[0];
  real _t150F = -0.e0;
  bool _t1510 = prim >0080 (_t150E, _t150F);
  real _t1511 = 0.1e-7;
  real _t1512 = 0.1e-7;
  real _t1513 = 0.1e-7;
  vec3 _t1514 = [_t1511, _t1512, _t1513];
  real _t1515 = 0.e0;
  real _t1516 = prim max0125 (time109B, _t1515);
  vec3 _t1517 = prim *0038<$[3]> (dPos0AC1, _t1516);
  vec3 _t1518 = prim +0017<$[3]> (refPos0AC0, _t1517);
  vec3 _t1519 = prim +0017<$[3]> (_t1514, _t1518);
  real _t151A = _t1519[1];
  real _t151B = -0.e0;
  bool _t151C = prim >0080 (_t151A, _t151B);
  real _t151D = 0.1e-7;
  real _t151E = 0.1e-7;
  real _t151F = 0.1e-7;
  vec3 _t1520 = [_t151D, _t151E, _t151F];
  real _t1521 = 0.e0;
  real _t1522 = prim max0125 (time109B, _t1521);
  vec3 _t1523 = prim *0038<$[3]> (dPos0AC1, _t1522);
  vec3 _t1524 = prim +0017<$[3]> (refPos0AC0, _t1523);
  vec3 _t1525 = prim +0017<$[3]> (_t1520, _t1524);
  real _t1526 = _t1525[2];
  real _t1527 = -0.e0;
  bool _t1528 = prim >0080 (_t1526, _t1527);
  bool _t1529 = prim $and01C4 (_t151C, _t1528);
  bool _t152A = prim $and01C4 (_t1510, _t1529);
  bool _t152B = prim $and01C4 (_t1504, _t152A);
  bool _t152C = prim $and01C4 (_t14F7, _t152B);
  if _t152C {
    string _t152D = "\nReturning via standard : ";
    real _t152E = 0.e0;
    real _t152F = prim max0125 (time109B, _t152E);
    real _t1530 = (real)face109C;
    vec2 _t1531 = [_t152F, _t1530];
    string _t1532 = "\n";
    print (_t152D, _t1531, _t1532);
    real _t1533 = 0.e0;
    real _t1534 = prim max0125 (time109B, _t1533);
    real _t1535 = (real)face109C;
    vec2 _t1536 = [_t1534, _t1535];
    return _t1536;
  } else {
    real _t1537 = -inf;
    bool _t1538 = prim ==0084 (_t1537, faceTime109D);
    if _t1538 {
      string _t1539 = "\nReturning via fail : ";
      real _t153A = -0.1e1;
      real _t153B = -0.1e1;
      vec2 _t153C = [_t153A, _t153B];
      string _t153D = "\n";
      print (_t1539, _t153C, _t153D);
      real _t153E = -0.1e1;
      real _t153F = -0.1e1;
      vec2 _t1540 = [_t153E, _t153F];
      return _t1540;
    } else {
      string _t1541 = "\nReturning via backup : ";
      real _t1542 = 0.e0;
      real _t1543 = prim max0125 (faceTime109D, _t1542);
      real _t1544 = (real)i109A;
      vec2 _t1545 = [_t1543, _t1544];
      string _t1546 = "\n";
      print (_t1541, _t1545, _t1546);
      real _t1547 = 0.e0;
      real _t1548 = prim max0125 (faceTime109D, _t1547);
      real _t1549 = (real)i109A;
      vec2 _t154A = [_t1548, _t1549];
      return _t154A;
    }
  }
}
function Femdata: MeshPos#2 fn_2FB1563 (Femdata: MeshPos x1564, vec3 dPos1565)
{
  bool _t1566 = extractFemItem(Valid(MeshPos), bool, x1564);
  bool _t1567 = prim !00BC (_t1566);
  if _t1567 {
    return x1564;
  }
  real time1568 = 0.1e1;
  Femdata: MeshPos cmp1569 = x1564;
  int _t156A = 0;
  int[] _t156B = prim $range01C3 (_t156A, timeSteps040D);
  foreach i15E3 in _t156B {
    Femdata: Mesh _t156C = extractFem(cmp1569, Mesh);
    int _t156D = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t156E = loadFem(MeshCell, _t156C, _t156D);
    Femdata: Mesh _t156F = extractFem(_t156E, Mesh);
    Femdata: Mesh _t1570 = extractFem(cmp1569, Mesh);
    int _t1571 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1572 = loadFem(MeshCell, _t1570, _t1571);
    Femdata: Mesh _t1573 = extractFem(_t1572, Mesh);
    Femdata: Mesh _t1574 = extractFem(cmp1569, Mesh);
    int _t1575 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1576 = loadFem(MeshCell, _t1574, _t1575);
    int _t1577 = extractFemItem(CellIndex(MeshCell), int, _t1576);
    field(3)[3] _t1578 = femField(_t156F,_t1577,field(3)[3],Transform,);
    field(3)[3,3] _t1579 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1578);
    vec3 _t157A = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    tensor[3,3] _t157B = prim @00A5<#∞; %3; $[3,3]> (_t1579, _t157A);
    tensor[3,3] _t157C = prim inv0155 (_t157B);
    vec3 deltaP157D = prim •00CE<$[3,3]; $[3]; $[3]> (_t157C, dPos1565);
    real _t157E = prim |()|00B5<$[3]> (deltaP157D);
    vec3 normDetaP157F = prim /0057<$[3]> (deltaP157D, _t157E);
    vec3 _t1580 = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    vec3 _t1581 = prim *0036<$[3]> (time1568, deltaP157D);
    vec3 newPos1582 = prim +0017<$[3]> (_t1580, _t1581);
    continue;
  }
  string _t15E4 = "Took stupid way out!\n";
  print (_t15E4);
  vec3 _t15E5;
  vec3 _t16DD = extractFemItem(RefPos(MeshPos), vec3, x1564);
  int _t16DE = extractFemItem(CellIndex(MeshPos), int, x1564);
  Femdata: Mesh _t16DF = extractFem(x1564, Mesh);
  vec3 _t16E0;
  field(3)[3] _t16E1 = femField(_t16DF,_t16DE,field(3)[3],Transform,);
  vec3 _t16E2 = prim @00A5<#∞; %3; $[3]> (_t16E1, _t16DD);
  _t16E0 = _t16E2;
  _t15E5 = _t16E0;
  vec3 _t15E6 = prim +0017<$[3]> (_t15E5, dPos1565);
  cmp1569 = func findPos041E (meshData03FD, _t15E6);
  return cmp1569;
}
globalInit {
  int _t0401 = 0;
  int _t03FF = 1;
  int _t0403 = extractFemItem(NumCell(Mesh), int, meshData03FD);
  int _t0402 = prim -0024 (_t0403, _t03FF);
  int[] _t0406 = prim $range01C3 (_t0401, _t0402);
  Femdata: MeshCell[] _t0407 = {};
  foreach _t0405 in _t0406 {
    Femdata: MeshCell _t0408 = loadFem(MeshCell, meshData03FD, _t0405);
    _t0407 = prim @0010<Femdata: MeshCell> (_t0407, _t0408);
  }
  space0409 = loadFem(Space, 0space0409_intermedateGlobal040A, meshData03FD);
  data040B = loadFem(FemFunc, 0data040B_intermedateGlobal040C, space0409);
  Femdata: Space _t1556 = extractFem(data040B, Space);
  Femdata: Space _t1557 = extractFem(data040B, Space);
  Femdata: Mesh _t1558 = extractFem(_t1557, Mesh);
  field(3)[3] _t1559 = femField(data040B,_t1558,field(3)[3],refField,findPos041E );
  Femdata: Space _t155A = extractFem(data040B, Space);
  Femdata: Mesh _t155B = extractFem(_t155A, Mesh);
  Femdata: Space _t155C = extractFem(data040B, Space);
  Femdata: Mesh _t155D = extractFem(_t155C, Mesh);
  Femdata: Space _t155E = extractFem(data040B, Space);
  Femdata: Mesh _t155F = extractFem(_t155E, Mesh);
  field(3)[3] _t1560 = femField(_t155B,_t155F,field(3)[3],InvTransform,findPos041E );
  F1561 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t1559, _t1560);
}
strand gg (vec3 startPos15FF) {
  output vec3[] stream1600;
  output vec3[] newStream1603;
  int step1606;
  Femdata: MeshPos cPos1607;
  vec3 altCPos1608;
  vec3 startPos1741;
  {
    vec3[0] _t1601 = {};
    vec3[] _t1602 = (vec3[])_t1601;
    stream1600 = _t1602;
    vec3[0] _t1604 = {};
    vec3[] _t1605 = (vec3[])_t1604;
    newStream1603 = _t1605;
    step1606 = 0;
    cPos1607 = func findPos041E (meshData03FD, startPos15FF);
    altCPos1608 = startPos15FF;
    startPos1741 = startPos15FF;
  }
  update
  {
    int _t1609 = 0;
    bool _t160A = prim ==0082 (step1606, _t1609);
    if _t160A {
      bool _t160B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      if _t160B {
        vec3 rp160C = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
        real _t160D = rp160C[0];
        real _t160E = 0.1e-5;
        bool _t160F = prim <=007C (_t160D, _t160E);
        if _t160F {
          stabilize;
        }
        real _t1610 = rp160C[1];
        real _t1611 = 0.1e-5;
        bool _t1612 = prim <=007C (_t1610, _t1611);
        if _t1612 {
          stabilize;
        }
        real _t1613 = rp160C[2];
        real _t1614 = 0.1e-5;
        bool _t1615 = prim <=007C (_t1613, _t1614);
        if _t1615 {
          stabilize;
        }
        real _t1616 = 0.1e1;
        real _t1617 = 0.1e1;
        real _t1618 = 0.1e1;
        vec3 _t1619 = [_t1616, _t1617, _t1618];
        real r161A = prim •00CE<$[3]; $[3]; $[]> (_t1619, rp160C);
        real _t161B = 0.9999999e0;
        bool _t161C = prim <=007C (_t161B, r161A);
        if _t161C {
          stabilize;
        }
      }
    }
    bool _t161D = extractFemItem(Valid(MeshPos), bool, cPos1607);
    Femdata: MeshPos _t161E = func findPos041E (meshData03FD, altCPos1608);
    bool _t161F = extractFemItem(Valid(MeshPos), bool, _t161E);
    bool _t1620 = prim !=0085 (_t161D, _t161F);
    if _t1620 {
      string _t1621 = "ERG:Warning of validity startPos:";
      string _t1622 = "\n";
      print (_t1621, startPos1741, _t1622);
    }
    bool _t1623;
    bool _t1624 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    bool _t1625 = prim !00BC (_t1624);
    if _t1625 {
      _t1623 = true;
    } else {
      bool _t1626;
      Femdata: MeshPos _t1627 = func findPos041E (meshData03FD, altCPos1608);
      bool _t1628 = extractFemItem(Valid(MeshPos), bool, _t1627);
      bool _t1629 = prim !00BC (_t1628);
      if _t1629 {
        _t1626 = true;
      } else {
        _t1626 = prim ==0082 (step1606, stepMax0411);
      }
      _t1623 = _t1626;
    }
    if _t1623 {
      string _t162A = "Went off the mesh\?";
      bool _t162B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      bool _t162C = prim !00BC (_t162B);
      string _t162D = " and ";
      string _t162E = " and ";
      Femdata: MeshPos _t162F = func findPos041E (meshData03FD, altCPos1608);
      bool _t1630 = extractFemItem(Valid(MeshPos), bool, _t162F);
      bool _t1631 = prim !00BC (_t1630);
      string _t1632 = "\n";
      print (_t162A, _t162C, _t162D, altCPos1608, _t162E, _t1631, _t1632);
      string _t1633 = "Pos is:";
      vec3 _t1634 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1635 = "\n";
      print (_t1633, _t1634, _t1635);
      string _t1636 = "\n";
      string _t1637 = "\n";
      print (stream1600, _t1636, newStream1603, _t1637);
      stabilize;
    }
    vec3 _t1638;
    vec3 _t173B = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
    int _t173C = extractFemItem(CellIndex(MeshPos), int, cPos1607);
    Femdata: Mesh _t173D = extractFem(cPos1607, Mesh);
    vec3 _t173E;
    field(3)[3] _t173F = femField(_t173D,_t173C,field(3)[3],Transform,);
    vec3 _t1740 = prim @00A5<#∞; %3; $[3]> (_t173F, _t173B);
    _t173E = _t1740;
    _t1638 = _t173E;
    vec3[1] _t1639 = {_t1638};
    vec3[] _t163A = (vec3[])_t1639;
    stream1600 = prim @0014<vec3> (stream1600, _t163A);
    vec3[1] _t163B = {altCPos1608};
    vec3[] _t163C = (vec3[])_t163B;
    newStream1603 = prim @0014<vec3> (newStream1603, _t163C);
    vec3 _t163D;
    vec3 _t1735 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
    int _t1736 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
    Femdata: Mesh _t1737 = extractFem(cPos1607, Mesh);
    vec3 _t1738;
    field(3)[3] _t1739 = femField(_t1737,_t1736,field(3)[3],Transform,);
    vec3 _t173A = prim @00A5<#∞; %3; $[3]> (_t1739, _t1735);
    _t1738 = _t173A;
    _t163D = _t1738;
    vec3 _t163E = prim -0026<$[3]> (_t163D, altCPos1608);
    real _t163F = prim |()|00B5<$[3]> (_t163E);
    real _t1640 = 0.1e-5;
    bool _t1641 = prim >0080 (_t163F, _t1640);
    if _t1641 {
      string _t1642 = "ERG:Error in tracing 1: At step:";
      string _t1643 = " with particle:";
      string _t1644 = "\n";
      print (_t1642, step1606, _t1643, startPos1741, _t1644);
      string _t1645 = "Poses are:";
      vec3 _t1646;
      vec3 _t172F = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      int _t1730 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: Mesh _t1731 = extractFem(cPos1607, Mesh);
      vec3 _t1732;
      field(3)[3] _t1733 = femField(_t1731,_t1730,field(3)[3],Transform,);
      vec3 _t1734 = prim @00A5<#∞; %3; $[3]> (_t1733, _t172F);
      _t1732 = _t1734;
      _t1646 = _t1732;
      string _t1647 = "\n";
      print (_t1645, _t1646, altCPos1608, _t1647);
      string _t1648 = "Cells are:";
      Femdata: Mesh _t1649 = extractFem(cPos1607, Mesh);
      int _t164A = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t164B = loadFem(MeshCell, _t1649, _t164A);
      string _t164C = " and ";
      Femdata: MeshPos _t164D = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t164E = extractFem(_t164D, Mesh);
      Femdata: MeshPos _t164F = func findPos041E (meshData03FD, altCPos1608);
      int _t1650 = extractFemItem(CellIndex(MeshPos), int, _t164F);
      Femdata: MeshCell _t1651 = loadFem(MeshCell, _t164E, _t1650);
      string _t1652 = "\n";
      print (_t1648, _t164B, _t164C, _t1651, _t1652);
      string _t1653 = "Ref poses are:";
      vec3 _t1654 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1655 = " and ";
      Femdata: MeshPos _t1656 = func findPos041E (meshData03FD, altCPos1608);
      vec3 _t1657 = extractFemItem(RefPos(MeshPos), vec3, _t1656);
      string _t1658 = "\n";
      print (_t1653, _t1654, _t1655, _t1657, _t1658);
      stabilize;
    } else {
      string _t1659 = "fine in cell 1:";
      Femdata: Mesh _t165A = extractFem(cPos1607, Mesh);
      int _t165B = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t165C = loadFem(MeshCell, _t165A, _t165B);
      string _t165D = "\n";
      print (_t1659, _t165C, _t165D);
    }
    real _t165E = 0.5e0;
    real _t165F = prim *0034 (_t165E, stepSize0410);
    vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    vec3 _t1661 = prim *0036<$[3]> (_t165F, _t1660);
    vec3 _t1662 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    real _t1663 = prim |()|00B5<$[3]> (_t1662);
    vec3 altUp11664 = prim /0057<$[3]> (_t1661, _t1663);
    real _t1665 = 0.5e0;
    real _t1666 = prim *0034 (_t1665, stepSize0410);
    vec3 _t1667;
    bool _t1717 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    if _t1717 {
      Femdata: Mesh _t1718 = extractFem(cPos1607, Mesh);
      int _t1719 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell c171A = loadFem(MeshCell, _t1718, _t1719);
      vec3 ref171B = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      Femdata: FuncCell _t171C;
      int _t171D = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t171E = loadFem(FuncCell, data040B, _t171D);
      _t171C = _t171E;
      Femdata: FemFunc _t171F = extractFem(_t171C, FemFunc);
      Femdata: FuncCell _t1720;
      int _t1721 = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t1722 = loadFem(FuncCell, data040B, _t1721);
      _t1720 = _t1722;
      Femdata: FemFunc _t1723 = extractFem(_t1720, FemFunc);
      Femdata: Space _t1724 = extractFem(_t1723, Space);
      Femdata: FuncCell _t1725;
      int _t1726 = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t1727 = loadFem(FuncCell, data040B, _t1726);
      _t1725 = _t1727;
      int _t1728 = extractFemItem(CellIndex(FuncCell), int, _t1725);
      field(3)[3] _t1729 = femField(_t171F,_t1728,field(3)[3],refField,);
      vec3 val172A = prim @00A5<#∞; %3; $[3]> (_t1729, ref171B);
      real _t172B = prim |()|00B5<$[3]> (val172A);
      vec3 _t172C = prim /0057<$[3]> (val172A, _t172B);
      _t1667 = _t172C;
    } else {
      string _t172D = "QWE:Eval at 0\n";
      print (_t172D);
      vec3 _t172E = prim $zero01BB<$[3]> ();
      _t1667 = _t172E;
    }
    vec3 up11668 = prim *0036<$[3]> (_t1666, _t1667);
    real _t1669 = 0.5e0;
    real _t166A = prim *0034 (_t1669, stepSize0410);
    vec3 _t166B;
    vec3 _t1715 = prim -0026<$[3]> (altCPos1608, center0413);
    vec3 _t1716 = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t1715);
    _t166B = _t1716;
    vec3 _t166C = prim *0036<$[3]> (_t166A, _t166B);
    vec3 _t166D;
    vec3 _t1713 = prim -0026<$[3]> (altCPos1608, center0413);
    vec3 _t1714 = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t1713);
    _t166D = _t1714;
    real _t166E = prim |()|00B5<$[3]> (_t166D);
    vec3 upCorrect1166F = prim /0057<$[3]> (_t166C, _t166E);
    bool _t1670;
    vec3 _t1671 = prim -0026<$[3]> (up11668, upCorrect1166F);
    real _t1672 = prim |()|00B5<$[3]> (_t1671);
    real _t1673 = 0.1e-5;
    bool _t1674 = prim >0080 (_t1672, _t1673);
    if _t1674 {
      _t1670 = true;
    } else {
      vec3 _t1675 = prim -0026<$[3]> (up11668, altUp11664);
      real _t1676 = prim |()|00B5<$[3]> (_t1675);
      real _t1677 = 0.1e-5;
      _t1670 = prim >0080 (_t1676, _t1677);
    }
    if _t1670 {
      string _t1678 = "ERG:Error in evaluation on pos 1:";
      string _t1679 = "\n";
      print (_t1678, startPos1741, _t1679);
    }
    Femdata: MeshPos intermed167A = func fn_2FB1563 (cPos1607, up11668);
    vec3 altIntermed167B = prim +0017<$[3]> (altCPos1608, altUp11664);
    bool _t167C = extractFemItem(Valid(MeshPos), bool, intermed167A);
    Femdata: MeshPos _t167D = func findPos041E (meshData03FD, altIntermed167B);
    bool _t167E = extractFemItem(Valid(MeshPos), bool, _t167D);
    bool _t167F = prim !=0085 (_t167C, _t167E);
    if _t167F {
      string _t1680 = "ERG:Warning of validity intermed";
      string _t1681 = "\n";
      print (_t1680, startPos1741, _t1681);
      string _t1682 = "Real location:";
      string _t1683 = "\n";
      print (_t1682, altIntermed167B, _t1683);
      string _t1684 = "Cell change: ";
      Femdata: MeshPos _t1685 = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t1686 = extractFem(_t1685, Mesh);
      Femdata: MeshPos _t1687 = func findPos041E (meshData03FD, altCPos1608);
      int _t1688 = extractFemItem(CellIndex(MeshPos), int, _t1687);
      Femdata: MeshCell _t1689 = loadFem(MeshCell, _t1686, _t1688);
      string _t168A = " to ";
      Femdata: MeshPos _t168B = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t168C = extractFem(_t168B, Mesh);
      Femdata: MeshPos _t168D = func findPos041E (meshData03FD, altIntermed167B);
      int _t168E = extractFemItem(CellIndex(MeshPos), int, _t168D);
      Femdata: MeshCell _t168F = loadFem(MeshCell, _t168C, _t168E);
      string _t1690 = "\n";
      print (_t1684, _t1689, _t168A, _t168F, _t1690);
    }
    bool _t1691;
    bool _t1692 = extractFemItem(Valid(MeshPos), bool, intermed167A);
    bool _t1693 = prim !00BC (_t1692);
    if _t1693 {
      _t1691 = true;
    } else {
      Femdata: MeshPos _t1694 = func findPos041E (meshData03FD, altIntermed167B);
      bool _t1695 = extractFemItem(Valid(MeshPos), bool, _t1694);
      _t1691 = prim !00BC (_t1695);
    }
    if _t1691 {
      string _t1696 = "Went off the mesh\?";
      bool _t1697 = extractFemItem(Valid(MeshPos), bool, intermed167A);
      bool _t1698 = prim !00BC (_t1697);
      string _t1699 = " and ";
      string _t169A = " and ";
      Femdata: MeshPos _t169B = func findPos041E (meshData03FD, altIntermed167B);
      bool _t169C = extractFemItem(Valid(MeshPos), bool, _t169B);
      bool _t169D = prim !00BC (_t169C);
      string _t169E = "\n";
      print (_t1696, _t1698, _t1699, altIntermed167B, _t169A, _t169D, _t169E);
      stabilize;
    }
    vec3 _t169F;
    vec3 _t170D = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
    int _t170E = extractFemItem(CellIndex(MeshPos), int, intermed167A);
    Femdata: Mesh _t170F = extractFem(intermed167A, Mesh);
    vec3 _t1710;
    field(3)[3] _t1711 = femField(_t170F,_t170E,field(3)[3],Transform,);
    vec3 _t1712 = prim @00A5<#∞; %3; $[3]> (_t1711, _t170D);
    _t1710 = _t1712;
    _t169F = _t1710;
    vec3 _t16A0 = prim -0026<$[3]> (_t169F, altIntermed167B);
    real _t16A1 = prim |()|00B5<$[3]> (_t16A0);
    real _t16A2 = 0.1e-5;
    bool _t16A3 = prim >0080 (_t16A1, _t16A2);
    if _t16A3 {
      string _t16A4 = "ERG:Error in tracing 2: At step:";
      string _t16A5 = " with particle:";
      string _t16A6 = "\n";
      print (_t16A4, step1606, _t16A5, startPos1741, _t16A6);
      string _t16A7 = "Poses are:";
      vec3 _t16A8;
      vec3 _t1707 = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
      int _t1708 = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: Mesh _t1709 = extractFem(intermed167A, Mesh);
      vec3 _t170A;
      field(3)[3] _t170B = femField(_t1709,_t1708,field(3)[3],Transform,);
      vec3 _t170C = prim @00A5<#∞; %3; $[3]> (_t170B, _t1707);
      _t170A = _t170C;
      _t16A8 = _t170A;
      string _t16A9 = "\n";
      print (_t16A7, _t16A8, altIntermed167B, _t16A9);
      stabilize;
    } else {
      string _t16AA = "fine in cell 2:";
      Femdata: Mesh _t16AB = extractFem(cPos1607, Mesh);
      int _t16AC = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t16AD = loadFem(MeshCell, _t16AB, _t16AC);
      string _t16AE = "\n";
      print (_t16AA, _t16AD, _t16AE);
    }
    vec3 _t16AF = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    vec3 _t16B0 = prim *0036<$[3]> (stepSize0410, _t16AF);
    vec3 _t16B1 = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    real _t16B2 = prim |()|00B5<$[3]> (_t16B1);
    vec3 altUp216B3 = prim /0057<$[3]> (_t16B0, _t16B2);
    vec3 _t16B4;
    bool _t16EF = extractFemItem(Valid(MeshPos), bool, intermed167A);
    if _t16EF {
      Femdata: Mesh _t16F0 = extractFem(intermed167A, Mesh);
      int _t16F1 = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell c16F2 = loadFem(MeshCell, _t16F0, _t16F1);
      vec3 ref16F3 = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
      Femdata: FuncCell _t16F4;
      int _t16F5 = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16F6 = loadFem(FuncCell, data040B, _t16F5);
      _t16F4 = _t16F6;
      Femdata: FemFunc _t16F7 = extractFem(_t16F4, FemFunc);
      Femdata: FuncCell _t16F8;
      int _t16F9 = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16FA = loadFem(FuncCell, data040B, _t16F9);
      _t16F8 = _t16FA;
      Femdata: FemFunc _t16FB = extractFem(_t16F8, FemFunc);
      Femdata: Space _t16FC = extractFem(_t16FB, Space);
      Femdata: FuncCell _t16FD;
      int _t16FE = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16FF = loadFem(FuncCell, data040B, _t16FE);
      _t16FD = _t16FF;
      int _t1700 = extractFemItem(CellIndex(FuncCell), int, _t16FD);
      field(3)[3] _t1701 = femField(_t16F7,_t1700,field(3)[3],refField,);
      vec3 val1702 = prim @00A5<#∞; %3; $[3]> (_t1701, ref16F3);
      real _t1703 = prim |()|00B5<$[3]> (val1702);
      vec3 _t1704 = prim /0057<$[3]> (val1702, _t1703);
      _t16B4 = _t1704;
    } else {
      string _t1705 = "QWE:Eval at 0\n";
      print (_t1705);
      vec3 _t1706 = prim $zero01BB<$[3]> ();
      _t16B4 = _t1706;
    }
    vec3 up216B5 = prim *0036<$[3]> (stepSize0410, _t16B4);
    vec3 _t16B6;
    vec3 _t16ED = prim -0026<$[3]> (altIntermed167B, center0413);
    vec3 _t16EE = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t16ED);
    _t16B6 = _t16EE;
    vec3 _t16B7 = prim *0036<$[3]> (stepSize0410, _t16B6);
    vec3 _t16B8;
    vec3 _t16EB = prim -0026<$[3]> (altIntermed167B, center0413);
    vec3 _t16EC = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t16EB);
    _t16B8 = _t16EC;
    real _t16B9 = prim |()|00B5<$[3]> (_t16B8);
    vec3 upCorrect216BA = prim /0057<$[3]> (_t16B7, _t16B9);
    cPos1607 = func fn_2FB1563 (cPos1607, up216B5);
    altCPos1608 = prim +0017<$[3]> (altCPos1608, altUp216B3);
    int _t16BB = 1;
    step1606 = prim +0015 (step1606, _t16BB);
    bool _t16BC;
    vec3 _t16BD = prim -0026<$[3]> (up216B5, upCorrect216BA);
    real _t16BE = prim |()|00B5<$[3]> (_t16BD);
    real _t16BF = 0.1e-5;
    bool _t16C0 = prim >0080 (_t16BE, _t16BF);
    if _t16C0 {
      _t16BC = true;
    } else {
      vec3 _t16C1 = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16C2 = prim |()|00B5<$[3]> (_t16C1);
      real _t16C3 = 0.1e-4;
      _t16BC = prim >0080 (_t16C2, _t16C3);
    }
    if _t16BC {
      string _t16C4 = "ERG:Error in evaluation on pos 2:";
      string _t16C5 = "\n";
      print (_t16C4, startPos1741, _t16C5);
      string _t16C6 = "The errors are:";
      vec3 _t16C7 = prim -0026<$[3]> (up216B5, upCorrect216BA);
      real _t16C8 = prim |()|00B5<$[3]> (_t16C7);
      string _t16C9 = " and ";
      vec3 _t16CA = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16CB = prim |()|00B5<$[3]> (_t16CA);
      string _t16CC = "\n";
      print (_t16C6, _t16C8, _t16C9, _t16CB, _t16CC);
      string _t16CD = "The cells are:";
      Femdata: Mesh _t16CE = extractFem(intermed167A, Mesh);
      int _t16CF = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell _t16D0 = loadFem(MeshCell, _t16CE, _t16CF);
      string _t16D1 = " vs ";
      Femdata: MeshPos _t16D2 = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t16D3 = extractFem(_t16D2, Mesh);
      Femdata: MeshPos _t16D4 = func findPos041E (meshData03FD, altIntermed167B);
      int _t16D5 = extractFemItem(CellIndex(MeshPos), int, _t16D4);
      Femdata: MeshCell _t16D6 = loadFem(MeshCell, _t16D3, _t16D5);
      string _t16D7 = "\n";
      print (_t16CD, _t16D0, _t16D1, _t16D6, _t16D7);
    }
  }
}
collection {
  foreach x16D8 in startPoints040F {
    new gg (x16D8);
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData03FD;
input FemData:Space 0space0409_intermedateGlobal040A;
input FemData:FemFunc 0data040B_intermedateGlobal040C;
input int timeSteps040D = <default>;
input real timeEps040E = <default>;
input vec3[] startPoints040F;
input real stepSize0410 = <default>;
input int stepMax0411 = <default>;
input tensor[3,3] M0412;
input vec3 center0413;
constants {
  timeSteps040D = 32;
  timeEps040E = 0.1e-6;
  stepSize0410 = 0.1e-1;
  stepMax0411 = 300;
}
global Femdata: Space space0409;
global Femdata: FemFunc data040B;
global field(3)[3] F1561;
function Femdata: MeshPos#20 findPos041E (Femdata: Mesh mesh041F, vec3 pos0420)
{
  real _t0421 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0422 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0423 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0424 = [_t0421, _t0422, _t0423];
  newtonInt0425 = 0;
  cellInt0426 = extractFemItem(StartCell(Mesh), int, mesh041F);
  int _t0427 = extractFemItem(NumCell(Mesh), int, mesh041F);
  int _t0428 = 1;
  numCell0429 = prim -0024 (_t0427, _t0428);
  yayCells042A = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh041F, pos0420 : vec3);
  foreach cellItter042E in yayCells042A {
    real _t042B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t042D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn0424 = [_t042B, _t042C, _t042D];
    cellInt0426 = cellItter042E;
    field(3)[3] _t042F = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
    field(3)[3,3] _t0430 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042F);
    field(3)[3,3] _t0431 = prim inv015E<#∞; %3> (_t0430);
    real _t0432 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0433 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t0435 = [_t0432, _t0433, _t0434];
    A0436 = prim @00A5<#∞; %3; $[3,3]> (_t0431, _t0435);
    int _t0437 = 0;
    int _t0438 = 16;
    int[] _t0439 = prim $range01C3 (_t0437, _t0438);
    foreach newtonItter0468 in _t0439 {
      field(3)[3] _t043A = femField(mesh041F,cellInt0426,field(3)[3],Transform,);
      field(3)[3] _t043B = prim -002E<#∞; %3; $[3]> (_t043A, pos0420);
      field(3)[3] _t043C = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0436, _t043B);
      delta043D = prim @00A5<#∞; %3; $[3]> (_t043C, xn0424);
      xn0424 = prim -0026<$[3]> (xn0424, delta043D);
      real _t043E = 0.1e-7;
      real _t043F = 0.1e-7;
      real _t0440 = prim *0034 (_t043E, _t043F);
      real _t0441 = prim •00CE<$[3]; $[3]; $[]> (delta043D, delta043D);
      bool _t0442 = prim >=007E (_t0440, _t0441);
      if _t0442 {
        real _t0443 = 0.1e1;
        real _t0444 = 0.1e-7;
        real _t0445 = prim +0017<$[]> (_t0443, _t0444);
        real _t0446 = 0.1e1;
        real _t0447 = 0.1e1;
        real _t0448 = 0.1e1;
        vec3 _t0449 = [_t0446, _t0447, _t0448];
        real _t044A = prim •00CE<$[3]; $[3]; $[]> (_t0449, xn0424);
        bool _t044B = prim >0080 (_t0445, _t044A);
        real _t044C = 0.1e-7;
        real _t044D = 0.1e-7;
        real _t044E = 0.1e-7;
        vec3 _t044F = [_t044C, _t044D, _t044E];
        vec3 _t0450 = prim +0017<$[3]> (_t044F, xn0424);
        real _t0451 = _t0450[0];
        real _t0452 = -0.e0;
        bool _t0453 = prim >0080 (_t0451, _t0452);
        real _t0454 = 0.1e-7;
        real _t0455 = 0.1e-7;
        real _t0456 = 0.1e-7;
        vec3 _t0457 = [_t0454, _t0455, _t0456];
        vec3 _t0458 = prim +0017<$[3]> (_t0457, xn0424);
        real _t0459 = _t0458[1];
        real _t045A = -0.e0;
        bool _t045B = prim >0080 (_t0459, _t045A);
        real _t045C = 0.1e-7;
        real _t045D = 0.1e-7;
        real _t045E = 0.1e-7;
        vec3 _t045F = [_t045C, _t045D, _t045E];
        vec3 _t0460 = prim +0017<$[3]> (_t045F, xn0424);
        real _t0461 = _t0460[2];
        real _t0462 = -0.e0;
        bool _t0463 = prim >0080 (_t0461, _t0462);
        bool _t0464 = prim $and01C4 (_t045B, _t0463);
        bool _t0465 = prim $and01C4 (_t0453, _t0464);
        bool _t0466 = prim $and01C4 (_t044B, _t0465);
        if _t0466 {
          Femdata: MeshPos _t0467 = extractFemItemN((mesh041F, cellInt0426, xn0424, pos0420),AllBuild(MeshPos),);
          return _t0467;
        }
      }
    }
  }
  Femdata: MeshPos _t0469 = extractFemItemN((mesh041F),InvalidBuild(MeshPos),);
  return _t0469;
}
function vec3#2 worldPos04DA (Femdata: MeshPos pos04D3)
{
  vec3 _t04DB = extractFemItem(RefPos(MeshPos), vec3, pos04D3);
  int _t04DC = extractFemItem(CellIndex(MeshPos), int, pos04D3);
  Femdata: Mesh _t04DD = extractFem(pos04D3, Mesh);
  vec3 _t04DE;
  field(3)[3] _t16DB = femField(_t04DD,_t04DC,field(3)[3],Transform,);
  vec3 _t16DC = prim @00A5<#∞; %3; $[3]> (_t16DB, _t04DB);
  _t04DE = _t16DC;
  return _t04DE;
}
function Femdata: MeshPos#1 $exitPos04DF (Femdata: Mesh mesh04E0, int cellId04E1, vec3 refPos04E2, vec3 dPos04E3, real[2] time04E4)
{
  int _t04E5 = -1;
  real _t04E6 = time04E4[1];
  int _t04E7 = prim $r2i01B7 (_t04E6);
  int[2] _t04E9 = func nextCell404E8 (_t04E7, cellId04E1, mesh04E0);
  int _t04EA = 0;
  int _t04EB = prim $sub01C0<int; %2> (_t04E9, _t04EA);
  bool _t04EC = prim !=0086 (_t04E5, _t04EB);
  if _t04EC {
    string _t04ED = "face ";
    real _t04EE = time04E4[1];
    int _t04EF = prim $r2i01B7 (_t04EE);
    string _t04F0 = " to ";
    real _t04F1 = time04E4[1];
    int _t04F2 = prim $r2i01B7 (_t04F1);
    int[2] _t04F3 = func nextCell404E8 (_t04F2, cellId04E1, mesh04E0);
    int _t04F4 = 1;
    int _t04F5 = prim $sub01C0<int; %2> (_t04F3, _t04F4);
    string _t04F6 = "\n";
    string _t04F7 = "got: ";
    real _t04F8 = 0.1e1;
    real _t04F9 = 0.e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.e0;
    vec4 _t04FC = [_t04F8, _t04F9, _t04FA, _t04FB];
    real _t04FD = 0.e0;
    real _t04FE = 0.1e1;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    vec4 _t0501 = [_t04FD, _t04FE, _t04FF, _t0500];
    real _t0502 = 0.e0;
    real _t0503 = 0.e0;
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    vec4 _t0506 = [_t0502, _t0503, _t0504, _t0505];
    real _t0507 = 0.971445146547e-16;
    real _t0508 = 0.e0;
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    vec4 _t050B = [_t0507, _t0508, _t0509, _t050A];
    tensor[4,4] _t050C = [_t04FC, _t0501, _t0506, _t050B];
    real _t050D = 0.57735026919e0;
    real _t050E = 0.57735026919e0;
    real _t050F = 0.57735026919e0;
    real _t0510 = -0.57735026919e0;
    vec4 _t0511 = [_t050D, _t050E, _t050F, _t0510];
    real _t0512 = -0.333333333333e0;
    real _t0513 = 0.666666666667e0;
    real _t0514 = -0.333333333333e0;
    real _t0515 = 0.333333333333e0;
    vec4 _t0516 = [_t0512, _t0513, _t0514, _t0515];
    real _t0517 = -0.333333333333e0;
    real _t0518 = -0.333333333333e0;
    real _t0519 = 0.666666666667e0;
    real _t051A = 0.333333333333e0;
    vec4 _t051B = [_t0517, _t0518, _t0519, _t051A];
    real _t051C = 0.971445146547e-16;
    real _t051D = 0.e0;
    real _t051E = 0.e0;
    real _t051F = 0.1e1;
    vec4 _t0520 = [_t051C, _t051D, _t051E, _t051F];
    tensor[4,4] _t0521 = [_t0511, _t0516, _t051B, _t0520];
    real _t0522 = -0.333333333333e0;
    real _t0523 = 0.666666666667e0;
    real _t0524 = -0.333333333333e0;
    real _t0525 = 0.333333333333e0;
    vec4 _t0526 = [_t0522, _t0523, _t0524, _t0525];
    real _t0527 = -0.57735026919e0;
    real _t0528 = -0.57735026919e0;
    real _t0529 = -0.57735026919e0;
    real _t052A = 0.57735026919e0;
    vec4 _t052B = [_t0527, _t0528, _t0529, _t052A];
    real _t052C = -0.333333333333e0;
    real _t052D = -0.333333333333e0;
    real _t052E = 0.666666666667e0;
    real _t052F = 0.333333333333e0;
    vec4 _t0530 = [_t052C, _t052D, _t052E, _t052F];
    real _t0531 = 0.971445146547e-16;
    real _t0532 = 0.e0;
    real _t0533 = 0.e0;
    real _t0534 = 0.1e1;
    vec4 _t0535 = [_t0531, _t0532, _t0533, _t0534];
    tensor[4,4] _t0536 = [_t0526, _t052B, _t0530, _t0535];
    real _t0537 = -0.333333333333e0;
    real _t0538 = 0.666666666667e0;
    real _t0539 = -0.333333333333e0;
    real _t053A = 0.333333333333e0;
    vec4 _t053B = [_t0537, _t0538, _t0539, _t053A];
    real _t053C = -0.333333333333e0;
    real _t053D = -0.333333333333e0;
    real _t053E = 0.666666666667e0;
    real _t053F = 0.333333333333e0;
    vec4 _t0540 = [_t053C, _t053D, _t053E, _t053F];
    real _t0541 = 0.57735026919e0;
    real _t0542 = 0.57735026919e0;
    real _t0543 = 0.57735026919e0;
    real _t0544 = -0.57735026919e0;
    vec4 _t0545 = [_t0541, _t0542, _t0543, _t0544];
    real _t0546 = 0.971445146547e-16;
    real _t0547 = 0.e0;
    real _t0548 = 0.e0;
    real _t0549 = 0.1e1;
    vec4 _t054A = [_t0546, _t0547, _t0548, _t0549];
    tensor[4,4] _t054B = [_t053B, _t0540, _t0545, _t054A];
    tensor[4,4][4] _t054C = {_t050C, _t0521, _t0536, _t054B};
    real _t054D = 0.57735026919e0;
    real _t054E = -0.1e1;
    real _t054F = -0.1e1;
    real _t0550 = 0.1e1;
    vec4 _t0551 = [_t054D, _t054E, _t054F, _t0550];
    real _t0552 = 0.57735026919e0;
    real _t0553 = 0.1e1;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    vec4 _t0556 = [_t0552, _t0553, _t0554, _t0555];
    real _t0557 = 0.57735026919e0;
    real _t0558 = 0.e0;
    real _t0559 = 0.1e1;
    real _t055A = 0.e0;
    vec4 _t055B = [_t0557, _t0558, _t0559, _t055A];
    real _t055C = 0.e0;
    real _t055D = 0.e0;
    real _t055E = 0.e0;
    real _t055F = 0.1e1;
    vec4 _t0560 = [_t055C, _t055D, _t055E, _t055F];
    tensor[4,4] _t0561 = [_t0551, _t0556, _t055B, _t0560];
    real _t0562 = 0.1e1;
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.e0;
    vec4 _t0566 = [_t0562, _t0563, _t0564, _t0565];
    real _t0567 = 0.e0;
    real _t0568 = 0.1e1;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    vec4 _t056B = [_t0567, _t0568, _t0569, _t056A];
    real _t056C = 0.e0;
    real _t056D = 0.e0;
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    vec4 _t0570 = [_t056C, _t056D, _t056E, _t056F];
    real _t0571 = 0.e0;
    real _t0572 = 0.e0;
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    vec4 _t0575 = [_t0571, _t0572, _t0573, _t0574];
    tensor[4,4] _t0576 = [_t0566, _t056B, _t0570, _t0575];
    real _t0577 = 0.e0;
    real _t0578 = 0.1e1;
    real _t0579 = 0.e0;
    real _t057A = 0.e0;
    vec4 _t057B = [_t0577, _t0578, _t0579, _t057A];
    real _t057C = -0.1e1;
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    vec4 _t0580 = [_t057C, _t057D, _t057E, _t057F];
    real _t0581 = 0.e0;
    real _t0582 = 0.e0;
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    vec4 _t0585 = [_t0581, _t0582, _t0583, _t0584];
    real _t0586 = 0.e0;
    real _t0587 = 0.e0;
    real _t0588 = 0.e0;
    real _t0589 = 0.1e1;
    vec4 _t058A = [_t0586, _t0587, _t0588, _t0589];
    tensor[4,4] _t058B = [_t057B, _t0580, _t0585, _t058A];
    real _t058C = 0.e0;
    real _t058D = 0.1e1;
    real _t058E = 0.e0;
    real _t058F = 0.e0;
    vec4 _t0590 = [_t058C, _t058D, _t058E, _t058F];
    real _t0591 = 0.e0;
    real _t0592 = 0.e0;
    real _t0593 = 0.1e1;
    real _t0594 = 0.e0;
    vec4 _t0595 = [_t0591, _t0592, _t0593, _t0594];
    real _t0596 = 0.1e1;
    real _t0597 = 0.e0;
    real _t0598 = 0.e0;
    real _t0599 = 0.e0;
    vec4 _t059A = [_t0596, _t0597, _t0598, _t0599];
    real _t059B = 0.e0;
    real _t059C = 0.e0;
    real _t059D = 0.e0;
    real _t059E = 0.1e1;
    vec4 _t059F = [_t059B, _t059C, _t059D, _t059E];
    tensor[4,4] _t05A0 = [_t0590, _t0595, _t059A, _t059F];
    tensor[4,4][4] _t05A1 = {_t0561, _t0576, _t058B, _t05A0};
    real _t05A2 = -0.1e1;
    real _t05A3 = -0.57735026919e0;
    real _t05A4 = -0.1e1;
    real _t05A5 = 0.1e1;
    vec4 _t05A6 = [_t05A2, _t05A3, _t05A4, _t05A5];
    real _t05A7 = 0.1e1;
    real _t05A8 = -0.57735026919e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    vec4 _t05AB = [_t05A7, _t05A8, _t05A9, _t05AA];
    real _t05AC = 0.e0;
    real _t05AD = -0.57735026919e0;
    real _t05AE = 0.1e1;
    real _t05AF = 0.e0;
    vec4 _t05B0 = [_t05AC, _t05AD, _t05AE, _t05AF];
    real _t05B1 = 0.e0;
    real _t05B2 = 0.e0;
    real _t05B3 = 0.e0;
    real _t05B4 = 0.1e1;
    vec4 _t05B5 = [_t05B1, _t05B2, _t05B3, _t05B4];
    tensor[4,4] _t05B6 = [_t05A6, _t05AB, _t05B0, _t05B5];
    real _t05B7 = 0.e0;
    real _t05B8 = -0.1e1;
    real _t05B9 = 0.e0;
    real _t05BA = 0.e0;
    vec4 _t05BB = [_t05B7, _t05B8, _t05B9, _t05BA];
    real _t05BC = 0.1e1;
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    vec4 _t05C0 = [_t05BC, _t05BD, _t05BE, _t05BF];
    real _t05C1 = 0.e0;
    real _t05C2 = 0.e0;
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    vec4 _t05C5 = [_t05C1, _t05C2, _t05C3, _t05C4];
    real _t05C6 = 0.e0;
    real _t05C7 = 0.e0;
    real _t05C8 = 0.e0;
    real _t05C9 = 0.1e1;
    vec4 _t05CA = [_t05C6, _t05C7, _t05C8, _t05C9];
    tensor[4,4] _t05CB = [_t05BB, _t05C0, _t05C5, _t05CA];
    real _t05CC = 0.1e1;
    real _t05CD = 0.e0;
    real _t05CE = 0.e0;
    real _t05CF = 0.e0;
    vec4 _t05D0 = [_t05CC, _t05CD, _t05CE, _t05CF];
    real _t05D1 = 0.e0;
    real _t05D2 = 0.1e1;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    vec4 _t05D5 = [_t05D1, _t05D2, _t05D3, _t05D4];
    real _t05D6 = 0.e0;
    real _t05D7 = 0.e0;
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    vec4 _t05DA = [_t05D6, _t05D7, _t05D8, _t05D9];
    real _t05DB = 0.e0;
    real _t05DC = 0.e0;
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    vec4 _t05DF = [_t05DB, _t05DC, _t05DD, _t05DE];
    tensor[4,4] _t05E0 = [_t05D0, _t05D5, _t05DA, _t05DF];
    real _t05E1 = 0.1e1;
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.e0;
    vec4 _t05E5 = [_t05E1, _t05E2, _t05E3, _t05E4];
    real _t05E6 = 0.e0;
    real _t05E7 = 0.e0;
    real _t05E8 = 0.1e1;
    real _t05E9 = 0.e0;
    vec4 _t05EA = [_t05E6, _t05E7, _t05E8, _t05E9];
    real _t05EB = 0.e0;
    real _t05EC = -0.1e1;
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    vec4 _t05EF = [_t05EB, _t05EC, _t05ED, _t05EE];
    real _t05F0 = 0.e0;
    real _t05F1 = 0.e0;
    real _t05F2 = 0.e0;
    real _t05F3 = 0.1e1;
    vec4 _t05F4 = [_t05F0, _t05F1, _t05F2, _t05F3];
    tensor[4,4] _t05F5 = [_t05E5, _t05EA, _t05EF, _t05F4];
    tensor[4,4][4] _t05F6 = {_t05B6, _t05CB, _t05E0, _t05F5};
    real _t05F7 = -0.1e1;
    real _t05F8 = -0.1e1;
    real _t05F9 = 0.57735026919e0;
    real _t05FA = 0.1e1;
    vec4 _t05FB = [_t05F7, _t05F8, _t05F9, _t05FA];
    real _t05FC = 0.1e1;
    real _t05FD = 0.e0;
    real _t05FE = 0.57735026919e0;
    real _t05FF = 0.e0;
    vec4 _t0600 = [_t05FC, _t05FD, _t05FE, _t05FF];
    real _t0601 = 0.e0;
    real _t0602 = 0.1e1;
    real _t0603 = 0.57735026919e0;
    real _t0604 = 0.e0;
    vec4 _t0605 = [_t0601, _t0602, _t0603, _t0604];
    real _t0606 = 0.e0;
    real _t0607 = 0.e0;
    real _t0608 = 0.e0;
    real _t0609 = 0.1e1;
    vec4 _t060A = [_t0606, _t0607, _t0608, _t0609];
    tensor[4,4] _t060B = [_t05FB, _t0600, _t0605, _t060A];
    real _t060C = 0.e0;
    real _t060D = 0.e0;
    real _t060E = 0.1e1;
    real _t060F = 0.e0;
    vec4 _t0610 = [_t060C, _t060D, _t060E, _t060F];
    real _t0611 = 0.1e1;
    real _t0612 = 0.e0;
    real _t0613 = 0.e0;
    real _t0614 = 0.e0;
    vec4 _t0615 = [_t0611, _t0612, _t0613, _t0614];
    real _t0616 = 0.e0;
    real _t0617 = 0.1e1;
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    vec4 _t061A = [_t0616, _t0617, _t0618, _t0619];
    real _t061B = 0.e0;
    real _t061C = 0.e0;
    real _t061D = 0.e0;
    real _t061E = 0.1e1;
    vec4 _t061F = [_t061B, _t061C, _t061D, _t061E];
    tensor[4,4] _t0620 = [_t0610, _t0615, _t061A, _t061F];
    real _t0621 = 0.1e1;
    real _t0622 = 0.e0;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    vec4 _t0625 = [_t0621, _t0622, _t0623, _t0624];
    real _t0626 = 0.e0;
    real _t0627 = 0.e0;
    real _t0628 = -0.1e1;
    real _t0629 = 0.e0;
    vec4 _t062A = [_t0626, _t0627, _t0628, _t0629];
    real _t062B = 0.e0;
    real _t062C = 0.1e1;
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    vec4 _t062F = [_t062B, _t062C, _t062D, _t062E];
    real _t0630 = 0.e0;
    real _t0631 = 0.e0;
    real _t0632 = 0.e0;
    real _t0633 = 0.1e1;
    vec4 _t0634 = [_t0630, _t0631, _t0632, _t0633];
    tensor[4,4] _t0635 = [_t0625, _t062A, _t062F, _t0634];
    real _t0636 = 0.1e1;
    real _t0637 = 0.e0;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    vec4 _t063A = [_t0636, _t0637, _t0638, _t0639];
    real _t063B = 0.e0;
    real _t063C = 0.1e1;
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    vec4 _t063F = [_t063B, _t063C, _t063D, _t063E];
    real _t0640 = 0.e0;
    real _t0641 = 0.e0;
    real _t0642 = 0.1e1;
    real _t0643 = 0.e0;
    vec4 _t0644 = [_t0640, _t0641, _t0642, _t0643];
    real _t0645 = 0.e0;
    real _t0646 = 0.e0;
    real _t0647 = 0.e0;
    real _t0648 = 0.1e1;
    vec4 _t0649 = [_t0645, _t0646, _t0647, _t0648];
    tensor[4,4] _t064A = [_t063A, _t063F, _t0644, _t0649];
    tensor[4,4][4] _t064B = {_t060B, _t0620, _t0635, _t064A};
    tensor[4,4][4][4] _t064C = {_t054C, _t05A1, _t05F6, _t064B};
    real _t064D = time04E4[1];
    int _t064E = prim $r2i01B7 (_t064D);
    tensor[4,4][4] _t064F = prim $sub01C0<tensor[4,4][4]; %4> (_t064C, _t064E);
    real _t0650 = time04E4[1];
    int _t0651 = prim $r2i01B7 (_t0650);
    int[2] _t0652 = func nextCell404E8 (_t0651, cellId04E1, mesh04E0);
    int _t0653 = 1;
    int _t0654 = prim $sub01C0<int; %2> (_t0652, _t0653);
    tensor[4,4] _t0655 = prim $sub01C0<tensor[4,4]; %4> (_t064F, _t0654);
    string _t0656 = "\n";
    print (_t04ED, _t04EF, _t04F0, _t04F5, _t04F6, _t04F7, _t0655, _t0656);
    real _t0657 = time04E4[1];
    int _t0658 = prim $r2i01B7 (_t0657);
    int[2] _t0659 = func nextCell404E8 (_t0658, cellId04E1, mesh04E0);
    int _t065A = 0;
    int _t065B = prim $sub01C0<int; %2> (_t0659, _t065A);
    real _t065C = 0.1e1;
    real _t065D = 0.e0;
    real _t065E = 0.e0;
    real _t065F = 0.e0;
    vec4 _t0660 = [_t065C, _t065D, _t065E, _t065F];
    real _t0661 = 0.e0;
    real _t0662 = 0.1e1;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    vec4 _t0665 = [_t0661, _t0662, _t0663, _t0664];
    real _t0666 = 0.e0;
    real _t0667 = 0.e0;
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    vec4 _t066A = [_t0666, _t0667, _t0668, _t0669];
    real _t066B = 0.971445146547e-16;
    real _t066C = 0.e0;
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    vec4 _t066F = [_t066B, _t066C, _t066D, _t066E];
    tensor[4,4] _t0670 = [_t0660, _t0665, _t066A, _t066F];
    real _t0671 = 0.57735026919e0;
    real _t0672 = 0.57735026919e0;
    real _t0673 = 0.57735026919e0;
    real _t0674 = -0.57735026919e0;
    vec4 _t0675 = [_t0671, _t0672, _t0673, _t0674];
    real _t0676 = -0.333333333333e0;
    real _t0677 = 0.666666666667e0;
    real _t0678 = -0.333333333333e0;
    real _t0679 = 0.333333333333e0;
    vec4 _t067A = [_t0676, _t0677, _t0678, _t0679];
    real _t067B = -0.333333333333e0;
    real _t067C = -0.333333333333e0;
    real _t067D = 0.666666666667e0;
    real _t067E = 0.333333333333e0;
    vec4 _t067F = [_t067B, _t067C, _t067D, _t067E];
    real _t0680 = 0.971445146547e-16;
    real _t0681 = 0.e0;
    real _t0682 = 0.e0;
    real _t0683 = 0.1e1;
    vec4 _t0684 = [_t0680, _t0681, _t0682, _t0683];
    tensor[4,4] _t0685 = [_t0675, _t067A, _t067F, _t0684];
    real _t0686 = -0.333333333333e0;
    real _t0687 = 0.666666666667e0;
    real _t0688 = -0.333333333333e0;
    real _t0689 = 0.333333333333e0;
    vec4 _t068A = [_t0686, _t0687, _t0688, _t0689];
    real _t068B = -0.57735026919e0;
    real _t068C = -0.57735026919e0;
    real _t068D = -0.57735026919e0;
    real _t068E = 0.57735026919e0;
    vec4 _t068F = [_t068B, _t068C, _t068D, _t068E];
    real _t0690 = -0.333333333333e0;
    real _t0691 = -0.333333333333e0;
    real _t0692 = 0.666666666667e0;
    real _t0693 = 0.333333333333e0;
    vec4 _t0694 = [_t0690, _t0691, _t0692, _t0693];
    real _t0695 = 0.971445146547e-16;
    real _t0696 = 0.e0;
    real _t0697 = 0.e0;
    real _t0698 = 0.1e1;
    vec4 _t0699 = [_t0695, _t0696, _t0697, _t0698];
    tensor[4,4] _t069A = [_t068A, _t068F, _t0694, _t0699];
    real _t069B = -0.333333333333e0;
    real _t069C = 0.666666666667e0;
    real _t069D = -0.333333333333e0;
    real _t069E = 0.333333333333e0;
    vec4 _t069F = [_t069B, _t069C, _t069D, _t069E];
    real _t06A0 = -0.333333333333e0;
    real _t06A1 = -0.333333333333e0;
    real _t06A2 = 0.666666666667e0;
    real _t06A3 = 0.333333333333e0;
    vec4 _t06A4 = [_t06A0, _t06A1, _t06A2, _t06A3];
    real _t06A5 = 0.57735026919e0;
    real _t06A6 = 0.57735026919e0;
    real _t06A7 = 0.57735026919e0;
    real _t06A8 = -0.57735026919e0;
    vec4 _t06A9 = [_t06A5, _t06A6, _t06A7, _t06A8];
    real _t06AA = 0.971445146547e-16;
    real _t06AB = 0.e0;
    real _t06AC = 0.e0;
    real _t06AD = 0.1e1;
    vec4 _t06AE = [_t06AA, _t06AB, _t06AC, _t06AD];
    tensor[4,4] _t06AF = [_t069F, _t06A4, _t06A9, _t06AE];
    tensor[4,4][4] _t06B0 = {_t0670, _t0685, _t069A, _t06AF};
    real _t06B1 = 0.57735026919e0;
    real _t06B2 = -0.1e1;
    real _t06B3 = -0.1e1;
    real _t06B4 = 0.1e1;
    vec4 _t06B5 = [_t06B1, _t06B2, _t06B3, _t06B4];
    real _t06B6 = 0.57735026919e0;
    real _t06B7 = 0.1e1;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    vec4 _t06BA = [_t06B6, _t06B7, _t06B8, _t06B9];
    real _t06BB = 0.57735026919e0;
    real _t06BC = 0.e0;
    real _t06BD = 0.1e1;
    real _t06BE = 0.e0;
    vec4 _t06BF = [_t06BB, _t06BC, _t06BD, _t06BE];
    real _t06C0 = 0.e0;
    real _t06C1 = 0.e0;
    real _t06C2 = 0.e0;
    real _t06C3 = 0.1e1;
    vec4 _t06C4 = [_t06C0, _t06C1, _t06C2, _t06C3];
    tensor[4,4] _t06C5 = [_t06B5, _t06BA, _t06BF, _t06C4];
    real _t06C6 = 0.1e1;
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.e0;
    vec4 _t06CA = [_t06C6, _t06C7, _t06C8, _t06C9];
    real _t06CB = 0.e0;
    real _t06CC = 0.1e1;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    vec4 _t06CF = [_t06CB, _t06CC, _t06CD, _t06CE];
    real _t06D0 = 0.e0;
    real _t06D1 = 0.e0;
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    vec4 _t06D4 = [_t06D0, _t06D1, _t06D2, _t06D3];
    real _t06D5 = 0.e0;
    real _t06D6 = 0.e0;
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    vec4 _t06D9 = [_t06D5, _t06D6, _t06D7, _t06D8];
    tensor[4,4] _t06DA = [_t06CA, _t06CF, _t06D4, _t06D9];
    real _t06DB = 0.e0;
    real _t06DC = 0.1e1;
    real _t06DD = 0.e0;
    real _t06DE = 0.e0;
    vec4 _t06DF = [_t06DB, _t06DC, _t06DD, _t06DE];
    real _t06E0 = -0.1e1;
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    vec4 _t06E4 = [_t06E0, _t06E1, _t06E2, _t06E3];
    real _t06E5 = 0.e0;
    real _t06E6 = 0.e0;
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    vec4 _t06E9 = [_t06E5, _t06E6, _t06E7, _t06E8];
    real _t06EA = 0.e0;
    real _t06EB = 0.e0;
    real _t06EC = 0.e0;
    real _t06ED = 0.1e1;
    vec4 _t06EE = [_t06EA, _t06EB, _t06EC, _t06ED];
    tensor[4,4] _t06EF = [_t06DF, _t06E4, _t06E9, _t06EE];
    real _t06F0 = 0.e0;
    real _t06F1 = 0.1e1;
    real _t06F2 = 0.e0;
    real _t06F3 = 0.e0;
    vec4 _t06F4 = [_t06F0, _t06F1, _t06F2, _t06F3];
    real _t06F5 = 0.e0;
    real _t06F6 = 0.e0;
    real _t06F7 = 0.1e1;
    real _t06F8 = 0.e0;
    vec4 _t06F9 = [_t06F5, _t06F6, _t06F7, _t06F8];
    real _t06FA = 0.1e1;
    real _t06FB = 0.e0;
    real _t06FC = 0.e0;
    real _t06FD = 0.e0;
    vec4 _t06FE = [_t06FA, _t06FB, _t06FC, _t06FD];
    real _t06FF = 0.e0;
    real _t0700 = 0.e0;
    real _t0701 = 0.e0;
    real _t0702 = 0.1e1;
    vec4 _t0703 = [_t06FF, _t0700, _t0701, _t0702];
    tensor[4,4] _t0704 = [_t06F4, _t06F9, _t06FE, _t0703];
    tensor[4,4][4] _t0705 = {_t06C5, _t06DA, _t06EF, _t0704};
    real _t0706 = -0.1e1;
    real _t0707 = -0.57735026919e0;
    real _t0708 = -0.1e1;
    real _t0709 = 0.1e1;
    vec4 _t070A = [_t0706, _t0707, _t0708, _t0709];
    real _t070B = 0.1e1;
    real _t070C = -0.57735026919e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    vec4 _t070F = [_t070B, _t070C, _t070D, _t070E];
    real _t0710 = 0.e0;
    real _t0711 = -0.57735026919e0;
    real _t0712 = 0.1e1;
    real _t0713 = 0.e0;
    vec4 _t0714 = [_t0710, _t0711, _t0712, _t0713];
    real _t0715 = 0.e0;
    real _t0716 = 0.e0;
    real _t0717 = 0.e0;
    real _t0718 = 0.1e1;
    vec4 _t0719 = [_t0715, _t0716, _t0717, _t0718];
    tensor[4,4] _t071A = [_t070A, _t070F, _t0714, _t0719];
    real _t071B = 0.e0;
    real _t071C = -0.1e1;
    real _t071D = 0.e0;
    real _t071E = 0.e0;
    vec4 _t071F = [_t071B, _t071C, _t071D, _t071E];
    real _t0720 = 0.1e1;
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    vec4 _t0724 = [_t0720, _t0721, _t0722, _t0723];
    real _t0725 = 0.e0;
    real _t0726 = 0.e0;
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    vec4 _t0729 = [_t0725, _t0726, _t0727, _t0728];
    real _t072A = 0.e0;
    real _t072B = 0.e0;
    real _t072C = 0.e0;
    real _t072D = 0.1e1;
    vec4 _t072E = [_t072A, _t072B, _t072C, _t072D];
    tensor[4,4] _t072F = [_t071F, _t0724, _t0729, _t072E];
    real _t0730 = 0.1e1;
    real _t0731 = 0.e0;
    real _t0732 = 0.e0;
    real _t0733 = 0.e0;
    vec4 _t0734 = [_t0730, _t0731, _t0732, _t0733];
    real _t0735 = 0.e0;
    real _t0736 = 0.1e1;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    vec4 _t0739 = [_t0735, _t0736, _t0737, _t0738];
    real _t073A = 0.e0;
    real _t073B = 0.e0;
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    vec4 _t073E = [_t073A, _t073B, _t073C, _t073D];
    real _t073F = 0.e0;
    real _t0740 = 0.e0;
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    vec4 _t0743 = [_t073F, _t0740, _t0741, _t0742];
    tensor[4,4] _t0744 = [_t0734, _t0739, _t073E, _t0743];
    real _t0745 = 0.1e1;
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.e0;
    vec4 _t0749 = [_t0745, _t0746, _t0747, _t0748];
    real _t074A = 0.e0;
    real _t074B = 0.e0;
    real _t074C = 0.1e1;
    real _t074D = 0.e0;
    vec4 _t074E = [_t074A, _t074B, _t074C, _t074D];
    real _t074F = 0.e0;
    real _t0750 = -0.1e1;
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    vec4 _t0753 = [_t074F, _t0750, _t0751, _t0752];
    real _t0754 = 0.e0;
    real _t0755 = 0.e0;
    real _t0756 = 0.e0;
    real _t0757 = 0.1e1;
    vec4 _t0758 = [_t0754, _t0755, _t0756, _t0757];
    tensor[4,4] _t0759 = [_t0749, _t074E, _t0753, _t0758];
    tensor[4,4][4] _t075A = {_t071A, _t072F, _t0744, _t0759};
    real _t075B = -0.1e1;
    real _t075C = -0.1e1;
    real _t075D = 0.57735026919e0;
    real _t075E = 0.1e1;
    vec4 _t075F = [_t075B, _t075C, _t075D, _t075E];
    real _t0760 = 0.1e1;
    real _t0761 = 0.e0;
    real _t0762 = 0.57735026919e0;
    real _t0763 = 0.e0;
    vec4 _t0764 = [_t0760, _t0761, _t0762, _t0763];
    real _t0765 = 0.e0;
    real _t0766 = 0.1e1;
    real _t0767 = 0.57735026919e0;
    real _t0768 = 0.e0;
    vec4 _t0769 = [_t0765, _t0766, _t0767, _t0768];
    real _t076A = 0.e0;
    real _t076B = 0.e0;
    real _t076C = 0.e0;
    real _t076D = 0.1e1;
    vec4 _t076E = [_t076A, _t076B, _t076C, _t076D];
    tensor[4,4] _t076F = [_t075F, _t0764, _t0769, _t076E];
    real _t0770 = 0.e0;
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    vec4 _t0774 = [_t0770, _t0771, _t0772, _t0773];
    real _t0775 = 0.1e1;
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.e0;
    vec4 _t0779 = [_t0775, _t0776, _t0777, _t0778];
    real _t077A = 0.e0;
    real _t077B = 0.1e1;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    vec4 _t077E = [_t077A, _t077B, _t077C, _t077D];
    real _t077F = 0.e0;
    real _t0780 = 0.e0;
    real _t0781 = 0.e0;
    real _t0782 = 0.1e1;
    vec4 _t0783 = [_t077F, _t0780, _t0781, _t0782];
    tensor[4,4] _t0784 = [_t0774, _t0779, _t077E, _t0783];
    real _t0785 = 0.1e1;
    real _t0786 = 0.e0;
    real _t0787 = 0.e0;
    real _t0788 = 0.e0;
    vec4 _t0789 = [_t0785, _t0786, _t0787, _t0788];
    real _t078A = 0.e0;
    real _t078B = 0.e0;
    real _t078C = -0.1e1;
    real _t078D = 0.e0;
    vec4 _t078E = [_t078A, _t078B, _t078C, _t078D];
    real _t078F = 0.e0;
    real _t0790 = 0.1e1;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    vec4 _t0793 = [_t078F, _t0790, _t0791, _t0792];
    real _t0794 = 0.e0;
    real _t0795 = 0.e0;
    real _t0796 = 0.e0;
    real _t0797 = 0.1e1;
    vec4 _t0798 = [_t0794, _t0795, _t0796, _t0797];
    tensor[4,4] _t0799 = [_t0789, _t078E, _t0793, _t0798];
    real _t079A = 0.1e1;
    real _t079B = 0.e0;
    real _t079C = 0.e0;
    real _t079D = 0.e0;
    vec4 _t079E = [_t079A, _t079B, _t079C, _t079D];
    real _t079F = 0.e0;
    real _t07A0 = 0.1e1;
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    vec4 _t07A3 = [_t079F, _t07A0, _t07A1, _t07A2];
    real _t07A4 = 0.e0;
    real _t07A5 = 0.e0;
    real _t07A6 = 0.1e1;
    real _t07A7 = 0.e0;
    vec4 _t07A8 = [_t07A4, _t07A5, _t07A6, _t07A7];
    real _t07A9 = 0.e0;
    real _t07AA = 0.e0;
    real _t07AB = 0.e0;
    real _t07AC = 0.1e1;
    vec4 _t07AD = [_t07A9, _t07AA, _t07AB, _t07AC];
    tensor[4,4] _t07AE = [_t079E, _t07A3, _t07A8, _t07AD];
    tensor[4,4][4] _t07AF = {_t076F, _t0784, _t0799, _t07AE};
    tensor[4,4][4][4] _t07B0 = {_t06B0, _t0705, _t075A, _t07AF};
    real _t07B1 = time04E4[1];
    int _t07B2 = prim $r2i01B7 (_t07B1);
    tensor[4,4][4] _t07B3 = prim $sub01C0<tensor[4,4][4]; %4> (_t07B0, _t07B2);
    real _t07B4 = time04E4[1];
    int _t07B5 = prim $r2i01B7 (_t07B4);
    int[2] _t07B6 = func nextCell404E8 (_t07B5, cellId04E1, mesh04E0);
    int _t07B7 = 1;
    int _t07B8 = prim $sub01C0<int; %2> (_t07B6, _t07B7);
    tensor[4,4] _t07B9 = prim $sub01C0<tensor[4,4]; %4> (_t07B3, _t07B8);
    real _t07BA = time04E4[0];
    vec3 _t07BB = prim *0036<$[3]> (_t07BA, dPos04E3);
    vec3 _t07BC = prim +0017<$[3]> (_t07BB, refPos04E2);
    real _t07BD = _t07BC[0];
    real _t07BE = time04E4[0];
    vec3 _t07BF = prim *0036<$[3]> (_t07BE, dPos04E3);
    vec3 _t07C0 = prim +0017<$[3]> (_t07BF, refPos04E2);
    real _t07C1 = _t07C0[1];
    real _t07C2 = time04E4[0];
    vec3 _t07C3 = prim *0036<$[3]> (_t07C2, dPos04E3);
    vec3 _t07C4 = prim +0017<$[3]> (_t07C3, refPos04E2);
    real _t07C5 = _t07C4[2];
    real _t07C6 = 0.1e1;
    vec4 _t07C7 = [_t07BD, _t07C1, _t07C5, _t07C6];
    vec4 _t07C8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t07B9, _t07C7);
    real _t07C9 = _t07C8[0];
    real _t07CA = 0.1e1;
    real _t07CB = 0.e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.e0;
    vec4 _t07CE = [_t07CA, _t07CB, _t07CC, _t07CD];
    real _t07CF = 0.e0;
    real _t07D0 = 0.1e1;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    vec4 _t07D3 = [_t07CF, _t07D0, _t07D1, _t07D2];
    real _t07D4 = 0.e0;
    real _t07D5 = 0.e0;
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    vec4 _t07D8 = [_t07D4, _t07D5, _t07D6, _t07D7];
    real _t07D9 = 0.971445146547e-16;
    real _t07DA = 0.e0;
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    vec4 _t07DD = [_t07D9, _t07DA, _t07DB, _t07DC];
    tensor[4,4] _t07DE = [_t07CE, _t07D3, _t07D8, _t07DD];
    real _t07DF = 0.57735026919e0;
    real _t07E0 = 0.57735026919e0;
    real _t07E1 = 0.57735026919e0;
    real _t07E2 = -0.57735026919e0;
    vec4 _t07E3 = [_t07DF, _t07E0, _t07E1, _t07E2];
    real _t07E4 = -0.333333333333e0;
    real _t07E5 = 0.666666666667e0;
    real _t07E6 = -0.333333333333e0;
    real _t07E7 = 0.333333333333e0;
    vec4 _t07E8 = [_t07E4, _t07E5, _t07E6, _t07E7];
    real _t07E9 = -0.333333333333e0;
    real _t07EA = -0.333333333333e0;
    real _t07EB = 0.666666666667e0;
    real _t07EC = 0.333333333333e0;
    vec4 _t07ED = [_t07E9, _t07EA, _t07EB, _t07EC];
    real _t07EE = 0.971445146547e-16;
    real _t07EF = 0.e0;
    real _t07F0 = 0.e0;
    real _t07F1 = 0.1e1;
    vec4 _t07F2 = [_t07EE, _t07EF, _t07F0, _t07F1];
    tensor[4,4] _t07F3 = [_t07E3, _t07E8, _t07ED, _t07F2];
    real _t07F4 = -0.333333333333e0;
    real _t07F5 = 0.666666666667e0;
    real _t07F6 = -0.333333333333e0;
    real _t07F7 = 0.333333333333e0;
    vec4 _t07F8 = [_t07F4, _t07F5, _t07F6, _t07F7];
    real _t07F9 = -0.57735026919e0;
    real _t07FA = -0.57735026919e0;
    real _t07FB = -0.57735026919e0;
    real _t07FC = 0.57735026919e0;
    vec4 _t07FD = [_t07F9, _t07FA, _t07FB, _t07FC];
    real _t07FE = -0.333333333333e0;
    real _t07FF = -0.333333333333e0;
    real _t0800 = 0.666666666667e0;
    real _t0801 = 0.333333333333e0;
    vec4 _t0802 = [_t07FE, _t07FF, _t0800, _t0801];
    real _t0803 = 0.971445146547e-16;
    real _t0804 = 0.e0;
    real _t0805 = 0.e0;
    real _t0806 = 0.1e1;
    vec4 _t0807 = [_t0803, _t0804, _t0805, _t0806];
    tensor[4,4] _t0808 = [_t07F8, _t07FD, _t0802, _t0807];
    real _t0809 = -0.333333333333e0;
    real _t080A = 0.666666666667e0;
    real _t080B = -0.333333333333e0;
    real _t080C = 0.333333333333e0;
    vec4 _t080D = [_t0809, _t080A, _t080B, _t080C];
    real _t080E = -0.333333333333e0;
    real _t080F = -0.333333333333e0;
    real _t0810 = 0.666666666667e0;
    real _t0811 = 0.333333333333e0;
    vec4 _t0812 = [_t080E, _t080F, _t0810, _t0811];
    real _t0813 = 0.57735026919e0;
    real _t0814 = 0.57735026919e0;
    real _t0815 = 0.57735026919e0;
    real _t0816 = -0.57735026919e0;
    vec4 _t0817 = [_t0813, _t0814, _t0815, _t0816];
    real _t0818 = 0.971445146547e-16;
    real _t0819 = 0.e0;
    real _t081A = 0.e0;
    real _t081B = 0.1e1;
    vec4 _t081C = [_t0818, _t0819, _t081A, _t081B];
    tensor[4,4] _t081D = [_t080D, _t0812, _t0817, _t081C];
    tensor[4,4][4] _t081E = {_t07DE, _t07F3, _t0808, _t081D};
    real _t081F = 0.57735026919e0;
    real _t0820 = -0.1e1;
    real _t0821 = -0.1e1;
    real _t0822 = 0.1e1;
    vec4 _t0823 = [_t081F, _t0820, _t0821, _t0822];
    real _t0824 = 0.57735026919e0;
    real _t0825 = 0.1e1;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    vec4 _t0828 = [_t0824, _t0825, _t0826, _t0827];
    real _t0829 = 0.57735026919e0;
    real _t082A = 0.e0;
    real _t082B = 0.1e1;
    real _t082C = 0.e0;
    vec4 _t082D = [_t0829, _t082A, _t082B, _t082C];
    real _t082E = 0.e0;
    real _t082F = 0.e0;
    real _t0830 = 0.e0;
    real _t0831 = 0.1e1;
    vec4 _t0832 = [_t082E, _t082F, _t0830, _t0831];
    tensor[4,4] _t0833 = [_t0823, _t0828, _t082D, _t0832];
    real _t0834 = 0.1e1;
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.e0;
    vec4 _t0838 = [_t0834, _t0835, _t0836, _t0837];
    real _t0839 = 0.e0;
    real _t083A = 0.1e1;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    vec4 _t083D = [_t0839, _t083A, _t083B, _t083C];
    real _t083E = 0.e0;
    real _t083F = 0.e0;
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    vec4 _t0842 = [_t083E, _t083F, _t0840, _t0841];
    real _t0843 = 0.e0;
    real _t0844 = 0.e0;
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    vec4 _t0847 = [_t0843, _t0844, _t0845, _t0846];
    tensor[4,4] _t0848 = [_t0838, _t083D, _t0842, _t0847];
    real _t0849 = 0.e0;
    real _t084A = 0.1e1;
    real _t084B = 0.e0;
    real _t084C = 0.e0;
    vec4 _t084D = [_t0849, _t084A, _t084B, _t084C];
    real _t084E = -0.1e1;
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    vec4 _t0852 = [_t084E, _t084F, _t0850, _t0851];
    real _t0853 = 0.e0;
    real _t0854 = 0.e0;
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    vec4 _t0857 = [_t0853, _t0854, _t0855, _t0856];
    real _t0858 = 0.e0;
    real _t0859 = 0.e0;
    real _t085A = 0.e0;
    real _t085B = 0.1e1;
    vec4 _t085C = [_t0858, _t0859, _t085A, _t085B];
    tensor[4,4] _t085D = [_t084D, _t0852, _t0857, _t085C];
    real _t085E = 0.e0;
    real _t085F = 0.1e1;
    real _t0860 = 0.e0;
    real _t0861 = 0.e0;
    vec4 _t0862 = [_t085E, _t085F, _t0860, _t0861];
    real _t0863 = 0.e0;
    real _t0864 = 0.e0;
    real _t0865 = 0.1e1;
    real _t0866 = 0.e0;
    vec4 _t0867 = [_t0863, _t0864, _t0865, _t0866];
    real _t0868 = 0.1e1;
    real _t0869 = 0.e0;
    real _t086A = 0.e0;
    real _t086B = 0.e0;
    vec4 _t086C = [_t0868, _t0869, _t086A, _t086B];
    real _t086D = 0.e0;
    real _t086E = 0.e0;
    real _t086F = 0.e0;
    real _t0870 = 0.1e1;
    vec4 _t0871 = [_t086D, _t086E, _t086F, _t0870];
    tensor[4,4] _t0872 = [_t0862, _t0867, _t086C, _t0871];
    tensor[4,4][4] _t0873 = {_t0833, _t0848, _t085D, _t0872};
    real _t0874 = -0.1e1;
    real _t0875 = -0.57735026919e0;
    real _t0876 = -0.1e1;
    real _t0877 = 0.1e1;
    vec4 _t0878 = [_t0874, _t0875, _t0876, _t0877];
    real _t0879 = 0.1e1;
    real _t087A = -0.57735026919e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    vec4 _t087D = [_t0879, _t087A, _t087B, _t087C];
    real _t087E = 0.e0;
    real _t087F = -0.57735026919e0;
    real _t0880 = 0.1e1;
    real _t0881 = 0.e0;
    vec4 _t0882 = [_t087E, _t087F, _t0880, _t0881];
    real _t0883 = 0.e0;
    real _t0884 = 0.e0;
    real _t0885 = 0.e0;
    real _t0886 = 0.1e1;
    vec4 _t0887 = [_t0883, _t0884, _t0885, _t0886];
    tensor[4,4] _t0888 = [_t0878, _t087D, _t0882, _t0887];
    real _t0889 = 0.e0;
    real _t088A = -0.1e1;
    real _t088B = 0.e0;
    real _t088C = 0.e0;
    vec4 _t088D = [_t0889, _t088A, _t088B, _t088C];
    real _t088E = 0.1e1;
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    vec4 _t0892 = [_t088E, _t088F, _t0890, _t0891];
    real _t0893 = 0.e0;
    real _t0894 = 0.e0;
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    vec4 _t0897 = [_t0893, _t0894, _t0895, _t0896];
    real _t0898 = 0.e0;
    real _t0899 = 0.e0;
    real _t089A = 0.e0;
    real _t089B = 0.1e1;
    vec4 _t089C = [_t0898, _t0899, _t089A, _t089B];
    tensor[4,4] _t089D = [_t088D, _t0892, _t0897, _t089C];
    real _t089E = 0.1e1;
    real _t089F = 0.e0;
    real _t08A0 = 0.e0;
    real _t08A1 = 0.e0;
    vec4 _t08A2 = [_t089E, _t089F, _t08A0, _t08A1];
    real _t08A3 = 0.e0;
    real _t08A4 = 0.1e1;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    vec4 _t08A7 = [_t08A3, _t08A4, _t08A5, _t08A6];
    real _t08A8 = 0.e0;
    real _t08A9 = 0.e0;
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    vec4 _t08AC = [_t08A8, _t08A9, _t08AA, _t08AB];
    real _t08AD = 0.e0;
    real _t08AE = 0.e0;
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    vec4 _t08B1 = [_t08AD, _t08AE, _t08AF, _t08B0];
    tensor[4,4] _t08B2 = [_t08A2, _t08A7, _t08AC, _t08B1];
    real _t08B3 = 0.1e1;
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.e0;
    vec4 _t08B7 = [_t08B3, _t08B4, _t08B5, _t08B6];
    real _t08B8 = 0.e0;
    real _t08B9 = 0.e0;
    real _t08BA = 0.1e1;
    real _t08BB = 0.e0;
    vec4 _t08BC = [_t08B8, _t08B9, _t08BA, _t08BB];
    real _t08BD = 0.e0;
    real _t08BE = -0.1e1;
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    vec4 _t08C1 = [_t08BD, _t08BE, _t08BF, _t08C0];
    real _t08C2 = 0.e0;
    real _t08C3 = 0.e0;
    real _t08C4 = 0.e0;
    real _t08C5 = 0.1e1;
    vec4 _t08C6 = [_t08C2, _t08C3, _t08C4, _t08C5];
    tensor[4,4] _t08C7 = [_t08B7, _t08BC, _t08C1, _t08C6];
    tensor[4,4][4] _t08C8 = {_t0888, _t089D, _t08B2, _t08C7};
    real _t08C9 = -0.1e1;
    real _t08CA = -0.1e1;
    real _t08CB = 0.57735026919e0;
    real _t08CC = 0.1e1;
    vec4 _t08CD = [_t08C9, _t08CA, _t08CB, _t08CC];
    real _t08CE = 0.1e1;
    real _t08CF = 0.e0;
    real _t08D0 = 0.57735026919e0;
    real _t08D1 = 0.e0;
    vec4 _t08D2 = [_t08CE, _t08CF, _t08D0, _t08D1];
    real _t08D3 = 0.e0;
    real _t08D4 = 0.1e1;
    real _t08D5 = 0.57735026919e0;
    real _t08D6 = 0.e0;
    vec4 _t08D7 = [_t08D3, _t08D4, _t08D5, _t08D6];
    real _t08D8 = 0.e0;
    real _t08D9 = 0.e0;
    real _t08DA = 0.e0;
    real _t08DB = 0.1e1;
    vec4 _t08DC = [_t08D8, _t08D9, _t08DA, _t08DB];
    tensor[4,4] _t08DD = [_t08CD, _t08D2, _t08D7, _t08DC];
    real _t08DE = 0.e0;
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    vec4 _t08E2 = [_t08DE, _t08DF, _t08E0, _t08E1];
    real _t08E3 = 0.1e1;
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.e0;
    vec4 _t08E7 = [_t08E3, _t08E4, _t08E5, _t08E6];
    real _t08E8 = 0.e0;
    real _t08E9 = 0.1e1;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    vec4 _t08EC = [_t08E8, _t08E9, _t08EA, _t08EB];
    real _t08ED = 0.e0;
    real _t08EE = 0.e0;
    real _t08EF = 0.e0;
    real _t08F0 = 0.1e1;
    vec4 _t08F1 = [_t08ED, _t08EE, _t08EF, _t08F0];
    tensor[4,4] _t08F2 = [_t08E2, _t08E7, _t08EC, _t08F1];
    real _t08F3 = 0.1e1;
    real _t08F4 = 0.e0;
    real _t08F5 = 0.e0;
    real _t08F6 = 0.e0;
    vec4 _t08F7 = [_t08F3, _t08F4, _t08F5, _t08F6];
    real _t08F8 = 0.e0;
    real _t08F9 = 0.e0;
    real _t08FA = -0.1e1;
    real _t08FB = 0.e0;
    vec4 _t08FC = [_t08F8, _t08F9, _t08FA, _t08FB];
    real _t08FD = 0.e0;
    real _t08FE = 0.1e1;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    vec4 _t0901 = [_t08FD, _t08FE, _t08FF, _t0900];
    real _t0902 = 0.e0;
    real _t0903 = 0.e0;
    real _t0904 = 0.e0;
    real _t0905 = 0.1e1;
    vec4 _t0906 = [_t0902, _t0903, _t0904, _t0905];
    tensor[4,4] _t0907 = [_t08F7, _t08FC, _t0901, _t0906];
    real _t0908 = 0.1e1;
    real _t0909 = 0.e0;
    real _t090A = 0.e0;
    real _t090B = 0.e0;
    vec4 _t090C = [_t0908, _t0909, _t090A, _t090B];
    real _t090D = 0.e0;
    real _t090E = 0.1e1;
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    vec4 _t0911 = [_t090D, _t090E, _t090F, _t0910];
    real _t0912 = 0.e0;
    real _t0913 = 0.e0;
    real _t0914 = 0.1e1;
    real _t0915 = 0.e0;
    vec4 _t0916 = [_t0912, _t0913, _t0914, _t0915];
    real _t0917 = 0.e0;
    real _t0918 = 0.e0;
    real _t0919 = 0.e0;
    real _t091A = 0.1e1;
    vec4 _t091B = [_t0917, _t0918, _t0919, _t091A];
    tensor[4,4] _t091C = [_t090C, _t0911, _t0916, _t091B];
    tensor[4,4][4] _t091D = {_t08DD, _t08F2, _t0907, _t091C};
    tensor[4,4][4][4] _t091E = {_t081E, _t0873, _t08C8, _t091D};
    real _t091F = time04E4[1];
    int _t0920 = prim $r2i01B7 (_t091F);
    tensor[4,4][4] _t0921 = prim $sub01C0<tensor[4,4][4]; %4> (_t091E, _t0920);
    real _t0922 = time04E4[1];
    int _t0923 = prim $r2i01B7 (_t0922);
    int[2] _t0924 = func nextCell404E8 (_t0923, cellId04E1, mesh04E0);
    int _t0925 = 1;
    int _t0926 = prim $sub01C0<int; %2> (_t0924, _t0925);
    tensor[4,4] _t0927 = prim $sub01C0<tensor[4,4]; %4> (_t0921, _t0926);
    real _t0928 = time04E4[0];
    vec3 _t0929 = prim *0036<$[3]> (_t0928, dPos04E3);
    vec3 _t092A = prim +0017<$[3]> (_t0929, refPos04E2);
    real _t092B = _t092A[0];
    real _t092C = time04E4[0];
    vec3 _t092D = prim *0036<$[3]> (_t092C, dPos04E3);
    vec3 _t092E = prim +0017<$[3]> (_t092D, refPos04E2);
    real _t092F = _t092E[1];
    real _t0930 = time04E4[0];
    vec3 _t0931 = prim *0036<$[3]> (_t0930, dPos04E3);
    vec3 _t0932 = prim +0017<$[3]> (_t0931, refPos04E2);
    real _t0933 = _t0932[2];
    real _t0934 = 0.1e1;
    vec4 _t0935 = [_t092B, _t092F, _t0933, _t0934];
    vec4 _t0936 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0927, _t0935);
    real _t0937 = _t0936[1];
    real _t0938 = 0.1e1;
    real _t0939 = 0.e0;
    real _t093A = 0.e0;
    real _t093B = 0.e0;
    vec4 _t093C = [_t0938, _t0939, _t093A, _t093B];
    real _t093D = 0.e0;
    real _t093E = 0.1e1;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    vec4 _t0941 = [_t093D, _t093E, _t093F, _t0940];
    real _t0942 = 0.e0;
    real _t0943 = 0.e0;
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    vec4 _t0946 = [_t0942, _t0943, _t0944, _t0945];
    real _t0947 = 0.971445146547e-16;
    real _t0948 = 0.e0;
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    vec4 _t094B = [_t0947, _t0948, _t0949, _t094A];
    tensor[4,4] _t094C = [_t093C, _t0941, _t0946, _t094B];
    real _t094D = 0.57735026919e0;
    real _t094E = 0.57735026919e0;
    real _t094F = 0.57735026919e0;
    real _t0950 = -0.57735026919e0;
    vec4 _t0951 = [_t094D, _t094E, _t094F, _t0950];
    real _t0952 = -0.333333333333e0;
    real _t0953 = 0.666666666667e0;
    real _t0954 = -0.333333333333e0;
    real _t0955 = 0.333333333333e0;
    vec4 _t0956 = [_t0952, _t0953, _t0954, _t0955];
    real _t0957 = -0.333333333333e0;
    real _t0958 = -0.333333333333e0;
    real _t0959 = 0.666666666667e0;
    real _t095A = 0.333333333333e0;
    vec4 _t095B = [_t0957, _t0958, _t0959, _t095A];
    real _t095C = 0.971445146547e-16;
    real _t095D = 0.e0;
    real _t095E = 0.e0;
    real _t095F = 0.1e1;
    vec4 _t0960 = [_t095C, _t095D, _t095E, _t095F];
    tensor[4,4] _t0961 = [_t0951, _t0956, _t095B, _t0960];
    real _t0962 = -0.333333333333e0;
    real _t0963 = 0.666666666667e0;
    real _t0964 = -0.333333333333e0;
    real _t0965 = 0.333333333333e0;
    vec4 _t0966 = [_t0962, _t0963, _t0964, _t0965];
    real _t0967 = -0.57735026919e0;
    real _t0968 = -0.57735026919e0;
    real _t0969 = -0.57735026919e0;
    real _t096A = 0.57735026919e0;
    vec4 _t096B = [_t0967, _t0968, _t0969, _t096A];
    real _t096C = -0.333333333333e0;
    real _t096D = -0.333333333333e0;
    real _t096E = 0.666666666667e0;
    real _t096F = 0.333333333333e0;
    vec4 _t0970 = [_t096C, _t096D, _t096E, _t096F];
    real _t0971 = 0.971445146547e-16;
    real _t0972 = 0.e0;
    real _t0973 = 0.e0;
    real _t0974 = 0.1e1;
    vec4 _t0975 = [_t0971, _t0972, _t0973, _t0974];
    tensor[4,4] _t0976 = [_t0966, _t096B, _t0970, _t0975];
    real _t0977 = -0.333333333333e0;
    real _t0978 = 0.666666666667e0;
    real _t0979 = -0.333333333333e0;
    real _t097A = 0.333333333333e0;
    vec4 _t097B = [_t0977, _t0978, _t0979, _t097A];
    real _t097C = -0.333333333333e0;
    real _t097D = -0.333333333333e0;
    real _t097E = 0.666666666667e0;
    real _t097F = 0.333333333333e0;
    vec4 _t0980 = [_t097C, _t097D, _t097E, _t097F];
    real _t0981 = 0.57735026919e0;
    real _t0982 = 0.57735026919e0;
    real _t0983 = 0.57735026919e0;
    real _t0984 = -0.57735026919e0;
    vec4 _t0985 = [_t0981, _t0982, _t0983, _t0984];
    real _t0986 = 0.971445146547e-16;
    real _t0987 = 0.e0;
    real _t0988 = 0.e0;
    real _t0989 = 0.1e1;
    vec4 _t098A = [_t0986, _t0987, _t0988, _t0989];
    tensor[4,4] _t098B = [_t097B, _t0980, _t0985, _t098A];
    tensor[4,4][4] _t098C = {_t094C, _t0961, _t0976, _t098B};
    real _t098D = 0.57735026919e0;
    real _t098E = -0.1e1;
    real _t098F = -0.1e1;
    real _t0990 = 0.1e1;
    vec4 _t0991 = [_t098D, _t098E, _t098F, _t0990];
    real _t0992 = 0.57735026919e0;
    real _t0993 = 0.1e1;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    vec4 _t0996 = [_t0992, _t0993, _t0994, _t0995];
    real _t0997 = 0.57735026919e0;
    real _t0998 = 0.e0;
    real _t0999 = 0.1e1;
    real _t099A = 0.e0;
    vec4 _t099B = [_t0997, _t0998, _t0999, _t099A];
    real _t099C = 0.e0;
    real _t099D = 0.e0;
    real _t099E = 0.e0;
    real _t099F = 0.1e1;
    vec4 _t09A0 = [_t099C, _t099D, _t099E, _t099F];
    tensor[4,4] _t09A1 = [_t0991, _t0996, _t099B, _t09A0];
    real _t09A2 = 0.1e1;
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.e0;
    vec4 _t09A6 = [_t09A2, _t09A3, _t09A4, _t09A5];
    real _t09A7 = 0.e0;
    real _t09A8 = 0.1e1;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    vec4 _t09AB = [_t09A7, _t09A8, _t09A9, _t09AA];
    real _t09AC = 0.e0;
    real _t09AD = 0.e0;
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    vec4 _t09B0 = [_t09AC, _t09AD, _t09AE, _t09AF];
    real _t09B1 = 0.e0;
    real _t09B2 = 0.e0;
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    vec4 _t09B5 = [_t09B1, _t09B2, _t09B3, _t09B4];
    tensor[4,4] _t09B6 = [_t09A6, _t09AB, _t09B0, _t09B5];
    real _t09B7 = 0.e0;
    real _t09B8 = 0.1e1;
    real _t09B9 = 0.e0;
    real _t09BA = 0.e0;
    vec4 _t09BB = [_t09B7, _t09B8, _t09B9, _t09BA];
    real _t09BC = -0.1e1;
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    vec4 _t09C0 = [_t09BC, _t09BD, _t09BE, _t09BF];
    real _t09C1 = 0.e0;
    real _t09C2 = 0.e0;
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    vec4 _t09C5 = [_t09C1, _t09C2, _t09C3, _t09C4];
    real _t09C6 = 0.e0;
    real _t09C7 = 0.e0;
    real _t09C8 = 0.e0;
    real _t09C9 = 0.1e1;
    vec4 _t09CA = [_t09C6, _t09C7, _t09C8, _t09C9];
    tensor[4,4] _t09CB = [_t09BB, _t09C0, _t09C5, _t09CA];
    real _t09CC = 0.e0;
    real _t09CD = 0.1e1;
    real _t09CE = 0.e0;
    real _t09CF = 0.e0;
    vec4 _t09D0 = [_t09CC, _t09CD, _t09CE, _t09CF];
    real _t09D1 = 0.e0;
    real _t09D2 = 0.e0;
    real _t09D3 = 0.1e1;
    real _t09D4 = 0.e0;
    vec4 _t09D5 = [_t09D1, _t09D2, _t09D3, _t09D4];
    real _t09D6 = 0.1e1;
    real _t09D7 = 0.e0;
    real _t09D8 = 0.e0;
    real _t09D9 = 0.e0;
    vec4 _t09DA = [_t09D6, _t09D7, _t09D8, _t09D9];
    real _t09DB = 0.e0;
    real _t09DC = 0.e0;
    real _t09DD = 0.e0;
    real _t09DE = 0.1e1;
    vec4 _t09DF = [_t09DB, _t09DC, _t09DD, _t09DE];
    tensor[4,4] _t09E0 = [_t09D0, _t09D5, _t09DA, _t09DF];
    tensor[4,4][4] _t09E1 = {_t09A1, _t09B6, _t09CB, _t09E0};
    real _t09E2 = -0.1e1;
    real _t09E3 = -0.57735026919e0;
    real _t09E4 = -0.1e1;
    real _t09E5 = 0.1e1;
    vec4 _t09E6 = [_t09E2, _t09E3, _t09E4, _t09E5];
    real _t09E7 = 0.1e1;
    real _t09E8 = -0.57735026919e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    vec4 _t09EB = [_t09E7, _t09E8, _t09E9, _t09EA];
    real _t09EC = 0.e0;
    real _t09ED = -0.57735026919e0;
    real _t09EE = 0.1e1;
    real _t09EF = 0.e0;
    vec4 _t09F0 = [_t09EC, _t09ED, _t09EE, _t09EF];
    real _t09F1 = 0.e0;
    real _t09F2 = 0.e0;
    real _t09F3 = 0.e0;
    real _t09F4 = 0.1e1;
    vec4 _t09F5 = [_t09F1, _t09F2, _t09F3, _t09F4];
    tensor[4,4] _t09F6 = [_t09E6, _t09EB, _t09F0, _t09F5];
    real _t09F7 = 0.e0;
    real _t09F8 = -0.1e1;
    real _t09F9 = 0.e0;
    real _t09FA = 0.e0;
    vec4 _t09FB = [_t09F7, _t09F8, _t09F9, _t09FA];
    real _t09FC = 0.1e1;
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    vec4 _t0A00 = [_t09FC, _t09FD, _t09FE, _t09FF];
    real _t0A01 = 0.e0;
    real _t0A02 = 0.e0;
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    vec4 _t0A05 = [_t0A01, _t0A02, _t0A03, _t0A04];
    real _t0A06 = 0.e0;
    real _t0A07 = 0.e0;
    real _t0A08 = 0.e0;
    real _t0A09 = 0.1e1;
    vec4 _t0A0A = [_t0A06, _t0A07, _t0A08, _t0A09];
    tensor[4,4] _t0A0B = [_t09FB, _t0A00, _t0A05, _t0A0A];
    real _t0A0C = 0.1e1;
    real _t0A0D = 0.e0;
    real _t0A0E = 0.e0;
    real _t0A0F = 0.e0;
    vec4 _t0A10 = [_t0A0C, _t0A0D, _t0A0E, _t0A0F];
    real _t0A11 = 0.e0;
    real _t0A12 = 0.1e1;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    vec4 _t0A15 = [_t0A11, _t0A12, _t0A13, _t0A14];
    real _t0A16 = 0.e0;
    real _t0A17 = 0.e0;
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    vec4 _t0A1A = [_t0A16, _t0A17, _t0A18, _t0A19];
    real _t0A1B = 0.e0;
    real _t0A1C = 0.e0;
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    vec4 _t0A1F = [_t0A1B, _t0A1C, _t0A1D, _t0A1E];
    tensor[4,4] _t0A20 = [_t0A10, _t0A15, _t0A1A, _t0A1F];
    real _t0A21 = 0.1e1;
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.e0;
    vec4 _t0A25 = [_t0A21, _t0A22, _t0A23, _t0A24];
    real _t0A26 = 0.e0;
    real _t0A27 = 0.e0;
    real _t0A28 = 0.1e1;
    real _t0A29 = 0.e0;
    vec4 _t0A2A = [_t0A26, _t0A27, _t0A28, _t0A29];
    real _t0A2B = 0.e0;
    real _t0A2C = -0.1e1;
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    vec4 _t0A2F = [_t0A2B, _t0A2C, _t0A2D, _t0A2E];
    real _t0A30 = 0.e0;
    real _t0A31 = 0.e0;
    real _t0A32 = 0.e0;
    real _t0A33 = 0.1e1;
    vec4 _t0A34 = [_t0A30, _t0A31, _t0A32, _t0A33];
    tensor[4,4] _t0A35 = [_t0A25, _t0A2A, _t0A2F, _t0A34];
    tensor[4,4][4] _t0A36 = {_t09F6, _t0A0B, _t0A20, _t0A35};
    real _t0A37 = -0.1e1;
    real _t0A38 = -0.1e1;
    real _t0A39 = 0.57735026919e0;
    real _t0A3A = 0.1e1;
    vec4 _t0A3B = [_t0A37, _t0A38, _t0A39, _t0A3A];
    real _t0A3C = 0.1e1;
    real _t0A3D = 0.e0;
    real _t0A3E = 0.57735026919e0;
    real _t0A3F = 0.e0;
    vec4 _t0A40 = [_t0A3C, _t0A3D, _t0A3E, _t0A3F];
    real _t0A41 = 0.e0;
    real _t0A42 = 0.1e1;
    real _t0A43 = 0.57735026919e0;
    real _t0A44 = 0.e0;
    vec4 _t0A45 = [_t0A41, _t0A42, _t0A43, _t0A44];
    real _t0A46 = 0.e0;
    real _t0A47 = 0.e0;
    real _t0A48 = 0.e0;
    real _t0A49 = 0.1e1;
    vec4 _t0A4A = [_t0A46, _t0A47, _t0A48, _t0A49];
    tensor[4,4] _t0A4B = [_t0A3B, _t0A40, _t0A45, _t0A4A];
    real _t0A4C = 0.e0;
    real _t0A4D = 0.e0;
    real _t0A4E = 0.1e1;
    real _t0A4F = 0.e0;
    vec4 _t0A50 = [_t0A4C, _t0A4D, _t0A4E, _t0A4F];
    real _t0A51 = 0.1e1;
    real _t0A52 = 0.e0;
    real _t0A53 = 0.e0;
    real _t0A54 = 0.e0;
    vec4 _t0A55 = [_t0A51, _t0A52, _t0A53, _t0A54];
    real _t0A56 = 0.e0;
    real _t0A57 = 0.1e1;
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    vec4 _t0A5A = [_t0A56, _t0A57, _t0A58, _t0A59];
    real _t0A5B = 0.e0;
    real _t0A5C = 0.e0;
    real _t0A5D = 0.e0;
    real _t0A5E = 0.1e1;
    vec4 _t0A5F = [_t0A5B, _t0A5C, _t0A5D, _t0A5E];
    tensor[4,4] _t0A60 = [_t0A50, _t0A55, _t0A5A, _t0A5F];
    real _t0A61 = 0.1e1;
    real _t0A62 = 0.e0;
    real _t0A63 = 0.e0;
    real _t0A64 = 0.e0;
    vec4 _t0A65 = [_t0A61, _t0A62, _t0A63, _t0A64];
    real _t0A66 = 0.e0;
    real _t0A67 = 0.e0;
    real _t0A68 = -0.1e1;
    real _t0A69 = 0.e0;
    vec4 _t0A6A = [_t0A66, _t0A67, _t0A68, _t0A69];
    real _t0A6B = 0.e0;
    real _t0A6C = 0.1e1;
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    vec4 _t0A6F = [_t0A6B, _t0A6C, _t0A6D, _t0A6E];
    real _t0A70 = 0.e0;
    real _t0A71 = 0.e0;
    real _t0A72 = 0.e0;
    real _t0A73 = 0.1e1;
    vec4 _t0A74 = [_t0A70, _t0A71, _t0A72, _t0A73];
    tensor[4,4] _t0A75 = [_t0A65, _t0A6A, _t0A6F, _t0A74];
    real _t0A76 = 0.1e1;
    real _t0A77 = 0.e0;
    real _t0A78 = 0.e0;
    real _t0A79 = 0.e0;
    vec4 _t0A7A = [_t0A76, _t0A77, _t0A78, _t0A79];
    real _t0A7B = 0.e0;
    real _t0A7C = 0.1e1;
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    vec4 _t0A7F = [_t0A7B, _t0A7C, _t0A7D, _t0A7E];
    real _t0A80 = 0.e0;
    real _t0A81 = 0.e0;
    real _t0A82 = 0.1e1;
    real _t0A83 = 0.e0;
    vec4 _t0A84 = [_t0A80, _t0A81, _t0A82, _t0A83];
    real _t0A85 = 0.e0;
    real _t0A86 = 0.e0;
    real _t0A87 = 0.e0;
    real _t0A88 = 0.1e1;
    vec4 _t0A89 = [_t0A85, _t0A86, _t0A87, _t0A88];
    tensor[4,4] _t0A8A = [_t0A7A, _t0A7F, _t0A84, _t0A89];
    tensor[4,4][4] _t0A8B = {_t0A4B, _t0A60, _t0A75, _t0A8A};
    tensor[4,4][4][4] _t0A8C = {_t098C, _t09E1, _t0A36, _t0A8B};
    real _t0A8D = time04E4[1];
    int _t0A8E = prim $r2i01B7 (_t0A8D);
    tensor[4,4][4] _t0A8F = prim $sub01C0<tensor[4,4][4]; %4> (_t0A8C, _t0A8E);
    real _t0A90 = time04E4[1];
    int _t0A91 = prim $r2i01B7 (_t0A90);
    int[2] _t0A92 = func nextCell404E8 (_t0A91, cellId04E1, mesh04E0);
    int _t0A93 = 1;
    int _t0A94 = prim $sub01C0<int; %2> (_t0A92, _t0A93);
    tensor[4,4] _t0A95 = prim $sub01C0<tensor[4,4]; %4> (_t0A8F, _t0A94);
    real _t0A96 = time04E4[0];
    vec3 _t0A97 = prim *0036<$[3]> (_t0A96, dPos04E3);
    vec3 _t0A98 = prim +0017<$[3]> (_t0A97, refPos04E2);
    real _t0A99 = _t0A98[0];
    real _t0A9A = time04E4[0];
    vec3 _t0A9B = prim *0036<$[3]> (_t0A9A, dPos04E3);
    vec3 _t0A9C = prim +0017<$[3]> (_t0A9B, refPos04E2);
    real _t0A9D = _t0A9C[1];
    real _t0A9E = time04E4[0];
    vec3 _t0A9F = prim *0036<$[3]> (_t0A9E, dPos04E3);
    vec3 _t0AA0 = prim +0017<$[3]> (_t0A9F, refPos04E2);
    real _t0AA1 = _t0AA0[2];
    real _t0AA2 = 0.1e1;
    vec4 _t0AA3 = [_t0A99, _t0A9D, _t0AA1, _t0AA2];
    vec4 _t0AA4 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A95, _t0AA3);
    real _t0AA5 = _t0AA4[2];
    vec3 _t0AA6 = [_t07C9, _t0937, _t0AA5];
    real _t0AA7 = time04E4[1];
    int _t0AA8 = prim $r2i01B7 (_t0AA7);
    int[2] _t0AA9 = func nextCell404E8 (_t0AA8, cellId04E1, mesh04E0);
    int _t0AAA = 1;
    int _t0AAB = prim $sub01C0<int; %2> (_t0AA9, _t0AAA);
    Femdata: MeshPos _t0AAC = extractFemItemN((mesh04E0, _t065B, _t0AA6, _t0AAB),RefBuild(Mesh),);
    return _t0AAC;
  } else {
    real _t0AAD = time04E4[0];
    vec3 _t0AAE = prim *0036<$[3]> (_t0AAD, dPos04E3);
    vec3 _t0AAF = prim +0017<$[3]> (_t0AAE, refPos04E2);
    Femdata: MeshPos _t0AB0 = extractFemItemN((mesh04E0, _t0AAF),InvalidBuildBoundary(MeshPos),);
    return _t0AB0;
  }
}
function int[2]#8 nextCell404E8 (int faceIdx0AB1, int cell0AB2, Femdata: Mesh mesh0AB3)
{
  int _t0AB4 = -1;
  bool _t0AB5 = prim ==0082 (faceIdx0AB1, _t0AB4);
  if _t0AB5 {
    int _t0AB6 = -1;
    int _t0AB7 = -1;
    int[2] _t0AB8 = {_t0AB6, _t0AB7};
    return _t0AB8;
  } else {
    int _t0AB9 = 8;
    int _t0ABA = prim *0033 (cell0AB2, _t0AB9);
    int _t0ABB = 2;
    int _t0ABC = prim *0033 (faceIdx0AB1, _t0ABB);
    int _t0ABD = prim +0015 (_t0ABA, _t0ABC);
    int[2] _t0ABE = extractFemItemN((mesh0AB3, _t0ABD),CellFaceCell(Mesh),);
    return _t0ABE;
  }
}
function vec2#2 _exit1099 (vec3 refPos0AC0, vec3 dPos0AC1, int i109A)
{
  real time109B = +inf;
  int face109C = -1;
  real faceTime109D = -inf;
  string _t109E = "\ntest :";
  real _t109F = 0.57735026919e0;
  real _t10A0 = 0.57735026919e0;
  real _t10A1 = 0.57735026919e0;
  real _t10A2 = 0.57735026919e0;
  vec3 _t10A3 = [_t10A0, _t10A1, _t10A2];
  real _t10A4 = prim •00CE<$[3]; $[3]; $[]> (_t10A3, refPos0AC0);
  real _t10A5 = prim -0026<$[]> (_t109F, _t10A4);
  real _t10A6 = 0.57735026919e0;
  real _t10A7 = 0.57735026919e0;
  real _t10A8 = 0.57735026919e0;
  vec3 _t10A9 = [_t10A6, _t10A7, _t10A8];
  real _t10AA = prim •00CE<$[3]; $[3]; $[]> (_t10A9, dPos0AC1);
  real _t10AB = prim /0055 (_t10A5, _t10AA);
  string _t10AC = " test2: ";
  real _t10AD = 0.57735026919e0;
  real _t10AE = 0.57735026919e0;
  real _t10AF = 0.57735026919e0;
  vec3 _t10B0 = [_t10AD, _t10AE, _t10AF];
  real _t10B1 = prim •00CE<$[3]; $[3]; $[]> (_t10B0, dPos0AC1);
  string _t10B2 = " insideTest: ";
  real _t10B3 = 0.1e1;
  real _t10B4 = 0.1e-7;
  real _t10B5 = prim +0017<$[]> (_t10B3, _t10B4);
  real _t10B6 = 0.1e1;
  real _t10B7 = 0.1e1;
  real _t10B8 = 0.1e1;
  vec3 _t10B9 = [_t10B6, _t10B7, _t10B8];
  real _t10BA = 0.57735026919e0;
  real _t10BB = 0.57735026919e0;
  real _t10BC = 0.57735026919e0;
  real _t10BD = 0.57735026919e0;
  vec3 _t10BE = [_t10BB, _t10BC, _t10BD];
  real _t10BF = prim •00CE<$[3]; $[3]; $[]> (_t10BE, refPos0AC0);
  real _t10C0 = prim -0026<$[]> (_t10BA, _t10BF);
  real _t10C1 = 0.57735026919e0;
  real _t10C2 = 0.57735026919e0;
  real _t10C3 = 0.57735026919e0;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, dPos0AC1);
  real _t10C6 = prim /0055 (_t10C0, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0AC1, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0AC0, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10B9, _t10C8);
  bool _t10CA = prim >0080 (_t10B5, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.57735026919e0;
  real _t10D0 = 0.57735026919e0;
  real _t10D1 = 0.57735026919e0;
  real _t10D2 = 0.57735026919e0;
  vec3 _t10D3 = [_t10D0, _t10D1, _t10D2];
  real _t10D4 = prim •00CE<$[3]; $[3]; $[]> (_t10D3, refPos0AC0);
  real _t10D5 = prim -0026<$[]> (_t10CF, _t10D4);
  real _t10D6 = 0.57735026919e0;
  real _t10D7 = 0.57735026919e0;
  real _t10D8 = 0.57735026919e0;
  vec3 _t10D9 = [_t10D6, _t10D7, _t10D8];
  real _t10DA = prim •00CE<$[3]; $[3]; $[]> (_t10D9, dPos0AC1);
  real _t10DB = prim /0055 (_t10D5, _t10DA);
  vec3 _t10DC = prim *0038<$[3]> (dPos0AC1, _t10DB);
  vec3 _t10DD = prim +0017<$[3]> (refPos0AC0, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (_t10CE, _t10DD);
  real _t10DF = _t10DE[0];
  real _t10E0 = -0.e0;
  bool _t10E1 = prim >0080 (_t10DF, _t10E0);
  real _t10E2 = 0.1e-7;
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  vec3 _t10E5 = [_t10E2, _t10E3, _t10E4];
  real _t10E6 = 0.57735026919e0;
  real _t10E7 = 0.57735026919e0;
  real _t10E8 = 0.57735026919e0;
  real _t10E9 = 0.57735026919e0;
  vec3 _t10EA = [_t10E7, _t10E8, _t10E9];
  real _t10EB = prim •00CE<$[3]; $[3]; $[]> (_t10EA, refPos0AC0);
  real _t10EC = prim -0026<$[]> (_t10E6, _t10EB);
  real _t10ED = 0.57735026919e0;
  real _t10EE = 0.57735026919e0;
  real _t10EF = 0.57735026919e0;
  vec3 _t10F0 = [_t10ED, _t10EE, _t10EF];
  real _t10F1 = prim •00CE<$[3]; $[3]; $[]> (_t10F0, dPos0AC1);
  real _t10F2 = prim /0055 (_t10EC, _t10F1);
  vec3 _t10F3 = prim *0038<$[3]> (dPos0AC1, _t10F2);
  vec3 _t10F4 = prim +0017<$[3]> (refPos0AC0, _t10F3);
  vec3 _t10F5 = prim +0017<$[3]> (_t10E5, _t10F4);
  real _t10F6 = _t10F5[1];
  real _t10F7 = -0.e0;
  bool _t10F8 = prim >0080 (_t10F6, _t10F7);
  real _t10F9 = 0.1e-7;
  real _t10FA = 0.1e-7;
  real _t10FB = 0.1e-7;
  vec3 _t10FC = [_t10F9, _t10FA, _t10FB];
  real _t10FD = 0.57735026919e0;
  real _t10FE = 0.57735026919e0;
  real _t10FF = 0.57735026919e0;
  real _t1100 = 0.57735026919e0;
  vec3 _t1101 = [_t10FE, _t10FF, _t1100];
  real _t1102 = prim •00CE<$[3]; $[3]; $[]> (_t1101, refPos0AC0);
  real _t1103 = prim -0026<$[]> (_t10FD, _t1102);
  real _t1104 = 0.57735026919e0;
  real _t1105 = 0.57735026919e0;
  real _t1106 = 0.57735026919e0;
  vec3 _t1107 = [_t1104, _t1105, _t1106];
  real _t1108 = prim •00CE<$[3]; $[3]; $[]> (_t1107, dPos0AC1);
  real _t1109 = prim /0055 (_t1103, _t1108);
  vec3 _t110A = prim *0038<$[3]> (dPos0AC1, _t1109);
  vec3 _t110B = prim +0017<$[3]> (refPos0AC0, _t110A);
  vec3 _t110C = prim +0017<$[3]> (_t10FC, _t110B);
  real _t110D = _t110C[2];
  real _t110E = -0.e0;
  bool _t110F = prim >0080 (_t110D, _t110E);
  bool _t1110 = prim $and01C4 (_t10F8, _t110F);
  bool _t1111 = prim $and01C4 (_t10E1, _t1110);
  bool _t1112 = prim $and01C4 (_t10CA, _t1111);
  string _t1113 = " dist: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  real _t1117 = 0.57735026919e0;
  vec3 _t1118 = [_t1115, _t1116, _t1117];
  real _t1119 = prim •00CE<$[3]; $[3]; $[]> (_t1118, refPos0AC0);
  real _t111A = prim -0026<$[]> (_t1114, _t1119);
  real _t111B = prim |()|00B5<$[]> (_t111A);
  string _t111C = "signed dist: ";
  real _t111D = 0.57735026919e0;
  real _t111E = 0.57735026919e0;
  real _t111F = 0.57735026919e0;
  real _t1120 = 0.57735026919e0;
  vec3 _t1121 = [_t111E, _t111F, _t1120];
  real _t1122 = prim •00CE<$[3]; $[3]; $[]> (_t1121, refPos0AC0);
  real _t1123 = prim -0026<$[]> (_t111D, _t1122);
  string _t1124 = " face: ";
  int _t1125 = 0;
  string _t1126 = " place: ";
  real _t1127 = 0.57735026919e0;
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, refPos0AC0);
  real _t112D = prim -0026<$[]> (_t1127, _t112C);
  real _t112E = 0.57735026919e0;
  real _t112F = 0.57735026919e0;
  real _t1130 = 0.57735026919e0;
  vec3 _t1131 = [_t112E, _t112F, _t1130];
  real _t1132 = prim •00CE<$[3]; $[3]; $[]> (_t1131, dPos0AC1);
  real _t1133 = prim /0055 (_t112D, _t1132);
  vec3 _t1134 = prim *0038<$[3]> (dPos0AC1, _t1133);
  vec3 _t1135 = prim +0017<$[3]> (refPos0AC0, _t1134);
  string _t1136 = " error: ";
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  real _t113A = 0.57735026919e0;
  vec3 _t113B = [_t1138, _t1139, _t113A];
  real _t113C = 0.57735026919e0;
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, refPos0AC0);
  real _t1142 = prim -0026<$[]> (_t113C, _t1141);
  real _t1143 = 0.57735026919e0;
  real _t1144 = 0.57735026919e0;
  real _t1145 = 0.57735026919e0;
  vec3 _t1146 = [_t1143, _t1144, _t1145];
  real _t1147 = prim •00CE<$[3]; $[3]; $[]> (_t1146, dPos0AC1);
  real _t1148 = prim /0055 (_t1142, _t1147);
  vec3 _t1149 = prim *0038<$[3]> (dPos0AC1, _t1148);
  vec3 _t114A = prim +0017<$[3]> (refPos0AC0, _t1149);
  real _t114B = prim •00CE<$[3]; $[3]; $[]> (_t113B, _t114A);
  real _t114C = prim -0026<$[]> (_t1137, _t114B);
  real _t114D = prim |()|00B5<$[]> (_t114C);
  string _t114E = " offset :";
  string _t114F = " dp: ";
  string _t1150 = " otherPossibleTime: ";
  string _t1151 = "\n";
  string _t1152 = "\n original face: ";
  string _t1153 = " ";
  print (_t109E, _t10AB, _t10AC, _t10B1, _t10B2, _t1112, _t1113, _t111B, _t111C, _t1123, _t1124, _t1125, _t1126, _t1135, _t1136, _t114D, _t114E, refPos0AC0, _t114F, dPos0AC1, _t1150, faceTime109D, _t1151, _t1152, i109A, _t1153);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  real _t1157 = 0.57735026919e0;
  vec3 _t1158 = [_t1155, _t1156, _t1157];
  real _t1159 = prim •00CE<$[3]; $[3]; $[]> (_t1158, refPos0AC0);
  real _t115A = prim -0026<$[]> (_t1154, _t1159);
  real _t115B = 0.57735026919e0;
  real _t115C = 0.57735026919e0;
  real _t115D = 0.57735026919e0;
  vec3 _t115E = [_t115B, _t115C, _t115D];
  real _t115F = prim •00CE<$[3]; $[3]; $[]> (_t115E, dPos0AC1);
  real _t1160 = prim /0055 (_t115A, _t115F);
  real _t1161 = -0.1e-7;
  bool _t1162 = prim >=007E (_t1160, _t1161);
  real _t1163 = 0.57735026919e0;
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  vec3 _t1167 = [_t1164, _t1165, _t1166];
  real _t1168 = prim •00CE<$[3]; $[3]; $[]> (_t1167, refPos0AC0);
  real _t1169 = prim -0026<$[]> (_t1163, _t1168);
  real _t116A = 0.57735026919e0;
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  vec3 _t116D = [_t116A, _t116B, _t116C];
  real _t116E = prim •00CE<$[3]; $[3]; $[]> (_t116D, dPos0AC1);
  real _t116F = prim /0055 (_t1169, _t116E);
  bool _t1170 = prim >0080 (time109B, _t116F);
  real _t1171 = 0.57735026919e0;
  real _t1172 = 0.57735026919e0;
  real _t1173 = 0.57735026919e0;
  vec3 _t1174 = [_t1171, _t1172, _t1173];
  real _t1175 = prim •00CE<$[3]; $[3]; $[]> (_t1174, dPos0AC1);
  real _t1176 = prim |()|00B5<$[]> (_t1175);
  real _t1177 = 0.1e-7;
  bool _t1178 = prim >=007E (_t1176, _t1177);
  bool _t1179 = prim $and01C4 (_t1170, _t1178);
  bool _t117A = prim $and01C4 (_t1162, _t1179);
  if _t117A {
    int _t117B = 0;
    bool _t117C = prim !=0086 (i109A, _t117B);
    if _t117C {
      string _t117D = "Saving at this face!";
      real _t117E = 0.57735026919e0;
      real _t117F = 0.57735026919e0;
      real _t1180 = 0.57735026919e0;
      real _t1181 = 0.57735026919e0;
      vec3 _t1182 = [_t117F, _t1180, _t1181];
      real _t1183 = prim •00CE<$[3]; $[3]; $[]> (_t1182, refPos0AC0);
      real _t1184 = prim -0026<$[]> (_t117E, _t1183);
      real _t1185 = 0.57735026919e0;
      real _t1186 = 0.57735026919e0;
      real _t1187 = 0.57735026919e0;
      vec3 _t1188 = [_t1185, _t1186, _t1187];
      real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, dPos0AC1);
      real _t118A = prim /0055 (_t1184, _t1189);
      real _t118B = 0.57735026919e0;
      real _t118C = 0.57735026919e0;
      real _t118D = 0.57735026919e0;
      real _t118E = 0.57735026919e0;
      vec3 _t118F = [_t118C, _t118D, _t118E];
      real _t1190 = prim •00CE<$[3]; $[3]; $[]> (_t118F, refPos0AC0);
      real _t1191 = prim -0026<$[]> (_t118B, _t1190);
      real _t1192 = 0.57735026919e0;
      real _t1193 = 0.57735026919e0;
      real _t1194 = 0.57735026919e0;
      vec3 _t1195 = [_t1192, _t1193, _t1194];
      real _t1196 = prim •00CE<$[3]; $[3]; $[]> (_t1195, dPos0AC1);
      real _t1197 = prim /0055 (_t1191, _t1196);
      bool _t1198 = prim >0080 (time109B, _t1197);
      string _t1199 = "\n";
      print (_t117D, _t118A, _t1198, _t1199);
      real _t119A = 0.57735026919e0;
      real _t119B = 0.57735026919e0;
      real _t119C = 0.57735026919e0;
      real _t119D = 0.57735026919e0;
      vec3 _t119E = [_t119B, _t119C, _t119D];
      real _t119F = prim •00CE<$[3]; $[3]; $[]> (_t119E, refPos0AC0);
      real _t11A0 = prim -0026<$[]> (_t119A, _t119F);
      real _t11A1 = 0.57735026919e0;
      real _t11A2 = 0.57735026919e0;
      real _t11A3 = 0.57735026919e0;
      vec3 _t11A4 = [_t11A1, _t11A2, _t11A3];
      real _t11A5 = prim •00CE<$[3]; $[3]; $[]> (_t11A4, dPos0AC1);
      time109B = prim /0055 (_t11A0, _t11A5);
      face109C = 0;
    } else {
      real _t11A6 = 0.57735026919e0;
      real _t11A7 = 0.57735026919e0;
      real _t11A8 = 0.57735026919e0;
      real _t11A9 = 0.57735026919e0;
      vec3 _t11AA = [_t11A7, _t11A8, _t11A9];
      real _t11AB = prim •00CE<$[3]; $[3]; $[]> (_t11AA, refPos0AC0);
      real _t11AC = prim -0026<$[]> (_t11A6, _t11AB);
      real _t11AD = 0.57735026919e0;
      real _t11AE = 0.57735026919e0;
      real _t11AF = 0.57735026919e0;
      vec3 _t11B0 = [_t11AD, _t11AE, _t11AF];
      real _t11B1 = prim •00CE<$[3]; $[3]; $[]> (_t11B0, dPos0AC1);
      faceTime109D = prim /0055 (_t11AC, _t11B1);
      string _t11B2 = "Saving backup time: ";
      string _t11B3 = "\n";
      print (_t11B2, faceTime109D, _t11B3);
    }
  }
  string _t11B4 = "\ntest :";
  real _t11B5 = 0.e0;
  real _t11B6 = -0.1e1;
  real _t11B7 = 0.e0;
  real _t11B8 = 0.e0;
  vec3 _t11B9 = [_t11B6, _t11B7, _t11B8];
  real _t11BA = prim •00CE<$[3]; $[3]; $[]> (_t11B9, refPos0AC0);
  real _t11BB = prim -0026<$[]> (_t11B5, _t11BA);
  real _t11BC = -0.1e1;
  real _t11BD = 0.e0;
  real _t11BE = 0.e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, dPos0AC1);
  real _t11C1 = prim /0055 (_t11BB, _t11C0);
  string _t11C2 = " test2: ";
  real _t11C3 = -0.1e1;
  real _t11C4 = 0.e0;
  real _t11C5 = 0.e0;
  vec3 _t11C6 = [_t11C3, _t11C4, _t11C5];
  real _t11C7 = prim •00CE<$[3]; $[3]; $[]> (_t11C6, dPos0AC1);
  string _t11C8 = " insideTest: ";
  real _t11C9 = 0.1e1;
  real _t11CA = 0.1e-7;
  real _t11CB = prim +0017<$[]> (_t11C9, _t11CA);
  real _t11CC = 0.1e1;
  real _t11CD = 0.1e1;
  real _t11CE = 0.1e1;
  vec3 _t11CF = [_t11CC, _t11CD, _t11CE];
  real _t11D0 = 0.e0;
  real _t11D1 = -0.1e1;
  real _t11D2 = 0.e0;
  real _t11D3 = 0.e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, refPos0AC0);
  real _t11D6 = prim -0026<$[]> (_t11D0, _t11D5);
  real _t11D7 = -0.1e1;
  real _t11D8 = 0.e0;
  real _t11D9 = 0.e0;
  vec3 _t11DA = [_t11D7, _t11D8, _t11D9];
  real _t11DB = prim •00CE<$[3]; $[3]; $[]> (_t11DA, dPos0AC1);
  real _t11DC = prim /0055 (_t11D6, _t11DB);
  vec3 _t11DD = prim *0038<$[3]> (dPos0AC1, _t11DC);
  vec3 _t11DE = prim +0017<$[3]> (refPos0AC0, _t11DD);
  real _t11DF = prim •00CE<$[3]; $[3]; $[]> (_t11CF, _t11DE);
  bool _t11E0 = prim >0080 (_t11CB, _t11DF);
  real _t11E1 = 0.1e-7;
  real _t11E2 = 0.1e-7;
  real _t11E3 = 0.1e-7;
  vec3 _t11E4 = [_t11E1, _t11E2, _t11E3];
  real _t11E5 = 0.e0;
  real _t11E6 = -0.1e1;
  real _t11E7 = 0.e0;
  real _t11E8 = 0.e0;
  vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
  real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0AC0);
  real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
  real _t11EC = -0.1e1;
  real _t11ED = 0.e0;
  real _t11EE = 0.e0;
  vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
  real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0AC1);
  real _t11F1 = prim /0055 (_t11EB, _t11F0);
  vec3 _t11F2 = prim *0038<$[3]> (dPos0AC1, _t11F1);
  vec3 _t11F3 = prim +0017<$[3]> (refPos0AC0, _t11F2);
  vec3 _t11F4 = prim +0017<$[3]> (_t11E4, _t11F3);
  real _t11F5 = _t11F4[0];
  real _t11F6 = -0.e0;
  bool _t11F7 = prim >0080 (_t11F5, _t11F6);
  real _t11F8 = 0.1e-7;
  real _t11F9 = 0.1e-7;
  real _t11FA = 0.1e-7;
  vec3 _t11FB = [_t11F8, _t11F9, _t11FA];
  real _t11FC = 0.e0;
  real _t11FD = -0.1e1;
  real _t11FE = 0.e0;
  real _t11FF = 0.e0;
  vec3 _t1200 = [_t11FD, _t11FE, _t11FF];
  real _t1201 = prim •00CE<$[3]; $[3]; $[]> (_t1200, refPos0AC0);
  real _t1202 = prim -0026<$[]> (_t11FC, _t1201);
  real _t1203 = -0.1e1;
  real _t1204 = 0.e0;
  real _t1205 = 0.e0;
  vec3 _t1206 = [_t1203, _t1204, _t1205];
  real _t1207 = prim •00CE<$[3]; $[3]; $[]> (_t1206, dPos0AC1);
  real _t1208 = prim /0055 (_t1202, _t1207);
  vec3 _t1209 = prim *0038<$[3]> (dPos0AC1, _t1208);
  vec3 _t120A = prim +0017<$[3]> (refPos0AC0, _t1209);
  vec3 _t120B = prim +0017<$[3]> (_t11FB, _t120A);
  real _t120C = _t120B[1];
  real _t120D = -0.e0;
  bool _t120E = prim >0080 (_t120C, _t120D);
  real _t120F = 0.1e-7;
  real _t1210 = 0.1e-7;
  real _t1211 = 0.1e-7;
  vec3 _t1212 = [_t120F, _t1210, _t1211];
  real _t1213 = 0.e0;
  real _t1214 = -0.1e1;
  real _t1215 = 0.e0;
  real _t1216 = 0.e0;
  vec3 _t1217 = [_t1214, _t1215, _t1216];
  real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, refPos0AC0);
  real _t1219 = prim -0026<$[]> (_t1213, _t1218);
  real _t121A = -0.1e1;
  real _t121B = 0.e0;
  real _t121C = 0.e0;
  vec3 _t121D = [_t121A, _t121B, _t121C];
  real _t121E = prim •00CE<$[3]; $[3]; $[]> (_t121D, dPos0AC1);
  real _t121F = prim /0055 (_t1219, _t121E);
  vec3 _t1220 = prim *0038<$[3]> (dPos0AC1, _t121F);
  vec3 _t1221 = prim +0017<$[3]> (refPos0AC0, _t1220);
  vec3 _t1222 = prim +0017<$[3]> (_t1212, _t1221);
  real _t1223 = _t1222[2];
  real _t1224 = -0.e0;
  bool _t1225 = prim >0080 (_t1223, _t1224);
  bool _t1226 = prim $and01C4 (_t120E, _t1225);
  bool _t1227 = prim $and01C4 (_t11F7, _t1226);
  bool _t1228 = prim $and01C4 (_t11E0, _t1227);
  string _t1229 = " dist: ";
  real _t122A = 0.e0;
  real _t122B = -0.1e1;
  real _t122C = 0.e0;
  real _t122D = 0.e0;
  vec3 _t122E = [_t122B, _t122C, _t122D];
  real _t122F = prim •00CE<$[3]; $[3]; $[]> (_t122E, refPos0AC0);
  real _t1230 = prim -0026<$[]> (_t122A, _t122F);
  real _t1231 = prim |()|00B5<$[]> (_t1230);
  string _t1232 = "signed dist: ";
  real _t1233 = 0.e0;
  real _t1234 = -0.1e1;
  real _t1235 = 0.e0;
  real _t1236 = 0.e0;
  vec3 _t1237 = [_t1234, _t1235, _t1236];
  real _t1238 = prim •00CE<$[3]; $[3]; $[]> (_t1237, refPos0AC0);
  real _t1239 = prim -0026<$[]> (_t1233, _t1238);
  string _t123A = " face: ";
  int _t123B = 1;
  string _t123C = " place: ";
  real _t123D = 0.e0;
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, refPos0AC0);
  real _t1243 = prim -0026<$[]> (_t123D, _t1242);
  real _t1244 = -0.1e1;
  real _t1245 = 0.e0;
  real _t1246 = 0.e0;
  vec3 _t1247 = [_t1244, _t1245, _t1246];
  real _t1248 = prim •00CE<$[3]; $[3]; $[]> (_t1247, dPos0AC1);
  real _t1249 = prim /0055 (_t1243, _t1248);
  vec3 _t124A = prim *0038<$[3]> (dPos0AC1, _t1249);
  vec3 _t124B = prim +0017<$[3]> (refPos0AC0, _t124A);
  string _t124C = " error: ";
  real _t124D = 0.e0;
  real _t124E = -0.1e1;
  real _t124F = 0.e0;
  real _t1250 = 0.e0;
  vec3 _t1251 = [_t124E, _t124F, _t1250];
  real _t1252 = 0.e0;
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, refPos0AC0);
  real _t1258 = prim -0026<$[]> (_t1252, _t1257);
  real _t1259 = -0.1e1;
  real _t125A = 0.e0;
  real _t125B = 0.e0;
  vec3 _t125C = [_t1259, _t125A, _t125B];
  real _t125D = prim •00CE<$[3]; $[3]; $[]> (_t125C, dPos0AC1);
  real _t125E = prim /0055 (_t1258, _t125D);
  vec3 _t125F = prim *0038<$[3]> (dPos0AC1, _t125E);
  vec3 _t1260 = prim +0017<$[3]> (refPos0AC0, _t125F);
  real _t1261 = prim •00CE<$[3]; $[3]; $[]> (_t1251, _t1260);
  real _t1262 = prim -0026<$[]> (_t124D, _t1261);
  real _t1263 = prim |()|00B5<$[]> (_t1262);
  string _t1264 = " offset :";
  string _t1265 = " dp: ";
  string _t1266 = " otherPossibleTime: ";
  string _t1267 = "\n";
  string _t1268 = "\n original face: ";
  string _t1269 = " ";
  print (_t11B4, _t11C1, _t11C2, _t11C7, _t11C8, _t1228, _t1229, _t1231, _t1232, _t1239, _t123A, _t123B, _t123C, _t124B, _t124C, _t1263, _t1264, refPos0AC0, _t1265, dPos0AC1, _t1266, faceTime109D, _t1267, _t1268, i109A, _t1269);
  real _t126A = 0.e0;
  real _t126B = -0.1e1;
  real _t126C = 0.e0;
  real _t126D = 0.e0;
  vec3 _t126E = [_t126B, _t126C, _t126D];
  real _t126F = prim •00CE<$[3]; $[3]; $[]> (_t126E, refPos0AC0);
  real _t1270 = prim -0026<$[]> (_t126A, _t126F);
  real _t1271 = -0.1e1;
  real _t1272 = 0.e0;
  real _t1273 = 0.e0;
  vec3 _t1274 = [_t1271, _t1272, _t1273];
  real _t1275 = prim •00CE<$[3]; $[3]; $[]> (_t1274, dPos0AC1);
  real _t1276 = prim /0055 (_t1270, _t1275);
  real _t1277 = -0.1e-7;
  bool _t1278 = prim >=007E (_t1276, _t1277);
  real _t1279 = 0.e0;
  real _t127A = -0.1e1;
  real _t127B = 0.e0;
  real _t127C = 0.e0;
  vec3 _t127D = [_t127A, _t127B, _t127C];
  real _t127E = prim •00CE<$[3]; $[3]; $[]> (_t127D, refPos0AC0);
  real _t127F = prim -0026<$[]> (_t1279, _t127E);
  real _t1280 = -0.1e1;
  real _t1281 = 0.e0;
  real _t1282 = 0.e0;
  vec3 _t1283 = [_t1280, _t1281, _t1282];
  real _t1284 = prim •00CE<$[3]; $[3]; $[]> (_t1283, dPos0AC1);
  real _t1285 = prim /0055 (_t127F, _t1284);
  bool _t1286 = prim >0080 (time109B, _t1285);
  real _t1287 = -0.1e1;
  real _t1288 = 0.e0;
  real _t1289 = 0.e0;
  vec3 _t128A = [_t1287, _t1288, _t1289];
  real _t128B = prim •00CE<$[3]; $[3]; $[]> (_t128A, dPos0AC1);
  real _t128C = prim |()|00B5<$[]> (_t128B);
  real _t128D = 0.1e-7;
  bool _t128E = prim >=007E (_t128C, _t128D);
  bool _t128F = prim $and01C4 (_t1286, _t128E);
  bool _t1290 = prim $and01C4 (_t1278, _t128F);
  if _t1290 {
    int _t1291 = 1;
    bool _t1292 = prim !=0086 (i109A, _t1291);
    if _t1292 {
      string _t1293 = "Saving at this face!";
      real _t1294 = 0.e0;
      real _t1295 = -0.1e1;
      real _t1296 = 0.e0;
      real _t1297 = 0.e0;
      vec3 _t1298 = [_t1295, _t1296, _t1297];
      real _t1299 = prim •00CE<$[3]; $[3]; $[]> (_t1298, refPos0AC0);
      real _t129A = prim -0026<$[]> (_t1294, _t1299);
      real _t129B = -0.1e1;
      real _t129C = 0.e0;
      real _t129D = 0.e0;
      vec3 _t129E = [_t129B, _t129C, _t129D];
      real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, dPos0AC1);
      real _t12A0 = prim /0055 (_t129A, _t129F);
      real _t12A1 = 0.e0;
      real _t12A2 = -0.1e1;
      real _t12A3 = 0.e0;
      real _t12A4 = 0.e0;
      vec3 _t12A5 = [_t12A2, _t12A3, _t12A4];
      real _t12A6 = prim •00CE<$[3]; $[3]; $[]> (_t12A5, refPos0AC0);
      real _t12A7 = prim -0026<$[]> (_t12A1, _t12A6);
      real _t12A8 = -0.1e1;
      real _t12A9 = 0.e0;
      real _t12AA = 0.e0;
      vec3 _t12AB = [_t12A8, _t12A9, _t12AA];
      real _t12AC = prim •00CE<$[3]; $[3]; $[]> (_t12AB, dPos0AC1);
      real _t12AD = prim /0055 (_t12A7, _t12AC);
      bool _t12AE = prim >0080 (time109B, _t12AD);
      string _t12AF = "\n";
      print (_t1293, _t12A0, _t12AE, _t12AF);
      real _t12B0 = 0.e0;
      real _t12B1 = -0.1e1;
      real _t12B2 = 0.e0;
      real _t12B3 = 0.e0;
      vec3 _t12B4 = [_t12B1, _t12B2, _t12B3];
      real _t12B5 = prim •00CE<$[3]; $[3]; $[]> (_t12B4, refPos0AC0);
      real _t12B6 = prim -0026<$[]> (_t12B0, _t12B5);
      real _t12B7 = -0.1e1;
      real _t12B8 = 0.e0;
      real _t12B9 = 0.e0;
      vec3 _t12BA = [_t12B7, _t12B8, _t12B9];
      real _t12BB = prim •00CE<$[3]; $[3]; $[]> (_t12BA, dPos0AC1);
      time109B = prim /0055 (_t12B6, _t12BB);
      face109C = 1;
    } else {
      real _t12BC = 0.e0;
      real _t12BD = -0.1e1;
      real _t12BE = 0.e0;
      real _t12BF = 0.e0;
      vec3 _t12C0 = [_t12BD, _t12BE, _t12BF];
      real _t12C1 = prim •00CE<$[3]; $[3]; $[]> (_t12C0, refPos0AC0);
      real _t12C2 = prim -0026<$[]> (_t12BC, _t12C1);
      real _t12C3 = -0.1e1;
      real _t12C4 = 0.e0;
      real _t12C5 = 0.e0;
      vec3 _t12C6 = [_t12C3, _t12C4, _t12C5];
      real _t12C7 = prim •00CE<$[3]; $[3]; $[]> (_t12C6, dPos0AC1);
      faceTime109D = prim /0055 (_t12C2, _t12C7);
      string _t12C8 = "Saving backup time: ";
      string _t12C9 = "\n";
      print (_t12C8, faceTime109D, _t12C9);
    }
  }
  string _t12CA = "\ntest :";
  real _t12CB = 0.e0;
  real _t12CC = 0.e0;
  real _t12CD = -0.1e1;
  real _t12CE = 0.e0;
  vec3 _t12CF = [_t12CC, _t12CD, _t12CE];
  real _t12D0 = prim •00CE<$[3]; $[3]; $[]> (_t12CF, refPos0AC0);
  real _t12D1 = prim -0026<$[]> (_t12CB, _t12D0);
  real _t12D2 = 0.e0;
  real _t12D3 = -0.1e1;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, dPos0AC1);
  real _t12D7 = prim /0055 (_t12D1, _t12D6);
  string _t12D8 = " test2: ";
  real _t12D9 = 0.e0;
  real _t12DA = -0.1e1;
  real _t12DB = 0.e0;
  vec3 _t12DC = [_t12D9, _t12DA, _t12DB];
  real _t12DD = prim •00CE<$[3]; $[3]; $[]> (_t12DC, dPos0AC1);
  string _t12DE = " insideTest: ";
  real _t12DF = 0.1e1;
  real _t12E0 = 0.1e-7;
  real _t12E1 = prim +0017<$[]> (_t12DF, _t12E0);
  real _t12E2 = 0.1e1;
  real _t12E3 = 0.1e1;
  real _t12E4 = 0.1e1;
  vec3 _t12E5 = [_t12E2, _t12E3, _t12E4];
  real _t12E6 = 0.e0;
  real _t12E7 = 0.e0;
  real _t12E8 = -0.1e1;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, refPos0AC0);
  real _t12EC = prim -0026<$[]> (_t12E6, _t12EB);
  real _t12ED = 0.e0;
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  vec3 _t12F0 = [_t12ED, _t12EE, _t12EF];
  real _t12F1 = prim •00CE<$[3]; $[3]; $[]> (_t12F0, dPos0AC1);
  real _t12F2 = prim /0055 (_t12EC, _t12F1);
  vec3 _t12F3 = prim *0038<$[3]> (dPos0AC1, _t12F2);
  vec3 _t12F4 = prim +0017<$[3]> (refPos0AC0, _t12F3);
  real _t12F5 = prim •00CE<$[3]; $[3]; $[]> (_t12E5, _t12F4);
  bool _t12F6 = prim >0080 (_t12E1, _t12F5);
  real _t12F7 = 0.1e-7;
  real _t12F8 = 0.1e-7;
  real _t12F9 = 0.1e-7;
  vec3 _t12FA = [_t12F7, _t12F8, _t12F9];
  real _t12FB = 0.e0;
  real _t12FC = 0.e0;
  real _t12FD = -0.1e1;
  real _t12FE = 0.e0;
  vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
  real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0AC0);
  real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
  real _t1302 = 0.e0;
  real _t1303 = -0.1e1;
  real _t1304 = 0.e0;
  vec3 _t1305 = [_t1302, _t1303, _t1304];
  real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0AC1);
  real _t1307 = prim /0055 (_t1301, _t1306);
  vec3 _t1308 = prim *0038<$[3]> (dPos0AC1, _t1307);
  vec3 _t1309 = prim +0017<$[3]> (refPos0AC0, _t1308);
  vec3 _t130A = prim +0017<$[3]> (_t12FA, _t1309);
  real _t130B = _t130A[0];
  real _t130C = -0.e0;
  bool _t130D = prim >0080 (_t130B, _t130C);
  real _t130E = 0.1e-7;
  real _t130F = 0.1e-7;
  real _t1310 = 0.1e-7;
  vec3 _t1311 = [_t130E, _t130F, _t1310];
  real _t1312 = 0.e0;
  real _t1313 = 0.e0;
  real _t1314 = -0.1e1;
  real _t1315 = 0.e0;
  vec3 _t1316 = [_t1313, _t1314, _t1315];
  real _t1317 = prim •00CE<$[3]; $[3]; $[]> (_t1316, refPos0AC0);
  real _t1318 = prim -0026<$[]> (_t1312, _t1317);
  real _t1319 = 0.e0;
  real _t131A = -0.1e1;
  real _t131B = 0.e0;
  vec3 _t131C = [_t1319, _t131A, _t131B];
  real _t131D = prim •00CE<$[3]; $[3]; $[]> (_t131C, dPos0AC1);
  real _t131E = prim /0055 (_t1318, _t131D);
  vec3 _t131F = prim *0038<$[3]> (dPos0AC1, _t131E);
  vec3 _t1320 = prim +0017<$[3]> (refPos0AC0, _t131F);
  vec3 _t1321 = prim +0017<$[3]> (_t1311, _t1320);
  real _t1322 = _t1321[1];
  real _t1323 = -0.e0;
  bool _t1324 = prim >0080 (_t1322, _t1323);
  real _t1325 = 0.1e-7;
  real _t1326 = 0.1e-7;
  real _t1327 = 0.1e-7;
  vec3 _t1328 = [_t1325, _t1326, _t1327];
  real _t1329 = 0.e0;
  real _t132A = 0.e0;
  real _t132B = -0.1e1;
  real _t132C = 0.e0;
  vec3 _t132D = [_t132A, _t132B, _t132C];
  real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, refPos0AC0);
  real _t132F = prim -0026<$[]> (_t1329, _t132E);
  real _t1330 = 0.e0;
  real _t1331 = -0.1e1;
  real _t1332 = 0.e0;
  vec3 _t1333 = [_t1330, _t1331, _t1332];
  real _t1334 = prim •00CE<$[3]; $[3]; $[]> (_t1333, dPos0AC1);
  real _t1335 = prim /0055 (_t132F, _t1334);
  vec3 _t1336 = prim *0038<$[3]> (dPos0AC1, _t1335);
  vec3 _t1337 = prim +0017<$[3]> (refPos0AC0, _t1336);
  vec3 _t1338 = prim +0017<$[3]> (_t1328, _t1337);
  real _t1339 = _t1338[2];
  real _t133A = -0.e0;
  bool _t133B = prim >0080 (_t1339, _t133A);
  bool _t133C = prim $and01C4 (_t1324, _t133B);
  bool _t133D = prim $and01C4 (_t130D, _t133C);
  bool _t133E = prim $and01C4 (_t12F6, _t133D);
  string _t133F = " dist: ";
  real _t1340 = 0.e0;
  real _t1341 = 0.e0;
  real _t1342 = -0.1e1;
  real _t1343 = 0.e0;
  vec3 _t1344 = [_t1341, _t1342, _t1343];
  real _t1345 = prim •00CE<$[3]; $[3]; $[]> (_t1344, refPos0AC0);
  real _t1346 = prim -0026<$[]> (_t1340, _t1345);
  real _t1347 = prim |()|00B5<$[]> (_t1346);
  string _t1348 = "signed dist: ";
  real _t1349 = 0.e0;
  real _t134A = 0.e0;
  real _t134B = -0.1e1;
  real _t134C = 0.e0;
  vec3 _t134D = [_t134A, _t134B, _t134C];
  real _t134E = prim •00CE<$[3]; $[3]; $[]> (_t134D, refPos0AC0);
  real _t134F = prim -0026<$[]> (_t1349, _t134E);
  string _t1350 = " face: ";
  int _t1351 = 2;
  string _t1352 = " place: ";
  real _t1353 = 0.e0;
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, refPos0AC0);
  real _t1359 = prim -0026<$[]> (_t1353, _t1358);
  real _t135A = 0.e0;
  real _t135B = -0.1e1;
  real _t135C = 0.e0;
  vec3 _t135D = [_t135A, _t135B, _t135C];
  real _t135E = prim •00CE<$[3]; $[3]; $[]> (_t135D, dPos0AC1);
  real _t135F = prim /0055 (_t1359, _t135E);
  vec3 _t1360 = prim *0038<$[3]> (dPos0AC1, _t135F);
  vec3 _t1361 = prim +0017<$[3]> (refPos0AC0, _t1360);
  string _t1362 = " error: ";
  real _t1363 = 0.e0;
  real _t1364 = 0.e0;
  real _t1365 = -0.1e1;
  real _t1366 = 0.e0;
  vec3 _t1367 = [_t1364, _t1365, _t1366];
  real _t1368 = 0.e0;
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, refPos0AC0);
  real _t136E = prim -0026<$[]> (_t1368, _t136D);
  real _t136F = 0.e0;
  real _t1370 = -0.1e1;
  real _t1371 = 0.e0;
  vec3 _t1372 = [_t136F, _t1370, _t1371];
  real _t1373 = prim •00CE<$[3]; $[3]; $[]> (_t1372, dPos0AC1);
  real _t1374 = prim /0055 (_t136E, _t1373);
  vec3 _t1375 = prim *0038<$[3]> (dPos0AC1, _t1374);
  vec3 _t1376 = prim +0017<$[3]> (refPos0AC0, _t1375);
  real _t1377 = prim •00CE<$[3]; $[3]; $[]> (_t1367, _t1376);
  real _t1378 = prim -0026<$[]> (_t1363, _t1377);
  real _t1379 = prim |()|00B5<$[]> (_t1378);
  string _t137A = " offset :";
  string _t137B = " dp: ";
  string _t137C = " otherPossibleTime: ";
  string _t137D = "\n";
  string _t137E = "\n original face: ";
  string _t137F = " ";
  print (_t12CA, _t12D7, _t12D8, _t12DD, _t12DE, _t133E, _t133F, _t1347, _t1348, _t134F, _t1350, _t1351, _t1352, _t1361, _t1362, _t1379, _t137A, refPos0AC0, _t137B, dPos0AC1, _t137C, faceTime109D, _t137D, _t137E, i109A, _t137F);
  real _t1380 = 0.e0;
  real _t1381 = 0.e0;
  real _t1382 = -0.1e1;
  real _t1383 = 0.e0;
  vec3 _t1384 = [_t1381, _t1382, _t1383];
  real _t1385 = prim •00CE<$[3]; $[3]; $[]> (_t1384, refPos0AC0);
  real _t1386 = prim -0026<$[]> (_t1380, _t1385);
  real _t1387 = 0.e0;
  real _t1388 = -0.1e1;
  real _t1389 = 0.e0;
  vec3 _t138A = [_t1387, _t1388, _t1389];
  real _t138B = prim •00CE<$[3]; $[3]; $[]> (_t138A, dPos0AC1);
  real _t138C = prim /0055 (_t1386, _t138B);
  real _t138D = -0.1e-7;
  bool _t138E = prim >=007E (_t138C, _t138D);
  real _t138F = 0.e0;
  real _t1390 = 0.e0;
  real _t1391 = -0.1e1;
  real _t1392 = 0.e0;
  vec3 _t1393 = [_t1390, _t1391, _t1392];
  real _t1394 = prim •00CE<$[3]; $[3]; $[]> (_t1393, refPos0AC0);
  real _t1395 = prim -0026<$[]> (_t138F, _t1394);
  real _t1396 = 0.e0;
  real _t1397 = -0.1e1;
  real _t1398 = 0.e0;
  vec3 _t1399 = [_t1396, _t1397, _t1398];
  real _t139A = prim •00CE<$[3]; $[3]; $[]> (_t1399, dPos0AC1);
  real _t139B = prim /0055 (_t1395, _t139A);
  bool _t139C = prim >0080 (time109B, _t139B);
  real _t139D = 0.e0;
  real _t139E = -0.1e1;
  real _t139F = 0.e0;
  vec3 _t13A0 = [_t139D, _t139E, _t139F];
  real _t13A1 = prim •00CE<$[3]; $[3]; $[]> (_t13A0, dPos0AC1);
  real _t13A2 = prim |()|00B5<$[]> (_t13A1);
  real _t13A3 = 0.1e-7;
  bool _t13A4 = prim >=007E (_t13A2, _t13A3);
  bool _t13A5 = prim $and01C4 (_t139C, _t13A4);
  bool _t13A6 = prim $and01C4 (_t138E, _t13A5);
  if _t13A6 {
    int _t13A7 = 2;
    bool _t13A8 = prim !=0086 (i109A, _t13A7);
    if _t13A8 {
      string _t13A9 = "Saving at this face!";
      real _t13AA = 0.e0;
      real _t13AB = 0.e0;
      real _t13AC = -0.1e1;
      real _t13AD = 0.e0;
      vec3 _t13AE = [_t13AB, _t13AC, _t13AD];
      real _t13AF = prim •00CE<$[3]; $[3]; $[]> (_t13AE, refPos0AC0);
      real _t13B0 = prim -0026<$[]> (_t13AA, _t13AF);
      real _t13B1 = 0.e0;
      real _t13B2 = -0.1e1;
      real _t13B3 = 0.e0;
      vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
      real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, dPos0AC1);
      real _t13B6 = prim /0055 (_t13B0, _t13B5);
      real _t13B7 = 0.e0;
      real _t13B8 = 0.e0;
      real _t13B9 = -0.1e1;
      real _t13BA = 0.e0;
      vec3 _t13BB = [_t13B8, _t13B9, _t13BA];
      real _t13BC = prim •00CE<$[3]; $[3]; $[]> (_t13BB, refPos0AC0);
      real _t13BD = prim -0026<$[]> (_t13B7, _t13BC);
      real _t13BE = 0.e0;
      real _t13BF = -0.1e1;
      real _t13C0 = 0.e0;
      vec3 _t13C1 = [_t13BE, _t13BF, _t13C0];
      real _t13C2 = prim •00CE<$[3]; $[3]; $[]> (_t13C1, dPos0AC1);
      real _t13C3 = prim /0055 (_t13BD, _t13C2);
      bool _t13C4 = prim >0080 (time109B, _t13C3);
      string _t13C5 = "\n";
      print (_t13A9, _t13B6, _t13C4, _t13C5);
      real _t13C6 = 0.e0;
      real _t13C7 = 0.e0;
      real _t13C8 = -0.1e1;
      real _t13C9 = 0.e0;
      vec3 _t13CA = [_t13C7, _t13C8, _t13C9];
      real _t13CB = prim •00CE<$[3]; $[3]; $[]> (_t13CA, refPos0AC0);
      real _t13CC = prim -0026<$[]> (_t13C6, _t13CB);
      real _t13CD = 0.e0;
      real _t13CE = -0.1e1;
      real _t13CF = 0.e0;
      vec3 _t13D0 = [_t13CD, _t13CE, _t13CF];
      real _t13D1 = prim •00CE<$[3]; $[3]; $[]> (_t13D0, dPos0AC1);
      time109B = prim /0055 (_t13CC, _t13D1);
      face109C = 2;
    } else {
      real _t13D2 = 0.e0;
      real _t13D3 = 0.e0;
      real _t13D4 = -0.1e1;
      real _t13D5 = 0.e0;
      vec3 _t13D6 = [_t13D3, _t13D4, _t13D5];
      real _t13D7 = prim •00CE<$[3]; $[3]; $[]> (_t13D6, refPos0AC0);
      real _t13D8 = prim -0026<$[]> (_t13D2, _t13D7);
      real _t13D9 = 0.e0;
      real _t13DA = -0.1e1;
      real _t13DB = 0.e0;
      vec3 _t13DC = [_t13D9, _t13DA, _t13DB];
      real _t13DD = prim •00CE<$[3]; $[3]; $[]> (_t13DC, dPos0AC1);
      faceTime109D = prim /0055 (_t13D8, _t13DD);
      string _t13DE = "Saving backup time: ";
      string _t13DF = "\n";
      print (_t13DE, faceTime109D, _t13DF);
    }
  }
  string _t13E0 = "\ntest :";
  real _t13E1 = 0.e0;
  real _t13E2 = 0.e0;
  real _t13E3 = 0.e0;
  real _t13E4 = -0.1e1;
  vec3 _t13E5 = [_t13E2, _t13E3, _t13E4];
  real _t13E6 = prim •00CE<$[3]; $[3]; $[]> (_t13E5, refPos0AC0);
  real _t13E7 = prim -0026<$[]> (_t13E1, _t13E6);
  real _t13E8 = 0.e0;
  real _t13E9 = 0.e0;
  real _t13EA = -0.1e1;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, dPos0AC1);
  real _t13ED = prim /0055 (_t13E7, _t13EC);
  string _t13EE = " test2: ";
  real _t13EF = 0.e0;
  real _t13F0 = 0.e0;
  real _t13F1 = -0.1e1;
  vec3 _t13F2 = [_t13EF, _t13F0, _t13F1];
  real _t13F3 = prim •00CE<$[3]; $[3]; $[]> (_t13F2, dPos0AC1);
  string _t13F4 = " insideTest: ";
  real _t13F5 = 0.1e1;
  real _t13F6 = 0.1e-7;
  real _t13F7 = prim +0017<$[]> (_t13F5, _t13F6);
  real _t13F8 = 0.1e1;
  real _t13F9 = 0.1e1;
  real _t13FA = 0.1e1;
  vec3 _t13FB = [_t13F8, _t13F9, _t13FA];
  real _t13FC = 0.e0;
  real _t13FD = 0.e0;
  real _t13FE = 0.e0;
  real _t13FF = -0.1e1;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, refPos0AC0);
  real _t1402 = prim -0026<$[]> (_t13FC, _t1401);
  real _t1403 = 0.e0;
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  vec3 _t1406 = [_t1403, _t1404, _t1405];
  real _t1407 = prim •00CE<$[3]; $[3]; $[]> (_t1406, dPos0AC1);
  real _t1408 = prim /0055 (_t1402, _t1407);
  vec3 _t1409 = prim *0038<$[3]> (dPos0AC1, _t1408);
  vec3 _t140A = prim +0017<$[3]> (refPos0AC0, _t1409);
  real _t140B = prim •00CE<$[3]; $[3]; $[]> (_t13FB, _t140A);
  bool _t140C = prim >0080 (_t13F7, _t140B);
  real _t140D = 0.1e-7;
  real _t140E = 0.1e-7;
  real _t140F = 0.1e-7;
  vec3 _t1410 = [_t140D, _t140E, _t140F];
  real _t1411 = 0.e0;
  real _t1412 = 0.e0;
  real _t1413 = 0.e0;
  real _t1414 = -0.1e1;
  vec3 _t1415 = [_t1412, _t1413, _t1414];
  real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0AC0);
  real _t1417 = prim -0026<$[]> (_t1411, _t1416);
  real _t1418 = 0.e0;
  real _t1419 = 0.e0;
  real _t141A = -0.1e1;
  vec3 _t141B = [_t1418, _t1419, _t141A];
  real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0AC1);
  real _t141D = prim /0055 (_t1417, _t141C);
  vec3 _t141E = prim *0038<$[3]> (dPos0AC1, _t141D);
  vec3 _t141F = prim +0017<$[3]> (refPos0AC0, _t141E);
  vec3 _t1420 = prim +0017<$[3]> (_t1410, _t141F);
  real _t1421 = _t1420[0];
  real _t1422 = -0.e0;
  bool _t1423 = prim >0080 (_t1421, _t1422);
  real _t1424 = 0.1e-7;
  real _t1425 = 0.1e-7;
  real _t1426 = 0.1e-7;
  vec3 _t1427 = [_t1424, _t1425, _t1426];
  real _t1428 = 0.e0;
  real _t1429 = 0.e0;
  real _t142A = 0.e0;
  real _t142B = -0.1e1;
  vec3 _t142C = [_t1429, _t142A, _t142B];
  real _t142D = prim •00CE<$[3]; $[3]; $[]> (_t142C, refPos0AC0);
  real _t142E = prim -0026<$[]> (_t1428, _t142D);
  real _t142F = 0.e0;
  real _t1430 = 0.e0;
  real _t1431 = -0.1e1;
  vec3 _t1432 = [_t142F, _t1430, _t1431];
  real _t1433 = prim •00CE<$[3]; $[3]; $[]> (_t1432, dPos0AC1);
  real _t1434 = prim /0055 (_t142E, _t1433);
  vec3 _t1435 = prim *0038<$[3]> (dPos0AC1, _t1434);
  vec3 _t1436 = prim +0017<$[3]> (refPos0AC0, _t1435);
  vec3 _t1437 = prim +0017<$[3]> (_t1427, _t1436);
  real _t1438 = _t1437[1];
  real _t1439 = -0.e0;
  bool _t143A = prim >0080 (_t1438, _t1439);
  real _t143B = 0.1e-7;
  real _t143C = 0.1e-7;
  real _t143D = 0.1e-7;
  vec3 _t143E = [_t143B, _t143C, _t143D];
  real _t143F = 0.e0;
  real _t1440 = 0.e0;
  real _t1441 = 0.e0;
  real _t1442 = -0.1e1;
  vec3 _t1443 = [_t1440, _t1441, _t1442];
  real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, refPos0AC0);
  real _t1445 = prim -0026<$[]> (_t143F, _t1444);
  real _t1446 = 0.e0;
  real _t1447 = 0.e0;
  real _t1448 = -0.1e1;
  vec3 _t1449 = [_t1446, _t1447, _t1448];
  real _t144A = prim •00CE<$[3]; $[3]; $[]> (_t1449, dPos0AC1);
  real _t144B = prim /0055 (_t1445, _t144A);
  vec3 _t144C = prim *0038<$[3]> (dPos0AC1, _t144B);
  vec3 _t144D = prim +0017<$[3]> (refPos0AC0, _t144C);
  vec3 _t144E = prim +0017<$[3]> (_t143E, _t144D);
  real _t144F = _t144E[2];
  real _t1450 = -0.e0;
  bool _t1451 = prim >0080 (_t144F, _t1450);
  bool _t1452 = prim $and01C4 (_t143A, _t1451);
  bool _t1453 = prim $and01C4 (_t1423, _t1452);
  bool _t1454 = prim $and01C4 (_t140C, _t1453);
  string _t1455 = " dist: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = 0.e0;
  real _t1459 = -0.1e1;
  vec3 _t145A = [_t1457, _t1458, _t1459];
  real _t145B = prim •00CE<$[3]; $[3]; $[]> (_t145A, refPos0AC0);
  real _t145C = prim -0026<$[]> (_t1456, _t145B);
  real _t145D = prim |()|00B5<$[]> (_t145C);
  string _t145E = "signed dist: ";
  real _t145F = 0.e0;
  real _t1460 = 0.e0;
  real _t1461 = 0.e0;
  real _t1462 = -0.1e1;
  vec3 _t1463 = [_t1460, _t1461, _t1462];
  real _t1464 = prim •00CE<$[3]; $[3]; $[]> (_t1463, refPos0AC0);
  real _t1465 = prim -0026<$[]> (_t145F, _t1464);
  string _t1466 = " face: ";
  int _t1467 = 3;
  string _t1468 = " place: ";
  real _t1469 = 0.e0;
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, refPos0AC0);
  real _t146F = prim -0026<$[]> (_t1469, _t146E);
  real _t1470 = 0.e0;
  real _t1471 = 0.e0;
  real _t1472 = -0.1e1;
  vec3 _t1473 = [_t1470, _t1471, _t1472];
  real _t1474 = prim •00CE<$[3]; $[3]; $[]> (_t1473, dPos0AC1);
  real _t1475 = prim /0055 (_t146F, _t1474);
  vec3 _t1476 = prim *0038<$[3]> (dPos0AC1, _t1475);
  vec3 _t1477 = prim +0017<$[3]> (refPos0AC0, _t1476);
  string _t1478 = " error: ";
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = 0.e0;
  real _t147C = -0.1e1;
  vec3 _t147D = [_t147A, _t147B, _t147C];
  real _t147E = 0.e0;
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, refPos0AC0);
  real _t1484 = prim -0026<$[]> (_t147E, _t1483);
  real _t1485 = 0.e0;
  real _t1486 = 0.e0;
  real _t1487 = -0.1e1;
  vec3 _t1488 = [_t1485, _t1486, _t1487];
  real _t1489 = prim •00CE<$[3]; $[3]; $[]> (_t1488, dPos0AC1);
  real _t148A = prim /0055 (_t1484, _t1489);
  vec3 _t148B = prim *0038<$[3]> (dPos0AC1, _t148A);
  vec3 _t148C = prim +0017<$[3]> (refPos0AC0, _t148B);
  real _t148D = prim •00CE<$[3]; $[3]; $[]> (_t147D, _t148C);
  real _t148E = prim -0026<$[]> (_t1479, _t148D);
  real _t148F = prim |()|00B5<$[]> (_t148E);
  string _t1490 = " offset :";
  string _t1491 = " dp: ";
  string _t1492 = " otherPossibleTime: ";
  string _t1493 = "\n";
  string _t1494 = "\n original face: ";
  string _t1495 = " ";
  print (_t13E0, _t13ED, _t13EE, _t13F3, _t13F4, _t1454, _t1455, _t145D, _t145E, _t1465, _t1466, _t1467, _t1468, _t1477, _t1478, _t148F, _t1490, refPos0AC0, _t1491, dPos0AC1, _t1492, faceTime109D, _t1493, _t1494, i109A, _t1495);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = 0.e0;
  real _t1499 = -0.1e1;
  vec3 _t149A = [_t1497, _t1498, _t1499];
  real _t149B = prim •00CE<$[3]; $[3]; $[]> (_t149A, refPos0AC0);
  real _t149C = prim -0026<$[]> (_t1496, _t149B);
  real _t149D = 0.e0;
  real _t149E = 0.e0;
  real _t149F = -0.1e1;
  vec3 _t14A0 = [_t149D, _t149E, _t149F];
  real _t14A1 = prim •00CE<$[3]; $[3]; $[]> (_t14A0, dPos0AC1);
  real _t14A2 = prim /0055 (_t149C, _t14A1);
  real _t14A3 = -0.1e-7;
  bool _t14A4 = prim >=007E (_t14A2, _t14A3);
  real _t14A5 = 0.e0;
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = -0.1e1;
  vec3 _t14A9 = [_t14A6, _t14A7, _t14A8];
  real _t14AA = prim •00CE<$[3]; $[3]; $[]> (_t14A9, refPos0AC0);
  real _t14AB = prim -0026<$[]> (_t14A5, _t14AA);
  real _t14AC = 0.e0;
  real _t14AD = 0.e0;
  real _t14AE = -0.1e1;
  vec3 _t14AF = [_t14AC, _t14AD, _t14AE];
  real _t14B0 = prim •00CE<$[3]; $[3]; $[]> (_t14AF, dPos0AC1);
  real _t14B1 = prim /0055 (_t14AB, _t14B0);
  bool _t14B2 = prim >0080 (time109B, _t14B1);
  real _t14B3 = 0.e0;
  real _t14B4 = 0.e0;
  real _t14B5 = -0.1e1;
  vec3 _t14B6 = [_t14B3, _t14B4, _t14B5];
  real _t14B7 = prim •00CE<$[3]; $[3]; $[]> (_t14B6, dPos0AC1);
  real _t14B8 = prim |()|00B5<$[]> (_t14B7);
  real _t14B9 = 0.1e-7;
  bool _t14BA = prim >=007E (_t14B8, _t14B9);
  bool _t14BB = prim $and01C4 (_t14B2, _t14BA);
  bool _t14BC = prim $and01C4 (_t14A4, _t14BB);
  if _t14BC {
    int _t14BD = 3;
    bool _t14BE = prim !=0086 (i109A, _t14BD);
    if _t14BE {
      string _t14BF = "Saving at this face!";
      real _t14C0 = 0.e0;
      real _t14C1 = 0.e0;
      real _t14C2 = 0.e0;
      real _t14C3 = -0.1e1;
      vec3 _t14C4 = [_t14C1, _t14C2, _t14C3];
      real _t14C5 = prim •00CE<$[3]; $[3]; $[]> (_t14C4, refPos0AC0);
      real _t14C6 = prim -0026<$[]> (_t14C0, _t14C5);
      real _t14C7 = 0.e0;
      real _t14C8 = 0.e0;
      real _t14C9 = -0.1e1;
      vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
      real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, dPos0AC1);
      real _t14CC = prim /0055 (_t14C6, _t14CB);
      real _t14CD = 0.e0;
      real _t14CE = 0.e0;
      real _t14CF = 0.e0;
      real _t14D0 = -0.1e1;
      vec3 _t14D1 = [_t14CE, _t14CF, _t14D0];
      real _t14D2 = prim •00CE<$[3]; $[3]; $[]> (_t14D1, refPos0AC0);
      real _t14D3 = prim -0026<$[]> (_t14CD, _t14D2);
      real _t14D4 = 0.e0;
      real _t14D5 = 0.e0;
      real _t14D6 = -0.1e1;
      vec3 _t14D7 = [_t14D4, _t14D5, _t14D6];
      real _t14D8 = prim •00CE<$[3]; $[3]; $[]> (_t14D7, dPos0AC1);
      real _t14D9 = prim /0055 (_t14D3, _t14D8);
      bool _t14DA = prim >0080 (time109B, _t14D9);
      string _t14DB = "\n";
      print (_t14BF, _t14CC, _t14DA, _t14DB);
      real _t14DC = 0.e0;
      real _t14DD = 0.e0;
      real _t14DE = 0.e0;
      real _t14DF = -0.1e1;
      vec3 _t14E0 = [_t14DD, _t14DE, _t14DF];
      real _t14E1 = prim •00CE<$[3]; $[3]; $[]> (_t14E0, refPos0AC0);
      real _t14E2 = prim -0026<$[]> (_t14DC, _t14E1);
      real _t14E3 = 0.e0;
      real _t14E4 = 0.e0;
      real _t14E5 = -0.1e1;
      vec3 _t14E6 = [_t14E3, _t14E4, _t14E5];
      real _t14E7 = prim •00CE<$[3]; $[3]; $[]> (_t14E6, dPos0AC1);
      time109B = prim /0055 (_t14E2, _t14E7);
      face109C = 3;
    } else {
      real _t14E8 = 0.e0;
      real _t14E9 = 0.e0;
      real _t14EA = 0.e0;
      real _t14EB = -0.1e1;
      vec3 _t14EC = [_t14E9, _t14EA, _t14EB];
      real _t14ED = prim •00CE<$[3]; $[3]; $[]> (_t14EC, refPos0AC0);
      real _t14EE = prim -0026<$[]> (_t14E8, _t14ED);
      real _t14EF = 0.e0;
      real _t14F0 = 0.e0;
      real _t14F1 = -0.1e1;
      vec3 _t14F2 = [_t14EF, _t14F0, _t14F1];
      real _t14F3 = prim •00CE<$[3]; $[3]; $[]> (_t14F2, dPos0AC1);
      faceTime109D = prim /0055 (_t14EE, _t14F3);
      string _t14F4 = "Saving backup time: ";
      string _t14F5 = "\n";
      print (_t14F4, faceTime109D, _t14F5);
    }
  }
  int _t14F6 = -1;
  bool _t14F7 = prim !=0086 (face109C, _t14F6);
  real _t14F8 = 0.1e1;
  real _t14F9 = 0.1e-7;
  real _t14FA = prim +0017<$[]> (_t14F8, _t14F9);
  real _t14FB = 0.1e1;
  real _t14FC = 0.1e1;
  real _t14FD = 0.1e1;
  vec3 _t14FE = [_t14FB, _t14FC, _t14FD];
  real _t14FF = 0.e0;
  real _t1500 = prim max0125 (time109B, _t14FF);
  vec3 _t1501 = prim *0038<$[3]> (dPos0AC1, _t1500);
  vec3 _t1502 = prim +0017<$[3]> (refPos0AC0, _t1501);
  real _t1503 = prim •00CE<$[3]; $[3]; $[]> (_t14FE, _t1502);
  bool _t1504 = prim >0080 (_t14FA, _t1503);
  real _t1505 = 0.1e-7;
  real _t1506 = 0.1e-7;
  real _t1507 = 0.1e-7;
  vec3 _t1508 = [_t1505, _t1506, _t1507];
  real _t1509 = 0.e0;
  real _t150A = prim max0125 (time109B, _t1509);
  vec3 _t150B = prim *0038<$[3]> (dPos0AC1, _t150A);
  vec3 _t150C = prim +0017<$[3]> (refPos0AC0, _t150B);
  vec3 _t150D = prim +0017<$[3]> (_t1508, _t150C);
  real _t150E = _t150D[0];
  real _t150F = -0.e0;
  bool _t1510 = prim >0080 (_t150E, _t150F);
  real _t1511 = 0.1e-7;
  real _t1512 = 0.1e-7;
  real _t1513 = 0.1e-7;
  vec3 _t1514 = [_t1511, _t1512, _t1513];
  real _t1515 = 0.e0;
  real _t1516 = prim max0125 (time109B, _t1515);
  vec3 _t1517 = prim *0038<$[3]> (dPos0AC1, _t1516);
  vec3 _t1518 = prim +0017<$[3]> (refPos0AC0, _t1517);
  vec3 _t1519 = prim +0017<$[3]> (_t1514, _t1518);
  real _t151A = _t1519[1];
  real _t151B = -0.e0;
  bool _t151C = prim >0080 (_t151A, _t151B);
  real _t151D = 0.1e-7;
  real _t151E = 0.1e-7;
  real _t151F = 0.1e-7;
  vec3 _t1520 = [_t151D, _t151E, _t151F];
  real _t1521 = 0.e0;
  real _t1522 = prim max0125 (time109B, _t1521);
  vec3 _t1523 = prim *0038<$[3]> (dPos0AC1, _t1522);
  vec3 _t1524 = prim +0017<$[3]> (refPos0AC0, _t1523);
  vec3 _t1525 = prim +0017<$[3]> (_t1520, _t1524);
  real _t1526 = _t1525[2];
  real _t1527 = -0.e0;
  bool _t1528 = prim >0080 (_t1526, _t1527);
  bool _t1529 = prim $and01C4 (_t151C, _t1528);
  bool _t152A = prim $and01C4 (_t1510, _t1529);
  bool _t152B = prim $and01C4 (_t1504, _t152A);
  bool _t152C = prim $and01C4 (_t14F7, _t152B);
  if _t152C {
    string _t152D = "\nReturning via standard : ";
    real _t152E = 0.e0;
    real _t152F = prim max0125 (time109B, _t152E);
    real _t1530 = (real)face109C;
    vec2 _t1531 = [_t152F, _t1530];
    string _t1532 = "\n";
    print (_t152D, _t1531, _t1532);
    real _t1533 = 0.e0;
    real _t1534 = prim max0125 (time109B, _t1533);
    real _t1535 = (real)face109C;
    vec2 _t1536 = [_t1534, _t1535];
    return _t1536;
  } else {
    real _t1537 = -inf;
    bool _t1538 = prim ==0084 (_t1537, faceTime109D);
    if _t1538 {
      string _t1539 = "\nReturning via fail : ";
      real _t153A = -0.1e1;
      real _t153B = -0.1e1;
      vec2 _t153C = [_t153A, _t153B];
      string _t153D = "\n";
      print (_t1539, _t153C, _t153D);
      real _t153E = -0.1e1;
      real _t153F = -0.1e1;
      vec2 _t1540 = [_t153E, _t153F];
      return _t1540;
    } else {
      string _t1541 = "\nReturning via backup : ";
      real _t1542 = 0.e0;
      real _t1543 = prim max0125 (faceTime109D, _t1542);
      real _t1544 = (real)i109A;
      vec2 _t1545 = [_t1543, _t1544];
      string _t1546 = "\n";
      print (_t1541, _t1545, _t1546);
      real _t1547 = 0.e0;
      real _t1548 = prim max0125 (faceTime109D, _t1547);
      real _t1549 = (real)i109A;
      vec2 _t154A = [_t1548, _t1549];
      return _t154A;
    }
  }
}
function Femdata: MeshPos#2 fn_2FB1563 (Femdata: MeshPos x1564, vec3 dPos1565)
{
  bool _t1566 = extractFemItem(Valid(MeshPos), bool, x1564);
  bool _t1567 = prim !00BC (_t1566);
  if _t1567 {
    return x1564;
  }
  real time1568 = 0.1e1;
  Femdata: MeshPos cmp1569 = x1564;
  int _t156A = 0;
  int[] _t156B = prim $range01C3 (_t156A, timeSteps040D);
  foreach i15E3 in _t156B {
    Femdata: Mesh _t156C = extractFem(cmp1569, Mesh);
    int _t156D = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t156E = loadFem(MeshCell, _t156C, _t156D);
    Femdata: Mesh _t156F = extractFem(_t156E, Mesh);
    Femdata: Mesh _t1570 = extractFem(cmp1569, Mesh);
    int _t1571 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1572 = loadFem(MeshCell, _t1570, _t1571);
    Femdata: Mesh _t1573 = extractFem(_t1572, Mesh);
    Femdata: Mesh _t1574 = extractFem(cmp1569, Mesh);
    int _t1575 = extractFemItem(CellIndex(MeshPos), int, cmp1569);
    Femdata: MeshCell _t1576 = loadFem(MeshCell, _t1574, _t1575);
    int _t1577 = extractFemItem(CellIndex(MeshCell), int, _t1576);
    field(3)[3] _t1578 = femField(_t156F,_t1577,field(3)[3],Transform,);
    field(3)[3,3] _t1579 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t1578);
    vec3 _t157A = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    tensor[3,3] _t157B = prim @00A5<#∞; %3; $[3,3]> (_t1579, _t157A);
    tensor[3,3] _t157C = prim inv0155 (_t157B);
    vec3 deltaP157D = prim •00CE<$[3,3]; $[3]; $[3]> (_t157C, dPos1565);
    real _t157E = prim |()|00B5<$[3]> (deltaP157D);
    vec3 normDetaP157F = prim /0057<$[3]> (deltaP157D, _t157E);
    vec3 _t1580 = extractFemItem(RefPos(MeshPos), vec3, cmp1569);
    vec3 _t1581 = prim *0036<$[3]> (time1568, deltaP157D);
    vec3 newPos1582 = prim +0017<$[3]> (_t1580, _t1581);
    continue;
  }
  string _t15E4 = "Took stupid way out!\n";
  print (_t15E4);
  vec3 _t15E5;
  vec3 _t16DD = extractFemItem(RefPos(MeshPos), vec3, x1564);
  int _t16DE = extractFemItem(CellIndex(MeshPos), int, x1564);
  Femdata: Mesh _t16DF = extractFem(x1564, Mesh);
  vec3 _t16E0;
  field(3)[3] _t16E1 = femField(_t16DF,_t16DE,field(3)[3],Transform,);
  vec3 _t16E2 = prim @00A5<#∞; %3; $[3]> (_t16E1, _t16DD);
  _t16E0 = _t16E2;
  _t15E5 = _t16E0;
  vec3 _t15E6 = prim +0017<$[3]> (_t15E5, dPos1565);
  cmp1569 = func findPos041E (meshData03FD, _t15E6);
  return cmp1569;
}
globalInit {
  int _t0401 = 0;
  int _t03FF = 1;
  int _t0403 = extractFemItem(NumCell(Mesh), int, meshData03FD);
  int _t0402 = prim -0024 (_t0403, _t03FF);
  int[] _t0406 = prim $range01C3 (_t0401, _t0402);
  Femdata: MeshCell[] _t0407 = {};
  foreach _t0405 in _t0406 {
    Femdata: MeshCell _t0408 = loadFem(MeshCell, meshData03FD, _t0405);
    _t0407 = prim @0010<Femdata: MeshCell> (_t0407, _t0408);
  }
  space0409 = loadFem(Space, 0space0409_intermedateGlobal040A, meshData03FD);
  data040B = loadFem(FemFunc, 0data040B_intermedateGlobal040C, space0409);
  Femdata: Space _t1556 = extractFem(data040B, Space);
  Femdata: Space _t1557 = extractFem(data040B, Space);
  Femdata: Mesh _t1558 = extractFem(_t1557, Mesh);
  field(3)[3] _t1559 = femField(data040B,_t1558,field(3)[3],refField,findPos041E );
  Femdata: Space _t155A = extractFem(data040B, Space);
  Femdata: Mesh _t155B = extractFem(_t155A, Mesh);
  Femdata: Space _t155C = extractFem(data040B, Space);
  Femdata: Mesh _t155D = extractFem(_t155C, Mesh);
  Femdata: Space _t155E = extractFem(data040B, Space);
  Femdata: Mesh _t155F = extractFem(_t155E, Mesh);
  field(3)[3] _t1560 = femField(_t155B,_t155F,field(3)[3],InvTransform,findPos041E );
  F1561 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t1559, _t1560);
}
strand gg (vec3 startPos15FF) {
  output vec3[] stream1600;
  output vec3[] newStream1603;
  int step1606;
  Femdata: MeshPos cPos1607;
  vec3 altCPos1608;
  vec3 startPos1741;
  {
    vec3[0] _t1601 = {};
    vec3[] _t1602 = (vec3[])_t1601;
    stream1600 = _t1602;
    vec3[0] _t1604 = {};
    vec3[] _t1605 = (vec3[])_t1604;
    newStream1603 = _t1605;
    step1606 = 0;
    cPos1607 = func findPos041E (meshData03FD, startPos15FF);
    altCPos1608 = startPos15FF;
    startPos1741 = startPos15FF;
  }
  update
  {
    int _t1609 = 0;
    bool _t160A = prim ==0082 (step1606, _t1609);
    if _t160A {
      bool _t160B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      if _t160B {
        vec3 rp160C = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
        real _t160D = rp160C[0];
        real _t160E = 0.1e-5;
        bool _t160F = prim <=007C (_t160D, _t160E);
        if _t160F {
          stabilize;
        }
        real _t1610 = rp160C[1];
        real _t1611 = 0.1e-5;
        bool _t1612 = prim <=007C (_t1610, _t1611);
        if _t1612 {
          stabilize;
        }
        real _t1613 = rp160C[2];
        real _t1614 = 0.1e-5;
        bool _t1615 = prim <=007C (_t1613, _t1614);
        if _t1615 {
          stabilize;
        }
        real _t1616 = 0.1e1;
        real _t1617 = 0.1e1;
        real _t1618 = 0.1e1;
        vec3 _t1619 = [_t1616, _t1617, _t1618];
        real r161A = prim •00CE<$[3]; $[3]; $[]> (_t1619, rp160C);
        real _t161B = 0.9999999e0;
        bool _t161C = prim <=007C (_t161B, r161A);
        if _t161C {
          stabilize;
        }
      }
    }
    bool _t161D = extractFemItem(Valid(MeshPos), bool, cPos1607);
    Femdata: MeshPos _t161E = func findPos041E (meshData03FD, altCPos1608);
    bool _t161F = extractFemItem(Valid(MeshPos), bool, _t161E);
    bool _t1620 = prim !=0085 (_t161D, _t161F);
    if _t1620 {
      string _t1621 = "ERG:Warning of validity startPos:";
      string _t1622 = "\n";
      print (_t1621, startPos1741, _t1622);
    }
    bool _t1623;
    bool _t1624 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    bool _t1625 = prim !00BC (_t1624);
    if _t1625 {
      _t1623 = true;
    } else {
      bool _t1626;
      Femdata: MeshPos _t1627 = func findPos041E (meshData03FD, altCPos1608);
      bool _t1628 = extractFemItem(Valid(MeshPos), bool, _t1627);
      bool _t1629 = prim !00BC (_t1628);
      if _t1629 {
        _t1626 = true;
      } else {
        _t1626 = prim ==0082 (step1606, stepMax0411);
      }
      _t1623 = _t1626;
    }
    if _t1623 {
      string _t162A = "Went off the mesh\?";
      bool _t162B = extractFemItem(Valid(MeshPos), bool, cPos1607);
      bool _t162C = prim !00BC (_t162B);
      string _t162D = " and ";
      string _t162E = " and ";
      Femdata: MeshPos _t162F = func findPos041E (meshData03FD, altCPos1608);
      bool _t1630 = extractFemItem(Valid(MeshPos), bool, _t162F);
      bool _t1631 = prim !00BC (_t1630);
      string _t1632 = "\n";
      print (_t162A, _t162C, _t162D, altCPos1608, _t162E, _t1631, _t1632);
      string _t1633 = "Pos is:";
      vec3 _t1634 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1635 = "\n";
      print (_t1633, _t1634, _t1635);
      string _t1636 = "\n";
      string _t1637 = "\n";
      print (stream1600, _t1636, newStream1603, _t1637);
      stabilize;
    }
    vec3 _t1638;
    vec3 _t173B = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
    int _t173C = extractFemItem(CellIndex(MeshPos), int, cPos1607);
    Femdata: Mesh _t173D = extractFem(cPos1607, Mesh);
    vec3 _t173E;
    field(3)[3] _t173F = femField(_t173D,_t173C,field(3)[3],Transform,);
    vec3 _t1740 = prim @00A5<#∞; %3; $[3]> (_t173F, _t173B);
    _t173E = _t1740;
    _t1638 = _t173E;
    vec3[1] _t1639 = {_t1638};
    vec3[] _t163A = (vec3[])_t1639;
    stream1600 = prim @0014<vec3> (stream1600, _t163A);
    vec3[1] _t163B = {altCPos1608};
    vec3[] _t163C = (vec3[])_t163B;
    newStream1603 = prim @0014<vec3> (newStream1603, _t163C);
    vec3 _t163D;
    vec3 _t1735 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
    int _t1736 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
    Femdata: Mesh _t1737 = extractFem(cPos1607, Mesh);
    vec3 _t1738;
    field(3)[3] _t1739 = femField(_t1737,_t1736,field(3)[3],Transform,);
    vec3 _t173A = prim @00A5<#∞; %3; $[3]> (_t1739, _t1735);
    _t1738 = _t173A;
    _t163D = _t1738;
    vec3 _t163E = prim -0026<$[3]> (_t163D, altCPos1608);
    real _t163F = prim |()|00B5<$[3]> (_t163E);
    real _t1640 = 0.1e-5;
    bool _t1641 = prim >0080 (_t163F, _t1640);
    if _t1641 {
      string _t1642 = "ERG:Error in tracing 1: At step:";
      string _t1643 = " with particle:";
      string _t1644 = "\n";
      print (_t1642, step1606, _t1643, startPos1741, _t1644);
      string _t1645 = "Poses are:";
      vec3 _t1646;
      vec3 _t172F = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      int _t1730 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: Mesh _t1731 = extractFem(cPos1607, Mesh);
      vec3 _t1732;
      field(3)[3] _t1733 = femField(_t1731,_t1730,field(3)[3],Transform,);
      vec3 _t1734 = prim @00A5<#∞; %3; $[3]> (_t1733, _t172F);
      _t1732 = _t1734;
      _t1646 = _t1732;
      string _t1647 = "\n";
      print (_t1645, _t1646, altCPos1608, _t1647);
      string _t1648 = "Cells are:";
      Femdata: Mesh _t1649 = extractFem(cPos1607, Mesh);
      int _t164A = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t164B = loadFem(MeshCell, _t1649, _t164A);
      string _t164C = " and ";
      Femdata: MeshPos _t164D = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t164E = extractFem(_t164D, Mesh);
      Femdata: MeshPos _t164F = func findPos041E (meshData03FD, altCPos1608);
      int _t1650 = extractFemItem(CellIndex(MeshPos), int, _t164F);
      Femdata: MeshCell _t1651 = loadFem(MeshCell, _t164E, _t1650);
      string _t1652 = "\n";
      print (_t1648, _t164B, _t164C, _t1651, _t1652);
      string _t1653 = "Ref poses are:";
      vec3 _t1654 = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      string _t1655 = " and ";
      Femdata: MeshPos _t1656 = func findPos041E (meshData03FD, altCPos1608);
      vec3 _t1657 = extractFemItem(RefPos(MeshPos), vec3, _t1656);
      string _t1658 = "\n";
      print (_t1653, _t1654, _t1655, _t1657, _t1658);
      stabilize;
    } else {
      string _t1659 = "fine in cell 1:";
      Femdata: Mesh _t165A = extractFem(cPos1607, Mesh);
      int _t165B = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t165C = loadFem(MeshCell, _t165A, _t165B);
      string _t165D = "\n";
      print (_t1659, _t165C, _t165D);
    }
    real _t165E = 0.5e0;
    real _t165F = prim *0034 (_t165E, stepSize0410);
    vec3 _t1660 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    vec3 _t1661 = prim *0036<$[3]> (_t165F, _t1660);
    vec3 _t1662 = prim @00A5<#∞; %3; $[3]> (F1561, altCPos1608);
    real _t1663 = prim |()|00B5<$[3]> (_t1662);
    vec3 altUp11664 = prim /0057<$[3]> (_t1661, _t1663);
    real _t1665 = 0.5e0;
    real _t1666 = prim *0034 (_t1665, stepSize0410);
    vec3 _t1667;
    bool _t1717 = extractFemItem(Valid(MeshPos), bool, cPos1607);
    if _t1717 {
      Femdata: Mesh _t1718 = extractFem(cPos1607, Mesh);
      int _t1719 = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell c171A = loadFem(MeshCell, _t1718, _t1719);
      vec3 ref171B = extractFemItem(RefPos(MeshPos), vec3, cPos1607);
      Femdata: FuncCell _t171C;
      int _t171D = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t171E = loadFem(FuncCell, data040B, _t171D);
      _t171C = _t171E;
      Femdata: FemFunc _t171F = extractFem(_t171C, FemFunc);
      Femdata: FuncCell _t1720;
      int _t1721 = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t1722 = loadFem(FuncCell, data040B, _t1721);
      _t1720 = _t1722;
      Femdata: FemFunc _t1723 = extractFem(_t1720, FemFunc);
      Femdata: Space _t1724 = extractFem(_t1723, Space);
      Femdata: FuncCell _t1725;
      int _t1726 = extractFemItem(CellIndex(MeshCell), int, c171A);
      Femdata: FuncCell _t1727 = loadFem(FuncCell, data040B, _t1726);
      _t1725 = _t1727;
      int _t1728 = extractFemItem(CellIndex(FuncCell), int, _t1725);
      field(3)[3] _t1729 = femField(_t171F,_t1728,field(3)[3],refField,);
      vec3 val172A = prim @00A5<#∞; %3; $[3]> (_t1729, ref171B);
      real _t172B = prim |()|00B5<$[3]> (val172A);
      vec3 _t172C = prim /0057<$[3]> (val172A, _t172B);
      _t1667 = _t172C;
    } else {
      string _t172D = "QWE:Eval at 0\n";
      print (_t172D);
      vec3 _t172E = prim $zero01BB<$[3]> ();
      _t1667 = _t172E;
    }
    vec3 up11668 = prim *0036<$[3]> (_t1666, _t1667);
    real _t1669 = 0.5e0;
    real _t166A = prim *0034 (_t1669, stepSize0410);
    vec3 _t166B;
    vec3 _t1715 = prim -0026<$[3]> (altCPos1608, center0413);
    vec3 _t1716 = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t1715);
    _t166B = _t1716;
    vec3 _t166C = prim *0036<$[3]> (_t166A, _t166B);
    vec3 _t166D;
    vec3 _t1713 = prim -0026<$[3]> (altCPos1608, center0413);
    vec3 _t1714 = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t1713);
    _t166D = _t1714;
    real _t166E = prim |()|00B5<$[3]> (_t166D);
    vec3 upCorrect1166F = prim /0057<$[3]> (_t166C, _t166E);
    bool _t1670;
    vec3 _t1671 = prim -0026<$[3]> (up11668, upCorrect1166F);
    real _t1672 = prim |()|00B5<$[3]> (_t1671);
    real _t1673 = 0.1e-5;
    bool _t1674 = prim >0080 (_t1672, _t1673);
    if _t1674 {
      _t1670 = true;
    } else {
      vec3 _t1675 = prim -0026<$[3]> (up11668, altUp11664);
      real _t1676 = prim |()|00B5<$[3]> (_t1675);
      real _t1677 = 0.1e-5;
      _t1670 = prim >0080 (_t1676, _t1677);
    }
    if _t1670 {
      string _t1678 = "ERG:Error in evaluation on pos 1:";
      string _t1679 = "\n";
      print (_t1678, startPos1741, _t1679);
    }
    Femdata: MeshPos intermed167A = func fn_2FB1563 (cPos1607, up11668);
    vec3 altIntermed167B = prim +0017<$[3]> (altCPos1608, altUp11664);
    bool _t167C = extractFemItem(Valid(MeshPos), bool, intermed167A);
    Femdata: MeshPos _t167D = func findPos041E (meshData03FD, altIntermed167B);
    bool _t167E = extractFemItem(Valid(MeshPos), bool, _t167D);
    bool _t167F = prim !=0085 (_t167C, _t167E);
    if _t167F {
      string _t1680 = "ERG:Warning of validity intermed";
      string _t1681 = "\n";
      print (_t1680, startPos1741, _t1681);
      string _t1682 = "Real location:";
      string _t1683 = "\n";
      print (_t1682, altIntermed167B, _t1683);
      string _t1684 = "Cell change: ";
      Femdata: MeshPos _t1685 = func findPos041E (meshData03FD, altCPos1608);
      Femdata: Mesh _t1686 = extractFem(_t1685, Mesh);
      Femdata: MeshPos _t1687 = func findPos041E (meshData03FD, altCPos1608);
      int _t1688 = extractFemItem(CellIndex(MeshPos), int, _t1687);
      Femdata: MeshCell _t1689 = loadFem(MeshCell, _t1686, _t1688);
      string _t168A = " to ";
      Femdata: MeshPos _t168B = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t168C = extractFem(_t168B, Mesh);
      Femdata: MeshPos _t168D = func findPos041E (meshData03FD, altIntermed167B);
      int _t168E = extractFemItem(CellIndex(MeshPos), int, _t168D);
      Femdata: MeshCell _t168F = loadFem(MeshCell, _t168C, _t168E);
      string _t1690 = "\n";
      print (_t1684, _t1689, _t168A, _t168F, _t1690);
    }
    bool _t1691;
    bool _t1692 = extractFemItem(Valid(MeshPos), bool, intermed167A);
    bool _t1693 = prim !00BC (_t1692);
    if _t1693 {
      _t1691 = true;
    } else {
      Femdata: MeshPos _t1694 = func findPos041E (meshData03FD, altIntermed167B);
      bool _t1695 = extractFemItem(Valid(MeshPos), bool, _t1694);
      _t1691 = prim !00BC (_t1695);
    }
    if _t1691 {
      string _t1696 = "Went off the mesh\?";
      bool _t1697 = extractFemItem(Valid(MeshPos), bool, intermed167A);
      bool _t1698 = prim !00BC (_t1697);
      string _t1699 = " and ";
      string _t169A = " and ";
      Femdata: MeshPos _t169B = func findPos041E (meshData03FD, altIntermed167B);
      bool _t169C = extractFemItem(Valid(MeshPos), bool, _t169B);
      bool _t169D = prim !00BC (_t169C);
      string _t169E = "\n";
      print (_t1696, _t1698, _t1699, altIntermed167B, _t169A, _t169D, _t169E);
      stabilize;
    }
    vec3 _t169F;
    vec3 _t170D = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
    int _t170E = extractFemItem(CellIndex(MeshPos), int, intermed167A);
    Femdata: Mesh _t170F = extractFem(intermed167A, Mesh);
    vec3 _t1710;
    field(3)[3] _t1711 = femField(_t170F,_t170E,field(3)[3],Transform,);
    vec3 _t1712 = prim @00A5<#∞; %3; $[3]> (_t1711, _t170D);
    _t1710 = _t1712;
    _t169F = _t1710;
    vec3 _t16A0 = prim -0026<$[3]> (_t169F, altIntermed167B);
    real _t16A1 = prim |()|00B5<$[3]> (_t16A0);
    real _t16A2 = 0.1e-5;
    bool _t16A3 = prim >0080 (_t16A1, _t16A2);
    if _t16A3 {
      string _t16A4 = "ERG:Error in tracing 2: At step:";
      string _t16A5 = " with particle:";
      string _t16A6 = "\n";
      print (_t16A4, step1606, _t16A5, startPos1741, _t16A6);
      string _t16A7 = "Poses are:";
      vec3 _t16A8;
      vec3 _t1707 = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
      int _t1708 = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: Mesh _t1709 = extractFem(intermed167A, Mesh);
      vec3 _t170A;
      field(3)[3] _t170B = femField(_t1709,_t1708,field(3)[3],Transform,);
      vec3 _t170C = prim @00A5<#∞; %3; $[3]> (_t170B, _t1707);
      _t170A = _t170C;
      _t16A8 = _t170A;
      string _t16A9 = "\n";
      print (_t16A7, _t16A8, altIntermed167B, _t16A9);
      stabilize;
    } else {
      string _t16AA = "fine in cell 2:";
      Femdata: Mesh _t16AB = extractFem(cPos1607, Mesh);
      int _t16AC = extractFemItem(CellIndex(MeshPos), int, cPos1607);
      Femdata: MeshCell _t16AD = loadFem(MeshCell, _t16AB, _t16AC);
      string _t16AE = "\n";
      print (_t16AA, _t16AD, _t16AE);
    }
    vec3 _t16AF = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    vec3 _t16B0 = prim *0036<$[3]> (stepSize0410, _t16AF);
    vec3 _t16B1 = prim @00A5<#∞; %3; $[3]> (F1561, altIntermed167B);
    real _t16B2 = prim |()|00B5<$[3]> (_t16B1);
    vec3 altUp216B3 = prim /0057<$[3]> (_t16B0, _t16B2);
    vec3 _t16B4;
    bool _t16EF = extractFemItem(Valid(MeshPos), bool, intermed167A);
    if _t16EF {
      Femdata: Mesh _t16F0 = extractFem(intermed167A, Mesh);
      int _t16F1 = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell c16F2 = loadFem(MeshCell, _t16F0, _t16F1);
      vec3 ref16F3 = extractFemItem(RefPos(MeshPos), vec3, intermed167A);
      Femdata: FuncCell _t16F4;
      int _t16F5 = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16F6 = loadFem(FuncCell, data040B, _t16F5);
      _t16F4 = _t16F6;
      Femdata: FemFunc _t16F7 = extractFem(_t16F4, FemFunc);
      Femdata: FuncCell _t16F8;
      int _t16F9 = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16FA = loadFem(FuncCell, data040B, _t16F9);
      _t16F8 = _t16FA;
      Femdata: FemFunc _t16FB = extractFem(_t16F8, FemFunc);
      Femdata: Space _t16FC = extractFem(_t16FB, Space);
      Femdata: FuncCell _t16FD;
      int _t16FE = extractFemItem(CellIndex(MeshCell), int, c16F2);
      Femdata: FuncCell _t16FF = loadFem(FuncCell, data040B, _t16FE);
      _t16FD = _t16FF;
      int _t1700 = extractFemItem(CellIndex(FuncCell), int, _t16FD);
      field(3)[3] _t1701 = femField(_t16F7,_t1700,field(3)[3],refField,);
      vec3 val1702 = prim @00A5<#∞; %3; $[3]> (_t1701, ref16F3);
      real _t1703 = prim |()|00B5<$[3]> (val1702);
      vec3 _t1704 = prim /0057<$[3]> (val1702, _t1703);
      _t16B4 = _t1704;
    } else {
      string _t1705 = "QWE:Eval at 0\n";
      print (_t1705);
      vec3 _t1706 = prim $zero01BB<$[3]> ();
      _t16B4 = _t1706;
    }
    vec3 up216B5 = prim *0036<$[3]> (stepSize0410, _t16B4);
    vec3 _t16B6;
    vec3 _t16ED = prim -0026<$[3]> (altIntermed167B, center0413);
    vec3 _t16EE = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t16ED);
    _t16B6 = _t16EE;
    vec3 _t16B7 = prim *0036<$[3]> (stepSize0410, _t16B6);
    vec3 _t16B8;
    vec3 _t16EB = prim -0026<$[3]> (altIntermed167B, center0413);
    vec3 _t16EC = prim •00CE<$[3,3]; $[3]; $[3]> (M0412, _t16EB);
    _t16B8 = _t16EC;
    real _t16B9 = prim |()|00B5<$[3]> (_t16B8);
    vec3 upCorrect216BA = prim /0057<$[3]> (_t16B7, _t16B9);
    cPos1607 = func fn_2FB1563 (cPos1607, up216B5);
    altCPos1608 = prim +0017<$[3]> (altCPos1608, altUp216B3);
    int _t16BB = 1;
    step1606 = prim +0015 (step1606, _t16BB);
    bool _t16BC;
    vec3 _t16BD = prim -0026<$[3]> (up216B5, upCorrect216BA);
    real _t16BE = prim |()|00B5<$[3]> (_t16BD);
    real _t16BF = 0.1e-5;
    bool _t16C0 = prim >0080 (_t16BE, _t16BF);
    if _t16C0 {
      _t16BC = true;
    } else {
      vec3 _t16C1 = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16C2 = prim |()|00B5<$[3]> (_t16C1);
      real _t16C3 = 0.1e-4;
      _t16BC = prim >0080 (_t16C2, _t16C3);
    }
    if _t16BC {
      string _t16C4 = "ERG:Error in evaluation on pos 2:";
      string _t16C5 = "\n";
      print (_t16C4, startPos1741, _t16C5);
      string _t16C6 = "The errors are:";
      vec3 _t16C7 = prim -0026<$[3]> (up216B5, upCorrect216BA);
      real _t16C8 = prim |()|00B5<$[3]> (_t16C7);
      string _t16C9 = " and ";
      vec3 _t16CA = prim -0026<$[3]> (up216B5, altUp216B3);
      real _t16CB = prim |()|00B5<$[3]> (_t16CA);
      string _t16CC = "\n";
      print (_t16C6, _t16C8, _t16C9, _t16CB, _t16CC);
      string _t16CD = "The cells are:";
      Femdata: Mesh _t16CE = extractFem(intermed167A, Mesh);
      int _t16CF = extractFemItem(CellIndex(MeshPos), int, intermed167A);
      Femdata: MeshCell _t16D0 = loadFem(MeshCell, _t16CE, _t16CF);
      string _t16D1 = " vs ";
      Femdata: MeshPos _t16D2 = func findPos041E (meshData03FD, altIntermed167B);
      Femdata: Mesh _t16D3 = extractFem(_t16D2, Mesh);
      Femdata: MeshPos _t16D4 = func findPos041E (meshData03FD, altIntermed167B);
      int _t16D5 = extractFemItem(CellIndex(MeshPos), int, _t16D4);
      Femdata: MeshCell _t16D6 = loadFem(MeshCell, _t16D3, _t16D5);
      string _t16D7 = "\n";
      print (_t16CD, _t16D0, _t16D1, _t16D6, _t16D7);
    }
  }
}
collection {
  foreach x16D8 in startPoints040F {
    new gg (x16D8);
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1742 (meshData) = <no-default>
  input 0space0409_intermedateGlobal1743 (space) = <no-default>
  input 0data040B_intermedateGlobal1744 (data) = <no-default>
  input timeSteps1745 (timeSteps) = <default>
  input timeEps1746 (timeEps) = <default>
  input startPoints1747 (startPoints) = <no-default>
  input stepSize1748 (stepSize) = <default>
  input stepMax1749 (stepMax) = <default>
  input M174A (M) = <no-default>
  input center174B (center) = <no-default>
  global femData:Space space175A
  global femData:FemFunc data175B
  global field F175C
## functions
  function femData:MeshPos findPos1803 (femData:Mesh mesh175D#9, tensor[3] pos175E#3) {
    ENTRY1802:  preds = []
      real _t175F#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1761#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1763#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1765#1 = <tensor[3]>[_t175F,_t1761,_t1763];
      int newtonInt1767#0 = 0;
      int cellInt1769#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh175D);
      int _t176B#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh175D);
      int _t176D#1 = 1;
      int numCell176F#0 = ISub(_t176B,_t176D);
      int[] yayCells1771#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh175D,pos175E);
    FOREACH1774:  preds = [ASSIGN1772,NEXT17FE]
      foreach (cellItter1773 in yayCells1771) on exit goto ASSIGN1800
        int cellInt177F#0 = phi(cellInt1769,cellInt177E)
        tensor[3] xn177C#0 = phi(xn1765,xn1798)
      real _t1775#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1777#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1779#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn177B#1 = <tensor[3]>[_t1775,_t1777,_t1779];
      int cellInt177E#4 = cellItter1773;
      field _t1781#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt177E,mesh175D,mesh175D);
      field _t1783#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1781);
      field _t1785#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t1783);
      real _t1787#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1789#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t178B#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] _t178D#1 = <tensor[3]>[_t1787,_t1789,_t178B];
      tensor[3,3] A178F#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1785,_t178D);
      int _t1791#1 = 0;
      int _t1793#1 = 16;
      int[] _t1795#1 = Range(_t1791,_t1793);
    FOREACH1799:  preds = [ASSIGN1796,NEXT17FD]
      foreach (newtonItter1797 in _t1795) on exit goto NEXT17FE
        tensor[3] xn1798#3 = phi(xn177B,xn17A2)
      field _t179A#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt177E,mesh175D,mesh175D);
      field _t179C#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos175E,_t179A);
      field _t179E#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A178F,_t179C);
      tensor[3] delta17A0#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t179E,xn1798);
      tensor[3] xn17A2#6 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1798,delta17A0);
      real _t17A4#1 = 0.1e-7;
      real _t17A6#1 = 0.1e-7;
      real _t17A8#1 = λ(T0[],T1[])<(T0 * T1)> (_t17A4,_t17A6);
      real _t17AA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (delta17A0,delta17A0);
      bool _t17AC#1 = GTE<real>(_t17A8,_t17AA);
      if _t17AC then goto ASSIGN17B0 else goto JOIN17AE
    ASSIGN17B0:  preds = [COND17FC]
      real _t17AF#1 = 0.1e1;
      real _t17B1#1 = 0.1e-7;
      real _t17B3#1 = λ(T0[],T1[])<(T0 + T1)> (_t17AF,_t17B1);
      real _t17B5#1 = 0.1e1;
      real _t17B7#1 = 0.1e1;
      real _t17B9#1 = 0.1e1;
      tensor[3] _t17BB#1 = <tensor[3]>[_t17B5,_t17B7,_t17B9];
      real _t17BD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t17BB,xn17A2);
      bool _t17BF#1 = GT<real>(_t17B3,_t17BD);
      real _t17C1#1 = 0.1e-7;
      real _t17C3#1 = 0.1e-7;
      real _t17C5#1 = 0.1e-7;
      tensor[3] _t17C7#1 = <tensor[3]>[_t17C1,_t17C3,_t17C5];
      tensor[3] _t17C9#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t17C7,xn17A2);
      real _t17CB#1 = TensorIndex<tensor[3],[0]>(_t17C9);
      real _t17CD#1 = -0.e0;
      bool _t17CF#1 = GT<real>(_t17CB,_t17CD);
      real _t17D1#1 = 0.1e-7;
      real _t17D3#1 = 0.1e-7;
      real _t17D5#1 = 0.1e-7;
      tensor[3] _t17D7#1 = <tensor[3]>[_t17D1,_t17D3,_t17D5];
      tensor[3] _t17D9#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t17D7,xn17A2);
      real _t17DB#1 = TensorIndex<tensor[3],[1]>(_t17D9);
      real _t17DD#1 = -0.e0;
      bool _t17DF#1 = GT<real>(_t17DB,_t17DD);
      real _t17E1#1 = 0.1e-7;
      real _t17E3#1 = 0.1e-7;
      real _t17E5#1 = 0.1e-7;
      tensor[3] _t17E7#1 = <tensor[3]>[_t17E1,_t17E3,_t17E5];
      tensor[3] _t17E9#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t17E7,xn17A2);
      real _t17EB#1 = TensorIndex<tensor[3],[2]>(_t17E9);
      real _t17ED#1 = -0.e0;
      bool _t17EF#1 = GT<real>(_t17EB,_t17ED);
      bool _t17F1#1 = BAnd(_t17DF,_t17EF);
      bool _t17F3#1 = BAnd(_t17CF,_t17F1);
      bool _t17F5#1 = BAnd(_t17BF,_t17F3);
      if _t17F5 then goto ASSIGN17F9 else goto JOIN17F7
    ASSIGN17F9:  preds = [COND17FB]
      femData:MeshPos _t17F8#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh175D,cellInt177E,xn17A2,pos175E);
      return _t17F8
      goto JOIN17F7
    JOIN17F7:  preds = [*RETURN(_t17F8)17FA,COND17FB]
      goto JOIN17AE
    JOIN17AE:  preds = [JOIN17F7,COND17FC]
      goto FOREACH1799
    NEXT17FE:  preds = [FOREACH1799]
      goto FOREACH1774
    ASSIGN1800:  preds = [FOREACH1774]
      femData:MeshPos _t17FF#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh175D);
      return _t17FF
}
  function tensor[3] worldPos1814 (femData:MeshPos pos1804#3) {
    ENTRY1813:  preds = []
      tensor[3] _t1805#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(pos1804);
      int _t1807#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos1804);
      femData:Mesh _t1809#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos1804);
      field _t180C#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t1807,_t1809,_t1809);
      tensor[3] _t180E#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t180C,_t1805);
      tensor[3] _t1810#1 = _t180E;
      return _t1810
}
  function femData:MeshPos $exitPos23B8 (femData:Mesh mesh1815#10, int cellId1816#8, tensor[3] refPos1817#10, tensor[3] dPos1818#10, real[2] time1819#23) {
    ENTRY23B7:  preds = []
      int _t181A#1 = -1;
      real _t181C#1 = TensorIndex<real[2],[1]>(time1819);
      int _t181E#1 = FloorToInt(_t181C);
      int[2] _t1820#1 = nextCell41821 (_t181E,cellId1816,mesh1815);
      int _t1823#1 = 0;
      int _t1825#1 = Subscript<int[2]>(_t1820,_t1823);
      bool _t1827#1 = NEQ<int>(_t181A,_t1825);
      if _t1827 then goto ASSIGN182B else goto ASSIGN23AD
    ASSIGN182B:  preds = [COND23B5]
      string _t182A#1 = "face ";
      real _t182C#1 = TensorIndex<real[2],[1]>(time1819);
      int _t182E#1 = FloorToInt(_t182C);
      string _t1830#1 = " to ";
      real _t1832#1 = TensorIndex<real[2],[1]>(time1819);
      int _t1834#1 = FloorToInt(_t1832);
      int[2] _t1836#1 = nextCell41821 (_t1834,cellId1816,mesh1815);
      int _t1838#1 = 1;
      int _t183A#1 = Subscript<int[2]>(_t1836,_t1838);
      string _t183C#1 = "\n";
      string _t183E#1 = "got: ";
      real _t1840#1 = 0.1e1;
      real _t1842#1 = 0.e0;
      real _t1844#1 = 0.e0;
      real _t1846#1 = 0.e0;
      tensor[4] _t1848#1 = <tensor[4]>[_t1840,_t1842,_t1844,_t1846];
      real _t184A#1 = 0.e0;
      real _t184C#1 = 0.1e1;
      real _t184E#1 = 0.e0;
      real _t1850#1 = 0.e0;
      tensor[4] _t1852#1 = <tensor[4]>[_t184A,_t184C,_t184E,_t1850];
      real _t1854#1 = 0.e0;
      real _t1856#1 = 0.e0;
      real _t1858#1 = 0.1e1;
      real _t185A#1 = 0.e0;
      tensor[4] _t185C#1 = <tensor[4]>[_t1854,_t1856,_t1858,_t185A];
      real _t185E#1 = 0.971445146547e-16;
      real _t1860#1 = 0.e0;
      real _t1862#1 = 0.e0;
      real _t1864#1 = 0.1e1;
      tensor[4] _t1866#1 = <tensor[4]>[_t185E,_t1860,_t1862,_t1864];
      tensor[4,4] _t1868#1 = <tensor[4,4]>[_t1848,_t1852,_t185C,_t1866];
      real _t186A#1 = 0.57735026919e0;
      real _t186C#1 = 0.57735026919e0;
      real _t186E#1 = 0.57735026919e0;
      real _t1870#1 = -0.57735026919e0;
      tensor[4] _t1872#1 = <tensor[4]>[_t186A,_t186C,_t186E,_t1870];
      real _t1874#1 = -0.333333333333e0;
      real _t1876#1 = 0.666666666667e0;
      real _t1878#1 = -0.333333333333e0;
      real _t187A#1 = 0.333333333333e0;
      tensor[4] _t187C#1 = <tensor[4]>[_t1874,_t1876,_t1878,_t187A];
      real _t187E#1 = -0.333333333333e0;
      real _t1880#1 = -0.333333333333e0;
      real _t1882#1 = 0.666666666667e0;
      real _t1884#1 = 0.333333333333e0;
      tensor[4] _t1886#1 = <tensor[4]>[_t187E,_t1880,_t1882,_t1884];
      real _t1888#1 = 0.971445146547e-16;
      real _t188A#1 = 0.e0;
      real _t188C#1 = 0.e0;
      real _t188E#1 = 0.1e1;
      tensor[4] _t1890#1 = <tensor[4]>[_t1888,_t188A,_t188C,_t188E];
      tensor[4,4] _t1892#1 = <tensor[4,4]>[_t1872,_t187C,_t1886,_t1890];
      real _t1894#1 = -0.333333333333e0;
      real _t1896#1 = 0.666666666667e0;
      real _t1898#1 = -0.333333333333e0;
      real _t189A#1 = 0.333333333333e0;
      tensor[4] _t189C#1 = <tensor[4]>[_t1894,_t1896,_t1898,_t189A];
      real _t189E#1 = -0.57735026919e0;
      real _t18A0#1 = -0.57735026919e0;
      real _t18A2#1 = -0.57735026919e0;
      real _t18A4#1 = 0.57735026919e0;
      tensor[4] _t18A6#1 = <tensor[4]>[_t189E,_t18A0,_t18A2,_t18A4];
      real _t18A8#1 = -0.333333333333e0;
      real _t18AA#1 = -0.333333333333e0;
      real _t18AC#1 = 0.666666666667e0;
      real _t18AE#1 = 0.333333333333e0;
      tensor[4] _t18B0#1 = <tensor[4]>[_t18A8,_t18AA,_t18AC,_t18AE];
      real _t18B2#1 = 0.971445146547e-16;
      real _t18B4#1 = 0.e0;
      real _t18B6#1 = 0.e0;
      real _t18B8#1 = 0.1e1;
      tensor[4] _t18BA#1 = <tensor[4]>[_t18B2,_t18B4,_t18B6,_t18B8];
      tensor[4,4] _t18BC#1 = <tensor[4,4]>[_t189C,_t18A6,_t18B0,_t18BA];
      real _t18BE#1 = -0.333333333333e0;
      real _t18C0#1 = 0.666666666667e0;
      real _t18C2#1 = -0.333333333333e0;
      real _t18C4#1 = 0.333333333333e0;
      tensor[4] _t18C6#1 = <tensor[4]>[_t18BE,_t18C0,_t18C2,_t18C4];
      real _t18C8#1 = -0.333333333333e0;
      real _t18CA#1 = -0.333333333333e0;
      real _t18CC#1 = 0.666666666667e0;
      real _t18CE#1 = 0.333333333333e0;
      tensor[4] _t18D0#1 = <tensor[4]>[_t18C8,_t18CA,_t18CC,_t18CE];
      real _t18D2#1 = 0.57735026919e0;
      real _t18D4#1 = 0.57735026919e0;
      real _t18D6#1 = 0.57735026919e0;
      real _t18D8#1 = -0.57735026919e0;
      tensor[4] _t18DA#1 = <tensor[4]>[_t18D2,_t18D4,_t18D6,_t18D8];
      real _t18DC#1 = 0.971445146547e-16;
      real _t18DE#1 = 0.e0;
      real _t18E0#1 = 0.e0;
      real _t18E2#1 = 0.1e1;
      tensor[4] _t18E4#1 = <tensor[4]>[_t18DC,_t18DE,_t18E0,_t18E2];
      tensor[4,4] _t18E6#1 = <tensor[4,4]>[_t18C6,_t18D0,_t18DA,_t18E4];
      tensor[4,4][4] _t18E8#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      real _t18EA#1 = 0.57735026919e0;
      real _t18EC#1 = -0.1e1;
      real _t18EE#1 = -0.1e1;
      real _t18F0#1 = 0.1e1;
      tensor[4] _t18F2#1 = <tensor[4]>[_t18EA,_t18EC,_t18EE,_t18F0];
      real _t18F4#1 = 0.57735026919e0;
      real _t18F6#1 = 0.1e1;
      real _t18F8#1 = 0.e0;
      real _t18FA#1 = 0.e0;
      tensor[4] _t18FC#1 = <tensor[4]>[_t18F4,_t18F6,_t18F8,_t18FA];
      real _t18FE#1 = 0.57735026919e0;
      real _t1900#1 = 0.e0;
      real _t1902#1 = 0.1e1;
      real _t1904#1 = 0.e0;
      tensor[4] _t1906#1 = <tensor[4]>[_t18FE,_t1900,_t1902,_t1904];
      real _t1908#1 = 0.e0;
      real _t190A#1 = 0.e0;
      real _t190C#1 = 0.e0;
      real _t190E#1 = 0.1e1;
      tensor[4] _t1910#1 = <tensor[4]>[_t1908,_t190A,_t190C,_t190E];
      tensor[4,4] _t1912#1 = <tensor[4,4]>[_t18F2,_t18FC,_t1906,_t1910];
      real _t1914#1 = 0.1e1;
      real _t1916#1 = 0.e0;
      real _t1918#1 = 0.e0;
      real _t191A#1 = 0.e0;
      tensor[4] _t191C#1 = <tensor[4]>[_t1914,_t1916,_t1918,_t191A];
      real _t191E#1 = 0.e0;
      real _t1920#1 = 0.1e1;
      real _t1922#1 = 0.e0;
      real _t1924#1 = 0.e0;
      tensor[4] _t1926#1 = <tensor[4]>[_t191E,_t1920,_t1922,_t1924];
      real _t1928#1 = 0.e0;
      real _t192A#1 = 0.e0;
      real _t192C#1 = 0.1e1;
      real _t192E#1 = 0.e0;
      tensor[4] _t1930#1 = <tensor[4]>[_t1928,_t192A,_t192C,_t192E];
      real _t1932#1 = 0.e0;
      real _t1934#1 = 0.e0;
      real _t1936#1 = 0.e0;
      real _t1938#1 = 0.1e1;
      tensor[4] _t193A#1 = <tensor[4]>[_t1932,_t1934,_t1936,_t1938];
      tensor[4,4] _t193C#1 = <tensor[4,4]>[_t191C,_t1926,_t1930,_t193A];
      real _t193E#1 = 0.e0;
      real _t1940#1 = 0.1e1;
      real _t1942#1 = 0.e0;
      real _t1944#1 = 0.e0;
      tensor[4] _t1946#1 = <tensor[4]>[_t193E,_t1940,_t1942,_t1944];
      real _t1948#1 = -0.1e1;
      real _t194A#1 = 0.e0;
      real _t194C#1 = 0.e0;
      real _t194E#1 = 0.e0;
      tensor[4] _t1950#1 = <tensor[4]>[_t1948,_t194A,_t194C,_t194E];
      real _t1952#1 = 0.e0;
      real _t1954#1 = 0.e0;
      real _t1956#1 = 0.1e1;
      real _t1958#1 = 0.e0;
      tensor[4] _t195A#1 = <tensor[4]>[_t1952,_t1954,_t1956,_t1958];
      real _t195C#1 = 0.e0;
      real _t195E#1 = 0.e0;
      real _t1960#1 = 0.e0;
      real _t1962#1 = 0.1e1;
      tensor[4] _t1964#1 = <tensor[4]>[_t195C,_t195E,_t1960,_t1962];
      tensor[4,4] _t1966#1 = <tensor[4,4]>[_t1946,_t1950,_t195A,_t1964];
      real _t1968#1 = 0.e0;
      real _t196A#1 = 0.1e1;
      real _t196C#1 = 0.e0;
      real _t196E#1 = 0.e0;
      tensor[4] _t1970#1 = <tensor[4]>[_t1968,_t196A,_t196C,_t196E];
      real _t1972#1 = 0.e0;
      real _t1974#1 = 0.e0;
      real _t1976#1 = 0.1e1;
      real _t1978#1 = 0.e0;
      tensor[4] _t197A#1 = <tensor[4]>[_t1972,_t1974,_t1976,_t1978];
      real _t197C#1 = 0.1e1;
      real _t197E#1 = 0.e0;
      real _t1980#1 = 0.e0;
      real _t1982#1 = 0.e0;
      tensor[4] _t1984#1 = <tensor[4]>[_t197C,_t197E,_t1980,_t1982];
      real _t1986#1 = 0.e0;
      real _t1988#1 = 0.e0;
      real _t198A#1 = 0.e0;
      real _t198C#1 = 0.1e1;
      tensor[4] _t198E#1 = <tensor[4]>[_t1986,_t1988,_t198A,_t198C];
      tensor[4,4] _t1990#1 = <tensor[4,4]>[_t1970,_t197A,_t1984,_t198E];
      tensor[4,4][4] _t1992#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      real _t1994#1 = -0.1e1;
      real _t1996#1 = -0.57735026919e0;
      real _t1998#1 = -0.1e1;
      real _t199A#1 = 0.1e1;
      tensor[4] _t199C#1 = <tensor[4]>[_t1994,_t1996,_t1998,_t199A];
      real _t199E#1 = 0.1e1;
      real _t19A0#1 = -0.57735026919e0;
      real _t19A2#1 = 0.e0;
      real _t19A4#1 = 0.e0;
      tensor[4] _t19A6#1 = <tensor[4]>[_t199E,_t19A0,_t19A2,_t19A4];
      real _t19A8#1 = 0.e0;
      real _t19AA#1 = -0.57735026919e0;
      real _t19AC#1 = 0.1e1;
      real _t19AE#1 = 0.e0;
      tensor[4] _t19B0#1 = <tensor[4]>[_t19A8,_t19AA,_t19AC,_t19AE];
      real _t19B2#1 = 0.e0;
      real _t19B4#1 = 0.e0;
      real _t19B6#1 = 0.e0;
      real _t19B8#1 = 0.1e1;
      tensor[4] _t19BA#1 = <tensor[4]>[_t19B2,_t19B4,_t19B6,_t19B8];
      tensor[4,4] _t19BC#1 = <tensor[4,4]>[_t199C,_t19A6,_t19B0,_t19BA];
      real _t19BE#1 = 0.e0;
      real _t19C0#1 = -0.1e1;
      real _t19C2#1 = 0.e0;
      real _t19C4#1 = 0.e0;
      tensor[4] _t19C6#1 = <tensor[4]>[_t19BE,_t19C0,_t19C2,_t19C4];
      real _t19C8#1 = 0.1e1;
      real _t19CA#1 = 0.e0;
      real _t19CC#1 = 0.e0;
      real _t19CE#1 = 0.e0;
      tensor[4] _t19D0#1 = <tensor[4]>[_t19C8,_t19CA,_t19CC,_t19CE];
      real _t19D2#1 = 0.e0;
      real _t19D4#1 = 0.e0;
      real _t19D6#1 = 0.1e1;
      real _t19D8#1 = 0.e0;
      tensor[4] _t19DA#1 = <tensor[4]>[_t19D2,_t19D4,_t19D6,_t19D8];
      real _t19DC#1 = 0.e0;
      real _t19DE#1 = 0.e0;
      real _t19E0#1 = 0.e0;
      real _t19E2#1 = 0.1e1;
      tensor[4] _t19E4#1 = <tensor[4]>[_t19DC,_t19DE,_t19E0,_t19E2];
      tensor[4,4] _t19E6#1 = <tensor[4,4]>[_t19C6,_t19D0,_t19DA,_t19E4];
      real _t19E8#1 = 0.1e1;
      real _t19EA#1 = 0.e0;
      real _t19EC#1 = 0.e0;
      real _t19EE#1 = 0.e0;
      tensor[4] _t19F0#1 = <tensor[4]>[_t19E8,_t19EA,_t19EC,_t19EE];
      real _t19F2#1 = 0.e0;
      real _t19F4#1 = 0.1e1;
      real _t19F6#1 = 0.e0;
      real _t19F8#1 = 0.e0;
      tensor[4] _t19FA#1 = <tensor[4]>[_t19F2,_t19F4,_t19F6,_t19F8];
      real _t19FC#1 = 0.e0;
      real _t19FE#1 = 0.e0;
      real _t1A00#1 = 0.1e1;
      real _t1A02#1 = 0.e0;
      tensor[4] _t1A04#1 = <tensor[4]>[_t19FC,_t19FE,_t1A00,_t1A02];
      real _t1A06#1 = 0.e0;
      real _t1A08#1 = 0.e0;
      real _t1A0A#1 = 0.e0;
      real _t1A0C#1 = 0.1e1;
      tensor[4] _t1A0E#1 = <tensor[4]>[_t1A06,_t1A08,_t1A0A,_t1A0C];
      tensor[4,4] _t1A10#1 = <tensor[4,4]>[_t19F0,_t19FA,_t1A04,_t1A0E];
      real _t1A12#1 = 0.1e1;
      real _t1A14#1 = 0.e0;
      real _t1A16#1 = 0.e0;
      real _t1A18#1 = 0.e0;
      tensor[4] _t1A1A#1 = <tensor[4]>[_t1A12,_t1A14,_t1A16,_t1A18];
      real _t1A1C#1 = 0.e0;
      real _t1A1E#1 = 0.e0;
      real _t1A20#1 = 0.1e1;
      real _t1A22#1 = 0.e0;
      tensor[4] _t1A24#1 = <tensor[4]>[_t1A1C,_t1A1E,_t1A20,_t1A22];
      real _t1A26#1 = 0.e0;
      real _t1A28#1 = -0.1e1;
      real _t1A2A#1 = 0.e0;
      real _t1A2C#1 = 0.e0;
      tensor[4] _t1A2E#1 = <tensor[4]>[_t1A26,_t1A28,_t1A2A,_t1A2C];
      real _t1A30#1 = 0.e0;
      real _t1A32#1 = 0.e0;
      real _t1A34#1 = 0.e0;
      real _t1A36#1 = 0.1e1;
      tensor[4] _t1A38#1 = <tensor[4]>[_t1A30,_t1A32,_t1A34,_t1A36];
      tensor[4,4] _t1A3A#1 = <tensor[4,4]>[_t1A1A,_t1A24,_t1A2E,_t1A38];
      tensor[4,4][4] _t1A3C#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t1A10,_t1A3A};
      real _t1A3E#1 = -0.1e1;
      real _t1A40#1 = -0.1e1;
      real _t1A42#1 = 0.57735026919e0;
      real _t1A44#1 = 0.1e1;
      tensor[4] _t1A46#1 = <tensor[4]>[_t1A3E,_t1A40,_t1A42,_t1A44];
      real _t1A48#1 = 0.1e1;
      real _t1A4A#1 = 0.e0;
      real _t1A4C#1 = 0.57735026919e0;
      real _t1A4E#1 = 0.e0;
      tensor[4] _t1A50#1 = <tensor[4]>[_t1A48,_t1A4A,_t1A4C,_t1A4E];
      real _t1A52#1 = 0.e0;
      real _t1A54#1 = 0.1e1;
      real _t1A56#1 = 0.57735026919e0;
      real _t1A58#1 = 0.e0;
      tensor[4] _t1A5A#1 = <tensor[4]>[_t1A52,_t1A54,_t1A56,_t1A58];
      real _t1A5C#1 = 0.e0;
      real _t1A5E#1 = 0.e0;
      real _t1A60#1 = 0.e0;
      real _t1A62#1 = 0.1e1;
      tensor[4] _t1A64#1 = <tensor[4]>[_t1A5C,_t1A5E,_t1A60,_t1A62];
      tensor[4,4] _t1A66#1 = <tensor[4,4]>[_t1A46,_t1A50,_t1A5A,_t1A64];
      real _t1A68#1 = 0.e0;
      real _t1A6A#1 = 0.e0;
      real _t1A6C#1 = 0.1e1;
      real _t1A6E#1 = 0.e0;
      tensor[4] _t1A70#1 = <tensor[4]>[_t1A68,_t1A6A,_t1A6C,_t1A6E];
      real _t1A72#1 = 0.1e1;
      real _t1A74#1 = 0.e0;
      real _t1A76#1 = 0.e0;
      real _t1A78#1 = 0.e0;
      tensor[4] _t1A7A#1 = <tensor[4]>[_t1A72,_t1A74,_t1A76,_t1A78];
      real _t1A7C#1 = 0.e0;
      real _t1A7E#1 = 0.1e1;
      real _t1A80#1 = 0.e0;
      real _t1A82#1 = 0.e0;
      tensor[4] _t1A84#1 = <tensor[4]>[_t1A7C,_t1A7E,_t1A80,_t1A82];
      real _t1A86#1 = 0.e0;
      real _t1A88#1 = 0.e0;
      real _t1A8A#1 = 0.e0;
      real _t1A8C#1 = 0.1e1;
      tensor[4] _t1A8E#1 = <tensor[4]>[_t1A86,_t1A88,_t1A8A,_t1A8C];
      tensor[4,4] _t1A90#1 = <tensor[4,4]>[_t1A70,_t1A7A,_t1A84,_t1A8E];
      real _t1A92#1 = 0.1e1;
      real _t1A94#1 = 0.e0;
      real _t1A96#1 = 0.e0;
      real _t1A98#1 = 0.e0;
      tensor[4] _t1A9A#1 = <tensor[4]>[_t1A92,_t1A94,_t1A96,_t1A98];
      real _t1A9C#1 = 0.e0;
      real _t1A9E#1 = 0.e0;
      real _t1AA0#1 = -0.1e1;
      real _t1AA2#1 = 0.e0;
      tensor[4] _t1AA4#1 = <tensor[4]>[_t1A9C,_t1A9E,_t1AA0,_t1AA2];
      real _t1AA6#1 = 0.e0;
      real _t1AA8#1 = 0.1e1;
      real _t1AAA#1 = 0.e0;
      real _t1AAC#1 = 0.e0;
      tensor[4] _t1AAE#1 = <tensor[4]>[_t1AA6,_t1AA8,_t1AAA,_t1AAC];
      real _t1AB0#1 = 0.e0;
      real _t1AB2#1 = 0.e0;
      real _t1AB4#1 = 0.e0;
      real _t1AB6#1 = 0.1e1;
      tensor[4] _t1AB8#1 = <tensor[4]>[_t1AB0,_t1AB2,_t1AB4,_t1AB6];
      tensor[4,4] _t1ABA#1 = <tensor[4,4]>[_t1A9A,_t1AA4,_t1AAE,_t1AB8];
      real _t1ABC#1 = 0.1e1;
      real _t1ABE#1 = 0.e0;
      real _t1AC0#1 = 0.e0;
      real _t1AC2#1 = 0.e0;
      tensor[4] _t1AC4#1 = <tensor[4]>[_t1ABC,_t1ABE,_t1AC0,_t1AC2];
      real _t1AC6#1 = 0.e0;
      real _t1AC8#1 = 0.1e1;
      real _t1ACA#1 = 0.e0;
      real _t1ACC#1 = 0.e0;
      tensor[4] _t1ACE#1 = <tensor[4]>[_t1AC6,_t1AC8,_t1ACA,_t1ACC];
      real _t1AD0#1 = 0.e0;
      real _t1AD2#1 = 0.e0;
      real _t1AD4#1 = 0.1e1;
      real _t1AD6#1 = 0.e0;
      tensor[4] _t1AD8#1 = <tensor[4]>[_t1AD0,_t1AD2,_t1AD4,_t1AD6];
      real _t1ADA#1 = 0.e0;
      real _t1ADC#1 = 0.e0;
      real _t1ADE#1 = 0.e0;
      real _t1AE0#1 = 0.1e1;
      tensor[4] _t1AE2#1 = <tensor[4]>[_t1ADA,_t1ADC,_t1ADE,_t1AE0];
      tensor[4,4] _t1AE4#1 = <tensor[4,4]>[_t1AC4,_t1ACE,_t1AD8,_t1AE2];
      tensor[4,4][4] _t1AE6#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t1AE4};
      tensor[4,4][4][4] _t1AE8#1 = <tensor[4,4][4][4]>{_t18E8,_t1992,_t1A3C,_t1AE6};
      real _t1AEA#1 = TensorIndex<real[2],[1]>(time1819);
      int _t1AEC#1 = FloorToInt(_t1AEA);
      tensor[4,4][4] _t1AEE#1 = Subscript<tensor[4,4][4][4]>(_t1AE8,_t1AEC);
      real _t1AF0#1 = TensorIndex<real[2],[1]>(time1819);
      int _t1AF2#1 = FloorToInt(_t1AF0);
      int[2] _t1AF4#1 = nextCell41821 (_t1AF2,cellId1816,mesh1815);
      int _t1AF6#1 = 1;
      int _t1AF8#1 = Subscript<int[2]>(_t1AF4,_t1AF6);
      tensor[4,4] _t1AFA#1 = Subscript<tensor[4,4][4]>(_t1AEE,_t1AF8);
      string _t1AFC#1 = "\n";
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t182A,_t182E,_t1830,_t183A,_t183C,_t183E,_t1AFA,_t1AFC);
      real _t1AFF#1 = TensorIndex<real[2],[1]>(time1819);
      int _t1B01#1 = FloorToInt(_t1AFF);
      int[2] _t1B03#1 = nextCell41821 (_t1B01,cellId1816,mesh1815);
      int _t1B05#1 = 0;
      int _t1B07#1 = Subscript<int[2]>(_t1B03,_t1B05);
      real _t1B09#1 = 0.1e1;
      real _t1B0B#1 = 0.e0;
      real _t1B0D#1 = 0.e0;
      real _t1B0F#1 = 0.e0;
      tensor[4] _t1B11#1 = <tensor[4]>[_t1B09,_t1B0B,_t1B0D,_t1B0F];
      real _t1B13#1 = 0.e0;
      real _t1B15#1 = 0.1e1;
      real _t1B17#1 = 0.e0;
      real _t1B19#1 = 0.e0;
      tensor[4] _t1B1B#1 = <tensor[4]>[_t1B13,_t1B15,_t1B17,_t1B19];
      real _t1B1D#1 = 0.e0;
      real _t1B1F#1 = 0.e0;
      real _t1B21#1 = 0.1e1;
      real _t1B23#1 = 0.e0;
      tensor[4] _t1B25#1 = <tensor[4]>[_t1B1D,_t1B1F,_t1B21,_t1B23];
      real _t1B27#1 = 0.971445146547e-16;
      real _t1B29#1 = 0.e0;
      real _t1B2B#1 = 0.e0;
      real _t1B2D#1 = 0.1e1;
      tensor[4] _t1B2F#1 = <tensor[4]>[_t1B27,_t1B29,_t1B2B,_t1B2D];
      tensor[4,4] _t1B31#1 = <tensor[4,4]>[_t1B11,_t1B1B,_t1B25,_t1B2F];
      real _t1B33#1 = 0.57735026919e0;
      real _t1B35#1 = 0.57735026919e0;
      real _t1B37#1 = 0.57735026919e0;
      real _t1B39#1 = -0.57735026919e0;
      tensor[4] _t1B3B#1 = <tensor[4]>[_t1B33,_t1B35,_t1B37,_t1B39];
      real _t1B3D#1 = -0.333333333333e0;
      real _t1B3F#1 = 0.666666666667e0;
      real _t1B41#1 = -0.333333333333e0;
      real _t1B43#1 = 0.333333333333e0;
      tensor[4] _t1B45#1 = <tensor[4]>[_t1B3D,_t1B3F,_t1B41,_t1B43];
      real _t1B47#1 = -0.333333333333e0;
      real _t1B49#1 = -0.333333333333e0;
      real _t1B4B#1 = 0.666666666667e0;
      real _t1B4D#1 = 0.333333333333e0;
      tensor[4] _t1B4F#1 = <tensor[4]>[_t1B47,_t1B49,_t1B4B,_t1B4D];
      real _t1B51#1 = 0.971445146547e-16;
      real _t1B53#1 = 0.e0;
      real _t1B55#1 = 0.e0;
      real _t1B57#1 = 0.1e1;
      tensor[4] _t1B59#1 = <tensor[4]>[_t1B51,_t1B53,_t1B55,_t1B57];
      tensor[4,4] _t1B5B#1 = <tensor[4,4]>[_t1B3B,_t1B45,_t1B4F,_t1B59];
      real _t1B5D#1 = -0.333333333333e0;
      real _t1B5F#1 = 0.666666666667e0;
      real _t1B61#1 = -0.333333333333e0;
      real _t1B63#1 = 0.333333333333e0;
      tensor[4] _t1B65#1 = <tensor[4]>[_t1B5D,_t1B5F,_t1B61,_t1B63];
      real _t1B67#1 = -0.57735026919e0;
      real _t1B69#1 = -0.57735026919e0;
      real _t1B6B#1 = -0.57735026919e0;
      real _t1B6D#1 = 0.57735026919e0;
      tensor[4] _t1B6F#1 = <tensor[4]>[_t1B67,_t1B69,_t1B6B,_t1B6D];
      real _t1B71#1 = -0.333333333333e0;
      real _t1B73#1 = -0.333333333333e0;
      real _t1B75#1 = 0.666666666667e0;
      real _t1B77#1 = 0.333333333333e0;
      tensor[4] _t1B79#1 = <tensor[4]>[_t1B71,_t1B73,_t1B75,_t1B77];
      real _t1B7B#1 = 0.971445146547e-16;
      real _t1B7D#1 = 0.e0;
      real _t1B7F#1 = 0.e0;
      real _t1B81#1 = 0.1e1;
      tensor[4] _t1B83#1 = <tensor[4]>[_t1B7B,_t1B7D,_t1B7F,_t1B81];
      tensor[4,4] _t1B85#1 = <tensor[4,4]>[_t1B65,_t1B6F,_t1B79,_t1B83];
      real _t1B87#1 = -0.333333333333e0;
      real _t1B89#1 = 0.666666666667e0;
      real _t1B8B#1 = -0.333333333333e0;
      real _t1B8D#1 = 0.333333333333e0;
      tensor[4] _t1B8F#1 = <tensor[4]>[_t1B87,_t1B89,_t1B8B,_t1B8D];
      real _t1B91#1 = -0.333333333333e0;
      real _t1B93#1 = -0.333333333333e0;
      real _t1B95#1 = 0.666666666667e0;
      real _t1B97#1 = 0.333333333333e0;
      tensor[4] _t1B99#1 = <tensor[4]>[_t1B91,_t1B93,_t1B95,_t1B97];
      real _t1B9B#1 = 0.57735026919e0;
      real _t1B9D#1 = 0.57735026919e0;
      real _t1B9F#1 = 0.57735026919e0;
      real _t1BA1#1 = -0.57735026919e0;
      tensor[4] _t1BA3#1 = <tensor[4]>[_t1B9B,_t1B9D,_t1B9F,_t1BA1];
      real _t1BA5#1 = 0.971445146547e-16;
      real _t1BA7#1 = 0.e0;
      real _t1BA9#1 = 0.e0;
      real _t1BAB#1 = 0.1e1;
      tensor[4] _t1BAD#1 = <tensor[4]>[_t1BA5,_t1BA7,_t1BA9,_t1BAB];
      tensor[4,4] _t1BAF#1 = <tensor[4,4]>[_t1B8F,_t1B99,_t1BA3,_t1BAD];
      tensor[4,4][4] _t1BB1#1 = <tensor[4,4][4]>{_t1B31,_t1B5B,_t1B85,_t1BAF};
      real _t1BB3#1 = 0.57735026919e0;
      real _t1BB5#1 = -0.1e1;
      real _t1BB7#1 = -0.1e1;
      real _t1BB9#1 = 0.1e1;
      tensor[4] _t1BBB#1 = <tensor[4]>[_t1BB3,_t1BB5,_t1BB7,_t1BB9];
      real _t1BBD#1 = 0.57735026919e0;
      real _t1BBF#1 = 0.1e1;
      real _t1BC1#1 = 0.e0;
      real _t1BC3#1 = 0.e0;
      tensor[4] _t1BC5#1 = <tensor[4]>[_t1BBD,_t1BBF,_t1BC1,_t1BC3];
      real _t1BC7#1 = 0.57735026919e0;
      real _t1BC9#1 = 0.e0;
      real _t1BCB#1 = 0.1e1;
      real _t1BCD#1 = 0.e0;
      tensor[4] _t1BCF#1 = <tensor[4]>[_t1BC7,_t1BC9,_t1BCB,_t1BCD];
      real _t1BD1#1 = 0.e0;
      real _t1BD3#1 = 0.e0;
      real _t1BD5#1 = 0.e0;
      real _t1BD7#1 = 0.1e1;
      tensor[4] _t1BD9#1 = <tensor[4]>[_t1BD1,_t1BD3,_t1BD5,_t1BD7];
      tensor[4,4] _t1BDB#1 = <tensor[4,4]>[_t1BBB,_t1BC5,_t1BCF,_t1BD9];
      real _t1BDD#1 = 0.1e1;
      real _t1BDF#1 = 0.e0;
      real _t1BE1#1 = 0.e0;
      real _t1BE3#1 = 0.e0;
      tensor[4] _t1BE5#1 = <tensor[4]>[_t1BDD,_t1BDF,_t1BE1,_t1BE3];
      real _t1BE7#1 = 0.e0;
      real _t1BE9#1 = 0.1e1;
      real _t1BEB#1 = 0.e0;
      real _t1BED#1 = 0.e0;
      tensor[4] _t1BEF#1 = <tensor[4]>[_t1BE7,_t1BE9,_t1BEB,_t1BED];
      real _t1BF1#1 = 0.e0;
      real _t1BF3#1 = 0.e0;
      real _t1BF5#1 = 0.1e1;
      real _t1BF7#1 = 0.e0;
      tensor[4] _t1BF9#1 = <tensor[4]>[_t1BF1,_t1BF3,_t1BF5,_t1BF7];
      real _t1BFB#1 = 0.e0;
      real _t1BFD#1 = 0.e0;
      real _t1BFF#1 = 0.e0;
      real _t1C01#1 = 0.1e1;
      tensor[4] _t1C03#1 = <tensor[4]>[_t1BFB,_t1BFD,_t1BFF,_t1C01];
      tensor[4,4] _t1C05#1 = <tensor[4,4]>[_t1BE5,_t1BEF,_t1BF9,_t1C03];
      real _t1C07#1 = 0.e0;
      real _t1C09#1 = 0.1e1;
      real _t1C0B#1 = 0.e0;
      real _t1C0D#1 = 0.e0;
      tensor[4] _t1C0F#1 = <tensor[4]>[_t1C07,_t1C09,_t1C0B,_t1C0D];
      real _t1C11#1 = -0.1e1;
      real _t1C13#1 = 0.e0;
      real _t1C15#1 = 0.e0;
      real _t1C17#1 = 0.e0;
      tensor[4] _t1C19#1 = <tensor[4]>[_t1C11,_t1C13,_t1C15,_t1C17];
      real _t1C1B#1 = 0.e0;
      real _t1C1D#1 = 0.e0;
      real _t1C1F#1 = 0.1e1;
      real _t1C21#1 = 0.e0;
      tensor[4] _t1C23#1 = <tensor[4]>[_t1C1B,_t1C1D,_t1C1F,_t1C21];
      real _t1C25#1 = 0.e0;
      real _t1C27#1 = 0.e0;
      real _t1C29#1 = 0.e0;
      real _t1C2B#1 = 0.1e1;
      tensor[4] _t1C2D#1 = <tensor[4]>[_t1C25,_t1C27,_t1C29,_t1C2B];
      tensor[4,4] _t1C2F#1 = <tensor[4,4]>[_t1C0F,_t1C19,_t1C23,_t1C2D];
      real _t1C31#1 = 0.e0;
      real _t1C33#1 = 0.1e1;
      real _t1C35#1 = 0.e0;
      real _t1C37#1 = 0.e0;
      tensor[4] _t1C39#1 = <tensor[4]>[_t1C31,_t1C33,_t1C35,_t1C37];
      real _t1C3B#1 = 0.e0;
      real _t1C3D#1 = 0.e0;
      real _t1C3F#1 = 0.1e1;
      real _t1C41#1 = 0.e0;
      tensor[4] _t1C43#1 = <tensor[4]>[_t1C3B,_t1C3D,_t1C3F,_t1C41];
      real _t1C45#1 = 0.1e1;
      real _t1C47#1 = 0.e0;
      real _t1C49#1 = 0.e0;
      real _t1C4B#1 = 0.e0;
      tensor[4] _t1C4D#1 = <tensor[4]>[_t1C45,_t1C47,_t1C49,_t1C4B];
      real _t1C4F#1 = 0.e0;
      real _t1C51#1 = 0.e0;
      real _t1C53#1 = 0.e0;
      real _t1C55#1 = 0.1e1;
      tensor[4] _t1C57#1 = <tensor[4]>[_t1C4F,_t1C51,_t1C53,_t1C55];
      tensor[4,4] _t1C59#1 = <tensor[4,4]>[_t1C39,_t1C43,_t1C4D,_t1C57];
      tensor[4,4][4] _t1C5B#1 = <tensor[4,4][4]>{_t1BDB,_t1C05,_t1C2F,_t1C59};
      real _t1C5D#1 = -0.1e1;
      real _t1C5F#1 = -0.57735026919e0;
      real _t1C61#1 = -0.1e1;
      real _t1C63#1 = 0.1e1;
      tensor[4] _t1C65#1 = <tensor[4]>[_t1C5D,_t1C5F,_t1C61,_t1C63];
      real _t1C67#1 = 0.1e1;
      real _t1C69#1 = -0.57735026919e0;
      real _t1C6B#1 = 0.e0;
      real _t1C6D#1 = 0.e0;
      tensor[4] _t1C6F#1 = <tensor[4]>[_t1C67,_t1C69,_t1C6B,_t1C6D];
      real _t1C71#1 = 0.e0;
      real _t1C73#1 = -0.57735026919e0;
      real _t1C75#1 = 0.1e1;
      real _t1C77#1 = 0.e0;
      tensor[4] _t1C79#1 = <tensor[4]>[_t1C71,_t1C73,_t1C75,_t1C77];
      real _t1C7B#1 = 0.e0;
      real _t1C7D#1 = 0.e0;
      real _t1C7F#1 = 0.e0;
      real _t1C81#1 = 0.1e1;
      tensor[4] _t1C83#1 = <tensor[4]>[_t1C7B,_t1C7D,_t1C7F,_t1C81];
      tensor[4,4] _t1C85#1 = <tensor[4,4]>[_t1C65,_t1C6F,_t1C79,_t1C83];
      real _t1C87#1 = 0.e0;
      real _t1C89#1 = -0.1e1;
      real _t1C8B#1 = 0.e0;
      real _t1C8D#1 = 0.e0;
      tensor[4] _t1C8F#1 = <tensor[4]>[_t1C87,_t1C89,_t1C8B,_t1C8D];
      real _t1C91#1 = 0.1e1;
      real _t1C93#1 = 0.e0;
      real _t1C95#1 = 0.e0;
      real _t1C97#1 = 0.e0;
      tensor[4] _t1C99#1 = <tensor[4]>[_t1C91,_t1C93,_t1C95,_t1C97];
      real _t1C9B#1 = 0.e0;
      real _t1C9D#1 = 0.e0;
      real _t1C9F#1 = 0.1e1;
      real _t1CA1#1 = 0.e0;
      tensor[4] _t1CA3#1 = <tensor[4]>[_t1C9B,_t1C9D,_t1C9F,_t1CA1];
      real _t1CA5#1 = 0.e0;
      real _t1CA7#1 = 0.e0;
      real _t1CA9#1 = 0.e0;
      real _t1CAB#1 = 0.1e1;
      tensor[4] _t1CAD#1 = <tensor[4]>[_t1CA5,_t1CA7,_t1CA9,_t1CAB];
      tensor[4,4] _t1CAF#1 = <tensor[4,4]>[_t1C8F,_t1C99,_t1CA3,_t1CAD];
      real _t1CB1#1 = 0.1e1;
      real _t1CB3#1 = 0.e0;
      real _t1CB5#1 = 0.e0;
      real _t1CB7#1 = 0.e0;
      tensor[4] _t1CB9#1 = <tensor[4]>[_t1CB1,_t1CB3,_t1CB5,_t1CB7];
      real _t1CBB#1 = 0.e0;
      real _t1CBD#1 = 0.1e1;
      real _t1CBF#1 = 0.e0;
      real _t1CC1#1 = 0.e0;
      tensor[4] _t1CC3#1 = <tensor[4]>[_t1CBB,_t1CBD,_t1CBF,_t1CC1];
      real _t1CC5#1 = 0.e0;
      real _t1CC7#1 = 0.e0;
      real _t1CC9#1 = 0.1e1;
      real _t1CCB#1 = 0.e0;
      tensor[4] _t1CCD#1 = <tensor[4]>[_t1CC5,_t1CC7,_t1CC9,_t1CCB];
      real _t1CCF#1 = 0.e0;
      real _t1CD1#1 = 0.e0;
      real _t1CD3#1 = 0.e0;
      real _t1CD5#1 = 0.1e1;
      tensor[4] _t1CD7#1 = <tensor[4]>[_t1CCF,_t1CD1,_t1CD3,_t1CD5];
      tensor[4,4] _t1CD9#1 = <tensor[4,4]>[_t1CB9,_t1CC3,_t1CCD,_t1CD7];
      real _t1CDB#1 = 0.1e1;
      real _t1CDD#1 = 0.e0;
      real _t1CDF#1 = 0.e0;
      real _t1CE1#1 = 0.e0;
      tensor[4] _t1CE3#1 = <tensor[4]>[_t1CDB,_t1CDD,_t1CDF,_t1CE1];
      real _t1CE5#1 = 0.e0;
      real _t1CE7#1 = 0.e0;
      real _t1CE9#1 = 0.1e1;
      real _t1CEB#1 = 0.e0;
      tensor[4] _t1CED#1 = <tensor[4]>[_t1CE5,_t1CE7,_t1CE9,_t1CEB];
      real _t1CEF#1 = 0.e0;
      real _t1CF1#1 = -0.1e1;
      real _t1CF3#1 = 0.e0;
      real _t1CF5#1 = 0.e0;
      tensor[4] _t1CF7#1 = <tensor[4]>[_t1CEF,_t1CF1,_t1CF3,_t1CF5];
      real _t1CF9#1 = 0.e0;
      real _t1CFB#1 = 0.e0;
      real _t1CFD#1 = 0.e0;
      real _t1CFF#1 = 0.1e1;
      tensor[4] _t1D01#1 = <tensor[4]>[_t1CF9,_t1CFB,_t1CFD,_t1CFF];
      tensor[4,4] _t1D03#1 = <tensor[4,4]>[_t1CE3,_t1CED,_t1CF7,_t1D01];
      tensor[4,4][4] _t1D05#1 = <tensor[4,4][4]>{_t1C85,_t1CAF,_t1CD9,_t1D03};
      real _t1D07#1 = -0.1e1;
      real _t1D09#1 = -0.1e1;
      real _t1D0B#1 = 0.57735026919e0;
      real _t1D0D#1 = 0.1e1;
      tensor[4] _t1D0F#1 = <tensor[4]>[_t1D07,_t1D09,_t1D0B,_t1D0D];
      real _t1D11#1 = 0.1e1;
      real _t1D13#1 = 0.e0;
      real _t1D15#1 = 0.57735026919e0;
      real _t1D17#1 = 0.e0;
      tensor[4] _t1D19#1 = <tensor[4]>[_t1D11,_t1D13,_t1D15,_t1D17];
      real _t1D1B#1 = 0.e0;
      real _t1D1D#1 = 0.1e1;
      real _t1D1F#1 = 0.57735026919e0;
      real _t1D21#1 = 0.e0;
      tensor[4] _t1D23#1 = <tensor[4]>[_t1D1B,_t1D1D,_t1D1F,_t1D21];
      real _t1D25#1 = 0.e0;
      real _t1D27#1 = 0.e0;
      real _t1D29#1 = 0.e0;
      real _t1D2B#1 = 0.1e1;
      tensor[4] _t1D2D#1 = <tensor[4]>[_t1D25,_t1D27,_t1D29,_t1D2B];
      tensor[4,4] _t1D2F#1 = <tensor[4,4]>[_t1D0F,_t1D19,_t1D23,_t1D2D];
      real _t1D31#1 = 0.e0;
      real _t1D33#1 = 0.e0;
      real _t1D35#1 = 0.1e1;
      real _t1D37#1 = 0.e0;
      tensor[4] _t1D39#1 = <tensor[4]>[_t1D31,_t1D33,_t1D35,_t1D37];
      real _t1D3B#1 = 0.1e1;
      real _t1D3D#1 = 0.e0;
      real _t1D3F#1 = 0.e0;
      real _t1D41#1 = 0.e0;
      tensor[4] _t1D43#1 = <tensor[4]>[_t1D3B,_t1D3D,_t1D3F,_t1D41];
      real _t1D45#1 = 0.e0;
      real _t1D47#1 = 0.1e1;
      real _t1D49#1 = 0.e0;
      real _t1D4B#1 = 0.e0;
      tensor[4] _t1D4D#1 = <tensor[4]>[_t1D45,_t1D47,_t1D49,_t1D4B];
      real _t1D4F#1 = 0.e0;
      real _t1D51#1 = 0.e0;
      real _t1D53#1 = 0.e0;
      real _t1D55#1 = 0.1e1;
      tensor[4] _t1D57#1 = <tensor[4]>[_t1D4F,_t1D51,_t1D53,_t1D55];
      tensor[4,4] _t1D59#1 = <tensor[4,4]>[_t1D39,_t1D43,_t1D4D,_t1D57];
      real _t1D5B#1 = 0.1e1;
      real _t1D5D#1 = 0.e0;
      real _t1D5F#1 = 0.e0;
      real _t1D61#1 = 0.e0;
      tensor[4] _t1D63#1 = <tensor[4]>[_t1D5B,_t1D5D,_t1D5F,_t1D61];
      real _t1D65#1 = 0.e0;
      real _t1D67#1 = 0.e0;
      real _t1D69#1 = -0.1e1;
      real _t1D6B#1 = 0.e0;
      tensor[4] _t1D6D#1 = <tensor[4]>[_t1D65,_t1D67,_t1D69,_t1D6B];
      real _t1D6F#1 = 0.e0;
      real _t1D71#1 = 0.1e1;
      real _t1D73#1 = 0.e0;
      real _t1D75#1 = 0.e0;
      tensor[4] _t1D77#1 = <tensor[4]>[_t1D6F,_t1D71,_t1D73,_t1D75];
      real _t1D79#1 = 0.e0;
      real _t1D7B#1 = 0.e0;
      real _t1D7D#1 = 0.e0;
      real _t1D7F#1 = 0.1e1;
      tensor[4] _t1D81#1 = <tensor[4]>[_t1D79,_t1D7B,_t1D7D,_t1D7F];
      tensor[4,4] _t1D83#1 = <tensor[4,4]>[_t1D63,_t1D6D,_t1D77,_t1D81];
      real _t1D85#1 = 0.1e1;
      real _t1D87#1 = 0.e0;
      real _t1D89#1 = 0.e0;
      real _t1D8B#1 = 0.e0;
      tensor[4] _t1D8D#1 = <tensor[4]>[_t1D85,_t1D87,_t1D89,_t1D8B];
      real _t1D8F#1 = 0.e0;
      real _t1D91#1 = 0.1e1;
      real _t1D93#1 = 0.e0;
      real _t1D95#1 = 0.e0;
      tensor[4] _t1D97#1 = <tensor[4]>[_t1D8F,_t1D91,_t1D93,_t1D95];
      real _t1D99#1 = 0.e0;
      real _t1D9B#1 = 0.e0;
      real _t1D9D#1 = 0.1e1;
      real _t1D9F#1 = 0.e0;
      tensor[4] _t1DA1#1 = <tensor[4]>[_t1D99,_t1D9B,_t1D9D,_t1D9F];
      real _t1DA3#1 = 0.e0;
      real _t1DA5#1 = 0.e0;
      real _t1DA7#1 = 0.e0;
      real _t1DA9#1 = 0.1e1;
      tensor[4] _t1DAB#1 = <tensor[4]>[_t1DA3,_t1DA5,_t1DA7,_t1DA9];
      tensor[4,4] _t1DAD#1 = <tensor[4,4]>[_t1D8D,_t1D97,_t1DA1,_t1DAB];
      tensor[4,4][4] _t1DAF#1 = <tensor[4,4][4]>{_t1D2F,_t1D59,_t1D83,_t1DAD};
      tensor[4,4][4][4] _t1DB1#1 = <tensor[4,4][4][4]>{_t1BB1,_t1C5B,_t1D05,_t1DAF};
      real _t1DB3#1 = TensorIndex<real[2],[1]>(time1819);
      int _t1DB5#1 = FloorToInt(_t1DB3);
      tensor[4,4][4] _t1DB7#1 = Subscript<tensor[4,4][4][4]>(_t1DB1,_t1DB5);
      real _t1DB9#1 = TensorIndex<real[2],[1]>(time1819);
      int _t1DBB#1 = FloorToInt(_t1DB9);
      int[2] _t1DBD#1 = nextCell41821 (_t1DBB,cellId1816,mesh1815);
      int _t1DBF#1 = 1;
      int _t1DC1#1 = Subscript<int[2]>(_t1DBD,_t1DBF);
      tensor[4,4] _t1DC3#1 = Subscript<tensor[4,4][4]>(_t1DB7,_t1DC1);
      real _t1DC5#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t1DC7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1DC5,dPos1818);
      tensor[3] _t1DC9#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1DC7,refPos1817);
      real _t1DCB#1 = TensorIndex<tensor[3],[0]>(_t1DC9);
      real _t1DCD#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t1DCF#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1DCD,dPos1818);
      tensor[3] _t1DD1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1DCF,refPos1817);
      real _t1DD3#1 = TensorIndex<tensor[3],[1]>(_t1DD1);
      real _t1DD5#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t1DD7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1DD5,dPos1818);
      tensor[3] _t1DD9#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1DD7,refPos1817);
      real _t1DDB#1 = TensorIndex<tensor[3],[2]>(_t1DD9);
      real _t1DDD#1 = 0.1e1;
      tensor[4] _t1DDF#1 = <tensor[4]>[_t1DCB,_t1DD3,_t1DDB,_t1DDD];
      tensor[4] _t1DE1#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t1DC3,_t1DDF);
      real _t1DE3#1 = TensorIndex<tensor[4],[0]>(_t1DE1);
      real _t1DE5#1 = 0.1e1;
      real _t1DE7#1 = 0.e0;
      real _t1DE9#1 = 0.e0;
      real _t1DEB#1 = 0.e0;
      tensor[4] _t1DED#1 = <tensor[4]>[_t1DE5,_t1DE7,_t1DE9,_t1DEB];
      real _t1DEF#1 = 0.e0;
      real _t1DF1#1 = 0.1e1;
      real _t1DF3#1 = 0.e0;
      real _t1DF5#1 = 0.e0;
      tensor[4] _t1DF7#1 = <tensor[4]>[_t1DEF,_t1DF1,_t1DF3,_t1DF5];
      real _t1DF9#1 = 0.e0;
      real _t1DFB#1 = 0.e0;
      real _t1DFD#1 = 0.1e1;
      real _t1DFF#1 = 0.e0;
      tensor[4] _t1E01#1 = <tensor[4]>[_t1DF9,_t1DFB,_t1DFD,_t1DFF];
      real _t1E03#1 = 0.971445146547e-16;
      real _t1E05#1 = 0.e0;
      real _t1E07#1 = 0.e0;
      real _t1E09#1 = 0.1e1;
      tensor[4] _t1E0B#1 = <tensor[4]>[_t1E03,_t1E05,_t1E07,_t1E09];
      tensor[4,4] _t1E0D#1 = <tensor[4,4]>[_t1DED,_t1DF7,_t1E01,_t1E0B];
      real _t1E0F#1 = 0.57735026919e0;
      real _t1E11#1 = 0.57735026919e0;
      real _t1E13#1 = 0.57735026919e0;
      real _t1E15#1 = -0.57735026919e0;
      tensor[4] _t1E17#1 = <tensor[4]>[_t1E0F,_t1E11,_t1E13,_t1E15];
      real _t1E19#1 = -0.333333333333e0;
      real _t1E1B#1 = 0.666666666667e0;
      real _t1E1D#1 = -0.333333333333e0;
      real _t1E1F#1 = 0.333333333333e0;
      tensor[4] _t1E21#1 = <tensor[4]>[_t1E19,_t1E1B,_t1E1D,_t1E1F];
      real _t1E23#1 = -0.333333333333e0;
      real _t1E25#1 = -0.333333333333e0;
      real _t1E27#1 = 0.666666666667e0;
      real _t1E29#1 = 0.333333333333e0;
      tensor[4] _t1E2B#1 = <tensor[4]>[_t1E23,_t1E25,_t1E27,_t1E29];
      real _t1E2D#1 = 0.971445146547e-16;
      real _t1E2F#1 = 0.e0;
      real _t1E31#1 = 0.e0;
      real _t1E33#1 = 0.1e1;
      tensor[4] _t1E35#1 = <tensor[4]>[_t1E2D,_t1E2F,_t1E31,_t1E33];
      tensor[4,4] _t1E37#1 = <tensor[4,4]>[_t1E17,_t1E21,_t1E2B,_t1E35];
      real _t1E39#1 = -0.333333333333e0;
      real _t1E3B#1 = 0.666666666667e0;
      real _t1E3D#1 = -0.333333333333e0;
      real _t1E3F#1 = 0.333333333333e0;
      tensor[4] _t1E41#1 = <tensor[4]>[_t1E39,_t1E3B,_t1E3D,_t1E3F];
      real _t1E43#1 = -0.57735026919e0;
      real _t1E45#1 = -0.57735026919e0;
      real _t1E47#1 = -0.57735026919e0;
      real _t1E49#1 = 0.57735026919e0;
      tensor[4] _t1E4B#1 = <tensor[4]>[_t1E43,_t1E45,_t1E47,_t1E49];
      real _t1E4D#1 = -0.333333333333e0;
      real _t1E4F#1 = -0.333333333333e0;
      real _t1E51#1 = 0.666666666667e0;
      real _t1E53#1 = 0.333333333333e0;
      tensor[4] _t1E55#1 = <tensor[4]>[_t1E4D,_t1E4F,_t1E51,_t1E53];
      real _t1E57#1 = 0.971445146547e-16;
      real _t1E59#1 = 0.e0;
      real _t1E5B#1 = 0.e0;
      real _t1E5D#1 = 0.1e1;
      tensor[4] _t1E5F#1 = <tensor[4]>[_t1E57,_t1E59,_t1E5B,_t1E5D];
      tensor[4,4] _t1E61#1 = <tensor[4,4]>[_t1E41,_t1E4B,_t1E55,_t1E5F];
      real _t1E63#1 = -0.333333333333e0;
      real _t1E65#1 = 0.666666666667e0;
      real _t1E67#1 = -0.333333333333e0;
      real _t1E69#1 = 0.333333333333e0;
      tensor[4] _t1E6B#1 = <tensor[4]>[_t1E63,_t1E65,_t1E67,_t1E69];
      real _t1E6D#1 = -0.333333333333e0;
      real _t1E6F#1 = -0.333333333333e0;
      real _t1E71#1 = 0.666666666667e0;
      real _t1E73#1 = 0.333333333333e0;
      tensor[4] _t1E75#1 = <tensor[4]>[_t1E6D,_t1E6F,_t1E71,_t1E73];
      real _t1E77#1 = 0.57735026919e0;
      real _t1E79#1 = 0.57735026919e0;
      real _t1E7B#1 = 0.57735026919e0;
      real _t1E7D#1 = -0.57735026919e0;
      tensor[4] _t1E7F#1 = <tensor[4]>[_t1E77,_t1E79,_t1E7B,_t1E7D];
      real _t1E81#1 = 0.971445146547e-16;
      real _t1E83#1 = 0.e0;
      real _t1E85#1 = 0.e0;
      real _t1E87#1 = 0.1e1;
      tensor[4] _t1E89#1 = <tensor[4]>[_t1E81,_t1E83,_t1E85,_t1E87];
      tensor[4,4] _t1E8B#1 = <tensor[4,4]>[_t1E6B,_t1E75,_t1E7F,_t1E89];
      tensor[4,4][4] _t1E8D#1 = <tensor[4,4][4]>{_t1E0D,_t1E37,_t1E61,_t1E8B};
      real _t1E8F#1 = 0.57735026919e0;
      real _t1E91#1 = -0.1e1;
      real _t1E93#1 = -0.1e1;
      real _t1E95#1 = 0.1e1;
      tensor[4] _t1E97#1 = <tensor[4]>[_t1E8F,_t1E91,_t1E93,_t1E95];
      real _t1E99#1 = 0.57735026919e0;
      real _t1E9B#1 = 0.1e1;
      real _t1E9D#1 = 0.e0;
      real _t1E9F#1 = 0.e0;
      tensor[4] _t1EA1#1 = <tensor[4]>[_t1E99,_t1E9B,_t1E9D,_t1E9F];
      real _t1EA3#1 = 0.57735026919e0;
      real _t1EA5#1 = 0.e0;
      real _t1EA7#1 = 0.1e1;
      real _t1EA9#1 = 0.e0;
      tensor[4] _t1EAB#1 = <tensor[4]>[_t1EA3,_t1EA5,_t1EA7,_t1EA9];
      real _t1EAD#1 = 0.e0;
      real _t1EAF#1 = 0.e0;
      real _t1EB1#1 = 0.e0;
      real _t1EB3#1 = 0.1e1;
      tensor[4] _t1EB5#1 = <tensor[4]>[_t1EAD,_t1EAF,_t1EB1,_t1EB3];
      tensor[4,4] _t1EB7#1 = <tensor[4,4]>[_t1E97,_t1EA1,_t1EAB,_t1EB5];
      real _t1EB9#1 = 0.1e1;
      real _t1EBB#1 = 0.e0;
      real _t1EBD#1 = 0.e0;
      real _t1EBF#1 = 0.e0;
      tensor[4] _t1EC1#1 = <tensor[4]>[_t1EB9,_t1EBB,_t1EBD,_t1EBF];
      real _t1EC3#1 = 0.e0;
      real _t1EC5#1 = 0.1e1;
      real _t1EC7#1 = 0.e0;
      real _t1EC9#1 = 0.e0;
      tensor[4] _t1ECB#1 = <tensor[4]>[_t1EC3,_t1EC5,_t1EC7,_t1EC9];
      real _t1ECD#1 = 0.e0;
      real _t1ECF#1 = 0.e0;
      real _t1ED1#1 = 0.1e1;
      real _t1ED3#1 = 0.e0;
      tensor[4] _t1ED5#1 = <tensor[4]>[_t1ECD,_t1ECF,_t1ED1,_t1ED3];
      real _t1ED7#1 = 0.e0;
      real _t1ED9#1 = 0.e0;
      real _t1EDB#1 = 0.e0;
      real _t1EDD#1 = 0.1e1;
      tensor[4] _t1EDF#1 = <tensor[4]>[_t1ED7,_t1ED9,_t1EDB,_t1EDD];
      tensor[4,4] _t1EE1#1 = <tensor[4,4]>[_t1EC1,_t1ECB,_t1ED5,_t1EDF];
      real _t1EE3#1 = 0.e0;
      real _t1EE5#1 = 0.1e1;
      real _t1EE7#1 = 0.e0;
      real _t1EE9#1 = 0.e0;
      tensor[4] _t1EEB#1 = <tensor[4]>[_t1EE3,_t1EE5,_t1EE7,_t1EE9];
      real _t1EED#1 = -0.1e1;
      real _t1EEF#1 = 0.e0;
      real _t1EF1#1 = 0.e0;
      real _t1EF3#1 = 0.e0;
      tensor[4] _t1EF5#1 = <tensor[4]>[_t1EED,_t1EEF,_t1EF1,_t1EF3];
      real _t1EF7#1 = 0.e0;
      real _t1EF9#1 = 0.e0;
      real _t1EFB#1 = 0.1e1;
      real _t1EFD#1 = 0.e0;
      tensor[4] _t1EFF#1 = <tensor[4]>[_t1EF7,_t1EF9,_t1EFB,_t1EFD];
      real _t1F01#1 = 0.e0;
      real _t1F03#1 = 0.e0;
      real _t1F05#1 = 0.e0;
      real _t1F07#1 = 0.1e1;
      tensor[4] _t1F09#1 = <tensor[4]>[_t1F01,_t1F03,_t1F05,_t1F07];
      tensor[4,4] _t1F0B#1 = <tensor[4,4]>[_t1EEB,_t1EF5,_t1EFF,_t1F09];
      real _t1F0D#1 = 0.e0;
      real _t1F0F#1 = 0.1e1;
      real _t1F11#1 = 0.e0;
      real _t1F13#1 = 0.e0;
      tensor[4] _t1F15#1 = <tensor[4]>[_t1F0D,_t1F0F,_t1F11,_t1F13];
      real _t1F17#1 = 0.e0;
      real _t1F19#1 = 0.e0;
      real _t1F1B#1 = 0.1e1;
      real _t1F1D#1 = 0.e0;
      tensor[4] _t1F1F#1 = <tensor[4]>[_t1F17,_t1F19,_t1F1B,_t1F1D];
      real _t1F21#1 = 0.1e1;
      real _t1F23#1 = 0.e0;
      real _t1F25#1 = 0.e0;
      real _t1F27#1 = 0.e0;
      tensor[4] _t1F29#1 = <tensor[4]>[_t1F21,_t1F23,_t1F25,_t1F27];
      real _t1F2B#1 = 0.e0;
      real _t1F2D#1 = 0.e0;
      real _t1F2F#1 = 0.e0;
      real _t1F31#1 = 0.1e1;
      tensor[4] _t1F33#1 = <tensor[4]>[_t1F2B,_t1F2D,_t1F2F,_t1F31];
      tensor[4,4] _t1F35#1 = <tensor[4,4]>[_t1F15,_t1F1F,_t1F29,_t1F33];
      tensor[4,4][4] _t1F37#1 = <tensor[4,4][4]>{_t1EB7,_t1EE1,_t1F0B,_t1F35};
      real _t1F39#1 = -0.1e1;
      real _t1F3B#1 = -0.57735026919e0;
      real _t1F3D#1 = -0.1e1;
      real _t1F3F#1 = 0.1e1;
      tensor[4] _t1F41#1 = <tensor[4]>[_t1F39,_t1F3B,_t1F3D,_t1F3F];
      real _t1F43#1 = 0.1e1;
      real _t1F45#1 = -0.57735026919e0;
      real _t1F47#1 = 0.e0;
      real _t1F49#1 = 0.e0;
      tensor[4] _t1F4B#1 = <tensor[4]>[_t1F43,_t1F45,_t1F47,_t1F49];
      real _t1F4D#1 = 0.e0;
      real _t1F4F#1 = -0.57735026919e0;
      real _t1F51#1 = 0.1e1;
      real _t1F53#1 = 0.e0;
      tensor[4] _t1F55#1 = <tensor[4]>[_t1F4D,_t1F4F,_t1F51,_t1F53];
      real _t1F57#1 = 0.e0;
      real _t1F59#1 = 0.e0;
      real _t1F5B#1 = 0.e0;
      real _t1F5D#1 = 0.1e1;
      tensor[4] _t1F5F#1 = <tensor[4]>[_t1F57,_t1F59,_t1F5B,_t1F5D];
      tensor[4,4] _t1F61#1 = <tensor[4,4]>[_t1F41,_t1F4B,_t1F55,_t1F5F];
      real _t1F63#1 = 0.e0;
      real _t1F65#1 = -0.1e1;
      real _t1F67#1 = 0.e0;
      real _t1F69#1 = 0.e0;
      tensor[4] _t1F6B#1 = <tensor[4]>[_t1F63,_t1F65,_t1F67,_t1F69];
      real _t1F6D#1 = 0.1e1;
      real _t1F6F#1 = 0.e0;
      real _t1F71#1 = 0.e0;
      real _t1F73#1 = 0.e0;
      tensor[4] _t1F75#1 = <tensor[4]>[_t1F6D,_t1F6F,_t1F71,_t1F73];
      real _t1F77#1 = 0.e0;
      real _t1F79#1 = 0.e0;
      real _t1F7B#1 = 0.1e1;
      real _t1F7D#1 = 0.e0;
      tensor[4] _t1F7F#1 = <tensor[4]>[_t1F77,_t1F79,_t1F7B,_t1F7D];
      real _t1F81#1 = 0.e0;
      real _t1F83#1 = 0.e0;
      real _t1F85#1 = 0.e0;
      real _t1F87#1 = 0.1e1;
      tensor[4] _t1F89#1 = <tensor[4]>[_t1F81,_t1F83,_t1F85,_t1F87];
      tensor[4,4] _t1F8B#1 = <tensor[4,4]>[_t1F6B,_t1F75,_t1F7F,_t1F89];
      real _t1F8D#1 = 0.1e1;
      real _t1F8F#1 = 0.e0;
      real _t1F91#1 = 0.e0;
      real _t1F93#1 = 0.e0;
      tensor[4] _t1F95#1 = <tensor[4]>[_t1F8D,_t1F8F,_t1F91,_t1F93];
      real _t1F97#1 = 0.e0;
      real _t1F99#1 = 0.1e1;
      real _t1F9B#1 = 0.e0;
      real _t1F9D#1 = 0.e0;
      tensor[4] _t1F9F#1 = <tensor[4]>[_t1F97,_t1F99,_t1F9B,_t1F9D];
      real _t1FA1#1 = 0.e0;
      real _t1FA3#1 = 0.e0;
      real _t1FA5#1 = 0.1e1;
      real _t1FA7#1 = 0.e0;
      tensor[4] _t1FA9#1 = <tensor[4]>[_t1FA1,_t1FA3,_t1FA5,_t1FA7];
      real _t1FAB#1 = 0.e0;
      real _t1FAD#1 = 0.e0;
      real _t1FAF#1 = 0.e0;
      real _t1FB1#1 = 0.1e1;
      tensor[4] _t1FB3#1 = <tensor[4]>[_t1FAB,_t1FAD,_t1FAF,_t1FB1];
      tensor[4,4] _t1FB5#1 = <tensor[4,4]>[_t1F95,_t1F9F,_t1FA9,_t1FB3];
      real _t1FB7#1 = 0.1e1;
      real _t1FB9#1 = 0.e0;
      real _t1FBB#1 = 0.e0;
      real _t1FBD#1 = 0.e0;
      tensor[4] _t1FBF#1 = <tensor[4]>[_t1FB7,_t1FB9,_t1FBB,_t1FBD];
      real _t1FC1#1 = 0.e0;
      real _t1FC3#1 = 0.e0;
      real _t1FC5#1 = 0.1e1;
      real _t1FC7#1 = 0.e0;
      tensor[4] _t1FC9#1 = <tensor[4]>[_t1FC1,_t1FC3,_t1FC5,_t1FC7];
      real _t1FCB#1 = 0.e0;
      real _t1FCD#1 = -0.1e1;
      real _t1FCF#1 = 0.e0;
      real _t1FD1#1 = 0.e0;
      tensor[4] _t1FD3#1 = <tensor[4]>[_t1FCB,_t1FCD,_t1FCF,_t1FD1];
      real _t1FD5#1 = 0.e0;
      real _t1FD7#1 = 0.e0;
      real _t1FD9#1 = 0.e0;
      real _t1FDB#1 = 0.1e1;
      tensor[4] _t1FDD#1 = <tensor[4]>[_t1FD5,_t1FD7,_t1FD9,_t1FDB];
      tensor[4,4] _t1FDF#1 = <tensor[4,4]>[_t1FBF,_t1FC9,_t1FD3,_t1FDD];
      tensor[4,4][4] _t1FE1#1 = <tensor[4,4][4]>{_t1F61,_t1F8B,_t1FB5,_t1FDF};
      real _t1FE3#1 = -0.1e1;
      real _t1FE5#1 = -0.1e1;
      real _t1FE7#1 = 0.57735026919e0;
      real _t1FE9#1 = 0.1e1;
      tensor[4] _t1FEB#1 = <tensor[4]>[_t1FE3,_t1FE5,_t1FE7,_t1FE9];
      real _t1FED#1 = 0.1e1;
      real _t1FEF#1 = 0.e0;
      real _t1FF1#1 = 0.57735026919e0;
      real _t1FF3#1 = 0.e0;
      tensor[4] _t1FF5#1 = <tensor[4]>[_t1FED,_t1FEF,_t1FF1,_t1FF3];
      real _t1FF7#1 = 0.e0;
      real _t1FF9#1 = 0.1e1;
      real _t1FFB#1 = 0.57735026919e0;
      real _t1FFD#1 = 0.e0;
      tensor[4] _t1FFF#1 = <tensor[4]>[_t1FF7,_t1FF9,_t1FFB,_t1FFD];
      real _t2001#1 = 0.e0;
      real _t2003#1 = 0.e0;
      real _t2005#1 = 0.e0;
      real _t2007#1 = 0.1e1;
      tensor[4] _t2009#1 = <tensor[4]>[_t2001,_t2003,_t2005,_t2007];
      tensor[4,4] _t200B#1 = <tensor[4,4]>[_t1FEB,_t1FF5,_t1FFF,_t2009];
      real _t200D#1 = 0.e0;
      real _t200F#1 = 0.e0;
      real _t2011#1 = 0.1e1;
      real _t2013#1 = 0.e0;
      tensor[4] _t2015#1 = <tensor[4]>[_t200D,_t200F,_t2011,_t2013];
      real _t2017#1 = 0.1e1;
      real _t2019#1 = 0.e0;
      real _t201B#1 = 0.e0;
      real _t201D#1 = 0.e0;
      tensor[4] _t201F#1 = <tensor[4]>[_t2017,_t2019,_t201B,_t201D];
      real _t2021#1 = 0.e0;
      real _t2023#1 = 0.1e1;
      real _t2025#1 = 0.e0;
      real _t2027#1 = 0.e0;
      tensor[4] _t2029#1 = <tensor[4]>[_t2021,_t2023,_t2025,_t2027];
      real _t202B#1 = 0.e0;
      real _t202D#1 = 0.e0;
      real _t202F#1 = 0.e0;
      real _t2031#1 = 0.1e1;
      tensor[4] _t2033#1 = <tensor[4]>[_t202B,_t202D,_t202F,_t2031];
      tensor[4,4] _t2035#1 = <tensor[4,4]>[_t2015,_t201F,_t2029,_t2033];
      real _t2037#1 = 0.1e1;
      real _t2039#1 = 0.e0;
      real _t203B#1 = 0.e0;
      real _t203D#1 = 0.e0;
      tensor[4] _t203F#1 = <tensor[4]>[_t2037,_t2039,_t203B,_t203D];
      real _t2041#1 = 0.e0;
      real _t2043#1 = 0.e0;
      real _t2045#1 = -0.1e1;
      real _t2047#1 = 0.e0;
      tensor[4] _t2049#1 = <tensor[4]>[_t2041,_t2043,_t2045,_t2047];
      real _t204B#1 = 0.e0;
      real _t204D#1 = 0.1e1;
      real _t204F#1 = 0.e0;
      real _t2051#1 = 0.e0;
      tensor[4] _t2053#1 = <tensor[4]>[_t204B,_t204D,_t204F,_t2051];
      real _t2055#1 = 0.e0;
      real _t2057#1 = 0.e0;
      real _t2059#1 = 0.e0;
      real _t205B#1 = 0.1e1;
      tensor[4] _t205D#1 = <tensor[4]>[_t2055,_t2057,_t2059,_t205B];
      tensor[4,4] _t205F#1 = <tensor[4,4]>[_t203F,_t2049,_t2053,_t205D];
      real _t2061#1 = 0.1e1;
      real _t2063#1 = 0.e0;
      real _t2065#1 = 0.e0;
      real _t2067#1 = 0.e0;
      tensor[4] _t2069#1 = <tensor[4]>[_t2061,_t2063,_t2065,_t2067];
      real _t206B#1 = 0.e0;
      real _t206D#1 = 0.1e1;
      real _t206F#1 = 0.e0;
      real _t2071#1 = 0.e0;
      tensor[4] _t2073#1 = <tensor[4]>[_t206B,_t206D,_t206F,_t2071];
      real _t2075#1 = 0.e0;
      real _t2077#1 = 0.e0;
      real _t2079#1 = 0.1e1;
      real _t207B#1 = 0.e0;
      tensor[4] _t207D#1 = <tensor[4]>[_t2075,_t2077,_t2079,_t207B];
      real _t207F#1 = 0.e0;
      real _t2081#1 = 0.e0;
      real _t2083#1 = 0.e0;
      real _t2085#1 = 0.1e1;
      tensor[4] _t2087#1 = <tensor[4]>[_t207F,_t2081,_t2083,_t2085];
      tensor[4,4] _t2089#1 = <tensor[4,4]>[_t2069,_t2073,_t207D,_t2087];
      tensor[4,4][4] _t208B#1 = <tensor[4,4][4]>{_t200B,_t2035,_t205F,_t2089};
      tensor[4,4][4][4] _t208D#1 = <tensor[4,4][4][4]>{_t1E8D,_t1F37,_t1FE1,_t208B};
      real _t208F#1 = TensorIndex<real[2],[1]>(time1819);
      int _t2091#1 = FloorToInt(_t208F);
      tensor[4,4][4] _t2093#1 = Subscript<tensor[4,4][4][4]>(_t208D,_t2091);
      real _t2095#1 = TensorIndex<real[2],[1]>(time1819);
      int _t2097#1 = FloorToInt(_t2095);
      int[2] _t2099#1 = nextCell41821 (_t2097,cellId1816,mesh1815);
      int _t209B#1 = 1;
      int _t209D#1 = Subscript<int[2]>(_t2099,_t209B);
      tensor[4,4] _t209F#1 = Subscript<tensor[4,4][4]>(_t2093,_t209D);
      real _t20A1#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t20A3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t20A1,dPos1818);
      tensor[3] _t20A5#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t20A3,refPos1817);
      real _t20A7#1 = TensorIndex<tensor[3],[0]>(_t20A5);
      real _t20A9#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t20AB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t20A9,dPos1818);
      tensor[3] _t20AD#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t20AB,refPos1817);
      real _t20AF#1 = TensorIndex<tensor[3],[1]>(_t20AD);
      real _t20B1#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t20B3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t20B1,dPos1818);
      tensor[3] _t20B5#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t20B3,refPos1817);
      real _t20B7#1 = TensorIndex<tensor[3],[2]>(_t20B5);
      real _t20B9#1 = 0.1e1;
      tensor[4] _t20BB#1 = <tensor[4]>[_t20A7,_t20AF,_t20B7,_t20B9];
      tensor[4] _t20BD#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t209F,_t20BB);
      real _t20BF#1 = TensorIndex<tensor[4],[1]>(_t20BD);
      real _t20C1#1 = 0.1e1;
      real _t20C3#1 = 0.e0;
      real _t20C5#1 = 0.e0;
      real _t20C7#1 = 0.e0;
      tensor[4] _t20C9#1 = <tensor[4]>[_t20C1,_t20C3,_t20C5,_t20C7];
      real _t20CB#1 = 0.e0;
      real _t20CD#1 = 0.1e1;
      real _t20CF#1 = 0.e0;
      real _t20D1#1 = 0.e0;
      tensor[4] _t20D3#1 = <tensor[4]>[_t20CB,_t20CD,_t20CF,_t20D1];
      real _t20D5#1 = 0.e0;
      real _t20D7#1 = 0.e0;
      real _t20D9#1 = 0.1e1;
      real _t20DB#1 = 0.e0;
      tensor[4] _t20DD#1 = <tensor[4]>[_t20D5,_t20D7,_t20D9,_t20DB];
      real _t20DF#1 = 0.971445146547e-16;
      real _t20E1#1 = 0.e0;
      real _t20E3#1 = 0.e0;
      real _t20E5#1 = 0.1e1;
      tensor[4] _t20E7#1 = <tensor[4]>[_t20DF,_t20E1,_t20E3,_t20E5];
      tensor[4,4] _t20E9#1 = <tensor[4,4]>[_t20C9,_t20D3,_t20DD,_t20E7];
      real _t20EB#1 = 0.57735026919e0;
      real _t20ED#1 = 0.57735026919e0;
      real _t20EF#1 = 0.57735026919e0;
      real _t20F1#1 = -0.57735026919e0;
      tensor[4] _t20F3#1 = <tensor[4]>[_t20EB,_t20ED,_t20EF,_t20F1];
      real _t20F5#1 = -0.333333333333e0;
      real _t20F7#1 = 0.666666666667e0;
      real _t20F9#1 = -0.333333333333e0;
      real _t20FB#1 = 0.333333333333e0;
      tensor[4] _t20FD#1 = <tensor[4]>[_t20F5,_t20F7,_t20F9,_t20FB];
      real _t20FF#1 = -0.333333333333e0;
      real _t2101#1 = -0.333333333333e0;
      real _t2103#1 = 0.666666666667e0;
      real _t2105#1 = 0.333333333333e0;
      tensor[4] _t2107#1 = <tensor[4]>[_t20FF,_t2101,_t2103,_t2105];
      real _t2109#1 = 0.971445146547e-16;
      real _t210B#1 = 0.e0;
      real _t210D#1 = 0.e0;
      real _t210F#1 = 0.1e1;
      tensor[4] _t2111#1 = <tensor[4]>[_t2109,_t210B,_t210D,_t210F];
      tensor[4,4] _t2113#1 = <tensor[4,4]>[_t20F3,_t20FD,_t2107,_t2111];
      real _t2115#1 = -0.333333333333e0;
      real _t2117#1 = 0.666666666667e0;
      real _t2119#1 = -0.333333333333e0;
      real _t211B#1 = 0.333333333333e0;
      tensor[4] _t211D#1 = <tensor[4]>[_t2115,_t2117,_t2119,_t211B];
      real _t211F#1 = -0.57735026919e0;
      real _t2121#1 = -0.57735026919e0;
      real _t2123#1 = -0.57735026919e0;
      real _t2125#1 = 0.57735026919e0;
      tensor[4] _t2127#1 = <tensor[4]>[_t211F,_t2121,_t2123,_t2125];
      real _t2129#1 = -0.333333333333e0;
      real _t212B#1 = -0.333333333333e0;
      real _t212D#1 = 0.666666666667e0;
      real _t212F#1 = 0.333333333333e0;
      tensor[4] _t2131#1 = <tensor[4]>[_t2129,_t212B,_t212D,_t212F];
      real _t2133#1 = 0.971445146547e-16;
      real _t2135#1 = 0.e0;
      real _t2137#1 = 0.e0;
      real _t2139#1 = 0.1e1;
      tensor[4] _t213B#1 = <tensor[4]>[_t2133,_t2135,_t2137,_t2139];
      tensor[4,4] _t213D#1 = <tensor[4,4]>[_t211D,_t2127,_t2131,_t213B];
      real _t213F#1 = -0.333333333333e0;
      real _t2141#1 = 0.666666666667e0;
      real _t2143#1 = -0.333333333333e0;
      real _t2145#1 = 0.333333333333e0;
      tensor[4] _t2147#1 = <tensor[4]>[_t213F,_t2141,_t2143,_t2145];
      real _t2149#1 = -0.333333333333e0;
      real _t214B#1 = -0.333333333333e0;
      real _t214D#1 = 0.666666666667e0;
      real _t214F#1 = 0.333333333333e0;
      tensor[4] _t2151#1 = <tensor[4]>[_t2149,_t214B,_t214D,_t214F];
      real _t2153#1 = 0.57735026919e0;
      real _t2155#1 = 0.57735026919e0;
      real _t2157#1 = 0.57735026919e0;
      real _t2159#1 = -0.57735026919e0;
      tensor[4] _t215B#1 = <tensor[4]>[_t2153,_t2155,_t2157,_t2159];
      real _t215D#1 = 0.971445146547e-16;
      real _t215F#1 = 0.e0;
      real _t2161#1 = 0.e0;
      real _t2163#1 = 0.1e1;
      tensor[4] _t2165#1 = <tensor[4]>[_t215D,_t215F,_t2161,_t2163];
      tensor[4,4] _t2167#1 = <tensor[4,4]>[_t2147,_t2151,_t215B,_t2165];
      tensor[4,4][4] _t2169#1 = <tensor[4,4][4]>{_t20E9,_t2113,_t213D,_t2167};
      real _t216B#1 = 0.57735026919e0;
      real _t216D#1 = -0.1e1;
      real _t216F#1 = -0.1e1;
      real _t2171#1 = 0.1e1;
      tensor[4] _t2173#1 = <tensor[4]>[_t216B,_t216D,_t216F,_t2171];
      real _t2175#1 = 0.57735026919e0;
      real _t2177#1 = 0.1e1;
      real _t2179#1 = 0.e0;
      real _t217B#1 = 0.e0;
      tensor[4] _t217D#1 = <tensor[4]>[_t2175,_t2177,_t2179,_t217B];
      real _t217F#1 = 0.57735026919e0;
      real _t2181#1 = 0.e0;
      real _t2183#1 = 0.1e1;
      real _t2185#1 = 0.e0;
      tensor[4] _t2187#1 = <tensor[4]>[_t217F,_t2181,_t2183,_t2185];
      real _t2189#1 = 0.e0;
      real _t218B#1 = 0.e0;
      real _t218D#1 = 0.e0;
      real _t218F#1 = 0.1e1;
      tensor[4] _t2191#1 = <tensor[4]>[_t2189,_t218B,_t218D,_t218F];
      tensor[4,4] _t2193#1 = <tensor[4,4]>[_t2173,_t217D,_t2187,_t2191];
      real _t2195#1 = 0.1e1;
      real _t2197#1 = 0.e0;
      real _t2199#1 = 0.e0;
      real _t219B#1 = 0.e0;
      tensor[4] _t219D#1 = <tensor[4]>[_t2195,_t2197,_t2199,_t219B];
      real _t219F#1 = 0.e0;
      real _t21A1#1 = 0.1e1;
      real _t21A3#1 = 0.e0;
      real _t21A5#1 = 0.e0;
      tensor[4] _t21A7#1 = <tensor[4]>[_t219F,_t21A1,_t21A3,_t21A5];
      real _t21A9#1 = 0.e0;
      real _t21AB#1 = 0.e0;
      real _t21AD#1 = 0.1e1;
      real _t21AF#1 = 0.e0;
      tensor[4] _t21B1#1 = <tensor[4]>[_t21A9,_t21AB,_t21AD,_t21AF];
      real _t21B3#1 = 0.e0;
      real _t21B5#1 = 0.e0;
      real _t21B7#1 = 0.e0;
      real _t21B9#1 = 0.1e1;
      tensor[4] _t21BB#1 = <tensor[4]>[_t21B3,_t21B5,_t21B7,_t21B9];
      tensor[4,4] _t21BD#1 = <tensor[4,4]>[_t219D,_t21A7,_t21B1,_t21BB];
      real _t21BF#1 = 0.e0;
      real _t21C1#1 = 0.1e1;
      real _t21C3#1 = 0.e0;
      real _t21C5#1 = 0.e0;
      tensor[4] _t21C7#1 = <tensor[4]>[_t21BF,_t21C1,_t21C3,_t21C5];
      real _t21C9#1 = -0.1e1;
      real _t21CB#1 = 0.e0;
      real _t21CD#1 = 0.e0;
      real _t21CF#1 = 0.e0;
      tensor[4] _t21D1#1 = <tensor[4]>[_t21C9,_t21CB,_t21CD,_t21CF];
      real _t21D3#1 = 0.e0;
      real _t21D5#1 = 0.e0;
      real _t21D7#1 = 0.1e1;
      real _t21D9#1 = 0.e0;
      tensor[4] _t21DB#1 = <tensor[4]>[_t21D3,_t21D5,_t21D7,_t21D9];
      real _t21DD#1 = 0.e0;
      real _t21DF#1 = 0.e0;
      real _t21E1#1 = 0.e0;
      real _t21E3#1 = 0.1e1;
      tensor[4] _t21E5#1 = <tensor[4]>[_t21DD,_t21DF,_t21E1,_t21E3];
      tensor[4,4] _t21E7#1 = <tensor[4,4]>[_t21C7,_t21D1,_t21DB,_t21E5];
      real _t21E9#1 = 0.e0;
      real _t21EB#1 = 0.1e1;
      real _t21ED#1 = 0.e0;
      real _t21EF#1 = 0.e0;
      tensor[4] _t21F1#1 = <tensor[4]>[_t21E9,_t21EB,_t21ED,_t21EF];
      real _t21F3#1 = 0.e0;
      real _t21F5#1 = 0.e0;
      real _t21F7#1 = 0.1e1;
      real _t21F9#1 = 0.e0;
      tensor[4] _t21FB#1 = <tensor[4]>[_t21F3,_t21F5,_t21F7,_t21F9];
      real _t21FD#1 = 0.1e1;
      real _t21FF#1 = 0.e0;
      real _t2201#1 = 0.e0;
      real _t2203#1 = 0.e0;
      tensor[4] _t2205#1 = <tensor[4]>[_t21FD,_t21FF,_t2201,_t2203];
      real _t2207#1 = 0.e0;
      real _t2209#1 = 0.e0;
      real _t220B#1 = 0.e0;
      real _t220D#1 = 0.1e1;
      tensor[4] _t220F#1 = <tensor[4]>[_t2207,_t2209,_t220B,_t220D];
      tensor[4,4] _t2211#1 = <tensor[4,4]>[_t21F1,_t21FB,_t2205,_t220F];
      tensor[4,4][4] _t2213#1 = <tensor[4,4][4]>{_t2193,_t21BD,_t21E7,_t2211};
      real _t2215#1 = -0.1e1;
      real _t2217#1 = -0.57735026919e0;
      real _t2219#1 = -0.1e1;
      real _t221B#1 = 0.1e1;
      tensor[4] _t221D#1 = <tensor[4]>[_t2215,_t2217,_t2219,_t221B];
      real _t221F#1 = 0.1e1;
      real _t2221#1 = -0.57735026919e0;
      real _t2223#1 = 0.e0;
      real _t2225#1 = 0.e0;
      tensor[4] _t2227#1 = <tensor[4]>[_t221F,_t2221,_t2223,_t2225];
      real _t2229#1 = 0.e0;
      real _t222B#1 = -0.57735026919e0;
      real _t222D#1 = 0.1e1;
      real _t222F#1 = 0.e0;
      tensor[4] _t2231#1 = <tensor[4]>[_t2229,_t222B,_t222D,_t222F];
      real _t2233#1 = 0.e0;
      real _t2235#1 = 0.e0;
      real _t2237#1 = 0.e0;
      real _t2239#1 = 0.1e1;
      tensor[4] _t223B#1 = <tensor[4]>[_t2233,_t2235,_t2237,_t2239];
      tensor[4,4] _t223D#1 = <tensor[4,4]>[_t221D,_t2227,_t2231,_t223B];
      real _t223F#1 = 0.e0;
      real _t2241#1 = -0.1e1;
      real _t2243#1 = 0.e0;
      real _t2245#1 = 0.e0;
      tensor[4] _t2247#1 = <tensor[4]>[_t223F,_t2241,_t2243,_t2245];
      real _t2249#1 = 0.1e1;
      real _t224B#1 = 0.e0;
      real _t224D#1 = 0.e0;
      real _t224F#1 = 0.e0;
      tensor[4] _t2251#1 = <tensor[4]>[_t2249,_t224B,_t224D,_t224F];
      real _t2253#1 = 0.e0;
      real _t2255#1 = 0.e0;
      real _t2257#1 = 0.1e1;
      real _t2259#1 = 0.e0;
      tensor[4] _t225B#1 = <tensor[4]>[_t2253,_t2255,_t2257,_t2259];
      real _t225D#1 = 0.e0;
      real _t225F#1 = 0.e0;
      real _t2261#1 = 0.e0;
      real _t2263#1 = 0.1e1;
      tensor[4] _t2265#1 = <tensor[4]>[_t225D,_t225F,_t2261,_t2263];
      tensor[4,4] _t2267#1 = <tensor[4,4]>[_t2247,_t2251,_t225B,_t2265];
      real _t2269#1 = 0.1e1;
      real _t226B#1 = 0.e0;
      real _t226D#1 = 0.e0;
      real _t226F#1 = 0.e0;
      tensor[4] _t2271#1 = <tensor[4]>[_t2269,_t226B,_t226D,_t226F];
      real _t2273#1 = 0.e0;
      real _t2275#1 = 0.1e1;
      real _t2277#1 = 0.e0;
      real _t2279#1 = 0.e0;
      tensor[4] _t227B#1 = <tensor[4]>[_t2273,_t2275,_t2277,_t2279];
      real _t227D#1 = 0.e0;
      real _t227F#1 = 0.e0;
      real _t2281#1 = 0.1e1;
      real _t2283#1 = 0.e0;
      tensor[4] _t2285#1 = <tensor[4]>[_t227D,_t227F,_t2281,_t2283];
      real _t2287#1 = 0.e0;
      real _t2289#1 = 0.e0;
      real _t228B#1 = 0.e0;
      real _t228D#1 = 0.1e1;
      tensor[4] _t228F#1 = <tensor[4]>[_t2287,_t2289,_t228B,_t228D];
      tensor[4,4] _t2291#1 = <tensor[4,4]>[_t2271,_t227B,_t2285,_t228F];
      real _t2293#1 = 0.1e1;
      real _t2295#1 = 0.e0;
      real _t2297#1 = 0.e0;
      real _t2299#1 = 0.e0;
      tensor[4] _t229B#1 = <tensor[4]>[_t2293,_t2295,_t2297,_t2299];
      real _t229D#1 = 0.e0;
      real _t229F#1 = 0.e0;
      real _t22A1#1 = 0.1e1;
      real _t22A3#1 = 0.e0;
      tensor[4] _t22A5#1 = <tensor[4]>[_t229D,_t229F,_t22A1,_t22A3];
      real _t22A7#1 = 0.e0;
      real _t22A9#1 = -0.1e1;
      real _t22AB#1 = 0.e0;
      real _t22AD#1 = 0.e0;
      tensor[4] _t22AF#1 = <tensor[4]>[_t22A7,_t22A9,_t22AB,_t22AD];
      real _t22B1#1 = 0.e0;
      real _t22B3#1 = 0.e0;
      real _t22B5#1 = 0.e0;
      real _t22B7#1 = 0.1e1;
      tensor[4] _t22B9#1 = <tensor[4]>[_t22B1,_t22B3,_t22B5,_t22B7];
      tensor[4,4] _t22BB#1 = <tensor[4,4]>[_t229B,_t22A5,_t22AF,_t22B9];
      tensor[4,4][4] _t22BD#1 = <tensor[4,4][4]>{_t223D,_t2267,_t2291,_t22BB};
      real _t22BF#1 = -0.1e1;
      real _t22C1#1 = -0.1e1;
      real _t22C3#1 = 0.57735026919e0;
      real _t22C5#1 = 0.1e1;
      tensor[4] _t22C7#1 = <tensor[4]>[_t22BF,_t22C1,_t22C3,_t22C5];
      real _t22C9#1 = 0.1e1;
      real _t22CB#1 = 0.e0;
      real _t22CD#1 = 0.57735026919e0;
      real _t22CF#1 = 0.e0;
      tensor[4] _t22D1#1 = <tensor[4]>[_t22C9,_t22CB,_t22CD,_t22CF];
      real _t22D3#1 = 0.e0;
      real _t22D5#1 = 0.1e1;
      real _t22D7#1 = 0.57735026919e0;
      real _t22D9#1 = 0.e0;
      tensor[4] _t22DB#1 = <tensor[4]>[_t22D3,_t22D5,_t22D7,_t22D9];
      real _t22DD#1 = 0.e0;
      real _t22DF#1 = 0.e0;
      real _t22E1#1 = 0.e0;
      real _t22E3#1 = 0.1e1;
      tensor[4] _t22E5#1 = <tensor[4]>[_t22DD,_t22DF,_t22E1,_t22E3];
      tensor[4,4] _t22E7#1 = <tensor[4,4]>[_t22C7,_t22D1,_t22DB,_t22E5];
      real _t22E9#1 = 0.e0;
      real _t22EB#1 = 0.e0;
      real _t22ED#1 = 0.1e1;
      real _t22EF#1 = 0.e0;
      tensor[4] _t22F1#1 = <tensor[4]>[_t22E9,_t22EB,_t22ED,_t22EF];
      real _t22F3#1 = 0.1e1;
      real _t22F5#1 = 0.e0;
      real _t22F7#1 = 0.e0;
      real _t22F9#1 = 0.e0;
      tensor[4] _t22FB#1 = <tensor[4]>[_t22F3,_t22F5,_t22F7,_t22F9];
      real _t22FD#1 = 0.e0;
      real _t22FF#1 = 0.1e1;
      real _t2301#1 = 0.e0;
      real _t2303#1 = 0.e0;
      tensor[4] _t2305#1 = <tensor[4]>[_t22FD,_t22FF,_t2301,_t2303];
      real _t2307#1 = 0.e0;
      real _t2309#1 = 0.e0;
      real _t230B#1 = 0.e0;
      real _t230D#1 = 0.1e1;
      tensor[4] _t230F#1 = <tensor[4]>[_t2307,_t2309,_t230B,_t230D];
      tensor[4,4] _t2311#1 = <tensor[4,4]>[_t22F1,_t22FB,_t2305,_t230F];
      real _t2313#1 = 0.1e1;
      real _t2315#1 = 0.e0;
      real _t2317#1 = 0.e0;
      real _t2319#1 = 0.e0;
      tensor[4] _t231B#1 = <tensor[4]>[_t2313,_t2315,_t2317,_t2319];
      real _t231D#1 = 0.e0;
      real _t231F#1 = 0.e0;
      real _t2321#1 = -0.1e1;
      real _t2323#1 = 0.e0;
      tensor[4] _t2325#1 = <tensor[4]>[_t231D,_t231F,_t2321,_t2323];
      real _t2327#1 = 0.e0;
      real _t2329#1 = 0.1e1;
      real _t232B#1 = 0.e0;
      real _t232D#1 = 0.e0;
      tensor[4] _t232F#1 = <tensor[4]>[_t2327,_t2329,_t232B,_t232D];
      real _t2331#1 = 0.e0;
      real _t2333#1 = 0.e0;
      real _t2335#1 = 0.e0;
      real _t2337#1 = 0.1e1;
      tensor[4] _t2339#1 = <tensor[4]>[_t2331,_t2333,_t2335,_t2337];
      tensor[4,4] _t233B#1 = <tensor[4,4]>[_t231B,_t2325,_t232F,_t2339];
      real _t233D#1 = 0.1e1;
      real _t233F#1 = 0.e0;
      real _t2341#1 = 0.e0;
      real _t2343#1 = 0.e0;
      tensor[4] _t2345#1 = <tensor[4]>[_t233D,_t233F,_t2341,_t2343];
      real _t2347#1 = 0.e0;
      real _t2349#1 = 0.1e1;
      real _t234B#1 = 0.e0;
      real _t234D#1 = 0.e0;
      tensor[4] _t234F#1 = <tensor[4]>[_t2347,_t2349,_t234B,_t234D];
      real _t2351#1 = 0.e0;
      real _t2353#1 = 0.e0;
      real _t2355#1 = 0.1e1;
      real _t2357#1 = 0.e0;
      tensor[4] _t2359#1 = <tensor[4]>[_t2351,_t2353,_t2355,_t2357];
      real _t235B#1 = 0.e0;
      real _t235D#1 = 0.e0;
      real _t235F#1 = 0.e0;
      real _t2361#1 = 0.1e1;
      tensor[4] _t2363#1 = <tensor[4]>[_t235B,_t235D,_t235F,_t2361];
      tensor[4,4] _t2365#1 = <tensor[4,4]>[_t2345,_t234F,_t2359,_t2363];
      tensor[4,4][4] _t2367#1 = <tensor[4,4][4]>{_t22E7,_t2311,_t233B,_t2365};
      tensor[4,4][4][4] _t2369#1 = <tensor[4,4][4][4]>{_t2169,_t2213,_t22BD,_t2367};
      real _t236B#1 = TensorIndex<real[2],[1]>(time1819);
      int _t236D#1 = FloorToInt(_t236B);
      tensor[4,4][4] _t236F#1 = Subscript<tensor[4,4][4][4]>(_t2369,_t236D);
      real _t2371#1 = TensorIndex<real[2],[1]>(time1819);
      int _t2373#1 = FloorToInt(_t2371);
      int[2] _t2375#1 = nextCell41821 (_t2373,cellId1816,mesh1815);
      int _t2377#1 = 1;
      int _t2379#1 = Subscript<int[2]>(_t2375,_t2377);
      tensor[4,4] _t237B#1 = Subscript<tensor[4,4][4]>(_t236F,_t2379);
      real _t237D#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t237F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t237D,dPos1818);
      tensor[3] _t2381#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t237F,refPos1817);
      real _t2383#1 = TensorIndex<tensor[3],[0]>(_t2381);
      real _t2385#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t2387#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2385,dPos1818);
      tensor[3] _t2389#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2387,refPos1817);
      real _t238B#1 = TensorIndex<tensor[3],[1]>(_t2389);
      real _t238D#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t238F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t238D,dPos1818);
      tensor[3] _t2391#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t238F,refPos1817);
      real _t2393#1 = TensorIndex<tensor[3],[2]>(_t2391);
      real _t2395#1 = 0.1e1;
      tensor[4] _t2397#1 = <tensor[4]>[_t2383,_t238B,_t2393,_t2395];
      tensor[4] _t2399#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t237B,_t2397);
      real _t239B#1 = TensorIndex<tensor[4],[2]>(_t2399);
      tensor[3] _t239D#1 = <tensor[3]>[_t1DE3,_t20BF,_t239B];
      real _t239F#1 = TensorIndex<real[2],[1]>(time1819);
      int _t23A1#1 = FloorToInt(_t239F);
      int[2] _t23A3#1 = nextCell41821 (_t23A1,cellId1816,mesh1815);
      int _t23A5#1 = 1;
      int _t23A7#1 = Subscript<int[2]>(_t23A3,_t23A5);
      femData:MeshPos _t23A9#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(mesh1815,_t1B07,_t239D,_t23A7);
      return _t23A9
      goto JOIN1829
    JOIN1829:  preds = [*RETURN(_t23A9)23AB,*RETURN(_t23B2)23B4]
      unreachable
    ASSIGN23AD:  preds = [COND23B5]
      real _t23AC#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t23AE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t23AC,dPos1818);
      tensor[3] _t23B0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t23AE,refPos1817);
      femData:MeshPos _t23B2#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(mesh1815,_t23B0);
      return _t23B2
      goto JOIN1829
}
  function int[2] nextCell41821 (int faceIdx23B9#2, int cell23BA#1, femData:Mesh mesh23BB#1) {
    ENTRY23D7:  preds = []
      int _t23BC#1 = -1;
      bool _t23BE#1 = EQ<int>(faceIdx23B9,_t23BC);
      if _t23BE then goto ASSIGN23C2 else goto ASSIGN23C9
    ASSIGN23C2:  preds = [COND23D5]
      int _t23C1#1 = -1;
      int _t23C3#1 = -1;
      int[2] _t23C5#1 = <int[2]>{_t23C1,_t23C3};
      return _t23C5
      goto JOIN23C0
    JOIN23C0:  preds = [*RETURN(_t23C5)23C7,*RETURN(_t23D2)23D4]
      unreachable
    ASSIGN23C9:  preds = [COND23D5]
      int _t23C8#1 = 8;
      int _t23CA#1 = IMul(cell23BA,_t23C8);
      int _t23CC#1 = 2;
      int _t23CE#1 = IMul(faceIdx23B9,_t23CC);
      int _t23D0#1 = IAdd(_t23CA,_t23CE);
      int[2] _t23D2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh23BB,_t23D0);
      return _t23D2
      goto JOIN23C0
}
  function tensor[2] _exit2D93 (tensor[3] refPos23D8#92, tensor[3] dPos23D9#92, int i23DA#10) {
    ENTRY2D92:  preds = []
      real time23DB#4 = +inf;
      int face23DD#2 = -1;
      real faceTime23DF#3 = -inf;
      string _t23E1#1 = "\ntest :";
      real _t23E3#1 = 0.57735026919e0;
      real _t23E5#1 = 0.57735026919e0;
      real _t23E7#1 = 0.57735026919e0;
      real _t23E9#1 = 0.57735026919e0;
      tensor[3] _t23EB#1 = <tensor[3]>[_t23E5,_t23E7,_t23E9];
      real _t23ED#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t23EB,refPos23D8);
      real _t23EF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t23E3,_t23ED);
      real _t23F1#1 = 0.57735026919e0;
      real _t23F3#1 = 0.57735026919e0;
      real _t23F5#1 = 0.57735026919e0;
      tensor[3] _t23F7#1 = <tensor[3]>[_t23F1,_t23F3,_t23F5];
      real _t23F9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t23F7,dPos23D9);
      real _t23FB#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t23EF,_t23F9);
      string _t23FD#1 = " test2: ";
      real _t23FF#1 = 0.57735026919e0;
      real _t2401#1 = 0.57735026919e0;
      real _t2403#1 = 0.57735026919e0;
      tensor[3] _t2405#1 = <tensor[3]>[_t23FF,_t2401,_t2403];
      real _t2407#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2405,dPos23D9);
      string _t2409#1 = " insideTest: ";
      real _t240B#1 = 0.1e1;
      real _t240D#1 = 0.1e-7;
      real _t240F#1 = λ(T0[],T1[])<(T0 + T1)> (_t240B,_t240D);
      real _t2411#1 = 0.1e1;
      real _t2413#1 = 0.1e1;
      real _t2415#1 = 0.1e1;
      tensor[3] _t2417#1 = <tensor[3]>[_t2411,_t2413,_t2415];
      real _t2419#1 = 0.57735026919e0;
      real _t241B#1 = 0.57735026919e0;
      real _t241D#1 = 0.57735026919e0;
      real _t241F#1 = 0.57735026919e0;
      tensor[3] _t2421#1 = <tensor[3]>[_t241B,_t241D,_t241F];
      real _t2423#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2421,refPos23D8);
      real _t2425#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2419,_t2423);
      real _t2427#1 = 0.57735026919e0;
      real _t2429#1 = 0.57735026919e0;
      real _t242B#1 = 0.57735026919e0;
      tensor[3] _t242D#1 = <tensor[3]>[_t2427,_t2429,_t242B];
      real _t242F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t242D,dPos23D9);
      real _t2431#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2425,_t242F);
      tensor[3] _t2433#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2431,dPos23D9);
      tensor[3] _t2435#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2433);
      real _t2437#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2417,_t2435);
      bool _t2439#1 = GT<real>(_t240F,_t2437);
      real _t243B#1 = 0.1e-7;
      real _t243D#1 = 0.1e-7;
      real _t243F#1 = 0.1e-7;
      tensor[3] _t2441#1 = <tensor[3]>[_t243B,_t243D,_t243F];
      real _t2443#1 = 0.57735026919e0;
      real _t2445#1 = 0.57735026919e0;
      real _t2447#1 = 0.57735026919e0;
      real _t2449#1 = 0.57735026919e0;
      tensor[3] _t244B#1 = <tensor[3]>[_t2445,_t2447,_t2449];
      real _t244D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t244B,refPos23D8);
      real _t244F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2443,_t244D);
      real _t2451#1 = 0.57735026919e0;
      real _t2453#1 = 0.57735026919e0;
      real _t2455#1 = 0.57735026919e0;
      tensor[3] _t2457#1 = <tensor[3]>[_t2451,_t2453,_t2455];
      real _t2459#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2457,dPos23D9);
      real _t245B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t244F,_t2459);
      tensor[3] _t245D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t245B,dPos23D9);
      tensor[3] _t245F#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t245D);
      tensor[3] _t2461#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2441,_t245F);
      real _t2463#1 = TensorIndex<tensor[3],[0]>(_t2461);
      real _t2465#1 = -0.e0;
      bool _t2467#1 = GT<real>(_t2463,_t2465);
      real _t2469#1 = 0.1e-7;
      real _t246B#1 = 0.1e-7;
      real _t246D#1 = 0.1e-7;
      tensor[3] _t246F#1 = <tensor[3]>[_t2469,_t246B,_t246D];
      real _t2471#1 = 0.57735026919e0;
      real _t2473#1 = 0.57735026919e0;
      real _t2475#1 = 0.57735026919e0;
      real _t2477#1 = 0.57735026919e0;
      tensor[3] _t2479#1 = <tensor[3]>[_t2473,_t2475,_t2477];
      real _t247B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2479,refPos23D8);
      real _t247D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2471,_t247B);
      real _t247F#1 = 0.57735026919e0;
      real _t2481#1 = 0.57735026919e0;
      real _t2483#1 = 0.57735026919e0;
      tensor[3] _t2485#1 = <tensor[3]>[_t247F,_t2481,_t2483];
      real _t2487#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2485,dPos23D9);
      real _t2489#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t247D,_t2487);
      tensor[3] _t248B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2489,dPos23D9);
      tensor[3] _t248D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t248B);
      tensor[3] _t248F#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t246F,_t248D);
      real _t2491#1 = TensorIndex<tensor[3],[1]>(_t248F);
      real _t2493#1 = -0.e0;
      bool _t2495#1 = GT<real>(_t2491,_t2493);
      real _t2497#1 = 0.1e-7;
      real _t2499#1 = 0.1e-7;
      real _t249B#1 = 0.1e-7;
      tensor[3] _t249D#1 = <tensor[3]>[_t2497,_t2499,_t249B];
      real _t249F#1 = 0.57735026919e0;
      real _t24A1#1 = 0.57735026919e0;
      real _t24A3#1 = 0.57735026919e0;
      real _t24A5#1 = 0.57735026919e0;
      tensor[3] _t24A7#1 = <tensor[3]>[_t24A1,_t24A3,_t24A5];
      real _t24A9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t24A7,refPos23D8);
      real _t24AB#1 = λ(T0[],T1[])<(T0) - (T1)> (_t249F,_t24A9);
      real _t24AD#1 = 0.57735026919e0;
      real _t24AF#1 = 0.57735026919e0;
      real _t24B1#1 = 0.57735026919e0;
      tensor[3] _t24B3#1 = <tensor[3]>[_t24AD,_t24AF,_t24B1];
      real _t24B5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t24B3,dPos23D9);
      real _t24B7#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t24AB,_t24B5);
      tensor[3] _t24B9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t24B7,dPos23D9);
      tensor[3] _t24BB#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t24B9);
      tensor[3] _t24BD#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t249D,_t24BB);
      real _t24BF#1 = TensorIndex<tensor[3],[2]>(_t24BD);
      real _t24C1#1 = -0.e0;
      bool _t24C3#1 = GT<real>(_t24BF,_t24C1);
      bool _t24C5#1 = BAnd(_t2495,_t24C3);
      bool _t24C7#1 = BAnd(_t2467,_t24C5);
      bool _t24C9#1 = BAnd(_t2439,_t24C7);
      string _t24CB#1 = " dist: ";
      real _t24CD#1 = 0.57735026919e0;
      real _t24CF#1 = 0.57735026919e0;
      real _t24D1#1 = 0.57735026919e0;
      real _t24D3#1 = 0.57735026919e0;
      tensor[3] _t24D5#1 = <tensor[3]>[_t24CF,_t24D1,_t24D3];
      real _t24D7#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t24D5,refPos23D8);
      real _t24D9#1 = λ(T0[],T1[])<(T0) - (T1)> (_t24CD,_t24D7);
      real _t24DB#1 = λ(T0[])<Abs(T0)> (_t24D9);
      string _t24DD#1 = "signed dist: ";
      real _t24DF#1 = 0.57735026919e0;
      real _t24E1#1 = 0.57735026919e0;
      real _t24E3#1 = 0.57735026919e0;
      real _t24E5#1 = 0.57735026919e0;
      tensor[3] _t24E7#1 = <tensor[3]>[_t24E1,_t24E3,_t24E5];
      real _t24E9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t24E7,refPos23D8);
      real _t24EB#1 = λ(T0[],T1[])<(T0) - (T1)> (_t24DF,_t24E9);
      string _t24ED#1 = " face: ";
      int _t24EF#1 = 0;
      string _t24F1#1 = " place: ";
      real _t24F3#1 = 0.57735026919e0;
      real _t24F5#1 = 0.57735026919e0;
      real _t24F7#1 = 0.57735026919e0;
      real _t24F9#1 = 0.57735026919e0;
      tensor[3] _t24FB#1 = <tensor[3]>[_t24F5,_t24F7,_t24F9];
      real _t24FD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t24FB,refPos23D8);
      real _t24FF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t24F3,_t24FD);
      real _t2501#1 = 0.57735026919e0;
      real _t2503#1 = 0.57735026919e0;
      real _t2505#1 = 0.57735026919e0;
      tensor[3] _t2507#1 = <tensor[3]>[_t2501,_t2503,_t2505];
      real _t2509#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2507,dPos23D9);
      real _t250B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t24FF,_t2509);
      tensor[3] _t250D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t250B,dPos23D9);
      tensor[3] _t250F#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t250D);
      string _t2511#1 = " error: ";
      real _t2513#1 = 0.57735026919e0;
      real _t2515#1 = 0.57735026919e0;
      real _t2517#1 = 0.57735026919e0;
      real _t2519#1 = 0.57735026919e0;
      tensor[3] _t251B#1 = <tensor[3]>[_t2515,_t2517,_t2519];
      real _t251D#1 = 0.57735026919e0;
      real _t251F#1 = 0.57735026919e0;
      real _t2521#1 = 0.57735026919e0;
      real _t2523#1 = 0.57735026919e0;
      tensor[3] _t2525#1 = <tensor[3]>[_t251F,_t2521,_t2523];
      real _t2527#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2525,refPos23D8);
      real _t2529#1 = λ(T0[],T1[])<(T0) - (T1)> (_t251D,_t2527);
      real _t252B#1 = 0.57735026919e0;
      real _t252D#1 = 0.57735026919e0;
      real _t252F#1 = 0.57735026919e0;
      tensor[3] _t2531#1 = <tensor[3]>[_t252B,_t252D,_t252F];
      real _t2533#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2531,dPos23D9);
      real _t2535#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2529,_t2533);
      tensor[3] _t2537#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2535,dPos23D9);
      tensor[3] _t2539#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2537);
      real _t253B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t251B,_t2539);
      real _t253D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2513,_t253B);
      real _t253F#1 = λ(T0[])<Abs(T0)> (_t253D);
      string _t2541#1 = " offset :";
      string _t2543#1 = " dp: ";
      string _t2545#1 = " otherPossibleTime: ";
      string _t2547#1 = "\n";
      string _t2549#1 = "\n original face: ";
      string _t254B#1 = " ";
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t23FB,_t23FD,_t2407,_t2409,_t24C9,_t24CB,_t24DB,_t24DD,_t24EB,_t24ED,_t24EF,_t24F1,_t250F,_t2511,_t253F,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime23DF,_t2547,_t2549,i23DA,_t254B);
      real _t254E#1 = 0.57735026919e0;
      real _t2550#1 = 0.57735026919e0;
      real _t2552#1 = 0.57735026919e0;
      real _t2554#1 = 0.57735026919e0;
      tensor[3] _t2556#1 = <tensor[3]>[_t2550,_t2552,_t2554];
      real _t2558#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2556,refPos23D8);
      real _t255A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t254E,_t2558);
      real _t255C#1 = 0.57735026919e0;
      real _t255E#1 = 0.57735026919e0;
      real _t2560#1 = 0.57735026919e0;
      tensor[3] _t2562#1 = <tensor[3]>[_t255C,_t255E,_t2560];
      real _t2564#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2562,dPos23D9);
      real _t2566#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t255A,_t2564);
      real _t2568#1 = -0.1e-7;
      bool _t256A#1 = GTE<real>(_t2566,_t2568);
      real _t256C#1 = 0.57735026919e0;
      real _t256E#1 = 0.57735026919e0;
      real _t2570#1 = 0.57735026919e0;
      real _t2572#1 = 0.57735026919e0;
      tensor[3] _t2574#1 = <tensor[3]>[_t256E,_t2570,_t2572];
      real _t2576#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2574,refPos23D8);
      real _t2578#1 = λ(T0[],T1[])<(T0) - (T1)> (_t256C,_t2576);
      real _t257A#1 = 0.57735026919e0;
      real _t257C#1 = 0.57735026919e0;
      real _t257E#1 = 0.57735026919e0;
      tensor[3] _t2580#1 = <tensor[3]>[_t257A,_t257C,_t257E];
      real _t2582#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2580,dPos23D9);
      real _t2584#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2578,_t2582);
      bool _t2586#1 = GT<real>(time23DB,_t2584);
      real _t2588#1 = 0.57735026919e0;
      real _t258A#1 = 0.57735026919e0;
      real _t258C#1 = 0.57735026919e0;
      tensor[3] _t258E#1 = <tensor[3]>[_t2588,_t258A,_t258C];
      real _t2590#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t258E,dPos23D9);
      real _t2592#1 = λ(T0[])<Abs(T0)> (_t2590);
      real _t2594#1 = 0.1e-7;
      bool _t2596#1 = GTE<real>(_t2592,_t2594);
      bool _t2598#1 = BAnd(_t2586,_t2596);
      bool _t259A#1 = BAnd(_t256A,_t2598);
      if _t259A then goto ASSIGN259E else goto JOIN259C
    ASSIGN259E:  preds = [COND261F]
      int _t259D#1 = 0;
      bool _t259F#1 = NEQ<int>(i23DA,_t259D);
      if _t259F then goto ASSIGN25A3 else goto ASSIGN25FC
    ASSIGN25A3:  preds = [COND261B]
      string _t25A2#1 = "Saving at this face!";
      real _t25A4#1 = 0.57735026919e0;
      real _t25A6#1 = 0.57735026919e0;
      real _t25A8#1 = 0.57735026919e0;
      real _t25AA#1 = 0.57735026919e0;
      tensor[3] _t25AC#1 = <tensor[3]>[_t25A6,_t25A8,_t25AA];
      real _t25AE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t25AC,refPos23D8);
      real _t25B0#1 = λ(T0[],T1[])<(T0) - (T1)> (_t25A4,_t25AE);
      real _t25B2#1 = 0.57735026919e0;
      real _t25B4#1 = 0.57735026919e0;
      real _t25B6#1 = 0.57735026919e0;
      tensor[3] _t25B8#1 = <tensor[3]>[_t25B2,_t25B4,_t25B6];
      real _t25BA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t25B8,dPos23D9);
      real _t25BC#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t25B0,_t25BA);
      real _t25BE#1 = 0.57735026919e0;
      real _t25C0#1 = 0.57735026919e0;
      real _t25C2#1 = 0.57735026919e0;
      real _t25C4#1 = 0.57735026919e0;
      tensor[3] _t25C6#1 = <tensor[3]>[_t25C0,_t25C2,_t25C4];
      real _t25C8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t25C6,refPos23D8);
      real _t25CA#1 = λ(T0[],T1[])<(T0) - (T1)> (_t25BE,_t25C8);
      real _t25CC#1 = 0.57735026919e0;
      real _t25CE#1 = 0.57735026919e0;
      real _t25D0#1 = 0.57735026919e0;
      tensor[3] _t25D2#1 = <tensor[3]>[_t25CC,_t25CE,_t25D0];
      real _t25D4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t25D2,dPos23D9);
      real _t25D6#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t25CA,_t25D4);
      bool _t25D8#1 = GT<real>(time23DB,_t25D6);
      string _t25DA#1 = "\n";
      Print<[string,real,bool,string]>(_t25A2,_t25BC,_t25D8,_t25DA);
      real _t25DD#1 = 0.57735026919e0;
      real _t25DF#1 = 0.57735026919e0;
      real _t25E1#1 = 0.57735026919e0;
      real _t25E3#1 = 0.57735026919e0;
      tensor[3] _t25E5#1 = <tensor[3]>[_t25DF,_t25E1,_t25E3];
      real _t25E7#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t25E5,refPos23D8);
      real _t25E9#1 = λ(T0[],T1[])<(T0) - (T1)> (_t25DD,_t25E7);
      real _t25EB#1 = 0.57735026919e0;
      real _t25ED#1 = 0.57735026919e0;
      real _t25EF#1 = 0.57735026919e0;
      tensor[3] _t25F1#1 = <tensor[3]>[_t25EB,_t25ED,_t25EF];
      real _t25F3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t25F1,dPos23D9);
      real time25F5#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t25E9,_t25F3);
      int face25F8#1 = 0;
      goto JOIN25A1
    JOIN25A1:  preds = [ASSIGN25FA,MASSIGN261A]
      real faceTime2614#1 = phi(faceTime23DF,faceTime2613)
      int face25F9#1 = phi(face25F8,face23DD)
      real time25F6#1 = phi(time25F5,time23DB)
      goto JOIN259C
    JOIN259C:  preds = [JOIN25A1,COND261F]
      real faceTime261E#3 = phi(faceTime2614,faceTime23DF)
      int face261D#2 = phi(face25F9,face23DD)
      real time261C#4 = phi(time25F6,time23DB)
      string _t2620#1 = "\ntest :";
      real _t2622#1 = 0.e0;
      real _t2624#1 = -0.1e1;
      real _t2626#1 = 0.e0;
      real _t2628#1 = 0.e0;
      tensor[3] _t262A#1 = <tensor[3]>[_t2624,_t2626,_t2628];
      real _t262C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t262A,refPos23D8);
      real _t262E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2622,_t262C);
      real _t2630#1 = -0.1e1;
      real _t2632#1 = 0.e0;
      real _t2634#1 = 0.e0;
      tensor[3] _t2636#1 = <tensor[3]>[_t2630,_t2632,_t2634];
      real _t2638#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2636,dPos23D9);
      real _t263A#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t262E,_t2638);
      string _t263C#1 = " test2: ";
      real _t263E#1 = -0.1e1;
      real _t2640#1 = 0.e0;
      real _t2642#1 = 0.e0;
      tensor[3] _t2644#1 = <tensor[3]>[_t263E,_t2640,_t2642];
      real _t2646#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2644,dPos23D9);
      string _t2648#1 = " insideTest: ";
      real _t264A#1 = 0.1e1;
      real _t264C#1 = 0.1e-7;
      real _t264E#1 = λ(T0[],T1[])<(T0 + T1)> (_t264A,_t264C);
      real _t2650#1 = 0.1e1;
      real _t2652#1 = 0.1e1;
      real _t2654#1 = 0.1e1;
      tensor[3] _t2656#1 = <tensor[3]>[_t2650,_t2652,_t2654];
      real _t2658#1 = 0.e0;
      real _t265A#1 = -0.1e1;
      real _t265C#1 = 0.e0;
      real _t265E#1 = 0.e0;
      tensor[3] _t2660#1 = <tensor[3]>[_t265A,_t265C,_t265E];
      real _t2662#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2660,refPos23D8);
      real _t2664#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2658,_t2662);
      real _t2666#1 = -0.1e1;
      real _t2668#1 = 0.e0;
      real _t266A#1 = 0.e0;
      tensor[3] _t266C#1 = <tensor[3]>[_t2666,_t2668,_t266A];
      real _t266E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t266C,dPos23D9);
      real _t2670#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2664,_t266E);
      tensor[3] _t2672#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2670,dPos23D9);
      tensor[3] _t2674#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2672);
      real _t2676#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2656,_t2674);
      bool _t2678#1 = GT<real>(_t264E,_t2676);
      real _t267A#1 = 0.1e-7;
      real _t267C#1 = 0.1e-7;
      real _t267E#1 = 0.1e-7;
      tensor[3] _t2680#1 = <tensor[3]>[_t267A,_t267C,_t267E];
      real _t2682#1 = 0.e0;
      real _t2684#1 = -0.1e1;
      real _t2686#1 = 0.e0;
      real _t2688#1 = 0.e0;
      tensor[3] _t268A#1 = <tensor[3]>[_t2684,_t2686,_t2688];
      real _t268C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t268A,refPos23D8);
      real _t268E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2682,_t268C);
      real _t2690#1 = -0.1e1;
      real _t2692#1 = 0.e0;
      real _t2694#1 = 0.e0;
      tensor[3] _t2696#1 = <tensor[3]>[_t2690,_t2692,_t2694];
      real _t2698#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2696,dPos23D9);
      real _t269A#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t268E,_t2698);
      tensor[3] _t269C#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t269A,dPos23D9);
      tensor[3] _t269E#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t269C);
      tensor[3] _t26A0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2680,_t269E);
      real _t26A2#1 = TensorIndex<tensor[3],[0]>(_t26A0);
      real _t26A4#1 = -0.e0;
      bool _t26A6#1 = GT<real>(_t26A2,_t26A4);
      real _t26A8#1 = 0.1e-7;
      real _t26AA#1 = 0.1e-7;
      real _t26AC#1 = 0.1e-7;
      tensor[3] _t26AE#1 = <tensor[3]>[_t26A8,_t26AA,_t26AC];
      real _t26B0#1 = 0.e0;
      real _t26B2#1 = -0.1e1;
      real _t26B4#1 = 0.e0;
      real _t26B6#1 = 0.e0;
      tensor[3] _t26B8#1 = <tensor[3]>[_t26B2,_t26B4,_t26B6];
      real _t26BA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t26B8,refPos23D8);
      real _t26BC#1 = λ(T0[],T1[])<(T0) - (T1)> (_t26B0,_t26BA);
      real _t26BE#1 = -0.1e1;
      real _t26C0#1 = 0.e0;
      real _t26C2#1 = 0.e0;
      tensor[3] _t26C4#1 = <tensor[3]>[_t26BE,_t26C0,_t26C2];
      real _t26C6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t26C4,dPos23D9);
      real _t26C8#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t26BC,_t26C6);
      tensor[3] _t26CA#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t26C8,dPos23D9);
      tensor[3] _t26CC#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t26CA);
      tensor[3] _t26CE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t26AE,_t26CC);
      real _t26D0#1 = TensorIndex<tensor[3],[1]>(_t26CE);
      real _t26D2#1 = -0.e0;
      bool _t26D4#1 = GT<real>(_t26D0,_t26D2);
      real _t26D6#1 = 0.1e-7;
      real _t26D8#1 = 0.1e-7;
      real _t26DA#1 = 0.1e-7;
      tensor[3] _t26DC#1 = <tensor[3]>[_t26D6,_t26D8,_t26DA];
      real _t26DE#1 = 0.e0;
      real _t26E0#1 = -0.1e1;
      real _t26E2#1 = 0.e0;
      real _t26E4#1 = 0.e0;
      tensor[3] _t26E6#1 = <tensor[3]>[_t26E0,_t26E2,_t26E4];
      real _t26E8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t26E6,refPos23D8);
      real _t26EA#1 = λ(T0[],T1[])<(T0) - (T1)> (_t26DE,_t26E8);
      real _t26EC#1 = -0.1e1;
      real _t26EE#1 = 0.e0;
      real _t26F0#1 = 0.e0;
      tensor[3] _t26F2#1 = <tensor[3]>[_t26EC,_t26EE,_t26F0];
      real _t26F4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t26F2,dPos23D9);
      real _t26F6#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t26EA,_t26F4);
      tensor[3] _t26F8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t26F6,dPos23D9);
      tensor[3] _t26FA#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t26F8);
      tensor[3] _t26FC#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t26DC,_t26FA);
      real _t26FE#1 = TensorIndex<tensor[3],[2]>(_t26FC);
      real _t2700#1 = -0.e0;
      bool _t2702#1 = GT<real>(_t26FE,_t2700);
      bool _t2704#1 = BAnd(_t26D4,_t2702);
      bool _t2706#1 = BAnd(_t26A6,_t2704);
      bool _t2708#1 = BAnd(_t2678,_t2706);
      string _t270A#1 = " dist: ";
      real _t270C#1 = 0.e0;
      real _t270E#1 = -0.1e1;
      real _t2710#1 = 0.e0;
      real _t2712#1 = 0.e0;
      tensor[3] _t2714#1 = <tensor[3]>[_t270E,_t2710,_t2712];
      real _t2716#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2714,refPos23D8);
      real _t2718#1 = λ(T0[],T1[])<(T0) - (T1)> (_t270C,_t2716);
      real _t271A#1 = λ(T0[])<Abs(T0)> (_t2718);
      string _t271C#1 = "signed dist: ";
      real _t271E#1 = 0.e0;
      real _t2720#1 = -0.1e1;
      real _t2722#1 = 0.e0;
      real _t2724#1 = 0.e0;
      tensor[3] _t2726#1 = <tensor[3]>[_t2720,_t2722,_t2724];
      real _t2728#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2726,refPos23D8);
      real _t272A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t271E,_t2728);
      string _t272C#1 = " face: ";
      int _t272E#1 = 1;
      string _t2730#1 = " place: ";
      real _t2732#1 = 0.e0;
      real _t2734#1 = -0.1e1;
      real _t2736#1 = 0.e0;
      real _t2738#1 = 0.e0;
      tensor[3] _t273A#1 = <tensor[3]>[_t2734,_t2736,_t2738];
      real _t273C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t273A,refPos23D8);
      real _t273E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2732,_t273C);
      real _t2740#1 = -0.1e1;
      real _t2742#1 = 0.e0;
      real _t2744#1 = 0.e0;
      tensor[3] _t2746#1 = <tensor[3]>[_t2740,_t2742,_t2744];
      real _t2748#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2746,dPos23D9);
      real _t274A#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t273E,_t2748);
      tensor[3] _t274C#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t274A,dPos23D9);
      tensor[3] _t274E#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t274C);
      string _t2750#1 = " error: ";
      real _t2752#1 = 0.e0;
      real _t2754#1 = -0.1e1;
      real _t2756#1 = 0.e0;
      real _t2758#1 = 0.e0;
      tensor[3] _t275A#1 = <tensor[3]>[_t2754,_t2756,_t2758];
      real _t275C#1 = 0.e0;
      real _t275E#1 = -0.1e1;
      real _t2760#1 = 0.e0;
      real _t2762#1 = 0.e0;
      tensor[3] _t2764#1 = <tensor[3]>[_t275E,_t2760,_t2762];
      real _t2766#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2764,refPos23D8);
      real _t2768#1 = λ(T0[],T1[])<(T0) - (T1)> (_t275C,_t2766);
      real _t276A#1 = -0.1e1;
      real _t276C#1 = 0.e0;
      real _t276E#1 = 0.e0;
      tensor[3] _t2770#1 = <tensor[3]>[_t276A,_t276C,_t276E];
      real _t2772#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2770,dPos23D9);
      real _t2774#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2768,_t2772);
      tensor[3] _t2776#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2774,dPos23D9);
      tensor[3] _t2778#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2776);
      real _t277A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t275A,_t2778);
      real _t277C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2752,_t277A);
      real _t277E#1 = λ(T0[])<Abs(T0)> (_t277C);
      string _t2780#1 = " offset :";
      string _t2782#1 = " dp: ";
      string _t2784#1 = " otherPossibleTime: ";
      string _t2786#1 = "\n";
      string _t2788#1 = "\n original face: ";
      string _t278A#1 = " ";
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t2620,_t263A,_t263C,_t2646,_t2648,_t2708,_t270A,_t271A,_t271C,_t272A,_t272C,_t272E,_t2730,_t274E,_t2750,_t277E,_t2780,refPos23D8,_t2782,dPos23D9,_t2784,faceTime261E,_t2786,_t2788,i23DA,_t278A);
      real _t278D#1 = 0.e0;
      real _t278F#1 = -0.1e1;
      real _t2791#1 = 0.e0;
      real _t2793#1 = 0.e0;
      tensor[3] _t2795#1 = <tensor[3]>[_t278F,_t2791,_t2793];
      real _t2797#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2795,refPos23D8);
      real _t2799#1 = λ(T0[],T1[])<(T0) - (T1)> (_t278D,_t2797);
      real _t279B#1 = -0.1e1;
      real _t279D#1 = 0.e0;
      real _t279F#1 = 0.e0;
      tensor[3] _t27A1#1 = <tensor[3]>[_t279B,_t279D,_t279F];
      real _t27A3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t27A1,dPos23D9);
      real _t27A5#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2799,_t27A3);
      real _t27A7#1 = -0.1e-7;
      bool _t27A9#1 = GTE<real>(_t27A5,_t27A7);
      real _t27AB#1 = 0.e0;
      real _t27AD#1 = -0.1e1;
      real _t27AF#1 = 0.e0;
      real _t27B1#1 = 0.e0;
      tensor[3] _t27B3#1 = <tensor[3]>[_t27AD,_t27AF,_t27B1];
      real _t27B5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t27B3,refPos23D8);
      real _t27B7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t27AB,_t27B5);
      real _t27B9#1 = -0.1e1;
      real _t27BB#1 = 0.e0;
      real _t27BD#1 = 0.e0;
      tensor[3] _t27BF#1 = <tensor[3]>[_t27B9,_t27BB,_t27BD];
      real _t27C1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t27BF,dPos23D9);
      real _t27C3#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t27B7,_t27C1);
      bool _t27C5#1 = GT<real>(time261C,_t27C3);
      real _t27C7#1 = -0.1e1;
      real _t27C9#1 = 0.e0;
      real _t27CB#1 = 0.e0;
      tensor[3] _t27CD#1 = <tensor[3]>[_t27C7,_t27C9,_t27CB];
      real _t27CF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t27CD,dPos23D9);
      real _t27D1#1 = λ(T0[])<Abs(T0)> (_t27CF);
      real _t27D3#1 = 0.1e-7;
      bool _t27D5#1 = GTE<real>(_t27D1,_t27D3);
      bool _t27D7#1 = BAnd(_t27C5,_t27D5);
      bool _t27D9#1 = BAnd(_t27A9,_t27D7);
      if _t27D9 then goto ASSIGN27DD else goto JOIN27DB
    ASSIGN27DD:  preds = [COND285E]
      int _t27DC#1 = 1;
      bool _t27DE#1 = NEQ<int>(i23DA,_t27DC);
      if _t27DE then goto ASSIGN27E2 else goto ASSIGN283B
    ASSIGN27E2:  preds = [COND285A]
      string _t27E1#1 = "Saving at this face!";
      real _t27E3#1 = 0.e0;
      real _t27E5#1 = -0.1e1;
      real _t27E7#1 = 0.e0;
      real _t27E9#1 = 0.e0;
      tensor[3] _t27EB#1 = <tensor[3]>[_t27E5,_t27E7,_t27E9];
      real _t27ED#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t27EB,refPos23D8);
      real _t27EF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t27E3,_t27ED);
      real _t27F1#1 = -0.1e1;
      real _t27F3#1 = 0.e0;
      real _t27F5#1 = 0.e0;
      tensor[3] _t27F7#1 = <tensor[3]>[_t27F1,_t27F3,_t27F5];
      real _t27F9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t27F7,dPos23D9);
      real _t27FB#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t27EF,_t27F9);
      real _t27FD#1 = 0.e0;
      real _t27FF#1 = -0.1e1;
      real _t2801#1 = 0.e0;
      real _t2803#1 = 0.e0;
      tensor[3] _t2805#1 = <tensor[3]>[_t27FF,_t2801,_t2803];
      real _t2807#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2805,refPos23D8);
      real _t2809#1 = λ(T0[],T1[])<(T0) - (T1)> (_t27FD,_t2807);
      real _t280B#1 = -0.1e1;
      real _t280D#1 = 0.e0;
      real _t280F#1 = 0.e0;
      tensor[3] _t2811#1 = <tensor[3]>[_t280B,_t280D,_t280F];
      real _t2813#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2811,dPos23D9);
      real _t2815#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2809,_t2813);
      bool _t2817#1 = GT<real>(time261C,_t2815);
      string _t2819#1 = "\n";
      Print<[string,real,bool,string]>(_t27E1,_t27FB,_t2817,_t2819);
      real _t281C#1 = 0.e0;
      real _t281E#1 = -0.1e1;
      real _t2820#1 = 0.e0;
      real _t2822#1 = 0.e0;
      tensor[3] _t2824#1 = <tensor[3]>[_t281E,_t2820,_t2822];
      real _t2826#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2824,refPos23D8);
      real _t2828#1 = λ(T0[],T1[])<(T0) - (T1)> (_t281C,_t2826);
      real _t282A#1 = -0.1e1;
      real _t282C#1 = 0.e0;
      real _t282E#1 = 0.e0;
      tensor[3] _t2830#1 = <tensor[3]>[_t282A,_t282C,_t282E];
      real _t2832#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2830,dPos23D9);
      real time2834#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2828,_t2832);
      int face2837#1 = 1;
      goto JOIN27E0
    JOIN27E0:  preds = [ASSIGN2839,MASSIGN2859]
      real faceTime2853#1 = phi(faceTime261E,faceTime2852)
      int face2838#1 = phi(face2837,face261D)
      real time2835#1 = phi(time2834,time261C)
      goto JOIN27DB
    JOIN27DB:  preds = [JOIN27E0,COND285E]
      real faceTime285D#3 = phi(faceTime2853,faceTime261E)
      int face285C#2 = phi(face2838,face261D)
      real time285B#4 = phi(time2835,time261C)
      string _t285F#1 = "\ntest :";
      real _t2861#1 = 0.e0;
      real _t2863#1 = 0.e0;
      real _t2865#1 = -0.1e1;
      real _t2867#1 = 0.e0;
      tensor[3] _t2869#1 = <tensor[3]>[_t2863,_t2865,_t2867];
      real _t286B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2869,refPos23D8);
      real _t286D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2861,_t286B);
      real _t286F#1 = 0.e0;
      real _t2871#1 = -0.1e1;
      real _t2873#1 = 0.e0;
      tensor[3] _t2875#1 = <tensor[3]>[_t286F,_t2871,_t2873];
      real _t2877#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2875,dPos23D9);
      real _t2879#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t286D,_t2877);
      string _t287B#1 = " test2: ";
      real _t287D#1 = 0.e0;
      real _t287F#1 = -0.1e1;
      real _t2881#1 = 0.e0;
      tensor[3] _t2883#1 = <tensor[3]>[_t287D,_t287F,_t2881];
      real _t2885#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2883,dPos23D9);
      string _t2887#1 = " insideTest: ";
      real _t2889#1 = 0.1e1;
      real _t288B#1 = 0.1e-7;
      real _t288D#1 = λ(T0[],T1[])<(T0 + T1)> (_t2889,_t288B);
      real _t288F#1 = 0.1e1;
      real _t2891#1 = 0.1e1;
      real _t2893#1 = 0.1e1;
      tensor[3] _t2895#1 = <tensor[3]>[_t288F,_t2891,_t2893];
      real _t2897#1 = 0.e0;
      real _t2899#1 = 0.e0;
      real _t289B#1 = -0.1e1;
      real _t289D#1 = 0.e0;
      tensor[3] _t289F#1 = <tensor[3]>[_t2899,_t289B,_t289D];
      real _t28A1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t289F,refPos23D8);
      real _t28A3#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2897,_t28A1);
      real _t28A5#1 = 0.e0;
      real _t28A7#1 = -0.1e1;
      real _t28A9#1 = 0.e0;
      tensor[3] _t28AB#1 = <tensor[3]>[_t28A5,_t28A7,_t28A9];
      real _t28AD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t28AB,dPos23D9);
      real _t28AF#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t28A3,_t28AD);
      tensor[3] _t28B1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t28AF,dPos23D9);
      tensor[3] _t28B3#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t28B1);
      real _t28B5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2895,_t28B3);
      bool _t28B7#1 = GT<real>(_t288D,_t28B5);
      real _t28B9#1 = 0.1e-7;
      real _t28BB#1 = 0.1e-7;
      real _t28BD#1 = 0.1e-7;
      tensor[3] _t28BF#1 = <tensor[3]>[_t28B9,_t28BB,_t28BD];
      real _t28C1#1 = 0.e0;
      real _t28C3#1 = 0.e0;
      real _t28C5#1 = -0.1e1;
      real _t28C7#1 = 0.e0;
      tensor[3] _t28C9#1 = <tensor[3]>[_t28C3,_t28C5,_t28C7];
      real _t28CB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t28C9,refPos23D8);
      real _t28CD#1 = λ(T0[],T1[])<(T0) - (T1)> (_t28C1,_t28CB);
      real _t28CF#1 = 0.e0;
      real _t28D1#1 = -0.1e1;
      real _t28D3#1 = 0.e0;
      tensor[3] _t28D5#1 = <tensor[3]>[_t28CF,_t28D1,_t28D3];
      real _t28D7#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t28D5,dPos23D9);
      real _t28D9#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t28CD,_t28D7);
      tensor[3] _t28DB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t28D9,dPos23D9);
      tensor[3] _t28DD#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t28DB);
      tensor[3] _t28DF#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t28BF,_t28DD);
      real _t28E1#1 = TensorIndex<tensor[3],[0]>(_t28DF);
      real _t28E3#1 = -0.e0;
      bool _t28E5#1 = GT<real>(_t28E1,_t28E3);
      real _t28E7#1 = 0.1e-7;
      real _t28E9#1 = 0.1e-7;
      real _t28EB#1 = 0.1e-7;
      tensor[3] _t28ED#1 = <tensor[3]>[_t28E7,_t28E9,_t28EB];
      real _t28EF#1 = 0.e0;
      real _t28F1#1 = 0.e0;
      real _t28F3#1 = -0.1e1;
      real _t28F5#1 = 0.e0;
      tensor[3] _t28F7#1 = <tensor[3]>[_t28F1,_t28F3,_t28F5];
      real _t28F9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t28F7,refPos23D8);
      real _t28FB#1 = λ(T0[],T1[])<(T0) - (T1)> (_t28EF,_t28F9);
      real _t28FD#1 = 0.e0;
      real _t28FF#1 = -0.1e1;
      real _t2901#1 = 0.e0;
      tensor[3] _t2903#1 = <tensor[3]>[_t28FD,_t28FF,_t2901];
      real _t2905#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2903,dPos23D9);
      real _t2907#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t28FB,_t2905);
      tensor[3] _t2909#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2907,dPos23D9);
      tensor[3] _t290B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2909);
      tensor[3] _t290D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t28ED,_t290B);
      real _t290F#1 = TensorIndex<tensor[3],[1]>(_t290D);
      real _t2911#1 = -0.e0;
      bool _t2913#1 = GT<real>(_t290F,_t2911);
      real _t2915#1 = 0.1e-7;
      real _t2917#1 = 0.1e-7;
      real _t2919#1 = 0.1e-7;
      tensor[3] _t291B#1 = <tensor[3]>[_t2915,_t2917,_t2919];
      real _t291D#1 = 0.e0;
      real _t291F#1 = 0.e0;
      real _t2921#1 = -0.1e1;
      real _t2923#1 = 0.e0;
      tensor[3] _t2925#1 = <tensor[3]>[_t291F,_t2921,_t2923];
      real _t2927#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2925,refPos23D8);
      real _t2929#1 = λ(T0[],T1[])<(T0) - (T1)> (_t291D,_t2927);
      real _t292B#1 = 0.e0;
      real _t292D#1 = -0.1e1;
      real _t292F#1 = 0.e0;
      tensor[3] _t2931#1 = <tensor[3]>[_t292B,_t292D,_t292F];
      real _t2933#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2931,dPos23D9);
      real _t2935#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2929,_t2933);
      tensor[3] _t2937#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2935,dPos23D9);
      tensor[3] _t2939#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2937);
      tensor[3] _t293B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t291B,_t2939);
      real _t293D#1 = TensorIndex<tensor[3],[2]>(_t293B);
      real _t293F#1 = -0.e0;
      bool _t2941#1 = GT<real>(_t293D,_t293F);
      bool _t2943#1 = BAnd(_t2913,_t2941);
      bool _t2945#1 = BAnd(_t28E5,_t2943);
      bool _t2947#1 = BAnd(_t28B7,_t2945);
      string _t2949#1 = " dist: ";
      real _t294B#1 = 0.e0;
      real _t294D#1 = 0.e0;
      real _t294F#1 = -0.1e1;
      real _t2951#1 = 0.e0;
      tensor[3] _t2953#1 = <tensor[3]>[_t294D,_t294F,_t2951];
      real _t2955#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2953,refPos23D8);
      real _t2957#1 = λ(T0[],T1[])<(T0) - (T1)> (_t294B,_t2955);
      real _t2959#1 = λ(T0[])<Abs(T0)> (_t2957);
      string _t295B#1 = "signed dist: ";
      real _t295D#1 = 0.e0;
      real _t295F#1 = 0.e0;
      real _t2961#1 = -0.1e1;
      real _t2963#1 = 0.e0;
      tensor[3] _t2965#1 = <tensor[3]>[_t295F,_t2961,_t2963];
      real _t2967#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2965,refPos23D8);
      real _t2969#1 = λ(T0[],T1[])<(T0) - (T1)> (_t295D,_t2967);
      string _t296B#1 = " face: ";
      int _t296D#1 = 2;
      string _t296F#1 = " place: ";
      real _t2971#1 = 0.e0;
      real _t2973#1 = 0.e0;
      real _t2975#1 = -0.1e1;
      real _t2977#1 = 0.e0;
      tensor[3] _t2979#1 = <tensor[3]>[_t2973,_t2975,_t2977];
      real _t297B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2979,refPos23D8);
      real _t297D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2971,_t297B);
      real _t297F#1 = 0.e0;
      real _t2981#1 = -0.1e1;
      real _t2983#1 = 0.e0;
      tensor[3] _t2985#1 = <tensor[3]>[_t297F,_t2981,_t2983];
      real _t2987#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2985,dPos23D9);
      real _t2989#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t297D,_t2987);
      tensor[3] _t298B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2989,dPos23D9);
      tensor[3] _t298D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t298B);
      string _t298F#1 = " error: ";
      real _t2991#1 = 0.e0;
      real _t2993#1 = 0.e0;
      real _t2995#1 = -0.1e1;
      real _t2997#1 = 0.e0;
      tensor[3] _t2999#1 = <tensor[3]>[_t2993,_t2995,_t2997];
      real _t299B#1 = 0.e0;
      real _t299D#1 = 0.e0;
      real _t299F#1 = -0.1e1;
      real _t29A1#1 = 0.e0;
      tensor[3] _t29A3#1 = <tensor[3]>[_t299D,_t299F,_t29A1];
      real _t29A5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t29A3,refPos23D8);
      real _t29A7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t299B,_t29A5);
      real _t29A9#1 = 0.e0;
      real _t29AB#1 = -0.1e1;
      real _t29AD#1 = 0.e0;
      tensor[3] _t29AF#1 = <tensor[3]>[_t29A9,_t29AB,_t29AD];
      real _t29B1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t29AF,dPos23D9);
      real _t29B3#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t29A7,_t29B1);
      tensor[3] _t29B5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t29B3,dPos23D9);
      tensor[3] _t29B7#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t29B5);
      real _t29B9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2999,_t29B7);
      real _t29BB#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2991,_t29B9);
      real _t29BD#1 = λ(T0[])<Abs(T0)> (_t29BB);
      string _t29BF#1 = " offset :";
      string _t29C1#1 = " dp: ";
      string _t29C3#1 = " otherPossibleTime: ";
      string _t29C5#1 = "\n";
      string _t29C7#1 = "\n original face: ";
      string _t29C9#1 = " ";
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t285F,_t2879,_t287B,_t2885,_t2887,_t2947,_t2949,_t2959,_t295B,_t2969,_t296B,_t296D,_t296F,_t298D,_t298F,_t29BD,_t29BF,refPos23D8,_t29C1,dPos23D9,_t29C3,faceTime285D,_t29C5,_t29C7,i23DA,_t29C9);
      real _t29CC#1 = 0.e0;
      real _t29CE#1 = 0.e0;
      real _t29D0#1 = -0.1e1;
      real _t29D2#1 = 0.e0;
      tensor[3] _t29D4#1 = <tensor[3]>[_t29CE,_t29D0,_t29D2];
      real _t29D6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t29D4,refPos23D8);
      real _t29D8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t29CC,_t29D6);
      real _t29DA#1 = 0.e0;
      real _t29DC#1 = -0.1e1;
      real _t29DE#1 = 0.e0;
      tensor[3] _t29E0#1 = <tensor[3]>[_t29DA,_t29DC,_t29DE];
      real _t29E2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t29E0,dPos23D9);
      real _t29E4#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t29D8,_t29E2);
      real _t29E6#1 = -0.1e-7;
      bool _t29E8#1 = GTE<real>(_t29E4,_t29E6);
      real _t29EA#1 = 0.e0;
      real _t29EC#1 = 0.e0;
      real _t29EE#1 = -0.1e1;
      real _t29F0#1 = 0.e0;
      tensor[3] _t29F2#1 = <tensor[3]>[_t29EC,_t29EE,_t29F0];
      real _t29F4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t29F2,refPos23D8);
      real _t29F6#1 = λ(T0[],T1[])<(T0) - (T1)> (_t29EA,_t29F4);
      real _t29F8#1 = 0.e0;
      real _t29FA#1 = -0.1e1;
      real _t29FC#1 = 0.e0;
      tensor[3] _t29FE#1 = <tensor[3]>[_t29F8,_t29FA,_t29FC];
      real _t2A00#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t29FE,dPos23D9);
      real _t2A02#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t29F6,_t2A00);
      bool _t2A04#1 = GT<real>(time285B,_t2A02);
      real _t2A06#1 = 0.e0;
      real _t2A08#1 = -0.1e1;
      real _t2A0A#1 = 0.e0;
      tensor[3] _t2A0C#1 = <tensor[3]>[_t2A06,_t2A08,_t2A0A];
      real _t2A0E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2A0C,dPos23D9);
      real _t2A10#1 = λ(T0[])<Abs(T0)> (_t2A0E);
      real _t2A12#1 = 0.1e-7;
      bool _t2A14#1 = GTE<real>(_t2A10,_t2A12);
      bool _t2A16#1 = BAnd(_t2A04,_t2A14);
      bool _t2A18#1 = BAnd(_t29E8,_t2A16);
      if _t2A18 then goto ASSIGN2A1C else goto JOIN2A1A
    ASSIGN2A1C:  preds = [COND2A9D]
      int _t2A1B#1 = 2;
      bool _t2A1D#1 = NEQ<int>(i23DA,_t2A1B);
      if _t2A1D then goto ASSIGN2A21 else goto ASSIGN2A7A
    ASSIGN2A21:  preds = [COND2A99]
      string _t2A20#1 = "Saving at this face!";
      real _t2A22#1 = 0.e0;
      real _t2A24#1 = 0.e0;
      real _t2A26#1 = -0.1e1;
      real _t2A28#1 = 0.e0;
      tensor[3] _t2A2A#1 = <tensor[3]>[_t2A24,_t2A26,_t2A28];
      real _t2A2C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2A2A,refPos23D8);
      real _t2A2E#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2A22,_t2A2C);
      real _t2A30#1 = 0.e0;
      real _t2A32#1 = -0.1e1;
      real _t2A34#1 = 0.e0;
      tensor[3] _t2A36#1 = <tensor[3]>[_t2A30,_t2A32,_t2A34];
      real _t2A38#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2A36,dPos23D9);
      real _t2A3A#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2A2E,_t2A38);
      real _t2A3C#1 = 0.e0;
      real _t2A3E#1 = 0.e0;
      real _t2A40#1 = -0.1e1;
      real _t2A42#1 = 0.e0;
      tensor[3] _t2A44#1 = <tensor[3]>[_t2A3E,_t2A40,_t2A42];
      real _t2A46#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2A44,refPos23D8);
      real _t2A48#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2A3C,_t2A46);
      real _t2A4A#1 = 0.e0;
      real _t2A4C#1 = -0.1e1;
      real _t2A4E#1 = 0.e0;
      tensor[3] _t2A50#1 = <tensor[3]>[_t2A4A,_t2A4C,_t2A4E];
      real _t2A52#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2A50,dPos23D9);
      real _t2A54#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2A48,_t2A52);
      bool _t2A56#1 = GT<real>(time285B,_t2A54);
      string _t2A58#1 = "\n";
      Print<[string,real,bool,string]>(_t2A20,_t2A3A,_t2A56,_t2A58);
      real _t2A5B#1 = 0.e0;
      real _t2A5D#1 = 0.e0;
      real _t2A5F#1 = -0.1e1;
      real _t2A61#1 = 0.e0;
      tensor[3] _t2A63#1 = <tensor[3]>[_t2A5D,_t2A5F,_t2A61];
      real _t2A65#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2A63,refPos23D8);
      real _t2A67#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2A5B,_t2A65);
      real _t2A69#1 = 0.e0;
      real _t2A6B#1 = -0.1e1;
      real _t2A6D#1 = 0.e0;
      tensor[3] _t2A6F#1 = <tensor[3]>[_t2A69,_t2A6B,_t2A6D];
      real _t2A71#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2A6F,dPos23D9);
      real time2A73#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2A67,_t2A71);
      int face2A76#1 = 2;
      goto JOIN2A1F
    JOIN2A1F:  preds = [ASSIGN2A78,MASSIGN2A98]
      real faceTime2A92#1 = phi(faceTime285D,faceTime2A91)
      int face2A77#1 = phi(face2A76,face285C)
      real time2A74#1 = phi(time2A73,time285B)
      goto JOIN2A1A
    JOIN2A1A:  preds = [JOIN2A1F,COND2A9D]
      real faceTime2A9C#3 = phi(faceTime2A92,faceTime285D)
      int face2A9B#2 = phi(face2A77,face285C)
      real time2A9A#4 = phi(time2A74,time285B)
      string _t2A9E#1 = "\ntest :";
      real _t2AA0#1 = 0.e0;
      real _t2AA2#1 = 0.e0;
      real _t2AA4#1 = 0.e0;
      real _t2AA6#1 = -0.1e1;
      tensor[3] _t2AA8#1 = <tensor[3]>[_t2AA2,_t2AA4,_t2AA6];
      real _t2AAA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2AA8,refPos23D8);
      real _t2AAC#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2AA0,_t2AAA);
      real _t2AAE#1 = 0.e0;
      real _t2AB0#1 = 0.e0;
      real _t2AB2#1 = -0.1e1;
      tensor[3] _t2AB4#1 = <tensor[3]>[_t2AAE,_t2AB0,_t2AB2];
      real _t2AB6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2AB4,dPos23D9);
      real _t2AB8#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2AAC,_t2AB6);
      string _t2ABA#1 = " test2: ";
      real _t2ABC#1 = 0.e0;
      real _t2ABE#1 = 0.e0;
      real _t2AC0#1 = -0.1e1;
      tensor[3] _t2AC2#1 = <tensor[3]>[_t2ABC,_t2ABE,_t2AC0];
      real _t2AC4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2AC2,dPos23D9);
      string _t2AC6#1 = " insideTest: ";
      real _t2AC8#1 = 0.1e1;
      real _t2ACA#1 = 0.1e-7;
      real _t2ACC#1 = λ(T0[],T1[])<(T0 + T1)> (_t2AC8,_t2ACA);
      real _t2ACE#1 = 0.1e1;
      real _t2AD0#1 = 0.1e1;
      real _t2AD2#1 = 0.1e1;
      tensor[3] _t2AD4#1 = <tensor[3]>[_t2ACE,_t2AD0,_t2AD2];
      real _t2AD6#1 = 0.e0;
      real _t2AD8#1 = 0.e0;
      real _t2ADA#1 = 0.e0;
      real _t2ADC#1 = -0.1e1;
      tensor[3] _t2ADE#1 = <tensor[3]>[_t2AD8,_t2ADA,_t2ADC];
      real _t2AE0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2ADE,refPos23D8);
      real _t2AE2#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2AD6,_t2AE0);
      real _t2AE4#1 = 0.e0;
      real _t2AE6#1 = 0.e0;
      real _t2AE8#1 = -0.1e1;
      tensor[3] _t2AEA#1 = <tensor[3]>[_t2AE4,_t2AE6,_t2AE8];
      real _t2AEC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2AEA,dPos23D9);
      real _t2AEE#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2AE2,_t2AEC);
      tensor[3] _t2AF0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2AEE,dPos23D9);
      tensor[3] _t2AF2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2AF0);
      real _t2AF4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2AD4,_t2AF2);
      bool _t2AF6#1 = GT<real>(_t2ACC,_t2AF4);
      real _t2AF8#1 = 0.1e-7;
      real _t2AFA#1 = 0.1e-7;
      real _t2AFC#1 = 0.1e-7;
      tensor[3] _t2AFE#1 = <tensor[3]>[_t2AF8,_t2AFA,_t2AFC];
      real _t2B00#1 = 0.e0;
      real _t2B02#1 = 0.e0;
      real _t2B04#1 = 0.e0;
      real _t2B06#1 = -0.1e1;
      tensor[3] _t2B08#1 = <tensor[3]>[_t2B02,_t2B04,_t2B06];
      real _t2B0A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2B08,refPos23D8);
      real _t2B0C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2B00,_t2B0A);
      real _t2B0E#1 = 0.e0;
      real _t2B10#1 = 0.e0;
      real _t2B12#1 = -0.1e1;
      tensor[3] _t2B14#1 = <tensor[3]>[_t2B0E,_t2B10,_t2B12];
      real _t2B16#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2B14,dPos23D9);
      real _t2B18#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2B0C,_t2B16);
      tensor[3] _t2B1A#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2B18,dPos23D9);
      tensor[3] _t2B1C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2B1A);
      tensor[3] _t2B1E#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2AFE,_t2B1C);
      real _t2B20#1 = TensorIndex<tensor[3],[0]>(_t2B1E);
      real _t2B22#1 = -0.e0;
      bool _t2B24#1 = GT<real>(_t2B20,_t2B22);
      real _t2B26#1 = 0.1e-7;
      real _t2B28#1 = 0.1e-7;
      real _t2B2A#1 = 0.1e-7;
      tensor[3] _t2B2C#1 = <tensor[3]>[_t2B26,_t2B28,_t2B2A];
      real _t2B2E#1 = 0.e0;
      real _t2B30#1 = 0.e0;
      real _t2B32#1 = 0.e0;
      real _t2B34#1 = -0.1e1;
      tensor[3] _t2B36#1 = <tensor[3]>[_t2B30,_t2B32,_t2B34];
      real _t2B38#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2B36,refPos23D8);
      real _t2B3A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2B2E,_t2B38);
      real _t2B3C#1 = 0.e0;
      real _t2B3E#1 = 0.e0;
      real _t2B40#1 = -0.1e1;
      tensor[3] _t2B42#1 = <tensor[3]>[_t2B3C,_t2B3E,_t2B40];
      real _t2B44#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2B42,dPos23D9);
      real _t2B46#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2B3A,_t2B44);
      tensor[3] _t2B48#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2B46,dPos23D9);
      tensor[3] _t2B4A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2B48);
      tensor[3] _t2B4C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2B2C,_t2B4A);
      real _t2B4E#1 = TensorIndex<tensor[3],[1]>(_t2B4C);
      real _t2B50#1 = -0.e0;
      bool _t2B52#1 = GT<real>(_t2B4E,_t2B50);
      real _t2B54#1 = 0.1e-7;
      real _t2B56#1 = 0.1e-7;
      real _t2B58#1 = 0.1e-7;
      tensor[3] _t2B5A#1 = <tensor[3]>[_t2B54,_t2B56,_t2B58];
      real _t2B5C#1 = 0.e0;
      real _t2B5E#1 = 0.e0;
      real _t2B60#1 = 0.e0;
      real _t2B62#1 = -0.1e1;
      tensor[3] _t2B64#1 = <tensor[3]>[_t2B5E,_t2B60,_t2B62];
      real _t2B66#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2B64,refPos23D8);
      real _t2B68#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2B5C,_t2B66);
      real _t2B6A#1 = 0.e0;
      real _t2B6C#1 = 0.e0;
      real _t2B6E#1 = -0.1e1;
      tensor[3] _t2B70#1 = <tensor[3]>[_t2B6A,_t2B6C,_t2B6E];
      real _t2B72#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2B70,dPos23D9);
      real _t2B74#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2B68,_t2B72);
      tensor[3] _t2B76#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2B74,dPos23D9);
      tensor[3] _t2B78#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2B76);
      tensor[3] _t2B7A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2B5A,_t2B78);
      real _t2B7C#1 = TensorIndex<tensor[3],[2]>(_t2B7A);
      real _t2B7E#1 = -0.e0;
      bool _t2B80#1 = GT<real>(_t2B7C,_t2B7E);
      bool _t2B82#1 = BAnd(_t2B52,_t2B80);
      bool _t2B84#1 = BAnd(_t2B24,_t2B82);
      bool _t2B86#1 = BAnd(_t2AF6,_t2B84);
      string _t2B88#1 = " dist: ";
      real _t2B8A#1 = 0.e0;
      real _t2B8C#1 = 0.e0;
      real _t2B8E#1 = 0.e0;
      real _t2B90#1 = -0.1e1;
      tensor[3] _t2B92#1 = <tensor[3]>[_t2B8C,_t2B8E,_t2B90];
      real _t2B94#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2B92,refPos23D8);
      real _t2B96#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2B8A,_t2B94);
      real _t2B98#1 = λ(T0[])<Abs(T0)> (_t2B96);
      string _t2B9A#1 = "signed dist: ";
      real _t2B9C#1 = 0.e0;
      real _t2B9E#1 = 0.e0;
      real _t2BA0#1 = 0.e0;
      real _t2BA2#1 = -0.1e1;
      tensor[3] _t2BA4#1 = <tensor[3]>[_t2B9E,_t2BA0,_t2BA2];
      real _t2BA6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2BA4,refPos23D8);
      real _t2BA8#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2B9C,_t2BA6);
      string _t2BAA#1 = " face: ";
      int _t2BAC#1 = 3;
      string _t2BAE#1 = " place: ";
      real _t2BB0#1 = 0.e0;
      real _t2BB2#1 = 0.e0;
      real _t2BB4#1 = 0.e0;
      real _t2BB6#1 = -0.1e1;
      tensor[3] _t2BB8#1 = <tensor[3]>[_t2BB2,_t2BB4,_t2BB6];
      real _t2BBA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2BB8,refPos23D8);
      real _t2BBC#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2BB0,_t2BBA);
      real _t2BBE#1 = 0.e0;
      real _t2BC0#1 = 0.e0;
      real _t2BC2#1 = -0.1e1;
      tensor[3] _t2BC4#1 = <tensor[3]>[_t2BBE,_t2BC0,_t2BC2];
      real _t2BC6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2BC4,dPos23D9);
      real _t2BC8#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2BBC,_t2BC6);
      tensor[3] _t2BCA#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2BC8,dPos23D9);
      tensor[3] _t2BCC#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2BCA);
      string _t2BCE#1 = " error: ";
      real _t2BD0#1 = 0.e0;
      real _t2BD2#1 = 0.e0;
      real _t2BD4#1 = 0.e0;
      real _t2BD6#1 = -0.1e1;
      tensor[3] _t2BD8#1 = <tensor[3]>[_t2BD2,_t2BD4,_t2BD6];
      real _t2BDA#1 = 0.e0;
      real _t2BDC#1 = 0.e0;
      real _t2BDE#1 = 0.e0;
      real _t2BE0#1 = -0.1e1;
      tensor[3] _t2BE2#1 = <tensor[3]>[_t2BDC,_t2BDE,_t2BE0];
      real _t2BE4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2BE2,refPos23D8);
      real _t2BE6#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2BDA,_t2BE4);
      real _t2BE8#1 = 0.e0;
      real _t2BEA#1 = 0.e0;
      real _t2BEC#1 = -0.1e1;
      tensor[3] _t2BEE#1 = <tensor[3]>[_t2BE8,_t2BEA,_t2BEC];
      real _t2BF0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2BEE,dPos23D9);
      real _t2BF2#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2BE6,_t2BF0);
      tensor[3] _t2BF4#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2BF2,dPos23D9);
      tensor[3] _t2BF6#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2BF4);
      real _t2BF8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2BD8,_t2BF6);
      real _t2BFA#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2BD0,_t2BF8);
      real _t2BFC#1 = λ(T0[])<Abs(T0)> (_t2BFA);
      string _t2BFE#1 = " offset :";
      string _t2C00#1 = " dp: ";
      string _t2C02#1 = " otherPossibleTime: ";
      string _t2C04#1 = "\n";
      string _t2C06#1 = "\n original face: ";
      string _t2C08#1 = " ";
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t2A9E,_t2AB8,_t2ABA,_t2AC4,_t2AC6,_t2B86,_t2B88,_t2B98,_t2B9A,_t2BA8,_t2BAA,_t2BAC,_t2BAE,_t2BCC,_t2BCE,_t2BFC,_t2BFE,refPos23D8,_t2C00,dPos23D9,_t2C02,faceTime2A9C,_t2C04,_t2C06,i23DA,_t2C08);
      real _t2C0B#1 = 0.e0;
      real _t2C0D#1 = 0.e0;
      real _t2C0F#1 = 0.e0;
      real _t2C11#1 = -0.1e1;
      tensor[3] _t2C13#1 = <tensor[3]>[_t2C0D,_t2C0F,_t2C11];
      real _t2C15#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2C13,refPos23D8);
      real _t2C17#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2C0B,_t2C15);
      real _t2C19#1 = 0.e0;
      real _t2C1B#1 = 0.e0;
      real _t2C1D#1 = -0.1e1;
      tensor[3] _t2C1F#1 = <tensor[3]>[_t2C19,_t2C1B,_t2C1D];
      real _t2C21#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2C1F,dPos23D9);
      real _t2C23#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2C17,_t2C21);
      real _t2C25#1 = -0.1e-7;
      bool _t2C27#1 = GTE<real>(_t2C23,_t2C25);
      real _t2C29#1 = 0.e0;
      real _t2C2B#1 = 0.e0;
      real _t2C2D#1 = 0.e0;
      real _t2C2F#1 = -0.1e1;
      tensor[3] _t2C31#1 = <tensor[3]>[_t2C2B,_t2C2D,_t2C2F];
      real _t2C33#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2C31,refPos23D8);
      real _t2C35#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2C29,_t2C33);
      real _t2C37#1 = 0.e0;
      real _t2C39#1 = 0.e0;
      real _t2C3B#1 = -0.1e1;
      tensor[3] _t2C3D#1 = <tensor[3]>[_t2C37,_t2C39,_t2C3B];
      real _t2C3F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2C3D,dPos23D9);
      real _t2C41#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2C35,_t2C3F);
      bool _t2C43#1 = GT<real>(time2A9A,_t2C41);
      real _t2C45#1 = 0.e0;
      real _t2C47#1 = 0.e0;
      real _t2C49#1 = -0.1e1;
      tensor[3] _t2C4B#1 = <tensor[3]>[_t2C45,_t2C47,_t2C49];
      real _t2C4D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2C4B,dPos23D9);
      real _t2C4F#1 = λ(T0[])<Abs(T0)> (_t2C4D);
      real _t2C51#1 = 0.1e-7;
      bool _t2C53#1 = GTE<real>(_t2C4F,_t2C51);
      bool _t2C55#1 = BAnd(_t2C43,_t2C53);
      bool _t2C57#1 = BAnd(_t2C27,_t2C55);
      if _t2C57 then goto ASSIGN2C5B else goto JOIN2C59
    ASSIGN2C5B:  preds = [COND2CDC]
      int _t2C5A#1 = 3;
      bool _t2C5C#1 = NEQ<int>(i23DA,_t2C5A);
      if _t2C5C then goto ASSIGN2C60 else goto ASSIGN2CB9
    ASSIGN2C60:  preds = [COND2CD8]
      string _t2C5F#1 = "Saving at this face!";
      real _t2C61#1 = 0.e0;
      real _t2C63#1 = 0.e0;
      real _t2C65#1 = 0.e0;
      real _t2C67#1 = -0.1e1;
      tensor[3] _t2C69#1 = <tensor[3]>[_t2C63,_t2C65,_t2C67];
      real _t2C6B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2C69,refPos23D8);
      real _t2C6D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2C61,_t2C6B);
      real _t2C6F#1 = 0.e0;
      real _t2C71#1 = 0.e0;
      real _t2C73#1 = -0.1e1;
      tensor[3] _t2C75#1 = <tensor[3]>[_t2C6F,_t2C71,_t2C73];
      real _t2C77#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2C75,dPos23D9);
      real _t2C79#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2C6D,_t2C77);
      real _t2C7B#1 = 0.e0;
      real _t2C7D#1 = 0.e0;
      real _t2C7F#1 = 0.e0;
      real _t2C81#1 = -0.1e1;
      tensor[3] _t2C83#1 = <tensor[3]>[_t2C7D,_t2C7F,_t2C81];
      real _t2C85#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2C83,refPos23D8);
      real _t2C87#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2C7B,_t2C85);
      real _t2C89#1 = 0.e0;
      real _t2C8B#1 = 0.e0;
      real _t2C8D#1 = -0.1e1;
      tensor[3] _t2C8F#1 = <tensor[3]>[_t2C89,_t2C8B,_t2C8D];
      real _t2C91#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2C8F,dPos23D9);
      real _t2C93#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2C87,_t2C91);
      bool _t2C95#1 = GT<real>(time2A9A,_t2C93);
      string _t2C97#1 = "\n";
      Print<[string,real,bool,string]>(_t2C5F,_t2C79,_t2C95,_t2C97);
      real _t2C9A#1 = 0.e0;
      real _t2C9C#1 = 0.e0;
      real _t2C9E#1 = 0.e0;
      real _t2CA0#1 = -0.1e1;
      tensor[3] _t2CA2#1 = <tensor[3]>[_t2C9C,_t2C9E,_t2CA0];
      real _t2CA4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2CA2,refPos23D8);
      real _t2CA6#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2C9A,_t2CA4);
      real _t2CA8#1 = 0.e0;
      real _t2CAA#1 = 0.e0;
      real _t2CAC#1 = -0.1e1;
      tensor[3] _t2CAE#1 = <tensor[3]>[_t2CA8,_t2CAA,_t2CAC];
      real _t2CB0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2CAE,dPos23D9);
      real time2CB2#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t2CA6,_t2CB0);
      int face2CB5#1 = 3;
      goto JOIN2C5E
    JOIN2C5E:  preds = [ASSIGN2CB7,MASSIGN2CD7]
      real faceTime2CD1#1 = phi(faceTime2A9C,faceTime2CD0)
      int face2CB6#1 = phi(face2CB5,face2A9B)
      real time2CB3#1 = phi(time2CB2,time2A9A)
      goto JOIN2C59
    JOIN2C59:  preds = [JOIN2C5E,COND2CDC]
      real faceTime2CDB#3 = phi(faceTime2CD1,faceTime2A9C)
      int face2CDA#3 = phi(face2CB6,face2A9B)
      real time2CD9#6 = phi(time2CB3,time2A9A)
      int _t2CDD#1 = -1;
      bool _t2CDF#1 = NEQ<int>(face2CDA,_t2CDD);
      real _t2CE1#1 = 0.1e1;
      real _t2CE3#1 = 0.1e-7;
      real _t2CE5#1 = λ(T0[],T1[])<(T0 + T1)> (_t2CE1,_t2CE3);
      real _t2CE7#1 = 0.1e1;
      real _t2CE9#1 = 0.1e1;
      real _t2CEB#1 = 0.1e1;
      tensor[3] _t2CED#1 = <tensor[3]>[_t2CE7,_t2CE9,_t2CEB];
      real _t2CEF#1 = 0.e0;
      real _t2CF1#1 = Max<real>(time2CD9,_t2CEF);
      tensor[3] _t2CF3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2CF1,dPos23D9);
      tensor[3] _t2CF5#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2CF3);
      real _t2CF7#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2CED,_t2CF5);
      bool _t2CF9#1 = GT<real>(_t2CE5,_t2CF7);
      real _t2CFB#1 = 0.1e-7;
      real _t2CFD#1 = 0.1e-7;
      real _t2CFF#1 = 0.1e-7;
      tensor[3] _t2D01#1 = <tensor[3]>[_t2CFB,_t2CFD,_t2CFF];
      real _t2D03#1 = 0.e0;
      real _t2D05#1 = Max<real>(time2CD9,_t2D03);
      tensor[3] _t2D07#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2D05,dPos23D9);
      tensor[3] _t2D09#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2D07);
      tensor[3] _t2D0B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2D01,_t2D09);
      real _t2D0D#1 = TensorIndex<tensor[3],[0]>(_t2D0B);
      real _t2D0F#1 = -0.e0;
      bool _t2D11#1 = GT<real>(_t2D0D,_t2D0F);
      real _t2D13#1 = 0.1e-7;
      real _t2D15#1 = 0.1e-7;
      real _t2D17#1 = 0.1e-7;
      tensor[3] _t2D19#1 = <tensor[3]>[_t2D13,_t2D15,_t2D17];
      real _t2D1B#1 = 0.e0;
      real _t2D1D#1 = Max<real>(time2CD9,_t2D1B);
      tensor[3] _t2D1F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2D1D,dPos23D9);
      tensor[3] _t2D21#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2D1F);
      tensor[3] _t2D23#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2D19,_t2D21);
      real _t2D25#1 = TensorIndex<tensor[3],[1]>(_t2D23);
      real _t2D27#1 = -0.e0;
      bool _t2D29#1 = GT<real>(_t2D25,_t2D27);
      real _t2D2B#1 = 0.1e-7;
      real _t2D2D#1 = 0.1e-7;
      real _t2D2F#1 = 0.1e-7;
      tensor[3] _t2D31#1 = <tensor[3]>[_t2D2B,_t2D2D,_t2D2F];
      real _t2D33#1 = 0.e0;
      real _t2D35#1 = Max<real>(time2CD9,_t2D33);
      tensor[3] _t2D37#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2D35,dPos23D9);
      tensor[3] _t2D39#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2D37);
      tensor[3] _t2D3B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2D31,_t2D39);
      real _t2D3D#1 = TensorIndex<tensor[3],[2]>(_t2D3B);
      real _t2D3F#1 = -0.e0;
      bool _t2D41#1 = GT<real>(_t2D3D,_t2D3F);
      bool _t2D43#1 = BAnd(_t2D29,_t2D41);
      bool _t2D45#1 = BAnd(_t2D11,_t2D43);
      bool _t2D47#1 = BAnd(_t2CF9,_t2D45);
      bool _t2D49#1 = BAnd(_t2CDF,_t2D47);
      if _t2D49 then goto ASSIGN2D4D else goto ASSIGN2D63
    ASSIGN2D4D:  preds = [COND2D90]
      string _t2D4C#1 = "\nReturning via standard : ";
      real _t2D4E#1 = 0.e0;
      real _t2D50#1 = Max<real>(time2CD9,_t2D4E);
      real _t2D52#1 = IntToReal(face2CDA);
      tensor[2] _t2D54#1 = <tensor[2]>[_t2D50,_t2D52];
      string _t2D56#1 = "\n";
      Print<[string,tensor[2],string]>(_t2D4C,_t2D54,_t2D56);
      real _t2D59#1 = 0.e0;
      real _t2D5B#1 = Max<real>(time2CD9,_t2D59);
      real _t2D5D#1 = IntToReal(face2CDA);
      tensor[2] _t2D5F#1 = <tensor[2]>[_t2D5B,_t2D5D];
      return _t2D5F
      goto JOIN2D4B
    JOIN2D4B:  preds = [*RETURN(_t2D5F)2D61,*JOIN2D66]
      unreachable
    ASSIGN2D63:  preds = [COND2D90]
      real _t2D62#1 = -inf;
      bool _t2D64#1 = EQ<real>(_t2D62,faceTime2CDB);
      if _t2D64 then goto ASSIGN2D68 else goto ASSIGN2D7A
    ASSIGN2D68:  preds = [COND2D8F]
      string _t2D67#1 = "\nReturning via fail : ";
      real _t2D69#1 = -0.1e1;
      real _t2D6B#1 = -0.1e1;
      tensor[2] _t2D6D#1 = <tensor[2]>[_t2D69,_t2D6B];
      string _t2D6F#1 = "\n";
      Print<[string,tensor[2],string]>(_t2D67,_t2D6D,_t2D6F);
      real _t2D72#1 = -0.1e1;
      real _t2D74#1 = -0.1e1;
      tensor[2] _t2D76#1 = <tensor[2]>[_t2D72,_t2D74];
      return _t2D76
      goto JOIN2D66
    JOIN2D66:  preds = [*RETURN(_t2D76)2D78,*RETURN(_t2D8C)2D8E]
      goto JOIN2D4B
    ASSIGN2D7A:  preds = [COND2D8F]
      string _t2D79#1 = "\nReturning via backup : ";
      real _t2D7B#1 = 0.e0;
      real _t2D7D#1 = Max<real>(faceTime2CDB,_t2D7B);
      real _t2D7F#1 = IntToReal(i23DA);
      tensor[2] _t2D81#1 = <tensor[2]>[_t2D7D,_t2D7F];
      string _t2D83#1 = "\n";
      Print<[string,tensor[2],string]>(_t2D79,_t2D81,_t2D83);
      real _t2D86#1 = 0.e0;
      real _t2D88#1 = Max<real>(faceTime2CDB,_t2D86);
      real _t2D8A#1 = IntToReal(i23DA);
      tensor[2] _t2D8C#1 = <tensor[2]>[_t2D88,_t2D8A];
      return _t2D8C
      goto JOIN2D66
    ASSIGN2CB9:  preds = [COND2CD8]
      real _t2CB8#1 = 0.e0;
      real _t2CBA#1 = 0.e0;
      real _t2CBC#1 = 0.e0;
      real _t2CBE#1 = -0.1e1;
      tensor[3] _t2CC0#1 = <tensor[3]>[_t2CBA,_t2CBC,_t2CBE];
      real _t2CC2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2CC0,refPos23D8);
      real _t2CC4#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2CB8,_t2CC2);
      real _t2CC6#1 = 0.e0;
      real _t2CC8#1 = 0.e0;
      real _t2CCA#1 = -0.1e1;
      tensor[3] _t2CCC#1 = <tensor[3]>[_t2CC6,_t2CC8,_t2CCA];
      real _t2CCE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2CCC,dPos23D9);
      real faceTime2CD0#2 = λ(T0[],T1[])<(T0) / ( T1)> (_t2CC4,_t2CCE);
      string _t2CD3#1 = "Saving backup time: ";
      string _t2CD5#1 = "\n";
      Print<[string,real,string]>(_t2CD3,faceTime2CD0,_t2CD5);
      goto JOIN2C5E
    ASSIGN2A7A:  preds = [COND2A99]
      real _t2A79#1 = 0.e0;
      real _t2A7B#1 = 0.e0;
      real _t2A7D#1 = -0.1e1;
      real _t2A7F#1 = 0.e0;
      tensor[3] _t2A81#1 = <tensor[3]>[_t2A7B,_t2A7D,_t2A7F];
      real _t2A83#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2A81,refPos23D8);
      real _t2A85#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2A79,_t2A83);
      real _t2A87#1 = 0.e0;
      real _t2A89#1 = -0.1e1;
      real _t2A8B#1 = 0.e0;
      tensor[3] _t2A8D#1 = <tensor[3]>[_t2A87,_t2A89,_t2A8B];
      real _t2A8F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2A8D,dPos23D9);
      real faceTime2A91#2 = λ(T0[],T1[])<(T0) / ( T1)> (_t2A85,_t2A8F);
      string _t2A94#1 = "Saving backup time: ";
      string _t2A96#1 = "\n";
      Print<[string,real,string]>(_t2A94,faceTime2A91,_t2A96);
      goto JOIN2A1F
    ASSIGN283B:  preds = [COND285A]
      real _t283A#1 = 0.e0;
      real _t283C#1 = -0.1e1;
      real _t283E#1 = 0.e0;
      real _t2840#1 = 0.e0;
      tensor[3] _t2842#1 = <tensor[3]>[_t283C,_t283E,_t2840];
      real _t2844#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2842,refPos23D8);
      real _t2846#1 = λ(T0[],T1[])<(T0) - (T1)> (_t283A,_t2844);
      real _t2848#1 = -0.1e1;
      real _t284A#1 = 0.e0;
      real _t284C#1 = 0.e0;
      tensor[3] _t284E#1 = <tensor[3]>[_t2848,_t284A,_t284C];
      real _t2850#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t284E,dPos23D9);
      real faceTime2852#2 = λ(T0[],T1[])<(T0) / ( T1)> (_t2846,_t2850);
      string _t2855#1 = "Saving backup time: ";
      string _t2857#1 = "\n";
      Print<[string,real,string]>(_t2855,faceTime2852,_t2857);
      goto JOIN27E0
    ASSIGN25FC:  preds = [COND261B]
      real _t25FB#1 = 0.57735026919e0;
      real _t25FD#1 = 0.57735026919e0;
      real _t25FF#1 = 0.57735026919e0;
      real _t2601#1 = 0.57735026919e0;
      tensor[3] _t2603#1 = <tensor[3]>[_t25FD,_t25FF,_t2601];
      real _t2605#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2603,refPos23D8);
      real _t2607#1 = λ(T0[],T1[])<(T0) - (T1)> (_t25FB,_t2605);
      real _t2609#1 = 0.57735026919e0;
      real _t260B#1 = 0.57735026919e0;
      real _t260D#1 = 0.57735026919e0;
      tensor[3] _t260F#1 = <tensor[3]>[_t2609,_t260B,_t260D];
      real _t2611#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t260F,dPos23D9);
      real faceTime2613#2 = λ(T0[],T1[])<(T0) / ( T1)> (_t2607,_t2611);
      string _t2616#1 = "Saving backup time: ";
      string _t2618#1 = "\n";
      Print<[string,real,string]>(_t2616,faceTime2613,_t2618);
      goto JOIN25A1
}
  function femData:MeshPos fn_2FB2DF4 (femData:MeshPos x2D94#6, tensor[3] dPos2D95#2) {
    ENTRY2DF3:  preds = []
      femData:Mesh meshData2D97#1 = globals.meshData1742;
      int timeSteps2D96#1 = globals.timeSteps1745;
      bool _t2D9A#1 = ExtractFemItem<bool,Valid(MeshPos)>(x2D94);
      bool _t2D9C#1 = BNot(_t2D9A);
      if _t2D9C then goto RETURN(x2D94)2D9F else goto JOIN2D9E
    RETURN(x2D94)2D9F:  preds = [COND2DA0]
      return x2D94
      goto JOIN2D9E
    JOIN2D9E:  preds = [*RETURN(x2D94)2D9F,COND2DA0]
      real time2DA1#1 = 0.1e1;
      femData:MeshPos cmp2DA3#8 = x2D94;
      int _t2DA5#1 = 0;
      int[] _t2DA7#1 = Range(_t2DA5,timeSteps2D96);
    FOREACH2DAA:  preds = [ASSIGN2DA8,*NEXT2DDA]
      foreach (i2DA9 in _t2DA7) on exit goto ASSIGN2DDC
      femData:Mesh _t2DAB#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp2DA3);
      int _t2DAD#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp2DA3);
      femData:MeshCell _t2DAF#1 = LoadFem<femData:MeshCell>(_t2DAB,_t2DAD);
      femData:Mesh _t2DB1#2 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2DAF);
      femData:Mesh _t2DB3#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp2DA3);
      int _t2DB5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp2DA3);
      femData:MeshCell _t2DB7#1 = LoadFem<femData:MeshCell>(_t2DB3,_t2DB5);
      femData:Mesh _t2DB9#0 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2DB7);
      femData:Mesh _t2DBB#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp2DA3);
      int _t2DBD#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp2DA3);
      femData:MeshCell _t2DBF#1 = LoadFem<femData:MeshCell>(_t2DBB,_t2DBD);
      int _t2DC1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2DBF);
      field _t2DC3#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2DC1,_t2DB1,_t2DB1);
      field _t2DC5#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t2DC3);
      tensor[3] _t2DC7#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp2DA3);
      tensor[3,3] _t2DC9#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t2DC5,_t2DC7);
      tensor[3,3] _t2DCB#1 = λ(T0[3 3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * T0_{i9,i6} * T0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * T0_{i3,'0'} * T0_{i4,'1'} * T0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t2DC9);
      tensor[3] deltaP2DCD#3 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t2DCB,dPos2D95);
      real _t2DCF#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (deltaP2DCD);
      tensor[3] normDetaP2DD1#0 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (deltaP2DCD,_t2DCF);
      tensor[3] _t2DD3#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp2DA3);
      tensor[3] _t2DD5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (time2DA1,deltaP2DCD);
      tensor[3] newPos2DD7#0 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2DD3,_t2DD5);
      return
      goto FOREACH2DAA
    ASSIGN2DDC:  preds = [FOREACH2DAA]
      string _t2DDB#1 = "Took stupid way out!\n";
      Print<[string]>(_t2DDB);
      tensor[3] _t2DDF#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x2D94);
      int _t2DE1#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x2D94);
      femData:Mesh _t2DE3#2 = ExtractFem<femData:Mesh,femData:MeshPos>(x2D94);
      field _t2DE6#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2DE1,_t2DE3,_t2DE3);
      tensor[3] _t2DE8#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2DE6,_t2DDF);
      tensor[3] _t2DEA#1 = _t2DE8;
      tensor[3] _t2DEC#1 = _t2DEA;
      tensor[3] _t2DEE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2DEC,dPos2D95);
      femData:MeshPos cmp2DF0#1 = findPos1803 (meshData2D97,_t2DEE);
      return cmp2DF0
}
## input initialization
  ENTRY1758:  preds = []
    int timeSteps174C#1 = 32;
    globals.timeSteps1745 = timeSteps174C;
    real timeEps174F#1 = 0.1e-6;
    globals.timeEps1746 = timeEps174F;
    real stepSize1752#1 = 0.1e-1;
    globals.stepSize1748 = stepSize1752;
    int stepMax1755#1 = 300;
    globals.stepMax1749 = stepMax1755;
    return
## global-variable initialization
  ENTRY2E2E:  preds = []
    femData:Mesh meshData2DF7#3 = globals.meshData1742;
    femData:Space 0space0409_intermedateGlobal2DF6#1 = globals.0space0409_intermedateGlobal1743;
    femData:FemFunc 0data040B_intermedateGlobal2DF5#1 = globals.0data040B_intermedateGlobal1744;
    int _t2DFB#1 = 0;
    int _t2DFD#1 = 1;
    int _t2DFF#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData2DF7);
    int _t2E01#1 = ISub(_t2DFF,_t2DFD);
    int[] _t2E03#1 = Range(_t2DFB,_t2E01);
    femData:MeshCell[] _t2E05#1 = <femData:MeshCell[]>{};
  FOREACH2E09:  preds = [ASSIGN2E06,NEXT2E0E]
    foreach (_t2E07 in _t2E03) on exit goto ASSIGN2E10
      femData:MeshCell[] _t2E08#1 = phi(_t2E05,_t2E0C)
    femData:MeshCell _t2E0A#1 = LoadFem<femData:MeshCell>(meshData2DF7,_t2E07);
    femData:MeshCell[] _t2E0C#1 = Append<femData:MeshCell>(_t2E08,_t2E0A);
    goto FOREACH2E09
  ASSIGN2E10:  preds = [FOREACH2E09]
    femData:Space space2E0F#2 = LoadFem<femData:Space>(0space0409_intermedateGlobal2DF6,meshData2DF7);
    globals.space175A = space2E0F;
    femData:FemFunc data2E12#7 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal2DF5,space2E0F);
    globals.data175B = data2E12;
    femData:Space _t2E15#1 = ExtractFem<femData:Space,femData:FemFunc>(data2E12);
    femData:Space _t2E17#1 = ExtractFem<femData:Space,femData:FemFunc>(data2E12);
    femData:Mesh _t2E19#1 = ExtractFem<femData:Mesh,femData:Space>(_t2E17);
    field _t2E1B#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2)<femV(1803, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2E19,_t2E15,data2E12);
    femData:Space _t2E1D#1 = ExtractFem<femData:Space,femData:FemFunc>(data2E12);
    femData:Mesh _t2E1F#2 = ExtractFem<femData:Mesh,femData:Space>(_t2E1D);
    femData:Space _t2E21#1 = ExtractFem<femData:Space,femData:FemFunc>(data2E12);
    femData:Mesh _t2E23#0 = ExtractFem<femData:Mesh,femData:Space>(_t2E21);
    femData:Space _t2E25#1 = ExtractFem<femData:Space,femData:FemFunc>(data2E12);
    femData:Mesh _t2E27#1 = ExtractFem<femData:Mesh,femData:Space>(_t2E25);
    field _t2E29#1 = λ(FEM(mesh_t)0,FEM(mesh_t)1,FEM(mesh_t)2)<femInvV(1803, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2E27,_t2E1F,_t2E1F);
    field F2E2B#1 = λ(F0[3],F1[3])<Cmp(F0_{i0})[F1_{i0}{3}]>_{3} (_t2E1B,_t2E29);
    globals.F175C = F2E2B;
    return
## strand
  strand gg (tensor[3] startPos2E38#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY2E5B:  preds = []
        femData:Mesh meshData2E3F#1 = globals.meshData1742;
        tensor[3][0] _t2E47#1 = <tensor[3][0]>{};
        tensor[3][] _t2E49#1 = MkDynamic<tensor[3],0>(_t2E47);
        tensor[3][] stream2E4B#1 = _t2E49;
        tensor[3][0] _t2E4D#1 = <tensor[3][0]>{};
        tensor[3][] _t2E4F#1 = MkDynamic<tensor[3],0>(_t2E4D);
        tensor[3][] newStream2E51#1 = _t2E4F;
        int step2E53#1 = 0;
        femData:MeshPos cPos2E55#1 = findPos1803 (meshData2E3F,startPos2E38);
        tensor[3] altCPos2E57#1 = startPos2E38;
        tensor[3] startPos2E59#1 = startPos2E38;
        self.stream = stream2E4B;
        self.newStream = newStream2E51;
        self.step = step2E53;
        self.cPos = cPos2E55;
        self.altCPos = altCPos2E57;
        self.startPos = startPos2E59;
        return
    end state init
    method update
        ENTRY3171:  preds = []
          femData:Mesh meshData2E69#15 = globals.meshData1742;
          femData:FemFunc data2E68#6 = globals.data175B;
          real stepSize2E67#6 = globals.stepSize1748;
          int stepMax2E66#1 = globals.stepMax1749;
          tensor[3,3] M2E65#4 = globals.M174A;
          tensor[3] center2E64#4 = globals.center174B;
          field F2E63#4 = globals.F175C;
          tensor[3][] stream2E71#7 = self.stream;
          tensor[3][] newStream2E72#7 = self.newStream;
          int step2E73#13 = self.step;
          femData:MeshPos cPos2E74#36 = self.cPos;
          tensor[3] altCPos2E75#26 = self.altCPos;
          tensor[3] startPos2E76#6 = self.startPos;
          int _t2E7D#1 = 0;
          bool _t2E7F#1 = EQ<int>(step2E73,_t2E7D);
          if _t2E7F then goto ASSIGN2E83 else goto JOIN2E81
        ASSIGN2E83:  preds = [COND2EC8]
          bool _t2E82#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          if _t2E82 then goto ASSIGN2E86 else goto JOIN2E84
        ASSIGN2E86:  preds = [COND2EC7]
          tensor[3] rp2E85#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          real _t2E87#1 = TensorIndex<tensor[3],[0]>(rp2E85);
          real _t2E89#1 = 0.1e-5;
          bool _t2E8B#1 = LTE<real>(_t2E87,_t2E89);
          if _t2E8B then goto SAVE2E8F else goto JOIN2E8D
        SAVE2E8F:  preds = [COND2E94]
          self.stream = stream2E71;
          self.newStream = newStream2E72;
          self.step = step2E73;
          self.cPos = cPos2E74;
          self.altCPos = altCPos2E75;
          stabilize
          goto JOIN2E8D
        JOIN2E8D:  preds = [*STABILIZE2E8E,COND2E94]
          real _t2E95#1 = TensorIndex<tensor[3],[1]>(rp2E85);
          real _t2E97#1 = 0.1e-5;
          bool _t2E99#1 = LTE<real>(_t2E95,_t2E97);
          if _t2E99 then goto SAVE2E9D else goto JOIN2E9B
        SAVE2E9D:  preds = [COND2EA2]
          self.stream = stream2E71;
          self.newStream = newStream2E72;
          self.step = step2E73;
          self.cPos = cPos2E74;
          self.altCPos = altCPos2E75;
          stabilize
          goto JOIN2E9B
        JOIN2E9B:  preds = [*STABILIZE2E9C,COND2EA2]
          real _t2EA3#1 = TensorIndex<tensor[3],[2]>(rp2E85);
          real _t2EA5#1 = 0.1e-5;
          bool _t2EA7#1 = LTE<real>(_t2EA3,_t2EA5);
          if _t2EA7 then goto SAVE2EAB else goto JOIN2EA9
        SAVE2EAB:  preds = [COND2EB0]
          self.stream = stream2E71;
          self.newStream = newStream2E72;
          self.step = step2E73;
          self.cPos = cPos2E74;
          self.altCPos = altCPos2E75;
          stabilize
          goto JOIN2EA9
        JOIN2EA9:  preds = [*STABILIZE2EAA,COND2EB0]
          real _t2EB1#1 = 0.1e1;
          real _t2EB3#1 = 0.1e1;
          real _t2EB5#1 = 0.1e1;
          tensor[3] _t2EB7#1 = <tensor[3]>[_t2EB1,_t2EB3,_t2EB5];
          real r2EB9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EB7,rp2E85);
          real _t2EBB#1 = 0.9999999e0;
          bool _t2EBD#1 = LTE<real>(_t2EBB,r2EB9);
          if _t2EBD then goto SAVE2EC1 else goto JOIN2EBF
        SAVE2EC1:  preds = [COND2EC6]
          self.stream = stream2E71;
          self.newStream = newStream2E72;
          self.step = step2E73;
          self.cPos = cPos2E74;
          self.altCPos = altCPos2E75;
          stabilize
          goto JOIN2EBF
        JOIN2EBF:  preds = [*STABILIZE2EC0,COND2EC6]
          goto JOIN2E84
        JOIN2E84:  preds = [JOIN2EBF,COND2EC7]
          goto JOIN2E81
        JOIN2E81:  preds = [JOIN2E84,COND2EC8]
          bool _t2EC9#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          femData:MeshPos _t2ECB#1 = findPos1803 (meshData2E69,altCPos2E75);
          bool _t2ECD#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t2ECB);
          bool _t2ECF#1 = NEQ<bool>(_t2EC9,_t2ECD);
          if _t2ECF then goto ASSIGN2ED3 else goto JOIN2ED1
        ASSIGN2ED3:  preds = [COND2ED7]
          string _t2ED2#1 = "ERG:Warning of validity startPos:";
          string _t2ED4#1 = "\n";
          Print<[string,tensor[3],string]>(_t2ED2,startPos2E76,_t2ED4);
          goto JOIN2ED1
        JOIN2ED1:  preds = [MASSIGN2ED6,COND2ED7]
          bool _t2ED9#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          bool _t2EDB#1 = BNot(_t2ED9);
          if _t2EDB then goto ASSIGN2EE0 else goto ASSIGN2EE3
        ASSIGN2EE0:  preds = [COND2EF1]
          bool _t2EDE#1 = true;
          goto JOIN2EDD
        JOIN2EDD:  preds = [ASSIGN2EE0,ASSIGN2EF0]
          bool _t2EDF#1 = phi(_t2EDE,_t2EEF)
          if _t2EDF then goto ASSIGN2EF4 else goto JOIN2EF2
        ASSIGN2EF4:  preds = [COND2F18]
          string _t2EF3#1 = "Went off the mesh\?";
          bool _t2EF5#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          bool _t2EF7#1 = BNot(_t2EF5);
          string _t2EF9#1 = " and ";
          string _t2EFB#1 = " and ";
          femData:MeshPos _t2EFD#1 = findPos1803 (meshData2E69,altCPos2E75);
          bool _t2EFF#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t2EFD);
          bool _t2F01#1 = BNot(_t2EFF);
          string _t2F03#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t2EF3,_t2EF7,_t2EF9,altCPos2E75,_t2EFB,_t2F01,_t2F03);
          string _t2F06#1 = "Pos is:";
          tensor[3] _t2F08#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          string _t2F0A#1 = "\n";
          Print<[string,tensor[3],string]>(_t2F06,_t2F08,_t2F0A);
          string _t2F0D#1 = "\n";
          string _t2F0F#1 = "\n";
          Print<[tensor[3][],string,tensor[3][],string]>(stream2E71,_t2F0D,newStream2E72,_t2F0F);
          self.stream = stream2E71;
          self.newStream = newStream2E72;
          self.step = step2E73;
          self.cPos = cPos2E74;
          self.altCPos = altCPos2E75;
          stabilize
          goto JOIN2EF2
        JOIN2EF2:  preds = [*STABILIZE2F12,COND2F18]
          tensor[3] _t2F1A#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          int _t2F1C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2E74);
          femData:Mesh _t2F1E#2 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2E74);
          field _t2F21#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2F1C,_t2F1E,_t2F1E);
          tensor[3] _t2F23#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2F21,_t2F1A);
          tensor[3] _t2F25#1 = _t2F23;
          tensor[3] _t2F27#1 = _t2F25;
          tensor[3][1] _t2F29#1 = <tensor[3][1]>{_t2F27};
          tensor[3][] _t2F2B#1 = MkDynamic<tensor[3],1>(_t2F29);
          tensor[3][] stream2F2D#4 = Concat<tensor[3]>(stream2E71,_t2F2B);
          tensor[3][1] _t2F2F#1 = <tensor[3][1]>{altCPos2E75};
          tensor[3][] _t2F31#1 = MkDynamic<tensor[3],1>(_t2F2F);
          tensor[3][] newStream2F33#4 = Concat<tensor[3]>(newStream2E72,_t2F31);
          tensor[3] _t2F36#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          int _t2F38#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2E74);
          femData:Mesh _t2F3A#2 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2E74);
          field _t2F3D#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2F38,_t2F3A,_t2F3A);
          tensor[3] _t2F3F#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2F3D,_t2F36);
          tensor[3] _t2F41#1 = _t2F3F;
          tensor[3] _t2F43#1 = _t2F41;
          tensor[3] _t2F45#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t2F43,altCPos2E75);
          real _t2F47#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t2F45);
          real _t2F49#1 = 0.1e-5;
          bool _t2F4B#1 = GT<real>(_t2F47,_t2F49);
          if _t2F4B then goto ASSIGN2F4F else goto ASSIGN2F95
        ASSIGN2F4F:  preds = [COND2F9F]
          string _t2F4E#1 = "ERG:Error in tracing 1: At step:";
          string _t2F50#1 = " with particle:";
          string _t2F52#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t2F4E,step2E73,_t2F50,startPos2E76,_t2F52);
          string _t2F55#1 = "Poses are:";
          tensor[3] _t2F58#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          int _t2F5A#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2E74);
          femData:Mesh _t2F5C#2 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2E74);
          field _t2F5F#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2F5A,_t2F5C,_t2F5C);
          tensor[3] _t2F61#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2F5F,_t2F58);
          tensor[3] _t2F63#1 = _t2F61;
          tensor[3] _t2F65#1 = _t2F63;
          string _t2F67#1 = "\n";
          Print<[string,tensor[3],tensor[3],string]>(_t2F55,_t2F65,altCPos2E75,_t2F67);
          string _t2F6A#1 = "Cells are:";
          femData:Mesh _t2F6C#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2E74);
          int _t2F6E#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2E74);
          femData:MeshCell _t2F70#1 = LoadFem<femData:MeshCell>(_t2F6C,_t2F6E);
          string _t2F72#1 = " and ";
          femData:MeshPos _t2F74#1 = findPos1803 (meshData2E69,altCPos2E75);
          femData:Mesh _t2F76#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t2F74);
          femData:MeshPos _t2F78#1 = findPos1803 (meshData2E69,altCPos2E75);
          int _t2F7A#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t2F78);
          femData:MeshCell _t2F7C#1 = LoadFem<femData:MeshCell>(_t2F76,_t2F7A);
          string _t2F7E#1 = "\n";
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t2F6A,_t2F70,_t2F72,_t2F7C,_t2F7E);
          string _t2F81#1 = "Ref poses are:";
          tensor[3] _t2F83#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          string _t2F85#1 = " and ";
          femData:MeshPos _t2F87#1 = findPos1803 (meshData2E69,altCPos2E75);
          tensor[3] _t2F89#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t2F87);
          string _t2F8B#1 = "\n";
          Print<[string,tensor[3],string,tensor[3],string]>(_t2F81,_t2F83,_t2F85,_t2F89,_t2F8B);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          self.step = step2E73;
          self.cPos = cPos2E74;
          self.altCPos = altCPos2E75;
          stabilize
          goto JOIN2F4D
        JOIN2F4D:  preds = [*STABILIZE2F8E,MASSIGN2F9E]
          real _t2FA0#1 = 0.5e0;
          real _t2FA2#1 = λ(T0[],T1[])<(T0 * T1)> (_t2FA0,stepSize2E67);
          tensor[3] _t2FA4#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F2E63,altCPos2E75);
          tensor[3] _t2FA6#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2FA2,_t2FA4);
          tensor[3] _t2FA8#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F2E63,altCPos2E75);
          real _t2FAA#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t2FA8);
          tensor[3] altUp12FAC#2 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t2FA6,_t2FAA);
          real _t2FAE#1 = 0.5e0;
          real _t2FB0#1 = λ(T0[],T1[])<(T0 * T1)> (_t2FAE,stepSize2E67);
          bool _t2FB3#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          if _t2FB3 then goto ASSIGN2FB7 else goto ASSIGN2FE7
        ASSIGN2FB7:  preds = [COND2FED]
          femData:Mesh _t2FB6#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2E74);
          int _t2FB8#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2E74);
          femData:MeshCell c2FBA#3 = LoadFem<femData:MeshCell>(_t2FB6,_t2FB8);
          tensor[3] ref2FBC#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          int _t2FBF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2FBA);
          femData:FuncCell _t2FC1#1 = LoadFem<femData:FuncCell>(data2E68,_t2FBF);
          femData:FuncCell _t2FC3#1 = _t2FC1;
          femData:FemFunc _t2FC5#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2FC3);
          int _t2FC8#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2FBA);
          femData:FuncCell _t2FCA#1 = LoadFem<femData:FuncCell>(data2E68,_t2FC8);
          femData:FuncCell _t2FCC#1 = _t2FCA;
          femData:FemFunc _t2FCE#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2FCC);
          femData:Space _t2FD0#1 = ExtractFem<femData:Space,femData:FemFunc>(_t2FCE);
          int _t2FD3#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2FBA);
          femData:FuncCell _t2FD5#1 = LoadFem<femData:FuncCell>(data2E68,_t2FD3);
          femData:FuncCell _t2FD7#1 = _t2FD5;
          int _t2FD9#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2FD7);
          field _t2FDB#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2FD9,_t2FD0,_t2FC5);
          tensor[3] val2FDD#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2FDB,ref2FBC);
          real _t2FDF#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (val2FDD);
          tensor[3] _t2FE1#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (val2FDD,_t2FDF);
          tensor[3] _t2FE3#1 = _t2FE1;
          goto JOIN2FB5
        JOIN2FB5:  preds = [ASSIGN2FE5,ASSIGN2FEC]
          tensor[3] _t2FE4#1 = phi(_t2FE3,_t2FEB)
          tensor[3] up12FEE#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2FB0,_t2FE4);
          real _t2FF0#1 = 0.5e0;
          real _t2FF2#1 = λ(T0[],T1[])<(T0 * T1)> (_t2FF0,stepSize2E67);
          tensor[3] _t2FF5#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (altCPos2E75,center2E64);
          tensor[3] _t2FF7#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M2E65,_t2FF5);
          tensor[3] _t2FF9#1 = _t2FF7;
          tensor[3] _t2FFB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2FF2,_t2FF9);
          tensor[3] _t2FFE#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (altCPos2E75,center2E64);
          tensor[3] _t3000#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M2E65,_t2FFE);
          tensor[3] _t3002#1 = _t3000;
          real _t3004#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3002);
          tensor[3] upCorrect13006#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t2FFB,_t3004);
          tensor[3] _t3009#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up12FEE,upCorrect13006);
          real _t300B#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3009);
          real _t300D#1 = 0.1e-5;
          bool _t300F#1 = GT<real>(_t300B,_t300D);
          if _t300F then goto ASSIGN3014 else goto ASSIGN3016
        ASSIGN3014:  preds = [COND301D]
          bool _t3012#1 = true;
          goto JOIN3011
        JOIN3011:  preds = [ASSIGN3014,ASSIGN301C]
          bool _t3013#1 = phi(_t3012,_t301B)
          if _t3013 then goto ASSIGN3020 else goto JOIN301E
        ASSIGN3020:  preds = [COND3024]
          string _t301F#1 = "ERG:Error in evaluation on pos 1:";
          string _t3021#1 = "\n";
          Print<[string,tensor[3],string]>(_t301F,startPos2E76,_t3021);
          goto JOIN301E
        JOIN301E:  preds = [MASSIGN3023,COND3024]
          femData:MeshPos intermed3025#15 = fn_2FB2DF4 (cPos2E74,up12FEE);
          tensor[3] altIntermed3027#15 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2E75,altUp12FAC);
          bool _t3029#1 = ExtractFemItem<bool,Valid(MeshPos)>(intermed3025);
          femData:MeshPos _t302B#1 = findPos1803 (meshData2E69,altIntermed3027);
          bool _t302D#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t302B);
          bool _t302F#1 = NEQ<bool>(_t3029,_t302D);
          if _t302F then goto ASSIGN3033 else goto JOIN3031
        ASSIGN3033:  preds = [COND3057]
          string _t3032#1 = "ERG:Warning of validity intermed";
          string _t3034#1 = "\n";
          Print<[string,tensor[3],string]>(_t3032,startPos2E76,_t3034);
          string _t3037#1 = "Real location:";
          string _t3039#1 = "\n";
          Print<[string,tensor[3],string]>(_t3037,altIntermed3027,_t3039);
          string _t303C#1 = "Cell change: ";
          femData:MeshPos _t303E#1 = findPos1803 (meshData2E69,altCPos2E75);
          femData:Mesh _t3040#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t303E);
          femData:MeshPos _t3042#1 = findPos1803 (meshData2E69,altCPos2E75);
          int _t3044#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t3042);
          femData:MeshCell _t3046#1 = LoadFem<femData:MeshCell>(_t3040,_t3044);
          string _t3048#1 = " to ";
          femData:MeshPos _t304A#1 = findPos1803 (meshData2E69,altIntermed3027);
          femData:Mesh _t304C#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t304A);
          femData:MeshPos _t304E#1 = findPos1803 (meshData2E69,altIntermed3027);
          int _t3050#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t304E);
          femData:MeshCell _t3052#1 = LoadFem<femData:MeshCell>(_t304C,_t3050);
          string _t3054#1 = "\n";
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t303C,_t3046,_t3048,_t3052,_t3054);
          goto JOIN3031
        JOIN3031:  preds = [MASSIGN3056,COND3057]
          bool _t3059#1 = ExtractFemItem<bool,Valid(MeshPos)>(intermed3025);
          bool _t305B#1 = BNot(_t3059);
          if _t305B then goto ASSIGN3060 else goto ASSIGN3062
        ASSIGN3060:  preds = [COND3067]
          bool _t305E#1 = true;
          goto JOIN305D
        JOIN305D:  preds = [ASSIGN3060,ASSIGN3066]
          bool _t305F#1 = phi(_t305E,_t3065)
          if _t305F then goto ASSIGN306A else goto JOIN3068
        ASSIGN306A:  preds = [COND3082]
          string _t3069#1 = "Went off the mesh\?";
          bool _t306B#1 = ExtractFemItem<bool,Valid(MeshPos)>(intermed3025);
          bool _t306D#1 = BNot(_t306B);
          string _t306F#1 = " and ";
          string _t3071#1 = " and ";
          femData:MeshPos _t3073#1 = findPos1803 (meshData2E69,altIntermed3027);
          bool _t3075#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t3073);
          bool _t3077#1 = BNot(_t3075);
          string _t3079#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t3069,_t306D,_t306F,altIntermed3027,_t3071,_t3077,_t3079);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          self.step = step2E73;
          self.cPos = cPos2E74;
          self.altCPos = altCPos2E75;
          stabilize
          goto JOIN3068
        JOIN3068:  preds = [*STABILIZE307C,COND3082]
          tensor[3] _t3084#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed3025);
          int _t3086#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed3025);
          femData:Mesh _t3088#2 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed3025);
          field _t308B#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t3086,_t3088,_t3088);
          tensor[3] _t308D#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t308B,_t3084);
          tensor[3] _t308F#1 = _t308D;
          tensor[3] _t3091#1 = _t308F;
          tensor[3] _t3093#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t3091,altIntermed3027);
          real _t3095#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3093);
          real _t3097#1 = 0.1e-5;
          bool _t3099#1 = GT<real>(_t3095,_t3097);
          if _t3099 then goto ASSIGN309D else goto ASSIGN30BF
        ASSIGN309D:  preds = [COND30C9]
          string _t309C#1 = "ERG:Error in tracing 2: At step:";
          string _t309E#1 = " with particle:";
          string _t30A0#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t309C,step2E73,_t309E,startPos2E76,_t30A0);
          string _t30A3#1 = "Poses are:";
          tensor[3] _t30A6#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed3025);
          int _t30A8#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed3025);
          femData:Mesh _t30AA#2 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed3025);
          field _t30AD#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t30A8,_t30AA,_t30AA);
          tensor[3] _t30AF#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t30AD,_t30A6);
          tensor[3] _t30B1#1 = _t30AF;
          tensor[3] _t30B3#1 = _t30B1;
          string _t30B5#1 = "\n";
          Print<[string,tensor[3],tensor[3],string]>(_t30A3,_t30B3,altIntermed3027,_t30B5);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          self.step = step2E73;
          self.cPos = cPos2E74;
          self.altCPos = altCPos2E75;
          stabilize
          goto JOIN309B
        JOIN309B:  preds = [*STABILIZE30B8,MASSIGN30C8]
          tensor[3] _t30CA#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F2E63,altIntermed3027);
          tensor[3] _t30CC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2E67,_t30CA);
          tensor[3] _t30CE#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F2E63,altIntermed3027);
          real _t30D0#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t30CE);
          tensor[3] altUp230D2#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t30CC,_t30D0);
          bool _t30D5#1 = ExtractFemItem<bool,Valid(MeshPos)>(intermed3025);
          if _t30D5 then goto ASSIGN30D9 else goto ASSIGN3109
        ASSIGN30D9:  preds = [COND310F]
          femData:Mesh _t30D8#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed3025);
          int _t30DA#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed3025);
          femData:MeshCell c30DC#3 = LoadFem<femData:MeshCell>(_t30D8,_t30DA);
          tensor[3] ref30DE#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed3025);
          int _t30E1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c30DC);
          femData:FuncCell _t30E3#1 = LoadFem<femData:FuncCell>(data2E68,_t30E1);
          femData:FuncCell _t30E5#1 = _t30E3;
          femData:FemFunc _t30E7#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t30E5);
          int _t30EA#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c30DC);
          femData:FuncCell _t30EC#1 = LoadFem<femData:FuncCell>(data2E68,_t30EA);
          femData:FuncCell _t30EE#1 = _t30EC;
          femData:FemFunc _t30F0#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t30EE);
          femData:Space _t30F2#1 = ExtractFem<femData:Space,femData:FemFunc>(_t30F0);
          int _t30F5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c30DC);
          femData:FuncCell _t30F7#1 = LoadFem<femData:FuncCell>(data2E68,_t30F5);
          femData:FuncCell _t30F9#1 = _t30F7;
          int _t30FB#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t30F9);
          field _t30FD#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t30FB,_t30F2,_t30E7);
          tensor[3] val30FF#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t30FD,ref30DE);
          real _t3101#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (val30FF);
          tensor[3] _t3103#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (val30FF,_t3101);
          tensor[3] _t3105#1 = _t3103;
          goto JOIN30D7
        JOIN30D7:  preds = [ASSIGN3107,ASSIGN310E]
          tensor[3] _t3106#1 = phi(_t3105,_t310D)
          tensor[3] up23110#5 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2E67,_t3106);
          tensor[3] _t3113#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (altIntermed3027,center2E64);
          tensor[3] _t3115#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M2E65,_t3113);
          tensor[3] _t3117#1 = _t3115;
          tensor[3] _t3119#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2E67,_t3117);
          tensor[3] _t311C#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (altIntermed3027,center2E64);
          tensor[3] _t311E#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M2E65,_t311C);
          tensor[3] _t3120#1 = _t311E;
          real _t3122#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3120);
          tensor[3] upCorrect23124#2 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t3119,_t3122);
          femData:MeshPos cPos3126#1 = fn_2FB2DF4 (cPos2E74,up23110);
          tensor[3] altCPos3128#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2E75,altUp230D2);
          int _t312A#1 = 1;
          int step312C#1 = IAdd(step2E73,_t312A);
          tensor[3] _t312F#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up23110,upCorrect23124);
          real _t3131#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t312F);
          real _t3133#1 = 0.1e-5;
          bool _t3135#1 = GT<real>(_t3131,_t3133);
          if _t3135 then goto ASSIGN313A else goto ASSIGN313C
        ASSIGN313A:  preds = [COND3143]
          bool _t3138#1 = true;
          goto JOIN3137
        JOIN3137:  preds = [ASSIGN313A,ASSIGN3142]
          bool _t3139#1 = phi(_t3138,_t3141)
          if _t3139 then goto ASSIGN3146 else goto JOIN3144
        ASSIGN3146:  preds = [COND3170]
          string _t3145#1 = "ERG:Error in evaluation on pos 2:";
          string _t3147#1 = "\n";
          Print<[string,tensor[3],string]>(_t3145,startPos2E76,_t3147);
          string _t314A#1 = "The errors are:";
          tensor[3] _t314C#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up23110,upCorrect23124);
          real _t314E#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t314C);
          string _t3150#1 = " and ";
          tensor[3] _t3152#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up23110,altUp230D2);
          real _t3154#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3152);
          string _t3156#1 = "\n";
          Print<[string,real,string,real,string]>(_t314A,_t314E,_t3150,_t3154,_t3156);
          string _t3159#1 = "The cells are:";
          femData:Mesh _t315B#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed3025);
          int _t315D#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed3025);
          femData:MeshCell _t315F#1 = LoadFem<femData:MeshCell>(_t315B,_t315D);
          string _t3161#1 = " vs ";
          femData:MeshPos _t3163#1 = findPos1803 (meshData2E69,altIntermed3027);
          femData:Mesh _t3165#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t3163);
          femData:MeshPos _t3167#1 = findPos1803 (meshData2E69,altIntermed3027);
          int _t3169#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t3167);
          femData:MeshCell _t316B#1 = LoadFem<femData:MeshCell>(_t3165,_t3169);
          string _t316D#1 = "\n";
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t3159,_t315F,_t3161,_t316B,_t316D);
          goto JOIN3144
        JOIN3144:  preds = [MASSIGN316F,COND3170]
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          self.step = step312C;
          self.cPos = cPos3126;
          self.altCPos = altCPos3128;
          active
        ASSIGN313C:  preds = [COND3143]
          tensor[3] _t313B#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up23110,altUp230D2);
          real _t313D#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t313B);
          real _t313F#1 = 0.1e-4;
          bool _t3141#1 = GT<real>(_t313D,_t313F);
          goto JOIN3137
        ASSIGN3109:  preds = [COND310F]
          string _t3108#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3108);
          tensor[3] _t310B#1 = λ()<Z_{i0}>_{3} ();
          tensor[3] _t310D#1 = _t310B;
          goto JOIN30D7
        ASSIGN30BF:  preds = [COND30C9]
          string _t30BE#1 = "fine in cell 2:";
          femData:Mesh _t30C0#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2E74);
          int _t30C2#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2E74);
          femData:MeshCell _t30C4#1 = LoadFem<femData:MeshCell>(_t30C0,_t30C2);
          string _t30C6#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t30BE,_t30C4,_t30C6);
          goto JOIN309B
        ASSIGN3062:  preds = [COND3067]
          femData:MeshPos _t3061#1 = findPos1803 (meshData2E69,altIntermed3027);
          bool _t3063#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t3061);
          bool _t3065#1 = BNot(_t3063);
          goto JOIN305D
        ASSIGN3016:  preds = [COND301D]
          tensor[3] _t3015#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up12FEE,altUp12FAC);
          real _t3017#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3015);
          real _t3019#1 = 0.1e-5;
          bool _t301B#1 = GT<real>(_t3017,_t3019);
          goto JOIN3011
        ASSIGN2FE7:  preds = [COND2FED]
          string _t2FE6#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t2FE6);
          tensor[3] _t2FE9#1 = λ()<Z_{i0}>_{3} ();
          tensor[3] _t2FEB#1 = _t2FE9;
          goto JOIN2FB5
        ASSIGN2F95:  preds = [COND2F9F]
          string _t2F94#1 = "fine in cell 1:";
          femData:Mesh _t2F96#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2E74);
          int _t2F98#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2E74);
          femData:MeshCell _t2F9A#1 = LoadFem<femData:MeshCell>(_t2F96,_t2F98);
          string _t2F9C#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t2F94,_t2F9A,_t2F9C);
          goto JOIN2F4D
        ASSIGN2EE3:  preds = [COND2EF1]
          femData:MeshPos _t2EE2#1 = findPos1803 (meshData2E69,altCPos2E75);
          bool _t2EE4#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t2EE2);
          bool _t2EE6#1 = BNot(_t2EE4);
          if _t2EE6 then goto ASSIGN2EEB else goto ASSIGN2EED
        ASSIGN2EEB:  preds = [COND2EEE]
          bool _t2EE9#1 = true;
          goto JOIN2EE8
        JOIN2EE8:  preds = [ASSIGN2EEB,ASSIGN2EED]
          bool _t2EEA#1 = phi(_t2EE9,_t2EEC)
          bool _t2EEF#1 = _t2EEA;
          goto JOIN2EDD
        ASSIGN2EED:  preds = [COND2EEE]
          bool _t2EEC#1 = EQ<int>(step2E73,stepMax2E66);
          goto JOIN2EE8
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY2E36:  preds = []
      tensor[3][] startPoints2E30#1 = globals.startPoints1747;
    FOREACH2E33:  preds = [ASSIGN2E31,NEXT2E35]
      foreach (x2E32 in startPoints2E30) on exit goto RETURN2E37
      new gg(x2E32);
      goto FOREACH2E33
    RETURN2E37:  preds = [FOREACH2E33]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1742 (meshData) = <no-default>
  input 0space0409_intermedateGlobal1743 (space) = <no-default>
  input 0data040B_intermedateGlobal1744 (data) = <no-default>
  input timeSteps1745 (timeSteps) = <default>
  input timeEps1746 (timeEps) = <default>
  input startPoints1747 (startPoints) = <no-default>
  input stepSize1748 (stepSize) = <default>
  input stepMax1749 (stepMax) = <default>
  input M174A (M) = <no-default>
  input center174B (center) = <no-default>
  global femData:Space space175A
  global femData:FemFunc data175B
  global field F175C
## functions
  function femData:MeshPos findPos1803 (femData:Mesh mesh175D#7, tensor[3] pos175E#3) {
    ENTRY1802:  preds = []
      real _t175F#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1765#3 = <tensor[3]>[_t175F,_t175F,_t175F];
      int newtonInt1767#1 = 0;
      int cellInt1769#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh175D);
      int _t176B#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh175D);
      int _t176D#1 = 1;
      int numCell176F#0 = ISub(_t176B,_t176D);
      int[] yayCells1771#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh175D,pos175E);
    FOREACH1774:  preds = [ASSIGN1772,NEXT17FE]
      foreach (cellItter1773 in yayCells1771) on exit goto ASSIGN1800
        int cellInt177F#0 = phi(cellInt1769,cellItter1773)
        tensor[3] xn177C#0 = phi(xn1765,xn1798)
      field _t1781#2 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellItter1773,mesh175D,mesh175D);
      field _t1783#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1781);
      field _t1785#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t1783);
      tensor[3,3] A178F#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t1785,xn1765);
      int _t1793#1 = 16;
      int[] _t1795#1 = Range(newtonInt1767,_t1793);
    FOREACH1799:  preds = [ASSIGN317B,NEXT17FD]
      foreach (newtonItter1797 in _t1795) on exit goto NEXT17FE
        tensor[3] xn1798#3 = phi(xn1765,xn17A2)
      field _t179C#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos175E,_t1781);
      field _t179E#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A178F,_t179C);
      tensor[3] delta17A0#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t179E,xn1798);
      tensor[3] xn17A2#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1798,delta17A0);
      real _t17A4#6 = 0.1e-7;
      real _t17A8#1 = λ(T0[],T1[])<(T0 * T1)> (_t17A4,_t17A4);
      real _t17AA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (delta17A0,delta17A0);
      bool _t17AC#1 = GTE<real>(_t17A8,_t17AA);
      if _t17AC then goto ASSIGN17B0 else goto JOIN17AE
    ASSIGN17B0:  preds = [COND17FC]
      real _t17AF#4 = 0.1e1;
      real _t17B3#1 = λ(T0[],T1[])<(T0 + T1)> (_t17AF,_t17A4);
      tensor[3] _t17BB#1 = <tensor[3]>[_t17AF,_t17AF,_t17AF];
      real _t17BD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t17BB,xn17A2);
      bool _t17BF#1 = GT<real>(_t17B3,_t17BD);
      tensor[3] _t17C7#1 = <tensor[3]>[_t17A4,_t17A4,_t17A4];
      tensor[3] _t17C9#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t17C7,xn17A2);
      real _t17CB#1 = TensorIndex<tensor[3],[0]>(_t17C9);
      real _t17CD#3 = -0.e0;
      bool _t17CF#1 = GT<real>(_t17CB,_t17CD);
      real _t17DB#1 = TensorIndex<tensor[3],[1]>(_t17C9);
      bool _t17DF#1 = GT<real>(_t17DB,_t17CD);
      real _t17EB#1 = TensorIndex<tensor[3],[2]>(_t17C9);
      bool _t17EF#1 = GT<real>(_t17EB,_t17CD);
      bool _t17F1#1 = BAnd(_t17DF,_t17EF);
      bool _t17F3#1 = BAnd(_t17CF,_t17F1);
      bool _t17F5#1 = BAnd(_t17BF,_t17F3);
      if _t17F5 then goto ASSIGN3185 else goto JOIN17F7
    ASSIGN3185:  preds = [COND17FB]
      femData:MeshPos _t17F8#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh175D,cellItter1773,xn17A2,pos175E);
      return _t17F8
      goto JOIN17F7
    JOIN17F7:  preds = [*RETURN(_t17F8)17FA,COND17FB]
      goto JOIN17AE
    JOIN17AE:  preds = [JOIN17F7,COND17FC]
      goto FOREACH1799
    NEXT17FE:  preds = [FOREACH1799]
      goto FOREACH1774
    ASSIGN1800:  preds = [FOREACH1774]
      femData:MeshPos _t17FF#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh175D);
      return _t17FF
}
  function tensor[3] worldPos1814 (femData:MeshPos pos1804#3) {
    ENTRY1813:  preds = []
      tensor[3] _t1805#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(pos1804);
      int _t1807#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos1804);
      femData:Mesh _t1809#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos1804);
      field _t180C#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t1807,_t1809,_t1809);
      tensor[3] _t180E#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t180C,_t1805);
      return _t180E
}
  function femData:MeshPos $exitPos23B8 (femData:Mesh mesh1815#3, int cellId1816#1, tensor[3] refPos1817#2, tensor[3] dPos1818#2, real[2] time1819#3) {
    ENTRY23B7:  preds = []
      int _t181A#1 = -1;
      real _t181C#1 = TensorIndex<real[2],[1]>(time1819);
      int _t181E#6 = FloorToInt(_t181C);
      int[2] _t1820#2 = nextCell41821 (_t181E,cellId1816,mesh1815);
      int _t1823#1 = 0;
      int _t1825#2 = Subscript<int[2]>(_t1820,_t1823);
      bool _t1827#1 = NEQ<int>(_t181A,_t1825);
      if _t1827 then goto ASSIGN182B else goto ASSIGN23AD
    ASSIGN182B:  preds = [COND23B5]
      string _t182A#1 = "face ";
      string _t1830#1 = " to ";
      int _t1838#1 = 1;
      int _t183A#6 = Subscript<int[2]>(_t1820,_t1838);
      string _t183C#2 = "\n";
      string _t183E#1 = "got: ";
      real _t1840#15 = 0.1e1;
      real _t1842#35 = 0.e0;
      tensor[4] _t1848#7 = <tensor[4]>[_t1840,_t1842,_t1842,_t1842];
      tensor[4] _t1852#6 = <tensor[4]>[_t1842,_t1840,_t1842,_t1842];
      tensor[4] _t185C#7 = <tensor[4]>[_t1842,_t1842,_t1840,_t1842];
      real _t185E#1 = 0.971445146547e-16;
      tensor[4] _t1866#4 = <tensor[4]>[_t185E,_t1842,_t1842,_t1840];
      tensor[4,4] _t1868#4 = <tensor[4,4]>[_t1848,_t1852,_t185C,_t1866];
      real _t186A#10 = 0.57735026919e0;
      real _t1870#7 = -0.57735026919e0;
      tensor[4] _t1872#2 = <tensor[4]>[_t186A,_t186A,_t186A,_t1870];
      real _t1874#4 = -0.333333333333e0;
      real _t1876#2 = 0.666666666667e0;
      real _t187A#2 = 0.333333333333e0;
      tensor[4] _t187C#3 = <tensor[4]>[_t1874,_t1876,_t1874,_t187A];
      tensor[4] _t1886#3 = <tensor[4]>[_t1874,_t1874,_t1876,_t187A];
      tensor[4,4] _t1892#4 = <tensor[4,4]>[_t1872,_t187C,_t1886,_t1866];
      tensor[4] _t18A6#1 = <tensor[4]>[_t1870,_t1870,_t1870,_t186A];
      tensor[4,4] _t18BC#4 = <tensor[4,4]>[_t187C,_t18A6,_t1886,_t1866];
      tensor[4,4] _t18E6#4 = <tensor[4,4]>[_t187C,_t1886,_t1872,_t1866];
      tensor[4,4][4] _t18E8#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      real _t18EC#9 = -0.1e1;
      tensor[4] _t18F2#1 = <tensor[4]>[_t186A,_t18EC,_t18EC,_t1840];
      tensor[4] _t18FC#1 = <tensor[4]>[_t186A,_t1840,_t1842,_t1842];
      tensor[4] _t1906#1 = <tensor[4]>[_t186A,_t1842,_t1840,_t1842];
      tensor[4] _t1910#10 = <tensor[4]>[_t1842,_t1842,_t1842,_t1840];
      tensor[4,4] _t1912#4 = <tensor[4,4]>[_t18F2,_t18FC,_t1906,_t1910];
      tensor[4,4] _t193C#12 = <tensor[4,4]>[_t1848,_t1852,_t185C,_t1910];
      tensor[4] _t1950#1 = <tensor[4]>[_t18EC,_t1842,_t1842,_t1842];
      tensor[4,4] _t1966#4 = <tensor[4,4]>[_t1852,_t1950,_t185C,_t1910];
      tensor[4,4] _t1990#4 = <tensor[4,4]>[_t1852,_t185C,_t1848,_t1910];
      tensor[4,4][4] _t1992#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4] _t199C#1 = <tensor[4]>[_t18EC,_t1870,_t18EC,_t1840];
      tensor[4] _t19A6#1 = <tensor[4]>[_t1840,_t1870,_t1842,_t1842];
      tensor[4] _t19B0#1 = <tensor[4]>[_t1842,_t1870,_t1840,_t1842];
      tensor[4,4] _t19BC#4 = <tensor[4,4]>[_t199C,_t19A6,_t19B0,_t1910];
      tensor[4] _t19C6#2 = <tensor[4]>[_t1842,_t18EC,_t1842,_t1842];
      tensor[4,4] _t19E6#4 = <tensor[4,4]>[_t19C6,_t1848,_t185C,_t1910];
      tensor[4,4] _t1A3A#4 = <tensor[4,4]>[_t1848,_t185C,_t19C6,_t1910];
      tensor[4,4][4] _t1A3C#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4] _t1A46#1 = <tensor[4]>[_t18EC,_t18EC,_t186A,_t1840];
      tensor[4] _t1A50#1 = <tensor[4]>[_t1840,_t1842,_t186A,_t1842];
      tensor[4] _t1A5A#1 = <tensor[4]>[_t1842,_t1840,_t186A,_t1842];
      tensor[4,4] _t1A66#4 = <tensor[4,4]>[_t1A46,_t1A50,_t1A5A,_t1910];
      tensor[4,4] _t1A90#4 = <tensor[4,4]>[_t185C,_t1848,_t1852,_t1910];
      tensor[4] _t1AA4#1 = <tensor[4]>[_t1842,_t1842,_t18EC,_t1842];
      tensor[4,4] _t1ABA#4 = <tensor[4,4]>[_t1848,_t1AA4,_t1852,_t1910];
      tensor[4,4][4] _t1AE6#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t1AE8#1 = <tensor[4,4][4][4]>{_t18E8,_t1992,_t1A3C,_t1AE6};
      tensor[4,4][4] _t1AEE#1 = Subscript<tensor[4,4][4][4]>(_t1AE8,_t181E);
      tensor[4,4] _t1AFA#1 = Subscript<tensor[4,4][4]>(_t1AEE,_t183A);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t182A,_t181E,_t1830,_t183A,_t183C,_t183E,_t1AFA,_t183C);
      tensor[4,4][4] _t1BB1#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      tensor[4,4][4] _t1C5B#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4,4][4] _t1D05#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4,4][4] _t1DAF#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t1DB1#1 = <tensor[4,4][4][4]>{_t1BB1,_t1C5B,_t1D05,_t1DAF};
      tensor[4,4][4] _t1DB7#1 = Subscript<tensor[4,4][4][4]>(_t1DB1,_t181E);
      tensor[4,4] _t1DC3#1 = Subscript<tensor[4,4][4]>(_t1DB7,_t183A);
      real _t1DC5#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t1DC7#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1DC5,dPos1818);
      tensor[3] _t1DC9#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1DC7,refPos1817);
      real _t1DCB#1 = TensorIndex<tensor[3],[0]>(_t1DC9);
      real _t1DD3#1 = TensorIndex<tensor[3],[1]>(_t1DC9);
      real _t1DDB#1 = TensorIndex<tensor[3],[2]>(_t1DC9);
      tensor[4] _t1DDF#3 = <tensor[4]>[_t1DCB,_t1DD3,_t1DDB,_t1840];
      tensor[4] _t1DE1#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t1DC3,_t1DDF);
      real _t1DE3#1 = TensorIndex<tensor[4],[0]>(_t1DE1);
      tensor[4,4][4] _t1E8D#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      tensor[4,4][4] _t1F37#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4,4][4] _t1FE1#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4,4][4] _t208B#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t208D#1 = <tensor[4,4][4][4]>{_t1E8D,_t1F37,_t1FE1,_t208B};
      tensor[4,4][4] _t2093#1 = Subscript<tensor[4,4][4][4]>(_t208D,_t181E);
      tensor[4,4] _t209F#1 = Subscript<tensor[4,4][4]>(_t2093,_t183A);
      tensor[4] _t20BD#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t209F,_t1DDF);
      real _t20BF#1 = TensorIndex<tensor[4],[1]>(_t20BD);
      tensor[4,4][4] _t2169#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      tensor[4,4][4] _t2213#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4,4][4] _t22BD#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4,4][4] _t2367#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t2369#1 = <tensor[4,4][4][4]>{_t2169,_t2213,_t22BD,_t2367};
      tensor[4,4][4] _t236F#1 = Subscript<tensor[4,4][4][4]>(_t2369,_t181E);
      tensor[4,4] _t237B#1 = Subscript<tensor[4,4][4]>(_t236F,_t183A);
      tensor[4] _t2399#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t237B,_t1DDF);
      real _t239B#1 = TensorIndex<tensor[4],[2]>(_t2399);
      tensor[3] _t239D#1 = <tensor[3]>[_t1DE3,_t20BF,_t239B];
      femData:MeshPos _t23A9#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(mesh1815,_t1825,_t239D,_t183A);
      return _t23A9
      goto JOIN1829
    JOIN1829:  preds = [*RETURN(_t23A9)23AB,*RETURN(_t23B2)23B4]
      unreachable
    ASSIGN23AD:  preds = [COND23B5]
      real _t23AC#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t23AE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t23AC,dPos1818);
      tensor[3] _t23B0#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t23AE,refPos1817);
      femData:MeshPos _t23B2#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(mesh1815,_t23B0);
      return _t23B2
      goto JOIN1829
}
  function int[2] nextCell41821 (int faceIdx23B9#2, int cell23BA#1, femData:Mesh mesh23BB#1) {
    ENTRY23D7:  preds = []
      int _t23BC#3 = -1;
      bool _t23BE#1 = EQ<int>(faceIdx23B9,_t23BC);
      if _t23BE then goto ASSIGN31C6 else goto ASSIGN23C9
    ASSIGN31C6:  preds = [COND23D5]
      int[2] _t23C5#1 = <int[2]>{_t23BC,_t23BC};
      return _t23C5
      goto JOIN23C0
    JOIN23C0:  preds = [*RETURN(_t23C5)23C7,*RETURN(_t23D2)23D4]
      unreachable
    ASSIGN23C9:  preds = [COND23D5]
      int _t23C8#1 = 8;
      int _t23CA#1 = IMul(cell23BA,_t23C8);
      int _t23CC#1 = 2;
      int _t23CE#1 = IMul(faceIdx23B9,_t23CC);
      int _t23D0#1 = IAdd(_t23CA,_t23CE);
      int[2] _t23D2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh23BB,_t23D0);
      return _t23D2
      goto JOIN23C0
}
  function tensor[2] _exit2D93 (tensor[3] refPos23D8#13, tensor[3] dPos23D9#13, int i23DA#9) {
    ENTRY2D92:  preds = []
      real time23DB#3 = +inf;
      int face23DD#3 = -1;
      real faceTime23DF#4 = -inf;
      string _t23E1#4 = "\ntest :";
      real _t23E3#5 = 0.57735026919e0;
      tensor[3] _t23EB#3 = <tensor[3]>[_t23E3,_t23E3,_t23E3];
      real _t23ED#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t23EB,refPos23D8);
      real _t23EF#3 = λ(T0[],T1[])<(T0) - (T1)> (_t23E3,_t23ED);
      real _t23F9#3 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t23EB,dPos23D9);
      real _t23FB#8 = λ(T0[],T1[])<(T0) / ( T1)> (_t23EF,_t23F9);
      string _t23FD#4 = " test2: ";
      string _t2409#4 = " insideTest: ";
      real _t240B#4 = 0.1e1;
      real _t240D#8 = 0.1e-7;
      real _t240F#5 = λ(T0[],T1[])<(T0 + T1)> (_t240B,_t240D);
      tensor[3] _t2417#5 = <tensor[3]>[_t240B,_t240B,_t240B];
      tensor[3] _t2433#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t23FB,dPos23D9);
      tensor[3] _t2435#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2433);
      real _t2437#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2417,_t2435);
      bool _t2439#1 = GT<real>(_t240F,_t2437);
      tensor[3] _t2441#5 = <tensor[3]>[_t240D,_t240D,_t240D];
      tensor[3] _t2461#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2441,_t2435);
      real _t2463#1 = TensorIndex<tensor[3],[0]>(_t2461);
      real _t2465#15 = -0.e0;
      bool _t2467#1 = GT<real>(_t2463,_t2465);
      real _t2491#1 = TensorIndex<tensor[3],[1]>(_t2461);
      bool _t2495#1 = GT<real>(_t2491,_t2465);
      real _t24BF#1 = TensorIndex<tensor[3],[2]>(_t2461);
      bool _t24C3#1 = GT<real>(_t24BF,_t2465);
      bool _t24C5#1 = BAnd(_t2495,_t24C3);
      bool _t24C7#1 = BAnd(_t2467,_t24C5);
      bool _t24C9#1 = BAnd(_t2439,_t24C7);
      string _t24CB#4 = " dist: ";
      real _t24DB#1 = λ(T0[])<Abs(T0)> (_t23EF);
      string _t24DD#4 = "signed dist: ";
      string _t24ED#4 = " face: ";
      int _t24EF#3 = 0;
      string _t24F1#4 = " place: ";
      string _t2511#4 = " error: ";
      real _t253B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t23EB,_t2435);
      real _t253D#1 = λ(T0[],T1[])<(T0) - (T1)> (_t23E3,_t253B);
      real _t253F#1 = λ(T0[])<Abs(T0)> (_t253D);
      string _t2541#4 = " offset :";
      string _t2543#4 = " dp: ";
      string _t2545#4 = " otherPossibleTime: ";
      string _t2547#15 = "\n";
      string _t2549#4 = "\n original face: ";
      string _t254B#4 = " ";
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t23FB,_t23FD,_t23F9,_t2409,_t24C9,_t24CB,_t24DB,_t24DD,_t23EF,_t24ED,_t24EF,_t24F1,_t2435,_t2511,_t253F,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime23DF,_t2547,_t2549,i23DA,_t254B);
      real _t2568#4 = -0.1e-7;
      bool _t256A#1 = GTE<real>(_t23FB,_t2568);
      bool _t2586#2 = GT<real>(time23DB,_t23FB);
      real _t2592#1 = λ(T0[])<Abs(T0)> (_t23F9);
      bool _t2596#1 = GTE<real>(_t2592,_t240D);
      bool _t2598#1 = BAnd(_t2586,_t2596);
      bool _t259A#1 = BAnd(_t256A,_t2598);
      if _t259A then goto ASSIGN31D9 else goto JOIN259C
    ASSIGN31D9:  preds = [COND261F]
      bool _t259F#1 = NEQ<int>(i23DA,_t24EF);
      if _t259F then goto ASSIGN25A3 else goto ASSIGN2617
    ASSIGN25A3:  preds = [COND261B]
      string _t25A2#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t25A2,_t23FB,_t2586,_t2547);
      goto JOIN25A1
    JOIN25A1:  preds = [MASSIGN31DB,MASSIGN31DA]
      real faceTime2614#1 = phi(faceTime23DF,_t23FB)
      int face25F9#1 = phi(_t24EF,face23DD)
      real time25F6#1 = phi(_t23FB,time23DB)
      goto JOIN259C
    JOIN259C:  preds = [JOIN25A1,COND261F]
      real faceTime261E#3 = phi(faceTime2614,faceTime23DF)
      int face261D#2 = phi(face25F9,face23DD)
      real time261C#3 = phi(time25F6,time23DB)
      real _t2622#14 = 0.e0;
      real _t2624#5 = -0.1e1;
      tensor[3] _t262A#3 = <tensor[3]>[_t2624,_t2622,_t2622];
      real _t262C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t262A,refPos23D8);
      real _t262E#3 = λ(T0[],T1[])<(T0) - (T1)> (_t2622,_t262C);
      real _t2638#3 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t262A,dPos23D9);
      real _t263A#8 = λ(T0[],T1[])<(T0) / ( T1)> (_t262E,_t2638);
      tensor[3] _t2672#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t263A,dPos23D9);
      tensor[3] _t2674#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2672);
      real _t2676#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2417,_t2674);
      bool _t2678#1 = GT<real>(_t240F,_t2676);
      tensor[3] _t26A0#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2441,_t2674);
      real _t26A2#1 = TensorIndex<tensor[3],[0]>(_t26A0);
      bool _t26A6#1 = GT<real>(_t26A2,_t2465);
      real _t26D0#1 = TensorIndex<tensor[3],[1]>(_t26A0);
      bool _t26D4#1 = GT<real>(_t26D0,_t2465);
      real _t26FE#1 = TensorIndex<tensor[3],[2]>(_t26A0);
      bool _t2702#1 = GT<real>(_t26FE,_t2465);
      bool _t2704#1 = BAnd(_t26D4,_t2702);
      bool _t2706#1 = BAnd(_t26A6,_t2704);
      bool _t2708#1 = BAnd(_t2678,_t2706);
      real _t271A#1 = λ(T0[])<Abs(T0)> (_t262E);
      int _t272E#3 = 1;
      real _t277A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t262A,_t2674);
      real _t277C#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2622,_t277A);
      real _t277E#1 = λ(T0[])<Abs(T0)> (_t277C);
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t263A,_t23FD,_t2638,_t2409,_t2708,_t24CB,_t271A,_t24DD,_t262E,_t24ED,_t272E,_t24F1,_t2674,_t2511,_t277E,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime261E,_t2547,_t2549,i23DA,_t254B);
      bool _t27A9#1 = GTE<real>(_t263A,_t2568);
      bool _t27C5#2 = GT<real>(time261C,_t263A);
      real _t27D1#1 = λ(T0[])<Abs(T0)> (_t2638);
      bool _t27D5#1 = GTE<real>(_t27D1,_t240D);
      bool _t27D7#1 = BAnd(_t27C5,_t27D5);
      bool _t27D9#1 = BAnd(_t27A9,_t27D7);
      if _t27D9 then goto ASSIGN31EF else goto JOIN27DB
    ASSIGN31EF:  preds = [COND285E]
      bool _t27DE#1 = NEQ<int>(i23DA,_t272E);
      if _t27DE then goto ASSIGN27E2 else goto ASSIGN2856
    ASSIGN27E2:  preds = [COND285A]
      string _t27E1#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t27E1,_t263A,_t27C5,_t2547);
      goto JOIN27E0
    JOIN27E0:  preds = [MASSIGN31F1,MASSIGN31F0]
      real faceTime2853#1 = phi(faceTime261E,_t263A)
      int face2838#1 = phi(_t272E,face261D)
      real time2835#1 = phi(_t263A,time261C)
      goto JOIN27DB
    JOIN27DB:  preds = [JOIN27E0,COND285E]
      real faceTime285D#3 = phi(faceTime2853,faceTime261E)
      int face285C#2 = phi(face2838,face261D)
      real time285B#3 = phi(time2835,time261C)
      tensor[3] _t2869#3 = <tensor[3]>[_t2622,_t2624,_t2622];
      real _t286B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2869,refPos23D8);
      real _t286D#3 = λ(T0[],T1[])<(T0) - (T1)> (_t2622,_t286B);
      real _t2877#3 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2869,dPos23D9);
      real _t2879#8 = λ(T0[],T1[])<(T0) / ( T1)> (_t286D,_t2877);
      tensor[3] _t28B1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2879,dPos23D9);
      tensor[3] _t28B3#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t28B1);
      real _t28B5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2417,_t28B3);
      bool _t28B7#1 = GT<real>(_t240F,_t28B5);
      tensor[3] _t28DF#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2441,_t28B3);
      real _t28E1#1 = TensorIndex<tensor[3],[0]>(_t28DF);
      bool _t28E5#1 = GT<real>(_t28E1,_t2465);
      real _t290F#1 = TensorIndex<tensor[3],[1]>(_t28DF);
      bool _t2913#1 = GT<real>(_t290F,_t2465);
      real _t293D#1 = TensorIndex<tensor[3],[2]>(_t28DF);
      bool _t2941#1 = GT<real>(_t293D,_t2465);
      bool _t2943#1 = BAnd(_t2913,_t2941);
      bool _t2945#1 = BAnd(_t28E5,_t2943);
      bool _t2947#1 = BAnd(_t28B7,_t2945);
      real _t2959#1 = λ(T0[])<Abs(T0)> (_t286D);
      int _t296D#3 = 2;
      real _t29B9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2869,_t28B3);
      real _t29BB#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2622,_t29B9);
      real _t29BD#1 = λ(T0[])<Abs(T0)> (_t29BB);
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t2879,_t23FD,_t2877,_t2409,_t2947,_t24CB,_t2959,_t24DD,_t286D,_t24ED,_t296D,_t24F1,_t28B3,_t2511,_t29BD,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime285D,_t2547,_t2549,i23DA,_t254B);
      bool _t29E8#1 = GTE<real>(_t2879,_t2568);
      bool _t2A04#2 = GT<real>(time285B,_t2879);
      real _t2A10#1 = λ(T0[])<Abs(T0)> (_t2877);
      bool _t2A14#1 = GTE<real>(_t2A10,_t240D);
      bool _t2A16#1 = BAnd(_t2A04,_t2A14);
      bool _t2A18#1 = BAnd(_t29E8,_t2A16);
      if _t2A18 then goto ASSIGN3206 else goto JOIN2A1A
    ASSIGN3206:  preds = [COND2A9D]
      bool _t2A1D#1 = NEQ<int>(i23DA,_t296D);
      if _t2A1D then goto ASSIGN2A21 else goto ASSIGN2A95
    ASSIGN2A21:  preds = [COND2A99]
      string _t2A20#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t2A20,_t2879,_t2A04,_t2547);
      goto JOIN2A1F
    JOIN2A1F:  preds = [MASSIGN3208,MASSIGN3207]
      real faceTime2A92#1 = phi(faceTime285D,_t2879)
      int face2A77#1 = phi(_t296D,face285C)
      real time2A74#1 = phi(_t2879,time285B)
      goto JOIN2A1A
    JOIN2A1A:  preds = [JOIN2A1F,COND2A9D]
      real faceTime2A9C#3 = phi(faceTime2A92,faceTime285D)
      int face2A9B#2 = phi(face2A77,face285C)
      real time2A9A#3 = phi(time2A74,time285B)
      tensor[3] _t2AA8#3 = <tensor[3]>[_t2622,_t2622,_t2624];
      real _t2AAA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2AA8,refPos23D8);
      real _t2AAC#3 = λ(T0[],T1[])<(T0) - (T1)> (_t2622,_t2AAA);
      real _t2AB6#3 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2AA8,dPos23D9);
      real _t2AB8#8 = λ(T0[],T1[])<(T0) / ( T1)> (_t2AAC,_t2AB6);
      tensor[3] _t2AF0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2AB8,dPos23D9);
      tensor[3] _t2AF2#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2AF0);
      real _t2AF4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2417,_t2AF2);
      bool _t2AF6#1 = GT<real>(_t240F,_t2AF4);
      tensor[3] _t2B1E#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2441,_t2AF2);
      real _t2B20#1 = TensorIndex<tensor[3],[0]>(_t2B1E);
      bool _t2B24#1 = GT<real>(_t2B20,_t2465);
      real _t2B4E#1 = TensorIndex<tensor[3],[1]>(_t2B1E);
      bool _t2B52#1 = GT<real>(_t2B4E,_t2465);
      real _t2B7C#1 = TensorIndex<tensor[3],[2]>(_t2B1E);
      bool _t2B80#1 = GT<real>(_t2B7C,_t2465);
      bool _t2B82#1 = BAnd(_t2B52,_t2B80);
      bool _t2B84#1 = BAnd(_t2B24,_t2B82);
      bool _t2B86#1 = BAnd(_t2AF6,_t2B84);
      real _t2B98#1 = λ(T0[])<Abs(T0)> (_t2AAC);
      int _t2BAC#3 = 3;
      real _t2BF8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2AA8,_t2AF2);
      real _t2BFA#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2622,_t2BF8);
      real _t2BFC#1 = λ(T0[])<Abs(T0)> (_t2BFA);
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t2AB8,_t23FD,_t2AB6,_t2409,_t2B86,_t24CB,_t2B98,_t24DD,_t2AAC,_t24ED,_t2BAC,_t24F1,_t2AF2,_t2511,_t2BFC,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime2A9C,_t2547,_t2549,i23DA,_t254B);
      bool _t2C27#1 = GTE<real>(_t2AB8,_t2568);
      bool _t2C43#2 = GT<real>(time2A9A,_t2AB8);
      real _t2C4F#1 = λ(T0[])<Abs(T0)> (_t2AB6);
      bool _t2C53#1 = GTE<real>(_t2C4F,_t240D);
      bool _t2C55#1 = BAnd(_t2C43,_t2C53);
      bool _t2C57#1 = BAnd(_t2C27,_t2C55);
      if _t2C57 then goto ASSIGN321D else goto JOIN2C59
    ASSIGN321D:  preds = [COND2CDC]
      bool _t2C5C#1 = NEQ<int>(i23DA,_t2BAC);
      if _t2C5C then goto ASSIGN2C60 else goto ASSIGN2CD4
    ASSIGN2C60:  preds = [COND2CD8]
      string _t2C5F#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t2C5F,_t2AB8,_t2C43,_t2547);
      goto JOIN2C5E
    JOIN2C5E:  preds = [MASSIGN321F,MASSIGN321E]
      real faceTime2CD1#1 = phi(faceTime2A9C,_t2AB8)
      int face2CB6#1 = phi(_t2BAC,face2A9B)
      real time2CB3#1 = phi(_t2AB8,time2A9A)
      goto JOIN2C59
    JOIN2C59:  preds = [JOIN2C5E,COND2CDC]
      real faceTime2CDB#2 = phi(faceTime2CD1,faceTime2A9C)
      int face2CDA#2 = phi(face2CB6,face2A9B)
      real time2CD9#1 = phi(time2CB3,time2A9A)
      bool _t2CDF#1 = NEQ<int>(face2CDA,face23DD);
      real _t2CF1#2 = Max<real>(time2CD9,_t2622);
      tensor[3] _t2CF3#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2CF1,dPos23D9);
      tensor[3] _t2CF5#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (refPos23D8,_t2CF3);
      real _t2CF7#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2417,_t2CF5);
      bool _t2CF9#1 = GT<real>(_t240F,_t2CF7);
      tensor[3] _t2D0B#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2441,_t2CF5);
      real _t2D0D#1 = TensorIndex<tensor[3],[0]>(_t2D0B);
      bool _t2D11#1 = GT<real>(_t2D0D,_t2465);
      real _t2D25#1 = TensorIndex<tensor[3],[1]>(_t2D0B);
      bool _t2D29#1 = GT<real>(_t2D25,_t2465);
      real _t2D3D#1 = TensorIndex<tensor[3],[2]>(_t2D0B);
      bool _t2D41#1 = GT<real>(_t2D3D,_t2465);
      bool _t2D43#1 = BAnd(_t2D29,_t2D41);
      bool _t2D45#1 = BAnd(_t2D11,_t2D43);
      bool _t2D47#1 = BAnd(_t2CF9,_t2D45);
      bool _t2D49#1 = BAnd(_t2CDF,_t2D47);
      if _t2D49 then goto ASSIGN2D4D else goto ASSIGN322A
    ASSIGN2D4D:  preds = [COND2D90]
      string _t2D4C#1 = "\nReturning via standard : ";
      real _t2D52#1 = IntToReal(face2CDA);
      tensor[2] _t2D54#2 = <tensor[2]>[_t2CF1,_t2D52];
      Print<[string,tensor[2],string]>(_t2D4C,_t2D54,_t2547);
      return _t2D54
      goto JOIN2D4B
    JOIN2D4B:  preds = [*RETURN(_t2D54)3233,*JOIN2D66]
      unreachable
    ASSIGN322A:  preds = [COND2D90]
      bool _t2D64#1 = EQ<real>(faceTime23DF,faceTime2CDB);
      if _t2D64 then goto ASSIGN2D68 else goto ASSIGN2D7A
    ASSIGN2D68:  preds = [COND2D8F]
      string _t2D67#1 = "\nReturning via fail : ";
      tensor[2] _t2D6D#2 = <tensor[2]>[_t2624,_t2624];
      Print<[string,tensor[2],string]>(_t2D67,_t2D6D,_t2547);
      return _t2D6D
      goto JOIN2D66
    JOIN2D66:  preds = [*RETURN(_t2D6D)3230,*RETURN(_t2D81)322D]
      goto JOIN2D4B
    ASSIGN2D7A:  preds = [COND2D8F]
      string _t2D79#1 = "\nReturning via backup : ";
      real _t2D7D#1 = Max<real>(faceTime2CDB,_t2622);
      real _t2D7F#1 = IntToReal(i23DA);
      tensor[2] _t2D81#2 = <tensor[2]>[_t2D7D,_t2D7F];
      Print<[string,tensor[2],string]>(_t2D79,_t2D81,_t2547);
      return _t2D81
      goto JOIN2D66
    ASSIGN2CD4:  preds = [COND2CD8]
      string _t2CD3#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2CD3,_t2AB8,_t2547);
      goto JOIN2C5E
    ASSIGN2A95:  preds = [COND2A99]
      string _t2A94#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2A94,_t2879,_t2547);
      goto JOIN2A1F
    ASSIGN2856:  preds = [COND285A]
      string _t2855#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2855,_t263A,_t2547);
      goto JOIN27E0
    ASSIGN2617:  preds = [COND261B]
      string _t2616#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2616,_t23FB,_t2547);
      goto JOIN25A1
}
  function femData:MeshPos fn_2FB2DF4 (femData:MeshPos x2D94#8, tensor[3] dPos2D95#2) {
    ENTRY2DF3:  preds = []
      femData:Mesh meshData2D97#1 = globals.meshData1742;
      int timeSteps2D96#1 = globals.timeSteps1745;
      bool _t2D9A#1 = ExtractFemItem<bool,Valid(MeshPos)>(x2D94);
      bool _t2D9C#1 = BNot(_t2D9A);
      if _t2D9C then goto RETURN(x2D94)2D9F else goto JOIN2D9E
    RETURN(x2D94)2D9F:  preds = [COND2DA0]
      return x2D94
      goto JOIN2D9E
    JOIN2D9E:  preds = [*RETURN(x2D94)2D9F,COND2DA0]
      real time2DA1#1 = 0.1e1;
      int _t2DA5#1 = 0;
      int[] _t2DA7#1 = Range(_t2DA5,timeSteps2D96);
    FOREACH2DAA:  preds = [ASSIGN2DA8,*NEXT2DDA]
      foreach (i2DA9 in _t2DA7) on exit goto ASSIGN2DDC
      femData:Mesh _t2DAB#1 = ExtractFem<femData:Mesh,femData:MeshPos>(x2D94);
      int _t2DAD#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x2D94);
      femData:MeshCell _t2DAF#2 = LoadFem<femData:MeshCell>(_t2DAB,_t2DAD);
      femData:Mesh _t2DB1#2 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2DAF);
      int _t2DC1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2DAF);
      field _t2DC3#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2DC1,_t2DB1,_t2DB1);
      field _t2DC5#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t2DC3);
      tensor[3] _t2DC7#2 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x2D94);
      tensor[3,3] _t2DC9#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t2DC5,_t2DC7);
      tensor[3,3] _t2DCB#1 = λ(T0[3 3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * T0_{i9,i6} * T0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * T0_{i3,'0'} * T0_{i4,'1'} * T0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t2DC9);
      tensor[3] deltaP2DCD#3 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t2DCB,dPos2D95);
      real _t2DCF#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (deltaP2DCD);
      tensor[3] normDetaP2DD1#0 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (deltaP2DCD,_t2DCF);
      tensor[3] _t2DD5#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (time2DA1,deltaP2DCD);
      tensor[3] newPos2DD7#0 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2DC7,_t2DD5);
      return
      goto FOREACH2DAA
    ASSIGN2DDC:  preds = [FOREACH2DAA]
      string _t2DDB#1 = "Took stupid way out!\n";
      Print<[string]>(_t2DDB);
      tensor[3] _t2DDF#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x2D94);
      int _t2DE1#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x2D94);
      femData:Mesh _t2DE3#2 = ExtractFem<femData:Mesh,femData:MeshPos>(x2D94);
      field _t2DE6#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2DE1,_t2DE3,_t2DE3);
      tensor[3] _t2DE8#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2DE6,_t2DDF);
      tensor[3] _t2DEE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2DE8,dPos2D95);
      femData:MeshPos cmp2DF0#1 = findPos1803 (meshData2D97,_t2DEE);
      return cmp2DF0
}
## input initialization
  ENTRY1758:  preds = []
    int timeSteps174C#1 = 32;
    globals.timeSteps1745 = timeSteps174C;
    real timeEps174F#1 = 0.1e-6;
    globals.timeEps1746 = timeEps174F;
    real stepSize1752#1 = 0.1e-1;
    globals.stepSize1748 = stepSize1752;
    int stepMax1755#1 = 300;
    globals.stepMax1749 = stepMax1755;
    return
## global-variable initialization
  ENTRY2E2E:  preds = []
    femData:Mesh meshData2DF7#3 = globals.meshData1742;
    femData:Space 0space0409_intermedateGlobal2DF6#1 = globals.0space0409_intermedateGlobal1743;
    femData:FemFunc 0data040B_intermedateGlobal2DF5#1 = globals.0data040B_intermedateGlobal1744;
    int _t2DFB#1 = 0;
    int _t2DFD#1 = 1;
    int _t2DFF#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData2DF7);
    int _t2E01#1 = ISub(_t2DFF,_t2DFD);
    int[] _t2E03#1 = Range(_t2DFB,_t2E01);
    femData:MeshCell[] _t2E05#1 = <femData:MeshCell[]>{};
  FOREACH2E09:  preds = [ASSIGN2E06,NEXT2E0E]
    foreach (_t2E07 in _t2E03) on exit goto ASSIGN2E10
      femData:MeshCell[] _t2E08#1 = phi(_t2E05,_t2E0C)
    femData:MeshCell _t2E0A#1 = LoadFem<femData:MeshCell>(meshData2DF7,_t2E07);
    femData:MeshCell[] _t2E0C#1 = Append<femData:MeshCell>(_t2E08,_t2E0A);
    goto FOREACH2E09
  ASSIGN2E10:  preds = [FOREACH2E09]
    femData:Space space2E0F#2 = LoadFem<femData:Space>(0space0409_intermedateGlobal2DF6,meshData2DF7);
    globals.space175A = space2E0F;
    femData:FemFunc data2E12#3 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal2DF5,space2E0F);
    globals.data175B = data2E12;
    femData:Space _t2E15#2 = ExtractFem<femData:Space,femData:FemFunc>(data2E12);
    femData:Mesh _t2E19#4 = ExtractFem<femData:Mesh,femData:Space>(_t2E15);
    field _t2E1B#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2)<femV(1803, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2E19,_t2E15,data2E12);
    field _t2E29#1 = λ(FEM(mesh_t)0,FEM(mesh_t)1,FEM(mesh_t)2)<femInvV(1803, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2E19,_t2E19,_t2E19);
    field F2E2B#1 = λ(F0[3],F1[3])<Cmp(F0_{i0})[F1_{i0}{3}]>_{3} (_t2E1B,_t2E29);
    globals.F175C = F2E2B;
    return
## strand
  strand gg (tensor[3] startPos2E38#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY2E5B:  preds = []
        femData:Mesh meshData2E3F#1 = globals.meshData1742;
        tensor[3][0] _t2E47#1 = <tensor[3][0]>{};
        tensor[3][] _t2E49#1 = MkDynamic<tensor[3],0>(_t2E47);
        tensor[3][0] _t2E4D#1 = <tensor[3][0]>{};
        tensor[3][] _t2E4F#1 = MkDynamic<tensor[3],0>(_t2E4D);
        int step2E53#1 = 0;
        femData:MeshPos cPos2E55#1 = findPos1803 (meshData2E3F,startPos2E38);
        self.stream = _t2E49;
        self.newStream = _t2E4F;
        self.step = step2E53;
        self.cPos = cPos2E55;
        self.altCPos = startPos2E38;
        self.startPos = startPos2E38;
        return
    end state init
    method update
        ENTRY3171:  preds = []
          femData:Mesh meshData2E69#2 = globals.meshData1742;
          femData:FemFunc data2E68#2 = globals.data175B;
          real stepSize2E67#4 = globals.stepSize1748;
          int stepMax2E66#1 = globals.stepMax1749;
          tensor[3,3] M2E65#2 = globals.M174A;
          tensor[3] center2E64#2 = globals.center174B;
          field F2E63#2 = globals.F175C;
          tensor[3][] stream2E71#2 = self.stream;
          tensor[3][] newStream2E72#2 = self.newStream;
          int step2E73#5 = self.step;
          femData:MeshPos cPos2E74#9 = self.cPos;
          tensor[3] altCPos2E75#9 = self.altCPos;
          tensor[3] startPos2E76#6 = self.startPos;
          int _t2E7D#1 = 0;
          bool _t2E7F#1 = EQ<int>(step2E73,_t2E7D);
          if _t2E7F then goto ASSIGN2E83 else goto JOIN2E81
        ASSIGN2E83:  preds = [COND2EC8]
          bool _t2E82#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          if _t2E82 then goto ASSIGN2E86 else goto JOIN2E84
        ASSIGN2E86:  preds = [COND2EC7]
          tensor[3] rp2E85#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          real _t2E87#1 = TensorIndex<tensor[3],[0]>(rp2E85);
          real _t2E89#3 = 0.1e-5;
          bool _t2E8B#1 = LTE<real>(_t2E87,_t2E89);
          if _t2E8B then goto STABILIZE2E8E else goto JOIN2E8D
        STABILIZE2E8E:  preds = [COND2E94]
          stabilize
          goto JOIN2E8D
        JOIN2E8D:  preds = [*STABILIZE2E8E,COND2E94]
          real _t2E95#1 = TensorIndex<tensor[3],[1]>(rp2E85);
          bool _t2E99#1 = LTE<real>(_t2E95,_t2E89);
          if _t2E99 then goto STABILIZE2E9C else goto JOIN2E9B
        STABILIZE2E9C:  preds = [COND2EA2]
          stabilize
          goto JOIN2E9B
        JOIN2E9B:  preds = [*STABILIZE2E9C,COND2EA2]
          real _t2EA3#1 = TensorIndex<tensor[3],[2]>(rp2E85);
          bool _t2EA7#1 = LTE<real>(_t2EA3,_t2E89);
          if _t2EA7 then goto STABILIZE2EAA else goto JOIN2EA9
        STABILIZE2EAA:  preds = [COND2EB0]
          stabilize
          goto JOIN2EA9
        JOIN2EA9:  preds = [*STABILIZE2EAA,COND2EB0]
          real _t2EB1#3 = 0.1e1;
          tensor[3] _t2EB7#1 = <tensor[3]>[_t2EB1,_t2EB1,_t2EB1];
          real r2EB9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EB7,rp2E85);
          real _t2EBB#1 = 0.9999999e0;
          bool _t2EBD#1 = LTE<real>(_t2EBB,r2EB9);
          if _t2EBD then goto STABILIZE2EC0 else goto JOIN2EBF
        STABILIZE2EC0:  preds = [COND2EC6]
          stabilize
          goto JOIN2EBF
        JOIN2EBF:  preds = [*STABILIZE2EC0,COND2EC6]
          goto JOIN2E84
        JOIN2E84:  preds = [JOIN2EBF,COND2EC7]
          goto JOIN2E81
        JOIN2E81:  preds = [JOIN2E84,COND2EC8]
          bool _t2EC9#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          femData:MeshPos _t2ECB#6 = findPos1803 (meshData2E69,altCPos2E75);
          bool _t2ECD#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t2ECB);
          bool _t2ECF#1 = NEQ<bool>(_t2EC9,_t2ECD);
          if _t2ECF then goto ASSIGN2ED3 else goto JOIN2ED1
        ASSIGN2ED3:  preds = [COND2ED7]
          string _t2ED2#1 = "ERG:Warning of validity startPos:";
          string _t2ED4#1 = "\n";
          Print<[string,tensor[3],string]>(_t2ED2,startPos2E76,_t2ED4);
          goto JOIN2ED1
        JOIN2ED1:  preds = [MASSIGN2ED6,COND2ED7]
          bool _t2EDB#2 = BNot(_t2EC9);
          if _t2EDB then goto ASSIGN2EE0 else goto ASSIGN3244
        ASSIGN2EE0:  preds = [COND2EF1]
          bool _t2EDE#1 = true;
          goto JOIN2EDD
        JOIN2EDD:  preds = [ASSIGN2EE0,JOIN2EE8]
          bool _t2EDF#1 = phi(_t2EDE,_t2EEA)
          if _t2EDF then goto ASSIGN2EF4 else goto JOIN2EF2
        ASSIGN2EF4:  preds = [COND2F18]
          string _t2EF3#1 = "Went off the mesh\?";
          string _t2EF9#2 = " and ";
          bool _t2F01#1 = BNot(_t2ECD);
          string _t2F03#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t2EF3,_t2EDB,_t2EF9,altCPos2E75,_t2EF9,_t2F01,_t2F03);
          string _t2F06#1 = "Pos is:";
          tensor[3] _t2F08#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          Print<[string,tensor[3],string]>(_t2F06,_t2F08,_t2F03);
          Print<[tensor[3][],string,tensor[3][],string]>(stream2E71,_t2F03,newStream2E72,_t2F03);
          stabilize
          goto JOIN2EF2
        JOIN2EF2:  preds = [*STABILIZE2F12,COND2F18]
          tensor[3] _t2F1A#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          int _t2F1C#5 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2E74);
          femData:Mesh _t2F1E#6 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2E74);
          field _t2F21#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2F1C,_t2F1E,_t2F1E);
          tensor[3] _t2F23#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2F21,_t2F1A);
          tensor[3][1] _t2F29#1 = <tensor[3][1]>{_t2F23};
          tensor[3][] _t2F2B#1 = MkDynamic<tensor[3],1>(_t2F29);
          tensor[3][] stream2F2D#4 = Concat<tensor[3]>(stream2E71,_t2F2B);
          tensor[3][1] _t2F2F#1 = <tensor[3][1]>{altCPos2E75};
          tensor[3][] _t2F31#1 = MkDynamic<tensor[3],1>(_t2F2F);
          tensor[3][] newStream2F33#4 = Concat<tensor[3]>(newStream2E72,_t2F31);
          tensor[3] _t2F45#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t2F23,altCPos2E75);
          real _t2F47#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t2F45);
          real _t2F49#5 = 0.1e-5;
          bool _t2F4B#1 = GT<real>(_t2F47,_t2F49);
          if _t2F4B then goto ASSIGN2F4F else goto ASSIGN2F95
        ASSIGN2F4F:  preds = [COND2F9F]
          string _t2F4E#1 = "ERG:Error in tracing 1: At step:";
          string _t2F50#1 = " with particle:";
          string _t2F52#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t2F4E,step2E73,_t2F50,startPos2E76,_t2F52);
          string _t2F55#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t2F55,_t2F23,altCPos2E75,_t2F52);
          string _t2F6A#1 = "Cells are:";
          femData:MeshCell _t2F70#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          string _t2F72#2 = " and ";
          femData:Mesh _t2F76#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t2ECB);
          int _t2F7A#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t2ECB);
          femData:MeshCell _t2F7C#1 = LoadFem<femData:MeshCell>(_t2F76,_t2F7A);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t2F6A,_t2F70,_t2F72,_t2F7C,_t2F52);
          string _t2F81#1 = "Ref poses are:";
          tensor[3] _t2F89#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t2ECB);
          Print<[string,tensor[3],string,tensor[3],string]>(_t2F81,_t2F1A,_t2F72,_t2F89,_t2F52);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          stabilize
          goto JOIN2F4D
        JOIN2F4D:  preds = [*STABILIZE2F8E,MASSIGN2F9E]
          real _t2FA0#1 = 0.5e0;
          real _t2FA2#3 = λ(T0[],T1[])<(T0 * T1)> (_t2FA0,stepSize2E67);
          tensor[3] _t2FA4#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F2E63,altCPos2E75);
          tensor[3] _t2FA6#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2FA2,_t2FA4);
          real _t2FAA#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t2FA4);
          tensor[3] altUp12FAC#2 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t2FA6,_t2FAA);
          if _t2EC9 then goto ASSIGN3254 else goto ASSIGN2FE7
        ASSIGN3254:  preds = [COND2FED]
          femData:MeshCell c2FBA#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          int _t2FBF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2FBA);
          femData:FuncCell _t2FC1#2 = LoadFem<femData:FuncCell>(data2E68,_t2FBF);
          femData:FemFunc _t2FC5#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2FC1);
          femData:Space _t2FD0#1 = ExtractFem<femData:Space,femData:FemFunc>(_t2FC5);
          int _t2FD9#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2FC1);
          field _t2FDB#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2FD9,_t2FD0,_t2FC5);
          tensor[3] val2FDD#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2FDB,_t2F1A);
          real _t2FDF#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (val2FDD);
          tensor[3] _t2FE1#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (val2FDD,_t2FDF);
          goto JOIN2FB5
        JOIN2FB5:  preds = [ASSIGN2FE2,ASSIGN2FEA]
          tensor[3] _t2FE4#1 = phi(_t2FE1,_t2FE9)
          tensor[3] up12FEE#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2FA2,_t2FE4);
          tensor[3] _t2FF5#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (altCPos2E75,center2E64);
          tensor[3] _t2FF7#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M2E65,_t2FF5);
          tensor[3] _t2FFB#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2FA2,_t2FF7);
          real _t3004#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t2FF7);
          tensor[3] upCorrect13006#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t2FFB,_t3004);
          tensor[3] _t3009#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up12FEE,upCorrect13006);
          real _t300B#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3009);
          bool _t300F#1 = GT<real>(_t300B,_t2F49);
          if _t300F then goto ASSIGN3014 else goto ASSIGN3016
        ASSIGN3014:  preds = [COND301D]
          bool _t3012#1 = true;
          goto JOIN3011
        JOIN3011:  preds = [ASSIGN3014,ASSIGN325D]
          bool _t3013#1 = phi(_t3012,_t301B)
          if _t3013 then goto ASSIGN3020 else goto JOIN301E
        ASSIGN3020:  preds = [COND3024]
          string _t301F#1 = "ERG:Error in evaluation on pos 1:";
          string _t3021#1 = "\n";
          Print<[string,tensor[3],string]>(_t301F,startPos2E76,_t3021);
          goto JOIN301E
        JOIN301E:  preds = [MASSIGN3023,COND3024]
          femData:MeshPos intermed3025#4 = fn_2FB2DF4 (cPos2E74,up12FEE);
          tensor[3] altIntermed3027#7 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2E75,altUp12FAC);
          bool _t3029#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed3025);
          femData:MeshPos _t302B#5 = findPos1803 (meshData2E69,altIntermed3027);
          bool _t302D#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t302B);
          bool _t302F#1 = NEQ<bool>(_t3029,_t302D);
          if _t302F then goto ASSIGN3033 else goto JOIN3031
        ASSIGN3033:  preds = [COND3057]
          string _t3032#1 = "ERG:Warning of validity intermed";
          string _t3034#3 = "\n";
          Print<[string,tensor[3],string]>(_t3032,startPos2E76,_t3034);
          string _t3037#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t3037,altIntermed3027,_t3034);
          string _t303C#1 = "Cell change: ";
          femData:Mesh _t3040#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t2ECB);
          int _t3044#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t2ECB);
          femData:MeshCell _t3046#1 = LoadFem<femData:MeshCell>(_t3040,_t3044);
          string _t3048#1 = " to ";
          femData:Mesh _t304C#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t302B);
          int _t3050#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t302B);
          femData:MeshCell _t3052#1 = LoadFem<femData:MeshCell>(_t304C,_t3050);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t303C,_t3046,_t3048,_t3052,_t3034);
          goto JOIN3031
        JOIN3031:  preds = [MASSIGN3263,COND3057]
          bool _t305B#2 = BNot(_t3029);
          if _t305B then goto ASSIGN3060 else goto ASSIGN3265
        ASSIGN3060:  preds = [COND3067]
          bool _t305E#1 = true;
          goto JOIN305D
        JOIN305D:  preds = [ASSIGN3060,ASSIGN3265]
          bool _t305F#1 = phi(_t305E,_t3065)
          if _t305F then goto ASSIGN306A else goto JOIN3068
        ASSIGN306A:  preds = [COND3082]
          string _t3069#1 = "Went off the mesh\?";
          string _t306F#2 = " and ";
          bool _t3077#1 = BNot(_t302D);
          string _t3079#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t3069,_t305B,_t306F,altIntermed3027,_t306F,_t3077,_t3079);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          stabilize
          goto JOIN3068
        JOIN3068:  preds = [*STABILIZE307C,COND3082]
          tensor[3] _t3084#2 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed3025);
          int _t3086#3 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed3025);
          femData:Mesh _t3088#4 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed3025);
          field _t308B#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t3086,_t3088,_t3088);
          tensor[3] _t308D#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t308B,_t3084);
          tensor[3] _t3093#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t308D,altIntermed3027);
          real _t3095#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3093);
          bool _t3099#1 = GT<real>(_t3095,_t2F49);
          if _t3099 then goto ASSIGN309D else goto ASSIGN30BF
        ASSIGN309D:  preds = [COND30C9]
          string _t309C#1 = "ERG:Error in tracing 2: At step:";
          string _t309E#1 = " with particle:";
          string _t30A0#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t309C,step2E73,_t309E,startPos2E76,_t30A0);
          string _t30A3#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t30A3,_t308D,altIntermed3027,_t30A0);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          stabilize
          goto JOIN309B
        JOIN309B:  preds = [*STABILIZE30B8,MASSIGN30C8]
          tensor[3] _t30CA#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F2E63,altIntermed3027);
          tensor[3] _t30CC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2E67,_t30CA);
          real _t30D0#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t30CA);
          tensor[3] altUp230D2#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t30CC,_t30D0);
          if _t3029 then goto ASSIGN326D else goto ASSIGN3109
        ASSIGN326D:  preds = [COND310F]
          femData:MeshCell c30DC#1 = LoadFem<femData:MeshCell>(_t3088,_t3086);
          int _t30E1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c30DC);
          femData:FuncCell _t30E3#2 = LoadFem<femData:FuncCell>(data2E68,_t30E1);
          femData:FemFunc _t30E7#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t30E3);
          femData:Space _t30F2#1 = ExtractFem<femData:Space,femData:FemFunc>(_t30E7);
          int _t30FB#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t30E3);
          field _t30FD#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t30FB,_t30F2,_t30E7);
          tensor[3] val30FF#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t30FD,_t3084);
          real _t3101#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (val30FF);
          tensor[3] _t3103#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (val30FF,_t3101);
          goto JOIN30D7
        JOIN30D7:  preds = [ASSIGN3104,ASSIGN310C]
          tensor[3] _t3106#1 = phi(_t3103,_t310B)
          tensor[3] up23110#4 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2E67,_t3106);
          tensor[3] _t3113#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (altIntermed3027,center2E64);
          tensor[3] _t3115#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M2E65,_t3113);
          tensor[3] _t3119#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2E67,_t3115);
          real _t3122#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3115);
          tensor[3] upCorrect23124#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t3119,_t3122);
          femData:MeshPos cPos3126#1 = fn_2FB2DF4 (cPos2E74,up23110);
          tensor[3] altCPos3128#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2E75,altUp230D2);
          int _t312A#1 = 1;
          int step312C#1 = IAdd(step2E73,_t312A);
          tensor[3] _t312F#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up23110,upCorrect23124);
          real _t3131#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t312F);
          bool _t3135#1 = GT<real>(_t3131,_t2F49);
          if _t3135 then goto ASSIGN313A else goto ASSIGN313C
        ASSIGN313A:  preds = [COND3143]
          bool _t3138#1 = true;
          goto JOIN3137
        JOIN3137:  preds = [ASSIGN313A,ASSIGN3142]
          bool _t3139#1 = phi(_t3138,_t3141)
          if _t3139 then goto ASSIGN3146 else goto JOIN3144
        ASSIGN3146:  preds = [COND3170]
          string _t3145#1 = "ERG:Error in evaluation on pos 2:";
          string _t3147#3 = "\n";
          Print<[string,tensor[3],string]>(_t3145,startPos2E76,_t3147);
          string _t314A#1 = "The errors are:";
          string _t3150#1 = " and ";
          tensor[3] _t3152#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up23110,altUp230D2);
          real _t3154#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3152);
          Print<[string,real,string,real,string]>(_t314A,_t3131,_t3150,_t3154,_t3147);
          string _t3159#1 = "The cells are:";
          femData:MeshCell _t315F#1 = LoadFem<femData:MeshCell>(_t3088,_t3086);
          string _t3161#1 = " vs ";
          femData:Mesh _t3165#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t302B);
          int _t3169#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t302B);
          femData:MeshCell _t316B#1 = LoadFem<femData:MeshCell>(_t3165,_t3169);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t3159,_t315F,_t3161,_t316B,_t3147);
          goto JOIN3144
        JOIN3144:  preds = [MASSIGN3279,COND3170]
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          self.step = step312C;
          self.cPos = cPos3126;
          self.altCPos = altCPos3128;
          active
        ASSIGN313C:  preds = [COND3143]
          tensor[3] _t313B#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up23110,altUp230D2);
          real _t313D#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t313B);
          real _t313F#1 = 0.1e-4;
          bool _t3141#1 = GT<real>(_t313D,_t313F);
          goto JOIN3137
        ASSIGN3109:  preds = [COND310F]
          string _t3108#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3108);
          tensor[3] _t310B#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN30D7
        ASSIGN30BF:  preds = [COND30C9]
          string _t30BE#1 = "fine in cell 2:";
          femData:MeshCell _t30C4#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          string _t30C6#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t30BE,_t30C4,_t30C6);
          goto JOIN309B
        ASSIGN3265:  preds = [COND3067]
          bool _t3065#1 = BNot(_t302D);
          goto JOIN305D
        ASSIGN3016:  preds = [COND301D]
          tensor[3] _t3015#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up12FEE,altUp12FAC);
          real _t3017#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t3015);
          bool _t301B#1 = GT<real>(_t3017,_t2F49);
          goto JOIN3011
        ASSIGN2FE7:  preds = [COND2FED]
          string _t2FE6#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t2FE6);
          tensor[3] _t2FE9#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2FB5
        ASSIGN2F95:  preds = [COND2F9F]
          string _t2F94#1 = "fine in cell 1:";
          femData:MeshCell _t2F9A#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          string _t2F9C#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t2F94,_t2F9A,_t2F9C);
          goto JOIN2F4D
        ASSIGN3244:  preds = [COND2EF1]
          bool _t2EE6#1 = BNot(_t2ECD);
          if _t2EE6 then goto ASSIGN2EEB else goto ASSIGN2EED
        ASSIGN2EEB:  preds = [COND2EEE]
          bool _t2EE9#1 = true;
          goto JOIN2EE8
        JOIN2EE8:  preds = [ASSIGN2EEB,ASSIGN2EED]
          bool _t2EEA#1 = phi(_t2EE9,_t2EEC)
          goto JOIN2EDD
        ASSIGN2EED:  preds = [COND2EEE]
          bool _t2EEC#1 = EQ<int>(step2E73,stepMax2E66);
          goto JOIN2EE8
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY2E36:  preds = []
      tensor[3][] startPoints2E30#1 = globals.startPoints1747;
    FOREACH2E33:  preds = [ASSIGN2E31,NEXT2E35]
      foreach (x2E32 in startPoints2E30) on exit goto RETURN2E37
      new gg(x2E32);
      goto FOREACH2E33
    RETURN2E37:  preds = [FOREACH2E33]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1742 (meshData) = <no-default>
  input 0space0409_intermedateGlobal1743 (space) = <no-default>
  input 0data040B_intermedateGlobal1744 (data) = <no-default>
  input timeSteps1745 (timeSteps) = <default>
  input timeEps1746 (timeEps) = <default>
  input startPoints1747 (startPoints) = <no-default>
  input stepSize1748 (stepSize) = <default>
  input stepMax1749 (stepMax) = <default>
  input M174A (M) = <no-default>
  input center174B (center) = <no-default>
  global femData:FemFunc data175B
## functions
  function femData:MeshPos findPos1803 (femData:Mesh mesh175D#23, tensor[3] pos175E#7) {
    ENTRY1802:  preds = []
      real _t175F#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1765#6 = <tensor[3]>[_t175F,_t175F,_t175F];
      int newtonInt1767#1 = 0;
      int[] yayCells1771#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh175D,pos175E);
    FOREACH1774:  preds = [ASSIGN1772,NEXT17FE]
      foreach (cellItter1773 in yayCells1771) on exit goto ASSIGN1800
      int _t1793#1 = 16;
      int[] _t1795#1 = Range(newtonInt1767,_t1793);
    FOREACH1799:  preds = [ASSIGN317B,NEXT17FD]
      foreach (newtonItter1797 in _t1795) on exit goto NEXT17FE
        tensor[3] xn1798#8 = phi(xn1765,xn17A2)
      tensor[3] xn17A2#2 = λ(T0[3],INT1,FEM(mesh_t)2,FEM(mesh_t)3,T4[3],T5[3],INT6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn1798,cellItter1773,mesh175D,mesh175D,xn1765,pos175E,cellItter1773,mesh175D,mesh175D,xn1798);
      real _t17A4#6 = 0.1e-7;
      real _t17A8#1 = λ(T0[],T1[])<(T0 * T1)> (_t17A4,_t17A4);
      real _t17AA#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],INT9,FEM(mesh_t)10,FEM(mesh_t)11,T12[3],T13[3],INT14,FEM(mesh_t)15,FEM(mesh_t)16,T17[3])<Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i11=0..2)<(((Σ(i19=0..2)(i20=0..2)<((ϵ_{ii19,ii20,ii0} * Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i22}⊛Basis()dx_{i19},T3) * Σ(i23=0..2)<((ϵ_{ii22,ii23,ii11} * Probe(femV(noFunc, 0, 1, 1)_{i23}⊛Basis()dx_{i20},T3)))>(i23=0..2)))>(i22=0..2)))>(i19=0..2)(i20=0..2)) / ( (2 * Σ(i16=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'0'},T3) * Σ(i17=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i17}⊛Basis()dx_{'1'},T3) * Σ(i18=0..2)<((ϵ_{ii16,ii17,ii18} * Probe(femV(noFunc, 0, 1, 1)_{i18}⊛Basis()dx_{'2'},T3)))>(i18=0..2)))>(i17=0..2)))>(i16=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis(),T8)) - (T4_{i11})))>(i11=0..2)))>(i0=0..2)> (cellItter1773,mesh175D,mesh175D,xn1765,pos175E,cellItter1773,mesh175D,mesh175D,xn1798,cellItter1773,mesh175D,mesh175D,xn1765,pos175E,cellItter1773,mesh175D,mesh175D,xn1798);
      bool _t17AC#1 = GTE<real>(_t17A8,_t17AA);
      if _t17AC then goto ASSIGN17B0 else goto JOIN17AE
    ASSIGN17B0:  preds = [COND17FC]
      real _t17AF#4 = 0.1e1;
      real _t17B3#1 = λ(T0[],T1[])<(T0 + T1)> (_t17AF,_t17A4);
      tensor[3] _t17BB#1 = <tensor[3]>[_t17AF,_t17AF,_t17AF];
      real _t17BD#1 = λ(T0[3],T1[3],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],INT7,FEM(mesh_t)8,FEM(mesh_t)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t17BB,xn1798,cellItter1773,mesh175D,mesh175D,xn1765,pos175E,cellItter1773,mesh175D,mesh175D,xn1798);
      bool _t17BF#1 = GT<real>(_t17B3,_t17BD);
      tensor[3] _t17C7#1 = <tensor[3]>[_t17A4,_t17A4,_t17A4];
      tensor[3] _t17C9#3 = λ(T0[3],T1[3],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],INT7,FEM(mesh_t)8,FEM(mesh_t)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t17C7,xn1798,cellItter1773,mesh175D,mesh175D,xn1765,pos175E,cellItter1773,mesh175D,mesh175D,xn1798);
      real _t17CB#1 = TensorIndex<tensor[3],[0]>(_t17C9);
      real _t17CD#3 = -0.e0;
      bool _t17CF#1 = GT<real>(_t17CB,_t17CD);
      real _t17DB#1 = TensorIndex<tensor[3],[1]>(_t17C9);
      bool _t17DF#1 = GT<real>(_t17DB,_t17CD);
      real _t17EB#1 = TensorIndex<tensor[3],[2]>(_t17C9);
      bool _t17EF#1 = GT<real>(_t17EB,_t17CD);
      bool _t17F1#1 = BAnd(_t17DF,_t17EF);
      bool _t17F3#1 = BAnd(_t17CF,_t17F1);
      bool _t17F5#1 = BAnd(_t17BF,_t17F3);
      if _t17F5 then goto ASSIGN3185 else goto JOIN17F7
    ASSIGN3185:  preds = [COND17FB]
      femData:MeshPos _t17F8#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh175D,cellItter1773,xn17A2,pos175E);
      return _t17F8
      goto JOIN17F7
    JOIN17F7:  preds = [*RETURN(_t17F8)17FA,COND17FB]
      goto JOIN17AE
    JOIN17AE:  preds = [JOIN17F7,COND17FC]
      goto FOREACH1799
    NEXT17FE:  preds = [FOREACH1799]
      goto FOREACH1774
    ASSIGN1800:  preds = [FOREACH1774]
      femData:MeshPos _t17FF#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh175D);
      return _t17FF
}
  function tensor[3] worldPos1814 (femData:MeshPos pos1804#3) {
    ENTRY1813:  preds = []
      tensor[3] _t1805#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(pos1804);
      int _t1807#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos1804);
      femData:Mesh _t1809#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos1804);
      tensor[3] _t180E#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{3} (_t1807,_t1809,_t1809,_t1805);
      return _t180E
}
  function femData:MeshPos $exitPos23B8 (femData:Mesh mesh1815#3, int cellId1816#1, tensor[3] refPos1817#2, tensor[3] dPos1818#2, real[2] time1819#3) {
    ENTRY23B7:  preds = []
      int _t181A#1 = -1;
      real _t181C#1 = TensorIndex<real[2],[1]>(time1819);
      int _t181E#6 = FloorToInt(_t181C);
      int[2] _t1820#2 = nextCell41821 (_t181E,cellId1816,mesh1815);
      int _t1823#1 = 0;
      int _t1825#2 = Subscript<int[2]>(_t1820,_t1823);
      bool _t1827#1 = NEQ<int>(_t181A,_t1825);
      if _t1827 then goto ASSIGN182B else goto ASSIGN23AD
    ASSIGN182B:  preds = [COND23B5]
      string _t182A#1 = "face ";
      string _t1830#1 = " to ";
      int _t1838#1 = 1;
      int _t183A#6 = Subscript<int[2]>(_t1820,_t1838);
      string _t183C#2 = "\n";
      string _t183E#1 = "got: ";
      real _t1840#15 = 0.1e1;
      real _t1842#35 = 0.e0;
      tensor[4] _t1848#7 = <tensor[4]>[_t1840,_t1842,_t1842,_t1842];
      tensor[4] _t1852#6 = <tensor[4]>[_t1842,_t1840,_t1842,_t1842];
      tensor[4] _t185C#7 = <tensor[4]>[_t1842,_t1842,_t1840,_t1842];
      real _t185E#1 = 0.971445146547e-16;
      tensor[4] _t1866#4 = <tensor[4]>[_t185E,_t1842,_t1842,_t1840];
      tensor[4,4] _t1868#4 = <tensor[4,4]>[_t1848,_t1852,_t185C,_t1866];
      real _t186A#10 = 0.57735026919e0;
      real _t1870#7 = -0.57735026919e0;
      tensor[4] _t1872#2 = <tensor[4]>[_t186A,_t186A,_t186A,_t1870];
      real _t1874#4 = -0.333333333333e0;
      real _t1876#2 = 0.666666666667e0;
      real _t187A#2 = 0.333333333333e0;
      tensor[4] _t187C#3 = <tensor[4]>[_t1874,_t1876,_t1874,_t187A];
      tensor[4] _t1886#3 = <tensor[4]>[_t1874,_t1874,_t1876,_t187A];
      tensor[4,4] _t1892#4 = <tensor[4,4]>[_t1872,_t187C,_t1886,_t1866];
      tensor[4] _t18A6#1 = <tensor[4]>[_t1870,_t1870,_t1870,_t186A];
      tensor[4,4] _t18BC#4 = <tensor[4,4]>[_t187C,_t18A6,_t1886,_t1866];
      tensor[4,4] _t18E6#4 = <tensor[4,4]>[_t187C,_t1886,_t1872,_t1866];
      tensor[4,4][4] _t18E8#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      real _t18EC#9 = -0.1e1;
      tensor[4] _t18F2#1 = <tensor[4]>[_t186A,_t18EC,_t18EC,_t1840];
      tensor[4] _t18FC#1 = <tensor[4]>[_t186A,_t1840,_t1842,_t1842];
      tensor[4] _t1906#1 = <tensor[4]>[_t186A,_t1842,_t1840,_t1842];
      tensor[4] _t1910#10 = <tensor[4]>[_t1842,_t1842,_t1842,_t1840];
      tensor[4,4] _t1912#4 = <tensor[4,4]>[_t18F2,_t18FC,_t1906,_t1910];
      tensor[4,4] _t193C#12 = <tensor[4,4]>[_t1848,_t1852,_t185C,_t1910];
      tensor[4] _t1950#1 = <tensor[4]>[_t18EC,_t1842,_t1842,_t1842];
      tensor[4,4] _t1966#4 = <tensor[4,4]>[_t1852,_t1950,_t185C,_t1910];
      tensor[4,4] _t1990#4 = <tensor[4,4]>[_t1852,_t185C,_t1848,_t1910];
      tensor[4,4][4] _t1992#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4] _t199C#1 = <tensor[4]>[_t18EC,_t1870,_t18EC,_t1840];
      tensor[4] _t19A6#1 = <tensor[4]>[_t1840,_t1870,_t1842,_t1842];
      tensor[4] _t19B0#1 = <tensor[4]>[_t1842,_t1870,_t1840,_t1842];
      tensor[4,4] _t19BC#4 = <tensor[4,4]>[_t199C,_t19A6,_t19B0,_t1910];
      tensor[4] _t19C6#2 = <tensor[4]>[_t1842,_t18EC,_t1842,_t1842];
      tensor[4,4] _t19E6#4 = <tensor[4,4]>[_t19C6,_t1848,_t185C,_t1910];
      tensor[4,4] _t1A3A#4 = <tensor[4,4]>[_t1848,_t185C,_t19C6,_t1910];
      tensor[4,4][4] _t1A3C#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4] _t1A46#1 = <tensor[4]>[_t18EC,_t18EC,_t186A,_t1840];
      tensor[4] _t1A50#1 = <tensor[4]>[_t1840,_t1842,_t186A,_t1842];
      tensor[4] _t1A5A#1 = <tensor[4]>[_t1842,_t1840,_t186A,_t1842];
      tensor[4,4] _t1A66#4 = <tensor[4,4]>[_t1A46,_t1A50,_t1A5A,_t1910];
      tensor[4,4] _t1A90#4 = <tensor[4,4]>[_t185C,_t1848,_t1852,_t1910];
      tensor[4] _t1AA4#1 = <tensor[4]>[_t1842,_t1842,_t18EC,_t1842];
      tensor[4,4] _t1ABA#4 = <tensor[4,4]>[_t1848,_t1AA4,_t1852,_t1910];
      tensor[4,4][4] _t1AE6#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t1AE8#1 = <tensor[4,4][4][4]>{_t18E8,_t1992,_t1A3C,_t1AE6};
      tensor[4,4][4] _t1AEE#1 = Subscript<tensor[4,4][4][4]>(_t1AE8,_t181E);
      tensor[4,4] _t1AFA#1 = Subscript<tensor[4,4][4]>(_t1AEE,_t183A);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t182A,_t181E,_t1830,_t183A,_t183C,_t183E,_t1AFA,_t183C);
      tensor[4,4][4] _t1BB1#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      tensor[4,4][4] _t1C5B#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4,4][4] _t1D05#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4,4][4] _t1DAF#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t1DB1#1 = <tensor[4,4][4][4]>{_t1BB1,_t1C5B,_t1D05,_t1DAF};
      tensor[4,4][4] _t1DB7#1 = Subscript<tensor[4,4][4][4]>(_t1DB1,_t181E);
      tensor[4,4] _t1DC3#1 = Subscript<tensor[4,4][4]>(_t1DB7,_t183A);
      real _t1DC5#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t1DC9#3 = λ(T0[],T1[3],T2[3])<((T0 * T1_{i0}) + T2_{i0})>_{3} (_t1DC5,dPos1818,refPos1817);
      real _t1DCB#1 = TensorIndex<tensor[3],[0]>(_t1DC9);
      real _t1DD3#1 = TensorIndex<tensor[3],[1]>(_t1DC9);
      real _t1DDB#1 = TensorIndex<tensor[3],[2]>(_t1DC9);
      tensor[4] _t1DDF#3 = <tensor[4]>[_t1DCB,_t1DD3,_t1DDB,_t1840];
      tensor[4] _t1DE1#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t1DC3,_t1DDF);
      real _t1DE3#1 = TensorIndex<tensor[4],[0]>(_t1DE1);
      tensor[4,4][4] _t1E8D#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      tensor[4,4][4] _t1F37#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4,4][4] _t1FE1#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4,4][4] _t208B#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t208D#1 = <tensor[4,4][4][4]>{_t1E8D,_t1F37,_t1FE1,_t208B};
      tensor[4,4][4] _t2093#1 = Subscript<tensor[4,4][4][4]>(_t208D,_t181E);
      tensor[4,4] _t209F#1 = Subscript<tensor[4,4][4]>(_t2093,_t183A);
      tensor[4] _t20BD#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t209F,_t1DDF);
      real _t20BF#1 = TensorIndex<tensor[4],[1]>(_t20BD);
      tensor[4,4][4] _t2169#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      tensor[4,4][4] _t2213#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4,4][4] _t22BD#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4,4][4] _t2367#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t2369#1 = <tensor[4,4][4][4]>{_t2169,_t2213,_t22BD,_t2367};
      tensor[4,4][4] _t236F#1 = Subscript<tensor[4,4][4][4]>(_t2369,_t181E);
      tensor[4,4] _t237B#1 = Subscript<tensor[4,4][4]>(_t236F,_t183A);
      tensor[4] _t2399#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t237B,_t1DDF);
      real _t239B#1 = TensorIndex<tensor[4],[2]>(_t2399);
      tensor[3] _t239D#1 = <tensor[3]>[_t1DE3,_t20BF,_t239B];
      femData:MeshPos _t23A9#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(mesh1815,_t1825,_t239D,_t183A);
      return _t23A9
      goto JOIN1829
    JOIN1829:  preds = [*RETURN(_t23A9)23AB,*RETURN(_t23B2)23B4]
      unreachable
    ASSIGN23AD:  preds = [COND23B5]
      real _t23AC#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t23B0#1 = λ(T0[],T1[3],T2[3])<((T0 * T1_{i0}) + T2_{i0})>_{3} (_t23AC,dPos1818,refPos1817);
      femData:MeshPos _t23B2#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(mesh1815,_t23B0);
      return _t23B2
      goto JOIN1829
}
  function int[2] nextCell41821 (int faceIdx23B9#2, int cell23BA#1, femData:Mesh mesh23BB#1) {
    ENTRY23D7:  preds = []
      int _t23BC#3 = -1;
      bool _t23BE#1 = EQ<int>(faceIdx23B9,_t23BC);
      if _t23BE then goto ASSIGN31C6 else goto ASSIGN23C9
    ASSIGN31C6:  preds = [COND23D5]
      int[2] _t23C5#1 = <int[2]>{_t23BC,_t23BC};
      return _t23C5
      goto JOIN23C0
    JOIN23C0:  preds = [*RETURN(_t23C5)23C7,*RETURN(_t23D2)23D4]
      unreachable
    ASSIGN23C9:  preds = [COND23D5]
      int _t23C8#1 = 8;
      int _t23CA#1 = IMul(cell23BA,_t23C8);
      int _t23CC#1 = 2;
      int _t23CE#1 = IMul(faceIdx23B9,_t23CC);
      int _t23D0#1 = IAdd(_t23CA,_t23CE);
      int[2] _t23D2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh23BB,_t23D0);
      return _t23D2
      goto JOIN23C0
}
  function tensor[2] _exit2D93 (tensor[3] refPos23D8#50, tensor[3] dPos23D9#50, int i23DA#9) {
    ENTRY2D92:  preds = []
      real time23DB#3 = +inf;
      int face23DD#3 = -1;
      real faceTime23DF#4 = -inf;
      string _t23E1#4 = "\ntest :";
      real _t23E3#11 = 0.57735026919e0;
      tensor[3] _t23EB#15 = <tensor[3]>[_t23E3,_t23E3,_t23E3];
      real _t23EF#1 = λ(T0[],T1[3],T2[3])<(T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))> (_t23E3,_t23EB,refPos23D8);
      real _t23F9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t23EB,dPos23D9);
      real _t23FB#7 = λ(T0[],T1[3],T2[3],T3[3],T4[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( Σ(i0=0..2)<((T1_{i0} * T4_{i0}))>(i0=0..2))> (_t23E3,_t23EB,refPos23D8,_t23EB,dPos23D9);
      string _t23FD#4 = " test2: ";
      string _t2409#4 = " insideTest: ";
      real _t240B#4 = 0.1e1;
      real _t240D#8 = 0.1e-7;
      real _t240F#5 = λ(T0[],T1[])<(T0 + T1)> (_t240B,_t240D);
      tensor[3] _t2417#5 = <tensor[3]>[_t240B,_t240B,_t240B];
      tensor[3] _t2435#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[3])<(T0_{i0} + (((T1) - (Σ(i2=0..2)<((T2_{i2} * T0_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T2_{i2} * T5_{i2}))>(i2=0..2)) * T5_{i0}))>_{3} (refPos23D8,_t23E3,_t23EB,refPos23D8,_t23EB,dPos23D9,dPos23D9);
      real _t2437#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (((T2) - (Σ(i2=0..2)<((T3_{i2} * T1_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T3_{i2} * T6_{i2}))>(i2=0..2)) * T6_{i0}))))>(i0=0..2)> (_t2417,refPos23D8,_t23E3,_t23EB,refPos23D8,_t23EB,dPos23D9,dPos23D9);
      bool _t2439#1 = GT<real>(_t240F,_t2437);
      tensor[3] _t2441#5 = <tensor[3]>[_t240D,_t240D,_t240D];
      tensor[3] _t2461#3 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<(T0_{i0} + T1_{i0} + (((T2) - (Σ(i3=0..2)<((T3_{i3} * T1_{i3}))>(i3=0..2))) / ( Σ(i3=0..2)<((T3_{i3} * T6_{i3}))>(i3=0..2)) * T6_{i0}))>_{3} (_t2441,refPos23D8,_t23E3,_t23EB,refPos23D8,_t23EB,dPos23D9,dPos23D9);
      real _t2463#1 = TensorIndex<tensor[3],[0]>(_t2461);
      real _t2465#15 = -0.e0;
      bool _t2467#1 = GT<real>(_t2463,_t2465);
      real _t2491#1 = TensorIndex<tensor[3],[1]>(_t2461);
      bool _t2495#1 = GT<real>(_t2491,_t2465);
      real _t24BF#1 = TensorIndex<tensor[3],[2]>(_t2461);
      bool _t24C3#1 = GT<real>(_t24BF,_t2465);
      bool _t24C5#1 = BAnd(_t2495,_t24C3);
      bool _t24C7#1 = BAnd(_t2467,_t24C5);
      bool _t24C9#1 = BAnd(_t2439,_t24C7);
      string _t24CB#4 = " dist: ";
      real _t24DB#1 = λ(T0[],T1[3],T2[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2)))> (_t23E3,_t23EB,refPos23D8);
      string _t24DD#4 = "signed dist: ";
      string _t24ED#4 = " face: ";
      int _t24EF#3 = 0;
      string _t24F1#4 = " place: ";
      string _t2511#4 = " error: ";
      real _t253F#1 = λ(T0[],T1[3],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * (T2_{i0} + (((T0) - (Σ(i2=0..2)<((T1_{i2} * T2_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T1_{i2} * T7_{i2}))>(i2=0..2)) * T7_{i0}))))>(i0=0..2)))> (_t23E3,_t23EB,refPos23D8,_t23E3,_t23EB,refPos23D8,_t23EB,dPos23D9,dPos23D9);
      string _t2541#4 = " offset :";
      string _t2543#4 = " dp: ";
      string _t2545#4 = " otherPossibleTime: ";
      string _t2547#15 = "\n";
      string _t2549#4 = "\n original face: ";
      string _t254B#4 = " ";
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t23FB,_t23FD,_t23F9,_t2409,_t24C9,_t24CB,_t24DB,_t24DD,_t23EF,_t24ED,_t24EF,_t24F1,_t2435,_t2511,_t253F,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime23DF,_t2547,_t2549,i23DA,_t254B);
      real _t2568#4 = -0.1e-7;
      bool _t256A#1 = GTE<real>(_t23FB,_t2568);
      bool _t2586#2 = GT<real>(time23DB,_t23FB);
      real _t2592#1 = λ(T0[3],T1[3])<Abs(Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2))> (_t23EB,dPos23D9);
      bool _t2596#1 = GTE<real>(_t2592,_t240D);
      bool _t2598#1 = BAnd(_t2586,_t2596);
      bool _t259A#1 = BAnd(_t256A,_t2598);
      if _t259A then goto ASSIGN31D9 else goto JOIN259C
    ASSIGN31D9:  preds = [COND261F]
      bool _t259F#1 = NEQ<int>(i23DA,_t24EF);
      if _t259F then goto ASSIGN25A3 else goto ASSIGN2617
    ASSIGN25A3:  preds = [COND261B]
      string _t25A2#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t25A2,_t23FB,_t2586,_t2547);
      goto JOIN25A1
    JOIN25A1:  preds = [MASSIGN31DB,MASSIGN31DA]
      real faceTime2614#1 = phi(faceTime23DF,_t23FB)
      int face25F9#1 = phi(_t24EF,face23DD)
      real time25F6#1 = phi(_t23FB,time23DB)
      goto JOIN259C
    JOIN259C:  preds = [JOIN25A1,COND261F]
      real faceTime261E#3 = phi(faceTime2614,faceTime23DF)
      int face261D#2 = phi(face25F9,face23DD)
      real time261C#3 = phi(time25F6,time23DB)
      real _t2622#32 = 0.e0;
      real _t2624#5 = -0.1e1;
      tensor[3] _t262A#15 = <tensor[3]>[_t2624,_t2622,_t2622];
      real _t262E#1 = λ(T0[],T1[3],T2[3])<(T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))> (_t2622,_t262A,refPos23D8);
      real _t2638#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t262A,dPos23D9);
      real _t263A#7 = λ(T0[],T1[3],T2[3],T3[3],T4[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( Σ(i0=0..2)<((T1_{i0} * T4_{i0}))>(i0=0..2))> (_t2622,_t262A,refPos23D8,_t262A,dPos23D9);
      tensor[3] _t2674#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[3])<(T0_{i0} + (((T1) - (Σ(i2=0..2)<((T2_{i2} * T0_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T2_{i2} * T5_{i2}))>(i2=0..2)) * T5_{i0}))>_{3} (refPos23D8,_t2622,_t262A,refPos23D8,_t262A,dPos23D9,dPos23D9);
      real _t2676#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (((T2) - (Σ(i2=0..2)<((T3_{i2} * T1_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T3_{i2} * T6_{i2}))>(i2=0..2)) * T6_{i0}))))>(i0=0..2)> (_t2417,refPos23D8,_t2622,_t262A,refPos23D8,_t262A,dPos23D9,dPos23D9);
      bool _t2678#1 = GT<real>(_t240F,_t2676);
      tensor[3] _t26A0#3 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<(T0_{i0} + T1_{i0} + (((T2) - (Σ(i3=0..2)<((T3_{i3} * T1_{i3}))>(i3=0..2))) / ( Σ(i3=0..2)<((T3_{i3} * T6_{i3}))>(i3=0..2)) * T6_{i0}))>_{3} (_t2441,refPos23D8,_t2622,_t262A,refPos23D8,_t262A,dPos23D9,dPos23D9);
      real _t26A2#1 = TensorIndex<tensor[3],[0]>(_t26A0);
      bool _t26A6#1 = GT<real>(_t26A2,_t2465);
      real _t26D0#1 = TensorIndex<tensor[3],[1]>(_t26A0);
      bool _t26D4#1 = GT<real>(_t26D0,_t2465);
      real _t26FE#1 = TensorIndex<tensor[3],[2]>(_t26A0);
      bool _t2702#1 = GT<real>(_t26FE,_t2465);
      bool _t2704#1 = BAnd(_t26D4,_t2702);
      bool _t2706#1 = BAnd(_t26A6,_t2704);
      bool _t2708#1 = BAnd(_t2678,_t2706);
      real _t271A#1 = λ(T0[],T1[3],T2[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2)))> (_t2622,_t262A,refPos23D8);
      int _t272E#3 = 1;
      real _t277E#1 = λ(T0[],T1[3],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * (T2_{i0} + (((T0) - (Σ(i2=0..2)<((T1_{i2} * T2_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T1_{i2} * T7_{i2}))>(i2=0..2)) * T7_{i0}))))>(i0=0..2)))> (_t2622,_t262A,refPos23D8,_t2622,_t262A,refPos23D8,_t262A,dPos23D9,dPos23D9);
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t263A,_t23FD,_t2638,_t2409,_t2708,_t24CB,_t271A,_t24DD,_t262E,_t24ED,_t272E,_t24F1,_t2674,_t2511,_t277E,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime261E,_t2547,_t2549,i23DA,_t254B);
      bool _t27A9#1 = GTE<real>(_t263A,_t2568);
      bool _t27C5#2 = GT<real>(time261C,_t263A);
      real _t27D1#1 = λ(T0[3],T1[3])<Abs(Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2))> (_t262A,dPos23D9);
      bool _t27D5#1 = GTE<real>(_t27D1,_t240D);
      bool _t27D7#1 = BAnd(_t27C5,_t27D5);
      bool _t27D9#1 = BAnd(_t27A9,_t27D7);
      if _t27D9 then goto ASSIGN31EF else goto JOIN27DB
    ASSIGN31EF:  preds = [COND285E]
      bool _t27DE#1 = NEQ<int>(i23DA,_t272E);
      if _t27DE then goto ASSIGN27E2 else goto ASSIGN2856
    ASSIGN27E2:  preds = [COND285A]
      string _t27E1#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t27E1,_t263A,_t27C5,_t2547);
      goto JOIN27E0
    JOIN27E0:  preds = [MASSIGN31F1,MASSIGN31F0]
      real faceTime2853#1 = phi(faceTime261E,_t263A)
      int face2838#1 = phi(_t272E,face261D)
      real time2835#1 = phi(_t263A,time261C)
      goto JOIN27DB
    JOIN27DB:  preds = [JOIN27E0,COND285E]
      real faceTime285D#3 = phi(faceTime2853,faceTime261E)
      int face285C#2 = phi(face2838,face261D)
      real time285B#3 = phi(time2835,time261C)
      tensor[3] _t2869#15 = <tensor[3]>[_t2622,_t2624,_t2622];
      real _t286D#1 = λ(T0[],T1[3],T2[3])<(T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))> (_t2622,_t2869,refPos23D8);
      real _t2877#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2869,dPos23D9);
      real _t2879#7 = λ(T0[],T1[3],T2[3],T3[3],T4[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( Σ(i0=0..2)<((T1_{i0} * T4_{i0}))>(i0=0..2))> (_t2622,_t2869,refPos23D8,_t2869,dPos23D9);
      tensor[3] _t28B3#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[3])<(T0_{i0} + (((T1) - (Σ(i2=0..2)<((T2_{i2} * T0_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T2_{i2} * T5_{i2}))>(i2=0..2)) * T5_{i0}))>_{3} (refPos23D8,_t2622,_t2869,refPos23D8,_t2869,dPos23D9,dPos23D9);
      real _t28B5#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (((T2) - (Σ(i2=0..2)<((T3_{i2} * T1_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T3_{i2} * T6_{i2}))>(i2=0..2)) * T6_{i0}))))>(i0=0..2)> (_t2417,refPos23D8,_t2622,_t2869,refPos23D8,_t2869,dPos23D9,dPos23D9);
      bool _t28B7#1 = GT<real>(_t240F,_t28B5);
      tensor[3] _t28DF#3 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<(T0_{i0} + T1_{i0} + (((T2) - (Σ(i3=0..2)<((T3_{i3} * T1_{i3}))>(i3=0..2))) / ( Σ(i3=0..2)<((T3_{i3} * T6_{i3}))>(i3=0..2)) * T6_{i0}))>_{3} (_t2441,refPos23D8,_t2622,_t2869,refPos23D8,_t2869,dPos23D9,dPos23D9);
      real _t28E1#1 = TensorIndex<tensor[3],[0]>(_t28DF);
      bool _t28E5#1 = GT<real>(_t28E1,_t2465);
      real _t290F#1 = TensorIndex<tensor[3],[1]>(_t28DF);
      bool _t2913#1 = GT<real>(_t290F,_t2465);
      real _t293D#1 = TensorIndex<tensor[3],[2]>(_t28DF);
      bool _t2941#1 = GT<real>(_t293D,_t2465);
      bool _t2943#1 = BAnd(_t2913,_t2941);
      bool _t2945#1 = BAnd(_t28E5,_t2943);
      bool _t2947#1 = BAnd(_t28B7,_t2945);
      real _t2959#1 = λ(T0[],T1[3],T2[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2)))> (_t2622,_t2869,refPos23D8);
      int _t296D#3 = 2;
      real _t29BD#1 = λ(T0[],T1[3],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * (T2_{i0} + (((T0) - (Σ(i2=0..2)<((T1_{i2} * T2_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T1_{i2} * T7_{i2}))>(i2=0..2)) * T7_{i0}))))>(i0=0..2)))> (_t2622,_t2869,refPos23D8,_t2622,_t2869,refPos23D8,_t2869,dPos23D9,dPos23D9);
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t2879,_t23FD,_t2877,_t2409,_t2947,_t24CB,_t2959,_t24DD,_t286D,_t24ED,_t296D,_t24F1,_t28B3,_t2511,_t29BD,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime285D,_t2547,_t2549,i23DA,_t254B);
      bool _t29E8#1 = GTE<real>(_t2879,_t2568);
      bool _t2A04#2 = GT<real>(time285B,_t2879);
      real _t2A10#1 = λ(T0[3],T1[3])<Abs(Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2))> (_t2869,dPos23D9);
      bool _t2A14#1 = GTE<real>(_t2A10,_t240D);
      bool _t2A16#1 = BAnd(_t2A04,_t2A14);
      bool _t2A18#1 = BAnd(_t29E8,_t2A16);
      if _t2A18 then goto ASSIGN3206 else goto JOIN2A1A
    ASSIGN3206:  preds = [COND2A9D]
      bool _t2A1D#1 = NEQ<int>(i23DA,_t296D);
      if _t2A1D then goto ASSIGN2A21 else goto ASSIGN2A95
    ASSIGN2A21:  preds = [COND2A99]
      string _t2A20#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t2A20,_t2879,_t2A04,_t2547);
      goto JOIN2A1F
    JOIN2A1F:  preds = [MASSIGN3208,MASSIGN3207]
      real faceTime2A92#1 = phi(faceTime285D,_t2879)
      int face2A77#1 = phi(_t296D,face285C)
      real time2A74#1 = phi(_t2879,time285B)
      goto JOIN2A1A
    JOIN2A1A:  preds = [JOIN2A1F,COND2A9D]
      real faceTime2A9C#3 = phi(faceTime2A92,faceTime285D)
      int face2A9B#2 = phi(face2A77,face285C)
      real time2A9A#3 = phi(time2A74,time285B)
      tensor[3] _t2AA8#15 = <tensor[3]>[_t2622,_t2622,_t2624];
      real _t2AAC#1 = λ(T0[],T1[3],T2[3])<(T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))> (_t2622,_t2AA8,refPos23D8);
      real _t2AB6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2AA8,dPos23D9);
      real _t2AB8#7 = λ(T0[],T1[3],T2[3],T3[3],T4[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( Σ(i0=0..2)<((T1_{i0} * T4_{i0}))>(i0=0..2))> (_t2622,_t2AA8,refPos23D8,_t2AA8,dPos23D9);
      tensor[3] _t2AF2#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[3])<(T0_{i0} + (((T1) - (Σ(i2=0..2)<((T2_{i2} * T0_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T2_{i2} * T5_{i2}))>(i2=0..2)) * T5_{i0}))>_{3} (refPos23D8,_t2622,_t2AA8,refPos23D8,_t2AA8,dPos23D9,dPos23D9);
      real _t2AF4#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (((T2) - (Σ(i2=0..2)<((T3_{i2} * T1_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T3_{i2} * T6_{i2}))>(i2=0..2)) * T6_{i0}))))>(i0=0..2)> (_t2417,refPos23D8,_t2622,_t2AA8,refPos23D8,_t2AA8,dPos23D9,dPos23D9);
      bool _t2AF6#1 = GT<real>(_t240F,_t2AF4);
      tensor[3] _t2B1E#3 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<(T0_{i0} + T1_{i0} + (((T2) - (Σ(i3=0..2)<((T3_{i3} * T1_{i3}))>(i3=0..2))) / ( Σ(i3=0..2)<((T3_{i3} * T6_{i3}))>(i3=0..2)) * T6_{i0}))>_{3} (_t2441,refPos23D8,_t2622,_t2AA8,refPos23D8,_t2AA8,dPos23D9,dPos23D9);
      real _t2B20#1 = TensorIndex<tensor[3],[0]>(_t2B1E);
      bool _t2B24#1 = GT<real>(_t2B20,_t2465);
      real _t2B4E#1 = TensorIndex<tensor[3],[1]>(_t2B1E);
      bool _t2B52#1 = GT<real>(_t2B4E,_t2465);
      real _t2B7C#1 = TensorIndex<tensor[3],[2]>(_t2B1E);
      bool _t2B80#1 = GT<real>(_t2B7C,_t2465);
      bool _t2B82#1 = BAnd(_t2B52,_t2B80);
      bool _t2B84#1 = BAnd(_t2B24,_t2B82);
      bool _t2B86#1 = BAnd(_t2AF6,_t2B84);
      real _t2B98#1 = λ(T0[],T1[3],T2[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2)))> (_t2622,_t2AA8,refPos23D8);
      int _t2BAC#3 = 3;
      real _t2BFC#1 = λ(T0[],T1[3],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * (T2_{i0} + (((T0) - (Σ(i2=0..2)<((T1_{i2} * T2_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T1_{i2} * T7_{i2}))>(i2=0..2)) * T7_{i0}))))>(i0=0..2)))> (_t2622,_t2AA8,refPos23D8,_t2622,_t2AA8,refPos23D8,_t2AA8,dPos23D9,dPos23D9);
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t2AB8,_t23FD,_t2AB6,_t2409,_t2B86,_t24CB,_t2B98,_t24DD,_t2AAC,_t24ED,_t2BAC,_t24F1,_t2AF2,_t2511,_t2BFC,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime2A9C,_t2547,_t2549,i23DA,_t254B);
      bool _t2C27#1 = GTE<real>(_t2AB8,_t2568);
      bool _t2C43#2 = GT<real>(time2A9A,_t2AB8);
      real _t2C4F#1 = λ(T0[3],T1[3])<Abs(Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2))> (_t2AA8,dPos23D9);
      bool _t2C53#1 = GTE<real>(_t2C4F,_t240D);
      bool _t2C55#1 = BAnd(_t2C43,_t2C53);
      bool _t2C57#1 = BAnd(_t2C27,_t2C55);
      if _t2C57 then goto ASSIGN321D else goto JOIN2C59
    ASSIGN321D:  preds = [COND2CDC]
      bool _t2C5C#1 = NEQ<int>(i23DA,_t2BAC);
      if _t2C5C then goto ASSIGN2C60 else goto ASSIGN2CD4
    ASSIGN2C60:  preds = [COND2CD8]
      string _t2C5F#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t2C5F,_t2AB8,_t2C43,_t2547);
      goto JOIN2C5E
    JOIN2C5E:  preds = [MASSIGN321F,MASSIGN321E]
      real faceTime2CD1#1 = phi(faceTime2A9C,_t2AB8)
      int face2CB6#1 = phi(_t2BAC,face2A9B)
      real time2CB3#1 = phi(_t2AB8,time2A9A)
      goto JOIN2C59
    JOIN2C59:  preds = [JOIN2C5E,COND2CDC]
      real faceTime2CDB#2 = phi(faceTime2CD1,faceTime2A9C)
      int face2CDA#2 = phi(face2CB6,face2A9B)
      real time2CD9#1 = phi(time2CB3,time2A9A)
      bool _t2CDF#1 = NEQ<int>(face2CDA,face23DD);
      real _t2CF1#3 = Max<real>(time2CD9,_t2622);
      real _t2CF7#1 = λ(T0[3],T1[3],T2[],T3[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (T2 * T3_{i0}))))>(i0=0..2)> (_t2417,refPos23D8,_t2CF1,dPos23D9);
      bool _t2CF9#1 = GT<real>(_t240F,_t2CF7);
      tensor[3] _t2D0B#3 = λ(T0[3],T1[3],T2[],T3[3])<(T0_{i0} + T1_{i0} + (T2 * T3_{i0}))>_{3} (_t2441,refPos23D8,_t2CF1,dPos23D9);
      real _t2D0D#1 = TensorIndex<tensor[3],[0]>(_t2D0B);
      bool _t2D11#1 = GT<real>(_t2D0D,_t2465);
      real _t2D25#1 = TensorIndex<tensor[3],[1]>(_t2D0B);
      bool _t2D29#1 = GT<real>(_t2D25,_t2465);
      real _t2D3D#1 = TensorIndex<tensor[3],[2]>(_t2D0B);
      bool _t2D41#1 = GT<real>(_t2D3D,_t2465);
      bool _t2D43#1 = BAnd(_t2D29,_t2D41);
      bool _t2D45#1 = BAnd(_t2D11,_t2D43);
      bool _t2D47#1 = BAnd(_t2CF9,_t2D45);
      bool _t2D49#1 = BAnd(_t2CDF,_t2D47);
      if _t2D49 then goto ASSIGN2D4D else goto ASSIGN322A
    ASSIGN2D4D:  preds = [COND2D90]
      string _t2D4C#1 = "\nReturning via standard : ";
      real _t2D52#1 = IntToReal(face2CDA);
      tensor[2] _t2D54#2 = <tensor[2]>[_t2CF1,_t2D52];
      Print<[string,tensor[2],string]>(_t2D4C,_t2D54,_t2547);
      return _t2D54
      goto JOIN2D4B
    JOIN2D4B:  preds = [*RETURN(_t2D54)3233,*JOIN2D66]
      unreachable
    ASSIGN322A:  preds = [COND2D90]
      bool _t2D64#1 = EQ<real>(faceTime23DF,faceTime2CDB);
      if _t2D64 then goto ASSIGN2D68 else goto ASSIGN2D7A
    ASSIGN2D68:  preds = [COND2D8F]
      string _t2D67#1 = "\nReturning via fail : ";
      tensor[2] _t2D6D#2 = <tensor[2]>[_t2624,_t2624];
      Print<[string,tensor[2],string]>(_t2D67,_t2D6D,_t2547);
      return _t2D6D
      goto JOIN2D66
    JOIN2D66:  preds = [*RETURN(_t2D6D)3230,*RETURN(_t2D81)322D]
      goto JOIN2D4B
    ASSIGN2D7A:  preds = [COND2D8F]
      string _t2D79#1 = "\nReturning via backup : ";
      real _t2D7D#1 = Max<real>(faceTime2CDB,_t2622);
      real _t2D7F#1 = IntToReal(i23DA);
      tensor[2] _t2D81#2 = <tensor[2]>[_t2D7D,_t2D7F];
      Print<[string,tensor[2],string]>(_t2D79,_t2D81,_t2547);
      return _t2D81
      goto JOIN2D66
    ASSIGN2CD4:  preds = [COND2CD8]
      string _t2CD3#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2CD3,_t2AB8,_t2547);
      goto JOIN2C5E
    ASSIGN2A95:  preds = [COND2A99]
      string _t2A94#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2A94,_t2879,_t2547);
      goto JOIN2A1F
    ASSIGN2856:  preds = [COND285A]
      string _t2855#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2855,_t263A,_t2547);
      goto JOIN27E0
    ASSIGN2617:  preds = [COND261B]
      string _t2616#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2616,_t23FB,_t2547);
      goto JOIN25A1
}
  function femData:MeshPos fn_2FB2DF4 (femData:MeshPos x2D94#5, tensor[3] dPos2D95#1) {
    ENTRY2DF3:  preds = []
      femData:Mesh meshData2D97#1 = globals.meshData1742;
      int timeSteps2D96#1 = globals.timeSteps1745;
      bool _t2D9A#1 = ExtractFemItem<bool,Valid(MeshPos)>(x2D94);
      bool _t2D9C#1 = BNot(_t2D9A);
      if _t2D9C then goto RETURN(x2D94)2D9F else goto JOIN2D9E
    RETURN(x2D94)2D9F:  preds = [COND2DA0]
      return x2D94
      goto JOIN2D9E
    JOIN2D9E:  preds = [*RETURN(x2D94)2D9F,COND2DA0]
      int _t2DA5#1 = 0;
      int[] _t2DA7#1 = Range(_t2DA5,timeSteps2D96);
    FOREACH2DAA:  preds = [ASSIGN2DA8,*NEXT2DDA]
      foreach (i2DA9 in _t2DA7) on exit goto ASSIGN2DDC
      return
      goto FOREACH2DAA
    ASSIGN2DDC:  preds = [FOREACH2DAA]
      string _t2DDB#1 = "Took stupid way out!\n";
      Print<[string]>(_t2DDB);
      tensor[3] _t2DDF#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x2D94);
      int _t2DE1#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x2D94);
      femData:Mesh _t2DE3#2 = ExtractFem<femData:Mesh,femData:MeshPos>(x2D94);
      tensor[3] _t2DEE#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3])<(Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3) + T4_{i0})>_{3} (_t2DE1,_t2DE3,_t2DE3,_t2DDF,dPos2D95);
      femData:MeshPos cmp2DF0#1 = findPos1803 (meshData2D97,_t2DEE);
      return cmp2DF0
}
## input initialization
  ENTRY1758:  preds = []
    int timeSteps174C#1 = 32;
    globals.timeSteps1745 = timeSteps174C;
    real timeEps174F#1 = 0.1e-6;
    globals.timeEps1746 = timeEps174F;
    real stepSize1752#1 = 0.1e-1;
    globals.stepSize1748 = stepSize1752;
    int stepMax1755#1 = 300;
    globals.stepMax1749 = stepMax1755;
    return
## global-variable initialization
  ENTRY2E2E:  preds = []
    femData:Mesh meshData2DF7#3 = globals.meshData1742;
    femData:Space 0space0409_intermedateGlobal2DF6#1 = globals.0space0409_intermedateGlobal1743;
    femData:FemFunc 0data040B_intermedateGlobal2DF5#1 = globals.0data040B_intermedateGlobal1744;
    int _t2DFB#1 = 0;
    int _t2DFD#1 = 1;
    int _t2DFF#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData2DF7);
    int _t2E01#1 = ISub(_t2DFF,_t2DFD);
    int[] _t2E03#1 = Range(_t2DFB,_t2E01);
    femData:MeshCell[] _t2E05#1 = <femData:MeshCell[]>{};
  FOREACH2E09:  preds = [ASSIGN2E06,NEXT2E0E]
    foreach (_t2E07 in _t2E03) on exit goto ASSIGN2E10
      femData:MeshCell[] _t2E08#1 = phi(_t2E05,_t2E0C)
    femData:MeshCell _t2E0A#1 = LoadFem<femData:MeshCell>(meshData2DF7,_t2E07);
    femData:MeshCell[] _t2E0C#1 = Append<femData:MeshCell>(_t2E08,_t2E0A);
    goto FOREACH2E09
  ASSIGN2E10:  preds = [FOREACH2E09]
    femData:Space space2E0F#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal2DF6,meshData2DF7);
    femData:FemFunc data2E12#18 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal2DF5,space2E0F);
    globals.data175B = data2E12;
    femData:Space _t2E15#17 = ExtractFem<femData:Space,femData:FemFunc>(data2E12);
    femData:Mesh _t2E19#64 = ExtractFem<femData:Mesh,femData:Space>(_t2E15);
    return
## strand
  strand gg (tensor[3] startPos2E38#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY2E5B:  preds = []
        femData:Mesh meshData2E3F#1 = globals.meshData1742;
        tensor[3][0] _t2E47#1 = <tensor[3][0]>{};
        tensor[3][] _t2E49#1 = MkDynamic<tensor[3],0>(_t2E47);
        tensor[3][0] _t2E4D#1 = <tensor[3][0]>{};
        tensor[3][] _t2E4F#1 = MkDynamic<tensor[3],0>(_t2E4D);
        int step2E53#1 = 0;
        femData:MeshPos cPos2E55#1 = findPos1803 (meshData2E3F,startPos2E38);
        self.stream = _t2E49;
        self.newStream = _t2E4F;
        self.step = step2E53;
        self.cPos = cPos2E55;
        self.altCPos = startPos2E38;
        self.startPos = startPos2E38;
        return
    end state init
    method update
        ENTRY3171:  preds = []
          femData:Mesh meshData2E69#2 = globals.meshData1742;
          femData:FemFunc data2E68#2 = globals.data175B;
          real stepSize2E67#17 = globals.stepSize1748;
          int stepMax2E66#1 = globals.stepMax1749;
          tensor[3,3] M2E65#4 = globals.M174A;
          tensor[3] center2E64#4 = globals.center174B;
          tensor[3][] stream2E71#2 = self.stream;
          tensor[3][] newStream2E72#2 = self.newStream;
          int step2E73#5 = self.step;
          femData:MeshPos cPos2E74#9 = self.cPos;
          tensor[3] altCPos2E75#22 = self.altCPos;
          tensor[3] startPos2E76#6 = self.startPos;
          int _t2E7D#1 = 0;
          bool _t2E7F#1 = EQ<int>(step2E73,_t2E7D);
          if _t2E7F then goto ASSIGN2E83 else goto JOIN2E81
        ASSIGN2E83:  preds = [COND2EC8]
          bool _t2E82#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          if _t2E82 then goto ASSIGN2E86 else goto JOIN2E84
        ASSIGN2E86:  preds = [COND2EC7]
          tensor[3] rp2E85#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          real _t2E87#1 = TensorIndex<tensor[3],[0]>(rp2E85);
          real _t2E89#3 = 0.1e-5;
          bool _t2E8B#1 = LTE<real>(_t2E87,_t2E89);
          if _t2E8B then goto STABILIZE2E8E else goto JOIN2E8D
        STABILIZE2E8E:  preds = [COND2E94]
          stabilize
          goto JOIN2E8D
        JOIN2E8D:  preds = [*STABILIZE2E8E,COND2E94]
          real _t2E95#1 = TensorIndex<tensor[3],[1]>(rp2E85);
          bool _t2E99#1 = LTE<real>(_t2E95,_t2E89);
          if _t2E99 then goto STABILIZE2E9C else goto JOIN2E9B
        STABILIZE2E9C:  preds = [COND2EA2]
          stabilize
          goto JOIN2E9B
        JOIN2E9B:  preds = [*STABILIZE2E9C,COND2EA2]
          real _t2EA3#1 = TensorIndex<tensor[3],[2]>(rp2E85);
          bool _t2EA7#1 = LTE<real>(_t2EA3,_t2E89);
          if _t2EA7 then goto STABILIZE2EAA else goto JOIN2EA9
        STABILIZE2EAA:  preds = [COND2EB0]
          stabilize
          goto JOIN2EA9
        JOIN2EA9:  preds = [*STABILIZE2EAA,COND2EB0]
          real _t2EB1#3 = 0.1e1;
          tensor[3] _t2EB7#1 = <tensor[3]>[_t2EB1,_t2EB1,_t2EB1];
          real r2EB9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EB7,rp2E85);
          real _t2EBB#1 = 0.9999999e0;
          bool _t2EBD#1 = LTE<real>(_t2EBB,r2EB9);
          if _t2EBD then goto STABILIZE2EC0 else goto JOIN2EBF
        STABILIZE2EC0:  preds = [COND2EC6]
          stabilize
          goto JOIN2EBF
        JOIN2EBF:  preds = [*STABILIZE2EC0,COND2EC6]
          goto JOIN2E84
        JOIN2E84:  preds = [JOIN2EBF,COND2EC7]
          goto JOIN2E81
        JOIN2E81:  preds = [JOIN2E84,COND2EC8]
          bool _t2EC9#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          femData:MeshPos _t2ECB#6 = findPos1803 (meshData2E69,altCPos2E75);
          bool _t2ECD#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t2ECB);
          bool _t2ECF#1 = NEQ<bool>(_t2EC9,_t2ECD);
          if _t2ECF then goto ASSIGN2ED3 else goto JOIN2ED1
        ASSIGN2ED3:  preds = [COND2ED7]
          string _t2ED2#1 = "ERG:Warning of validity startPos:";
          string _t2ED4#1 = "\n";
          Print<[string,tensor[3],string]>(_t2ED2,startPos2E76,_t2ED4);
          goto JOIN2ED1
        JOIN2ED1:  preds = [MASSIGN2ED6,COND2ED7]
          bool _t2EDB#2 = BNot(_t2EC9);
          if _t2EDB then goto ASSIGN2EE0 else goto ASSIGN3244
        ASSIGN2EE0:  preds = [COND2EF1]
          bool _t2EDE#1 = true;
          goto JOIN2EDD
        JOIN2EDD:  preds = [ASSIGN2EE0,JOIN2EE8]
          bool _t2EDF#1 = phi(_t2EDE,_t2EEA)
          if _t2EDF then goto ASSIGN2EF4 else goto JOIN2EF2
        ASSIGN2EF4:  preds = [COND2F18]
          string _t2EF3#1 = "Went off the mesh\?";
          string _t2EF9#2 = " and ";
          bool _t2F01#1 = BNot(_t2ECD);
          string _t2F03#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t2EF3,_t2EDB,_t2EF9,altCPos2E75,_t2EF9,_t2F01,_t2F03);
          string _t2F06#1 = "Pos is:";
          tensor[3] _t2F08#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          Print<[string,tensor[3],string]>(_t2F06,_t2F08,_t2F03);
          Print<[tensor[3][],string,tensor[3][],string]>(stream2E71,_t2F03,newStream2E72,_t2F03);
          stabilize
          goto JOIN2EF2
        JOIN2EF2:  preds = [*STABILIZE2F12,COND2F18]
          tensor[3] _t2F1A#5 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          int _t2F1C#6 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2E74);
          femData:Mesh _t2F1E#8 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2E74);
          tensor[3] _t2F23#2 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{3} (_t2F1C,_t2F1E,_t2F1E,_t2F1A);
          tensor[3][1] _t2F29#1 = <tensor[3][1]>{_t2F23};
          tensor[3][] _t2F2B#1 = MkDynamic<tensor[3],1>(_t2F29);
          tensor[3][] stream2F2D#4 = Concat<tensor[3]>(stream2E71,_t2F2B);
          tensor[3][1] _t2F2F#1 = <tensor[3][1]>{altCPos2E75};
          tensor[3][] _t2F31#1 = MkDynamic<tensor[3],1>(_t2F2F);
          tensor[3][] newStream2F33#4 = Concat<tensor[3]>(newStream2E72,_t2F31);
          real _t2F47#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3])<Sqrt(Σ(i0=0..2)<(((Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0}) * (Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0})))>(i0=0..2))> (_t2F1C,_t2F1E,_t2F1E,_t2F1A,altCPos2E75);
          real _t2F49#5 = 0.1e-5;
          bool _t2F4B#1 = GT<real>(_t2F47,_t2F49);
          if _t2F4B then goto ASSIGN2F4F else goto ASSIGN2F95
        ASSIGN2F4F:  preds = [COND2F9F]
          string _t2F4E#1 = "ERG:Error in tracing 1: At step:";
          string _t2F50#1 = " with particle:";
          string _t2F52#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t2F4E,step2E73,_t2F50,startPos2E76,_t2F52);
          string _t2F55#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t2F55,_t2F23,altCPos2E75,_t2F52);
          string _t2F6A#1 = "Cells are:";
          femData:MeshCell _t2F70#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          string _t2F72#2 = " and ";
          femData:Mesh _t2F76#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t2ECB);
          int _t2F7A#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t2ECB);
          femData:MeshCell _t2F7C#1 = LoadFem<femData:MeshCell>(_t2F76,_t2F7A);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t2F6A,_t2F70,_t2F72,_t2F7C,_t2F52);
          string _t2F81#1 = "Ref poses are:";
          tensor[3] _t2F89#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t2ECB);
          Print<[string,tensor[3],string,tensor[3],string]>(_t2F81,_t2F1A,_t2F72,_t2F89,_t2F52);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          stabilize
          goto JOIN2F4D
        JOIN2F4D:  preds = [*STABILIZE2F8E,MASSIGN2F9E]
          real _t2FA0#9 = 0.5e0;
          if _t2EC9 then goto ASSIGN3254 else goto ASSIGN2FE7
        ASSIGN3254:  preds = [COND2FED]
          femData:MeshCell c2FBA#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          int _t2FBF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2FBA);
          femData:FuncCell _t2FC1#2 = LoadFem<femData:FuncCell>(data2E68,_t2FBF);
          femData:FemFunc _t2FC5#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2FC1);
          femData:Space _t2FD0#2 = ExtractFem<femData:Space,femData:FemFunc>(_t2FC5);
          int _t2FD9#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2FC1);
          tensor[3] _t2FE1#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],INT4,FEM(fns_t)5,FEM(func_t)6,T7[3])<(Probe(femV(noFunc, 0, 1, 2)_{i0}⊛Basis(),T3)) / ( Sqrt(Σ(i1=0..2)<((Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3) * Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3)))>(i1=0..2)))>_{3} (_t2FD9,_t2FD0,_t2FC5,_t2F1A,_t2FD9,_t2FD0,_t2FC5,_t2F1A);
          goto JOIN2FB5
        JOIN2FB5:  preds = [ASSIGN32C8,ASSIGN2FEA]
          tensor[3] _t2FE4#3 = phi(_t2FE1,_t2FE9)
          tensor[3] up12FEE#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2FA0,stepSize2E67,_t2FE4);
          real _t300B#1 = λ(T0[],T1[],T2[3],T3[],T4[],T5[3 3],T6[3],T7[3],T8[3 3],T9[3],T10[3])<Sqrt(Σ(i0=0..2)<((((T0 * T1 * T2_{i0})) - (((T0 * T1 * Σ(i4=0..2)<((T5_{i0,i4} * (T6_{i4}) - (T7_{i4})))>(i4=0..2))) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)<((T5_{i4,i5} * (T6_{i5}) - (T7_{i5})))>(i5=0..2) * Σ(i5=0..2)<((T5_{i4,i5} * (T6_{i5}) - (T7_{i5})))>(i5=0..2)))>(i4=0..2)))) * ((T0 * T1 * T2_{i0})) - (((T0 * T1 * Σ(i4=0..2)<((T5_{i0,i4} * (T6_{i4}) - (T7_{i4})))>(i4=0..2))) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)<((T5_{i4,i5} * (T6_{i5}) - (T7_{i5})))>(i5=0..2) * Σ(i5=0..2)<((T5_{i4,i5} * (T6_{i5}) - (T7_{i5})))>(i5=0..2)))>(i4=0..2))))))>(i0=0..2))> (_t2FA0,stepSize2E67,_t2FE4,_t2FA0,stepSize2E67,M2E65,altCPos2E75,center2E64,M2E65,altCPos2E75,center2E64);
          bool _t300F#1 = GT<real>(_t300B,_t2F49);
          if _t300F then goto ASSIGN3014 else goto ASSIGN32E8
        ASSIGN3014:  preds = [COND301D]
          bool _t3012#1 = true;
          goto JOIN3011
        JOIN3011:  preds = [ASSIGN3014,ASSIGN325D]
          bool _t3013#1 = phi(_t3012,_t301B)
          if _t3013 then goto ASSIGN3020 else goto JOIN301E
        ASSIGN3020:  preds = [COND3024]
          string _t301F#1 = "ERG:Error in evaluation on pos 1:";
          string _t3021#1 = "\n";
          Print<[string,tensor[3],string]>(_t301F,startPos2E76,_t3021);
          goto JOIN301E
        JOIN301E:  preds = [MASSIGN3023,COND3024]
          femData:MeshPos intermed3025#4 = fn_2FB2DF4 (cPos2E74,up12FEE);
          tensor[3] altIntermed3027#10 = λ(T0[3],T1[],T2[],FEM(mesh_t)3,FEM(fns_t)4,FEM(func_t)5,FEM(mesh_t)6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3],FEM(mesh_t)10,FEM(fns_t)11,FEM(func_t)12,FEM(mesh_t)13,FEM(mesh_t)14,FEM(mesh_t)15,T16[3])<(T0_{i0} + ((T1 * T2 * Probe(Cmp(femV(1803, 3, 4, 5)_{i0}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T0))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T0) * Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T0)))>(i2=0..2))))>_{3} (altCPos2E75,_t2FA0,stepSize2E67,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altCPos2E75,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altCPos2E75);
          bool _t3029#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed3025);
          femData:MeshPos _t302B#5 = findPos1803 (meshData2E69,altIntermed3027);
          bool _t302D#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t302B);
          bool _t302F#1 = NEQ<bool>(_t3029,_t302D);
          if _t302F then goto ASSIGN3033 else goto JOIN3031
        ASSIGN3033:  preds = [COND3057]
          string _t3032#1 = "ERG:Warning of validity intermed";
          string _t3034#3 = "\n";
          Print<[string,tensor[3],string]>(_t3032,startPos2E76,_t3034);
          string _t3037#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t3037,altIntermed3027,_t3034);
          string _t303C#1 = "Cell change: ";
          femData:Mesh _t3040#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t2ECB);
          int _t3044#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t2ECB);
          femData:MeshCell _t3046#1 = LoadFem<femData:MeshCell>(_t3040,_t3044);
          string _t3048#1 = " to ";
          femData:Mesh _t304C#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t302B);
          int _t3050#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t302B);
          femData:MeshCell _t3052#1 = LoadFem<femData:MeshCell>(_t304C,_t3050);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t303C,_t3046,_t3048,_t3052,_t3034);
          goto JOIN3031
        JOIN3031:  preds = [MASSIGN3263,COND3057]
          bool _t305B#2 = BNot(_t3029);
          if _t305B then goto ASSIGN3060 else goto ASSIGN3265
        ASSIGN3060:  preds = [COND3067]
          bool _t305E#1 = true;
          goto JOIN305D
        JOIN305D:  preds = [ASSIGN3060,ASSIGN3265]
          bool _t305F#1 = phi(_t305E,_t3065)
          if _t305F then goto ASSIGN306A else goto JOIN3068
        ASSIGN306A:  preds = [COND3082]
          string _t3069#1 = "Went off the mesh\?";
          string _t306F#2 = " and ";
          bool _t3077#1 = BNot(_t302D);
          string _t3079#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t3069,_t305B,_t306F,altIntermed3027,_t306F,_t3077,_t3079);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          stabilize
          goto JOIN3068
        JOIN3068:  preds = [*STABILIZE307C,COND3082]
          tensor[3] _t3084#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed3025);
          int _t3086#4 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed3025);
          femData:Mesh _t3088#6 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed3025);
          tensor[3] _t308D#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{3} (_t3086,_t3088,_t3088,_t3084);
          real _t3095#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3],T5[],T6[],FEM(mesh_t)7,FEM(fns_t)8,FEM(func_t)9,FEM(mesh_t)10,FEM(mesh_t)11,FEM(mesh_t)12,T13[3],FEM(mesh_t)14,FEM(fns_t)15,FEM(func_t)16,FEM(mesh_t)17,FEM(mesh_t)18,FEM(mesh_t)19,T20[3])<Sqrt(Σ(i0=0..2)<(((Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - ((T4_{i0} + ((T5 * T6 * Probe(Cmp(femV(1803, 7, 8, 9)_{i0}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i3=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i3=0..2))))) * (Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - ((T4_{i0} + ((T5 * T6 * Probe(Cmp(femV(1803, 7, 8, 9)_{i0}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i3=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i3=0..2)))))))>(i0=0..2))> (_t3086,_t3088,_t3088,_t3084,altCPos2E75,_t2FA0,stepSize2E67,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altCPos2E75,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altCPos2E75);
          bool _t3099#1 = GT<real>(_t3095,_t2F49);
          if _t3099 then goto ASSIGN309D else goto ASSIGN30BF
        ASSIGN309D:  preds = [COND30C9]
          string _t309C#1 = "ERG:Error in tracing 2: At step:";
          string _t309E#1 = " with particle:";
          string _t30A0#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t309C,step2E73,_t309E,startPos2E76,_t30A0);
          string _t30A3#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t30A3,_t308D,altIntermed3027,_t30A0);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          stabilize
          goto JOIN309B
        JOIN309B:  preds = [*STABILIZE30B8,MASSIGN30C8]
          if _t3029 then goto ASSIGN326D else goto ASSIGN3109
        ASSIGN326D:  preds = [COND310F]
          femData:MeshCell c30DC#1 = LoadFem<femData:MeshCell>(_t3088,_t3086);
          int _t30E1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c30DC);
          femData:FuncCell _t30E3#2 = LoadFem<femData:FuncCell>(data2E68,_t30E1);
          femData:FemFunc _t30E7#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t30E3);
          femData:Space _t30F2#2 = ExtractFem<femData:Space,femData:FemFunc>(_t30E7);
          int _t30FB#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t30E3);
          tensor[3] _t3103#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],INT4,FEM(fns_t)5,FEM(func_t)6,T7[3])<(Probe(femV(noFunc, 0, 1, 2)_{i0}⊛Basis(),T3)) / ( Sqrt(Σ(i1=0..2)<((Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3) * Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3)))>(i1=0..2)))>_{3} (_t30FB,_t30F2,_t30E7,_t3084,_t30FB,_t30F2,_t30E7,_t3084);
          goto JOIN30D7
        JOIN30D7:  preds = [ASSIGN32DA,ASSIGN310C]
          tensor[3] _t3106#4 = phi(_t3103,_t310B)
          tensor[3] up23110#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2E67,_t3106);
          femData:MeshPos cPos3126#1 = fn_2FB2DF4 (cPos2E74,up23110);
          tensor[3] altCPos3128#1 = λ(T0[3],T1[],FEM(mesh_t)2,FEM(fns_t)3,FEM(func_t)4,FEM(mesh_t)5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],FEM(mesh_t)9,FEM(fns_t)10,FEM(func_t)11,FEM(mesh_t)12,FEM(mesh_t)13,FEM(mesh_t)14,T15[3])<(T0_{i0} + ((T1 * Probe(Cmp(femV(1803, 2, 3, 4)_{i0}⊛Basis())[femInvV(1803, 2, 2, 2)_{i0}⊛Basis(){3}],T8))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 2, 3, 4)_{i2}⊛Basis())[femInvV(1803, 2, 2, 2)_{i0}⊛Basis(){3}],T8) * Probe(Cmp(femV(1803, 2, 3, 4)_{i2}⊛Basis())[femInvV(1803, 2, 2, 2)_{i0}⊛Basis(){3}],T8)))>(i2=0..2))))>_{3} (altCPos2E75,stepSize2E67,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altIntermed3027,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altIntermed3027);
          int _t312A#1 = 1;
          int step312C#1 = IAdd(step2E73,_t312A);
          real _t3131#2 = λ(T0[],T1[3],T2[],T3[3 3],T4[3],T5[],T6[],FEM(mesh_t)7,FEM(fns_t)8,FEM(func_t)9,FEM(mesh_t)10,FEM(mesh_t)11,FEM(mesh_t)12,T13[3],FEM(mesh_t)14,FEM(fns_t)15,FEM(func_t)16,FEM(mesh_t)17,FEM(mesh_t)18,FEM(mesh_t)19,T20[3],T21[3],T22[3 3],T23[3],T24[],T25[],FEM(mesh_t)26,FEM(fns_t)27,FEM(func_t)28,FEM(mesh_t)29,FEM(mesh_t)30,FEM(mesh_t)31,T32[3],FEM(mesh_t)33,FEM(fns_t)34,FEM(func_t)35,FEM(mesh_t)36,FEM(mesh_t)37,FEM(mesh_t)38,T39[3],T40[3])<Sqrt(Σ(i0=0..2)<((((T0 * T1_{i0})) - (((T0 * Σ(i4=0..2)<((T3_{i0,i4} * ((T4_{i4} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i4}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i7=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i7}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i7}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i7=0..2))))) - (T21_{i4})))>(i4=0..2))) / ( Sqrt(Σ(i2=0..2)<((Σ(i3=0..2)<((T3_{i2,i3} * ((T4_{i3} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i6=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i6=0..2))))) - (T21_{i3})))>(i3=0..2) * Σ(i3=0..2)<((T3_{i2,i3} * ((T4_{i3} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i6=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i6=0..2))))) - (T21_{i3})))>(i3=0..2)))>(i2=0..2)))) * ((T0 * T1_{i0})) - (((T0 * Σ(i4=0..2)<((T3_{i0,i4} * ((T4_{i4} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i4}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i7=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i7}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i7}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i7=0..2))))) - (T21_{i4})))>(i4=0..2))) / ( Sqrt(Σ(i2=0..2)<((Σ(i3=0..2)<((T3_{i2,i3} * ((T4_{i3} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i6=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i6=0..2))))) - (T21_{i3})))>(i3=0..2) * Σ(i3=0..2)<((T3_{i2,i3} * ((T4_{i3} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i6=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i6=0..2))))) - (T21_{i3})))>(i3=0..2)))>(i2=0..2))))))>(i0=0..2))> (stepSize2E67,_t3106,stepSize2E67,M2E65,altCPos2E75,_t2FA0,stepSize2E67,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altCPos2E75,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altCPos2E75,center2E64,M2E65,altCPos2E75,_t2FA0,stepSize2E67,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altCPos2E75,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altCPos2E75,center2E64);
          bool _t3135#1 = GT<real>(_t3131,_t2F49);
          if _t3135 then goto ASSIGN313A else goto ASSIGN32E6
        ASSIGN313A:  preds = [COND3143]
          bool _t3138#1 = true;
          goto JOIN3137
        JOIN3137:  preds = [ASSIGN313A,ASSIGN3142]
          bool _t3139#1 = phi(_t3138,_t3141)
          if _t3139 then goto ASSIGN3146 else goto JOIN3144
        ASSIGN3146:  preds = [COND3170]
          string _t3145#1 = "ERG:Error in evaluation on pos 2:";
          string _t3147#3 = "\n";
          Print<[string,tensor[3],string]>(_t3145,startPos2E76,_t3147);
          string _t314A#1 = "The errors are:";
          string _t3150#1 = " and ";
          real _t3154#1 = λ(T0[],T1[3],T2[],FEM(mesh_t)3,FEM(fns_t)4,FEM(func_t)5,FEM(mesh_t)6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3],FEM(mesh_t)10,FEM(fns_t)11,FEM(func_t)12,FEM(mesh_t)13,FEM(mesh_t)14,FEM(mesh_t)15,T16[3])<Sqrt(Σ(i0=0..2)<((((T0 * T1_{i0})) - (((T0 * Probe(Cmp(femV(1803, 3, 4, 5)_{i0}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9) * Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9)))>(i2=0..2)))) * ((T0 * T1_{i0})) - (((T0 * Probe(Cmp(femV(1803, 3, 4, 5)_{i0}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9) * Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9)))>(i2=0..2))))))>(i0=0..2))> (stepSize2E67,_t3106,stepSize2E67,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altIntermed3027,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altIntermed3027);
          Print<[string,real,string,real,string]>(_t314A,_t3131,_t3150,_t3154,_t3147);
          string _t3159#1 = "The cells are:";
          femData:MeshCell _t315F#1 = LoadFem<femData:MeshCell>(_t3088,_t3086);
          string _t3161#1 = " vs ";
          femData:Mesh _t3165#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t302B);
          int _t3169#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t302B);
          femData:MeshCell _t316B#1 = LoadFem<femData:MeshCell>(_t3165,_t3169);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t3159,_t315F,_t3161,_t316B,_t3147);
          goto JOIN3144
        JOIN3144:  preds = [MASSIGN3279,COND3170]
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          self.step = step312C;
          self.cPos = cPos3126;
          self.altCPos = altCPos3128;
          active
        ASSIGN32E6:  preds = [COND3143]
          real _t313D#1 = λ(T0[],T1[3],T2[],FEM(mesh_t)3,FEM(fns_t)4,FEM(func_t)5,FEM(mesh_t)6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3],FEM(mesh_t)10,FEM(fns_t)11,FEM(func_t)12,FEM(mesh_t)13,FEM(mesh_t)14,FEM(mesh_t)15,T16[3])<Sqrt(Σ(i0=0..2)<((((T0 * T1_{i0})) - (((T0 * Probe(Cmp(femV(1803, 3, 4, 5)_{i0}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9) * Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9)))>(i2=0..2)))) * ((T0 * T1_{i0})) - (((T0 * Probe(Cmp(femV(1803, 3, 4, 5)_{i0}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9) * Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9)))>(i2=0..2))))))>(i0=0..2))> (stepSize2E67,_t3106,stepSize2E67,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altIntermed3027,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altIntermed3027);
          real _t313F#1 = 0.1e-4;
          bool _t3141#1 = GT<real>(_t313D,_t313F);
          goto JOIN3137
        ASSIGN3109:  preds = [COND310F]
          string _t3108#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3108);
          tensor[3] _t310B#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN30D7
        ASSIGN30BF:  preds = [COND30C9]
          string _t30BE#1 = "fine in cell 2:";
          femData:MeshCell _t30C4#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          string _t30C6#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t30BE,_t30C4,_t30C6);
          goto JOIN309B
        ASSIGN3265:  preds = [COND3067]
          bool _t3065#1 = BNot(_t302D);
          goto JOIN305D
        ASSIGN32E8:  preds = [COND301D]
          real _t3017#1 = λ(T0[],T1[],T2[3],T3[],T4[],FEM(mesh_t)5,FEM(fns_t)6,FEM(func_t)7,FEM(mesh_t)8,FEM(mesh_t)9,FEM(mesh_t)10,T11[3],FEM(mesh_t)12,FEM(fns_t)13,FEM(func_t)14,FEM(mesh_t)15,FEM(mesh_t)16,FEM(mesh_t)17,T18[3])<Sqrt(Σ(i0=0..2)<((((T0 * T1 * T2_{i0})) - (((T0 * T1 * Probe(Cmp(femV(1803, 5, 6, 7)_{i0}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 5, 6, 7)_{i2}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * Probe(Cmp(femV(1803, 5, 6, 7)_{i2}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11)))>(i2=0..2)))) * ((T0 * T1 * T2_{i0})) - (((T0 * T1 * Probe(Cmp(femV(1803, 5, 6, 7)_{i0}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 5, 6, 7)_{i2}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * Probe(Cmp(femV(1803, 5, 6, 7)_{i2}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11)))>(i2=0..2))))))>(i0=0..2))> (_t2FA0,stepSize2E67,_t2FE4,_t2FA0,stepSize2E67,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altCPos2E75,_t2E19,_t2E15,data2E12,_t2E19,_t2E19,_t2E19,altCPos2E75);
          bool _t301B#1 = GT<real>(_t3017,_t2F49);
          goto JOIN3011
        ASSIGN2FE7:  preds = [COND2FED]
          string _t2FE6#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t2FE6);
          tensor[3] _t2FE9#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2FB5
        ASSIGN2F95:  preds = [COND2F9F]
          string _t2F94#1 = "fine in cell 1:";
          femData:MeshCell _t2F9A#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          string _t2F9C#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t2F94,_t2F9A,_t2F9C);
          goto JOIN2F4D
        ASSIGN3244:  preds = [COND2EF1]
          bool _t2EE6#1 = BNot(_t2ECD);
          if _t2EE6 then goto ASSIGN2EEB else goto ASSIGN2EED
        ASSIGN2EEB:  preds = [COND2EEE]
          bool _t2EE9#1 = true;
          goto JOIN2EE8
        JOIN2EE8:  preds = [ASSIGN2EEB,ASSIGN2EED]
          bool _t2EEA#1 = phi(_t2EE9,_t2EEC)
          goto JOIN2EDD
        ASSIGN2EED:  preds = [COND2EEE]
          bool _t2EEC#1 = EQ<int>(step2E73,stepMax2E66);
          goto JOIN2EE8
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY2E36:  preds = []
      tensor[3][] startPoints2E30#1 = globals.startPoints1747;
    FOREACH2E33:  preds = [ASSIGN2E31,NEXT2E35]
      foreach (x2E32 in startPoints2E30) on exit goto RETURN2E37
      new gg(x2E32);
      goto FOREACH2E33
    RETURN2E37:  preds = [FOREACH2E33]
      return
#### end program ####
promote _t2E19 --> globals._t32EA
promote _t2E15 --> globals._tX32ED
##### high-ir: after normalization promotion ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1742 (meshData) = <no-default>
  input 0space0409_intermedateGlobal1743 (space) = <no-default>
  input 0data040B_intermedateGlobal1744 (data) = <no-default>
  input timeSteps1745 (timeSteps) = <default>
  input timeEps1746 (timeEps) = <default>
  input startPoints1747 (startPoints) = <no-default>
  input stepSize1748 (stepSize) = <default>
  input stepMax1749 (stepMax) = <default>
  input M174A (M) = <no-default>
  input center174B (center) = <no-default>
  global femData:FemFunc data175B
  global femData:Mesh _t32EA
  global femData:Space _tX32ED
## functions
  function femData:MeshPos findPos1803 (femData:Mesh mesh175D#23, tensor[3] pos175E#7) {
    ENTRY1802:  preds = []
      real _t175F#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1765#6 = <tensor[3]>[_t175F,_t175F,_t175F];
      int newtonInt1767#1 = 0;
      int[] yayCells1771#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh175D,pos175E);
    FOREACH1774:  preds = [ASSIGN1772,NEXT17FE]
      foreach (cellItter1773 in yayCells1771) on exit goto ASSIGN1800
      int _t1793#1 = 16;
      int[] _t1795#1 = Range(newtonInt1767,_t1793);
    FOREACH1799:  preds = [ASSIGN317B,NEXT17FD]
      foreach (newtonItter1797 in _t1795) on exit goto NEXT17FE
        tensor[3] xn1798#8 = phi(xn1765,xn17A2)
      tensor[3] xn17A2#2 = λ(T0[3],INT1,FEM(mesh_t)2,FEM(mesh_t)3,T4[3],T5[3],INT6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn1798,cellItter1773,mesh175D,mesh175D,xn1765,pos175E,cellItter1773,mesh175D,mesh175D,xn1798);
      real _t17A4#6 = 0.1e-7;
      real _t17A8#1 = λ(T0[],T1[])<(T0 * T1)> (_t17A4,_t17A4);
      real _t17AA#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],INT9,FEM(mesh_t)10,FEM(mesh_t)11,T12[3],T13[3],INT14,FEM(mesh_t)15,FEM(mesh_t)16,T17[3])<Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i11=0..2)<(((Σ(i19=0..2)(i20=0..2)<((ϵ_{ii19,ii20,ii0} * Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i22}⊛Basis()dx_{i19},T3) * Σ(i23=0..2)<((ϵ_{ii22,ii23,ii11} * Probe(femV(noFunc, 0, 1, 1)_{i23}⊛Basis()dx_{i20},T3)))>(i23=0..2)))>(i22=0..2)))>(i19=0..2)(i20=0..2)) / ( (2 * Σ(i16=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'0'},T3) * Σ(i17=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i17}⊛Basis()dx_{'1'},T3) * Σ(i18=0..2)<((ϵ_{ii16,ii17,ii18} * Probe(femV(noFunc, 0, 1, 1)_{i18}⊛Basis()dx_{'2'},T3)))>(i18=0..2)))>(i17=0..2)))>(i16=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis(),T8)) - (T4_{i11})))>(i11=0..2)))>(i0=0..2)> (cellItter1773,mesh175D,mesh175D,xn1765,pos175E,cellItter1773,mesh175D,mesh175D,xn1798,cellItter1773,mesh175D,mesh175D,xn1765,pos175E,cellItter1773,mesh175D,mesh175D,xn1798);
      bool _t17AC#1 = GTE<real>(_t17A8,_t17AA);
      if _t17AC then goto ASSIGN17B0 else goto JOIN17AE
    ASSIGN17B0:  preds = [COND17FC]
      real _t17AF#4 = 0.1e1;
      real _t17B3#1 = λ(T0[],T1[])<(T0 + T1)> (_t17AF,_t17A4);
      tensor[3] _t17BB#1 = <tensor[3]>[_t17AF,_t17AF,_t17AF];
      real _t17BD#1 = λ(T0[3],T1[3],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],INT7,FEM(mesh_t)8,FEM(mesh_t)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t17BB,xn1798,cellItter1773,mesh175D,mesh175D,xn1765,pos175E,cellItter1773,mesh175D,mesh175D,xn1798);
      bool _t17BF#1 = GT<real>(_t17B3,_t17BD);
      tensor[3] _t17C7#1 = <tensor[3]>[_t17A4,_t17A4,_t17A4];
      tensor[3] _t17C9#3 = λ(T0[3],T1[3],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],INT7,FEM(mesh_t)8,FEM(mesh_t)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t17C7,xn1798,cellItter1773,mesh175D,mesh175D,xn1765,pos175E,cellItter1773,mesh175D,mesh175D,xn1798);
      real _t17CB#1 = TensorIndex<tensor[3],[0]>(_t17C9);
      real _t17CD#3 = -0.e0;
      bool _t17CF#1 = GT<real>(_t17CB,_t17CD);
      real _t17DB#1 = TensorIndex<tensor[3],[1]>(_t17C9);
      bool _t17DF#1 = GT<real>(_t17DB,_t17CD);
      real _t17EB#1 = TensorIndex<tensor[3],[2]>(_t17C9);
      bool _t17EF#1 = GT<real>(_t17EB,_t17CD);
      bool _t17F1#1 = BAnd(_t17DF,_t17EF);
      bool _t17F3#1 = BAnd(_t17CF,_t17F1);
      bool _t17F5#1 = BAnd(_t17BF,_t17F3);
      if _t17F5 then goto ASSIGN3185 else goto JOIN17F7
    ASSIGN3185:  preds = [COND17FB]
      femData:MeshPos _t17F8#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh175D,cellItter1773,xn17A2,pos175E);
      return _t17F8
      goto JOIN17F7
    JOIN17F7:  preds = [*RETURN(_t17F8)17FA,COND17FB]
      goto JOIN17AE
    JOIN17AE:  preds = [JOIN17F7,COND17FC]
      goto FOREACH1799
    NEXT17FE:  preds = [FOREACH1799]
      goto FOREACH1774
    ASSIGN1800:  preds = [FOREACH1774]
      femData:MeshPos _t17FF#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh175D);
      return _t17FF
}
  function tensor[3] worldPos1814 (femData:MeshPos pos1804#3) {
    ENTRY1813:  preds = []
      tensor[3] _t1805#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(pos1804);
      int _t1807#1 = ExtractFemItem<int,CellIndex(MeshPos)>(pos1804);
      femData:Mesh _t1809#2 = ExtractFem<femData:Mesh,femData:MeshPos>(pos1804);
      tensor[3] _t180E#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{3} (_t1807,_t1809,_t1809,_t1805);
      return _t180E
}
  function femData:MeshPos $exitPos23B8 (femData:Mesh mesh1815#3, int cellId1816#1, tensor[3] refPos1817#2, tensor[3] dPos1818#2, real[2] time1819#3) {
    ENTRY23B7:  preds = []
      int _t181A#1 = -1;
      real _t181C#1 = TensorIndex<real[2],[1]>(time1819);
      int _t181E#6 = FloorToInt(_t181C);
      int[2] _t1820#2 = nextCell41821 (_t181E,cellId1816,mesh1815);
      int _t1823#1 = 0;
      int _t1825#2 = Subscript<int[2]>(_t1820,_t1823);
      bool _t1827#1 = NEQ<int>(_t181A,_t1825);
      if _t1827 then goto ASSIGN182B else goto ASSIGN23AD
    ASSIGN182B:  preds = [COND23B5]
      string _t182A#1 = "face ";
      string _t1830#1 = " to ";
      int _t1838#1 = 1;
      int _t183A#6 = Subscript<int[2]>(_t1820,_t1838);
      string _t183C#2 = "\n";
      string _t183E#1 = "got: ";
      real _t1840#15 = 0.1e1;
      real _t1842#35 = 0.e0;
      tensor[4] _t1848#7 = <tensor[4]>[_t1840,_t1842,_t1842,_t1842];
      tensor[4] _t1852#6 = <tensor[4]>[_t1842,_t1840,_t1842,_t1842];
      tensor[4] _t185C#7 = <tensor[4]>[_t1842,_t1842,_t1840,_t1842];
      real _t185E#1 = 0.971445146547e-16;
      tensor[4] _t1866#4 = <tensor[4]>[_t185E,_t1842,_t1842,_t1840];
      tensor[4,4] _t1868#4 = <tensor[4,4]>[_t1848,_t1852,_t185C,_t1866];
      real _t186A#10 = 0.57735026919e0;
      real _t1870#7 = -0.57735026919e0;
      tensor[4] _t1872#2 = <tensor[4]>[_t186A,_t186A,_t186A,_t1870];
      real _t1874#4 = -0.333333333333e0;
      real _t1876#2 = 0.666666666667e0;
      real _t187A#2 = 0.333333333333e0;
      tensor[4] _t187C#3 = <tensor[4]>[_t1874,_t1876,_t1874,_t187A];
      tensor[4] _t1886#3 = <tensor[4]>[_t1874,_t1874,_t1876,_t187A];
      tensor[4,4] _t1892#4 = <tensor[4,4]>[_t1872,_t187C,_t1886,_t1866];
      tensor[4] _t18A6#1 = <tensor[4]>[_t1870,_t1870,_t1870,_t186A];
      tensor[4,4] _t18BC#4 = <tensor[4,4]>[_t187C,_t18A6,_t1886,_t1866];
      tensor[4,4] _t18E6#4 = <tensor[4,4]>[_t187C,_t1886,_t1872,_t1866];
      tensor[4,4][4] _t18E8#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      real _t18EC#9 = -0.1e1;
      tensor[4] _t18F2#1 = <tensor[4]>[_t186A,_t18EC,_t18EC,_t1840];
      tensor[4] _t18FC#1 = <tensor[4]>[_t186A,_t1840,_t1842,_t1842];
      tensor[4] _t1906#1 = <tensor[4]>[_t186A,_t1842,_t1840,_t1842];
      tensor[4] _t1910#10 = <tensor[4]>[_t1842,_t1842,_t1842,_t1840];
      tensor[4,4] _t1912#4 = <tensor[4,4]>[_t18F2,_t18FC,_t1906,_t1910];
      tensor[4,4] _t193C#12 = <tensor[4,4]>[_t1848,_t1852,_t185C,_t1910];
      tensor[4] _t1950#1 = <tensor[4]>[_t18EC,_t1842,_t1842,_t1842];
      tensor[4,4] _t1966#4 = <tensor[4,4]>[_t1852,_t1950,_t185C,_t1910];
      tensor[4,4] _t1990#4 = <tensor[4,4]>[_t1852,_t185C,_t1848,_t1910];
      tensor[4,4][4] _t1992#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4] _t199C#1 = <tensor[4]>[_t18EC,_t1870,_t18EC,_t1840];
      tensor[4] _t19A6#1 = <tensor[4]>[_t1840,_t1870,_t1842,_t1842];
      tensor[4] _t19B0#1 = <tensor[4]>[_t1842,_t1870,_t1840,_t1842];
      tensor[4,4] _t19BC#4 = <tensor[4,4]>[_t199C,_t19A6,_t19B0,_t1910];
      tensor[4] _t19C6#2 = <tensor[4]>[_t1842,_t18EC,_t1842,_t1842];
      tensor[4,4] _t19E6#4 = <tensor[4,4]>[_t19C6,_t1848,_t185C,_t1910];
      tensor[4,4] _t1A3A#4 = <tensor[4,4]>[_t1848,_t185C,_t19C6,_t1910];
      tensor[4,4][4] _t1A3C#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4] _t1A46#1 = <tensor[4]>[_t18EC,_t18EC,_t186A,_t1840];
      tensor[4] _t1A50#1 = <tensor[4]>[_t1840,_t1842,_t186A,_t1842];
      tensor[4] _t1A5A#1 = <tensor[4]>[_t1842,_t1840,_t186A,_t1842];
      tensor[4,4] _t1A66#4 = <tensor[4,4]>[_t1A46,_t1A50,_t1A5A,_t1910];
      tensor[4,4] _t1A90#4 = <tensor[4,4]>[_t185C,_t1848,_t1852,_t1910];
      tensor[4] _t1AA4#1 = <tensor[4]>[_t1842,_t1842,_t18EC,_t1842];
      tensor[4,4] _t1ABA#4 = <tensor[4,4]>[_t1848,_t1AA4,_t1852,_t1910];
      tensor[4,4][4] _t1AE6#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t1AE8#1 = <tensor[4,4][4][4]>{_t18E8,_t1992,_t1A3C,_t1AE6};
      tensor[4,4][4] _t1AEE#1 = Subscript<tensor[4,4][4][4]>(_t1AE8,_t181E);
      tensor[4,4] _t1AFA#1 = Subscript<tensor[4,4][4]>(_t1AEE,_t183A);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t182A,_t181E,_t1830,_t183A,_t183C,_t183E,_t1AFA,_t183C);
      tensor[4,4][4] _t1BB1#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      tensor[4,4][4] _t1C5B#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4,4][4] _t1D05#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4,4][4] _t1DAF#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t1DB1#1 = <tensor[4,4][4][4]>{_t1BB1,_t1C5B,_t1D05,_t1DAF};
      tensor[4,4][4] _t1DB7#1 = Subscript<tensor[4,4][4][4]>(_t1DB1,_t181E);
      tensor[4,4] _t1DC3#1 = Subscript<tensor[4,4][4]>(_t1DB7,_t183A);
      real _t1DC5#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t1DC9#3 = λ(T0[],T1[3],T2[3])<((T0 * T1_{i0}) + T2_{i0})>_{3} (_t1DC5,dPos1818,refPos1817);
      real _t1DCB#1 = TensorIndex<tensor[3],[0]>(_t1DC9);
      real _t1DD3#1 = TensorIndex<tensor[3],[1]>(_t1DC9);
      real _t1DDB#1 = TensorIndex<tensor[3],[2]>(_t1DC9);
      tensor[4] _t1DDF#3 = <tensor[4]>[_t1DCB,_t1DD3,_t1DDB,_t1840];
      tensor[4] _t1DE1#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t1DC3,_t1DDF);
      real _t1DE3#1 = TensorIndex<tensor[4],[0]>(_t1DE1);
      tensor[4,4][4] _t1E8D#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      tensor[4,4][4] _t1F37#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4,4][4] _t1FE1#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4,4][4] _t208B#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t208D#1 = <tensor[4,4][4][4]>{_t1E8D,_t1F37,_t1FE1,_t208B};
      tensor[4,4][4] _t2093#1 = Subscript<tensor[4,4][4][4]>(_t208D,_t181E);
      tensor[4,4] _t209F#1 = Subscript<tensor[4,4][4]>(_t2093,_t183A);
      tensor[4] _t20BD#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t209F,_t1DDF);
      real _t20BF#1 = TensorIndex<tensor[4],[1]>(_t20BD);
      tensor[4,4][4] _t2169#1 = <tensor[4,4][4]>{_t1868,_t1892,_t18BC,_t18E6};
      tensor[4,4][4] _t2213#1 = <tensor[4,4][4]>{_t1912,_t193C,_t1966,_t1990};
      tensor[4,4][4] _t22BD#1 = <tensor[4,4][4]>{_t19BC,_t19E6,_t193C,_t1A3A};
      tensor[4,4][4] _t2367#1 = <tensor[4,4][4]>{_t1A66,_t1A90,_t1ABA,_t193C};
      tensor[4,4][4][4] _t2369#1 = <tensor[4,4][4][4]>{_t2169,_t2213,_t22BD,_t2367};
      tensor[4,4][4] _t236F#1 = Subscript<tensor[4,4][4][4]>(_t2369,_t181E);
      tensor[4,4] _t237B#1 = Subscript<tensor[4,4][4]>(_t236F,_t183A);
      tensor[4] _t2399#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t237B,_t1DDF);
      real _t239B#1 = TensorIndex<tensor[4],[2]>(_t2399);
      tensor[3] _t239D#1 = <tensor[3]>[_t1DE3,_t20BF,_t239B];
      femData:MeshPos _t23A9#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(mesh1815,_t1825,_t239D,_t183A);
      return _t23A9
      goto JOIN1829
    JOIN1829:  preds = [*RETURN(_t23A9)23AB,*RETURN(_t23B2)23B4]
      unreachable
    ASSIGN23AD:  preds = [COND23B5]
      real _t23AC#1 = TensorIndex<real[2],[0]>(time1819);
      tensor[3] _t23B0#1 = λ(T0[],T1[3],T2[3])<((T0 * T1_{i0}) + T2_{i0})>_{3} (_t23AC,dPos1818,refPos1817);
      femData:MeshPos _t23B2#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(mesh1815,_t23B0);
      return _t23B2
      goto JOIN1829
}
  function int[2] nextCell41821 (int faceIdx23B9#2, int cell23BA#1, femData:Mesh mesh23BB#1) {
    ENTRY23D7:  preds = []
      int _t23BC#3 = -1;
      bool _t23BE#1 = EQ<int>(faceIdx23B9,_t23BC);
      if _t23BE then goto ASSIGN31C6 else goto ASSIGN23C9
    ASSIGN31C6:  preds = [COND23D5]
      int[2] _t23C5#1 = <int[2]>{_t23BC,_t23BC};
      return _t23C5
      goto JOIN23C0
    JOIN23C0:  preds = [*RETURN(_t23C5)23C7,*RETURN(_t23D2)23D4]
      unreachable
    ASSIGN23C9:  preds = [COND23D5]
      int _t23C8#1 = 8;
      int _t23CA#1 = IMul(cell23BA,_t23C8);
      int _t23CC#1 = 2;
      int _t23CE#1 = IMul(faceIdx23B9,_t23CC);
      int _t23D0#1 = IAdd(_t23CA,_t23CE);
      int[2] _t23D2#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh23BB,_t23D0);
      return _t23D2
      goto JOIN23C0
}
  function tensor[2] _exit2D93 (tensor[3] refPos23D8#50, tensor[3] dPos23D9#50, int i23DA#9) {
    ENTRY2D92:  preds = []
      real time23DB#3 = +inf;
      int face23DD#3 = -1;
      real faceTime23DF#4 = -inf;
      string _t23E1#4 = "\ntest :";
      real _t23E3#11 = 0.57735026919e0;
      tensor[3] _t23EB#15 = <tensor[3]>[_t23E3,_t23E3,_t23E3];
      real _t23EF#1 = λ(T0[],T1[3],T2[3])<(T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))> (_t23E3,_t23EB,refPos23D8);
      real _t23F9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t23EB,dPos23D9);
      real _t23FB#7 = λ(T0[],T1[3],T2[3],T3[3],T4[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( Σ(i0=0..2)<((T1_{i0} * T4_{i0}))>(i0=0..2))> (_t23E3,_t23EB,refPos23D8,_t23EB,dPos23D9);
      string _t23FD#4 = " test2: ";
      string _t2409#4 = " insideTest: ";
      real _t240B#4 = 0.1e1;
      real _t240D#8 = 0.1e-7;
      real _t240F#5 = λ(T0[],T1[])<(T0 + T1)> (_t240B,_t240D);
      tensor[3] _t2417#5 = <tensor[3]>[_t240B,_t240B,_t240B];
      tensor[3] _t2435#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[3])<(T0_{i0} + (((T1) - (Σ(i2=0..2)<((T2_{i2} * T0_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T2_{i2} * T5_{i2}))>(i2=0..2)) * T5_{i0}))>_{3} (refPos23D8,_t23E3,_t23EB,refPos23D8,_t23EB,dPos23D9,dPos23D9);
      real _t2437#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (((T2) - (Σ(i2=0..2)<((T3_{i2} * T1_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T3_{i2} * T6_{i2}))>(i2=0..2)) * T6_{i0}))))>(i0=0..2)> (_t2417,refPos23D8,_t23E3,_t23EB,refPos23D8,_t23EB,dPos23D9,dPos23D9);
      bool _t2439#1 = GT<real>(_t240F,_t2437);
      tensor[3] _t2441#5 = <tensor[3]>[_t240D,_t240D,_t240D];
      tensor[3] _t2461#3 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<(T0_{i0} + T1_{i0} + (((T2) - (Σ(i3=0..2)<((T3_{i3} * T1_{i3}))>(i3=0..2))) / ( Σ(i3=0..2)<((T3_{i3} * T6_{i3}))>(i3=0..2)) * T6_{i0}))>_{3} (_t2441,refPos23D8,_t23E3,_t23EB,refPos23D8,_t23EB,dPos23D9,dPos23D9);
      real _t2463#1 = TensorIndex<tensor[3],[0]>(_t2461);
      real _t2465#15 = -0.e0;
      bool _t2467#1 = GT<real>(_t2463,_t2465);
      real _t2491#1 = TensorIndex<tensor[3],[1]>(_t2461);
      bool _t2495#1 = GT<real>(_t2491,_t2465);
      real _t24BF#1 = TensorIndex<tensor[3],[2]>(_t2461);
      bool _t24C3#1 = GT<real>(_t24BF,_t2465);
      bool _t24C5#1 = BAnd(_t2495,_t24C3);
      bool _t24C7#1 = BAnd(_t2467,_t24C5);
      bool _t24C9#1 = BAnd(_t2439,_t24C7);
      string _t24CB#4 = " dist: ";
      real _t24DB#1 = λ(T0[],T1[3],T2[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2)))> (_t23E3,_t23EB,refPos23D8);
      string _t24DD#4 = "signed dist: ";
      string _t24ED#4 = " face: ";
      int _t24EF#3 = 0;
      string _t24F1#4 = " place: ";
      string _t2511#4 = " error: ";
      real _t253F#1 = λ(T0[],T1[3],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * (T2_{i0} + (((T0) - (Σ(i2=0..2)<((T1_{i2} * T2_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T1_{i2} * T7_{i2}))>(i2=0..2)) * T7_{i0}))))>(i0=0..2)))> (_t23E3,_t23EB,refPos23D8,_t23E3,_t23EB,refPos23D8,_t23EB,dPos23D9,dPos23D9);
      string _t2541#4 = " offset :";
      string _t2543#4 = " dp: ";
      string _t2545#4 = " otherPossibleTime: ";
      string _t2547#15 = "\n";
      string _t2549#4 = "\n original face: ";
      string _t254B#4 = " ";
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t23FB,_t23FD,_t23F9,_t2409,_t24C9,_t24CB,_t24DB,_t24DD,_t23EF,_t24ED,_t24EF,_t24F1,_t2435,_t2511,_t253F,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime23DF,_t2547,_t2549,i23DA,_t254B);
      real _t2568#4 = -0.1e-7;
      bool _t256A#1 = GTE<real>(_t23FB,_t2568);
      bool _t2586#2 = GT<real>(time23DB,_t23FB);
      real _t2592#1 = λ(T0[3],T1[3])<Abs(Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2))> (_t23EB,dPos23D9);
      bool _t2596#1 = GTE<real>(_t2592,_t240D);
      bool _t2598#1 = BAnd(_t2586,_t2596);
      bool _t259A#1 = BAnd(_t256A,_t2598);
      if _t259A then goto ASSIGN31D9 else goto JOIN259C
    ASSIGN31D9:  preds = [COND261F]
      bool _t259F#1 = NEQ<int>(i23DA,_t24EF);
      if _t259F then goto ASSIGN25A3 else goto ASSIGN2617
    ASSIGN25A3:  preds = [COND261B]
      string _t25A2#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t25A2,_t23FB,_t2586,_t2547);
      goto JOIN25A1
    JOIN25A1:  preds = [MASSIGN31DB,MASSIGN31DA]
      real faceTime2614#1 = phi(faceTime23DF,_t23FB)
      int face25F9#1 = phi(_t24EF,face23DD)
      real time25F6#1 = phi(_t23FB,time23DB)
      goto JOIN259C
    JOIN259C:  preds = [JOIN25A1,COND261F]
      real faceTime261E#3 = phi(faceTime2614,faceTime23DF)
      int face261D#2 = phi(face25F9,face23DD)
      real time261C#3 = phi(time25F6,time23DB)
      real _t2622#32 = 0.e0;
      real _t2624#5 = -0.1e1;
      tensor[3] _t262A#15 = <tensor[3]>[_t2624,_t2622,_t2622];
      real _t262E#1 = λ(T0[],T1[3],T2[3])<(T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))> (_t2622,_t262A,refPos23D8);
      real _t2638#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t262A,dPos23D9);
      real _t263A#7 = λ(T0[],T1[3],T2[3],T3[3],T4[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( Σ(i0=0..2)<((T1_{i0} * T4_{i0}))>(i0=0..2))> (_t2622,_t262A,refPos23D8,_t262A,dPos23D9);
      tensor[3] _t2674#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[3])<(T0_{i0} + (((T1) - (Σ(i2=0..2)<((T2_{i2} * T0_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T2_{i2} * T5_{i2}))>(i2=0..2)) * T5_{i0}))>_{3} (refPos23D8,_t2622,_t262A,refPos23D8,_t262A,dPos23D9,dPos23D9);
      real _t2676#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (((T2) - (Σ(i2=0..2)<((T3_{i2} * T1_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T3_{i2} * T6_{i2}))>(i2=0..2)) * T6_{i0}))))>(i0=0..2)> (_t2417,refPos23D8,_t2622,_t262A,refPos23D8,_t262A,dPos23D9,dPos23D9);
      bool _t2678#1 = GT<real>(_t240F,_t2676);
      tensor[3] _t26A0#3 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<(T0_{i0} + T1_{i0} + (((T2) - (Σ(i3=0..2)<((T3_{i3} * T1_{i3}))>(i3=0..2))) / ( Σ(i3=0..2)<((T3_{i3} * T6_{i3}))>(i3=0..2)) * T6_{i0}))>_{3} (_t2441,refPos23D8,_t2622,_t262A,refPos23D8,_t262A,dPos23D9,dPos23D9);
      real _t26A2#1 = TensorIndex<tensor[3],[0]>(_t26A0);
      bool _t26A6#1 = GT<real>(_t26A2,_t2465);
      real _t26D0#1 = TensorIndex<tensor[3],[1]>(_t26A0);
      bool _t26D4#1 = GT<real>(_t26D0,_t2465);
      real _t26FE#1 = TensorIndex<tensor[3],[2]>(_t26A0);
      bool _t2702#1 = GT<real>(_t26FE,_t2465);
      bool _t2704#1 = BAnd(_t26D4,_t2702);
      bool _t2706#1 = BAnd(_t26A6,_t2704);
      bool _t2708#1 = BAnd(_t2678,_t2706);
      real _t271A#1 = λ(T0[],T1[3],T2[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2)))> (_t2622,_t262A,refPos23D8);
      int _t272E#3 = 1;
      real _t277E#1 = λ(T0[],T1[3],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * (T2_{i0} + (((T0) - (Σ(i2=0..2)<((T1_{i2} * T2_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T1_{i2} * T7_{i2}))>(i2=0..2)) * T7_{i0}))))>(i0=0..2)))> (_t2622,_t262A,refPos23D8,_t2622,_t262A,refPos23D8,_t262A,dPos23D9,dPos23D9);
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t263A,_t23FD,_t2638,_t2409,_t2708,_t24CB,_t271A,_t24DD,_t262E,_t24ED,_t272E,_t24F1,_t2674,_t2511,_t277E,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime261E,_t2547,_t2549,i23DA,_t254B);
      bool _t27A9#1 = GTE<real>(_t263A,_t2568);
      bool _t27C5#2 = GT<real>(time261C,_t263A);
      real _t27D1#1 = λ(T0[3],T1[3])<Abs(Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2))> (_t262A,dPos23D9);
      bool _t27D5#1 = GTE<real>(_t27D1,_t240D);
      bool _t27D7#1 = BAnd(_t27C5,_t27D5);
      bool _t27D9#1 = BAnd(_t27A9,_t27D7);
      if _t27D9 then goto ASSIGN31EF else goto JOIN27DB
    ASSIGN31EF:  preds = [COND285E]
      bool _t27DE#1 = NEQ<int>(i23DA,_t272E);
      if _t27DE then goto ASSIGN27E2 else goto ASSIGN2856
    ASSIGN27E2:  preds = [COND285A]
      string _t27E1#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t27E1,_t263A,_t27C5,_t2547);
      goto JOIN27E0
    JOIN27E0:  preds = [MASSIGN31F1,MASSIGN31F0]
      real faceTime2853#1 = phi(faceTime261E,_t263A)
      int face2838#1 = phi(_t272E,face261D)
      real time2835#1 = phi(_t263A,time261C)
      goto JOIN27DB
    JOIN27DB:  preds = [JOIN27E0,COND285E]
      real faceTime285D#3 = phi(faceTime2853,faceTime261E)
      int face285C#2 = phi(face2838,face261D)
      real time285B#3 = phi(time2835,time261C)
      tensor[3] _t2869#15 = <tensor[3]>[_t2622,_t2624,_t2622];
      real _t286D#1 = λ(T0[],T1[3],T2[3])<(T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))> (_t2622,_t2869,refPos23D8);
      real _t2877#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2869,dPos23D9);
      real _t2879#7 = λ(T0[],T1[3],T2[3],T3[3],T4[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( Σ(i0=0..2)<((T1_{i0} * T4_{i0}))>(i0=0..2))> (_t2622,_t2869,refPos23D8,_t2869,dPos23D9);
      tensor[3] _t28B3#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[3])<(T0_{i0} + (((T1) - (Σ(i2=0..2)<((T2_{i2} * T0_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T2_{i2} * T5_{i2}))>(i2=0..2)) * T5_{i0}))>_{3} (refPos23D8,_t2622,_t2869,refPos23D8,_t2869,dPos23D9,dPos23D9);
      real _t28B5#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (((T2) - (Σ(i2=0..2)<((T3_{i2} * T1_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T3_{i2} * T6_{i2}))>(i2=0..2)) * T6_{i0}))))>(i0=0..2)> (_t2417,refPos23D8,_t2622,_t2869,refPos23D8,_t2869,dPos23D9,dPos23D9);
      bool _t28B7#1 = GT<real>(_t240F,_t28B5);
      tensor[3] _t28DF#3 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<(T0_{i0} + T1_{i0} + (((T2) - (Σ(i3=0..2)<((T3_{i3} * T1_{i3}))>(i3=0..2))) / ( Σ(i3=0..2)<((T3_{i3} * T6_{i3}))>(i3=0..2)) * T6_{i0}))>_{3} (_t2441,refPos23D8,_t2622,_t2869,refPos23D8,_t2869,dPos23D9,dPos23D9);
      real _t28E1#1 = TensorIndex<tensor[3],[0]>(_t28DF);
      bool _t28E5#1 = GT<real>(_t28E1,_t2465);
      real _t290F#1 = TensorIndex<tensor[3],[1]>(_t28DF);
      bool _t2913#1 = GT<real>(_t290F,_t2465);
      real _t293D#1 = TensorIndex<tensor[3],[2]>(_t28DF);
      bool _t2941#1 = GT<real>(_t293D,_t2465);
      bool _t2943#1 = BAnd(_t2913,_t2941);
      bool _t2945#1 = BAnd(_t28E5,_t2943);
      bool _t2947#1 = BAnd(_t28B7,_t2945);
      real _t2959#1 = λ(T0[],T1[3],T2[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2)))> (_t2622,_t2869,refPos23D8);
      int _t296D#3 = 2;
      real _t29BD#1 = λ(T0[],T1[3],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * (T2_{i0} + (((T0) - (Σ(i2=0..2)<((T1_{i2} * T2_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T1_{i2} * T7_{i2}))>(i2=0..2)) * T7_{i0}))))>(i0=0..2)))> (_t2622,_t2869,refPos23D8,_t2622,_t2869,refPos23D8,_t2869,dPos23D9,dPos23D9);
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t2879,_t23FD,_t2877,_t2409,_t2947,_t24CB,_t2959,_t24DD,_t286D,_t24ED,_t296D,_t24F1,_t28B3,_t2511,_t29BD,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime285D,_t2547,_t2549,i23DA,_t254B);
      bool _t29E8#1 = GTE<real>(_t2879,_t2568);
      bool _t2A04#2 = GT<real>(time285B,_t2879);
      real _t2A10#1 = λ(T0[3],T1[3])<Abs(Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2))> (_t2869,dPos23D9);
      bool _t2A14#1 = GTE<real>(_t2A10,_t240D);
      bool _t2A16#1 = BAnd(_t2A04,_t2A14);
      bool _t2A18#1 = BAnd(_t29E8,_t2A16);
      if _t2A18 then goto ASSIGN3206 else goto JOIN2A1A
    ASSIGN3206:  preds = [COND2A9D]
      bool _t2A1D#1 = NEQ<int>(i23DA,_t296D);
      if _t2A1D then goto ASSIGN2A21 else goto ASSIGN2A95
    ASSIGN2A21:  preds = [COND2A99]
      string _t2A20#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t2A20,_t2879,_t2A04,_t2547);
      goto JOIN2A1F
    JOIN2A1F:  preds = [MASSIGN3208,MASSIGN3207]
      real faceTime2A92#1 = phi(faceTime285D,_t2879)
      int face2A77#1 = phi(_t296D,face285C)
      real time2A74#1 = phi(_t2879,time285B)
      goto JOIN2A1A
    JOIN2A1A:  preds = [JOIN2A1F,COND2A9D]
      real faceTime2A9C#3 = phi(faceTime2A92,faceTime285D)
      int face2A9B#2 = phi(face2A77,face285C)
      real time2A9A#3 = phi(time2A74,time285B)
      tensor[3] _t2AA8#15 = <tensor[3]>[_t2622,_t2622,_t2624];
      real _t2AAC#1 = λ(T0[],T1[3],T2[3])<(T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))> (_t2622,_t2AA8,refPos23D8);
      real _t2AB6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2AA8,dPos23D9);
      real _t2AB8#7 = λ(T0[],T1[3],T2[3],T3[3],T4[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( Σ(i0=0..2)<((T1_{i0} * T4_{i0}))>(i0=0..2))> (_t2622,_t2AA8,refPos23D8,_t2AA8,dPos23D9);
      tensor[3] _t2AF2#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[3])<(T0_{i0} + (((T1) - (Σ(i2=0..2)<((T2_{i2} * T0_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T2_{i2} * T5_{i2}))>(i2=0..2)) * T5_{i0}))>_{3} (refPos23D8,_t2622,_t2AA8,refPos23D8,_t2AA8,dPos23D9,dPos23D9);
      real _t2AF4#1 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (((T2) - (Σ(i2=0..2)<((T3_{i2} * T1_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T3_{i2} * T6_{i2}))>(i2=0..2)) * T6_{i0}))))>(i0=0..2)> (_t2417,refPos23D8,_t2622,_t2AA8,refPos23D8,_t2AA8,dPos23D9,dPos23D9);
      bool _t2AF6#1 = GT<real>(_t240F,_t2AF4);
      tensor[3] _t2B1E#3 = λ(T0[3],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[3])<(T0_{i0} + T1_{i0} + (((T2) - (Σ(i3=0..2)<((T3_{i3} * T1_{i3}))>(i3=0..2))) / ( Σ(i3=0..2)<((T3_{i3} * T6_{i3}))>(i3=0..2)) * T6_{i0}))>_{3} (_t2441,refPos23D8,_t2622,_t2AA8,refPos23D8,_t2AA8,dPos23D9,dPos23D9);
      real _t2B20#1 = TensorIndex<tensor[3],[0]>(_t2B1E);
      bool _t2B24#1 = GT<real>(_t2B20,_t2465);
      real _t2B4E#1 = TensorIndex<tensor[3],[1]>(_t2B1E);
      bool _t2B52#1 = GT<real>(_t2B4E,_t2465);
      real _t2B7C#1 = TensorIndex<tensor[3],[2]>(_t2B1E);
      bool _t2B80#1 = GT<real>(_t2B7C,_t2465);
      bool _t2B82#1 = BAnd(_t2B52,_t2B80);
      bool _t2B84#1 = BAnd(_t2B24,_t2B82);
      bool _t2B86#1 = BAnd(_t2AF6,_t2B84);
      real _t2B98#1 = λ(T0[],T1[3],T2[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2)))> (_t2622,_t2AA8,refPos23D8);
      int _t2BAC#3 = 3;
      real _t2BFC#1 = λ(T0[],T1[3],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[3])<Abs((T0) - (Σ(i0=0..2)<((T1_{i0} * (T2_{i0} + (((T0) - (Σ(i2=0..2)<((T1_{i2} * T2_{i2}))>(i2=0..2))) / ( Σ(i2=0..2)<((T1_{i2} * T7_{i2}))>(i2=0..2)) * T7_{i0}))))>(i0=0..2)))> (_t2622,_t2AA8,refPos23D8,_t2622,_t2AA8,refPos23D8,_t2AA8,dPos23D9,dPos23D9);
      Print<[string,real,string,real,string,bool,string,real,string,real,string,int,string,tensor[3],string,real,string,tensor[3],string,tensor[3],string,real,string,string,int,string]>(_t23E1,_t2AB8,_t23FD,_t2AB6,_t2409,_t2B86,_t24CB,_t2B98,_t24DD,_t2AAC,_t24ED,_t2BAC,_t24F1,_t2AF2,_t2511,_t2BFC,_t2541,refPos23D8,_t2543,dPos23D9,_t2545,faceTime2A9C,_t2547,_t2549,i23DA,_t254B);
      bool _t2C27#1 = GTE<real>(_t2AB8,_t2568);
      bool _t2C43#2 = GT<real>(time2A9A,_t2AB8);
      real _t2C4F#1 = λ(T0[3],T1[3])<Abs(Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2))> (_t2AA8,dPos23D9);
      bool _t2C53#1 = GTE<real>(_t2C4F,_t240D);
      bool _t2C55#1 = BAnd(_t2C43,_t2C53);
      bool _t2C57#1 = BAnd(_t2C27,_t2C55);
      if _t2C57 then goto ASSIGN321D else goto JOIN2C59
    ASSIGN321D:  preds = [COND2CDC]
      bool _t2C5C#1 = NEQ<int>(i23DA,_t2BAC);
      if _t2C5C then goto ASSIGN2C60 else goto ASSIGN2CD4
    ASSIGN2C60:  preds = [COND2CD8]
      string _t2C5F#1 = "Saving at this face!";
      Print<[string,real,bool,string]>(_t2C5F,_t2AB8,_t2C43,_t2547);
      goto JOIN2C5E
    JOIN2C5E:  preds = [MASSIGN321F,MASSIGN321E]
      real faceTime2CD1#1 = phi(faceTime2A9C,_t2AB8)
      int face2CB6#1 = phi(_t2BAC,face2A9B)
      real time2CB3#1 = phi(_t2AB8,time2A9A)
      goto JOIN2C59
    JOIN2C59:  preds = [JOIN2C5E,COND2CDC]
      real faceTime2CDB#2 = phi(faceTime2CD1,faceTime2A9C)
      int face2CDA#2 = phi(face2CB6,face2A9B)
      real time2CD9#1 = phi(time2CB3,time2A9A)
      bool _t2CDF#1 = NEQ<int>(face2CDA,face23DD);
      real _t2CF1#3 = Max<real>(time2CD9,_t2622);
      real _t2CF7#1 = λ(T0[3],T1[3],T2[],T3[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (T2 * T3_{i0}))))>(i0=0..2)> (_t2417,refPos23D8,_t2CF1,dPos23D9);
      bool _t2CF9#1 = GT<real>(_t240F,_t2CF7);
      tensor[3] _t2D0B#3 = λ(T0[3],T1[3],T2[],T3[3])<(T0_{i0} + T1_{i0} + (T2 * T3_{i0}))>_{3} (_t2441,refPos23D8,_t2CF1,dPos23D9);
      real _t2D0D#1 = TensorIndex<tensor[3],[0]>(_t2D0B);
      bool _t2D11#1 = GT<real>(_t2D0D,_t2465);
      real _t2D25#1 = TensorIndex<tensor[3],[1]>(_t2D0B);
      bool _t2D29#1 = GT<real>(_t2D25,_t2465);
      real _t2D3D#1 = TensorIndex<tensor[3],[2]>(_t2D0B);
      bool _t2D41#1 = GT<real>(_t2D3D,_t2465);
      bool _t2D43#1 = BAnd(_t2D29,_t2D41);
      bool _t2D45#1 = BAnd(_t2D11,_t2D43);
      bool _t2D47#1 = BAnd(_t2CF9,_t2D45);
      bool _t2D49#1 = BAnd(_t2CDF,_t2D47);
      if _t2D49 then goto ASSIGN2D4D else goto ASSIGN322A
    ASSIGN2D4D:  preds = [COND2D90]
      string _t2D4C#1 = "\nReturning via standard : ";
      real _t2D52#1 = IntToReal(face2CDA);
      tensor[2] _t2D54#2 = <tensor[2]>[_t2CF1,_t2D52];
      Print<[string,tensor[2],string]>(_t2D4C,_t2D54,_t2547);
      return _t2D54
      goto JOIN2D4B
    JOIN2D4B:  preds = [*RETURN(_t2D54)3233,*JOIN2D66]
      unreachable
    ASSIGN322A:  preds = [COND2D90]
      bool _t2D64#1 = EQ<real>(faceTime23DF,faceTime2CDB);
      if _t2D64 then goto ASSIGN2D68 else goto ASSIGN2D7A
    ASSIGN2D68:  preds = [COND2D8F]
      string _t2D67#1 = "\nReturning via fail : ";
      tensor[2] _t2D6D#2 = <tensor[2]>[_t2624,_t2624];
      Print<[string,tensor[2],string]>(_t2D67,_t2D6D,_t2547);
      return _t2D6D
      goto JOIN2D66
    JOIN2D66:  preds = [*RETURN(_t2D6D)3230,*RETURN(_t2D81)322D]
      goto JOIN2D4B
    ASSIGN2D7A:  preds = [COND2D8F]
      string _t2D79#1 = "\nReturning via backup : ";
      real _t2D7D#1 = Max<real>(faceTime2CDB,_t2622);
      real _t2D7F#1 = IntToReal(i23DA);
      tensor[2] _t2D81#2 = <tensor[2]>[_t2D7D,_t2D7F];
      Print<[string,tensor[2],string]>(_t2D79,_t2D81,_t2547);
      return _t2D81
      goto JOIN2D66
    ASSIGN2CD4:  preds = [COND2CD8]
      string _t2CD3#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2CD3,_t2AB8,_t2547);
      goto JOIN2C5E
    ASSIGN2A95:  preds = [COND2A99]
      string _t2A94#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2A94,_t2879,_t2547);
      goto JOIN2A1F
    ASSIGN2856:  preds = [COND285A]
      string _t2855#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2855,_t263A,_t2547);
      goto JOIN27E0
    ASSIGN2617:  preds = [COND261B]
      string _t2616#1 = "Saving backup time: ";
      Print<[string,real,string]>(_t2616,_t23FB,_t2547);
      goto JOIN25A1
}
  function femData:MeshPos fn_2FB2DF4 (femData:MeshPos x2D94#5, tensor[3] dPos2D95#1) {
    ENTRY2DF3:  preds = []
      femData:Mesh meshData2D97#1 = globals.meshData1742;
      int timeSteps2D96#1 = globals.timeSteps1745;
      bool _t2D9A#1 = ExtractFemItem<bool,Valid(MeshPos)>(x2D94);
      bool _t2D9C#1 = BNot(_t2D9A);
      if _t2D9C then goto RETURN(x2D94)2D9F else goto JOIN2D9E
    RETURN(x2D94)2D9F:  preds = [COND2DA0]
      return x2D94
      goto JOIN2D9E
    JOIN2D9E:  preds = [*RETURN(x2D94)2D9F,COND2DA0]
      int _t2DA5#1 = 0;
      int[] _t2DA7#1 = Range(_t2DA5,timeSteps2D96);
    FOREACH2DAA:  preds = [ASSIGN2DA8,*NEXT2DDA]
      foreach (i2DA9 in _t2DA7) on exit goto ASSIGN2DDC
      return
      goto FOREACH2DAA
    ASSIGN2DDC:  preds = [FOREACH2DAA]
      string _t2DDB#1 = "Took stupid way out!\n";
      Print<[string]>(_t2DDB);
      tensor[3] _t2DDF#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x2D94);
      int _t2DE1#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x2D94);
      femData:Mesh _t2DE3#2 = ExtractFem<femData:Mesh,femData:MeshPos>(x2D94);
      tensor[3] _t2DEE#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3])<(Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3) + T4_{i0})>_{3} (_t2DE1,_t2DE3,_t2DE3,_t2DDF,dPos2D95);
      femData:MeshPos cmp2DF0#1 = findPos1803 (meshData2D97,_t2DEE);
      return cmp2DF0
}
## input initialization
  ENTRY1758:  preds = []
    int timeSteps174C#1 = 32;
    globals.timeSteps1745 = timeSteps174C;
    real timeEps174F#1 = 0.1e-6;
    globals.timeEps1746 = timeEps174F;
    real stepSize1752#1 = 0.1e-1;
    globals.stepSize1748 = stepSize1752;
    int stepMax1755#1 = 300;
    globals.stepMax1749 = stepMax1755;
    return
## global-variable initialization
  ENTRY2E2E:  preds = []
    femData:Mesh meshData2DF7#3 = globals.meshData1742;
    femData:Space 0space0409_intermedateGlobal2DF6#1 = globals.0space0409_intermedateGlobal1743;
    femData:FemFunc 0data040B_intermedateGlobal2DF5#1 = globals.0data040B_intermedateGlobal1744;
    int _t2DFB#1 = 0;
    int _t2DFD#1 = 1;
    int _t2DFF#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData2DF7);
    int _t2E01#1 = ISub(_t2DFF,_t2DFD);
    int[] _t2E03#1 = Range(_t2DFB,_t2E01);
    femData:MeshCell[] _t2E05#1 = <femData:MeshCell[]>{};
  FOREACH2E09:  preds = [ASSIGN2E06,NEXT2E0E]
    foreach (_t2E07 in _t2E03) on exit goto ASSIGN2E10
      femData:MeshCell[] _t2E08#1 = phi(_t2E05,_t2E0C)
    femData:MeshCell _t2E0A#1 = LoadFem<femData:MeshCell>(meshData2DF7,_t2E07);
    femData:MeshCell[] _t2E0C#1 = Append<femData:MeshCell>(_t2E08,_t2E0A);
    goto FOREACH2E09
  ASSIGN2E10:  preds = [FOREACH2E09]
    femData:Space space2E0F#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal2DF6,meshData2DF7);
    femData:FemFunc data2E12#2 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal2DF5,space2E0F);
    globals.data175B = data2E12;
    femData:Space _t2E15#2 = ExtractFem<femData:Space,femData:FemFunc>(data2E12);
    femData:Mesh _t2E19#1 = ExtractFem<femData:Mesh,femData:Space>(_t2E15);
    globals._t32EA = _t2E19;
    globals._tX32ED = _t2E15;
    return
## strand
  strand gg (tensor[3] startPos2E38#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY2E5B:  preds = []
        femData:Mesh meshData2E3F#1 = globals.meshData1742;
        tensor[3][0] _t2E47#1 = <tensor[3][0]>{};
        tensor[3][] _t2E49#1 = MkDynamic<tensor[3],0>(_t2E47);
        tensor[3][0] _t2E4D#1 = <tensor[3][0]>{};
        tensor[3][] _t2E4F#1 = MkDynamic<tensor[3],0>(_t2E4D);
        int step2E53#1 = 0;
        femData:MeshPos cPos2E55#1 = findPos1803 (meshData2E3F,startPos2E38);
        self.stream = _t2E49;
        self.newStream = _t2E4F;
        self.step = step2E53;
        self.cPos = cPos2E55;
        self.altCPos = startPos2E38;
        self.startPos = startPos2E38;
        return
    end state init
    method update
        ENTRY3171:  preds = []
          femData:Mesh _t32EB#64 = globals._t32EA;
          femData:Space _t32EE#16 = globals._tX32ED;
          femData:FemFunc data32EF#16 = globals.data175B;
          femData:Mesh meshData2E69#2 = globals.meshData1742;
          femData:FemFunc data2E68#2 = globals.data175B;
          real stepSize2E67#17 = globals.stepSize1748;
          int stepMax2E66#1 = globals.stepMax1749;
          tensor[3,3] M2E65#4 = globals.M174A;
          tensor[3] center2E64#4 = globals.center174B;
          tensor[3][] stream2E71#2 = self.stream;
          tensor[3][] newStream2E72#2 = self.newStream;
          int step2E73#5 = self.step;
          femData:MeshPos cPos2E74#9 = self.cPos;
          tensor[3] altCPos2E75#22 = self.altCPos;
          tensor[3] startPos2E76#6 = self.startPos;
          int _t2E7D#1 = 0;
          bool _t2E7F#1 = EQ<int>(step2E73,_t2E7D);
          if _t2E7F then goto ASSIGN2E83 else goto JOIN2E81
        ASSIGN2E83:  preds = [COND2EC8]
          bool _t2E82#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          if _t2E82 then goto ASSIGN2E86 else goto JOIN2E84
        ASSIGN2E86:  preds = [COND2EC7]
          tensor[3] rp2E85#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          real _t2E87#1 = TensorIndex<tensor[3],[0]>(rp2E85);
          real _t2E89#3 = 0.1e-5;
          bool _t2E8B#1 = LTE<real>(_t2E87,_t2E89);
          if _t2E8B then goto STABILIZE2E8E else goto JOIN2E8D
        STABILIZE2E8E:  preds = [COND2E94]
          stabilize
          goto JOIN2E8D
        JOIN2E8D:  preds = [*STABILIZE2E8E,COND2E94]
          real _t2E95#1 = TensorIndex<tensor[3],[1]>(rp2E85);
          bool _t2E99#1 = LTE<real>(_t2E95,_t2E89);
          if _t2E99 then goto STABILIZE2E9C else goto JOIN2E9B
        STABILIZE2E9C:  preds = [COND2EA2]
          stabilize
          goto JOIN2E9B
        JOIN2E9B:  preds = [*STABILIZE2E9C,COND2EA2]
          real _t2EA3#1 = TensorIndex<tensor[3],[2]>(rp2E85);
          bool _t2EA7#1 = LTE<real>(_t2EA3,_t2E89);
          if _t2EA7 then goto STABILIZE2EAA else goto JOIN2EA9
        STABILIZE2EAA:  preds = [COND2EB0]
          stabilize
          goto JOIN2EA9
        JOIN2EA9:  preds = [*STABILIZE2EAA,COND2EB0]
          real _t2EB1#3 = 0.1e1;
          tensor[3] _t2EB7#1 = <tensor[3]>[_t2EB1,_t2EB1,_t2EB1];
          real r2EB9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EB7,rp2E85);
          real _t2EBB#1 = 0.9999999e0;
          bool _t2EBD#1 = LTE<real>(_t2EBB,r2EB9);
          if _t2EBD then goto STABILIZE2EC0 else goto JOIN2EBF
        STABILIZE2EC0:  preds = [COND2EC6]
          stabilize
          goto JOIN2EBF
        JOIN2EBF:  preds = [*STABILIZE2EC0,COND2EC6]
          goto JOIN2E84
        JOIN2E84:  preds = [JOIN2EBF,COND2EC7]
          goto JOIN2E81
        JOIN2E81:  preds = [JOIN2E84,COND2EC8]
          bool _t2EC9#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2E74);
          femData:MeshPos _t2ECB#6 = findPos1803 (meshData2E69,altCPos2E75);
          bool _t2ECD#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t2ECB);
          bool _t2ECF#1 = NEQ<bool>(_t2EC9,_t2ECD);
          if _t2ECF then goto ASSIGN2ED3 else goto JOIN2ED1
        ASSIGN2ED3:  preds = [COND2ED7]
          string _t2ED2#1 = "ERG:Warning of validity startPos:";
          string _t2ED4#1 = "\n";
          Print<[string,tensor[3],string]>(_t2ED2,startPos2E76,_t2ED4);
          goto JOIN2ED1
        JOIN2ED1:  preds = [MASSIGN2ED6,COND2ED7]
          bool _t2EDB#2 = BNot(_t2EC9);
          if _t2EDB then goto ASSIGN2EE0 else goto ASSIGN3244
        ASSIGN2EE0:  preds = [COND2EF1]
          bool _t2EDE#1 = true;
          goto JOIN2EDD
        JOIN2EDD:  preds = [ASSIGN2EE0,JOIN2EE8]
          bool _t2EDF#1 = phi(_t2EDE,_t2EEA)
          if _t2EDF then goto ASSIGN2EF4 else goto JOIN2EF2
        ASSIGN2EF4:  preds = [COND2F18]
          string _t2EF3#1 = "Went off the mesh\?";
          string _t2EF9#2 = " and ";
          bool _t2F01#1 = BNot(_t2ECD);
          string _t2F03#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t2EF3,_t2EDB,_t2EF9,altCPos2E75,_t2EF9,_t2F01,_t2F03);
          string _t2F06#1 = "Pos is:";
          tensor[3] _t2F08#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          Print<[string,tensor[3],string]>(_t2F06,_t2F08,_t2F03);
          Print<[tensor[3][],string,tensor[3][],string]>(stream2E71,_t2F03,newStream2E72,_t2F03);
          stabilize
          goto JOIN2EF2
        JOIN2EF2:  preds = [*STABILIZE2F12,COND2F18]
          tensor[3] _t2F1A#5 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2E74);
          int _t2F1C#6 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2E74);
          femData:Mesh _t2F1E#8 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2E74);
          tensor[3] _t2F23#2 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{3} (_t2F1C,_t2F1E,_t2F1E,_t2F1A);
          tensor[3][1] _t2F29#1 = <tensor[3][1]>{_t2F23};
          tensor[3][] _t2F2B#1 = MkDynamic<tensor[3],1>(_t2F29);
          tensor[3][] stream2F2D#4 = Concat<tensor[3]>(stream2E71,_t2F2B);
          tensor[3][1] _t2F2F#1 = <tensor[3][1]>{altCPos2E75};
          tensor[3][] _t2F31#1 = MkDynamic<tensor[3],1>(_t2F2F);
          tensor[3][] newStream2F33#4 = Concat<tensor[3]>(newStream2E72,_t2F31);
          real _t2F47#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3])<Sqrt(Σ(i0=0..2)<(((Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0}) * (Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0})))>(i0=0..2))> (_t2F1C,_t2F1E,_t2F1E,_t2F1A,altCPos2E75);
          real _t2F49#5 = 0.1e-5;
          bool _t2F4B#1 = GT<real>(_t2F47,_t2F49);
          if _t2F4B then goto ASSIGN2F4F else goto ASSIGN2F95
        ASSIGN2F4F:  preds = [COND2F9F]
          string _t2F4E#1 = "ERG:Error in tracing 1: At step:";
          string _t2F50#1 = " with particle:";
          string _t2F52#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t2F4E,step2E73,_t2F50,startPos2E76,_t2F52);
          string _t2F55#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t2F55,_t2F23,altCPos2E75,_t2F52);
          string _t2F6A#1 = "Cells are:";
          femData:MeshCell _t2F70#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          string _t2F72#2 = " and ";
          femData:Mesh _t2F76#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t2ECB);
          int _t2F7A#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t2ECB);
          femData:MeshCell _t2F7C#1 = LoadFem<femData:MeshCell>(_t2F76,_t2F7A);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t2F6A,_t2F70,_t2F72,_t2F7C,_t2F52);
          string _t2F81#1 = "Ref poses are:";
          tensor[3] _t2F89#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t2ECB);
          Print<[string,tensor[3],string,tensor[3],string]>(_t2F81,_t2F1A,_t2F72,_t2F89,_t2F52);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          stabilize
          goto JOIN2F4D
        JOIN2F4D:  preds = [*STABILIZE2F8E,MASSIGN2F9E]
          real _t2FA0#9 = 0.5e0;
          if _t2EC9 then goto ASSIGN3254 else goto ASSIGN2FE7
        ASSIGN3254:  preds = [COND2FED]
          femData:MeshCell c2FBA#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          int _t2FBF#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2FBA);
          femData:FuncCell _t2FC1#2 = LoadFem<femData:FuncCell>(data2E68,_t2FBF);
          femData:FemFunc _t2FC5#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2FC1);
          femData:Space _t2FD0#2 = ExtractFem<femData:Space,femData:FemFunc>(_t2FC5);
          int _t2FD9#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2FC1);
          tensor[3] _t2FE1#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],INT4,FEM(fns_t)5,FEM(func_t)6,T7[3])<(Probe(femV(noFunc, 0, 1, 2)_{i0}⊛Basis(),T3)) / ( Sqrt(Σ(i1=0..2)<((Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3) * Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3)))>(i1=0..2)))>_{3} (_t2FD9,_t2FD0,_t2FC5,_t2F1A,_t2FD9,_t2FD0,_t2FC5,_t2F1A);
          goto JOIN2FB5
        JOIN2FB5:  preds = [ASSIGN32C8,ASSIGN2FEA]
          tensor[3] _t2FE4#3 = phi(_t2FE1,_t2FE9)
          tensor[3] up12FEE#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2FA0,stepSize2E67,_t2FE4);
          real _t300B#1 = λ(T0[],T1[],T2[3],T3[],T4[],T5[3 3],T6[3],T7[3],T8[3 3],T9[3],T10[3])<Sqrt(Σ(i0=0..2)<((((T0 * T1 * T2_{i0})) - (((T0 * T1 * Σ(i4=0..2)<((T5_{i0,i4} * (T6_{i4}) - (T7_{i4})))>(i4=0..2))) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)<((T5_{i4,i5} * (T6_{i5}) - (T7_{i5})))>(i5=0..2) * Σ(i5=0..2)<((T5_{i4,i5} * (T6_{i5}) - (T7_{i5})))>(i5=0..2)))>(i4=0..2)))) * ((T0 * T1 * T2_{i0})) - (((T0 * T1 * Σ(i4=0..2)<((T5_{i0,i4} * (T6_{i4}) - (T7_{i4})))>(i4=0..2))) / ( Sqrt(Σ(i4=0..2)<((Σ(i5=0..2)<((T5_{i4,i5} * (T6_{i5}) - (T7_{i5})))>(i5=0..2) * Σ(i5=0..2)<((T5_{i4,i5} * (T6_{i5}) - (T7_{i5})))>(i5=0..2)))>(i4=0..2))))))>(i0=0..2))> (_t2FA0,stepSize2E67,_t2FE4,_t2FA0,stepSize2E67,M2E65,altCPos2E75,center2E64,M2E65,altCPos2E75,center2E64);
          bool _t300F#1 = GT<real>(_t300B,_t2F49);
          if _t300F then goto ASSIGN3014 else goto ASSIGN32F0
        ASSIGN3014:  preds = [COND301D]
          bool _t3012#1 = true;
          goto JOIN3011
        JOIN3011:  preds = [ASSIGN3014,ASSIGN325D]
          bool _t3013#1 = phi(_t3012,_t301B)
          if _t3013 then goto ASSIGN3020 else goto JOIN301E
        ASSIGN3020:  preds = [COND3024]
          string _t301F#1 = "ERG:Error in evaluation on pos 1:";
          string _t3021#1 = "\n";
          Print<[string,tensor[3],string]>(_t301F,startPos2E76,_t3021);
          goto JOIN301E
        JOIN301E:  preds = [MASSIGN3023,COND3024]
          femData:MeshPos intermed3025#4 = fn_2FB2DF4 (cPos2E74,up12FEE);
          tensor[3] altIntermed3027#10 = λ(T0[3],T1[],T2[],FEM(mesh_t)3,FEM(fns_t)4,FEM(func_t)5,FEM(mesh_t)6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3],FEM(mesh_t)10,FEM(fns_t)11,FEM(func_t)12,FEM(mesh_t)13,FEM(mesh_t)14,FEM(mesh_t)15,T16[3])<(T0_{i0} + ((T1 * T2 * Probe(Cmp(femV(1803, 3, 4, 5)_{i0}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T0))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T0) * Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T0)))>(i2=0..2))))>_{3} (altCPos2E75,_t2FA0,stepSize2E67,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altCPos2E75,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altCPos2E75);
          bool _t3029#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed3025);
          femData:MeshPos _t302B#5 = findPos1803 (meshData2E69,altIntermed3027);
          bool _t302D#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t302B);
          bool _t302F#1 = NEQ<bool>(_t3029,_t302D);
          if _t302F then goto ASSIGN3033 else goto JOIN3031
        ASSIGN3033:  preds = [COND3057]
          string _t3032#1 = "ERG:Warning of validity intermed";
          string _t3034#3 = "\n";
          Print<[string,tensor[3],string]>(_t3032,startPos2E76,_t3034);
          string _t3037#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t3037,altIntermed3027,_t3034);
          string _t303C#1 = "Cell change: ";
          femData:Mesh _t3040#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t2ECB);
          int _t3044#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t2ECB);
          femData:MeshCell _t3046#1 = LoadFem<femData:MeshCell>(_t3040,_t3044);
          string _t3048#1 = " to ";
          femData:Mesh _t304C#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t302B);
          int _t3050#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t302B);
          femData:MeshCell _t3052#1 = LoadFem<femData:MeshCell>(_t304C,_t3050);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t303C,_t3046,_t3048,_t3052,_t3034);
          goto JOIN3031
        JOIN3031:  preds = [MASSIGN3263,COND3057]
          bool _t305B#2 = BNot(_t3029);
          if _t305B then goto ASSIGN3060 else goto ASSIGN3265
        ASSIGN3060:  preds = [COND3067]
          bool _t305E#1 = true;
          goto JOIN305D
        JOIN305D:  preds = [ASSIGN3060,ASSIGN3265]
          bool _t305F#1 = phi(_t305E,_t3065)
          if _t305F then goto ASSIGN306A else goto JOIN3068
        ASSIGN306A:  preds = [COND3082]
          string _t3069#1 = "Went off the mesh\?";
          string _t306F#2 = " and ";
          bool _t3077#1 = BNot(_t302D);
          string _t3079#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t3069,_t305B,_t306F,altIntermed3027,_t306F,_t3077,_t3079);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          stabilize
          goto JOIN3068
        JOIN3068:  preds = [*STABILIZE307C,COND3082]
          tensor[3] _t3084#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed3025);
          int _t3086#4 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed3025);
          femData:Mesh _t3088#6 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed3025);
          tensor[3] _t308D#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{3} (_t3086,_t3088,_t3088,_t3084);
          real _t3095#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3],T5[],T6[],FEM(mesh_t)7,FEM(fns_t)8,FEM(func_t)9,FEM(mesh_t)10,FEM(mesh_t)11,FEM(mesh_t)12,T13[3],FEM(mesh_t)14,FEM(fns_t)15,FEM(func_t)16,FEM(mesh_t)17,FEM(mesh_t)18,FEM(mesh_t)19,T20[3])<Sqrt(Σ(i0=0..2)<(((Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - ((T4_{i0} + ((T5 * T6 * Probe(Cmp(femV(1803, 7, 8, 9)_{i0}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i3=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i3=0..2))))) * (Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - ((T4_{i0} + ((T5 * T6 * Probe(Cmp(femV(1803, 7, 8, 9)_{i0}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i3=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i3=0..2)))))))>(i0=0..2))> (_t3086,_t3088,_t3088,_t3084,altCPos2E75,_t2FA0,stepSize2E67,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altCPos2E75,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altCPos2E75);
          bool _t3099#1 = GT<real>(_t3095,_t2F49);
          if _t3099 then goto ASSIGN309D else goto ASSIGN30BF
        ASSIGN309D:  preds = [COND30C9]
          string _t309C#1 = "ERG:Error in tracing 2: At step:";
          string _t309E#1 = " with particle:";
          string _t30A0#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t309C,step2E73,_t309E,startPos2E76,_t30A0);
          string _t30A3#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t30A3,_t308D,altIntermed3027,_t30A0);
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          stabilize
          goto JOIN309B
        JOIN309B:  preds = [*STABILIZE30B8,MASSIGN30C8]
          if _t3029 then goto ASSIGN326D else goto ASSIGN3109
        ASSIGN326D:  preds = [COND310F]
          femData:MeshCell c30DC#1 = LoadFem<femData:MeshCell>(_t3088,_t3086);
          int _t30E1#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c30DC);
          femData:FuncCell _t30E3#2 = LoadFem<femData:FuncCell>(data2E68,_t30E1);
          femData:FemFunc _t30E7#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t30E3);
          femData:Space _t30F2#2 = ExtractFem<femData:Space,femData:FemFunc>(_t30E7);
          int _t30FB#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t30E3);
          tensor[3] _t3103#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],INT4,FEM(fns_t)5,FEM(func_t)6,T7[3])<(Probe(femV(noFunc, 0, 1, 2)_{i0}⊛Basis(),T3)) / ( Sqrt(Σ(i1=0..2)<((Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3) * Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3)))>(i1=0..2)))>_{3} (_t30FB,_t30F2,_t30E7,_t3084,_t30FB,_t30F2,_t30E7,_t3084);
          goto JOIN30D7
        JOIN30D7:  preds = [ASSIGN32DA,ASSIGN310C]
          tensor[3] _t3106#4 = phi(_t3103,_t310B)
          tensor[3] up23110#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2E67,_t3106);
          femData:MeshPos cPos3126#1 = fn_2FB2DF4 (cPos2E74,up23110);
          tensor[3] altCPos3128#1 = λ(T0[3],T1[],FEM(mesh_t)2,FEM(fns_t)3,FEM(func_t)4,FEM(mesh_t)5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],FEM(mesh_t)9,FEM(fns_t)10,FEM(func_t)11,FEM(mesh_t)12,FEM(mesh_t)13,FEM(mesh_t)14,T15[3])<(T0_{i0} + ((T1 * Probe(Cmp(femV(1803, 2, 3, 4)_{i0}⊛Basis())[femInvV(1803, 2, 2, 2)_{i0}⊛Basis(){3}],T8))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 2, 3, 4)_{i2}⊛Basis())[femInvV(1803, 2, 2, 2)_{i0}⊛Basis(){3}],T8) * Probe(Cmp(femV(1803, 2, 3, 4)_{i2}⊛Basis())[femInvV(1803, 2, 2, 2)_{i0}⊛Basis(){3}],T8)))>(i2=0..2))))>_{3} (altCPos2E75,stepSize2E67,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altIntermed3027,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altIntermed3027);
          int _t312A#1 = 1;
          int step312C#1 = IAdd(step2E73,_t312A);
          real _t3131#2 = λ(T0[],T1[3],T2[],T3[3 3],T4[3],T5[],T6[],FEM(mesh_t)7,FEM(fns_t)8,FEM(func_t)9,FEM(mesh_t)10,FEM(mesh_t)11,FEM(mesh_t)12,T13[3],FEM(mesh_t)14,FEM(fns_t)15,FEM(func_t)16,FEM(mesh_t)17,FEM(mesh_t)18,FEM(mesh_t)19,T20[3],T21[3],T22[3 3],T23[3],T24[],T25[],FEM(mesh_t)26,FEM(fns_t)27,FEM(func_t)28,FEM(mesh_t)29,FEM(mesh_t)30,FEM(mesh_t)31,T32[3],FEM(mesh_t)33,FEM(fns_t)34,FEM(func_t)35,FEM(mesh_t)36,FEM(mesh_t)37,FEM(mesh_t)38,T39[3],T40[3])<Sqrt(Σ(i0=0..2)<((((T0 * T1_{i0})) - (((T0 * Σ(i4=0..2)<((T3_{i0,i4} * ((T4_{i4} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i4}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i7=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i7}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i7}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i7=0..2))))) - (T21_{i4})))>(i4=0..2))) / ( Sqrt(Σ(i2=0..2)<((Σ(i3=0..2)<((T3_{i2,i3} * ((T4_{i3} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i6=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i6=0..2))))) - (T21_{i3})))>(i3=0..2) * Σ(i3=0..2)<((T3_{i2,i3} * ((T4_{i3} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i6=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i6=0..2))))) - (T21_{i3})))>(i3=0..2)))>(i2=0..2)))) * ((T0 * T1_{i0})) - (((T0 * Σ(i4=0..2)<((T3_{i0,i4} * ((T4_{i4} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i4}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i7=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i7}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i7}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i7=0..2))))) - (T21_{i4})))>(i4=0..2))) / ( Sqrt(Σ(i2=0..2)<((Σ(i3=0..2)<((T3_{i2,i3} * ((T4_{i3} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i6=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i6=0..2))))) - (T21_{i3})))>(i3=0..2) * Σ(i3=0..2)<((T3_{i2,i3} * ((T4_{i3} + ((T5 * T0 * Probe(Cmp(femV(1803, 7, 8, 9)_{i3}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4))) / ( Sqrt(Σ(i6=0..2)<((Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4) * Probe(Cmp(femV(1803, 7, 8, 9)_{i6}⊛Basis())[femInvV(1803, 7, 7, 7)_{i0}⊛Basis(){3}],T4)))>(i6=0..2))))) - (T21_{i3})))>(i3=0..2)))>(i2=0..2))))))>(i0=0..2))> (stepSize2E67,_t3106,stepSize2E67,M2E65,altCPos2E75,_t2FA0,stepSize2E67,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altCPos2E75,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altCPos2E75,center2E64,M2E65,altCPos2E75,_t2FA0,stepSize2E67,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altCPos2E75,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altCPos2E75,center2E64);
          bool _t3135#1 = GT<real>(_t3131,_t2F49);
          if _t3135 then goto ASSIGN313A else goto ASSIGN32F5
        ASSIGN313A:  preds = [COND3143]
          bool _t3138#1 = true;
          goto JOIN3137
        JOIN3137:  preds = [ASSIGN313A,ASSIGN3142]
          bool _t3139#1 = phi(_t3138,_t3141)
          if _t3139 then goto ASSIGN3146 else goto JOIN3144
        ASSIGN3146:  preds = [COND3170]
          string _t3145#1 = "ERG:Error in evaluation on pos 2:";
          string _t3147#3 = "\n";
          Print<[string,tensor[3],string]>(_t3145,startPos2E76,_t3147);
          string _t314A#1 = "The errors are:";
          string _t3150#1 = " and ";
          real _t3154#1 = λ(T0[],T1[3],T2[],FEM(mesh_t)3,FEM(fns_t)4,FEM(func_t)5,FEM(mesh_t)6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3],FEM(mesh_t)10,FEM(fns_t)11,FEM(func_t)12,FEM(mesh_t)13,FEM(mesh_t)14,FEM(mesh_t)15,T16[3])<Sqrt(Σ(i0=0..2)<((((T0 * T1_{i0})) - (((T0 * Probe(Cmp(femV(1803, 3, 4, 5)_{i0}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9) * Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9)))>(i2=0..2)))) * ((T0 * T1_{i0})) - (((T0 * Probe(Cmp(femV(1803, 3, 4, 5)_{i0}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9) * Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9)))>(i2=0..2))))))>(i0=0..2))> (stepSize2E67,_t3106,stepSize2E67,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altIntermed3027,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altIntermed3027);
          Print<[string,real,string,real,string]>(_t314A,_t3131,_t3150,_t3154,_t3147);
          string _t3159#1 = "The cells are:";
          femData:MeshCell _t315F#1 = LoadFem<femData:MeshCell>(_t3088,_t3086);
          string _t3161#1 = " vs ";
          femData:Mesh _t3165#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t302B);
          int _t3169#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t302B);
          femData:MeshCell _t316B#1 = LoadFem<femData:MeshCell>(_t3165,_t3169);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t3159,_t315F,_t3161,_t316B,_t3147);
          goto JOIN3144
        JOIN3144:  preds = [MASSIGN3279,COND3170]
          self.stream = stream2F2D;
          self.newStream = newStream2F33;
          self.step = step312C;
          self.cPos = cPos3126;
          self.altCPos = altCPos3128;
          active
        ASSIGN32F5:  preds = [COND3143]
          real _t313D#1 = λ(T0[],T1[3],T2[],FEM(mesh_t)3,FEM(fns_t)4,FEM(func_t)5,FEM(mesh_t)6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3],FEM(mesh_t)10,FEM(fns_t)11,FEM(func_t)12,FEM(mesh_t)13,FEM(mesh_t)14,FEM(mesh_t)15,T16[3])<Sqrt(Σ(i0=0..2)<((((T0 * T1_{i0})) - (((T0 * Probe(Cmp(femV(1803, 3, 4, 5)_{i0}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9) * Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9)))>(i2=0..2)))) * ((T0 * T1_{i0})) - (((T0 * Probe(Cmp(femV(1803, 3, 4, 5)_{i0}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9) * Probe(Cmp(femV(1803, 3, 4, 5)_{i2}⊛Basis())[femInvV(1803, 3, 3, 3)_{i0}⊛Basis(){3}],T9)))>(i2=0..2))))))>(i0=0..2))> (stepSize2E67,_t3106,stepSize2E67,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altIntermed3027,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altIntermed3027);
          real _t313F#1 = 0.1e-4;
          bool _t3141#1 = GT<real>(_t313D,_t313F);
          goto JOIN3137
        ASSIGN3109:  preds = [COND310F]
          string _t3108#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3108);
          tensor[3] _t310B#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN30D7
        ASSIGN30BF:  preds = [COND30C9]
          string _t30BE#1 = "fine in cell 2:";
          femData:MeshCell _t30C4#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          string _t30C6#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t30BE,_t30C4,_t30C6);
          goto JOIN309B
        ASSIGN3265:  preds = [COND3067]
          bool _t3065#1 = BNot(_t302D);
          goto JOIN305D
        ASSIGN32F0:  preds = [COND301D]
          real _t3017#1 = λ(T0[],T1[],T2[3],T3[],T4[],FEM(mesh_t)5,FEM(fns_t)6,FEM(func_t)7,FEM(mesh_t)8,FEM(mesh_t)9,FEM(mesh_t)10,T11[3],FEM(mesh_t)12,FEM(fns_t)13,FEM(func_t)14,FEM(mesh_t)15,FEM(mesh_t)16,FEM(mesh_t)17,T18[3])<Sqrt(Σ(i0=0..2)<((((T0 * T1 * T2_{i0})) - (((T0 * T1 * Probe(Cmp(femV(1803, 5, 6, 7)_{i0}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 5, 6, 7)_{i2}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * Probe(Cmp(femV(1803, 5, 6, 7)_{i2}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11)))>(i2=0..2)))) * ((T0 * T1 * T2_{i0})) - (((T0 * T1 * Probe(Cmp(femV(1803, 5, 6, 7)_{i0}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(1803, 5, 6, 7)_{i2}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11) * Probe(Cmp(femV(1803, 5, 6, 7)_{i2}⊛Basis())[femInvV(1803, 5, 5, 5)_{i0}⊛Basis(){3}],T11)))>(i2=0..2))))))>(i0=0..2))> (_t2FA0,stepSize2E67,_t2FE4,_t2FA0,stepSize2E67,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altCPos2E75,_t32EB,_t32EE,data32EF,_t32EB,_t32EB,_t32EB,altCPos2E75);
          bool _t301B#1 = GT<real>(_t3017,_t2F49);
          goto JOIN3011
        ASSIGN2FE7:  preds = [COND2FED]
          string _t2FE6#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t2FE6);
          tensor[3] _t2FE9#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2FB5
        ASSIGN2F95:  preds = [COND2F9F]
          string _t2F94#1 = "fine in cell 1:";
          femData:MeshCell _t2F9A#1 = LoadFem<femData:MeshCell>(_t2F1E,_t2F1C);
          string _t2F9C#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t2F94,_t2F9A,_t2F9C);
          goto JOIN2F4D
        ASSIGN3244:  preds = [COND2EF1]
          bool _t2EE6#1 = BNot(_t2ECD);
          if _t2EE6 then goto ASSIGN2EEB else goto ASSIGN2EED
        ASSIGN2EEB:  preds = [COND2EEE]
          bool _t2EE9#1 = true;
          goto JOIN2EE8
        JOIN2EE8:  preds = [ASSIGN2EEB,ASSIGN2EED]
          bool _t2EEA#1 = phi(_t2EE9,_t2EEC)
          goto JOIN2EDD
        ASSIGN2EED:  preds = [COND2EEE]
          bool _t2EEC#1 = EQ<int>(step2E73,stepMax2E66);
          goto JOIN2EE8
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY2E36:  preds = []
      tensor[3][] startPoints2E30#1 = globals.startPoints1747;
    FOREACH2E33:  preds = [ASSIGN2E31,NEXT2E35]
      foreach (x2E32 in startPoints2E30) on exit goto RETURN2E37
      new gg(x2E32);
      goto FOREACH2E33
    RETURN2E37:  preds = [FOREACH2E33]
      return
#### end program ####
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData32FC (meshData) = <no-default>
  input 0space0409_intermedateGlobal32FD (space) = <no-default>
  input 0data040B_intermedateGlobal32FE (data) = <no-default>
  input timeSteps32FF (timeSteps) = <default>
  input timeEps3300 (timeEps) = <default>
  input startPoints3301 (startPoints) = <no-default>
  input stepSize3302 (stepSize) = <default>
  input stepMax3303 (stepMax) = <default>
  input M3304 (M) = <no-default>
  input center3305 (center) = <no-default>
  global femData:FemFunc data3306
  global femData:Mesh _t3307
  global femData:Space _tX3308
## functions
  function femData:MeshPos findPos3352 (femData:Mesh mesh3353#31, tensor[3] pos3354#6) {
    ENTRY3355:  preds = []
      real _t3356#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn3358#49 = <tensor[3]>[_t3356,_t3356,_t3356];
      int newtonInt335A#1 = 0;
      int[] yayCells335C#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3353,pos3354);
    FOREACH335F:  preds = [ASSIGN335D,NEXT3477]
      foreach (cellItter335E in yayCells335C) on exit goto ASSIGN3479
      int _t3360#1 = 16;
      int[] _t3362#1 = Range(newtonInt335A,_t3360);
    FOREACH3365:  preds = [ASSIGN3363,NEXT3476]
      foreach (newtonItter3364 in _t3362) on exit goto NEXT3477
        tensor[3] xn3367#15 = phi(xn3358,xn3366)
      int[4] femIndicies3378#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh3353,cellItter335E);
      tensor[4,3] femDofs3379#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh3353,femIndicies3378);
      tensor[4,3] dofs3377#1 = femDofs3379;
      tensor[3,4] basisResult337A#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3,3] probe_l_103368#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter335E,mesh3353,xn3358,dofs3377,basisResult337A,xn3358);
      tensor[3,3,3] op1_e3_l_123369#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_103368);
      tensor[3,3,3] op1_e3_l_13336A#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_103368,op1_e3_l_123369);
      tensor[4,3] dofs337B#1 = femDofs3379;
      tensor[3,4] basisResult337C#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_14336B#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs337B,basisResult337C,xn3358);
      tensor[4,3] dofs337D#1 = femDofs3379;
      tensor[3,4] basisResult337E#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_15336C#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs337D,basisResult337E,xn3358);
      tensor[4,3] dofs337F#1 = femDofs3379;
      tensor[3,4] basisResult3380#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_16336D#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs337F,basisResult3380,xn3358);
      tensor[3,3] op1_e3_l_17336E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_16336D);
      tensor[3] op1_e3_l_18336F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_15336C,op1_e3_l_17336E);
      real op1_e3_l_193370#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_14336B,op1_e3_l_18336F);
      tensor[3,3] op1_e3_l_203371#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_13336A);
      real op1_e3_l_213372#1 = λ(T0[])<(2 * T0)> (op1_e3_l_193370);
      tensor[4,3] dofs3381#1 = femDofs3379;
      tensor[4] basisResult3382#1 = EvaluateBasis<BasisArray(4)>(xn3367);
      tensor[3] probe_l_223373#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn3367,cellItter335E,mesh3353,dofs3381,basisResult3382,xn3367);
      tensor[3,3] op1_e3_l_233374#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_203371,op1_e3_l_213372);
      tensor[3] op1_e3_l_243375#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos3354,probe_l_223373);
      tensor[3] op1_e3_l_253376#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_233374,op1_e3_l_243375);
      tensor[3] xn3366#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn3367,op1_e3_l_253376);
      real _t339F#6 = 0.1e-7;
      real _t33A1#1 = λ(T0[],T1[])<(T0 * T1)> (_t339F,_t339F);
      int[4] femIndicies33B4#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh3353,cellItter335E);
      tensor[4,3] femDofs33B5#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh3353,femIndicies33B4);
      tensor[4,3] dofs33B3#1 = femDofs33B5;
      tensor[3,4] basisResult33B6#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3,3] probe_l_1833A4#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter335E,mesh3353,xn3358,dofs33B3,basisResult33B6,xn3358);
      tensor[3,3,3] op1_e3_l_2033A5#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1833A4);
      tensor[3,3,3] op1_e3_l_2133A6#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1833A4,op1_e3_l_2033A5);
      tensor[4,3] dofs33B7#1 = femDofs33B5;
      tensor[3,4] basisResult33B8#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_2233A7#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs33B7,basisResult33B8,xn3358);
      tensor[4,3] dofs33B9#1 = femDofs33B5;
      tensor[3,4] basisResult33BA#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_2333A8#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs33B9,basisResult33BA,xn3358);
      tensor[4,3] dofs33BB#1 = femDofs33B5;
      tensor[3,4] basisResult33BC#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_2433A9#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs33BB,basisResult33BC,xn3358);
      tensor[3,3] op1_e3_l_2533AA#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_2433A9);
      tensor[3] op1_e3_l_2633AB#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_2333A8,op1_e3_l_2533AA);
      real op1_e3_l_2733AC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_2233A7,op1_e3_l_2633AB);
      tensor[3,3] op1_e3_l_2833AD#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_2133A6);
      real op1_e3_l_2933AE#1 = λ(T0[])<(2 * T0)> (op1_e3_l_2733AC);
      tensor[4,3] dofs33BD#1 = femDofs33B5;
      tensor[4] basisResult33BE#1 = EvaluateBasis<BasisArray(4)>(xn3367);
      tensor[3] probe_l_3033AF#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter335E,mesh3353,xn3367,dofs33BD,basisResult33BE,xn3367);
      tensor[3,3] op1_e3_l_3133B0#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2833AD,op1_e3_l_2933AE);
      tensor[3] op1_e3_l_3233B1#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos3354,probe_l_3033AF);
      tensor[3] op1_e3_l_4833B2#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_3133B0,op1_e3_l_3233B1);
      real _t33A3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_4833B2,op1_e3_l_4833B2);
      bool _t33DB#1 = GTE<real>(_t33A1,_t33A3);
      if _t33DB then goto ASSIGN33DF else goto JOIN3475
    ASSIGN33DF:  preds = [COND33DD]
      real _t33DE#4 = 0.1e1;
      real _t33E0#1 = λ(T0[],T1[])<(T0 + T1)> (_t33DE,_t339F);
      tensor[3] _t33E2#1 = <tensor[3]>[_t33DE,_t33DE,_t33DE];
      int[4] femIndicies33F6#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh3353,cellItter335E);
      tensor[4,3] femDofs33F7#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh3353,femIndicies33F6);
      tensor[4,3] dofs33F5#1 = femDofs33F7;
      tensor[3,4] basisResult33F8#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3,3] probe_l_1133E5#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter335E,mesh3353,xn3358,dofs33F5,basisResult33F8,xn3358);
      tensor[3,3,3] op1_e3_l_1333E6#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1133E5);
      tensor[3,3,3] op1_e3_l_1433E7#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1133E5,op1_e3_l_1333E6);
      tensor[4,3] dofs33F9#1 = femDofs33F7;
      tensor[3,4] basisResult33FA#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_1533E8#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs33F9,basisResult33FA,xn3358);
      tensor[4,3] dofs33FB#1 = femDofs33F7;
      tensor[3,4] basisResult33FC#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_1633E9#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs33FB,basisResult33FC,xn3358);
      tensor[4,3] dofs33FD#1 = femDofs33F7;
      tensor[3,4] basisResult33FE#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_1733EA#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs33FD,basisResult33FE,xn3358);
      tensor[3,3] op1_e3_l_1833EB#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1733EA);
      tensor[3] op1_e3_l_1933EC#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1633E9,op1_e3_l_1833EB);
      real op1_e3_l_2033ED#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1533E8,op1_e3_l_1933EC);
      tensor[3,3] op1_e3_l_2133EE#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1433E7);
      real op1_e3_l_2233EF#1 = λ(T0[])<(2 * T0)> (op1_e3_l_2033ED);
      tensor[4,3] dofs33FF#1 = femDofs33F7;
      tensor[4] basisResult3400#1 = EvaluateBasis<BasisArray(4)>(xn3367);
      tensor[3] probe_l_2333F0#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn3367,cellItter335E,mesh3353,dofs33FF,basisResult3400,xn3367);
      tensor[3,3] op1_e3_l_2433F1#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2133EE,op1_e3_l_2233EF);
      tensor[3] op1_e3_l_2533F2#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos3354,probe_l_2333F0);
      tensor[3] op1_e3_l_2633F3#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_2433F1,op1_e3_l_2533F2);
      tensor[3] op1_e3_l_2733F4#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn3367,op1_e3_l_2633F3);
      real _t33E4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t33E2,op1_e3_l_2733F4);
      bool _t341E#1 = GT<real>(_t33E0,_t33E4);
      tensor[3] _t3420#1 = <tensor[3]>[_t339F,_t339F,_t339F];
      int[4] femIndicies3434#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh3353,cellItter335E);
      tensor[4,3] femDofs3435#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh3353,femIndicies3434);
      tensor[4,3] dofs3433#1 = femDofs3435;
      tensor[3,4] basisResult3436#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3,3] probe_l_113423#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter335E,mesh3353,xn3358,dofs3433,basisResult3436,xn3358);
      tensor[3,3,3] op1_e3_l_133424#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_113423);
      tensor[3,3,3] op1_e3_l_143425#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_113423,op1_e3_l_133424);
      tensor[4,3] dofs3437#1 = femDofs3435;
      tensor[3,4] basisResult3438#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_153426#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs3437,basisResult3438,xn3358);
      tensor[4,3] dofs3439#1 = femDofs3435;
      tensor[3,4] basisResult343A#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_163427#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs3439,basisResult343A,xn3358);
      tensor[4,3] dofs343B#1 = femDofs3435;
      tensor[3,4] basisResult343C#1 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3] probe_l_173428#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,dofs343B,basisResult343C,xn3358);
      tensor[3,3] op1_e3_l_183429#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_173428);
      tensor[3] op1_e3_l_19342A#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_163427,op1_e3_l_183429);
      real op1_e3_l_20342B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_153426,op1_e3_l_19342A);
      tensor[3,3] op1_e3_l_21342C#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_143425);
      real op1_e3_l_22342D#1 = λ(T0[])<(2 * T0)> (op1_e3_l_20342B);
      tensor[4,3] dofs343D#1 = femDofs3435;
      tensor[4] basisResult343E#1 = EvaluateBasis<BasisArray(4)>(xn3367);
      tensor[3] probe_l_23342E#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn3367,cellItter335E,mesh3353,dofs343D,basisResult343E,xn3367);
      tensor[3,3] op1_e3_l_24342F#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_21342C,op1_e3_l_22342D);
      tensor[3] op1_e3_l_253430#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos3354,probe_l_23342E);
      tensor[3] op1_e3_l_263431#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_24342F,op1_e3_l_253430);
      tensor[3] op1_e3_l_273432#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn3367,op1_e3_l_263431);
      tensor[3] _t3422#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t3420,op1_e3_l_273432);
      real _t345C#1 = TensorIndex<tensor[3],[0]>(_t3422);
      real _t345E#3 = -0.e0;
      bool _t3460#1 = GT<real>(_t345C,_t345E);
      real _t3462#1 = TensorIndex<tensor[3],[1]>(_t3422);
      bool _t3464#1 = GT<real>(_t3462,_t345E);
      real _t3466#1 = TensorIndex<tensor[3],[2]>(_t3422);
      bool _t3468#1 = GT<real>(_t3466,_t345E);
      bool _t346A#1 = BAnd(_t3464,_t3468);
      bool _t346C#1 = BAnd(_t3460,_t346A);
      bool _t346E#1 = BAnd(_t341E,_t346C);
      if _t346E then goto ASSIGN3472 else goto JOIN3474
    ASSIGN3472:  preds = [COND3470]
      femData:MeshPos _t3471#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3353,cellItter335E,xn3366,pos3354);
      return _t3471
      goto JOIN3474
    JOIN3474:  preds = [*RETURN(_t3471)3473,COND3470]
      goto JOIN3475
    JOIN3475:  preds = [JOIN3474,COND33DD]
      goto FOREACH3365
    NEXT3477:  preds = [FOREACH3365]
      goto FOREACH335F
    ASSIGN3479:  preds = [FOREACH335F]
      femData:MeshPos _t3478#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3353);
      return _t3478
}
  function femData:MeshPos fn_2FB3594 (femData:MeshPos x3595#5, tensor[3] dPos3596#1) {
    ENTRY3597:  preds = []
      femData:Mesh meshData3598#1 = globals.meshData32FC;
      int timeSteps359A#1 = globals.timeSteps32FF;
      bool _t359C#1 = ExtractFemItem<bool,Valid(MeshPos)>(x3595);
      bool _t359E#1 = BNot(_t359C);
      if _t359E then goto RETURN(x3595)35A1 else goto JOIN35A2
    RETURN(x3595)35A1:  preds = [COND35A0]
      return x3595
      goto JOIN35A2
    JOIN35A2:  preds = [*RETURN(x3595)35A1,COND35A0]
      int _t35A3#1 = 0;
      int[] _t35A5#1 = Range(_t35A3,timeSteps359A);
    FOREACH35A8:  preds = [ASSIGN35A6,*NEXT35AA]
      foreach (i35A7 in _t35A5) on exit goto ASSIGN35AC
      return
      goto FOREACH35A8
    ASSIGN35AC:  preds = [FOREACH35A8]
      string _t35AB#1 = "Took stupid way out!\n";
      Print<[string]>(_t35AB);
      tensor[3] _t35AE#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x3595);
      int _t35B0#2 = ExtractFemItem<int,CellIndex(MeshPos)>(x3595);
      femData:Mesh _t35B2#3 = ExtractFem<femData:Mesh,femData:MeshPos>(x3595);
      int[4] femIndicies35B7#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t35B2,_t35B0);
      tensor[4,3] femDofs35B8#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t35B2,femIndicies35B7);
      tensor[4,3] dofs35B6#1 = femDofs35B8;
      tensor[4] basisResult35B9#1 = EvaluateBasis<BasisArray(4)>(_t35AE);
      tensor[3] probe_l_535B5#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t35B0,_t35B2,_t35AE,dofs35B6,basisResult35B9,_t35AE);
      tensor[3] _t35B4#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (dPos3596,probe_l_535B5);
      femData:MeshPos cmp35C0#1 = findPos3352 (meshData3598,_t35B4);
      return cmp35C0
}
## input initialization
  ENTRY3309:  preds = []
    int timeSteps330A#1 = 32;
    globals.timeSteps32FF = timeSteps330A;
    real timeEps330D#1 = 0.1e-6;
    globals.timeEps3300 = timeEps330D;
    real stepSize3310#1 = 0.1e-1;
    globals.stepSize3302 = stepSize3310;
    int stepMax3313#1 = 300;
    globals.stepMax3303 = stepMax3313;
    return
## global-variable initialization
  ENTRY3317:  preds = []
    femData:Mesh meshData3318#3 = globals.meshData32FC;
    femData:Space 0space0409_intermedateGlobal331A#1 = globals.0space0409_intermedateGlobal32FD;
    femData:FemFunc 0data040B_intermedateGlobal331C#1 = globals.0data040B_intermedateGlobal32FE;
    int _t331E#1 = 0;
    int _t3320#1 = 1;
    int _t3322#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3318);
    int _t3324#1 = ISub(_t3322,_t3320);
    int[] _t3326#1 = Range(_t331E,_t3324);
    femData:MeshCell[] _t3328#1 = <femData:MeshCell[]>{};
  FOREACH332B:  preds = [ASSIGN3329,NEXT3331]
    foreach (_t332A in _t3326) on exit goto ASSIGN3333
      femData:MeshCell[] _t332F#1 = phi(_t3328,_t332E)
    femData:MeshCell _t332C#1 = LoadFem<femData:MeshCell>(meshData3318,_t332A);
    femData:MeshCell[] _t332E#1 = Append<femData:MeshCell>(_t332F,_t332C);
    goto FOREACH332B
  ASSIGN3333:  preds = [FOREACH332B]
    femData:Space space3332#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal331A,meshData3318);
    femData:FemFunc data3334#2 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal331C,space3332);
    globals.data3306 = data3334;
    femData:Space _t3337#2 = ExtractFem<femData:Space,femData:FemFunc>(data3334);
    femData:Mesh _t3339#1 = ExtractFem<femData:Mesh,femData:Space>(_t3337);
    globals._t3307 = _t3339;
    globals._tX3308 = _t3337;
    return
## strand
  strand gg (tensor[3] startPos333E#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3345:  preds = []
        femData:Mesh meshData3346#1 = globals.meshData32FC;
        tensor[3][0] _t3348#1 = <tensor[3][0]>{};
        tensor[3][] _t334A#1 = MkDynamic<tensor[3],0>(_t3348);
        tensor[3][0] _t334C#1 = <tensor[3][0]>{};
        tensor[3][] _t334E#1 = MkDynamic<tensor[3],0>(_t334C);
        int step3350#1 = 0;
        femData:MeshPos cPos347B#1 = findPos3352 (meshData3346,startPos333E);
        self.stream = _t334A;
        self.newStream = _t334E;
        self.step = step3350;
        self.cPos = cPos347B;
        self.altCPos = startPos333E;
        self.startPos = startPos333E;
        return
    end state init
    method update
        ENTRY3484:  preds = []
          femData:Mesh _t3485#103 = globals._t3307;
          femData:Space _t3487#96 = globals._tX3308;
          femData:FemFunc data3489#96 = globals.data3306;
          femData:Mesh meshData348B#2 = globals.meshData32FC;
          femData:FemFunc data348D#2 = globals.data3306;
          real stepSize348F#26 = globals.stepSize3302;
          int stepMax3491#1 = globals.stepMax3303;
          tensor[3,3] M3493#7 = globals.M3304;
          tensor[3] center3495#7 = globals.center3305;
          tensor[3][] stream3497#2 = self.stream;
          tensor[3][] newStream3499#2 = self.newStream;
          int step349B#5 = self.step;
          femData:MeshPos cPos349D#9 = self.cPos;
          tensor[3] altCPos349F#53 = self.altCPos;
          tensor[3] startPos34A1#6 = self.startPos;
          int _t34A3#1 = 0;
          bool _t34A5#1 = EQ<int>(step349B,_t34A3);
          if _t34A5 then goto ASSIGN34A9 else goto JOIN34D2
        ASSIGN34A9:  preds = [COND34A7]
          bool _t34A8#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos349D);
          if _t34A8 then goto ASSIGN34AC else goto JOIN34D1
        ASSIGN34AC:  preds = [COND34AA]
          tensor[3] rp34AB#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          real _t34AD#1 = TensorIndex<tensor[3],[0]>(rp34AB);
          real _t34AF#3 = 0.1e-5;
          bool _t34B1#1 = LTE<real>(_t34AD,_t34AF);
          if _t34B1 then goto STABILIZE34B4 else goto JOIN34B5
        STABILIZE34B4:  preds = [COND34B3]
          stabilize
          goto JOIN34B5
        JOIN34B5:  preds = [*STABILIZE34B4,COND34B3]
          real _t34B6#1 = TensorIndex<tensor[3],[1]>(rp34AB);
          bool _t34B8#1 = LTE<real>(_t34B6,_t34AF);
          if _t34B8 then goto STABILIZE34BB else goto JOIN34BC
        STABILIZE34BB:  preds = [COND34BA]
          stabilize
          goto JOIN34BC
        JOIN34BC:  preds = [*STABILIZE34BB,COND34BA]
          real _t34BD#1 = TensorIndex<tensor[3],[2]>(rp34AB);
          bool _t34BF#1 = LTE<real>(_t34BD,_t34AF);
          if _t34BF then goto STABILIZE34C2 else goto JOIN34C3
        STABILIZE34C2:  preds = [COND34C1]
          stabilize
          goto JOIN34C3
        JOIN34C3:  preds = [*STABILIZE34C2,COND34C1]
          real _t34C4#3 = 0.1e1;
          tensor[3] _t34C6#1 = <tensor[3]>[_t34C4,_t34C4,_t34C4];
          real r34C8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t34C6,rp34AB);
          real _t34CA#1 = 0.9999999e0;
          bool _t34CC#1 = LTE<real>(_t34CA,r34C8);
          if _t34CC then goto STABILIZE34CF else goto JOIN34D0
        STABILIZE34CF:  preds = [COND34CE]
          stabilize
          goto JOIN34D0
        JOIN34D0:  preds = [*STABILIZE34CF,COND34CE]
          goto JOIN34D1
        JOIN34D1:  preds = [JOIN34D0,COND34AA]
          goto JOIN34D2
        JOIN34D2:  preds = [JOIN34D1,COND34A7]
          bool _t34D3#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos349D);
          femData:MeshPos _t34D5#6 = findPos3352 (meshData348B,altCPos349F);
          bool _t34D7#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t34D5);
          bool _t34D9#1 = NEQ<bool>(_t34D3,_t34D7);
          if _t34D9 then goto ASSIGN34DD else goto JOIN34E1
        ASSIGN34DD:  preds = [COND34DB]
          string _t34DC#1 = "ERG:Warning of validity startPos:";
          string _t34DE#1 = "\n";
          Print<[string,tensor[3],string]>(_t34DC,startPos34A1,_t34DE);
          goto JOIN34E1
        JOIN34E1:  preds = [MASSIGN34E0,COND34DB]
          bool _t34E2#2 = BNot(_t34D3);
          if _t34E2 then goto ASSIGN34E6 else goto ASSIGN3B0A
        ASSIGN34E6:  preds = [COND34E4]
          bool _t34E5#1 = true;
          goto JOIN34E9
        JOIN34E9:  preds = [ASSIGN34E6,JOIN3B0F]
          bool _t34E7#1 = phi(_t34E5,_t34E8)
          if _t34E7 then goto ASSIGN34EC else goto JOIN34FB
        ASSIGN34EC:  preds = [COND34EA]
          string _t34EB#1 = "Went off the mesh\?";
          string _t34ED#2 = " and ";
          bool _t34EF#1 = BNot(_t34D7);
          string _t34F1#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t34EB,_t34E2,_t34ED,altCPos349F,_t34ED,_t34EF,_t34F1);
          string _t34F4#1 = "Pos is:";
          tensor[3] _t34F6#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          Print<[string,tensor[3],string]>(_t34F4,_t34F6,_t34F1);
          Print<[tensor[3][],string,tensor[3][],string]>(stream3497,_t34F1,newStream3499,_t34F1);
          stabilize
          goto JOIN34FB
        JOIN34FB:  preds = [*STABILIZE34FA,COND34EA]
          tensor[3] _t34FC#10 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          int _t34FE#8 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos349D);
          femData:Mesh _t3500#11 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos349D);
          int[4] femIndicies3504#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t3500,_t34FE);
          tensor[4,3] femDofs3505#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t3500,femIndicies3504);
          tensor[4,3] dofs3503#1 = femDofs3505;
          tensor[4] basisResult3506#1 = EvaluateBasis<BasisArray(4)>(_t34FC);
          tensor[3] _t3502#2 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t34FE,_t3500,_t3500,_t34FC,dofs3503,basisResult3506,_t34FC);
          tensor[3][1] _t350C#1 = <tensor[3][1]>{_t3502};
          tensor[3][] _t350E#1 = MkDynamic<tensor[3],1>(_t350C);
          tensor[3][] stream3510#4 = Concat<tensor[3]>(stream3497,_t350E);
          tensor[3][1] _t3512#1 = <tensor[3][1]>{altCPos349F};
          tensor[3][] _t3514#1 = MkDynamic<tensor[3],1>(_t3512);
          tensor[3][] newStream3516#4 = Concat<tensor[3]>(newStream3499,_t3514);
          int[4] femIndicies351D#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t3500,_t34FE);
          tensor[4,3] femDofs351E#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t3500,femIndicies351D);
          tensor[4,3] dofs351C#1 = femDofs351E;
          tensor[4] basisResult351F#1 = EvaluateBasis<BasisArray(4)>(_t34FC);
          tensor[3] probe_l_53519#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t34FE,_t3500,_t34FC,dofs351C,basisResult351F,_t34FC);
          tensor[3] op1_e3_l_7351A#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (altCPos349F,probe_l_53519);
          real op1_e3_l_9351B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_7351A,op1_e3_l_7351A);
          real _t3518#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_9351B);
          real _t3528#5 = 0.1e-5;
          bool _t352A#1 = GT<real>(_t3518,_t3528);
          if _t352A then goto ASSIGN352E else goto ASSIGN3B03
        ASSIGN352E:  preds = [COND352C]
          string _t352D#1 = "ERG:Error in tracing 1: At step:";
          string _t352F#1 = " with particle:";
          string _t3531#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t352D,step349B,_t352F,startPos34A1,_t3531);
          string _t3534#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t3534,_t3502,altCPos349F,_t3531);
          string _t3537#1 = "Cells are:";
          femData:MeshCell _t3539#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t353B#2 = " and ";
          femData:Mesh _t353D#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t34D5);
          int _t353F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t34D5);
          femData:MeshCell _t3541#1 = LoadFem<femData:MeshCell>(_t353D,_t353F);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t3537,_t3539,_t353B,_t3541,_t3531);
          string _t3544#1 = "Ref poses are:";
          tensor[3] _t3546#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t34D5);
          Print<[string,tensor[3],string,tensor[3],string]>(_t3544,_t34FC,_t353B,_t3546,_t3531);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN354C
        JOIN354C:  preds = [*STABILIZE354B,MASSIGN3B08]
          real _t354D#15 = 0.5e0;
          if _t34D3 then goto ASSIGN3551 else goto ASSIGN3AFF
        ASSIGN3551:  preds = [COND354F]
          femData:MeshCell c3550#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          int _t3552#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3550);
          femData:FuncCell _t3554#2 = LoadFem<femData:FuncCell>(data348D,_t3552);
          femData:FemFunc _t3556#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3554);
          femData:Space _t3558#2 = ExtractFem<femData:Space,femData:FemFunc>(_t3556);
          int _t355A#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3554);
          int[10] femIndicies3561#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3558,_t355A);
          tensor[10,3] femDofs3562#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t3556,femIndicies3561);
          tensor[10,3] dofs3560#1 = femDofs3562;
          tensor[10] basisResult3563#1 = EvaluateBasis<BasisArray(10)>(_t34FC);
          tensor[3] probe_l_8355D#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t355A,_t3558,_t3556,_t34FC,dofs3560,basisResult3563,_t34FC);
          real op1_e3_l_11355E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_8355D,probe_l_8355D);
          real op1_e3_l_12355F#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11355E);
          tensor[3] _t355C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_8355D,op1_e3_l_12355F);
          goto JOIN356E
        JOIN356E:  preds = [ASSIGN356B,ASSIGN3B01]
          tensor[3] _t356C#3 = phi(_t355C,_t356D)
          tensor[3] up1356F#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,_t356C);
          tensor[3] op1_e3_l_113572#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (altCPos349F,center3495);
          tensor[3] op1_e3_l_123573#3 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_113572);
          real op1_e3_l_173574#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_123573,op1_e3_l_123573);
          tensor[3] op1_e3_l_183575#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,op1_e3_l_123573);
          real op1_e3_l_193576#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_173574);
          tensor[3] op1_e3_l_203577#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,_t356C);
          tensor[3] op1_e3_l_213578#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_183575,op1_e3_l_193576);
          tensor[3] op1_e3_l_333579#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_203577,op1_e3_l_213578);
          real op1_e3_l_35357A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_333579,op1_e3_l_333579);
          real _t3571#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_35357A);
          bool _t3585#1 = GT<real>(_t3571,_t3528);
          if _t3585 then goto ASSIGN3589 else goto ASSIGN3AB7
        ASSIGN3589:  preds = [COND3587]
          bool _t3588#1 = true;
          goto JOIN358C
        JOIN358C:  preds = [ASSIGN3589,ASSIGN3AFD]
          bool _t358A#1 = phi(_t3588,_t358B)
          if _t358A then goto ASSIGN358F else goto JOIN3593
        ASSIGN358F:  preds = [COND358D]
          string _t358E#1 = "ERG:Error in evaluation on pos 1:";
          string _t3590#1 = "\n";
          Print<[string,tensor[3],string]>(_t358E,startPos34A1,_t3590);
          goto JOIN3593
        JOIN3593:  preds = [MASSIGN3592,COND358D]
          femData:MeshPos intermed35C3#4 = fn_2FB3594 (cPos349D,up1356F);
          femData:MeshPos callFindPos35D0#2 = findPos3352 (_t3485,altCPos349F);
          int intPos35D1#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos35D0);
          tensor[3] refPos35D2#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos35D0);
          tensor[3] Inner35C6#2 = altCPos349F;
          femData:MeshPos callFindPos35D3#2 = findPos3352 (_t3485,Inner35C6);
          int intPos35D4#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos35D3);
          tensor[3] refPos35D5#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos35D3);
          int[10] femIndicies35D7#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos35D4);
          tensor[10,3] femDofs35D8#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies35D7);
          tensor[10,3] dofs35D6#1 = femDofs35D8;
          tensor[10] basisResult35D9#1 = EvaluateBasis<BasisArray(10)>(refPos35D5);
          tensor[3] compositionl35C7#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner35C6,dofs35D6,basisResult35D9,refPos35D5);
          tensor[3] Inner35C8#2 = altCPos349F;
          femData:MeshPos callFindPos35DA#2 = findPos3352 (_t3485,Inner35C8);
          int intPos35DB#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos35DA);
          tensor[3] refPos35DC#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos35DA);
          int[10] femIndicies35DE#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos35DB);
          tensor[10,3] femDofs35DF#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies35DE);
          tensor[10,3] dofs35DD#1 = femDofs35DF;
          tensor[10] basisResult35E0#1 = EvaluateBasis<BasisArray(10)>(refPos35DC);
          tensor[3] compositionl35C9#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner35C8,dofs35DD,basisResult35E0,refPos35DC);
          tensor[3] Inner35CA#2 = altCPos349F;
          femData:MeshPos callFindPos35E1#2 = findPos3352 (_t3485,Inner35CA);
          int intPos35E2#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos35E1);
          tensor[3] refPos35E3#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos35E1);
          int[10] femIndicies35E5#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos35E2);
          tensor[10,3] femDofs35E6#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies35E5);
          tensor[10,3] dofs35E4#1 = femDofs35E6;
          tensor[10] basisResult35E7#1 = EvaluateBasis<BasisArray(10)>(refPos35E3);
          tensor[3] compositionl35CB#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner35CA,dofs35E4,basisResult35E7,refPos35E3);
          real op1_e3_l_2035CC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl35C9,compositionl35CB);
          tensor[3] op1_e3_l_2135CD#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl35C7);
          real op1_e3_l_2235CE#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2035CC);
          tensor[3] op1_e3_l_2335CF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2135CD,op1_e3_l_2235CE);
          tensor[3] altIntermed35C5#22 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_2335CF);
          bool _t360B#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed35C3);
          femData:MeshPos _t360D#5 = findPos3352 (meshData348B,altIntermed35C5);
          bool _t360F#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t360D);
          bool _t3611#1 = NEQ<bool>(_t360B,_t360F);
          if _t3611 then goto ASSIGN3615 else goto JOIN362D
        ASSIGN3615:  preds = [COND3613]
          string _t3614#1 = "ERG:Warning of validity intermed";
          string _t3616#3 = "\n";
          Print<[string,tensor[3],string]>(_t3614,startPos34A1,_t3616);
          string _t3619#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t3619,altIntermed35C5,_t3616);
          string _t361C#1 = "Cell change: ";
          femData:Mesh _t361E#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t34D5);
          int _t3620#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t34D5);
          femData:MeshCell _t3622#1 = LoadFem<femData:MeshCell>(_t361E,_t3620);
          string _t3624#1 = " to ";
          femData:Mesh _t3626#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t360D);
          int _t3628#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t360D);
          femData:MeshCell _t362A#1 = LoadFem<femData:MeshCell>(_t3626,_t3628);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t361C,_t3622,_t3624,_t362A,_t3616);
          goto JOIN362D
        JOIN362D:  preds = [MASSIGN362C,COND3613]
          bool _t362E#2 = BNot(_t360B);
          if _t362E then goto ASSIGN3632 else goto ASSIGN3A70
        ASSIGN3632:  preds = [COND3630]
          bool _t3631#1 = true;
          goto JOIN3635
        JOIN3635:  preds = [ASSIGN3632,ASSIGN3A70]
          bool _t3633#1 = phi(_t3631,_t3634)
          if _t3633 then goto ASSIGN3638 else goto JOIN3643
        ASSIGN3638:  preds = [COND3636]
          string _t3637#1 = "Went off the mesh\?";
          string _t3639#2 = " and ";
          bool _t363B#1 = BNot(_t360F);
          string _t363D#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t3637,_t362E,_t3639,altIntermed35C5,_t3639,_t363B,_t363D);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN3643
        JOIN3643:  preds = [*STABILIZE3642,COND3636]
          tensor[3] _t3644#9 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed35C3);
          int _t3646#6 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed35C3);
          femData:Mesh _t3648#9 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed35C3);
          int[4] femIndicies364C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t3648,_t3646);
          tensor[4,3] femDofs364D#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t3648,femIndicies364C);
          tensor[4,3] dofs364B#1 = femDofs364D;
          tensor[4] basisResult364E#1 = EvaluateBasis<BasisArray(4)>(_t3644);
          tensor[3] _t364A#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t3646,_t3648,_t3648,_t3644,dofs364B,basisResult364E,_t3644);
          int[4] femIndicies3670#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t3648,_t3646);
          tensor[4,3] femDofs3671#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t3648,femIndicies3670);
          tensor[4,3] dofs366F#1 = femDofs3671;
          tensor[4] basisResult3672#1 = EvaluateBasis<BasisArray(4)>(_t3644);
          tensor[3] probe_l_213655#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t3646,_t3648,_t3644,dofs366F,basisResult3672,_t3644);
          femData:MeshPos callFindPos3673#2 = findPos3352 (_t3485,altCPos349F);
          int intPos3674#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3673);
          tensor[3] refPos3675#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3673);
          tensor[3] Inner3656#2 = altCPos349F;
          femData:MeshPos callFindPos3676#2 = findPos3352 (_t3485,Inner3656);
          int intPos3677#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3676);
          tensor[3] refPos3678#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3676);
          int[10] femIndicies367A#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3677);
          tensor[10,3] femDofs367B#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies367A);
          tensor[10,3] dofs3679#1 = femDofs367B;
          tensor[10] basisResult367C#1 = EvaluateBasis<BasisArray(10)>(refPos3678);
          tensor[3] compositionl3657#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3656,dofs3679,basisResult367C,refPos3678);
          tensor[3] Inner3658#2 = altCPos349F;
          femData:MeshPos callFindPos367D#2 = findPos3352 (_t3485,Inner3658);
          int intPos367E#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos367D);
          tensor[3] refPos367F#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos367D);
          int[10] femIndicies3681#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos367E);
          tensor[10,3] femDofs3682#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3681);
          tensor[10,3] dofs3680#1 = femDofs3682;
          tensor[10] basisResult3683#1 = EvaluateBasis<BasisArray(10)>(refPos367F);
          tensor[3] compositionl3659#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3658,dofs3680,basisResult3683,refPos367F);
          tensor[3] Inner365A#2 = altCPos349F;
          femData:MeshPos callFindPos3684#2 = findPos3352 (_t3485,Inner365A);
          int intPos3685#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3684);
          tensor[3] refPos3686#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3684);
          int[10] femIndicies3688#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3685);
          tensor[10,3] femDofs3689#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3688);
          tensor[10,3] dofs3687#1 = femDofs3689;
          tensor[10] basisResult368A#1 = EvaluateBasis<BasisArray(10)>(refPos3686);
          tensor[3] compositionl365B#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner365A,dofs3687,basisResult368A,refPos3686);
          real op1_e3_l_25365C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3659,compositionl365B);
          tensor[3] op1_e3_l_26365D#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl3657);
          real op1_e3_l_27365E#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_25365C);
          tensor[3] op1_e3_l_28365F#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_26365D,op1_e3_l_27365E);
          tensor[3] op1_e3_l_293660#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_28365F);
          tensor[3] Inner3661#2 = altCPos349F;
          femData:MeshPos callFindPos368B#2 = findPos3352 (_t3485,Inner3661);
          int intPos368C#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos368B);
          tensor[3] refPos368D#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos368B);
          int[10] femIndicies368F#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos368C);
          tensor[10,3] femDofs3690#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies368F);
          tensor[10,3] dofs368E#1 = femDofs3690;
          tensor[10] basisResult3691#1 = EvaluateBasis<BasisArray(10)>(refPos368D);
          tensor[3] compositionl3662#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3661,dofs368E,basisResult3691,refPos368D);
          tensor[3] Inner3663#2 = altCPos349F;
          femData:MeshPos callFindPos3692#2 = findPos3352 (_t3485,Inner3663);
          int intPos3693#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3692);
          tensor[3] refPos3694#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3692);
          int[10] femIndicies3696#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3693);
          tensor[10,3] femDofs3697#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3696);
          tensor[10,3] dofs3695#1 = femDofs3697;
          tensor[10] basisResult3698#1 = EvaluateBasis<BasisArray(10)>(refPos3694);
          tensor[3] compositionl3664#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3663,dofs3695,basisResult3698,refPos3694);
          tensor[3] Inner3665#2 = altCPos349F;
          femData:MeshPos callFindPos3699#2 = findPos3352 (_t3485,Inner3665);
          int intPos369A#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3699);
          tensor[3] refPos369B#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3699);
          int[10] femIndicies369D#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos369A);
          tensor[10,3] femDofs369E#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies369D);
          tensor[10,3] dofs369C#1 = femDofs369E;
          tensor[10] basisResult369F#1 = EvaluateBasis<BasisArray(10)>(refPos369B);
          tensor[3] compositionl3666#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3665,dofs369C,basisResult369F,refPos369B);
          real op1_e3_l_343667#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3664,compositionl3666);
          tensor[3] op1_e3_l_353668#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl3662);
          real op1_e3_l_363669#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_343667);
          tensor[3] op1_e3_l_37366A#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_353668,op1_e3_l_363669);
          tensor[3] op1_e3_l_38366B#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_37366A);
          tensor[3] op1_e3_l_39366C#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (probe_l_213655,op1_e3_l_293660);
          tensor[3] op1_e3_l_40366D#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (probe_l_213655,op1_e3_l_38366B);
          real op1_e3_l_41366E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_39366C,op1_e3_l_40366D);
          real _t3654#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41366E);
          bool _t36EC#1 = GT<real>(_t3654,_t3528);
          if _t36EC then goto ASSIGN36F0 else goto ASSIGN3A6A
        ASSIGN36F0:  preds = [COND36EE]
          string _t36EF#1 = "ERG:Error in tracing 2: At step:";
          string _t36F1#1 = " with particle:";
          string _t36F3#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t36EF,step349B,_t36F1,startPos34A1,_t36F3);
          string _t36F6#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t36F6,_t364A,altIntermed35C5,_t36F3);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN36FC
        JOIN36FC:  preds = [*STABILIZE36FB,MASSIGN3A6F]
          if _t360B then goto ASSIGN36FF else goto ASSIGN3A66
        ASSIGN36FF:  preds = [COND36FD]
          femData:MeshCell c36FE#1 = LoadFem<femData:MeshCell>(_t3648,_t3646);
          int _t3700#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c36FE);
          femData:FuncCell _t3702#2 = LoadFem<femData:FuncCell>(data348D,_t3700);
          femData:FemFunc _t3704#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3702);
          femData:Space _t3706#2 = ExtractFem<femData:Space,femData:FemFunc>(_t3704);
          int _t3708#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3702);
          int[10] femIndicies370F#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3706,_t3708);
          tensor[10,3] femDofs3710#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t3704,femIndicies370F);
          tensor[10,3] dofs370E#1 = femDofs3710;
          tensor[10] basisResult3711#1 = EvaluateBasis<BasisArray(10)>(_t3644);
          tensor[3] probe_l_8370B#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3708,_t3706,_t3704,_t3644,dofs370E,basisResult3711,_t3644);
          real op1_e3_l_11370C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_8370B,probe_l_8370B);
          real op1_e3_l_12370D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11370C);
          tensor[3] _t370A#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_8370B,op1_e3_l_12370D);
          goto JOIN371C
        JOIN371C:  preds = [ASSIGN3719,ASSIGN3A68]
          tensor[3] _t371A#4 = phi(_t370A,_t371B)
          tensor[3] up2371D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,_t371A);
          femData:MeshPos cPos371F#1 = fn_2FB3594 (cPos349D,up2371D);
          femData:MeshPos callFindPos372C#2 = findPos3352 (_t3485,altIntermed35C5);
          int intPos372D#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos372C);
          tensor[3] refPos372E#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos372C);
          tensor[3] Inner3722#2 = altIntermed35C5;
          femData:MeshPos callFindPos372F#2 = findPos3352 (_t3485,Inner3722);
          int intPos3730#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos372F);
          tensor[3] refPos3731#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos372F);
          int[10] femIndicies3733#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3730);
          tensor[10,3] femDofs3734#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3733);
          tensor[10,3] dofs3732#1 = femDofs3734;
          tensor[10] basisResult3735#1 = EvaluateBasis<BasisArray(10)>(refPos3731);
          tensor[3] compositionl3723#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3722,dofs3732,basisResult3735,refPos3731);
          tensor[3] Inner3724#2 = altIntermed35C5;
          femData:MeshPos callFindPos3736#2 = findPos3352 (_t3485,Inner3724);
          int intPos3737#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3736);
          tensor[3] refPos3738#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3736);
          int[10] femIndicies373A#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3737);
          tensor[10,3] femDofs373B#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies373A);
          tensor[10,3] dofs3739#1 = femDofs373B;
          tensor[10] basisResult373C#1 = EvaluateBasis<BasisArray(10)>(refPos3738);
          tensor[3] compositionl3725#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3724,dofs3739,basisResult373C,refPos3738);
          tensor[3] Inner3726#2 = altIntermed35C5;
          femData:MeshPos callFindPos373D#2 = findPos3352 (_t3485,Inner3726);
          int intPos373E#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos373D);
          tensor[3] refPos373F#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos373D);
          int[10] femIndicies3741#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos373E);
          tensor[10,3] femDofs3742#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3741);
          tensor[10,3] dofs3740#1 = femDofs3742;
          tensor[10] basisResult3743#1 = EvaluateBasis<BasisArray(10)>(refPos373F);
          tensor[3] compositionl3727#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3726,dofs3740,basisResult3743,refPos373F);
          real op1_e3_l_193728#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3725,compositionl3727);
          tensor[3] op1_e3_l_203729#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,compositionl3723);
          real op1_e3_l_21372A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_193728);
          tensor[3] op1_e3_l_22372B#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_203729,op1_e3_l_21372A);
          tensor[3] altCPos3721#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_22372B);
          int _t3767#1 = 1;
          int step3769#1 = IAdd(step349B,_t3767);
          femData:MeshPos callFindPos37C6#2 = findPos3352 (_t3485,altCPos349F);
          int intPos37C7#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos37C6);
          tensor[3] refPos37C8#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos37C6);
          tensor[3] Inner376C#2 = altCPos349F;
          femData:MeshPos callFindPos37C9#2 = findPos3352 (_t3485,Inner376C);
          int intPos37CA#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos37C9);
          tensor[3] refPos37CB#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos37C9);
          int[10] femIndicies37CD#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos37CA);
          tensor[10,3] femDofs37CE#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies37CD);
          tensor[10,3] dofs37CC#1 = femDofs37CE;
          tensor[10] basisResult37CF#1 = EvaluateBasis<BasisArray(10)>(refPos37CB);
          tensor[3] compositionl376D#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner376C,dofs37CC,basisResult37CF,refPos37CB);
          tensor[3] Inner376E#2 = altCPos349F;
          femData:MeshPos callFindPos37D0#2 = findPos3352 (_t3485,Inner376E);
          int intPos37D1#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos37D0);
          tensor[3] refPos37D2#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos37D0);
          int[10] femIndicies37D4#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos37D1);
          tensor[10,3] femDofs37D5#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies37D4);
          tensor[10,3] dofs37D3#1 = femDofs37D5;
          tensor[10] basisResult37D6#1 = EvaluateBasis<BasisArray(10)>(refPos37D2);
          tensor[3] compositionl376F#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner376E,dofs37D3,basisResult37D6,refPos37D2);
          tensor[3] Inner3770#2 = altCPos349F;
          femData:MeshPos callFindPos37D7#2 = findPos3352 (_t3485,Inner3770);
          int intPos37D8#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos37D7);
          tensor[3] refPos37D9#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos37D7);
          int[10] femIndicies37DB#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos37D8);
          tensor[10,3] femDofs37DC#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies37DB);
          tensor[10,3] dofs37DA#1 = femDofs37DC;
          tensor[10] basisResult37DD#1 = EvaluateBasis<BasisArray(10)>(refPos37D9);
          tensor[3] compositionl3771#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3770,dofs37DA,basisResult37DD,refPos37D9);
          real op1_e3_l_443772#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl376F,compositionl3771);
          tensor[3] op1_e3_l_453773#1 = λ(T0[],T1[],T2[3])<(T1 * T0 * T2_{i0})>_{3} (stepSize348F,_t354D,compositionl376D);
          real op1_e3_l_463774#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_443772);
          tensor[3] op1_e3_l_473775#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_453773,op1_e3_l_463774);
          tensor[3] op1_e3_l_483776#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_473775);
          tensor[3] op1_e3_l_493777#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (center3495,op1_e3_l_483776);
          tensor[3] op1_e3_l_503778#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_493777);
          tensor[3] Inner3779#2 = altCPos349F;
          femData:MeshPos callFindPos37DE#2 = findPos3352 (_t3485,Inner3779);
          int intPos37DF#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos37DE);
          tensor[3] refPos37E0#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos37DE);
          int[10] femIndicies37E2#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos37DF);
          tensor[10,3] femDofs37E3#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies37E2);
          tensor[10,3] dofs37E1#1 = femDofs37E3;
          tensor[10] basisResult37E4#1 = EvaluateBasis<BasisArray(10)>(refPos37E0);
          tensor[3] compositionl377A#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3779,dofs37E1,basisResult37E4,refPos37E0);
          tensor[3] Inner377B#2 = altCPos349F;
          femData:MeshPos callFindPos37E5#2 = findPos3352 (_t3485,Inner377B);
          int intPos37E6#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos37E5);
          tensor[3] refPos37E7#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos37E5);
          int[10] femIndicies37E9#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos37E6);
          tensor[10,3] femDofs37EA#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies37E9);
          tensor[10,3] dofs37E8#1 = femDofs37EA;
          tensor[10] basisResult37EB#1 = EvaluateBasis<BasisArray(10)>(refPos37E7);
          tensor[3] compositionl377C#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner377B,dofs37E8,basisResult37EB,refPos37E7);
          tensor[3] Inner377D#2 = altCPos349F;
          femData:MeshPos callFindPos37EC#2 = findPos3352 (_t3485,Inner377D);
          int intPos37ED#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos37EC);
          tensor[3] refPos37EE#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos37EC);
          int[10] femIndicies37F0#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos37ED);
          tensor[10,3] femDofs37F1#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies37F0);
          tensor[10,3] dofs37EF#1 = femDofs37F1;
          tensor[10] basisResult37F2#1 = EvaluateBasis<BasisArray(10)>(refPos37EE);
          tensor[3] compositionl377E#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner377D,dofs37EF,basisResult37F2,refPos37EE);
          real op1_e3_l_54377F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl377C,compositionl377E);
          tensor[3] op1_e3_l_553780#1 = λ(T0[],T1[],T2[3])<(T1 * T0 * T2_{i0})>_{3} (stepSize348F,_t354D,compositionl377A);
          real op1_e3_l_563781#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_54377F);
          tensor[3] op1_e3_l_573782#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_553780,op1_e3_l_563781);
          tensor[3] op1_e3_l_583783#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_573782);
          tensor[3] op1_e3_l_593784#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (center3495,op1_e3_l_583783);
          tensor[3] Inner3785#2 = altCPos349F;
          femData:MeshPos callFindPos37F3#2 = findPos3352 (_t3485,Inner3785);
          int intPos37F4#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos37F3);
          tensor[3] refPos37F5#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos37F3);
          int[10] femIndicies37F7#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos37F4);
          tensor[10,3] femDofs37F8#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies37F7);
          tensor[10,3] dofs37F6#1 = femDofs37F8;
          tensor[10] basisResult37F9#1 = EvaluateBasis<BasisArray(10)>(refPos37F5);
          tensor[3] compositionl3786#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3785,dofs37F6,basisResult37F9,refPos37F5);
          tensor[3] Inner3787#2 = altCPos349F;
          femData:MeshPos callFindPos37FA#2 = findPos3352 (_t3485,Inner3787);
          int intPos37FB#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos37FA);
          tensor[3] refPos37FC#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos37FA);
          int[10] femIndicies37FE#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos37FB);
          tensor[10,3] femDofs37FF#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies37FE);
          tensor[10,3] dofs37FD#1 = femDofs37FF;
          tensor[10] basisResult3800#1 = EvaluateBasis<BasisArray(10)>(refPos37FC);
          tensor[3] compositionl3788#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3787,dofs37FD,basisResult3800,refPos37FC);
          tensor[3] Inner3789#2 = altCPos349F;
          femData:MeshPos callFindPos3801#2 = findPos3352 (_t3485,Inner3789);
          int intPos3802#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3801);
          tensor[3] refPos3803#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3801);
          int[10] femIndicies3805#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3802);
          tensor[10,3] femDofs3806#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3805);
          tensor[10,3] dofs3804#1 = femDofs3806;
          tensor[10] basisResult3807#1 = EvaluateBasis<BasisArray(10)>(refPos3803);
          tensor[3] compositionl378A#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3789,dofs3804,basisResult3807,refPos3803);
          real op1_e3_l_63378B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3788,compositionl378A);
          tensor[3] op1_e3_l_64378C#1 = λ(T0[],T1[],T2[3])<(T1 * T0 * T2_{i0})>_{3} (stepSize348F,_t354D,compositionl3786);
          real op1_e3_l_65378D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_63378B);
          tensor[3] op1_e3_l_66378E#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_64378C,op1_e3_l_65378D);
          tensor[3] op1_e3_l_67378F#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_66378E);
          tensor[3] op1_e3_l_683790#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (center3495,op1_e3_l_67378F);
          tensor[3] op1_e3_l_693791#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_593784);
          tensor[3] op1_e3_l_703792#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_683790);
          real op1_e3_l_713793#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_693791,op1_e3_l_703792);
          tensor[3] op1_e3_l_723794#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,op1_e3_l_503778);
          real op1_e3_l_733795#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_713793);
          tensor[3] op1_e3_l_743796#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,_t371A);
          tensor[3] op1_e3_l_753797#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_723794,op1_e3_l_733795);
          tensor[3] Inner3798#2 = altCPos349F;
          femData:MeshPos callFindPos3808#2 = findPos3352 (_t3485,Inner3798);
          int intPos3809#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3808);
          tensor[3] refPos380A#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3808);
          int[10] femIndicies380C#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3809);
          tensor[10,3] femDofs380D#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies380C);
          tensor[10,3] dofs380B#1 = femDofs380D;
          tensor[10] basisResult380E#1 = EvaluateBasis<BasisArray(10)>(refPos380A);
          tensor[3] compositionl3799#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3798,dofs380B,basisResult380E,refPos380A);
          tensor[3] Inner379A#2 = altCPos349F;
          femData:MeshPos callFindPos380F#2 = findPos3352 (_t3485,Inner379A);
          int intPos3810#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos380F);
          tensor[3] refPos3811#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos380F);
          int[10] femIndicies3813#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3810);
          tensor[10,3] femDofs3814#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3813);
          tensor[10,3] dofs3812#1 = femDofs3814;
          tensor[10] basisResult3815#1 = EvaluateBasis<BasisArray(10)>(refPos3811);
          tensor[3] compositionl379B#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner379A,dofs3812,basisResult3815,refPos3811);
          tensor[3] Inner379C#2 = altCPos349F;
          femData:MeshPos callFindPos3816#2 = findPos3352 (_t3485,Inner379C);
          int intPos3817#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3816);
          tensor[3] refPos3818#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3816);
          int[10] femIndicies381A#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3817);
          tensor[10,3] femDofs381B#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies381A);
          tensor[10,3] dofs3819#1 = femDofs381B;
          tensor[10] basisResult381C#1 = EvaluateBasis<BasisArray(10)>(refPos3818);
          tensor[3] compositionl379D#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner379C,dofs3819,basisResult381C,refPos3818);
          real op1_e3_l_79379E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl379B,compositionl379D);
          tensor[3] op1_e3_l_80379F#1 = λ(T0[],T1[],T2[3])<(T1 * T0 * T2_{i0})>_{3} (stepSize348F,_t354D,compositionl3799);
          real op1_e3_l_8137A0#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_79379E);
          tensor[3] op1_e3_l_8237A1#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_80379F,op1_e3_l_8137A0);
          tensor[3] op1_e3_l_8337A2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_8237A1);
          tensor[3] op1_e3_l_8437A3#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (center3495,op1_e3_l_8337A2);
          tensor[3] op1_e3_l_8537A4#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_8437A3);
          tensor[3] Inner37A5#2 = altCPos349F;
          femData:MeshPos callFindPos381D#2 = findPos3352 (_t3485,Inner37A5);
          int intPos381E#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos381D);
          tensor[3] refPos381F#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos381D);
          int[10] femIndicies3821#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos381E);
          tensor[10,3] femDofs3822#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3821);
          tensor[10,3] dofs3820#1 = femDofs3822;
          tensor[10] basisResult3823#1 = EvaluateBasis<BasisArray(10)>(refPos381F);
          tensor[3] compositionl37A6#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner37A5,dofs3820,basisResult3823,refPos381F);
          tensor[3] Inner37A7#2 = altCPos349F;
          femData:MeshPos callFindPos3824#2 = findPos3352 (_t3485,Inner37A7);
          int intPos3825#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3824);
          tensor[3] refPos3826#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3824);
          int[10] femIndicies3828#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3825);
          tensor[10,3] femDofs3829#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3828);
          tensor[10,3] dofs3827#1 = femDofs3829;
          tensor[10] basisResult382A#1 = EvaluateBasis<BasisArray(10)>(refPos3826);
          tensor[3] compositionl37A8#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner37A7,dofs3827,basisResult382A,refPos3826);
          tensor[3] Inner37A9#2 = altCPos349F;
          femData:MeshPos callFindPos382B#2 = findPos3352 (_t3485,Inner37A9);
          int intPos382C#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos382B);
          tensor[3] refPos382D#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos382B);
          int[10] femIndicies382F#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos382C);
          tensor[10,3] femDofs3830#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies382F);
          tensor[10,3] dofs382E#1 = femDofs3830;
          tensor[10] basisResult3831#1 = EvaluateBasis<BasisArray(10)>(refPos382D);
          tensor[3] compositionl37AA#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner37A9,dofs382E,basisResult3831,refPos382D);
          real op1_e3_l_8937AB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl37A8,compositionl37AA);
          tensor[3] op1_e3_l_9037AC#1 = λ(T0[],T1[],T2[3])<(T1 * T0 * T2_{i0})>_{3} (stepSize348F,_t354D,compositionl37A6);
          real op1_e3_l_9137AD#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_8937AB);
          tensor[3] op1_e3_l_9237AE#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_9037AC,op1_e3_l_9137AD);
          tensor[3] op1_e3_l_9337AF#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_9237AE);
          tensor[3] op1_e3_l_9437B0#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (center3495,op1_e3_l_9337AF);
          tensor[3] Inner37B1#2 = altCPos349F;
          femData:MeshPos callFindPos3832#2 = findPos3352 (_t3485,Inner37B1);
          int intPos3833#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3832);
          tensor[3] refPos3834#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3832);
          int[10] femIndicies3836#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3833);
          tensor[10,3] femDofs3837#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3836);
          tensor[10,3] dofs3835#1 = femDofs3837;
          tensor[10] basisResult3838#1 = EvaluateBasis<BasisArray(10)>(refPos3834);
          tensor[3] compositionl37B2#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner37B1,dofs3835,basisResult3838,refPos3834);
          tensor[3] Inner37B3#2 = altCPos349F;
          femData:MeshPos callFindPos3839#2 = findPos3352 (_t3485,Inner37B3);
          int intPos383A#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3839);
          tensor[3] refPos383B#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3839);
          int[10] femIndicies383D#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos383A);
          tensor[10,3] femDofs383E#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies383D);
          tensor[10,3] dofs383C#1 = femDofs383E;
          tensor[10] basisResult383F#1 = EvaluateBasis<BasisArray(10)>(refPos383B);
          tensor[3] compositionl37B4#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner37B3,dofs383C,basisResult383F,refPos383B);
          tensor[3] Inner37B5#2 = altCPos349F;
          femData:MeshPos callFindPos3840#2 = findPos3352 (_t3485,Inner37B5);
          int intPos3841#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3840);
          tensor[3] refPos3842#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3840);
          int[10] femIndicies3844#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3841);
          tensor[10,3] femDofs3845#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3844);
          tensor[10,3] dofs3843#1 = femDofs3845;
          tensor[10] basisResult3846#1 = EvaluateBasis<BasisArray(10)>(refPos3842);
          tensor[3] compositionl37B6#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner37B5,dofs3843,basisResult3846,refPos3842);
          real op1_e3_l_9837B7#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl37B4,compositionl37B6);
          tensor[3] op1_e3_l_9937B8#1 = λ(T0[],T1[],T2[3])<(T1 * T0 * T2_{i0})>_{3} (stepSize348F,_t354D,compositionl37B2);
          real op1_e3_l_10037B9#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_9837B7);
          tensor[3] op1_e3_l_10137BA#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_9937B8,op1_e3_l_10037B9);
          tensor[3] op1_e3_l_10237BB#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_10137BA);
          tensor[3] op1_e3_l_10337BC#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (center3495,op1_e3_l_10237BB);
          tensor[3] op1_e3_l_10437BD#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_9437B0);
          tensor[3] op1_e3_l_10537BE#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_10337BC);
          real op1_e3_l_10637BF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_10437BD,op1_e3_l_10537BE);
          tensor[3] op1_e3_l_10737C0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,op1_e3_l_8537A4);
          real op1_e3_l_10837C1#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_10637BF);
          tensor[3] op1_e3_l_11037C2#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_10737C0,op1_e3_l_10837C1);
          tensor[3] op1_e3_l_11137C3#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_743796,op1_e3_l_753797);
          tensor[3] op1_e3_l_11237C4#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_743796,op1_e3_l_11037C2);
          real op1_e3_l_11337C5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_11137C3,op1_e3_l_11237C4);
          real _t376B#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11337C5);
          bool _t3923#1 = GT<real>(_t376B,_t3528);
          if _t3923 then goto ASSIGN3927 else goto ASSIGN3A1C
        ASSIGN3927:  preds = [COND3925]
          bool _t3926#1 = true;
          goto JOIN392A
        JOIN392A:  preds = [ASSIGN3927,ASSIGN3A64]
          bool _t3928#1 = phi(_t3926,_t3929)
          if _t3928 then goto ASSIGN392D else goto JOIN39CF
        ASSIGN392D:  preds = [COND392B]
          string _t392C#1 = "ERG:Error in evaluation on pos 2:";
          string _t392E#3 = "\n";
          Print<[string,tensor[3],string]>(_t392C,startPos34A1,_t392E);
          string _t3931#1 = "The errors are:";
          string _t3933#1 = " and ";
          femData:MeshPos callFindPos394E#2 = findPos3352 (_t3485,altIntermed35C5);
          int intPos394F#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos394E);
          tensor[3] refPos3950#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos394E);
          tensor[3] Inner3936#2 = altIntermed35C5;
          femData:MeshPos callFindPos3951#2 = findPos3352 (_t3485,Inner3936);
          int intPos3952#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3951);
          tensor[3] refPos3953#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3951);
          int[10] femIndicies3955#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3952);
          tensor[10,3] femDofs3956#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3955);
          tensor[10,3] dofs3954#1 = femDofs3956;
          tensor[10] basisResult3957#1 = EvaluateBasis<BasisArray(10)>(refPos3953);
          tensor[3] compositionl3937#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3936,dofs3954,basisResult3957,refPos3953);
          tensor[3] Inner3938#2 = altIntermed35C5;
          femData:MeshPos callFindPos3958#2 = findPos3352 (_t3485,Inner3938);
          int intPos3959#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3958);
          tensor[3] refPos395A#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3958);
          int[10] femIndicies395C#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3959);
          tensor[10,3] femDofs395D#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies395C);
          tensor[10,3] dofs395B#1 = femDofs395D;
          tensor[10] basisResult395E#1 = EvaluateBasis<BasisArray(10)>(refPos395A);
          tensor[3] compositionl3939#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3938,dofs395B,basisResult395E,refPos395A);
          tensor[3] Inner393A#2 = altIntermed35C5;
          femData:MeshPos callFindPos395F#2 = findPos3352 (_t3485,Inner393A);
          int intPos3960#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos395F);
          tensor[3] refPos3961#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos395F);
          int[10] femIndicies3963#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3960);
          tensor[10,3] femDofs3964#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3963);
          tensor[10,3] dofs3962#1 = femDofs3964;
          tensor[10] basisResult3965#1 = EvaluateBasis<BasisArray(10)>(refPos3961);
          tensor[3] compositionl393B#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner393A,dofs3962,basisResult3965,refPos3961);
          real op1_e3_l_20393C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3939,compositionl393B);
          tensor[3] op1_e3_l_21393D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,compositionl3937);
          real op1_e3_l_22393E#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_20393C);
          tensor[3] op1_e3_l_23393F#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,_t371A);
          tensor[3] op1_e3_l_243940#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_21393D,op1_e3_l_22393E);
          tensor[3] Inner3941#2 = altIntermed35C5;
          femData:MeshPos callFindPos3966#2 = findPos3352 (_t3485,Inner3941);
          int intPos3967#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3966);
          tensor[3] refPos3968#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3966);
          int[10] femIndicies396A#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3967);
          tensor[10,3] femDofs396B#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies396A);
          tensor[10,3] dofs3969#1 = femDofs396B;
          tensor[10] basisResult396C#1 = EvaluateBasis<BasisArray(10)>(refPos3968);
          tensor[3] compositionl3942#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3941,dofs3969,basisResult396C,refPos3968);
          tensor[3] Inner3943#2 = altIntermed35C5;
          femData:MeshPos callFindPos396D#2 = findPos3352 (_t3485,Inner3943);
          int intPos396E#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos396D);
          tensor[3] refPos396F#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos396D);
          int[10] femIndicies3971#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos396E);
          tensor[10,3] femDofs3972#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3971);
          tensor[10,3] dofs3970#1 = femDofs3972;
          tensor[10] basisResult3973#1 = EvaluateBasis<BasisArray(10)>(refPos396F);
          tensor[3] compositionl3944#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3943,dofs3970,basisResult3973,refPos396F);
          tensor[3] Inner3945#2 = altIntermed35C5;
          femData:MeshPos callFindPos3974#2 = findPos3352 (_t3485,Inner3945);
          int intPos3975#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3974);
          tensor[3] refPos3976#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3974);
          int[10] femIndicies3978#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3975);
          tensor[10,3] femDofs3979#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3978);
          tensor[10,3] dofs3977#1 = femDofs3979;
          tensor[10] basisResult397A#1 = EvaluateBasis<BasisArray(10)>(refPos3976);
          tensor[3] compositionl3946#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3945,dofs3977,basisResult397A,refPos3976);
          real op1_e3_l_283947#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3944,compositionl3946);
          tensor[3] op1_e3_l_293948#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,compositionl3942);
          real op1_e3_l_303949#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_283947);
          tensor[3] op1_e3_l_32394A#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_293948,op1_e3_l_303949);
          tensor[3] op1_e3_l_33394B#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_23393F,op1_e3_l_243940);
          tensor[3] op1_e3_l_34394C#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_23393F,op1_e3_l_32394A);
          real op1_e3_l_35394D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_33394B,op1_e3_l_34394C);
          real _t3935#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_35394D);
          Print<[string,real,string,real,string]>(_t3931,_t376B,_t3933,_t3935,_t392E);
          string _t39C2#1 = "The cells are:";
          femData:MeshCell _t39C4#1 = LoadFem<femData:MeshCell>(_t3648,_t3646);
          string _t39C6#1 = " vs ";
          femData:Mesh _t39C8#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t360D);
          int _t39CA#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t360D);
          femData:MeshCell _t39CC#1 = LoadFem<femData:MeshCell>(_t39C8,_t39CA);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t39C2,_t39C4,_t39C6,_t39CC,_t392E);
          goto JOIN39CF
        JOIN39CF:  preds = [MASSIGN39CE,COND392B]
          self.stream = stream3510;
          self.newStream = newStream3516;
          self.step = step3769;
          self.cPos = cPos371F;
          self.altCPos = altCPos3721;
          active
        ASSIGN3A1C:  preds = [COND3925]
          femData:MeshPos callFindPos39EF#2 = findPos3352 (_t3485,altIntermed35C5);
          int intPos39F0#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos39EF);
          tensor[3] refPos39F1#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos39EF);
          tensor[3] Inner39D7#2 = altIntermed35C5;
          femData:MeshPos callFindPos39F2#2 = findPos3352 (_t3485,Inner39D7);
          int intPos39F3#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos39F2);
          tensor[3] refPos39F4#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos39F2);
          int[10] femIndicies39F6#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos39F3);
          tensor[10,3] femDofs39F7#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies39F6);
          tensor[10,3] dofs39F5#1 = femDofs39F7;
          tensor[10] basisResult39F8#1 = EvaluateBasis<BasisArray(10)>(refPos39F4);
          tensor[3] compositionl39D8#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner39D7,dofs39F5,basisResult39F8,refPos39F4);
          tensor[3] Inner39D9#2 = altIntermed35C5;
          femData:MeshPos callFindPos39F9#2 = findPos3352 (_t3485,Inner39D9);
          int intPos39FA#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos39F9);
          tensor[3] refPos39FB#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos39F9);
          int[10] femIndicies39FD#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos39FA);
          tensor[10,3] femDofs39FE#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies39FD);
          tensor[10,3] dofs39FC#1 = femDofs39FE;
          tensor[10] basisResult39FF#1 = EvaluateBasis<BasisArray(10)>(refPos39FB);
          tensor[3] compositionl39DA#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner39D9,dofs39FC,basisResult39FF,refPos39FB);
          tensor[3] Inner39DB#2 = altIntermed35C5;
          femData:MeshPos callFindPos3A00#2 = findPos3352 (_t3485,Inner39DB);
          int intPos3A01#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A00);
          tensor[3] refPos3A02#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A00);
          int[10] femIndicies3A04#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3A01);
          tensor[10,3] femDofs3A05#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3A04);
          tensor[10,3] dofs3A03#1 = femDofs3A05;
          tensor[10] basisResult3A06#1 = EvaluateBasis<BasisArray(10)>(refPos3A02);
          tensor[3] compositionl39DC#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner39DB,dofs3A03,basisResult3A06,refPos3A02);
          real op1_e3_l_2039DD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl39DA,compositionl39DC);
          tensor[3] op1_e3_l_2139DE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,compositionl39D8);
          real op1_e3_l_2239DF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2039DD);
          tensor[3] op1_e3_l_2339E0#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,_t371A);
          tensor[3] op1_e3_l_2439E1#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2139DE,op1_e3_l_2239DF);
          tensor[3] Inner39E2#2 = altIntermed35C5;
          femData:MeshPos callFindPos3A07#2 = findPos3352 (_t3485,Inner39E2);
          int intPos3A08#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A07);
          tensor[3] refPos3A09#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A07);
          int[10] femIndicies3A0B#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3A08);
          tensor[10,3] femDofs3A0C#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3A0B);
          tensor[10,3] dofs3A0A#1 = femDofs3A0C;
          tensor[10] basisResult3A0D#1 = EvaluateBasis<BasisArray(10)>(refPos3A09);
          tensor[3] compositionl39E3#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner39E2,dofs3A0A,basisResult3A0D,refPos3A09);
          tensor[3] Inner39E4#2 = altIntermed35C5;
          femData:MeshPos callFindPos3A0E#2 = findPos3352 (_t3485,Inner39E4);
          int intPos3A0F#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A0E);
          tensor[3] refPos3A10#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A0E);
          int[10] femIndicies3A12#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3A0F);
          tensor[10,3] femDofs3A13#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3A12);
          tensor[10,3] dofs3A11#1 = femDofs3A13;
          tensor[10] basisResult3A14#1 = EvaluateBasis<BasisArray(10)>(refPos3A10);
          tensor[3] compositionl39E5#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner39E4,dofs3A11,basisResult3A14,refPos3A10);
          tensor[3] Inner39E6#2 = altIntermed35C5;
          femData:MeshPos callFindPos3A15#2 = findPos3352 (_t3485,Inner39E6);
          int intPos3A16#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A15);
          tensor[3] refPos3A17#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A15);
          int[10] femIndicies3A19#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3A16);
          tensor[10,3] femDofs3A1A#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3A19);
          tensor[10,3] dofs3A18#1 = femDofs3A1A;
          tensor[10] basisResult3A1B#1 = EvaluateBasis<BasisArray(10)>(refPos3A17);
          tensor[3] compositionl39E7#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner39E6,dofs3A18,basisResult3A1B,refPos3A17);
          real op1_e3_l_2839E8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl39E5,compositionl39E7);
          tensor[3] op1_e3_l_2939E9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,compositionl39E3);
          real op1_e3_l_3039EA#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2839E8);
          tensor[3] op1_e3_l_3239EB#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2939E9,op1_e3_l_3039EA);
          tensor[3] op1_e3_l_3339EC#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_2339E0,op1_e3_l_2439E1);
          tensor[3] op1_e3_l_3439ED#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_2339E0,op1_e3_l_3239EB);
          real op1_e3_l_3539EE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_3339EC,op1_e3_l_3439ED);
          real _t39D6#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_3539EE);
          real _t3A62#1 = 0.1e-4;
          bool _t3929#1 = GT<real>(_t39D6,_t3A62);
          goto JOIN392A
        ASSIGN3A66:  preds = [COND36FD]
          string _t3A65#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3A65);
          tensor[3] _t371B#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN371C
        ASSIGN3A6A:  preds = [COND36EE]
          string _t3A69#1 = "fine in cell 2:";
          femData:MeshCell _t3A6B#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t3A6D#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t3A69,_t3A6B,_t3A6D);
          goto JOIN36FC
        ASSIGN3A70:  preds = [COND3630]
          bool _t3634#1 = BNot(_t360F);
          goto JOIN3635
        ASSIGN3AB7:  preds = [COND3587]
          femData:MeshPos callFindPos3A8A#2 = findPos3352 (_t3485,altCPos349F);
          int intPos3A8B#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A8A);
          tensor[3] refPos3A8C#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A8A);
          tensor[3] Inner3A72#2 = altCPos349F;
          femData:MeshPos callFindPos3A8D#2 = findPos3352 (_t3485,Inner3A72);
          int intPos3A8E#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A8D);
          tensor[3] refPos3A8F#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A8D);
          int[10] femIndicies3A91#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3A8E);
          tensor[10,3] femDofs3A92#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3A91);
          tensor[10,3] dofs3A90#1 = femDofs3A92;
          tensor[10] basisResult3A93#1 = EvaluateBasis<BasisArray(10)>(refPos3A8F);
          tensor[3] compositionl3A73#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3A72,dofs3A90,basisResult3A93,refPos3A8F);
          tensor[3] Inner3A74#2 = altCPos349F;
          femData:MeshPos callFindPos3A94#2 = findPos3352 (_t3485,Inner3A74);
          int intPos3A95#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A94);
          tensor[3] refPos3A96#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A94);
          int[10] femIndicies3A98#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3A95);
          tensor[10,3] femDofs3A99#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3A98);
          tensor[10,3] dofs3A97#1 = femDofs3A99;
          tensor[10] basisResult3A9A#1 = EvaluateBasis<BasisArray(10)>(refPos3A96);
          tensor[3] compositionl3A75#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3A74,dofs3A97,basisResult3A9A,refPos3A96);
          tensor[3] Inner3A76#2 = altCPos349F;
          femData:MeshPos callFindPos3A9B#2 = findPos3352 (_t3485,Inner3A76);
          int intPos3A9C#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A9B);
          tensor[3] refPos3A9D#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A9B);
          int[10] femIndicies3A9F#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3A9C);
          tensor[10,3] femDofs3AA0#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3A9F);
          tensor[10,3] dofs3A9E#1 = femDofs3AA0;
          tensor[10] basisResult3AA1#1 = EvaluateBasis<BasisArray(10)>(refPos3A9D);
          tensor[3] compositionl3A77#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3A76,dofs3A9E,basisResult3AA1,refPos3A9D);
          real op1_e3_l_223A78#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3A75,compositionl3A77);
          tensor[3] op1_e3_l_233A79#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl3A73);
          real op1_e3_l_243A7A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_223A78);
          tensor[3] op1_e3_l_253A7B#2 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,_t356C);
          tensor[3] op1_e3_l_263A7C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_233A79,op1_e3_l_243A7A);
          tensor[3] Inner3A7D#2 = altCPos349F;
          femData:MeshPos callFindPos3AA2#2 = findPos3352 (_t3485,Inner3A7D);
          int intPos3AA3#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3AA2);
          tensor[3] refPos3AA4#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3AA2);
          int[10] femIndicies3AA6#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3AA3);
          tensor[10,3] femDofs3AA7#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3AA6);
          tensor[10,3] dofs3AA5#1 = femDofs3AA7;
          tensor[10] basisResult3AA8#1 = EvaluateBasis<BasisArray(10)>(refPos3AA4);
          tensor[3] compositionl3A7E#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3A7D,dofs3AA5,basisResult3AA8,refPos3AA4);
          tensor[3] Inner3A7F#2 = altCPos349F;
          femData:MeshPos callFindPos3AA9#2 = findPos3352 (_t3485,Inner3A7F);
          int intPos3AAA#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3AA9);
          tensor[3] refPos3AAB#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3AA9);
          int[10] femIndicies3AAD#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3AAA);
          tensor[10,3] femDofs3AAE#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3AAD);
          tensor[10,3] dofs3AAC#1 = femDofs3AAE;
          tensor[10] basisResult3AAF#1 = EvaluateBasis<BasisArray(10)>(refPos3AAB);
          tensor[3] compositionl3A80#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3A7F,dofs3AAC,basisResult3AAF,refPos3AAB);
          tensor[3] Inner3A81#2 = altCPos349F;
          femData:MeshPos callFindPos3AB0#2 = findPos3352 (_t3485,Inner3A81);
          int intPos3AB1#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3AB0);
          tensor[3] refPos3AB2#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3AB0);
          int[10] femIndicies3AB4#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3AB1);
          tensor[10,3] femDofs3AB5#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3AB4);
          tensor[10,3] dofs3AB3#1 = femDofs3AB5;
          tensor[10] basisResult3AB6#1 = EvaluateBasis<BasisArray(10)>(refPos3AB2);
          tensor[3] compositionl3A82#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,Inner3A81,dofs3AB3,basisResult3AB6,refPos3AB2);
          real op1_e3_l_303A83#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3A80,compositionl3A82);
          tensor[3] op1_e3_l_313A84#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl3A7E);
          real op1_e3_l_323A85#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_303A83);
          tensor[3] op1_e3_l_343A86#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_313A84,op1_e3_l_323A85);
          tensor[3] op1_e3_l_353A87#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_253A7B,op1_e3_l_263A7C);
          tensor[3] op1_e3_l_363A88#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_253A7B,op1_e3_l_343A86);
          real op1_e3_l_373A89#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_353A87,op1_e3_l_363A88);
          real _t3A71#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_373A89);
          bool _t358B#1 = GT<real>(_t3A71,_t3528);
          goto JOIN358C
        ASSIGN3AFF:  preds = [COND354F]
          string _t3AFE#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3AFE);
          tensor[3] _t356D#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN356E
        ASSIGN3B03:  preds = [COND352C]
          string _t3B02#1 = "fine in cell 1:";
          femData:MeshCell _t3B04#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t3B06#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t3B02,_t3B04,_t3B06);
          goto JOIN354C
        ASSIGN3B0A:  preds = [COND34E4]
          bool _t3B09#1 = BNot(_t34D7);
          if _t3B09 then goto ASSIGN3B0D else goto ASSIGN3B10
        ASSIGN3B0D:  preds = [COND3B0B]
          bool _t3B0C#1 = true;
          goto JOIN3B0F
        JOIN3B0F:  preds = [ASSIGN3B0D,ASSIGN3B10]
          bool _t34E8#1 = phi(_t3B0C,_t3B0E)
          goto JOIN34E9
        ASSIGN3B10:  preds = [COND3B0B]
          bool _t3B0E#1 = EQ<int>(step349B,stepMax3491);
          goto JOIN3B0F
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY3B11:  preds = []
      tensor[3][] startPoints3B12#1 = globals.startPoints3301;
    FOREACH3B15:  preds = [ASSIGN3B13,NEXT3B17]
      foreach (x3B14 in startPoints3B12) on exit goto RETURN3B18
      new gg(x3B14);
      goto FOREACH3B15
    RETURN3B18:  preds = [FOREACH3B15]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData32FC (meshData) = <no-default>
  input 0space0409_intermedateGlobal32FD (space) = <no-default>
  input 0data040B_intermedateGlobal32FE (data) = <no-default>
  input timeSteps32FF (timeSteps) = <default>
  input timeEps3300 (timeEps) = <default>
  input startPoints3301 (startPoints) = <no-default>
  input stepSize3302 (stepSize) = <default>
  input stepMax3303 (stepMax) = <default>
  input M3304 (M) = <no-default>
  input center3305 (center) = <no-default>
  global femData:FemFunc data3306
  global femData:Mesh _t3307
  global femData:Space _tX3308
## functions
  function femData:MeshPos findPos3352 (femData:Mesh mesh3353#11, tensor[3] pos3354#4) {
    ENTRY3355:  preds = []
      real _t3356#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn3358#10 = <tensor[3]>[_t3356,_t3356,_t3356];
      int newtonInt335A#1 = 0;
      int[] yayCells335C#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3353,pos3354);
    FOREACH335F:  preds = [ASSIGN335D,NEXT3477]
      foreach (cellItter335E in yayCells335C) on exit goto ASSIGN3479
      int _t3360#1 = 16;
      int[] _t3362#1 = Range(newtonInt335A,_t3360);
    FOREACH3365:  preds = [ASSIGN3363,NEXT3476]
      foreach (newtonItter3364 in _t3362) on exit goto NEXT3477
        tensor[3] xn3367#6 = phi(xn3358,xn3366)
      int[4] femIndicies3378#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh3353,cellItter335E);
      tensor[4,3] femDofs3379#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh3353,femIndicies3378);
      tensor[3,4] basisResult337A#4 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3,3] probe_l_103368#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3,3,3] op1_e3_l_123369#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_103368);
      tensor[3,3,3] op1_e3_l_13336A#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_103368,op1_e3_l_123369);
      tensor[3] probe_l_14336B#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3] probe_l_15336C#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3] probe_l_16336D#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3,3] op1_e3_l_17336E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_16336D);
      tensor[3] op1_e3_l_18336F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_15336C,op1_e3_l_17336E);
      real op1_e3_l_193370#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_14336B,op1_e3_l_18336F);
      tensor[3,3] op1_e3_l_203371#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_13336A);
      real op1_e3_l_213372#1 = λ(T0[])<(2 * T0)> (op1_e3_l_193370);
      tensor[4] basisResult3382#2 = EvaluateBasis<BasisArray(4)>(xn3367);
      tensor[3] probe_l_223373#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn3367,cellItter335E,mesh3353,femDofs3379,basisResult3382,xn3367);
      tensor[3,3] op1_e3_l_233374#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_203371,op1_e3_l_213372);
      tensor[3] op1_e3_l_243375#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos3354,probe_l_223373);
      tensor[3] op1_e3_l_253376#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_233374,op1_e3_l_243375);
      tensor[3] xn3366#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn3367,op1_e3_l_253376);
      real _t339F#6 = 0.1e-7;
      real _t33A1#1 = λ(T0[],T1[])<(T0 * T1)> (_t339F,_t339F);
      tensor[3] probe_l_3033AF#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter335E,mesh3353,xn3367,femDofs3379,basisResult3382,xn3367);
      tensor[3] op1_e3_l_3233B1#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos3354,probe_l_3033AF);
      tensor[3] op1_e3_l_4833B2#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_233374,op1_e3_l_3233B1);
      real _t33A3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_4833B2,op1_e3_l_4833B2);
      bool _t33DB#1 = GTE<real>(_t33A1,_t33A3);
      if _t33DB then goto ASSIGN33DF else goto JOIN3475
    ASSIGN33DF:  preds = [COND33DD]
      real _t33DE#4 = 0.1e1;
      real _t33E0#1 = λ(T0[],T1[])<(T0 + T1)> (_t33DE,_t339F);
      tensor[3] _t33E2#1 = <tensor[3]>[_t33DE,_t33DE,_t33DE];
      real _t33E4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t33E2,xn3366);
      bool _t341E#1 = GT<real>(_t33E0,_t33E4);
      tensor[3] _t3420#1 = <tensor[3]>[_t339F,_t339F,_t339F];
      tensor[3] _t3422#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t3420,xn3366);
      real _t345C#1 = TensorIndex<tensor[3],[0]>(_t3422);
      real _t345E#3 = -0.e0;
      bool _t3460#1 = GT<real>(_t345C,_t345E);
      real _t3462#1 = TensorIndex<tensor[3],[1]>(_t3422);
      bool _t3464#1 = GT<real>(_t3462,_t345E);
      real _t3466#1 = TensorIndex<tensor[3],[2]>(_t3422);
      bool _t3468#1 = GT<real>(_t3466,_t345E);
      bool _t346A#1 = BAnd(_t3464,_t3468);
      bool _t346C#1 = BAnd(_t3460,_t346A);
      bool _t346E#1 = BAnd(_t341E,_t346C);
      if _t346E then goto ASSIGN3472 else goto JOIN3474
    ASSIGN3472:  preds = [COND3470]
      femData:MeshPos _t3471#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3353,cellItter335E,xn3366,pos3354);
      return _t3471
      goto JOIN3474
    JOIN3474:  preds = [*RETURN(_t3471)3473,COND3470]
      goto JOIN3475
    JOIN3475:  preds = [JOIN3474,COND33DD]
      goto FOREACH3365
    NEXT3477:  preds = [FOREACH3365]
      goto FOREACH335F
    ASSIGN3479:  preds = [FOREACH335F]
      femData:MeshPos _t3478#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3353);
      return _t3478
}
  function femData:MeshPos fn_2FB3594 (femData:MeshPos x3595#5, tensor[3] dPos3596#1) {
    ENTRY3597:  preds = []
      femData:Mesh meshData3598#1 = globals.meshData32FC;
      int timeSteps359A#1 = globals.timeSteps32FF;
      bool _t359C#1 = ExtractFemItem<bool,Valid(MeshPos)>(x3595);
      bool _t359E#1 = BNot(_t359C);
      if _t359E then goto RETURN(x3595)35A1 else goto JOIN35A2
    RETURN(x3595)35A1:  preds = [COND35A0]
      return x3595
      goto JOIN35A2
    JOIN35A2:  preds = [*RETURN(x3595)35A1,COND35A0]
      int _t35A3#1 = 0;
      int[] _t35A5#1 = Range(_t35A3,timeSteps359A);
    FOREACH35A8:  preds = [ASSIGN35A6,*NEXT35AA]
      foreach (i35A7 in _t35A5) on exit goto ASSIGN35AC
      return
      goto FOREACH35A8
    ASSIGN35AC:  preds = [FOREACH35A8]
      string _t35AB#1 = "Took stupid way out!\n";
      Print<[string]>(_t35AB);
      tensor[3] _t35AE#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x3595);
      int _t35B0#2 = ExtractFemItem<int,CellIndex(MeshPos)>(x3595);
      femData:Mesh _t35B2#3 = ExtractFem<femData:Mesh,femData:MeshPos>(x3595);
      int[4] femIndicies35B7#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t35B2,_t35B0);
      tensor[4,3] femDofs35B8#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t35B2,femIndicies35B7);
      tensor[4] basisResult35B9#1 = EvaluateBasis<BasisArray(4)>(_t35AE);
      tensor[3] probe_l_535B5#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t35B0,_t35B2,_t35AE,femDofs35B8,basisResult35B9,_t35AE);
      tensor[3] _t35B4#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (dPos3596,probe_l_535B5);
      femData:MeshPos cmp35C0#1 = findPos3352 (meshData3598,_t35B4);
      return cmp35C0
}
## input initialization
  ENTRY3309:  preds = []
    int timeSteps330A#1 = 32;
    globals.timeSteps32FF = timeSteps330A;
    real timeEps330D#1 = 0.1e-6;
    globals.timeEps3300 = timeEps330D;
    real stepSize3310#1 = 0.1e-1;
    globals.stepSize3302 = stepSize3310;
    int stepMax3313#1 = 300;
    globals.stepMax3303 = stepMax3313;
    return
## global-variable initialization
  ENTRY3317:  preds = []
    femData:Mesh meshData3318#3 = globals.meshData32FC;
    femData:Space 0space0409_intermedateGlobal331A#1 = globals.0space0409_intermedateGlobal32FD;
    femData:FemFunc 0data040B_intermedateGlobal331C#1 = globals.0data040B_intermedateGlobal32FE;
    int _t331E#1 = 0;
    int _t3320#1 = 1;
    int _t3322#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3318);
    int _t3324#1 = ISub(_t3322,_t3320);
    int[] _t3326#1 = Range(_t331E,_t3324);
    femData:MeshCell[] _t3328#1 = <femData:MeshCell[]>{};
  FOREACH332B:  preds = [ASSIGN3329,NEXT3331]
    foreach (_t332A in _t3326) on exit goto ASSIGN3333
      femData:MeshCell[] _t332F#1 = phi(_t3328,_t332E)
    femData:MeshCell _t332C#1 = LoadFem<femData:MeshCell>(meshData3318,_t332A);
    femData:MeshCell[] _t332E#1 = Append<femData:MeshCell>(_t332F,_t332C);
    goto FOREACH332B
  ASSIGN3333:  preds = [FOREACH332B]
    femData:Space space3332#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal331A,meshData3318);
    femData:FemFunc data3334#2 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal331C,space3332);
    globals.data3306 = data3334;
    femData:Space _t3337#2 = ExtractFem<femData:Space,femData:FemFunc>(data3334);
    femData:Mesh _t3339#1 = ExtractFem<femData:Mesh,femData:Space>(_t3337);
    globals._t3307 = _t3339;
    globals._tX3308 = _t3337;
    return
## strand
  strand gg (tensor[3] startPos333E#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3345:  preds = []
        femData:Mesh meshData3346#1 = globals.meshData32FC;
        tensor[3][0] _t3348#1 = <tensor[3][0]>{};
        tensor[3][] _t334A#1 = MkDynamic<tensor[3],0>(_t3348);
        tensor[3][0] _t334C#1 = <tensor[3][0]>{};
        tensor[3][] _t334E#1 = MkDynamic<tensor[3],0>(_t334C);
        int step3350#1 = 0;
        femData:MeshPos cPos347B#1 = findPos3352 (meshData3346,startPos333E);
        self.stream = _t334A;
        self.newStream = _t334E;
        self.step = step3350;
        self.cPos = cPos347B;
        self.altCPos = startPos333E;
        self.startPos = startPos333E;
        return
    end state init
    method update
        ENTRY3484:  preds = []
          femData:Mesh _t3485#6 = globals._t3307;
          femData:Space _t3487#6 = globals._tX3308;
          femData:FemFunc data3489#8 = globals.data3306;
          femData:Mesh meshData348B#2 = globals.meshData32FC;
          real stepSize348F#8 = globals.stepSize3302;
          int stepMax3491#1 = globals.stepMax3303;
          tensor[3,3] M3493#2 = globals.M3304;
          tensor[3] center3495#2 = globals.center3305;
          tensor[3][] stream3497#2 = self.stream;
          tensor[3][] newStream3499#2 = self.newStream;
          int step349B#5 = self.step;
          femData:MeshPos cPos349D#9 = self.cPos;
          tensor[3] altCPos349F#13 = self.altCPos;
          tensor[3] startPos34A1#6 = self.startPos;
          int _t34A3#1 = 0;
          bool _t34A5#1 = EQ<int>(step349B,_t34A3);
          if _t34A5 then goto ASSIGN34A9 else goto JOIN34D2
        ASSIGN34A9:  preds = [COND34A7]
          bool _t34A8#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos349D);
          if _t34A8 then goto ASSIGN34AC else goto JOIN34D1
        ASSIGN34AC:  preds = [COND34AA]
          tensor[3] rp34AB#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          real _t34AD#1 = TensorIndex<tensor[3],[0]>(rp34AB);
          real _t34AF#3 = 0.1e-5;
          bool _t34B1#1 = LTE<real>(_t34AD,_t34AF);
          if _t34B1 then goto STABILIZE34B4 else goto JOIN34B5
        STABILIZE34B4:  preds = [COND34B3]
          stabilize
          goto JOIN34B5
        JOIN34B5:  preds = [*STABILIZE34B4,COND34B3]
          real _t34B6#1 = TensorIndex<tensor[3],[1]>(rp34AB);
          bool _t34B8#1 = LTE<real>(_t34B6,_t34AF);
          if _t34B8 then goto STABILIZE34BB else goto JOIN34BC
        STABILIZE34BB:  preds = [COND34BA]
          stabilize
          goto JOIN34BC
        JOIN34BC:  preds = [*STABILIZE34BB,COND34BA]
          real _t34BD#1 = TensorIndex<tensor[3],[2]>(rp34AB);
          bool _t34BF#1 = LTE<real>(_t34BD,_t34AF);
          if _t34BF then goto STABILIZE34C2 else goto JOIN34C3
        STABILIZE34C2:  preds = [COND34C1]
          stabilize
          goto JOIN34C3
        JOIN34C3:  preds = [*STABILIZE34C2,COND34C1]
          real _t34C4#3 = 0.1e1;
          tensor[3] _t34C6#1 = <tensor[3]>[_t34C4,_t34C4,_t34C4];
          real r34C8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t34C6,rp34AB);
          real _t34CA#1 = 0.9999999e0;
          bool _t34CC#1 = LTE<real>(_t34CA,r34C8);
          if _t34CC then goto STABILIZE34CF else goto JOIN34D0
        STABILIZE34CF:  preds = [COND34CE]
          stabilize
          goto JOIN34D0
        JOIN34D0:  preds = [*STABILIZE34CF,COND34CE]
          goto JOIN34D1
        JOIN34D1:  preds = [JOIN34D0,COND34AA]
          goto JOIN34D2
        JOIN34D2:  preds = [JOIN34D1,COND34A7]
          bool _t34D3#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos349D);
          femData:MeshPos _t34D5#6 = findPos3352 (meshData348B,altCPos349F);
          bool _t34D7#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t34D5);
          bool _t34D9#1 = NEQ<bool>(_t34D3,_t34D7);
          if _t34D9 then goto ASSIGN34DD else goto JOIN34E1
        ASSIGN34DD:  preds = [COND34DB]
          string _t34DC#1 = "ERG:Warning of validity startPos:";
          string _t34DE#1 = "\n";
          Print<[string,tensor[3],string]>(_t34DC,startPos34A1,_t34DE);
          goto JOIN34E1
        JOIN34E1:  preds = [MASSIGN34E0,COND34DB]
          bool _t34E2#2 = BNot(_t34D3);
          if _t34E2 then goto ASSIGN34E6 else goto ASSIGN3B0A
        ASSIGN34E6:  preds = [COND34E4]
          bool _t34E5#1 = true;
          goto JOIN34E9
        JOIN34E9:  preds = [ASSIGN34E6,JOIN3B0F]
          bool _t34E7#1 = phi(_t34E5,_t34E8)
          if _t34E7 then goto ASSIGN34EC else goto JOIN34FB
        ASSIGN34EC:  preds = [COND34EA]
          string _t34EB#1 = "Went off the mesh\?";
          string _t34ED#2 = " and ";
          bool _t34EF#1 = BNot(_t34D7);
          string _t34F1#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t34EB,_t34E2,_t34ED,altCPos349F,_t34ED,_t34EF,_t34F1);
          string _t34F4#1 = "Pos is:";
          tensor[3] _t34F6#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          Print<[string,tensor[3],string]>(_t34F4,_t34F6,_t34F1);
          Print<[tensor[3][],string,tensor[3][],string]>(stream3497,_t34F1,newStream3499,_t34F1);
          stabilize
          goto JOIN34FB
        JOIN34FB:  preds = [*STABILIZE34FA,COND34EA]
          tensor[3] _t34FC#9 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          int _t34FE#7 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos349D);
          femData:Mesh _t3500#9 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos349D);
          int[4] femIndicies3504#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t3500,_t34FE);
          tensor[4,3] femDofs3505#2 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t3500,femIndicies3504);
          tensor[4] basisResult3506#2 = EvaluateBasis<BasisArray(4)>(_t34FC);
          tensor[3] _t3502#2 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t34FE,_t3500,_t3500,_t34FC,femDofs3505,basisResult3506,_t34FC);
          tensor[3][1] _t350C#1 = <tensor[3][1]>{_t3502};
          tensor[3][] _t350E#1 = MkDynamic<tensor[3],1>(_t350C);
          tensor[3][] stream3510#4 = Concat<tensor[3]>(stream3497,_t350E);
          tensor[3][1] _t3512#1 = <tensor[3][1]>{altCPos349F};
          tensor[3][] _t3514#1 = MkDynamic<tensor[3],1>(_t3512);
          tensor[3][] newStream3516#4 = Concat<tensor[3]>(newStream3499,_t3514);
          tensor[3] probe_l_53519#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t34FE,_t3500,_t34FC,femDofs3505,basisResult3506,_t34FC);
          tensor[3] op1_e3_l_7351A#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (altCPos349F,probe_l_53519);
          real op1_e3_l_9351B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_7351A,op1_e3_l_7351A);
          real _t3518#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_9351B);
          real _t3528#5 = 0.1e-5;
          bool _t352A#1 = GT<real>(_t3518,_t3528);
          if _t352A then goto ASSIGN352E else goto ASSIGN3B03
        ASSIGN352E:  preds = [COND352C]
          string _t352D#1 = "ERG:Error in tracing 1: At step:";
          string _t352F#1 = " with particle:";
          string _t3531#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t352D,step349B,_t352F,startPos34A1,_t3531);
          string _t3534#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t3534,_t3502,altCPos349F,_t3531);
          string _t3537#1 = "Cells are:";
          femData:MeshCell _t3539#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t353B#2 = " and ";
          femData:Mesh _t353D#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t34D5);
          int _t353F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t34D5);
          femData:MeshCell _t3541#1 = LoadFem<femData:MeshCell>(_t353D,_t353F);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t3537,_t3539,_t353B,_t3541,_t3531);
          string _t3544#1 = "Ref poses are:";
          tensor[3] _t3546#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t34D5);
          Print<[string,tensor[3],string,tensor[3],string]>(_t3544,_t34FC,_t353B,_t3546,_t3531);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN354C
        JOIN354C:  preds = [*STABILIZE354B,MASSIGN3B08]
          real _t354D#5 = 0.5e0;
          if _t34D3 then goto ASSIGN3551 else goto ASSIGN3AFF
        ASSIGN3551:  preds = [COND354F]
          femData:MeshCell c3550#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          int _t3552#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3550);
          femData:FuncCell _t3554#2 = LoadFem<femData:FuncCell>(data3489,_t3552);
          femData:FemFunc _t3556#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3554);
          femData:Space _t3558#2 = ExtractFem<femData:Space,femData:FemFunc>(_t3556);
          int _t355A#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3554);
          int[10] femIndicies3561#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3558,_t355A);
          tensor[10,3] femDofs3562#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t3556,femIndicies3561);
          tensor[10] basisResult3563#1 = EvaluateBasis<BasisArray(10)>(_t34FC);
          tensor[3] probe_l_8355D#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t355A,_t3558,_t3556,_t34FC,femDofs3562,basisResult3563,_t34FC);
          real op1_e3_l_11355E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_8355D,probe_l_8355D);
          real op1_e3_l_12355F#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11355E);
          tensor[3] _t355C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_8355D,op1_e3_l_12355F);
          goto JOIN356E
        JOIN356E:  preds = [ASSIGN356B,ASSIGN3B01]
          tensor[3] _t356C#1 = phi(_t355C,_t356D)
          tensor[3] up1356F#3 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,_t356C);
          tensor[3] op1_e3_l_113572#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (altCPos349F,center3495);
          tensor[3] op1_e3_l_123573#3 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_113572);
          real op1_e3_l_173574#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_123573,op1_e3_l_123573);
          tensor[3] op1_e3_l_183575#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,op1_e3_l_123573);
          real op1_e3_l_193576#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_173574);
          tensor[3] op1_e3_l_213578#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_183575,op1_e3_l_193576);
          tensor[3] op1_e3_l_333579#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up1356F,op1_e3_l_213578);
          real op1_e3_l_35357A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_333579,op1_e3_l_333579);
          real _t3571#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_35357A);
          bool _t3585#1 = GT<real>(_t3571,_t3528);
          if _t3585 then goto ASSIGN3589 else goto ASSIGN3AB7
        ASSIGN3589:  preds = [COND3587]
          bool _t3588#1 = true;
          goto JOIN358C
        JOIN358C:  preds = [ASSIGN3589,ASSIGN3AFD]
          bool _t358A#1 = phi(_t3588,_t358B)
          if _t358A then goto ASSIGN358F else goto JOIN3593
        ASSIGN358F:  preds = [COND358D]
          string _t358E#1 = "ERG:Error in evaluation on pos 1:";
          string _t3590#1 = "\n";
          Print<[string,tensor[3],string]>(_t358E,startPos34A1,_t3590);
          goto JOIN3593
        JOIN3593:  preds = [MASSIGN3592,COND358D]
          femData:MeshPos intermed35C3#4 = fn_2FB3594 (cPos349D,up1356F);
          femData:MeshPos callFindPos35D0#2 = findPos3352 (_t3485,altCPos349F);
          int intPos35D1#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos35D0);
          tensor[3] refPos35D2#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos35D0);
          int[10] femIndicies35D7#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos35D1);
          tensor[10,3] femDofs35D8#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies35D7);
          tensor[10] basisResult35D9#1 = EvaluateBasis<BasisArray(10)>(refPos35D2);
          tensor[3] compositionl35C7#4 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,altCPos349F,femDofs35D8,basisResult35D9,refPos35D2);
          real op1_e3_l_2035CC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl35C7,compositionl35C7);
          tensor[3] op1_e3_l_2135CD#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl35C7);
          real op1_e3_l_2235CE#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2035CC);
          tensor[3] op1_e3_l_2335CF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2135CD,op1_e3_l_2235CE);
          tensor[3] altIntermed35C5#7 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_2335CF);
          bool _t360B#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed35C3);
          femData:MeshPos _t360D#5 = findPos3352 (meshData348B,altIntermed35C5);
          bool _t360F#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t360D);
          bool _t3611#1 = NEQ<bool>(_t360B,_t360F);
          if _t3611 then goto ASSIGN3615 else goto JOIN362D
        ASSIGN3615:  preds = [COND3613]
          string _t3614#1 = "ERG:Warning of validity intermed";
          string _t3616#3 = "\n";
          Print<[string,tensor[3],string]>(_t3614,startPos34A1,_t3616);
          string _t3619#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t3619,altIntermed35C5,_t3616);
          string _t361C#1 = "Cell change: ";
          femData:Mesh _t361E#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t34D5);
          int _t3620#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t34D5);
          femData:MeshCell _t3622#1 = LoadFem<femData:MeshCell>(_t361E,_t3620);
          string _t3624#1 = " to ";
          femData:Mesh _t3626#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t360D);
          int _t3628#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t360D);
          femData:MeshCell _t362A#1 = LoadFem<femData:MeshCell>(_t3626,_t3628);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t361C,_t3622,_t3624,_t362A,_t3616);
          goto JOIN362D
        JOIN362D:  preds = [MASSIGN362C,COND3613]
          bool _t362E#2 = BNot(_t360B);
          if _t362E then goto ASSIGN3632 else goto ASSIGN3A70
        ASSIGN3632:  preds = [COND3630]
          bool _t3631#1 = true;
          goto JOIN3635
        JOIN3635:  preds = [ASSIGN3632,ASSIGN3A70]
          bool _t3633#1 = phi(_t3631,_t3634)
          if _t3633 then goto ASSIGN3638 else goto JOIN3643
        ASSIGN3638:  preds = [COND3636]
          string _t3637#1 = "Went off the mesh\?";
          string _t3639#2 = " and ";
          bool _t363B#1 = BNot(_t360F);
          string _t363D#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t3637,_t362E,_t3639,altIntermed35C5,_t3639,_t363B,_t363D);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN3643
        JOIN3643:  preds = [*STABILIZE3642,COND3636]
          tensor[3] _t3644#8 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed35C3);
          int _t3646#5 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed35C3);
          femData:Mesh _t3648#7 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed35C3);
          int[4] femIndicies364C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t3648,_t3646);
          tensor[4,3] femDofs364D#2 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t3648,femIndicies364C);
          tensor[4] basisResult364E#2 = EvaluateBasis<BasisArray(4)>(_t3644);
          tensor[3] _t364A#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t3646,_t3648,_t3648,_t3644,femDofs364D,basisResult364E,_t3644);
          tensor[3] probe_l_213655#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t3646,_t3648,_t3644,femDofs364D,basisResult364E,_t3644);
          tensor[3] op1_e3_l_39366C#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (probe_l_213655,altIntermed35C5);
          real op1_e3_l_41366E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_39366C,op1_e3_l_39366C);
          real _t3654#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41366E);
          bool _t36EC#1 = GT<real>(_t3654,_t3528);
          if _t36EC then goto ASSIGN36F0 else goto ASSIGN3A6A
        ASSIGN36F0:  preds = [COND36EE]
          string _t36EF#1 = "ERG:Error in tracing 2: At step:";
          string _t36F1#1 = " with particle:";
          string _t36F3#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t36EF,step349B,_t36F1,startPos34A1,_t36F3);
          string _t36F6#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t36F6,_t364A,altIntermed35C5,_t36F3);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN36FC
        JOIN36FC:  preds = [*STABILIZE36FB,MASSIGN3A6F]
          if _t360B then goto ASSIGN36FF else goto ASSIGN3A66
        ASSIGN36FF:  preds = [COND36FD]
          femData:MeshCell c36FE#1 = LoadFem<femData:MeshCell>(_t3648,_t3646);
          int _t3700#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c36FE);
          femData:FuncCell _t3702#2 = LoadFem<femData:FuncCell>(data3489,_t3700);
          femData:FemFunc _t3704#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3702);
          femData:Space _t3706#2 = ExtractFem<femData:Space,femData:FemFunc>(_t3704);
          int _t3708#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3702);
          int[10] femIndicies370F#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3706,_t3708);
          tensor[10,3] femDofs3710#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t3704,femIndicies370F);
          tensor[10] basisResult3711#1 = EvaluateBasis<BasisArray(10)>(_t3644);
          tensor[3] probe_l_8370B#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3708,_t3706,_t3704,_t3644,femDofs3710,basisResult3711,_t3644);
          real op1_e3_l_11370C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_8370B,probe_l_8370B);
          real op1_e3_l_12370D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11370C);
          tensor[3] _t370A#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_8370B,op1_e3_l_12370D);
          goto JOIN371C
        JOIN371C:  preds = [ASSIGN3719,ASSIGN3A68]
          tensor[3] _t371A#1 = phi(_t370A,_t371B)
          tensor[3] up2371D#4 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,_t371A);
          femData:MeshPos cPos371F#1 = fn_2FB3594 (cPos349D,up2371D);
          femData:MeshPos callFindPos372C#2 = findPos3352 (_t3485,altIntermed35C5);
          int intPos372D#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos372C);
          tensor[3] refPos372E#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos372C);
          int[10] femIndicies3733#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos372D);
          tensor[10,3] femDofs3734#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3733);
          tensor[10] basisResult3735#1 = EvaluateBasis<BasisArray(10)>(refPos372E);
          tensor[3] compositionl3723#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,altIntermed35C5,femDofs3734,basisResult3735,refPos372E);
          real op1_e3_l_193728#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3723,compositionl3723);
          tensor[3] op1_e3_l_203729#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,compositionl3723);
          real op1_e3_l_21372A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_193728);
          tensor[3] op1_e3_l_22372B#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_203729,op1_e3_l_21372A);
          tensor[3] altCPos3721#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_22372B);
          int _t3767#1 = 1;
          int step3769#1 = IAdd(step349B,_t3767);
          tensor[3] op1_e3_l_453773#1 = λ(T0[],T1[],T2[3])<(T1 * T0 * T2_{i0})>_{3} (stepSize348F,_t354D,compositionl35C7);
          tensor[3] op1_e3_l_473775#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_453773,op1_e3_l_2235CE);
          tensor[3] op1_e3_l_483776#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_473775);
          tensor[3] op1_e3_l_493777#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (center3495,op1_e3_l_483776);
          tensor[3] op1_e3_l_503778#3 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_493777);
          real op1_e3_l_713793#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_503778,op1_e3_l_503778);
          tensor[3] op1_e3_l_723794#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,op1_e3_l_503778);
          real op1_e3_l_733795#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_713793);
          tensor[3] op1_e3_l_753797#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_723794,op1_e3_l_733795);
          tensor[3] op1_e3_l_11137C3#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up2371D,op1_e3_l_753797);
          real op1_e3_l_11337C5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_11137C3,op1_e3_l_11137C3);
          real _t376B#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11337C5);
          bool _t3923#1 = GT<real>(_t376B,_t3528);
          if _t3923 then goto ASSIGN3927 else goto ASSIGN3B41
        ASSIGN3927:  preds = [COND3925]
          bool _t3926#1 = true;
          goto JOIN392A
        JOIN392A:  preds = [ASSIGN3927,ASSIGN3A64]
          bool _t3928#1 = phi(_t3926,_t3929)
          if _t3928 then goto ASSIGN392D else goto JOIN39CF
        ASSIGN392D:  preds = [COND392B]
          string _t392C#1 = "ERG:Error in evaluation on pos 2:";
          string _t392E#3 = "\n";
          Print<[string,tensor[3],string]>(_t392C,startPos34A1,_t392E);
          string _t3931#1 = "The errors are:";
          string _t3933#1 = " and ";
          tensor[3] op1_e3_l_33394B#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up2371D,op1_e3_l_22372B);
          real op1_e3_l_35394D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_33394B,op1_e3_l_33394B);
          real _t3935#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_35394D);
          Print<[string,real,string,real,string]>(_t3931,_t376B,_t3933,_t3935,_t392E);
          string _t39C2#1 = "The cells are:";
          femData:MeshCell _t39C4#1 = LoadFem<femData:MeshCell>(_t3648,_t3646);
          string _t39C6#1 = " vs ";
          femData:Mesh _t39C8#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t360D);
          int _t39CA#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t360D);
          femData:MeshCell _t39CC#1 = LoadFem<femData:MeshCell>(_t39C8,_t39CA);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t39C2,_t39C4,_t39C6,_t39CC,_t392E);
          goto JOIN39CF
        JOIN39CF:  preds = [MASSIGN39CE,COND392B]
          self.stream = stream3510;
          self.newStream = newStream3516;
          self.step = step3769;
          self.cPos = cPos371F;
          self.altCPos = altCPos3721;
          active
        ASSIGN3B41:  preds = [COND3925]
          tensor[3] op1_e3_l_3339EC#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up2371D,op1_e3_l_22372B);
          real op1_e3_l_3539EE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_3339EC,op1_e3_l_3339EC);
          real _t39D6#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_3539EE);
          real _t3A62#1 = 0.1e-4;
          bool _t3929#1 = GT<real>(_t39D6,_t3A62);
          goto JOIN392A
        ASSIGN3A66:  preds = [COND36FD]
          string _t3A65#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3A65);
          tensor[3] _t371B#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN371C
        ASSIGN3A6A:  preds = [COND36EE]
          string _t3A69#1 = "fine in cell 2:";
          femData:MeshCell _t3A6B#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t3A6D#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t3A69,_t3A6B,_t3A6D);
          goto JOIN36FC
        ASSIGN3A70:  preds = [COND3630]
          bool _t3634#1 = BNot(_t360F);
          goto JOIN3635
        ASSIGN3AB7:  preds = [COND3587]
          femData:MeshPos callFindPos3A8A#2 = findPos3352 (_t3485,altCPos349F);
          int intPos3A8B#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A8A);
          tensor[3] refPos3A8C#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A8A);
          int[10] femIndicies3A91#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3A8B);
          tensor[10,3] femDofs3A92#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3A91);
          tensor[10] basisResult3A93#1 = EvaluateBasis<BasisArray(10)>(refPos3A8C);
          tensor[3] compositionl3A73#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,altCPos349F,femDofs3A92,basisResult3A93,refPos3A8C);
          real op1_e3_l_223A78#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3A73,compositionl3A73);
          tensor[3] op1_e3_l_233A79#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl3A73);
          real op1_e3_l_243A7A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_223A78);
          tensor[3] op1_e3_l_263A7C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_233A79,op1_e3_l_243A7A);
          tensor[3] op1_e3_l_353A87#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up1356F,op1_e3_l_263A7C);
          real op1_e3_l_373A89#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_353A87,op1_e3_l_353A87);
          real _t3A71#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_373A89);
          bool _t358B#1 = GT<real>(_t3A71,_t3528);
          goto JOIN358C
        ASSIGN3AFF:  preds = [COND354F]
          string _t3AFE#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3AFE);
          tensor[3] _t356D#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN356E
        ASSIGN3B03:  preds = [COND352C]
          string _t3B02#1 = "fine in cell 1:";
          femData:MeshCell _t3B04#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t3B06#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t3B02,_t3B04,_t3B06);
          goto JOIN354C
        ASSIGN3B0A:  preds = [COND34E4]
          bool _t3B09#1 = BNot(_t34D7);
          if _t3B09 then goto ASSIGN3B0D else goto ASSIGN3B10
        ASSIGN3B0D:  preds = [COND3B0B]
          bool _t3B0C#1 = true;
          goto JOIN3B0F
        JOIN3B0F:  preds = [ASSIGN3B0D,ASSIGN3B10]
          bool _t34E8#1 = phi(_t3B0C,_t3B0E)
          goto JOIN34E9
        ASSIGN3B10:  preds = [COND3B0B]
          bool _t3B0E#1 = EQ<int>(step349B,stepMax3491);
          goto JOIN3B0F
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY3B11:  preds = []
      tensor[3][] startPoints3B12#1 = globals.startPoints3301;
    FOREACH3B15:  preds = [ASSIGN3B13,NEXT3B17]
      foreach (x3B14 in startPoints3B12) on exit goto RETURN3B18
      new gg(x3B14);
      goto FOREACH3B15
    RETURN3B18:  preds = [FOREACH3B15]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData32FC (meshData) = <no-default>
  input 0space0409_intermedateGlobal32FD (space) = <no-default>
  input 0data040B_intermedateGlobal32FE (data) = <no-default>
  input timeSteps32FF (timeSteps) = <default>
  input timeEps3300 (timeEps) = <default>
  input startPoints3301 (startPoints) = <no-default>
  input stepSize3302 (stepSize) = <default>
  input stepMax3303 (stepMax) = <default>
  input M3304 (M) = <no-default>
  input center3305 (center) = <no-default>
  global femData:FemFunc data3306
  global femData:Mesh _t3307
  global femData:Space _tX3308
## functions
  function femData:MeshPos findPos3352 (femData:Mesh mesh3353#11, tensor[3] pos3354#4) {
    ENTRY3355:  preds = []
      real _t3356#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn3358#10 = <tensor[3]>[_t3356,_t3356,_t3356];
      int newtonInt335A#1 = 0;
      int[] yayCells335C#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3353,pos3354);
    FOREACH335F:  preds = [ASSIGN335D,NEXT3477]
      foreach (cellItter335E in yayCells335C) on exit goto ASSIGN3479
      int _t3360#1 = 16;
      int[] _t3362#1 = Range(newtonInt335A,_t3360);
    FOREACH3365:  preds = [ASSIGN3363,NEXT3476]
      foreach (newtonItter3364 in _t3362) on exit goto NEXT3477
        tensor[3] xn3367#6 = phi(xn3358,xn3366)
      int[4] femIndicies3378#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh3353,cellItter335E);
      tensor[4,3] femDofs3379#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh3353,femIndicies3378);
      tensor[3,4] basisResult337A#4 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3,3] probe_l_103368#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3,3,3] op1_e3_l_123369#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_103368);
      tensor[3,3,3] op1_e3_l_13336A#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_103368,op1_e3_l_123369);
      tensor[3] probe_l_14336B#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3] probe_l_15336C#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3] probe_l_16336D#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3,3] op1_e3_l_17336E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_16336D);
      tensor[3] op1_e3_l_18336F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_15336C,op1_e3_l_17336E);
      real op1_e3_l_193370#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_14336B,op1_e3_l_18336F);
      tensor[3,3] op1_e3_l_203371#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_13336A);
      real op1_e3_l_213372#1 = λ(T0[])<(2 * T0)> (op1_e3_l_193370);
      tensor[4] basisResult3382#2 = EvaluateBasis<BasisArray(4)>(xn3367);
      tensor[3] probe_l_223373#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn3367,cellItter335E,mesh3353,femDofs3379,basisResult3382,xn3367);
      tensor[3,3] op1_e3_l_233374#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_203371,op1_e3_l_213372);
      tensor[3] op1_e3_l_243375#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos3354,probe_l_223373);
      tensor[3] op1_e3_l_253376#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_233374,op1_e3_l_243375);
      tensor[3] xn3366#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn3367,op1_e3_l_253376);
      real _t339F#6 = 0.1e-7;
      real _t33A1#1 = λ(T0[],T1[])<(T0 * T1)> (_t339F,_t339F);
      tensor[3] probe_l_3033AF#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter335E,mesh3353,xn3367,femDofs3379,basisResult3382,xn3367);
      tensor[3] op1_e3_l_3233B1#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos3354,probe_l_3033AF);
      tensor[3] op1_e3_l_4833B2#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_233374,op1_e3_l_3233B1);
      real _t33A3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_4833B2,op1_e3_l_4833B2);
      bool _t33DB#1 = GTE<real>(_t33A1,_t33A3);
      if _t33DB then goto ASSIGN33DF else goto JOIN3475
    ASSIGN33DF:  preds = [COND33DD]
      real _t33DE#4 = 0.1e1;
      real _t33E0#1 = λ(T0[],T1[])<(T0 + T1)> (_t33DE,_t339F);
      tensor[3] _t33E2#1 = <tensor[3]>[_t33DE,_t33DE,_t33DE];
      real _t33E4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t33E2,xn3366);
      bool _t341E#1 = GT<real>(_t33E0,_t33E4);
      tensor[3] _t3420#1 = <tensor[3]>[_t339F,_t339F,_t339F];
      tensor[3] _t3422#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t3420,xn3366);
      real _t345C#1 = TensorIndex<tensor[3],[0]>(_t3422);
      real _t345E#3 = -0.e0;
      bool _t3460#1 = GT<real>(_t345C,_t345E);
      real _t3462#1 = TensorIndex<tensor[3],[1]>(_t3422);
      bool _t3464#1 = GT<real>(_t3462,_t345E);
      real _t3466#1 = TensorIndex<tensor[3],[2]>(_t3422);
      bool _t3468#1 = GT<real>(_t3466,_t345E);
      bool _t346A#1 = BAnd(_t3464,_t3468);
      bool _t346C#1 = BAnd(_t3460,_t346A);
      bool _t346E#1 = BAnd(_t341E,_t346C);
      if _t346E then goto ASSIGN3472 else goto JOIN3474
    ASSIGN3472:  preds = [COND3470]
      femData:MeshPos _t3471#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3353,cellItter335E,xn3366,pos3354);
      return _t3471
      goto JOIN3474
    JOIN3474:  preds = [*RETURN(_t3471)3473,COND3470]
      goto JOIN3475
    JOIN3475:  preds = [JOIN3474,COND33DD]
      goto FOREACH3365
    NEXT3477:  preds = [FOREACH3365]
      goto FOREACH335F
    ASSIGN3479:  preds = [FOREACH335F]
      femData:MeshPos _t3478#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3353);
      return _t3478
}
  function femData:MeshPos fn_2FB3594 (femData:MeshPos x3595#5, tensor[3] dPos3596#1) {
    ENTRY3597:  preds = []
      femData:Mesh meshData3598#1 = globals.meshData32FC;
      int timeSteps359A#1 = globals.timeSteps32FF;
      bool _t359C#1 = ExtractFemItem<bool,Valid(MeshPos)>(x3595);
      bool _t359E#1 = BNot(_t359C);
      if _t359E then goto RETURN(x3595)35A1 else goto JOIN35A2
    RETURN(x3595)35A1:  preds = [COND35A0]
      return x3595
      goto JOIN35A2
    JOIN35A2:  preds = [*RETURN(x3595)35A1,COND35A0]
      int _t35A3#1 = 0;
      int[] _t35A5#1 = Range(_t35A3,timeSteps359A);
    FOREACH35A8:  preds = [ASSIGN35A6,*NEXT35AA]
      foreach (i35A7 in _t35A5) on exit goto ASSIGN35AC
      return
      goto FOREACH35A8
    ASSIGN35AC:  preds = [FOREACH35A8]
      string _t35AB#1 = "Took stupid way out!\n";
      Print<[string]>(_t35AB);
      tensor[3] _t35AE#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x3595);
      int _t35B0#2 = ExtractFemItem<int,CellIndex(MeshPos)>(x3595);
      femData:Mesh _t35B2#3 = ExtractFem<femData:Mesh,femData:MeshPos>(x3595);
      int[4] femIndicies35B7#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t35B2,_t35B0);
      tensor[4,3] femDofs35B8#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t35B2,femIndicies35B7);
      tensor[4] basisResult35B9#1 = EvaluateBasis<BasisArray(4)>(_t35AE);
      tensor[3] probe_l_535B5#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t35B0,_t35B2,_t35AE,femDofs35B8,basisResult35B9,_t35AE);
      tensor[3] _t35B4#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (dPos3596,probe_l_535B5);
      femData:MeshPos cmp35C0#1 = findPos3352 (meshData3598,_t35B4);
      return cmp35C0
}
## input initialization
  ENTRY3309:  preds = []
    int timeSteps330A#1 = 32;
    globals.timeSteps32FF = timeSteps330A;
    real timeEps330D#1 = 0.1e-6;
    globals.timeEps3300 = timeEps330D;
    real stepSize3310#1 = 0.1e-1;
    globals.stepSize3302 = stepSize3310;
    int stepMax3313#1 = 300;
    globals.stepMax3303 = stepMax3313;
    return
## global-variable initialization
  ENTRY3317:  preds = []
    femData:Mesh meshData3318#3 = globals.meshData32FC;
    femData:Space 0space0409_intermedateGlobal331A#1 = globals.0space0409_intermedateGlobal32FD;
    femData:FemFunc 0data040B_intermedateGlobal331C#1 = globals.0data040B_intermedateGlobal32FE;
    int _t331E#1 = 0;
    int _t3320#1 = 1;
    int _t3322#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3318);
    int _t3324#1 = ISub(_t3322,_t3320);
    int[] _t3326#1 = Range(_t331E,_t3324);
    femData:MeshCell[] _t3328#1 = <femData:MeshCell[]>{};
  FOREACH332B:  preds = [ASSIGN3329,NEXT3331]
    foreach (_t332A in _t3326) on exit goto ASSIGN3333
      femData:MeshCell[] _t332F#1 = phi(_t3328,_t332E)
    femData:MeshCell _t332C#1 = LoadFem<femData:MeshCell>(meshData3318,_t332A);
    femData:MeshCell[] _t332E#1 = Append<femData:MeshCell>(_t332F,_t332C);
    goto FOREACH332B
  ASSIGN3333:  preds = [FOREACH332B]
    femData:Space space3332#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal331A,meshData3318);
    femData:FemFunc data3334#2 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal331C,space3332);
    globals.data3306 = data3334;
    femData:Space _t3337#2 = ExtractFem<femData:Space,femData:FemFunc>(data3334);
    femData:Mesh _t3339#1 = ExtractFem<femData:Mesh,femData:Space>(_t3337);
    globals._t3307 = _t3339;
    globals._tX3308 = _t3337;
    return
## strand
  strand gg (tensor[3] startPos333E#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3345:  preds = []
        femData:Mesh meshData3346#1 = globals.meshData32FC;
        tensor[3][0] _t3348#1 = <tensor[3][0]>{};
        tensor[3][] _t334A#1 = MkDynamic<tensor[3],0>(_t3348);
        tensor[3][0] _t334C#1 = <tensor[3][0]>{};
        tensor[3][] _t334E#1 = MkDynamic<tensor[3],0>(_t334C);
        int step3350#1 = 0;
        femData:MeshPos cPos347B#1 = findPos3352 (meshData3346,startPos333E);
        self.stream = _t334A;
        self.newStream = _t334E;
        self.step = step3350;
        self.cPos = cPos347B;
        self.altCPos = startPos333E;
        self.startPos = startPos333E;
        return
    end state init
    method update
        ENTRY3484:  preds = []
          femData:Mesh _t3485#6 = globals._t3307;
          femData:Space _t3487#6 = globals._tX3308;
          femData:FemFunc data3489#8 = globals.data3306;
          femData:Mesh meshData348B#2 = globals.meshData32FC;
          real stepSize348F#8 = globals.stepSize3302;
          int stepMax3491#1 = globals.stepMax3303;
          tensor[3,3] M3493#2 = globals.M3304;
          tensor[3] center3495#2 = globals.center3305;
          tensor[3][] stream3497#2 = self.stream;
          tensor[3][] newStream3499#2 = self.newStream;
          int step349B#5 = self.step;
          femData:MeshPos cPos349D#9 = self.cPos;
          tensor[3] altCPos349F#13 = self.altCPos;
          tensor[3] startPos34A1#6 = self.startPos;
          int _t34A3#1 = 0;
          bool _t34A5#1 = EQ<int>(step349B,_t34A3);
          if _t34A5 then goto ASSIGN34A9 else goto JOIN34D2
        ASSIGN34A9:  preds = [COND34A7]
          bool _t34A8#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos349D);
          if _t34A8 then goto ASSIGN34AC else goto JOIN34D1
        ASSIGN34AC:  preds = [COND34AA]
          tensor[3] rp34AB#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          real _t34AD#1 = TensorIndex<tensor[3],[0]>(rp34AB);
          real _t34AF#3 = 0.1e-5;
          bool _t34B1#1 = LTE<real>(_t34AD,_t34AF);
          if _t34B1 then goto STABILIZE34B4 else goto JOIN34B5
        STABILIZE34B4:  preds = [COND34B3]
          stabilize
          goto JOIN34B5
        JOIN34B5:  preds = [*STABILIZE34B4,COND34B3]
          real _t34B6#1 = TensorIndex<tensor[3],[1]>(rp34AB);
          bool _t34B8#1 = LTE<real>(_t34B6,_t34AF);
          if _t34B8 then goto STABILIZE34BB else goto JOIN34BC
        STABILIZE34BB:  preds = [COND34BA]
          stabilize
          goto JOIN34BC
        JOIN34BC:  preds = [*STABILIZE34BB,COND34BA]
          real _t34BD#1 = TensorIndex<tensor[3],[2]>(rp34AB);
          bool _t34BF#1 = LTE<real>(_t34BD,_t34AF);
          if _t34BF then goto STABILIZE34C2 else goto JOIN34C3
        STABILIZE34C2:  preds = [COND34C1]
          stabilize
          goto JOIN34C3
        JOIN34C3:  preds = [*STABILIZE34C2,COND34C1]
          real _t34C4#3 = 0.1e1;
          tensor[3] _t34C6#1 = <tensor[3]>[_t34C4,_t34C4,_t34C4];
          real r34C8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t34C6,rp34AB);
          real _t34CA#1 = 0.9999999e0;
          bool _t34CC#1 = LTE<real>(_t34CA,r34C8);
          if _t34CC then goto STABILIZE34CF else goto JOIN34D0
        STABILIZE34CF:  preds = [COND34CE]
          stabilize
          goto JOIN34D0
        JOIN34D0:  preds = [*STABILIZE34CF,COND34CE]
          goto JOIN34D1
        JOIN34D1:  preds = [JOIN34D0,COND34AA]
          goto JOIN34D2
        JOIN34D2:  preds = [JOIN34D1,COND34A7]
          bool _t34D3#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos349D);
          femData:MeshPos _t34D5#6 = findPos3352 (meshData348B,altCPos349F);
          bool _t34D7#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t34D5);
          bool _t34D9#1 = NEQ<bool>(_t34D3,_t34D7);
          if _t34D9 then goto ASSIGN34DD else goto JOIN34E1
        ASSIGN34DD:  preds = [COND34DB]
          string _t34DC#1 = "ERG:Warning of validity startPos:";
          string _t34DE#1 = "\n";
          Print<[string,tensor[3],string]>(_t34DC,startPos34A1,_t34DE);
          goto JOIN34E1
        JOIN34E1:  preds = [MASSIGN34E0,COND34DB]
          bool _t34E2#2 = BNot(_t34D3);
          if _t34E2 then goto ASSIGN34E6 else goto ASSIGN3B0A
        ASSIGN34E6:  preds = [COND34E4]
          bool _t34E5#1 = true;
          goto JOIN34E9
        JOIN34E9:  preds = [ASSIGN34E6,JOIN3B0F]
          bool _t34E7#1 = phi(_t34E5,_t34E8)
          if _t34E7 then goto ASSIGN34EC else goto JOIN34FB
        ASSIGN34EC:  preds = [COND34EA]
          string _t34EB#1 = "Went off the mesh\?";
          string _t34ED#2 = " and ";
          bool _t34EF#1 = BNot(_t34D7);
          string _t34F1#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t34EB,_t34E2,_t34ED,altCPos349F,_t34ED,_t34EF,_t34F1);
          string _t34F4#1 = "Pos is:";
          tensor[3] _t34F6#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          Print<[string,tensor[3],string]>(_t34F4,_t34F6,_t34F1);
          Print<[tensor[3][],string,tensor[3][],string]>(stream3497,_t34F1,newStream3499,_t34F1);
          stabilize
          goto JOIN34FB
        JOIN34FB:  preds = [*STABILIZE34FA,COND34EA]
          tensor[3] _t34FC#9 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          int _t34FE#7 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos349D);
          femData:Mesh _t3500#9 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos349D);
          int[4] femIndicies3504#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t3500,_t34FE);
          tensor[4,3] femDofs3505#2 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t3500,femIndicies3504);
          tensor[4] basisResult3506#2 = EvaluateBasis<BasisArray(4)>(_t34FC);
          tensor[3] _t3502#2 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t34FE,_t3500,_t3500,_t34FC,femDofs3505,basisResult3506,_t34FC);
          tensor[3][1] _t350C#1 = <tensor[3][1]>{_t3502};
          tensor[3][] _t350E#1 = MkDynamic<tensor[3],1>(_t350C);
          tensor[3][] stream3510#4 = Concat<tensor[3]>(stream3497,_t350E);
          tensor[3][1] _t3512#1 = <tensor[3][1]>{altCPos349F};
          tensor[3][] _t3514#1 = MkDynamic<tensor[3],1>(_t3512);
          tensor[3][] newStream3516#4 = Concat<tensor[3]>(newStream3499,_t3514);
          tensor[3] probe_l_53519#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t34FE,_t3500,_t34FC,femDofs3505,basisResult3506,_t34FC);
          tensor[3] op1_e3_l_7351A#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (altCPos349F,probe_l_53519);
          real op1_e3_l_9351B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_7351A,op1_e3_l_7351A);
          real _t3518#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_9351B);
          real _t3528#5 = 0.1e-5;
          bool _t352A#1 = GT<real>(_t3518,_t3528);
          if _t352A then goto ASSIGN352E else goto ASSIGN3B03
        ASSIGN352E:  preds = [COND352C]
          string _t352D#1 = "ERG:Error in tracing 1: At step:";
          string _t352F#1 = " with particle:";
          string _t3531#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t352D,step349B,_t352F,startPos34A1,_t3531);
          string _t3534#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t3534,_t3502,altCPos349F,_t3531);
          string _t3537#1 = "Cells are:";
          femData:MeshCell _t3539#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t353B#2 = " and ";
          femData:Mesh _t353D#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t34D5);
          int _t353F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t34D5);
          femData:MeshCell _t3541#1 = LoadFem<femData:MeshCell>(_t353D,_t353F);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t3537,_t3539,_t353B,_t3541,_t3531);
          string _t3544#1 = "Ref poses are:";
          tensor[3] _t3546#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t34D5);
          Print<[string,tensor[3],string,tensor[3],string]>(_t3544,_t34FC,_t353B,_t3546,_t3531);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN354C
        JOIN354C:  preds = [*STABILIZE354B,MASSIGN3B08]
          real _t354D#5 = 0.5e0;
          if _t34D3 then goto ASSIGN3551 else goto ASSIGN3AFF
        ASSIGN3551:  preds = [COND354F]
          femData:MeshCell c3550#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          int _t3552#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3550);
          femData:FuncCell _t3554#2 = LoadFem<femData:FuncCell>(data3489,_t3552);
          femData:FemFunc _t3556#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3554);
          femData:Space _t3558#2 = ExtractFem<femData:Space,femData:FemFunc>(_t3556);
          int _t355A#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3554);
          int[10] femIndicies3561#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3558,_t355A);
          tensor[10,3] femDofs3562#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t3556,femIndicies3561);
          tensor[10] basisResult3563#1 = EvaluateBasis<BasisArray(10)>(_t34FC);
          tensor[3] probe_l_8355D#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t355A,_t3558,_t3556,_t34FC,femDofs3562,basisResult3563,_t34FC);
          real op1_e3_l_11355E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_8355D,probe_l_8355D);
          real op1_e3_l_12355F#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11355E);
          tensor[3] _t355C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_8355D,op1_e3_l_12355F);
          goto JOIN356E
        JOIN356E:  preds = [ASSIGN356B,ASSIGN3B01]
          tensor[3] _t356C#1 = phi(_t355C,_t356D)
          tensor[3] up1356F#3 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,_t356C);
          tensor[3] op1_e3_l_113572#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (altCPos349F,center3495);
          tensor[3] op1_e3_l_123573#3 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_113572);
          real op1_e3_l_173574#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_123573,op1_e3_l_123573);
          tensor[3] op1_e3_l_183575#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,op1_e3_l_123573);
          real op1_e3_l_193576#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_173574);
          tensor[3] op1_e3_l_213578#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_183575,op1_e3_l_193576);
          tensor[3] op1_e3_l_333579#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up1356F,op1_e3_l_213578);
          real op1_e3_l_35357A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_333579,op1_e3_l_333579);
          real _t3571#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_35357A);
          bool _t3585#1 = GT<real>(_t3571,_t3528);
          if _t3585 then goto ASSIGN3589 else goto ASSIGN3AB7
        ASSIGN3589:  preds = [COND3587]
          bool _t3588#1 = true;
          goto JOIN358C
        JOIN358C:  preds = [ASSIGN3589,ASSIGN3AFD]
          bool _t358A#1 = phi(_t3588,_t358B)
          if _t358A then goto ASSIGN358F else goto JOIN3593
        ASSIGN358F:  preds = [COND358D]
          string _t358E#1 = "ERG:Error in evaluation on pos 1:";
          string _t3590#1 = "\n";
          Print<[string,tensor[3],string]>(_t358E,startPos34A1,_t3590);
          goto JOIN3593
        JOIN3593:  preds = [MASSIGN3592,COND358D]
          femData:MeshPos intermed35C3#4 = fn_2FB3594 (cPos349D,up1356F);
          femData:MeshPos callFindPos35D0#2 = findPos3352 (_t3485,altCPos349F);
          int intPos35D1#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos35D0);
          tensor[3] refPos35D2#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos35D0);
          int[10] femIndicies35D7#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos35D1);
          tensor[10,3] femDofs35D8#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies35D7);
          tensor[10] basisResult35D9#1 = EvaluateBasis<BasisArray(10)>(refPos35D2);
          tensor[3] compositionl35C7#4 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,altCPos349F,femDofs35D8,basisResult35D9,refPos35D2);
          real op1_e3_l_2035CC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl35C7,compositionl35C7);
          tensor[3] op1_e3_l_2135CD#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl35C7);
          real op1_e3_l_2235CE#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2035CC);
          tensor[3] op1_e3_l_2335CF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2135CD,op1_e3_l_2235CE);
          tensor[3] altIntermed35C5#7 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_2335CF);
          bool _t360B#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed35C3);
          femData:MeshPos _t360D#5 = findPos3352 (meshData348B,altIntermed35C5);
          bool _t360F#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t360D);
          bool _t3611#1 = NEQ<bool>(_t360B,_t360F);
          if _t3611 then goto ASSIGN3615 else goto JOIN362D
        ASSIGN3615:  preds = [COND3613]
          string _t3614#1 = "ERG:Warning of validity intermed";
          string _t3616#3 = "\n";
          Print<[string,tensor[3],string]>(_t3614,startPos34A1,_t3616);
          string _t3619#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t3619,altIntermed35C5,_t3616);
          string _t361C#1 = "Cell change: ";
          femData:Mesh _t361E#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t34D5);
          int _t3620#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t34D5);
          femData:MeshCell _t3622#1 = LoadFem<femData:MeshCell>(_t361E,_t3620);
          string _t3624#1 = " to ";
          femData:Mesh _t3626#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t360D);
          int _t3628#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t360D);
          femData:MeshCell _t362A#1 = LoadFem<femData:MeshCell>(_t3626,_t3628);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t361C,_t3622,_t3624,_t362A,_t3616);
          goto JOIN362D
        JOIN362D:  preds = [MASSIGN362C,COND3613]
          bool _t362E#2 = BNot(_t360B);
          if _t362E then goto ASSIGN3632 else goto ASSIGN3A70
        ASSIGN3632:  preds = [COND3630]
          bool _t3631#1 = true;
          goto JOIN3635
        JOIN3635:  preds = [ASSIGN3632,ASSIGN3A70]
          bool _t3633#1 = phi(_t3631,_t3634)
          if _t3633 then goto ASSIGN3638 else goto JOIN3643
        ASSIGN3638:  preds = [COND3636]
          string _t3637#1 = "Went off the mesh\?";
          string _t3639#2 = " and ";
          bool _t363B#1 = BNot(_t360F);
          string _t363D#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t3637,_t362E,_t3639,altIntermed35C5,_t3639,_t363B,_t363D);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN3643
        JOIN3643:  preds = [*STABILIZE3642,COND3636]
          tensor[3] _t3644#8 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed35C3);
          int _t3646#5 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed35C3);
          femData:Mesh _t3648#7 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed35C3);
          int[4] femIndicies364C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t3648,_t3646);
          tensor[4,3] femDofs364D#2 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t3648,femIndicies364C);
          tensor[4] basisResult364E#2 = EvaluateBasis<BasisArray(4)>(_t3644);
          tensor[3] _t364A#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t3646,_t3648,_t3648,_t3644,femDofs364D,basisResult364E,_t3644);
          tensor[3] probe_l_213655#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t3646,_t3648,_t3644,femDofs364D,basisResult364E,_t3644);
          tensor[3] op1_e3_l_39366C#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (probe_l_213655,altIntermed35C5);
          real op1_e3_l_41366E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_39366C,op1_e3_l_39366C);
          real _t3654#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41366E);
          bool _t36EC#1 = GT<real>(_t3654,_t3528);
          if _t36EC then goto ASSIGN36F0 else goto ASSIGN3A6A
        ASSIGN36F0:  preds = [COND36EE]
          string _t36EF#1 = "ERG:Error in tracing 2: At step:";
          string _t36F1#1 = " with particle:";
          string _t36F3#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t36EF,step349B,_t36F1,startPos34A1,_t36F3);
          string _t36F6#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t36F6,_t364A,altIntermed35C5,_t36F3);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN36FC
        JOIN36FC:  preds = [*STABILIZE36FB,MASSIGN3A6F]
          if _t360B then goto ASSIGN36FF else goto ASSIGN3A66
        ASSIGN36FF:  preds = [COND36FD]
          femData:MeshCell c36FE#1 = LoadFem<femData:MeshCell>(_t3648,_t3646);
          int _t3700#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c36FE);
          femData:FuncCell _t3702#2 = LoadFem<femData:FuncCell>(data3489,_t3700);
          femData:FemFunc _t3704#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3702);
          femData:Space _t3706#2 = ExtractFem<femData:Space,femData:FemFunc>(_t3704);
          int _t3708#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3702);
          int[10] femIndicies370F#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3706,_t3708);
          tensor[10,3] femDofs3710#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t3704,femIndicies370F);
          tensor[10] basisResult3711#1 = EvaluateBasis<BasisArray(10)>(_t3644);
          tensor[3] probe_l_8370B#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3708,_t3706,_t3704,_t3644,femDofs3710,basisResult3711,_t3644);
          real op1_e3_l_11370C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_8370B,probe_l_8370B);
          real op1_e3_l_12370D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11370C);
          tensor[3] _t370A#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_8370B,op1_e3_l_12370D);
          goto JOIN371C
        JOIN371C:  preds = [ASSIGN3719,ASSIGN3A68]
          tensor[3] _t371A#1 = phi(_t370A,_t371B)
          tensor[3] up2371D#4 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,_t371A);
          femData:MeshPos cPos371F#1 = fn_2FB3594 (cPos349D,up2371D);
          femData:MeshPos callFindPos372C#2 = findPos3352 (_t3485,altIntermed35C5);
          int intPos372D#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos372C);
          tensor[3] refPos372E#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos372C);
          int[10] femIndicies3733#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos372D);
          tensor[10,3] femDofs3734#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3733);
          tensor[10] basisResult3735#1 = EvaluateBasis<BasisArray(10)>(refPos372E);
          tensor[3] compositionl3723#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,altIntermed35C5,femDofs3734,basisResult3735,refPos372E);
          real op1_e3_l_193728#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3723,compositionl3723);
          tensor[3] op1_e3_l_203729#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,compositionl3723);
          real op1_e3_l_21372A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_193728);
          tensor[3] op1_e3_l_22372B#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_203729,op1_e3_l_21372A);
          tensor[3] altCPos3721#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_22372B);
          int _t3767#1 = 1;
          int step3769#1 = IAdd(step349B,_t3767);
          tensor[3] op1_e3_l_453773#1 = λ(T0[],T1[],T2[3])<(T1 * T0 * T2_{i0})>_{3} (stepSize348F,_t354D,compositionl35C7);
          tensor[3] op1_e3_l_473775#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_453773,op1_e3_l_2235CE);
          tensor[3] op1_e3_l_483776#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_473775);
          tensor[3] op1_e3_l_493777#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (center3495,op1_e3_l_483776);
          tensor[3] op1_e3_l_503778#3 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_493777);
          real op1_e3_l_713793#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_503778,op1_e3_l_503778);
          tensor[3] op1_e3_l_723794#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,op1_e3_l_503778);
          real op1_e3_l_733795#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_713793);
          tensor[3] op1_e3_l_753797#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_723794,op1_e3_l_733795);
          tensor[3] op1_e3_l_11137C3#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up2371D,op1_e3_l_753797);
          real op1_e3_l_11337C5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_11137C3,op1_e3_l_11137C3);
          real _t376B#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11337C5);
          bool _t3923#1 = GT<real>(_t376B,_t3528);
          if _t3923 then goto ASSIGN3927 else goto ASSIGN3B41
        ASSIGN3927:  preds = [COND3925]
          bool _t3926#1 = true;
          goto JOIN392A
        JOIN392A:  preds = [ASSIGN3927,ASSIGN3A64]
          bool _t3928#1 = phi(_t3926,_t3929)
          if _t3928 then goto ASSIGN392D else goto JOIN39CF
        ASSIGN392D:  preds = [COND392B]
          string _t392C#1 = "ERG:Error in evaluation on pos 2:";
          string _t392E#3 = "\n";
          Print<[string,tensor[3],string]>(_t392C,startPos34A1,_t392E);
          string _t3931#1 = "The errors are:";
          string _t3933#1 = " and ";
          tensor[3] op1_e3_l_33394B#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up2371D,op1_e3_l_22372B);
          real op1_e3_l_35394D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_33394B,op1_e3_l_33394B);
          real _t3935#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_35394D);
          Print<[string,real,string,real,string]>(_t3931,_t376B,_t3933,_t3935,_t392E);
          string _t39C2#1 = "The cells are:";
          femData:MeshCell _t39C4#1 = LoadFem<femData:MeshCell>(_t3648,_t3646);
          string _t39C6#1 = " vs ";
          femData:Mesh _t39C8#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t360D);
          int _t39CA#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t360D);
          femData:MeshCell _t39CC#1 = LoadFem<femData:MeshCell>(_t39C8,_t39CA);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t39C2,_t39C4,_t39C6,_t39CC,_t392E);
          goto JOIN39CF
        JOIN39CF:  preds = [MASSIGN39CE,COND392B]
          self.stream = stream3510;
          self.newStream = newStream3516;
          self.step = step3769;
          self.cPos = cPos371F;
          self.altCPos = altCPos3721;
          active
        ASSIGN3B41:  preds = [COND3925]
          tensor[3] op1_e3_l_3339EC#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up2371D,op1_e3_l_22372B);
          real op1_e3_l_3539EE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_3339EC,op1_e3_l_3339EC);
          real _t39D6#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_3539EE);
          real _t3A62#1 = 0.1e-4;
          bool _t3929#1 = GT<real>(_t39D6,_t3A62);
          goto JOIN392A
        ASSIGN3A66:  preds = [COND36FD]
          string _t3A65#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3A65);
          tensor[3] _t371B#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN371C
        ASSIGN3A6A:  preds = [COND36EE]
          string _t3A69#1 = "fine in cell 2:";
          femData:MeshCell _t3A6B#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t3A6D#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t3A69,_t3A6B,_t3A6D);
          goto JOIN36FC
        ASSIGN3A70:  preds = [COND3630]
          bool _t3634#1 = BNot(_t360F);
          goto JOIN3635
        ASSIGN3AB7:  preds = [COND3587]
          femData:MeshPos callFindPos3A8A#2 = findPos3352 (_t3485,altCPos349F);
          int intPos3A8B#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A8A);
          tensor[3] refPos3A8C#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A8A);
          int[10] femIndicies3A91#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3A8B);
          tensor[10,3] femDofs3A92#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3A91);
          tensor[10] basisResult3A93#1 = EvaluateBasis<BasisArray(10)>(refPos3A8C);
          tensor[3] compositionl3A73#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,altCPos349F,femDofs3A92,basisResult3A93,refPos3A8C);
          real op1_e3_l_223A78#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3A73,compositionl3A73);
          tensor[3] op1_e3_l_233A79#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl3A73);
          real op1_e3_l_243A7A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_223A78);
          tensor[3] op1_e3_l_263A7C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_233A79,op1_e3_l_243A7A);
          tensor[3] op1_e3_l_353A87#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up1356F,op1_e3_l_263A7C);
          real op1_e3_l_373A89#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_353A87,op1_e3_l_353A87);
          real _t3A71#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_373A89);
          bool _t358B#1 = GT<real>(_t3A71,_t3528);
          goto JOIN358C
        ASSIGN3AFF:  preds = [COND354F]
          string _t3AFE#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3AFE);
          tensor[3] _t356D#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN356E
        ASSIGN3B03:  preds = [COND352C]
          string _t3B02#1 = "fine in cell 1:";
          femData:MeshCell _t3B04#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t3B06#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t3B02,_t3B04,_t3B06);
          goto JOIN354C
        ASSIGN3B0A:  preds = [COND34E4]
          bool _t3B09#1 = BNot(_t34D7);
          if _t3B09 then goto ASSIGN3B0D else goto ASSIGN3B10
        ASSIGN3B0D:  preds = [COND3B0B]
          bool _t3B0C#1 = true;
          goto JOIN3B0F
        JOIN3B0F:  preds = [ASSIGN3B0D,ASSIGN3B10]
          bool _t34E8#1 = phi(_t3B0C,_t3B0E)
          goto JOIN34E9
        ASSIGN3B10:  preds = [COND3B0B]
          bool _t3B0E#1 = EQ<int>(step349B,stepMax3491);
          goto JOIN3B0F
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY3B11:  preds = []
      tensor[3][] startPoints3B12#1 = globals.startPoints3301;
    FOREACH3B15:  preds = [ASSIGN3B13,NEXT3B17]
      foreach (x3B14 in startPoints3B12) on exit goto RETURN3B18
      new gg(x3B14);
      goto FOREACH3B15
    RETURN3B18:  preds = [FOREACH3B15]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData32FC (meshData) = <no-default>
  input 0space0409_intermedateGlobal32FD (space) = <no-default>
  input 0data040B_intermedateGlobal32FE (data) = <no-default>
  input timeSteps32FF (timeSteps) = <default>
  input timeEps3300 (timeEps) = <default>
  input startPoints3301 (startPoints) = <no-default>
  input stepSize3302 (stepSize) = <default>
  input stepMax3303 (stepMax) = <default>
  input M3304 (M) = <no-default>
  input center3305 (center) = <no-default>
  global femData:FemFunc data3306
  global femData:Mesh _t3307
  global femData:Space _tX3308
## functions
  function femData:MeshPos findPos3352 (femData:Mesh mesh3353#11, tensor[3] pos3354#4) {
    ENTRY3355:  preds = []
      real _t3356#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn3358#10 = <tensor[3]>[_t3356,_t3356,_t3356];
      int newtonInt335A#1 = 0;
      int[] yayCells335C#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3353,pos3354);
    FOREACH335F:  preds = [ASSIGN335D,NEXT3477]
      foreach (cellItter335E in yayCells335C) on exit goto ASSIGN3479
      int _t3360#1 = 16;
      int[] _t3362#1 = Range(newtonInt335A,_t3360);
    FOREACH3365:  preds = [ASSIGN3363,NEXT3476]
      foreach (newtonItter3364 in _t3362) on exit goto NEXT3477
        tensor[3] xn3367#6 = phi(xn3358,xn3366)
      int[4] femIndicies3378#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh3353,cellItter335E);
      tensor[4,3] femDofs3379#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh3353,femIndicies3378);
      tensor[3,4] basisResult337A#4 = EvaluateBasis<BasisArray(3,4)>(xn3358);
      tensor[3,3] probe_l_103368#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3,3,3] op1_e3_l_123369#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_103368);
      tensor[3,3,3] op1_e3_l_13336A#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_103368,op1_e3_l_123369);
      tensor[3] probe_l_14336B#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3] probe_l_15336C#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3] probe_l_16336D#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter335E,mesh3353,xn3358,femDofs3379,basisResult337A,xn3358);
      tensor[3,3] op1_e3_l_17336E#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_16336D);
      tensor[3] op1_e3_l_18336F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_15336C,op1_e3_l_17336E);
      real op1_e3_l_193370#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_14336B,op1_e3_l_18336F);
      tensor[3,3] op1_e3_l_203371#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_13336A);
      real op1_e3_l_213372#1 = λ(T0[])<(2 * T0)> (op1_e3_l_193370);
      tensor[4] basisResult3382#2 = EvaluateBasis<BasisArray(4)>(xn3367);
      tensor[3] probe_l_223373#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn3367,cellItter335E,mesh3353,femDofs3379,basisResult3382,xn3367);
      tensor[3,3] op1_e3_l_233374#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_203371,op1_e3_l_213372);
      tensor[3] op1_e3_l_243375#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos3354,probe_l_223373);
      tensor[3] op1_e3_l_253376#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_233374,op1_e3_l_243375);
      tensor[3] xn3366#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn3367,op1_e3_l_253376);
      real _t339F#6 = 0.1e-7;
      real _t33A1#1 = λ(T0[],T1[])<(T0 * T1)> (_t339F,_t339F);
      tensor[3] probe_l_3033AF#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter335E,mesh3353,xn3367,femDofs3379,basisResult3382,xn3367);
      tensor[3] op1_e3_l_3233B1#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos3354,probe_l_3033AF);
      tensor[3] op1_e3_l_4833B2#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_233374,op1_e3_l_3233B1);
      real _t33A3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_4833B2,op1_e3_l_4833B2);
      bool _t33DB#1 = GTE<real>(_t33A1,_t33A3);
      if _t33DB then goto ASSIGN33DF else goto JOIN3475
    ASSIGN33DF:  preds = [COND33DD]
      real _t33DE#4 = 0.1e1;
      real _t33E0#1 = λ(T0[],T1[])<(T0 + T1)> (_t33DE,_t339F);
      tensor[3] _t33E2#1 = <tensor[3]>[_t33DE,_t33DE,_t33DE];
      real _t33E4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t33E2,xn3366);
      bool _t341E#1 = GT<real>(_t33E0,_t33E4);
      tensor[3] _t3420#1 = <tensor[3]>[_t339F,_t339F,_t339F];
      tensor[3] _t3422#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t3420,xn3366);
      real _t345C#1 = TensorIndex<tensor[3],[0]>(_t3422);
      real _t345E#3 = -0.e0;
      bool _t3460#1 = GT<real>(_t345C,_t345E);
      real _t3462#1 = TensorIndex<tensor[3],[1]>(_t3422);
      bool _t3464#1 = GT<real>(_t3462,_t345E);
      real _t3466#1 = TensorIndex<tensor[3],[2]>(_t3422);
      bool _t3468#1 = GT<real>(_t3466,_t345E);
      bool _t346A#1 = BAnd(_t3464,_t3468);
      bool _t346C#1 = BAnd(_t3460,_t346A);
      bool _t346E#1 = BAnd(_t341E,_t346C);
      if _t346E then goto ASSIGN3472 else goto JOIN3474
    ASSIGN3472:  preds = [COND3470]
      femData:MeshPos _t3471#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3353,cellItter335E,xn3366,pos3354);
      return _t3471
      goto JOIN3474
    JOIN3474:  preds = [*RETURN(_t3471)3473,COND3470]
      goto JOIN3475
    JOIN3475:  preds = [JOIN3474,COND33DD]
      goto FOREACH3365
    NEXT3477:  preds = [FOREACH3365]
      goto FOREACH335F
    ASSIGN3479:  preds = [FOREACH335F]
      femData:MeshPos _t3478#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3353);
      return _t3478
}
  function femData:MeshPos fn_2FB3594 (femData:MeshPos x3595#5, tensor[3] dPos3596#1) {
    ENTRY3597:  preds = []
      femData:Mesh meshData3598#1 = globals.meshData32FC;
      int timeSteps359A#1 = globals.timeSteps32FF;
      bool _t359C#1 = ExtractFemItem<bool,Valid(MeshPos)>(x3595);
      bool _t359E#1 = BNot(_t359C);
      if _t359E then goto RETURN(x3595)35A1 else goto JOIN35A2
    RETURN(x3595)35A1:  preds = [COND35A0]
      return x3595
      goto JOIN35A2
    JOIN35A2:  preds = [*RETURN(x3595)35A1,COND35A0]
      int _t35A3#1 = 0;
      int[] _t35A5#1 = Range(_t35A3,timeSteps359A);
    FOREACH35A8:  preds = [ASSIGN35A6,*NEXT35AA]
      foreach (i35A7 in _t35A5) on exit goto ASSIGN35AC
      return
      goto FOREACH35A8
    ASSIGN35AC:  preds = [FOREACH35A8]
      string _t35AB#1 = "Took stupid way out!\n";
      Print<[string]>(_t35AB);
      tensor[3] _t35AE#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x3595);
      int _t35B0#2 = ExtractFemItem<int,CellIndex(MeshPos)>(x3595);
      femData:Mesh _t35B2#3 = ExtractFem<femData:Mesh,femData:MeshPos>(x3595);
      int[4] femIndicies35B7#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t35B2,_t35B0);
      tensor[4,3] femDofs35B8#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t35B2,femIndicies35B7);
      tensor[4] basisResult35B9#1 = EvaluateBasis<BasisArray(4)>(_t35AE);
      tensor[3] probe_l_535B5#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t35B0,_t35B2,_t35AE,femDofs35B8,basisResult35B9,_t35AE);
      tensor[3] _t35B4#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (dPos3596,probe_l_535B5);
      femData:MeshPos cmp35C0#1 = findPos3352 (meshData3598,_t35B4);
      return cmp35C0
}
## input initialization
  ENTRY3309:  preds = []
    int timeSteps330A#1 = 32;
    globals.timeSteps32FF = timeSteps330A;
    real timeEps330D#1 = 0.1e-6;
    globals.timeEps3300 = timeEps330D;
    real stepSize3310#1 = 0.1e-1;
    globals.stepSize3302 = stepSize3310;
    int stepMax3313#1 = 300;
    globals.stepMax3303 = stepMax3313;
    return
## global-variable initialization
  ENTRY3317:  preds = []
    femData:Mesh meshData3318#3 = globals.meshData32FC;
    femData:Space 0space0409_intermedateGlobal331A#1 = globals.0space0409_intermedateGlobal32FD;
    femData:FemFunc 0data040B_intermedateGlobal331C#1 = globals.0data040B_intermedateGlobal32FE;
    int _t331E#1 = 0;
    int _t3320#1 = 1;
    int _t3322#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3318);
    int _t3324#1 = ISub(_t3322,_t3320);
    int[] _t3326#1 = Range(_t331E,_t3324);
    femData:MeshCell[] _t3328#1 = <femData:MeshCell[]>{};
  FOREACH332B:  preds = [ASSIGN3329,NEXT3331]
    foreach (_t332A in _t3326) on exit goto ASSIGN3333
      femData:MeshCell[] _t332F#1 = phi(_t3328,_t332E)
    femData:MeshCell _t332C#1 = LoadFem<femData:MeshCell>(meshData3318,_t332A);
    femData:MeshCell[] _t332E#1 = Append<femData:MeshCell>(_t332F,_t332C);
    goto FOREACH332B
  ASSIGN3333:  preds = [FOREACH332B]
    femData:Space space3332#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal331A,meshData3318);
    femData:FemFunc data3334#2 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal331C,space3332);
    globals.data3306 = data3334;
    femData:Space _t3337#2 = ExtractFem<femData:Space,femData:FemFunc>(data3334);
    femData:Mesh _t3339#1 = ExtractFem<femData:Mesh,femData:Space>(_t3337);
    globals._t3307 = _t3339;
    globals._tX3308 = _t3337;
    return
## strand
  strand gg (tensor[3] startPos333E#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3345:  preds = []
        femData:Mesh meshData3346#1 = globals.meshData32FC;
        tensor[3][0] _t3348#1 = <tensor[3][0]>{};
        tensor[3][] _t334A#1 = MkDynamic<tensor[3],0>(_t3348);
        tensor[3][0] _t334C#1 = <tensor[3][0]>{};
        tensor[3][] _t334E#1 = MkDynamic<tensor[3],0>(_t334C);
        int step3350#1 = 0;
        femData:MeshPos cPos347B#1 = findPos3352 (meshData3346,startPos333E);
        self.stream = _t334A;
        self.newStream = _t334E;
        self.step = step3350;
        self.cPos = cPos347B;
        self.altCPos = startPos333E;
        self.startPos = startPos333E;
        return
    end state init
    method update
        ENTRY3484:  preds = []
          femData:Mesh _t3485#6 = globals._t3307;
          femData:Space _t3487#6 = globals._tX3308;
          femData:FemFunc data3489#8 = globals.data3306;
          femData:Mesh meshData348B#2 = globals.meshData32FC;
          real stepSize348F#8 = globals.stepSize3302;
          int stepMax3491#1 = globals.stepMax3303;
          tensor[3,3] M3493#2 = globals.M3304;
          tensor[3] center3495#2 = globals.center3305;
          tensor[3][] stream3497#2 = self.stream;
          tensor[3][] newStream3499#2 = self.newStream;
          int step349B#5 = self.step;
          femData:MeshPos cPos349D#9 = self.cPos;
          tensor[3] altCPos349F#13 = self.altCPos;
          tensor[3] startPos34A1#6 = self.startPos;
          int _t34A3#1 = 0;
          bool _t34A5#1 = EQ<int>(step349B,_t34A3);
          if _t34A5 then goto ASSIGN34A9 else goto JOIN34D2
        ASSIGN34A9:  preds = [COND34A7]
          bool _t34A8#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos349D);
          if _t34A8 then goto ASSIGN34AC else goto JOIN34D1
        ASSIGN34AC:  preds = [COND34AA]
          tensor[3] rp34AB#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          real _t34AD#1 = TensorIndex<tensor[3],[0]>(rp34AB);
          real _t34AF#3 = 0.1e-5;
          bool _t34B1#1 = LTE<real>(_t34AD,_t34AF);
          if _t34B1 then goto STABILIZE34B4 else goto JOIN34B5
        STABILIZE34B4:  preds = [COND34B3]
          stabilize
          goto JOIN34B5
        JOIN34B5:  preds = [*STABILIZE34B4,COND34B3]
          real _t34B6#1 = TensorIndex<tensor[3],[1]>(rp34AB);
          bool _t34B8#1 = LTE<real>(_t34B6,_t34AF);
          if _t34B8 then goto STABILIZE34BB else goto JOIN34BC
        STABILIZE34BB:  preds = [COND34BA]
          stabilize
          goto JOIN34BC
        JOIN34BC:  preds = [*STABILIZE34BB,COND34BA]
          real _t34BD#1 = TensorIndex<tensor[3],[2]>(rp34AB);
          bool _t34BF#1 = LTE<real>(_t34BD,_t34AF);
          if _t34BF then goto STABILIZE34C2 else goto JOIN34C3
        STABILIZE34C2:  preds = [COND34C1]
          stabilize
          goto JOIN34C3
        JOIN34C3:  preds = [*STABILIZE34C2,COND34C1]
          real _t34C4#3 = 0.1e1;
          tensor[3] _t34C6#1 = <tensor[3]>[_t34C4,_t34C4,_t34C4];
          real r34C8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t34C6,rp34AB);
          real _t34CA#1 = 0.9999999e0;
          bool _t34CC#1 = LTE<real>(_t34CA,r34C8);
          if _t34CC then goto STABILIZE34CF else goto JOIN34D0
        STABILIZE34CF:  preds = [COND34CE]
          stabilize
          goto JOIN34D0
        JOIN34D0:  preds = [*STABILIZE34CF,COND34CE]
          goto JOIN34D1
        JOIN34D1:  preds = [JOIN34D0,COND34AA]
          goto JOIN34D2
        JOIN34D2:  preds = [JOIN34D1,COND34A7]
          bool _t34D3#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos349D);
          femData:MeshPos _t34D5#6 = findPos3352 (meshData348B,altCPos349F);
          bool _t34D7#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t34D5);
          bool _t34D9#1 = NEQ<bool>(_t34D3,_t34D7);
          if _t34D9 then goto ASSIGN34DD else goto JOIN34E1
        ASSIGN34DD:  preds = [COND34DB]
          string _t34DC#1 = "ERG:Warning of validity startPos:";
          string _t34DE#1 = "\n";
          Print<[string,tensor[3],string]>(_t34DC,startPos34A1,_t34DE);
          goto JOIN34E1
        JOIN34E1:  preds = [MASSIGN34E0,COND34DB]
          bool _t34E2#2 = BNot(_t34D3);
          if _t34E2 then goto ASSIGN34E6 else goto ASSIGN3B0A
        ASSIGN34E6:  preds = [COND34E4]
          bool _t34E5#1 = true;
          goto JOIN34E9
        JOIN34E9:  preds = [ASSIGN34E6,JOIN3B0F]
          bool _t34E7#1 = phi(_t34E5,_t34E8)
          if _t34E7 then goto ASSIGN34EC else goto JOIN34FB
        ASSIGN34EC:  preds = [COND34EA]
          string _t34EB#1 = "Went off the mesh\?";
          string _t34ED#2 = " and ";
          bool _t34EF#1 = BNot(_t34D7);
          string _t34F1#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t34EB,_t34E2,_t34ED,altCPos349F,_t34ED,_t34EF,_t34F1);
          string _t34F4#1 = "Pos is:";
          tensor[3] _t34F6#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          Print<[string,tensor[3],string]>(_t34F4,_t34F6,_t34F1);
          Print<[tensor[3][],string,tensor[3][],string]>(stream3497,_t34F1,newStream3499,_t34F1);
          stabilize
          goto JOIN34FB
        JOIN34FB:  preds = [*STABILIZE34FA,COND34EA]
          tensor[3] _t34FC#9 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos349D);
          int _t34FE#7 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos349D);
          femData:Mesh _t3500#9 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos349D);
          int[4] femIndicies3504#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t3500,_t34FE);
          tensor[4,3] femDofs3505#2 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t3500,femIndicies3504);
          tensor[4] basisResult3506#2 = EvaluateBasis<BasisArray(4)>(_t34FC);
          tensor[3] _t3502#2 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t34FE,_t3500,_t3500,_t34FC,femDofs3505,basisResult3506,_t34FC);
          tensor[3][1] _t350C#1 = <tensor[3][1]>{_t3502};
          tensor[3][] _t350E#1 = MkDynamic<tensor[3],1>(_t350C);
          tensor[3][] stream3510#4 = Concat<tensor[3]>(stream3497,_t350E);
          tensor[3][1] _t3512#1 = <tensor[3][1]>{altCPos349F};
          tensor[3][] _t3514#1 = MkDynamic<tensor[3],1>(_t3512);
          tensor[3][] newStream3516#4 = Concat<tensor[3]>(newStream3499,_t3514);
          tensor[3] probe_l_53519#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t34FE,_t3500,_t34FC,femDofs3505,basisResult3506,_t34FC);
          tensor[3] op1_e3_l_7351A#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (altCPos349F,probe_l_53519);
          real op1_e3_l_9351B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_7351A,op1_e3_l_7351A);
          real _t3518#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_9351B);
          real _t3528#5 = 0.1e-5;
          bool _t352A#1 = GT<real>(_t3518,_t3528);
          if _t352A then goto ASSIGN352E else goto ASSIGN3B03
        ASSIGN352E:  preds = [COND352C]
          string _t352D#1 = "ERG:Error in tracing 1: At step:";
          string _t352F#1 = " with particle:";
          string _t3531#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t352D,step349B,_t352F,startPos34A1,_t3531);
          string _t3534#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t3534,_t3502,altCPos349F,_t3531);
          string _t3537#1 = "Cells are:";
          femData:MeshCell _t3539#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t353B#2 = " and ";
          femData:Mesh _t353D#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t34D5);
          int _t353F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t34D5);
          femData:MeshCell _t3541#1 = LoadFem<femData:MeshCell>(_t353D,_t353F);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t3537,_t3539,_t353B,_t3541,_t3531);
          string _t3544#1 = "Ref poses are:";
          tensor[3] _t3546#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t34D5);
          Print<[string,tensor[3],string,tensor[3],string]>(_t3544,_t34FC,_t353B,_t3546,_t3531);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN354C
        JOIN354C:  preds = [*STABILIZE354B,MASSIGN3B08]
          real _t354D#5 = 0.5e0;
          if _t34D3 then goto ASSIGN3551 else goto ASSIGN3AFF
        ASSIGN3551:  preds = [COND354F]
          femData:MeshCell c3550#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          int _t3552#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3550);
          femData:FuncCell _t3554#2 = LoadFem<femData:FuncCell>(data3489,_t3552);
          femData:FemFunc _t3556#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3554);
          femData:Space _t3558#2 = ExtractFem<femData:Space,femData:FemFunc>(_t3556);
          int _t355A#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3554);
          int[10] femIndicies3561#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3558,_t355A);
          tensor[10,3] femDofs3562#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t3556,femIndicies3561);
          tensor[10] basisResult3563#1 = EvaluateBasis<BasisArray(10)>(_t34FC);
          tensor[3] probe_l_8355D#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t355A,_t3558,_t3556,_t34FC,femDofs3562,basisResult3563,_t34FC);
          real op1_e3_l_11355E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_8355D,probe_l_8355D);
          real op1_e3_l_12355F#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11355E);
          tensor[3] _t355C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_8355D,op1_e3_l_12355F);
          goto JOIN356E
        JOIN356E:  preds = [ASSIGN356B,ASSIGN3B01]
          tensor[3] _t356C#1 = phi(_t355C,_t356D)
          tensor[3] up1356F#3 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,_t356C);
          tensor[3] op1_e3_l_113572#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (altCPos349F,center3495);
          tensor[3] op1_e3_l_123573#3 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_113572);
          real op1_e3_l_173574#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_123573,op1_e3_l_123573);
          tensor[3] op1_e3_l_183575#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,op1_e3_l_123573);
          real op1_e3_l_193576#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_173574);
          tensor[3] op1_e3_l_213578#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_183575,op1_e3_l_193576);
          tensor[3] op1_e3_l_333579#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up1356F,op1_e3_l_213578);
          real op1_e3_l_35357A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_333579,op1_e3_l_333579);
          real _t3571#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_35357A);
          bool _t3585#1 = GT<real>(_t3571,_t3528);
          if _t3585 then goto ASSIGN3589 else goto ASSIGN3AB7
        ASSIGN3589:  preds = [COND3587]
          bool _t3588#1 = true;
          goto JOIN358C
        JOIN358C:  preds = [ASSIGN3589,ASSIGN3AFD]
          bool _t358A#1 = phi(_t3588,_t358B)
          if _t358A then goto ASSIGN358F else goto JOIN3593
        ASSIGN358F:  preds = [COND358D]
          string _t358E#1 = "ERG:Error in evaluation on pos 1:";
          string _t3590#1 = "\n";
          Print<[string,tensor[3],string]>(_t358E,startPos34A1,_t3590);
          goto JOIN3593
        JOIN3593:  preds = [MASSIGN3592,COND358D]
          femData:MeshPos intermed35C3#4 = fn_2FB3594 (cPos349D,up1356F);
          femData:MeshPos callFindPos35D0#2 = findPos3352 (_t3485,altCPos349F);
          int intPos35D1#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos35D0);
          tensor[3] refPos35D2#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos35D0);
          int[10] femIndicies35D7#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos35D1);
          tensor[10,3] femDofs35D8#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies35D7);
          tensor[10] basisResult35D9#1 = EvaluateBasis<BasisArray(10)>(refPos35D2);
          tensor[3] compositionl35C7#4 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,altCPos349F,femDofs35D8,basisResult35D9,refPos35D2);
          real op1_e3_l_2035CC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl35C7,compositionl35C7);
          tensor[3] op1_e3_l_2135CD#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl35C7);
          real op1_e3_l_2235CE#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2035CC);
          tensor[3] op1_e3_l_2335CF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2135CD,op1_e3_l_2235CE);
          tensor[3] altIntermed35C5#7 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_2335CF);
          bool _t360B#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed35C3);
          femData:MeshPos _t360D#5 = findPos3352 (meshData348B,altIntermed35C5);
          bool _t360F#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t360D);
          bool _t3611#1 = NEQ<bool>(_t360B,_t360F);
          if _t3611 then goto ASSIGN3615 else goto JOIN362D
        ASSIGN3615:  preds = [COND3613]
          string _t3614#1 = "ERG:Warning of validity intermed";
          string _t3616#3 = "\n";
          Print<[string,tensor[3],string]>(_t3614,startPos34A1,_t3616);
          string _t3619#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t3619,altIntermed35C5,_t3616);
          string _t361C#1 = "Cell change: ";
          femData:Mesh _t361E#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t34D5);
          int _t3620#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t34D5);
          femData:MeshCell _t3622#1 = LoadFem<femData:MeshCell>(_t361E,_t3620);
          string _t3624#1 = " to ";
          femData:Mesh _t3626#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t360D);
          int _t3628#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t360D);
          femData:MeshCell _t362A#1 = LoadFem<femData:MeshCell>(_t3626,_t3628);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t361C,_t3622,_t3624,_t362A,_t3616);
          goto JOIN362D
        JOIN362D:  preds = [MASSIGN362C,COND3613]
          bool _t362E#2 = BNot(_t360B);
          if _t362E then goto ASSIGN3632 else goto ASSIGN3A70
        ASSIGN3632:  preds = [COND3630]
          bool _t3631#1 = true;
          goto JOIN3635
        JOIN3635:  preds = [ASSIGN3632,ASSIGN3A70]
          bool _t3633#1 = phi(_t3631,_t3634)
          if _t3633 then goto ASSIGN3638 else goto JOIN3643
        ASSIGN3638:  preds = [COND3636]
          string _t3637#1 = "Went off the mesh\?";
          string _t3639#2 = " and ";
          bool _t363B#1 = BNot(_t360F);
          string _t363D#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t3637,_t362E,_t3639,altIntermed35C5,_t3639,_t363B,_t363D);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN3643
        JOIN3643:  preds = [*STABILIZE3642,COND3636]
          tensor[3] _t3644#8 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed35C3);
          int _t3646#5 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed35C3);
          femData:Mesh _t3648#7 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed35C3);
          int[4] femIndicies364C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t3648,_t3646);
          tensor[4,3] femDofs364D#2 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t3648,femIndicies364C);
          tensor[4] basisResult364E#2 = EvaluateBasis<BasisArray(4)>(_t3644);
          tensor[3] _t364A#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t3646,_t3648,_t3648,_t3644,femDofs364D,basisResult364E,_t3644);
          tensor[3] probe_l_213655#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t3646,_t3648,_t3644,femDofs364D,basisResult364E,_t3644);
          tensor[3] op1_e3_l_39366C#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (probe_l_213655,altIntermed35C5);
          real op1_e3_l_41366E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_39366C,op1_e3_l_39366C);
          real _t3654#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41366E);
          bool _t36EC#1 = GT<real>(_t3654,_t3528);
          if _t36EC then goto ASSIGN36F0 else goto ASSIGN3A6A
        ASSIGN36F0:  preds = [COND36EE]
          string _t36EF#1 = "ERG:Error in tracing 2: At step:";
          string _t36F1#1 = " with particle:";
          string _t36F3#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t36EF,step349B,_t36F1,startPos34A1,_t36F3);
          string _t36F6#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t36F6,_t364A,altIntermed35C5,_t36F3);
          self.stream = stream3510;
          self.newStream = newStream3516;
          stabilize
          goto JOIN36FC
        JOIN36FC:  preds = [*STABILIZE36FB,MASSIGN3A6F]
          if _t360B then goto ASSIGN36FF else goto ASSIGN3A66
        ASSIGN36FF:  preds = [COND36FD]
          femData:MeshCell c36FE#1 = LoadFem<femData:MeshCell>(_t3648,_t3646);
          int _t3700#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c36FE);
          femData:FuncCell _t3702#2 = LoadFem<femData:FuncCell>(data3489,_t3700);
          femData:FemFunc _t3704#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3702);
          femData:Space _t3706#2 = ExtractFem<femData:Space,femData:FemFunc>(_t3704);
          int _t3708#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3702);
          int[10] femIndicies370F#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3706,_t3708);
          tensor[10,3] femDofs3710#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t3704,femIndicies370F);
          tensor[10] basisResult3711#1 = EvaluateBasis<BasisArray(10)>(_t3644);
          tensor[3] probe_l_8370B#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3708,_t3706,_t3704,_t3644,femDofs3710,basisResult3711,_t3644);
          real op1_e3_l_11370C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_8370B,probe_l_8370B);
          real op1_e3_l_12370D#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11370C);
          tensor[3] _t370A#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_8370B,op1_e3_l_12370D);
          goto JOIN371C
        JOIN371C:  preds = [ASSIGN3719,ASSIGN3A68]
          tensor[3] _t371A#1 = phi(_t370A,_t371B)
          tensor[3] up2371D#4 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,_t371A);
          femData:MeshPos cPos371F#1 = fn_2FB3594 (cPos349D,up2371D);
          femData:MeshPos callFindPos372C#2 = findPos3352 (_t3485,altIntermed35C5);
          int intPos372D#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos372C);
          tensor[3] refPos372E#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos372C);
          int[10] femIndicies3733#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos372D);
          tensor[10,3] femDofs3734#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3733);
          tensor[10] basisResult3735#1 = EvaluateBasis<BasisArray(10)>(refPos372E);
          tensor[3] compositionl3723#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,altIntermed35C5,femDofs3734,basisResult3735,refPos372E);
          real op1_e3_l_193728#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3723,compositionl3723);
          tensor[3] op1_e3_l_203729#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,compositionl3723);
          real op1_e3_l_21372A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_193728);
          tensor[3] op1_e3_l_22372B#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_203729,op1_e3_l_21372A);
          tensor[3] altCPos3721#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_22372B);
          int _t3767#1 = 1;
          int step3769#1 = IAdd(step349B,_t3767);
          tensor[3] op1_e3_l_453773#1 = λ(T0[],T1[],T2[3])<(T1 * T0 * T2_{i0})>_{3} (stepSize348F,_t354D,compositionl35C7);
          tensor[3] op1_e3_l_473775#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_453773,op1_e3_l_2235CE);
          tensor[3] op1_e3_l_483776#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos349F,op1_e3_l_473775);
          tensor[3] op1_e3_l_493777#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (center3495,op1_e3_l_483776);
          tensor[3] op1_e3_l_503778#3 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (M3493,op1_e3_l_493777);
          real op1_e3_l_713793#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_503778,op1_e3_l_503778);
          tensor[3] op1_e3_l_723794#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize348F,op1_e3_l_503778);
          real op1_e3_l_733795#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_713793);
          tensor[3] op1_e3_l_753797#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_723794,op1_e3_l_733795);
          tensor[3] op1_e3_l_11137C3#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up2371D,op1_e3_l_753797);
          real op1_e3_l_11337C5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_11137C3,op1_e3_l_11137C3);
          real _t376B#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11337C5);
          bool _t3923#1 = GT<real>(_t376B,_t3528);
          if _t3923 then goto ASSIGN3927 else goto ASSIGN3B41
        ASSIGN3927:  preds = [COND3925]
          bool _t3926#1 = true;
          goto JOIN392A
        JOIN392A:  preds = [ASSIGN3927,ASSIGN3A64]
          bool _t3928#1 = phi(_t3926,_t3929)
          if _t3928 then goto ASSIGN392D else goto JOIN39CF
        ASSIGN392D:  preds = [COND392B]
          string _t392C#1 = "ERG:Error in evaluation on pos 2:";
          string _t392E#3 = "\n";
          Print<[string,tensor[3],string]>(_t392C,startPos34A1,_t392E);
          string _t3931#1 = "The errors are:";
          string _t3933#1 = " and ";
          tensor[3] op1_e3_l_33394B#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up2371D,op1_e3_l_22372B);
          real op1_e3_l_35394D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_33394B,op1_e3_l_33394B);
          real _t3935#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_35394D);
          Print<[string,real,string,real,string]>(_t3931,_t376B,_t3933,_t3935,_t392E);
          string _t39C2#1 = "The cells are:";
          femData:MeshCell _t39C4#1 = LoadFem<femData:MeshCell>(_t3648,_t3646);
          string _t39C6#1 = " vs ";
          femData:Mesh _t39C8#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t360D);
          int _t39CA#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t360D);
          femData:MeshCell _t39CC#1 = LoadFem<femData:MeshCell>(_t39C8,_t39CA);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t39C2,_t39C4,_t39C6,_t39CC,_t392E);
          goto JOIN39CF
        JOIN39CF:  preds = [MASSIGN39CE,COND392B]
          self.stream = stream3510;
          self.newStream = newStream3516;
          self.step = step3769;
          self.cPos = cPos371F;
          self.altCPos = altCPos3721;
          active
        ASSIGN3B41:  preds = [COND3925]
          tensor[3] op1_e3_l_3339EC#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up2371D,op1_e3_l_22372B);
          real op1_e3_l_3539EE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_3339EC,op1_e3_l_3339EC);
          real _t39D6#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_3539EE);
          real _t3A62#1 = 0.1e-4;
          bool _t3929#1 = GT<real>(_t39D6,_t3A62);
          goto JOIN392A
        ASSIGN3A66:  preds = [COND36FD]
          string _t3A65#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3A65);
          tensor[3] _t371B#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN371C
        ASSIGN3A6A:  preds = [COND36EE]
          string _t3A69#1 = "fine in cell 2:";
          femData:MeshCell _t3A6B#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t3A6D#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t3A69,_t3A6B,_t3A6D);
          goto JOIN36FC
        ASSIGN3A70:  preds = [COND3630]
          bool _t3634#1 = BNot(_t360F);
          goto JOIN3635
        ASSIGN3AB7:  preds = [COND3587]
          femData:MeshPos callFindPos3A8A#2 = findPos3352 (_t3485,altCPos349F);
          int intPos3A8B#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3A8A);
          tensor[3] refPos3A8C#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3A8A);
          int[10] femIndicies3A91#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t3487,intPos3A8B);
          tensor[10,3] femDofs3A92#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data3489,femIndicies3A91);
          tensor[10] basisResult3A93#1 = EvaluateBasis<BasisArray(10)>(refPos3A8C);
          tensor[3] compositionl3A73#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t3485,_t3487,data3489,altCPos349F,femDofs3A92,basisResult3A93,refPos3A8C);
          real op1_e3_l_223A78#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl3A73,compositionl3A73);
          tensor[3] op1_e3_l_233A79#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t354D,stepSize348F,compositionl3A73);
          real op1_e3_l_243A7A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_223A78);
          tensor[3] op1_e3_l_263A7C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_233A79,op1_e3_l_243A7A);
          tensor[3] op1_e3_l_353A87#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (up1356F,op1_e3_l_263A7C);
          real op1_e3_l_373A89#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_353A87,op1_e3_l_353A87);
          real _t3A71#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_373A89);
          bool _t358B#1 = GT<real>(_t3A71,_t3528);
          goto JOIN358C
        ASSIGN3AFF:  preds = [COND354F]
          string _t3AFE#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t3AFE);
          tensor[3] _t356D#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN356E
        ASSIGN3B03:  preds = [COND352C]
          string _t3B02#1 = "fine in cell 1:";
          femData:MeshCell _t3B04#1 = LoadFem<femData:MeshCell>(_t3500,_t34FE);
          string _t3B06#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t3B02,_t3B04,_t3B06);
          goto JOIN354C
        ASSIGN3B0A:  preds = [COND34E4]
          bool _t3B09#1 = BNot(_t34D7);
          if _t3B09 then goto ASSIGN3B0D else goto ASSIGN3B10
        ASSIGN3B0D:  preds = [COND3B0B]
          bool _t3B0C#1 = true;
          goto JOIN3B0F
        JOIN3B0F:  preds = [ASSIGN3B0D,ASSIGN3B10]
          bool _t34E8#1 = phi(_t3B0C,_t3B0E)
          goto JOIN34E9
        ASSIGN3B10:  preds = [COND3B0B]
          bool _t3B0E#1 = EQ<int>(step349B,stepMax3491);
          goto JOIN3B0F
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY3B11:  preds = []
      tensor[3][] startPoints3B12#1 = globals.startPoints3301;
    FOREACH3B15:  preds = [ASSIGN3B13,NEXT3B17]
      foreach (x3B14 in startPoints3B12) on exit goto RETURN3B18
      new gg(x3B14);
      goto FOREACH3B15
    RETURN3B18:  preds = [FOREACH3B15]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData3B45 (meshData) = <no-default>
  input 0space0409_intermedateGlobal3B46 (space) = <no-default>
  input 0data040B_intermedateGlobal3B47 (data) = <no-default>
  input timeSteps3B48 (timeSteps) = <default>
  input timeEps3B49 (timeEps) = <default>
  input startPoints3B4A (startPoints) = <no-default>
  input stepSize3B4B (stepSize) = <default>
  input stepMax3B4C (stepMax) = <default>
  input M3B4D (M) = <no-default>
  input center3B4E (center) = <no-default>
  global femData:FemFunc data3B4F
  global femData:Mesh _t3B50
  global femData:Space _tX3B51
## functions
  function femData:MeshPos findPos3B9C (femData:Mesh mesh3B9D#19, tensor[3] pos3B9E#4) {
    ENTRY3B9F:  preds = []
      real _t3BA0#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn3BA2#4 = <tensor[3]>[_t3BA0,_t3BA0,_t3BA0];
      int newtonInt3BA4#1 = 0;
      int[] yayCells3BA6#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3B9D,pos3B9E);
    FOREACH3BA9:  preds = [ASSIGN3BA7,NEXT42DB]
      foreach (cellItter3BA8 in yayCells3BA6) on exit goto ASSIGN42DD
      int _t3BAA#1 = 16;
      int[] _t3BAC#1 = Range(newtonInt3BA4,_t3BAA);
    FOREACH3BAF:  preds = [ASSIGN3BAD,NEXT42DA]
      foreach (newtonItter3BAE in _t3BAC) on exit goto NEXT42DB
        tensor[3] xn417E#4 = phi(xn3BA2,xn4242)
      int ilit3BB1#1 = 4;
      int mulRes3BB2#4 = IMul(cellItter3BA8,ilit3BB1);
      int ilit3BB3#1 = 0;
      int addRes3BB4#1 = IAdd(mulRes3BB2,ilit3BB3);
      int idx3BB5#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BB4);
      int ilit3BB6#1 = 1;
      int addRes3BB7#1 = IAdd(mulRes3BB2,ilit3BB6);
      int idx3BB8#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BB7);
      int ilit3BB9#1 = 2;
      int addRes3BBA#1 = IAdd(mulRes3BB2,ilit3BB9);
      int idx3BBB#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BBA);
      int ilit3BBC#1 = 3;
      int addRes3BBD#1 = IAdd(mulRes3BB2,ilit3BBC);
      int idx3BBE#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BBD);
      int[4] seq3BBF#1 = <int[4]>{idx3BB5,idx3BB8,idx3BBB,idx3BBE};
      int[4] femIndicies3BB0#4 = seq3BBF;
      int ilit3BD1#5 = 0;
      int ilit3BD2#5 = 3;
      int idx3BD3#1 = Subscript<int>(femIndicies3BB0,ilit3BD1);
      int mulRes3BD4#3 = IMul(ilit3BD2,idx3BD3);
      int addRes3BD5#1 = IAdd(ilit3BD1,mulRes3BD4);
      int ilit3BD6#5 = 1;
      int addRes3BD7#1 = IAdd(ilit3BD6,mulRes3BD4);
      int ilit3BD8#5 = 2;
      int addRes3BD9#1 = IAdd(ilit3BD8,mulRes3BD4);
      real dof_load3BDA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD5);
      real dof_load3BDB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD7);
      real dof_load3BDC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD9);
      tensor[3] interCons3BDD#1 = <tensor[3]>[dof_load3BDA,dof_load3BDB,dof_load3BDC];
      int idx3BDE#1 = Subscript<int>(femIndicies3BB0,ilit3BD6);
      int mulRes3BDF#3 = IMul(ilit3BD2,idx3BDE);
      int addRes3BE0#1 = IAdd(ilit3BD1,mulRes3BDF);
      int addRes3BE1#1 = IAdd(ilit3BD6,mulRes3BDF);
      int addRes3BE2#1 = IAdd(ilit3BD8,mulRes3BDF);
      real dof_load3BE3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE0);
      real dof_load3BE4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE1);
      real dof_load3BE5#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE2);
      tensor[3] interCons3BE6#1 = <tensor[3]>[dof_load3BE3,dof_load3BE4,dof_load3BE5];
      int idx3BE7#1 = Subscript<int>(femIndicies3BB0,ilit3BD8);
      int mulRes3BE8#3 = IMul(ilit3BD2,idx3BE7);
      int addRes3BE9#1 = IAdd(ilit3BD1,mulRes3BE8);
      int addRes3BEA#1 = IAdd(ilit3BD6,mulRes3BE8);
      int addRes3BEB#1 = IAdd(ilit3BD8,mulRes3BE8);
      real dof_load3BEC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE9);
      real dof_load3BED#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BEA);
      real dof_load3BEE#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BEB);
      tensor[3] interCons3BEF#1 = <tensor[3]>[dof_load3BEC,dof_load3BED,dof_load3BEE];
      int idx3BF0#1 = Subscript<int>(femIndicies3BB0,ilit3BD2);
      int mulRes3BF1#3 = IMul(ilit3BD2,idx3BF0);
      int addRes3BF2#1 = IAdd(ilit3BD1,mulRes3BF1);
      int addRes3BF3#1 = IAdd(ilit3BD6,mulRes3BF1);
      int addRes3BF4#1 = IAdd(ilit3BD8,mulRes3BF1);
      real dof_load3BF5#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF2);
      real dof_load3BF6#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF3);
      real dof_load3BF7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF4);
      tensor[3] interCons3BF8#1 = <tensor[3]>[dof_load3BF5,dof_load3BF6,dof_load3BF7];
      tensor[4,3] dofs3BF9#1 = <tensor[4,3]>[interCons3BDD,interCons3BE6,interCons3BEF,interCons3BF8];
      tensor[4,3] femDofs3BD0#72 = dofs3BF9;
      real varAcc3C25#0 = VIndex<3,0>(xn3BA2);
      real varAcc3C26#0 = VIndex<3,1>(xn3BA2);
      real varAcc3C27#0 = VIndex<3,2>(xn3BA2);
      real coeff3C28#1 = -0.1e1;
      real one3C29#4 = 0.1e1;
      real prod3C2A#1 = RMul(one3C29,one3C29);
      real prod3C2B#2 = RMul(one3C29,prod3C2A);
      real basisEval3C2C#3 = RMul(coeff3C28,prod3C2B);
      real basisEval3C2D#3 = RMul(one3C29,prod3C2B);
      real basisEval3C2E#6 = 0.e0;
      tensor[4] intermediateCons3C2F#1 = <tensor[4]>[basisEval3C2C,basisEval3C2D,basisEval3C2E,basisEval3C2E];
      tensor[4] intermediateCons3C30#1 = <tensor[4]>[basisEval3C2C,basisEval3C2E,basisEval3C2D,basisEval3C2E];
      tensor[4] intermediateCons3C31#1 = <tensor[4]>[basisEval3C2C,basisEval3C2E,basisEval3C2E,basisEval3C2D];
      tensor[3,4] intermediateCons3C32#1 = <tensor[3,4]>[intermediateCons3C2F,intermediateCons3C30,intermediateCons3C31];
      tensor[3,4] basisResult3C24#24 = intermediateCons3C32;
      real r3C43#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs3BD0);
      real r3C44#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult3C24);
      real r3C45#1 = RMul(r3C43,r3C44);
      real r3C46#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs3BD0);
      real r3C47#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult3C24);
      real r3C48#1 = RMul(r3C46,r3C47);
      real r3C49#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs3BD0);
      real r3C4A#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult3C24);
      real r3C4B#1 = RMul(r3C49,r3C4A);
      real r3C4C#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs3BD0);
      real r3C4D#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult3C24);
      real r3C4E#1 = RMul(r3C4C,r3C4D);
      real r3C4F#1 = RAdd(r3C45,r3C48);
      real r3C50#1 = RAdd(r3C4F,r3C4B);
      real r3C51#1 = RAdd(r3C50,r3C4E);
      real r3C52#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult3C24);
      real r3C53#1 = RMul(r3C43,r3C52);
      real r3C54#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult3C24);
      real r3C55#1 = RMul(r3C46,r3C54);
      real r3C56#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult3C24);
      real r3C57#1 = RMul(r3C49,r3C56);
      real r3C58#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult3C24);
      real r3C59#1 = RMul(r3C4C,r3C58);
      real r3C5A#1 = RAdd(r3C53,r3C55);
      real r3C5B#1 = RAdd(r3C5A,r3C57);
      real r3C5C#1 = RAdd(r3C5B,r3C59);
      real r3C5D#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult3C24);
      real r3C5E#1 = RMul(r3C43,r3C5D);
      real r3C5F#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult3C24);
      real r3C60#1 = RMul(r3C46,r3C5F);
      real r3C61#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult3C24);
      real r3C62#1 = RMul(r3C49,r3C61);
      real r3C63#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult3C24);
      real r3C64#1 = RMul(r3C4C,r3C63);
      real r3C65#1 = RAdd(r3C5E,r3C60);
      real r3C66#1 = RAdd(r3C65,r3C62);
      real r3C67#1 = RAdd(r3C66,r3C64);
      tensor[3] tensor3C68#1 = <tensor[3]>[r3C51,r3C5C,r3C67];
      real r3C69#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs3BD0);
      real r3C6A#1 = RMul(r3C69,r3C44);
      real r3C6B#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs3BD0);
      real r3C6C#1 = RMul(r3C6B,r3C47);
      real r3C6D#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs3BD0);
      real r3C6E#1 = RMul(r3C6D,r3C4A);
      real r3C6F#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs3BD0);
      real r3C70#1 = RMul(r3C6F,r3C4D);
      real r3C71#1 = RAdd(r3C6A,r3C6C);
      real r3C72#1 = RAdd(r3C71,r3C6E);
      real r3C73#1 = RAdd(r3C72,r3C70);
      real r3C74#1 = RMul(r3C69,r3C52);
      real r3C75#1 = RMul(r3C6B,r3C54);
      real r3C76#1 = RMul(r3C6D,r3C56);
      real r3C77#1 = RMul(r3C6F,r3C58);
      real r3C78#1 = RAdd(r3C74,r3C75);
      real r3C79#1 = RAdd(r3C78,r3C76);
      real r3C7A#1 = RAdd(r3C79,r3C77);
      real r3C7B#1 = RMul(r3C69,r3C5D);
      real r3C7C#1 = RMul(r3C6B,r3C5F);
      real r3C7D#1 = RMul(r3C6D,r3C61);
      real r3C7E#1 = RMul(r3C6F,r3C63);
      real r3C7F#1 = RAdd(r3C7B,r3C7C);
      real r3C80#1 = RAdd(r3C7F,r3C7D);
      real r3C81#1 = RAdd(r3C80,r3C7E);
      tensor[3] tensor3C82#1 = <tensor[3]>[r3C73,r3C7A,r3C81];
      real r3C83#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs3BD0);
      real r3C84#1 = RMul(r3C83,r3C44);
      real r3C85#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs3BD0);
      real r3C86#1 = RMul(r3C85,r3C47);
      real r3C87#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs3BD0);
      real r3C88#1 = RMul(r3C87,r3C4A);
      real r3C89#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs3BD0);
      real r3C8A#1 = RMul(r3C89,r3C4D);
      real r3C8B#1 = RAdd(r3C84,r3C86);
      real r3C8C#1 = RAdd(r3C8B,r3C88);
      real r3C8D#1 = RAdd(r3C8C,r3C8A);
      real r3C8E#1 = RMul(r3C83,r3C52);
      real r3C8F#1 = RMul(r3C85,r3C54);
      real r3C90#1 = RMul(r3C87,r3C56);
      real r3C91#1 = RMul(r3C89,r3C58);
      real r3C92#1 = RAdd(r3C8E,r3C8F);
      real r3C93#1 = RAdd(r3C92,r3C90);
      real r3C94#1 = RAdd(r3C93,r3C91);
      real r3C95#1 = RMul(r3C83,r3C5D);
      real r3C96#1 = RMul(r3C85,r3C5F);
      real r3C97#1 = RMul(r3C87,r3C61);
      real r3C98#1 = RMul(r3C89,r3C63);
      real r3C99#1 = RAdd(r3C95,r3C96);
      real r3C9A#1 = RAdd(r3C99,r3C97);
      real r3C9B#1 = RAdd(r3C9A,r3C98);
      tensor[3] tensor3C9C#1 = <tensor[3]>[r3C8D,r3C94,r3C9B];
      tensor[3,3] probe_l_103C42#18 = <tensor[3,3]>[tensor3C68,tensor3C82,tensor3C9C];
      real realLit3CFA#9 = 0.e0;
      real r3CFB#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_103C42);
      real r3CFC#3 = RMul(realLit3CFA,r3CFB);
      real r3CFD#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_103C42);
      real r3CFE#3 = RMul(realLit3CFA,r3CFD);
      real r3CFF#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_103C42);
      real r3D00#5 = RMul(realLit3CFA,r3CFF);
      real r3D01#3 = RAdd(r3CFC,r3CFE);
      real r3D02#1 = RAdd(r3D01,r3D00);
      real r3D03#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_103C42);
      real r3D04#3 = RMul(realLit3CFA,r3D03);
      real r3D05#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_103C42);
      real r3D06#3 = RMul(realLit3CFA,r3D05);
      real r3D07#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_103C42);
      real r3D08#5 = RMul(realLit3CFA,r3D07);
      real r3D09#3 = RAdd(r3D04,r3D06);
      real r3D0A#1 = RAdd(r3D09,r3D08);
      real r3D0B#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_103C42);
      real r3D0C#3 = RMul(realLit3CFA,r3D0B);
      real r3D0D#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_103C42);
      real r3D0E#3 = RMul(realLit3CFA,r3D0D);
      real r3D0F#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_103C42);
      real r3D10#5 = RMul(realLit3CFA,r3D0F);
      real r3D11#3 = RAdd(r3D0C,r3D0E);
      real r3D12#1 = RAdd(r3D11,r3D10);
      tensor[3] tensor3D13#3 = <tensor[3]>[r3D02,r3D0A,r3D12];
      real realLit3D14#9 = -0.1e1;
      real r3D15#1 = RMul(realLit3D14,r3CFF);
      real r3D16#1 = RAdd(r3D01,r3D15);
      real r3D17#1 = RMul(realLit3D14,r3D07);
      real r3D18#1 = RAdd(r3D09,r3D17);
      real r3D19#1 = RMul(realLit3D14,r3D0F);
      real r3D1A#1 = RAdd(r3D11,r3D19);
      tensor[3] tensor3D1B#1 = <tensor[3]>[r3D16,r3D18,r3D1A];
      real realLit3D1C#9 = 0.1e1;
      real r3D1D#1 = RMul(realLit3D1C,r3CFD);
      real r3D1E#1 = RAdd(r3CFC,r3D1D);
      real r3D1F#1 = RAdd(r3D1E,r3D00);
      real r3D20#1 = RMul(realLit3D1C,r3D05);
      real r3D21#1 = RAdd(r3D04,r3D20);
      real r3D22#1 = RAdd(r3D21,r3D08);
      real r3D23#1 = RMul(realLit3D1C,r3D0D);
      real r3D24#1 = RAdd(r3D0C,r3D23);
      real r3D25#1 = RAdd(r3D24,r3D10);
      tensor[3] tensor3D26#1 = <tensor[3]>[r3D1F,r3D22,r3D25];
      tensor[3,3] tensor3D27#1 = <tensor[3,3]>[tensor3D13,tensor3D1B,tensor3D26];
      real r3D28#1 = RMul(realLit3D1C,r3CFF);
      real r3D29#1 = RAdd(r3D01,r3D28);
      real r3D2A#1 = RMul(realLit3D1C,r3D07);
      real r3D2B#1 = RAdd(r3D09,r3D2A);
      real r3D2C#1 = RMul(realLit3D1C,r3D0F);
      real r3D2D#1 = RAdd(r3D11,r3D2C);
      tensor[3] tensor3D2E#1 = <tensor[3]>[r3D29,r3D2B,r3D2D];
      real r3D2F#1 = RMul(realLit3D14,r3CFB);
      real r3D30#1 = RAdd(r3D2F,r3CFE);
      real r3D31#1 = RAdd(r3D30,r3D00);
      real r3D32#1 = RMul(realLit3D14,r3D03);
      real r3D33#1 = RAdd(r3D32,r3D06);
      real r3D34#1 = RAdd(r3D33,r3D08);
      real r3D35#1 = RMul(realLit3D14,r3D0B);
      real r3D36#1 = RAdd(r3D35,r3D0E);
      real r3D37#1 = RAdd(r3D36,r3D10);
      tensor[3] tensor3D38#1 = <tensor[3]>[r3D31,r3D34,r3D37];
      tensor[3,3] tensor3D39#1 = <tensor[3,3]>[tensor3D2E,tensor3D13,tensor3D38];
      real r3D3A#1 = RMul(realLit3D14,r3CFD);
      real r3D3B#1 = RAdd(r3CFC,r3D3A);
      real r3D3C#1 = RAdd(r3D3B,r3D00);
      real r3D3D#1 = RMul(realLit3D14,r3D05);
      real r3D3E#1 = RAdd(r3D04,r3D3D);
      real r3D3F#1 = RAdd(r3D3E,r3D08);
      real r3D40#1 = RMul(realLit3D14,r3D0D);
      real r3D41#1 = RAdd(r3D0C,r3D40);
      real r3D42#1 = RAdd(r3D41,r3D10);
      tensor[3] tensor3D43#1 = <tensor[3]>[r3D3C,r3D3F,r3D42];
      real r3D44#1 = RMul(realLit3D1C,r3CFB);
      real r3D45#1 = RAdd(r3D44,r3CFE);
      real r3D46#1 = RAdd(r3D45,r3D00);
      real r3D47#1 = RMul(realLit3D1C,r3D03);
      real r3D48#1 = RAdd(r3D47,r3D06);
      real r3D49#1 = RAdd(r3D48,r3D08);
      real r3D4A#1 = RMul(realLit3D1C,r3D0B);
      real r3D4B#1 = RAdd(r3D4A,r3D0E);
      real r3D4C#1 = RAdd(r3D4B,r3D10);
      tensor[3] tensor3D4D#1 = <tensor[3]>[r3D46,r3D49,r3D4C];
      tensor[3,3] tensor3D4E#1 = <tensor[3,3]>[tensor3D43,tensor3D4D,tensor3D13];
      tensor[3,3,3] op1_e3_l_123CF9#27 = <tensor[3,3,3]>[tensor3D27,tensor3D39,tensor3D4E];
      real r3DA7#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_103C42);
      real r3DA8#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_123CF9);
      real r3DA9#1 = RMul(r3DA7,r3DA8);
      real r3DAA#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_103C42);
      real r3DAB#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_123CF9);
      real r3DAC#1 = RMul(r3DAA,r3DAB);
      real r3DAD#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_103C42);
      real r3DAE#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_123CF9);
      real r3DAF#1 = RMul(r3DAD,r3DAE);
      real r3DB0#1 = RAdd(r3DA9,r3DAC);
      real r3DB1#1 = RAdd(r3DB0,r3DAF);
      real r3DB2#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_123CF9);
      real r3DB3#1 = RMul(r3DA7,r3DB2);
      real r3DB4#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_123CF9);
      real r3DB5#1 = RMul(r3DAA,r3DB4);
      real r3DB6#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_123CF9);
      real r3DB7#1 = RMul(r3DAD,r3DB6);
      real r3DB8#1 = RAdd(r3DB3,r3DB5);
      real r3DB9#1 = RAdd(r3DB8,r3DB7);
      real r3DBA#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_123CF9);
      real r3DBB#1 = RMul(r3DA7,r3DBA);
      real r3DBC#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_123CF9);
      real r3DBD#1 = RMul(r3DAA,r3DBC);
      real r3DBE#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_123CF9);
      real r3DBF#1 = RMul(r3DAD,r3DBE);
      real r3DC0#1 = RAdd(r3DBB,r3DBD);
      real r3DC1#1 = RAdd(r3DC0,r3DBF);
      tensor[3] tensor3DC2#1 = <tensor[3]>[r3DB1,r3DB9,r3DC1];
      real r3DC3#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_123CF9);
      real r3DC4#1 = RMul(r3DA7,r3DC3);
      real r3DC5#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_123CF9);
      real r3DC6#1 = RMul(r3DAA,r3DC5);
      real r3DC7#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_123CF9);
      real r3DC8#1 = RMul(r3DAD,r3DC7);
      real r3DC9#1 = RAdd(r3DC4,r3DC6);
      real r3DCA#1 = RAdd(r3DC9,r3DC8);
      real r3DCB#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_123CF9);
      real r3DCC#1 = RMul(r3DA7,r3DCB);
      real r3DCD#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_123CF9);
      real r3DCE#1 = RMul(r3DAA,r3DCD);
      real r3DCF#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_123CF9);
      real r3DD0#1 = RMul(r3DAD,r3DCF);
      real r3DD1#1 = RAdd(r3DCC,r3DCE);
      real r3DD2#1 = RAdd(r3DD1,r3DD0);
      real r3DD3#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_123CF9);
      real r3DD4#1 = RMul(r3DA7,r3DD3);
      real r3DD5#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_123CF9);
      real r3DD6#1 = RMul(r3DAA,r3DD5);
      real r3DD7#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_123CF9);
      real r3DD8#1 = RMul(r3DAD,r3DD7);
      real r3DD9#1 = RAdd(r3DD4,r3DD6);
      real r3DDA#1 = RAdd(r3DD9,r3DD8);
      tensor[3] tensor3DDB#1 = <tensor[3]>[r3DCA,r3DD2,r3DDA];
      real r3DDC#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_123CF9);
      real r3DDD#1 = RMul(r3DA7,r3DDC);
      real r3DDE#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_123CF9);
      real r3DDF#1 = RMul(r3DAA,r3DDE);
      real r3DE0#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_123CF9);
      real r3DE1#1 = RMul(r3DAD,r3DE0);
      real r3DE2#1 = RAdd(r3DDD,r3DDF);
      real r3DE3#1 = RAdd(r3DE2,r3DE1);
      real r3DE4#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_123CF9);
      real r3DE5#1 = RMul(r3DA7,r3DE4);
      real r3DE6#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_123CF9);
      real r3DE7#1 = RMul(r3DAA,r3DE6);
      real r3DE8#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_123CF9);
      real r3DE9#1 = RMul(r3DAD,r3DE8);
      real r3DEA#1 = RAdd(r3DE5,r3DE7);
      real r3DEB#1 = RAdd(r3DEA,r3DE9);
      real r3DEC#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_123CF9);
      real r3DED#1 = RMul(r3DA7,r3DEC);
      real r3DEE#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_123CF9);
      real r3DEF#1 = RMul(r3DAA,r3DEE);
      real r3DF0#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_123CF9);
      real r3DF1#1 = RMul(r3DAD,r3DF0);
      real r3DF2#1 = RAdd(r3DED,r3DEF);
      real r3DF3#1 = RAdd(r3DF2,r3DF1);
      tensor[3] tensor3DF4#1 = <tensor[3]>[r3DE3,r3DEB,r3DF3];
      tensor[3,3] tensor3DF5#1 = <tensor[3,3]>[tensor3DC2,tensor3DDB,tensor3DF4];
      real r3DF6#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_103C42);
      real r3DF7#1 = RMul(r3DF6,r3DA8);
      real r3DF8#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_103C42);
      real r3DF9#1 = RMul(r3DF8,r3DAB);
      real r3DFA#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_103C42);
      real r3DFB#1 = RMul(r3DFA,r3DAE);
      real r3DFC#1 = RAdd(r3DF7,r3DF9);
      real r3DFD#1 = RAdd(r3DFC,r3DFB);
      real r3DFE#1 = RMul(r3DF6,r3DB2);
      real r3DFF#1 = RMul(r3DF8,r3DB4);
      real r3E00#1 = RMul(r3DFA,r3DB6);
      real r3E01#1 = RAdd(r3DFE,r3DFF);
      real r3E02#1 = RAdd(r3E01,r3E00);
      real r3E03#1 = RMul(r3DF6,r3DBA);
      real r3E04#1 = RMul(r3DF8,r3DBC);
      real r3E05#1 = RMul(r3DFA,r3DBE);
      real r3E06#1 = RAdd(r3E03,r3E04);
      real r3E07#1 = RAdd(r3E06,r3E05);
      tensor[3] tensor3E08#1 = <tensor[3]>[r3DFD,r3E02,r3E07];
      real r3E09#1 = RMul(r3DF6,r3DC3);
      real r3E0A#1 = RMul(r3DF8,r3DC5);
      real r3E0B#1 = RMul(r3DFA,r3DC7);
      real r3E0C#1 = RAdd(r3E09,r3E0A);
      real r3E0D#1 = RAdd(r3E0C,r3E0B);
      real r3E0E#1 = RMul(r3DF6,r3DCB);
      real r3E0F#1 = RMul(r3DF8,r3DCD);
      real r3E10#1 = RMul(r3DFA,r3DCF);
      real r3E11#1 = RAdd(r3E0E,r3E0F);
      real r3E12#1 = RAdd(r3E11,r3E10);
      real r3E13#1 = RMul(r3DF6,r3DD3);
      real r3E14#1 = RMul(r3DF8,r3DD5);
      real r3E15#1 = RMul(r3DFA,r3DD7);
      real r3E16#1 = RAdd(r3E13,r3E14);
      real r3E17#1 = RAdd(r3E16,r3E15);
      tensor[3] tensor3E18#1 = <tensor[3]>[r3E0D,r3E12,r3E17];
      real r3E19#1 = RMul(r3DF6,r3DDC);
      real r3E1A#1 = RMul(r3DF8,r3DDE);
      real r3E1B#1 = RMul(r3DFA,r3DE0);
      real r3E1C#1 = RAdd(r3E19,r3E1A);
      real r3E1D#1 = RAdd(r3E1C,r3E1B);
      real r3E1E#1 = RMul(r3DF6,r3DE4);
      real r3E1F#1 = RMul(r3DF8,r3DE6);
      real r3E20#1 = RMul(r3DFA,r3DE8);
      real r3E21#1 = RAdd(r3E1E,r3E1F);
      real r3E22#1 = RAdd(r3E21,r3E20);
      real r3E23#1 = RMul(r3DF6,r3DEC);
      real r3E24#1 = RMul(r3DF8,r3DEE);
      real r3E25#1 = RMul(r3DFA,r3DF0);
      real r3E26#1 = RAdd(r3E23,r3E24);
      real r3E27#1 = RAdd(r3E26,r3E25);
      tensor[3] tensor3E28#1 = <tensor[3]>[r3E1D,r3E22,r3E27];
      tensor[3,3] tensor3E29#1 = <tensor[3,3]>[tensor3E08,tensor3E18,tensor3E28];
      real r3E2A#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_103C42);
      real r3E2B#1 = RMul(r3E2A,r3DA8);
      real r3E2C#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_103C42);
      real r3E2D#1 = RMul(r3E2C,r3DAB);
      real r3E2E#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_103C42);
      real r3E2F#1 = RMul(r3E2E,r3DAE);
      real r3E30#1 = RAdd(r3E2B,r3E2D);
      real r3E31#1 = RAdd(r3E30,r3E2F);
      real r3E32#1 = RMul(r3E2A,r3DB2);
      real r3E33#1 = RMul(r3E2C,r3DB4);
      real r3E34#1 = RMul(r3E2E,r3DB6);
      real r3E35#1 = RAdd(r3E32,r3E33);
      real r3E36#1 = RAdd(r3E35,r3E34);
      real r3E37#1 = RMul(r3E2A,r3DBA);
      real r3E38#1 = RMul(r3E2C,r3DBC);
      real r3E39#1 = RMul(r3E2E,r3DBE);
      real r3E3A#1 = RAdd(r3E37,r3E38);
      real r3E3B#1 = RAdd(r3E3A,r3E39);
      tensor[3] tensor3E3C#1 = <tensor[3]>[r3E31,r3E36,r3E3B];
      real r3E3D#1 = RMul(r3E2A,r3DC3);
      real r3E3E#1 = RMul(r3E2C,r3DC5);
      real r3E3F#1 = RMul(r3E2E,r3DC7);
      real r3E40#1 = RAdd(r3E3D,r3E3E);
      real r3E41#1 = RAdd(r3E40,r3E3F);
      real r3E42#1 = RMul(r3E2A,r3DCB);
      real r3E43#1 = RMul(r3E2C,r3DCD);
      real r3E44#1 = RMul(r3E2E,r3DCF);
      real r3E45#1 = RAdd(r3E42,r3E43);
      real r3E46#1 = RAdd(r3E45,r3E44);
      real r3E47#1 = RMul(r3E2A,r3DD3);
      real r3E48#1 = RMul(r3E2C,r3DD5);
      real r3E49#1 = RMul(r3E2E,r3DD7);
      real r3E4A#1 = RAdd(r3E47,r3E48);
      real r3E4B#1 = RAdd(r3E4A,r3E49);
      tensor[3] tensor3E4C#1 = <tensor[3]>[r3E41,r3E46,r3E4B];
      real r3E4D#1 = RMul(r3E2A,r3DDC);
      real r3E4E#1 = RMul(r3E2C,r3DDE);
      real r3E4F#1 = RMul(r3E2E,r3DE0);
      real r3E50#1 = RAdd(r3E4D,r3E4E);
      real r3E51#1 = RAdd(r3E50,r3E4F);
      real r3E52#1 = RMul(r3E2A,r3DE4);
      real r3E53#1 = RMul(r3E2C,r3DE6);
      real r3E54#1 = RMul(r3E2E,r3DE8);
      real r3E55#1 = RAdd(r3E52,r3E53);
      real r3E56#1 = RAdd(r3E55,r3E54);
      real r3E57#1 = RMul(r3E2A,r3DEC);
      real r3E58#1 = RMul(r3E2C,r3DEE);
      real r3E59#1 = RMul(r3E2E,r3DF0);
      real r3E5A#1 = RAdd(r3E57,r3E58);
      real r3E5B#1 = RAdd(r3E5A,r3E59);
      tensor[3] tensor3E5C#1 = <tensor[3]>[r3E51,r3E56,r3E5B];
      tensor[3,3] tensor3E5D#1 = <tensor[3,3]>[tensor3E3C,tensor3E4C,tensor3E5C];
      tensor[3,3,3] op1_e3_l_133DA6#27 = <tensor[3,3,3]>[tensor3DF5,tensor3E29,tensor3E5D];
      real r3F18#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs3BD0);
      real r3F19#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult3C24);
      real r3F1A#1 = RMul(r3F18,r3F19);
      real r3F1B#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs3BD0);
      real r3F1C#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult3C24);
      real r3F1D#1 = RMul(r3F1B,r3F1C);
      real r3F1E#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs3BD0);
      real r3F1F#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult3C24);
      real r3F20#1 = RMul(r3F1E,r3F1F);
      real r3F21#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs3BD0);
      real r3F22#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult3C24);
      real r3F23#1 = RMul(r3F21,r3F22);
      real r3F24#1 = RAdd(r3F1A,r3F1D);
      real r3F25#1 = RAdd(r3F24,r3F20);
      real r3F26#1 = RAdd(r3F25,r3F23);
      real r3F27#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs3BD0);
      real r3F28#1 = RMul(r3F27,r3F19);
      real r3F29#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs3BD0);
      real r3F2A#1 = RMul(r3F29,r3F1C);
      real r3F2B#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs3BD0);
      real r3F2C#1 = RMul(r3F2B,r3F1F);
      real r3F2D#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs3BD0);
      real r3F2E#1 = RMul(r3F2D,r3F22);
      real r3F2F#1 = RAdd(r3F28,r3F2A);
      real r3F30#1 = RAdd(r3F2F,r3F2C);
      real r3F31#1 = RAdd(r3F30,r3F2E);
      real r3F32#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs3BD0);
      real r3F33#1 = RMul(r3F32,r3F19);
      real r3F34#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs3BD0);
      real r3F35#1 = RMul(r3F34,r3F1C);
      real r3F36#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs3BD0);
      real r3F37#1 = RMul(r3F36,r3F1F);
      real r3F38#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs3BD0);
      real r3F39#1 = RMul(r3F38,r3F22);
      real r3F3A#1 = RAdd(r3F33,r3F35);
      real r3F3B#1 = RAdd(r3F3A,r3F37);
      real r3F3C#1 = RAdd(r3F3B,r3F39);
      tensor[3] probe_l_143F17#1 = <tensor[3]>[r3F26,r3F31,r3F3C];
      real r3F65#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs3BD0);
      real r3F66#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult3C24);
      real r3F67#1 = RMul(r3F65,r3F66);
      real r3F68#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs3BD0);
      real r3F69#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult3C24);
      real r3F6A#1 = RMul(r3F68,r3F69);
      real r3F6B#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs3BD0);
      real r3F6C#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult3C24);
      real r3F6D#1 = RMul(r3F6B,r3F6C);
      real r3F6E#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs3BD0);
      real r3F6F#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult3C24);
      real r3F70#1 = RMul(r3F6E,r3F6F);
      real r3F71#1 = RAdd(r3F67,r3F6A);
      real r3F72#1 = RAdd(r3F71,r3F6D);
      real r3F73#1 = RAdd(r3F72,r3F70);
      real r3F74#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs3BD0);
      real r3F75#1 = RMul(r3F74,r3F66);
      real r3F76#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs3BD0);
      real r3F77#1 = RMul(r3F76,r3F69);
      real r3F78#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs3BD0);
      real r3F79#1 = RMul(r3F78,r3F6C);
      real r3F7A#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs3BD0);
      real r3F7B#1 = RMul(r3F7A,r3F6F);
      real r3F7C#1 = RAdd(r3F75,r3F77);
      real r3F7D#1 = RAdd(r3F7C,r3F79);
      real r3F7E#1 = RAdd(r3F7D,r3F7B);
      real r3F7F#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs3BD0);
      real r3F80#1 = RMul(r3F7F,r3F66);
      real r3F81#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs3BD0);
      real r3F82#1 = RMul(r3F81,r3F69);
      real r3F83#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs3BD0);
      real r3F84#1 = RMul(r3F83,r3F6C);
      real r3F85#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs3BD0);
      real r3F86#1 = RMul(r3F85,r3F6F);
      real r3F87#1 = RAdd(r3F80,r3F82);
      real r3F88#1 = RAdd(r3F87,r3F84);
      real r3F89#1 = RAdd(r3F88,r3F86);
      tensor[3] probe_l_153F64#3 = <tensor[3]>[r3F73,r3F7E,r3F89];
      real r3FB2#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs3BD0);
      real r3FB3#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult3C24);
      real r3FB4#1 = RMul(r3FB2,r3FB3);
      real r3FB5#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs3BD0);
      real r3FB6#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult3C24);
      real r3FB7#1 = RMul(r3FB5,r3FB6);
      real r3FB8#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs3BD0);
      real r3FB9#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult3C24);
      real r3FBA#1 = RMul(r3FB8,r3FB9);
      real r3FBB#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs3BD0);
      real r3FBC#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult3C24);
      real r3FBD#1 = RMul(r3FBB,r3FBC);
      real r3FBE#1 = RAdd(r3FB4,r3FB7);
      real r3FBF#1 = RAdd(r3FBE,r3FBA);
      real r3FC0#1 = RAdd(r3FBF,r3FBD);
      real r3FC1#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs3BD0);
      real r3FC2#1 = RMul(r3FC1,r3FB3);
      real r3FC3#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs3BD0);
      real r3FC4#1 = RMul(r3FC3,r3FB6);
      real r3FC5#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs3BD0);
      real r3FC6#1 = RMul(r3FC5,r3FB9);
      real r3FC7#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs3BD0);
      real r3FC8#1 = RMul(r3FC7,r3FBC);
      real r3FC9#1 = RAdd(r3FC2,r3FC4);
      real r3FCA#1 = RAdd(r3FC9,r3FC6);
      real r3FCB#1 = RAdd(r3FCA,r3FC8);
      real r3FCC#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs3BD0);
      real r3FCD#1 = RMul(r3FCC,r3FB3);
      real r3FCE#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs3BD0);
      real r3FCF#1 = RMul(r3FCE,r3FB6);
      real r3FD0#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs3BD0);
      real r3FD1#1 = RMul(r3FD0,r3FB9);
      real r3FD2#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs3BD0);
      real r3FD3#1 = RMul(r3FD2,r3FBC);
      real r3FD4#1 = RAdd(r3FCD,r3FCF);
      real r3FD5#1 = RAdd(r3FD4,r3FD1);
      real r3FD6#1 = RAdd(r3FD5,r3FD3);
      tensor[3] probe_l_163FB1#3 = <tensor[3]>[r3FC0,r3FCB,r3FD6];
      real realLit3FFF#3 = 0.e0;
      real r4000#3 = TensorIndex<tensor[3],[0]>(probe_l_163FB1);
      real r4001#3 = RMul(realLit3FFF,r4000);
      real r4002#3 = TensorIndex<tensor[3],[1]>(probe_l_163FB1);
      real r4003#3 = RMul(realLit3FFF,r4002);
      real r4004#3 = TensorIndex<tensor[3],[2]>(probe_l_163FB1);
      real r4005#5 = RMul(realLit3FFF,r4004);
      real r4006#3 = RAdd(r4001,r4003);
      real r4007#3 = RAdd(r4006,r4005);
      real realLit4008#3 = 0.1e1;
      real r4009#1 = RMul(realLit4008,r4004);
      real r400A#1 = RAdd(r4006,r4009);
      real realLit400B#3 = -0.1e1;
      real r400C#1 = RMul(realLit400B,r4002);
      real r400D#1 = RAdd(r4001,r400C);
      real r400E#1 = RAdd(r400D,r4005);
      tensor[3] tensor400F#1 = <tensor[3]>[r4007,r400A,r400E];
      real r4010#1 = RMul(realLit400B,r4004);
      real r4011#1 = RAdd(r4006,r4010);
      real r4012#1 = RMul(realLit4008,r4000);
      real r4013#1 = RAdd(r4012,r4003);
      real r4014#1 = RAdd(r4013,r4005);
      tensor[3] tensor4015#1 = <tensor[3]>[r4011,r4007,r4014];
      real r4016#1 = RMul(realLit4008,r4002);
      real r4017#1 = RAdd(r4001,r4016);
      real r4018#1 = RAdd(r4017,r4005);
      real r4019#1 = RMul(realLit400B,r4000);
      real r401A#1 = RAdd(r4019,r4003);
      real r401B#1 = RAdd(r401A,r4005);
      tensor[3] tensor401C#1 = <tensor[3]>[r4018,r401B,r4007];
      tensor[3,3] op1_e3_l_173FFE#3 = <tensor[3,3]>[tensor400F,tensor4015,tensor401C];
      tensor[3] projParam403E#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_173FFE);
      real vdot403F#1 = VDot<3>(probe_l_153F64,projParam403E);
      tensor[3] projParam4040#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_173FFE);
      real vdot4041#1 = VDot<3>(probe_l_153F64,projParam4040);
      tensor[3] projParam4042#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_173FFE);
      real vdot4043#1 = VDot<3>(probe_l_153F64,projParam4042);
      tensor[3] op1_e3_l_18403D#1 = <tensor[3]>[vdot403F,vdot4041,vdot4043];
      real op1_e3_l_19404C#1 = VDot<3>(probe_l_143F17,op1_e3_l_18403D);
      real realLit4050#27 = 0.e0;
      real r4051#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_133DA6);
      real r4052#2 = RMul(realLit4050,r4051);
      real r4053#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_133DA6);
      real r4054#1 = RMul(realLit4050,r4053);
      real r4055#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_133DA6);
      real r4056#2 = RMul(realLit4050,r4055);
      real r4057#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_133DA6);
      real r4058#2 = RMul(realLit4050,r4057);
      real r4059#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_133DA6);
      real r405A#3 = RMul(realLit4050,r4059);
      real realLit405B#9 = 0.1e1;
      real r405C#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_133DA6);
      real r405D#1 = RMul(realLit405B,r405C);
      real r405E#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_133DA6);
      real r405F#2 = RMul(realLit4050,r405E);
      real realLit4060#9 = -0.1e1;
      real r4061#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_133DA6);
      real r4062#1 = RMul(realLit4060,r4061);
      real r4063#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_133DA6);
      real r4064#3 = RMul(realLit4050,r4063);
      real r4065#2 = RAdd(r4052,r4054);
      real r4066#1 = RAdd(r4065,r4056);
      real r4067#1 = RAdd(r4066,r4058);
      real r4068#1 = RAdd(r4067,r405A);
      real r4069#1 = RAdd(r4068,r405D);
      real r406A#1 = RAdd(r4069,r405F);
      real r406B#1 = RAdd(r406A,r4062);
      real r406C#1 = RAdd(r406B,r4064);
      real r406D#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_133DA6);
      real r406E#2 = RMul(realLit4050,r406D);
      real r406F#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_133DA6);
      real r4070#1 = RMul(realLit4050,r406F);
      real r4071#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_133DA6);
      real r4072#2 = RMul(realLit4050,r4071);
      real r4073#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_133DA6);
      real r4074#2 = RMul(realLit4050,r4073);
      real r4075#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_133DA6);
      real r4076#3 = RMul(realLit4050,r4075);
      real r4077#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_133DA6);
      real r4078#1 = RMul(realLit405B,r4077);
      real r4079#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_133DA6);
      real r407A#2 = RMul(realLit4050,r4079);
      real r407B#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_133DA6);
      real r407C#1 = RMul(realLit4060,r407B);
      real r407D#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_133DA6);
      real r407E#3 = RMul(realLit4050,r407D);
      real r407F#2 = RAdd(r406E,r4070);
      real r4080#1 = RAdd(r407F,r4072);
      real r4081#1 = RAdd(r4080,r4074);
      real r4082#1 = RAdd(r4081,r4076);
      real r4083#1 = RAdd(r4082,r4078);
      real r4084#1 = RAdd(r4083,r407A);
      real r4085#1 = RAdd(r4084,r407C);
      real r4086#1 = RAdd(r4085,r407E);
      real r4087#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_133DA6);
      real r4088#2 = RMul(realLit4050,r4087);
      real r4089#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_133DA6);
      real r408A#1 = RMul(realLit4050,r4089);
      real r408B#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_133DA6);
      real r408C#2 = RMul(realLit4050,r408B);
      real r408D#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_133DA6);
      real r408E#2 = RMul(realLit4050,r408D);
      real r408F#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_133DA6);
      real r4090#3 = RMul(realLit4050,r408F);
      real r4091#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_133DA6);
      real r4092#1 = RMul(realLit405B,r4091);
      real r4093#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_133DA6);
      real r4094#2 = RMul(realLit4050,r4093);
      real r4095#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_133DA6);
      real r4096#1 = RMul(realLit4060,r4095);
      real r4097#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_133DA6);
      real r4098#3 = RMul(realLit4050,r4097);
      real r4099#2 = RAdd(r4088,r408A);
      real r409A#1 = RAdd(r4099,r408C);
      real r409B#1 = RAdd(r409A,r408E);
      real r409C#1 = RAdd(r409B,r4090);
      real r409D#1 = RAdd(r409C,r4092);
      real r409E#1 = RAdd(r409D,r4094);
      real r409F#1 = RAdd(r409E,r4096);
      real r40A0#1 = RAdd(r409F,r4098);
      tensor[3] tensor40A1#1 = <tensor[3]>[r406C,r4086,r40A0];
      real r40A2#1 = RMul(realLit4060,r4055);
      real r40A3#2 = RMul(realLit4050,r405C);
      real r40A4#1 = RMul(realLit405B,r405E);
      real r40A5#2 = RMul(realLit4050,r4061);
      real r40A6#1 = RAdd(r4065,r40A2);
      real r40A7#1 = RAdd(r40A6,r4058);
      real r40A8#1 = RAdd(r40A7,r405A);
      real r40A9#1 = RAdd(r40A8,r40A3);
      real r40AA#1 = RAdd(r40A9,r40A4);
      real r40AB#1 = RAdd(r40AA,r40A5);
      real r40AC#1 = RAdd(r40AB,r4064);
      real r40AD#1 = RMul(realLit4060,r4071);
      real r40AE#2 = RMul(realLit4050,r4077);
      real r40AF#1 = RMul(realLit405B,r4079);
      real r40B0#2 = RMul(realLit4050,r407B);
      real r40B1#1 = RAdd(r407F,r40AD);
      real r40B2#1 = RAdd(r40B1,r4074);
      real r40B3#1 = RAdd(r40B2,r4076);
      real r40B4#1 = RAdd(r40B3,r40AE);
      real r40B5#1 = RAdd(r40B4,r40AF);
      real r40B6#1 = RAdd(r40B5,r40B0);
      real r40B7#1 = RAdd(r40B6,r407E);
      real r40B8#1 = RMul(realLit4060,r408B);
      real r40B9#2 = RMul(realLit4050,r4091);
      real r40BA#1 = RMul(realLit405B,r4093);
      real r40BB#2 = RMul(realLit4050,r4095);
      real r40BC#1 = RAdd(r4099,r40B8);
      real r40BD#1 = RAdd(r40BC,r408E);
      real r40BE#1 = RAdd(r40BD,r4090);
      real r40BF#1 = RAdd(r40BE,r40B9);
      real r40C0#1 = RAdd(r40BF,r40BA);
      real r40C1#1 = RAdd(r40C0,r40BB);
      real r40C2#1 = RAdd(r40C1,r4098);
      tensor[3] tensor40C3#1 = <tensor[3]>[r40AC,r40B7,r40C2];
      real r40C4#1 = RMul(realLit405B,r4053);
      real r40C5#1 = RMul(realLit4060,r4057);
      real r40C6#1 = RAdd(r4052,r40C4);
      real r40C7#1 = RAdd(r40C6,r4056);
      real r40C8#1 = RAdd(r40C7,r40C5);
      real r40C9#1 = RAdd(r40C8,r405A);
      real r40CA#1 = RAdd(r40C9,r40A3);
      real r40CB#1 = RAdd(r40CA,r405F);
      real r40CC#1 = RAdd(r40CB,r40A5);
      real r40CD#1 = RAdd(r40CC,r4064);
      real r40CE#1 = RMul(realLit405B,r406F);
      real r40CF#1 = RMul(realLit4060,r4073);
      real r40D0#1 = RAdd(r406E,r40CE);
      real r40D1#1 = RAdd(r40D0,r4072);
      real r40D2#1 = RAdd(r40D1,r40CF);
      real r40D3#1 = RAdd(r40D2,r4076);
      real r40D4#1 = RAdd(r40D3,r40AE);
      real r40D5#1 = RAdd(r40D4,r407A);
      real r40D6#1 = RAdd(r40D5,r40B0);
      real r40D7#1 = RAdd(r40D6,r407E);
      real r40D8#1 = RMul(realLit405B,r4089);
      real r40D9#1 = RMul(realLit4060,r408D);
      real r40DA#1 = RAdd(r4088,r40D8);
      real r40DB#1 = RAdd(r40DA,r408C);
      real r40DC#1 = RAdd(r40DB,r40D9);
      real r40DD#1 = RAdd(r40DC,r4090);
      real r40DE#1 = RAdd(r40DD,r40B9);
      real r40DF#1 = RAdd(r40DE,r4094);
      real r40E0#1 = RAdd(r40DF,r40BB);
      real r40E1#1 = RAdd(r40E0,r4098);
      tensor[3] tensor40E2#1 = <tensor[3]>[r40CD,r40D7,r40E1];
      tensor[3,3] op1_e3_l_20404F#9 = <tensor[3,3]>[tensor40A1,tensor40C3,tensor40E2];
      real realLit4179#1 = 0.2e1;
      real op1_e3_l_214178#9 = RMul(realLit4179,op1_e3_l_19404C);
      real varAcc417F#1 = VIndex<3,0>(xn417E);
      real varAcc4180#1 = VIndex<3,1>(xn417E);
      real varAcc4181#1 = VIndex<3,2>(xn417E);
      real coeff4182#3 = -0.1e1;
      real iden4183#1 = varAcc417F;
      real one4184#11 = 0.1e1;
      real prod4185#2 = RMul(one4184,one4184);
      real prod4186#2 = RMul(iden4183,prod4185);
      real iden4187#1 = varAcc4180;
      real prod4188#1 = RMul(iden4187,one4184);
      real prod4189#2 = RMul(one4184,prod4188);
      real iden418A#1 = varAcc4181;
      real prod418B#1 = RMul(one4184,iden418A);
      real prod418C#2 = RMul(one4184,prod418B);
      real prod418D#1 = RMul(one4184,prod4185);
      real mult418E#1 = RMul(one4184,prod418D);
      real mult418F#1 = RMul(coeff4182,prod418C);
      real mult4190#1 = RMul(coeff4182,prod4189);
      real mult4191#1 = RMul(coeff4182,prod4186);
      real sum4192#1 = RAdd(mult4190,mult4191);
      real sum4193#1 = RAdd(mult418F,sum4192);
      real sum4194#1 = RAdd(mult418E,sum4193);
      real intermediate4195#1 = sum4194;
      real basisEval4196#1 = RMul(one4184,prod4186);
      real basisEval4197#1 = RMul(one4184,prod4189);
      real basisEval4198#1 = RMul(one4184,prod418C);
      tensor[4] intermediateCons4199#1 = <tensor[4]>[intermediate4195,basisEval4196,basisEval4197,basisEval4198];
      tensor[4] basisResult417D#8 = intermediateCons4199;
      real r41B7#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs3BD0);
      real r41B8#3 = TensorIndex<tensor[4],[0]>(basisResult417D);
      real r41B9#1 = RMul(r41B7,r41B8);
      real r41BA#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs3BD0);
      real r41BB#3 = TensorIndex<tensor[4],[1]>(basisResult417D);
      real r41BC#1 = RMul(r41BA,r41BB);
      real r41BD#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs3BD0);
      real r41BE#3 = TensorIndex<tensor[4],[2]>(basisResult417D);
      real r41BF#1 = RMul(r41BD,r41BE);
      real r41C0#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs3BD0);
      real r41C1#3 = TensorIndex<tensor[4],[3]>(basisResult417D);
      real r41C2#1 = RMul(r41C0,r41C1);
      real r41C3#1 = RAdd(r41B9,r41BC);
      real r41C4#1 = RAdd(r41C3,r41BF);
      real r41C5#1 = RAdd(r41C4,r41C2);
      real r41C6#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs3BD0);
      real r41C7#1 = RMul(r41C6,r41B8);
      real r41C8#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs3BD0);
      real r41C9#1 = RMul(r41C8,r41BB);
      real r41CA#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs3BD0);
      real r41CB#1 = RMul(r41CA,r41BE);
      real r41CC#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs3BD0);
      real r41CD#1 = RMul(r41CC,r41C1);
      real r41CE#1 = RAdd(r41C7,r41C9);
      real r41CF#1 = RAdd(r41CE,r41CB);
      real r41D0#1 = RAdd(r41CF,r41CD);
      real r41D1#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs3BD0);
      real r41D2#1 = RMul(r41D1,r41B8);
      real r41D3#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs3BD0);
      real r41D4#1 = RMul(r41D3,r41BB);
      real r41D5#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs3BD0);
      real r41D6#1 = RMul(r41D5,r41BE);
      real r41D7#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs3BD0);
      real r41D8#1 = RMul(r41D7,r41C1);
      real r41D9#1 = RAdd(r41D2,r41D4);
      real r41DA#1 = RAdd(r41D9,r41D6);
      real r41DB#1 = RAdd(r41DA,r41D8);
      tensor[3] probe_l_2241B6#1 = <tensor[3]>[r41C5,r41D0,r41DB];
      real r4204#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_20404F);
      real r4205#1 = RDiv(r4204,op1_e3_l_214178);
      real r4206#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_20404F);
      real r4207#1 = RDiv(r4206,op1_e3_l_214178);
      real r4208#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_20404F);
      real r4209#1 = RDiv(r4208,op1_e3_l_214178);
      tensor[3] tensor420A#1 = <tensor[3]>[r4205,r4207,r4209];
      real r420B#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_20404F);
      real r420C#1 = RDiv(r420B,op1_e3_l_214178);
      real r420D#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_20404F);
      real r420E#1 = RDiv(r420D,op1_e3_l_214178);
      real r420F#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_20404F);
      real r4210#1 = RDiv(r420F,op1_e3_l_214178);
      tensor[3] tensor4211#1 = <tensor[3]>[r420C,r420E,r4210];
      real r4212#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_20404F);
      real r4213#1 = RDiv(r4212,op1_e3_l_214178);
      real r4214#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_20404F);
      real r4215#1 = RDiv(r4214,op1_e3_l_214178);
      real r4216#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_20404F);
      real r4217#1 = RDiv(r4216,op1_e3_l_214178);
      tensor[3] tensor4218#1 = <tensor[3]>[r4213,r4215,r4217];
      tensor[3,3] op1_e3_l_234203#6 = <tensor[3,3]>[tensor420A,tensor4211,tensor4218];
      tensor[3] op1_e3_l_244230#3 = VSub<3>(probe_l_2241B6,pos3B9E);
      tensor[3] projParam4234#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_234203);
      real vdot4235#1 = VDot<3>(projParam4234,op1_e3_l_244230);
      tensor[3] projParam4236#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_234203);
      real vdot4237#1 = VDot<3>(projParam4236,op1_e3_l_244230);
      tensor[3] projParam4238#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_234203);
      real vdot4239#1 = VDot<3>(projParam4238,op1_e3_l_244230);
      tensor[3] op1_e3_l_254233#1 = <tensor[3]>[vdot4235,vdot4237,vdot4239];
      tensor[3] xn4242#4 = VSub<3>(xn417E,op1_e3_l_254233);
      real _t4245#6 = 0.1e-7;
      real _t4247#1 = RMul(_t4245,_t4245);
      real r424B#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs3BD0);
      real r424C#3 = TensorIndex<tensor[4],[0]>(basisResult417D);
      real r424D#1 = RMul(r424B,r424C);
      real r424E#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs3BD0);
      real r424F#3 = TensorIndex<tensor[4],[1]>(basisResult417D);
      real r4250#1 = RMul(r424E,r424F);
      real r4251#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs3BD0);
      real r4252#3 = TensorIndex<tensor[4],[2]>(basisResult417D);
      real r4253#1 = RMul(r4251,r4252);
      real r4254#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs3BD0);
      real r4255#3 = TensorIndex<tensor[4],[3]>(basisResult417D);
      real r4256#1 = RMul(r4254,r4255);
      real r4257#1 = RAdd(r424D,r4250);
      real r4258#1 = RAdd(r4257,r4253);
      real r4259#1 = RAdd(r4258,r4256);
      real r425A#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs3BD0);
      real r425B#1 = RMul(r425A,r424C);
      real r425C#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs3BD0);
      real r425D#1 = RMul(r425C,r424F);
      real r425E#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs3BD0);
      real r425F#1 = RMul(r425E,r4252);
      real r4260#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs3BD0);
      real r4261#1 = RMul(r4260,r4255);
      real r4262#1 = RAdd(r425B,r425D);
      real r4263#1 = RAdd(r4262,r425F);
      real r4264#1 = RAdd(r4263,r4261);
      real r4265#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs3BD0);
      real r4266#1 = RMul(r4265,r424C);
      real r4267#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs3BD0);
      real r4268#1 = RMul(r4267,r424F);
      real r4269#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs3BD0);
      real r426A#1 = RMul(r4269,r4252);
      real r426B#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs3BD0);
      real r426C#1 = RMul(r426B,r4255);
      real r426D#1 = RAdd(r4266,r4268);
      real r426E#1 = RAdd(r426D,r426A);
      real r426F#1 = RAdd(r426E,r426C);
      tensor[3] probe_l_30424A#1 = <tensor[3]>[r4259,r4264,r426F];
      tensor[3] op1_e3_l_324297#3 = VSub<3>(probe_l_30424A,pos3B9E);
      tensor[3] projParam429B#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_234203);
      real vdot429C#1 = VDot<3>(projParam429B,op1_e3_l_324297);
      tensor[3] projParam429D#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_234203);
      real vdot429E#1 = VDot<3>(projParam429D,op1_e3_l_324297);
      tensor[3] projParam429F#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_234203);
      real vdot42A0#1 = VDot<3>(projParam429F,op1_e3_l_324297);
      tensor[3] op1_e3_l_48429A#2 = <tensor[3]>[vdot429C,vdot429E,vdot42A0];
      real _t42A9#1 = VDot<3>(op1_e3_l_48429A,op1_e3_l_48429A);
      bool _t42AC#1 = GTE<real>(_t4247,_t42A9);
      if _t42AC then goto ASSIGN42B0 else goto JOIN42D9
    ASSIGN42B0:  preds = [COND42AE]
      real _t42AF#4 = 0.1e1;
      real _t42B1#1 = RAdd(_t42AF,_t4245);
      tensor[3] _t42B4#1 = <tensor[3]>[_t42AF,_t42AF,_t42AF];
      real _t42B6#1 = VDot<3>(_t42B4,xn4242);
      bool _t42B9#1 = GT<real>(_t42B1,_t42B6);
      tensor[3] _t42BB#1 = <tensor[3]>[_t4245,_t4245,_t4245];
      tensor[3] _t42BD#3 = VAdd<3>(_t42BB,xn4242);
      real _t42C0#1 = VIndex<3,0>(_t42BD);
      real _t42C2#3 = -0.e0;
      bool _t42C4#1 = GT<real>(_t42C0,_t42C2);
      real _t42C6#1 = VIndex<3,1>(_t42BD);
      bool _t42C8#1 = GT<real>(_t42C6,_t42C2);
      real _t42CA#1 = VIndex<3,2>(_t42BD);
      bool _t42CC#1 = GT<real>(_t42CA,_t42C2);
      bool _t42CE#1 = BAnd(_t42C8,_t42CC);
      bool _t42D0#1 = BAnd(_t42C4,_t42CE);
      bool _t42D2#1 = BAnd(_t42B9,_t42D0);
      if _t42D2 then goto ASSIGN42D6 else goto JOIN42D8
    ASSIGN42D6:  preds = [COND42D4]
      femData:MeshPos _t42D5#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3B9D,cellItter3BA8,xn4242,pos3B9E);
      return _t42D5
      goto JOIN42D8
    JOIN42D8:  preds = [*RETURN(_t42D5)42D7,COND42D4]
      goto JOIN42D9
    JOIN42D9:  preds = [JOIN42D8,COND42AE]
      goto FOREACH3BAF
    NEXT42DB:  preds = [FOREACH3BAF]
      goto FOREACH3BA9
    ASSIGN42DD:  preds = [FOREACH3BA9]
      femData:MeshPos _t42DC#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3B9D);
      return _t42DC
}
  function femData:MeshPos fn_2FB47F0 (femData:MeshPos x47F1#5, tensor[3] dPos47F2#1) {
    ENTRY47F3:  preds = []
      femData:Mesh meshData47F4#1 = globals.meshData3B45;
      int timeSteps47F6#1 = globals.timeSteps3B48;
      bool _t47F8#1 = ExtractFemItem<bool,Valid(MeshPos)>(x47F1);
      bool _t47FA#1 = BNot(_t47F8);
      if _t47FA then goto RETURN(x47F1)47FD else goto JOIN47FE
    RETURN(x47F1)47FD:  preds = [COND47FC]
      return x47F1
      goto JOIN47FE
    JOIN47FE:  preds = [*RETURN(x47F1)47FD,COND47FC]
      int _t47FF#1 = 0;
      int[] _t4801#1 = Range(_t47FF,timeSteps47F6);
    FOREACH4804:  preds = [ASSIGN4802,*NEXT4806]
      foreach (i4803 in _t4801) on exit goto ASSIGN4808
      return
      goto FOREACH4804
    ASSIGN4808:  preds = [FOREACH4804]
      string _t4807#1 = "Took stupid way out!\n";
      Print<[string]>(_t4807);
      tensor[3] _t480A#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x47F1);
      int _t480C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x47F1);
      femData:Mesh _t480E#16 = ExtractFem<femData:Mesh,femData:MeshPos>(x47F1);
      int ilit4811#1 = 4;
      int mulRes4812#4 = IMul(_t480C,ilit4811);
      int ilit4813#1 = 0;
      int addRes4814#1 = IAdd(mulRes4812,ilit4813);
      int idx4815#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes4814);
      int ilit4816#1 = 1;
      int addRes4817#1 = IAdd(mulRes4812,ilit4816);
      int idx4818#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes4817);
      int ilit4819#1 = 2;
      int addRes481A#1 = IAdd(mulRes4812,ilit4819);
      int idx481B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes481A);
      int ilit481C#1 = 3;
      int addRes481D#1 = IAdd(mulRes4812,ilit481C);
      int idx481E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes481D);
      int[4] seq481F#1 = <int[4]>{idx4815,idx4818,idx481B,idx481E};
      int[4] femIndicies4810#4 = seq481F;
      int ilit4831#5 = 0;
      int ilit4832#5 = 3;
      int idx4833#1 = Subscript<int>(femIndicies4810,ilit4831);
      int mulRes4834#3 = IMul(ilit4832,idx4833);
      int addRes4835#1 = IAdd(ilit4831,mulRes4834);
      int ilit4836#5 = 1;
      int addRes4837#1 = IAdd(ilit4836,mulRes4834);
      int ilit4838#5 = 2;
      int addRes4839#1 = IAdd(ilit4838,mulRes4834);
      real dof_load483A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4835);
      real dof_load483B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4837);
      real dof_load483C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4839);
      tensor[3] interCons483D#1 = <tensor[3]>[dof_load483A,dof_load483B,dof_load483C];
      int idx483E#1 = Subscript<int>(femIndicies4810,ilit4836);
      int mulRes483F#3 = IMul(ilit4832,idx483E);
      int addRes4840#1 = IAdd(ilit4831,mulRes483F);
      int addRes4841#1 = IAdd(ilit4836,mulRes483F);
      int addRes4842#1 = IAdd(ilit4838,mulRes483F);
      real dof_load4843#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4840);
      real dof_load4844#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4841);
      real dof_load4845#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4842);
      tensor[3] interCons4846#1 = <tensor[3]>[dof_load4843,dof_load4844,dof_load4845];
      int idx4847#1 = Subscript<int>(femIndicies4810,ilit4838);
      int mulRes4848#3 = IMul(ilit4832,idx4847);
      int addRes4849#1 = IAdd(ilit4831,mulRes4848);
      int addRes484A#1 = IAdd(ilit4836,mulRes4848);
      int addRes484B#1 = IAdd(ilit4838,mulRes4848);
      real dof_load484C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4849);
      real dof_load484D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes484A);
      real dof_load484E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes484B);
      tensor[3] interCons484F#1 = <tensor[3]>[dof_load484C,dof_load484D,dof_load484E];
      int idx4850#1 = Subscript<int>(femIndicies4810,ilit4832);
      int mulRes4851#3 = IMul(ilit4832,idx4850);
      int addRes4852#1 = IAdd(ilit4831,mulRes4851);
      int addRes4853#1 = IAdd(ilit4836,mulRes4851);
      int addRes4854#1 = IAdd(ilit4838,mulRes4851);
      real dof_load4855#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4852);
      real dof_load4856#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4853);
      real dof_load4857#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4854);
      tensor[3] interCons4858#1 = <tensor[3]>[dof_load4855,dof_load4856,dof_load4857];
      tensor[4,3] dofs4859#1 = <tensor[4,3]>[interCons483D,interCons4846,interCons484F,interCons4858];
      tensor[4,3] femDofs4830#12 = dofs4859;
      real varAcc4885#1 = VIndex<3,0>(_t480A);
      real varAcc4886#1 = VIndex<3,1>(_t480A);
      real varAcc4887#1 = VIndex<3,2>(_t480A);
      real coeff4888#3 = -0.1e1;
      real iden4889#1 = varAcc4885;
      real one488A#11 = 0.1e1;
      real prod488B#2 = RMul(one488A,one488A);
      real prod488C#2 = RMul(iden4889,prod488B);
      real iden488D#1 = varAcc4886;
      real prod488E#1 = RMul(iden488D,one488A);
      real prod488F#2 = RMul(one488A,prod488E);
      real iden4890#1 = varAcc4887;
      real prod4891#1 = RMul(one488A,iden4890);
      real prod4892#2 = RMul(one488A,prod4891);
      real prod4893#1 = RMul(one488A,prod488B);
      real mult4894#1 = RMul(one488A,prod4893);
      real mult4895#1 = RMul(coeff4888,prod4892);
      real mult4896#1 = RMul(coeff4888,prod488F);
      real mult4897#1 = RMul(coeff4888,prod488C);
      real sum4898#1 = RAdd(mult4896,mult4897);
      real sum4899#1 = RAdd(mult4895,sum4898);
      real sum489A#1 = RAdd(mult4894,sum4899);
      real intermediate489B#1 = sum489A;
      real basisEval489C#1 = RMul(one488A,prod488C);
      real basisEval489D#1 = RMul(one488A,prod488F);
      real basisEval489E#1 = RMul(one488A,prod4892);
      tensor[4] intermediateCons489F#1 = <tensor[4]>[intermediate489B,basisEval489C,basisEval489D,basisEval489E];
      tensor[4] basisResult4884#4 = intermediateCons489F;
      real r48BD#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs4830);
      real r48BE#3 = TensorIndex<tensor[4],[0]>(basisResult4884);
      real r48BF#1 = RMul(r48BD,r48BE);
      real r48C0#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs4830);
      real r48C1#3 = TensorIndex<tensor[4],[1]>(basisResult4884);
      real r48C2#1 = RMul(r48C0,r48C1);
      real r48C3#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs4830);
      real r48C4#3 = TensorIndex<tensor[4],[2]>(basisResult4884);
      real r48C5#1 = RMul(r48C3,r48C4);
      real r48C6#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs4830);
      real r48C7#3 = TensorIndex<tensor[4],[3]>(basisResult4884);
      real r48C8#1 = RMul(r48C6,r48C7);
      real r48C9#1 = RAdd(r48BF,r48C2);
      real r48CA#1 = RAdd(r48C9,r48C5);
      real r48CB#1 = RAdd(r48CA,r48C8);
      real r48CC#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs4830);
      real r48CD#1 = RMul(r48CC,r48BE);
      real r48CE#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs4830);
      real r48CF#1 = RMul(r48CE,r48C1);
      real r48D0#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs4830);
      real r48D1#1 = RMul(r48D0,r48C4);
      real r48D2#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs4830);
      real r48D3#1 = RMul(r48D2,r48C7);
      real r48D4#1 = RAdd(r48CD,r48CF);
      real r48D5#1 = RAdd(r48D4,r48D1);
      real r48D6#1 = RAdd(r48D5,r48D3);
      real r48D7#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs4830);
      real r48D8#1 = RMul(r48D7,r48BE);
      real r48D9#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs4830);
      real r48DA#1 = RMul(r48D9,r48C1);
      real r48DB#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs4830);
      real r48DC#1 = RMul(r48DB,r48C4);
      real r48DD#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs4830);
      real r48DE#1 = RMul(r48DD,r48C7);
      real r48DF#1 = RAdd(r48D8,r48DA);
      real r48E0#1 = RAdd(r48DF,r48DC);
      real r48E1#1 = RAdd(r48E0,r48DE);
      tensor[3] probe_l_548BC#1 = <tensor[3]>[r48CB,r48D6,r48E1];
      tensor[3] _t4909#1 = VAdd<3>(probe_l_548BC,dPos47F2);
      femData:MeshPos cmp490C#1 = findPos3B9C (meshData47F4,_t4909);
      return cmp490C
}
## input initialization
  ENTRY3B52:  preds = []
    int timeSteps3B53#1 = 32;
    globals.timeSteps3B48 = timeSteps3B53;
    real timeEps3B56#1 = 0.1e-6;
    globals.timeEps3B49 = timeEps3B56;
    real stepSize3B59#1 = 0.1e-1;
    globals.stepSize3B4B = stepSize3B59;
    int stepMax3B5C#1 = 300;
    globals.stepMax3B4C = stepMax3B5C;
    return
## global-variable initialization
  ENTRY3B60:  preds = []
    femData:Mesh meshData3B61#3 = globals.meshData3B45;
    femData:Space 0space0409_intermedateGlobal3B63#1 = globals.0space0409_intermedateGlobal3B46;
    femData:FemFunc 0data040B_intermedateGlobal3B65#1 = globals.0data040B_intermedateGlobal3B47;
    int _t3B67#1 = 0;
    int _t3B69#1 = 1;
    int _t3B6B#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3B61);
    int _t3B6D#1 = ISub(_t3B6B,_t3B69);
    int[] _t3B6F#1 = Range(_t3B67,_t3B6D);
    femData:MeshCell[] _t3B71#1 = <femData:MeshCell[]>{};
  FOREACH3B74:  preds = [ASSIGN3B72,NEXT3B7A]
    foreach (_t3B73 in _t3B6F) on exit goto ASSIGN3B7C
      femData:MeshCell[] _t3B78#1 = phi(_t3B71,_t3B77)
    femData:MeshCell _t3B75#1 = LoadFem<femData:MeshCell>(meshData3B61,_t3B73);
    femData:MeshCell[] _t3B77#1 = Append<femData:MeshCell>(_t3B78,_t3B75);
    goto FOREACH3B74
  ASSIGN3B7C:  preds = [FOREACH3B74]
    femData:Space space3B7B#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal3B63,meshData3B61);
    femData:FemFunc data3B7D#2 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal3B65,space3B7B);
    globals.data3B4F = data3B7D;
    femData:Space _t3B80#2 = ExtractFem<femData:Space,femData:FemFunc>(data3B7D);
    femData:Mesh _t3B82#1 = ExtractFem<femData:Mesh,femData:Space>(_t3B80);
    globals._t3B50 = _t3B82;
    globals._tX3B51 = _t3B80;
    return
## strand
  strand gg (tensor[3] startPos3B87#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3B8E:  preds = []
        femData:Mesh meshData3B8F#1 = globals.meshData3B45;
        tensor[3][0] _t3B91#1 = <tensor[3][0]>{};
        tensor[3][] _t3B93#1 = MkDynamic<tensor[3],0>(_t3B91);
        tensor[3][0] _t3B95#1 = <tensor[3][0]>{};
        tensor[3][] _t3B97#1 = MkDynamic<tensor[3],0>(_t3B95);
        int step3B99#1 = 0;
        femData:MeshPos cPos3B9B#1 = findPos3B9C (meshData3B8F,startPos3B87);
        self.stream = _t3B93;
        self.newStream = _t3B97;
        self.step = step3B99;
        self.cPos = cPos3B9B;
        self.altCPos = startPos3B87;
        self.startPos = startPos3B87;
        return
    end state init
    method update
        ENTRY42E7:  preds = []
          femData:Mesh _t42E8#3 = globals._t3B50;
          femData:Space _t42EA#30 = globals._tX3B51;
          femData:FemFunc data42EC#92 = globals.data3B4F;
          femData:Mesh meshData42EE#2 = globals.meshData3B45;
          real stepSize42F0#8 = globals.stepSize3B4B;
          int stepMax42F2#1 = globals.stepMax3B4C;
          tensor[3,3] M42F4#6 = globals.M3B4D;
          tensor[3] center42F6#2 = globals.center3B4E;
          tensor[3][] stream42F8#2 = self.stream;
          tensor[3][] newStream42FA#2 = self.newStream;
          int step42FC#5 = self.step;
          femData:MeshPos cPos42FE#9 = self.cPos;
          tensor[3] altCPos4300#11 = self.altCPos;
          tensor[3] startPos4302#6 = self.startPos;
          int _t4304#1 = 0;
          bool _t4306#1 = EQ<int>(step42FC,_t4304);
          if _t4306 then goto ASSIGN430A else goto JOIN4334
        ASSIGN430A:  preds = [COND4308]
          bool _t4309#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos42FE);
          if _t4309 then goto ASSIGN430D else goto JOIN4333
        ASSIGN430D:  preds = [COND430B]
          tensor[3] rp430C#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          real _t430E#1 = VIndex<3,0>(rp430C);
          real _t4310#3 = 0.1e-5;
          bool _t4312#1 = LTE<real>(_t430E,_t4310);
          if _t4312 then goto STABILIZE4315 else goto JOIN4316
        STABILIZE4315:  preds = [COND4314]
          stabilize
          goto JOIN4316
        JOIN4316:  preds = [*STABILIZE4315,COND4314]
          real _t4317#1 = VIndex<3,1>(rp430C);
          bool _t4319#1 = LTE<real>(_t4317,_t4310);
          if _t4319 then goto STABILIZE431C else goto JOIN431D
        STABILIZE431C:  preds = [COND431B]
          stabilize
          goto JOIN431D
        JOIN431D:  preds = [*STABILIZE431C,COND431B]
          real _t431E#1 = VIndex<3,2>(rp430C);
          bool _t4320#1 = LTE<real>(_t431E,_t4310);
          if _t4320 then goto STABILIZE4323 else goto JOIN4324
        STABILIZE4323:  preds = [COND4322]
          stabilize
          goto JOIN4324
        JOIN4324:  preds = [*STABILIZE4323,COND4322]
          real _t4325#3 = 0.1e1;
          tensor[3] _t4327#1 = <tensor[3]>[_t4325,_t4325,_t4325];
          real r4329#1 = VDot<3>(_t4327,rp430C);
          real _t432C#1 = 0.9999999e0;
          bool _t432E#1 = LTE<real>(_t432C,r4329);
          if _t432E then goto STABILIZE4331 else goto JOIN4332
        STABILIZE4331:  preds = [COND4330]
          stabilize
          goto JOIN4332
        JOIN4332:  preds = [*STABILIZE4331,COND4330]
          goto JOIN4333
        JOIN4333:  preds = [JOIN4332,COND430B]
          goto JOIN4334
        JOIN4334:  preds = [JOIN4333,COND4308]
          bool _t4335#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos42FE);
          femData:MeshPos _t4337#6 = findPos3B9C (meshData42EE,altCPos4300);
          bool _t4339#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t4337);
          bool _t433B#1 = NEQ<bool>(_t4335,_t4339);
          if _t433B then goto ASSIGN433F else goto JOIN4343
        ASSIGN433F:  preds = [COND433D]
          string _t433E#1 = "ERG:Warning of validity startPos:";
          string _t4340#1 = "\n";
          Print<[string,tensor[3],string]>(_t433E,startPos4302,_t4340);
          goto JOIN4343
        JOIN4343:  preds = [MASSIGN4342,COND433D]
          bool _t4344#2 = BNot(_t4335);
          if _t4344 then goto ASSIGN4348 else goto ASSIGN5617
        ASSIGN4348:  preds = [COND4346]
          bool _t4347#1 = true;
          goto JOIN434B
        JOIN434B:  preds = [ASSIGN4348,JOIN561C]
          bool _t4349#1 = phi(_t4347,_t434A)
          if _t4349 then goto ASSIGN434E else goto JOIN435D
        ASSIGN434E:  preds = [COND434C]
          string _t434D#1 = "Went off the mesh\?";
          string _t434F#2 = " and ";
          bool _t4351#1 = BNot(_t4339);
          string _t4353#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t434D,_t4344,_t434F,altCPos4300,_t434F,_t4351,_t4353);
          string _t4356#1 = "Pos is:";
          tensor[3] _t4358#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          Print<[string,tensor[3],string]>(_t4356,_t4358,_t4353);
          Print<[tensor[3][],string,tensor[3][],string]>(stream42F8,_t4353,newStream42FA,_t4353);
          stabilize
          goto JOIN435D
        JOIN435D:  preds = [*STABILIZE435C,COND434C]
          tensor[3] _t435E#7 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          int _t4360#5 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos42FE);
          femData:Mesh _t4362#20 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos42FE);
          int ilit4365#1 = 4;
          int mulRes4366#4 = IMul(_t4360,ilit4365);
          int ilit4367#1 = 0;
          int addRes4368#1 = IAdd(mulRes4366,ilit4367);
          int idx4369#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes4368);
          int ilit436A#1 = 1;
          int addRes436B#1 = IAdd(mulRes4366,ilit436A);
          int idx436C#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes436B);
          int ilit436D#1 = 2;
          int addRes436E#1 = IAdd(mulRes4366,ilit436D);
          int idx436F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes436E);
          int ilit4370#1 = 3;
          int addRes4371#1 = IAdd(mulRes4366,ilit4370);
          int idx4372#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes4371);
          int[4] seq4373#1 = <int[4]>{idx4369,idx436C,idx436F,idx4372};
          int[4] femIndicies4364#4 = seq4373;
          int ilit4385#5 = 0;
          int ilit4386#5 = 3;
          int idx4387#1 = Subscript<int>(femIndicies4364,ilit4385);
          int mulRes4388#3 = IMul(ilit4386,idx4387);
          int addRes4389#1 = IAdd(ilit4385,mulRes4388);
          int ilit438A#5 = 1;
          int addRes438B#1 = IAdd(ilit438A,mulRes4388);
          int ilit438C#5 = 2;
          int addRes438D#1 = IAdd(ilit438C,mulRes4388);
          real dof_load438E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4389);
          real dof_load438F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes438B);
          real dof_load4390#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes438D);
          tensor[3] interCons4391#1 = <tensor[3]>[dof_load438E,dof_load438F,dof_load4390];
          int idx4392#1 = Subscript<int>(femIndicies4364,ilit438A);
          int mulRes4393#3 = IMul(ilit4386,idx4392);
          int addRes4394#1 = IAdd(ilit4385,mulRes4393);
          int addRes4395#1 = IAdd(ilit438A,mulRes4393);
          int addRes4396#1 = IAdd(ilit438C,mulRes4393);
          real dof_load4397#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4394);
          real dof_load4398#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4395);
          real dof_load4399#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4396);
          tensor[3] interCons439A#1 = <tensor[3]>[dof_load4397,dof_load4398,dof_load4399];
          int idx439B#1 = Subscript<int>(femIndicies4364,ilit438C);
          int mulRes439C#3 = IMul(ilit4386,idx439B);
          int addRes439D#1 = IAdd(ilit4385,mulRes439C);
          int addRes439E#1 = IAdd(ilit438A,mulRes439C);
          int addRes439F#1 = IAdd(ilit438C,mulRes439C);
          real dof_load43A0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439D);
          real dof_load43A1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439E);
          real dof_load43A2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439F);
          tensor[3] interCons43A3#1 = <tensor[3]>[dof_load43A0,dof_load43A1,dof_load43A2];
          int idx43A4#1 = Subscript<int>(femIndicies4364,ilit4386);
          int mulRes43A5#3 = IMul(ilit4386,idx43A4);
          int addRes43A6#1 = IAdd(ilit4385,mulRes43A5);
          int addRes43A7#1 = IAdd(ilit438A,mulRes43A5);
          int addRes43A8#1 = IAdd(ilit438C,mulRes43A5);
          real dof_load43A9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A6);
          real dof_load43AA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A7);
          real dof_load43AB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A8);
          tensor[3] interCons43AC#1 = <tensor[3]>[dof_load43A9,dof_load43AA,dof_load43AB];
          tensor[4,3] dofs43AD#1 = <tensor[4,3]>[interCons4391,interCons439A,interCons43A3,interCons43AC];
          tensor[4,3] femDofs4384#24 = dofs43AD;
          real varAcc43D9#1 = VIndex<3,0>(_t435E);
          real varAcc43DA#1 = VIndex<3,1>(_t435E);
          real varAcc43DB#1 = VIndex<3,2>(_t435E);
          real coeff43DC#3 = -0.1e1;
          real iden43DD#1 = varAcc43D9;
          real one43DE#11 = 0.1e1;
          real prod43DF#2 = RMul(one43DE,one43DE);
          real prod43E0#2 = RMul(iden43DD,prod43DF);
          real iden43E1#1 = varAcc43DA;
          real prod43E2#1 = RMul(iden43E1,one43DE);
          real prod43E3#2 = RMul(one43DE,prod43E2);
          real iden43E4#1 = varAcc43DB;
          real prod43E5#1 = RMul(one43DE,iden43E4);
          real prod43E6#2 = RMul(one43DE,prod43E5);
          real prod43E7#1 = RMul(one43DE,prod43DF);
          real mult43E8#1 = RMul(one43DE,prod43E7);
          real mult43E9#1 = RMul(coeff43DC,prod43E6);
          real mult43EA#1 = RMul(coeff43DC,prod43E3);
          real mult43EB#1 = RMul(coeff43DC,prod43E0);
          real sum43EC#1 = RAdd(mult43EA,mult43EB);
          real sum43ED#1 = RAdd(mult43E9,sum43EC);
          real sum43EE#1 = RAdd(mult43E8,sum43ED);
          real intermediate43EF#1 = sum43EE;
          real basisEval43F0#1 = RMul(one43DE,prod43E0);
          real basisEval43F1#1 = RMul(one43DE,prod43E3);
          real basisEval43F2#1 = RMul(one43DE,prod43E6);
          tensor[4] intermediateCons43F3#1 = <tensor[4]>[intermediate43EF,basisEval43F0,basisEval43F1,basisEval43F2];
          tensor[4] basisResult43D8#8 = intermediateCons43F3;
          real r4411#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs4384);
          real r4412#3 = TensorIndex<tensor[4],[0]>(basisResult43D8);
          real r4413#1 = RMul(r4411,r4412);
          real r4414#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs4384);
          real r4415#3 = TensorIndex<tensor[4],[1]>(basisResult43D8);
          real r4416#1 = RMul(r4414,r4415);
          real r4417#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs4384);
          real r4418#3 = TensorIndex<tensor[4],[2]>(basisResult43D8);
          real r4419#1 = RMul(r4417,r4418);
          real r441A#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs4384);
          real r441B#3 = TensorIndex<tensor[4],[3]>(basisResult43D8);
          real r441C#1 = RMul(r441A,r441B);
          real r441D#1 = RAdd(r4413,r4416);
          real r441E#1 = RAdd(r441D,r4419);
          real r441F#1 = RAdd(r441E,r441C);
          real r4420#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs4384);
          real r4421#1 = RMul(r4420,r4412);
          real r4422#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs4384);
          real r4423#1 = RMul(r4422,r4415);
          real r4424#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs4384);
          real r4425#1 = RMul(r4424,r4418);
          real r4426#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs4384);
          real r4427#1 = RMul(r4426,r441B);
          real r4428#1 = RAdd(r4421,r4423);
          real r4429#1 = RAdd(r4428,r4425);
          real r442A#1 = RAdd(r4429,r4427);
          real r442B#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs4384);
          real r442C#1 = RMul(r442B,r4412);
          real r442D#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs4384);
          real r442E#1 = RMul(r442D,r4415);
          real r442F#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs4384);
          real r4430#1 = RMul(r442F,r4418);
          real r4431#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs4384);
          real r4432#1 = RMul(r4431,r441B);
          real r4433#1 = RAdd(r442C,r442E);
          real r4434#1 = RAdd(r4433,r4430);
          real r4435#1 = RAdd(r4434,r4432);
          tensor[3] _t4410#2 = <tensor[3]>[r441F,r442A,r4435];
          tensor[3][1] _t445D#1 = <tensor[3][1]>{_t4410};
          tensor[3][] _t445F#1 = MkDynamic<tensor[3],1>(_t445D);
          tensor[3][] stream4461#4 = Concat<tensor[3]>(stream42F8,_t445F);
          tensor[3][1] _t4463#1 = <tensor[3][1]>{altCPos4300};
          tensor[3][] _t4465#1 = MkDynamic<tensor[3],1>(_t4463);
          tensor[3][] newStream4467#4 = Concat<tensor[3]>(newStream42FA,_t4465);
          real r446A#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs4384);
          real r446B#3 = TensorIndex<tensor[4],[0]>(basisResult43D8);
          real r446C#1 = RMul(r446A,r446B);
          real r446D#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs4384);
          real r446E#3 = TensorIndex<tensor[4],[1]>(basisResult43D8);
          real r446F#1 = RMul(r446D,r446E);
          real r4470#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs4384);
          real r4471#3 = TensorIndex<tensor[4],[2]>(basisResult43D8);
          real r4472#1 = RMul(r4470,r4471);
          real r4473#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs4384);
          real r4474#3 = TensorIndex<tensor[4],[3]>(basisResult43D8);
          real r4475#1 = RMul(r4473,r4474);
          real r4476#1 = RAdd(r446C,r446F);
          real r4477#1 = RAdd(r4476,r4472);
          real r4478#1 = RAdd(r4477,r4475);
          real r4479#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs4384);
          real r447A#1 = RMul(r4479,r446B);
          real r447B#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs4384);
          real r447C#1 = RMul(r447B,r446E);
          real r447D#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs4384);
          real r447E#1 = RMul(r447D,r4471);
          real r447F#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs4384);
          real r4480#1 = RMul(r447F,r4474);
          real r4481#1 = RAdd(r447A,r447C);
          real r4482#1 = RAdd(r4481,r447E);
          real r4483#1 = RAdd(r4482,r4480);
          real r4484#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs4384);
          real r4485#1 = RMul(r4484,r446B);
          real r4486#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs4384);
          real r4487#1 = RMul(r4486,r446E);
          real r4488#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs4384);
          real r4489#1 = RMul(r4488,r4471);
          real r448A#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs4384);
          real r448B#1 = RMul(r448A,r4474);
          real r448C#1 = RAdd(r4485,r4487);
          real r448D#1 = RAdd(r448C,r4489);
          real r448E#1 = RAdd(r448D,r448B);
          tensor[3] probe_l_54469#1 = <tensor[3]>[r4478,r4483,r448E];
          tensor[3] op1_e3_l_744B6#2 = VSub<3>(probe_l_54469,altCPos4300);
          real op1_e3_l_944B9#1 = VDot<3>(op1_e3_l_744B6,op1_e3_l_744B6);
          real _t44BC#1 = Sqrt(op1_e3_l_944B9);
          real _t44BF#5 = 0.1e-5;
          bool _t44C1#1 = GT<real>(_t44BC,_t44BF);
          if _t44C1 then goto ASSIGN44C5 else goto ASSIGN5610
        ASSIGN44C5:  preds = [COND44C3]
          string _t44C4#1 = "ERG:Error in tracing 1: At step:";
          string _t44C6#1 = " with particle:";
          string _t44C8#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t44C4,step42FC,_t44C6,startPos4302,_t44C8);
          string _t44CB#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t44CB,_t4410,altCPos4300,_t44C8);
          string _t44CE#1 = "Cells are:";
          femData:MeshCell _t44D0#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t44D2#2 = " and ";
          femData:Mesh _t44D4#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4337);
          int _t44D6#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4337);
          femData:MeshCell _t44D8#1 = LoadFem<femData:MeshCell>(_t44D4,_t44D6);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t44CE,_t44D0,_t44D2,_t44D8,_t44C8);
          string _t44DB#1 = "Ref poses are:";
          tensor[3] _t44DD#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t4337);
          Print<[string,tensor[3],string,tensor[3],string]>(_t44DB,_t435E,_t44D2,_t44DD,_t44C8);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN44E3
        JOIN44E3:  preds = [*STABILIZE44E2,MASSIGN5615]
          real _t44E4#5 = 0.5e0;
          if _t4335 then goto ASSIGN44E8 else goto ASSIGN5609
        ASSIGN44E8:  preds = [COND44E6]
          femData:MeshCell c44E7#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          int _t44E9#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c44E7);
          femData:FuncCell _t44EB#2 = LoadFem<femData:FuncCell>(data42EC,_t44E9);
          femData:FemFunc _t44ED#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t44EB);
          femData:Space _t44EF#10 = ExtractFem<femData:Space,femData:FemFunc>(_t44ED);
          int _t44F1#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t44EB);
          int ilit44F4#1 = 10;
          int mulRes44F5#10 = IMul(_t44F1,ilit44F4);
          int ilit44F6#1 = 0;
          int addRes44F7#1 = IAdd(mulRes44F5,ilit44F6);
          int idx44F8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44F7);
          int ilit44F9#1 = 1;
          int addRes44FA#1 = IAdd(mulRes44F5,ilit44F9);
          int idx44FB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44FA);
          int ilit44FC#1 = 2;
          int addRes44FD#1 = IAdd(mulRes44F5,ilit44FC);
          int idx44FE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44FD);
          int ilit44FF#1 = 3;
          int addRes4500#1 = IAdd(mulRes44F5,ilit44FF);
          int idx4501#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4500);
          int ilit4502#1 = 4;
          int addRes4503#1 = IAdd(mulRes44F5,ilit4502);
          int idx4504#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4503);
          int ilit4505#1 = 5;
          int addRes4506#1 = IAdd(mulRes44F5,ilit4505);
          int idx4507#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4506);
          int ilit4508#1 = 6;
          int addRes4509#1 = IAdd(mulRes44F5,ilit4508);
          int idx450A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4509);
          int ilit450B#1 = 7;
          int addRes450C#1 = IAdd(mulRes44F5,ilit450B);
          int idx450D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes450C);
          int ilit450E#1 = 8;
          int addRes450F#1 = IAdd(mulRes44F5,ilit450E);
          int idx4510#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes450F);
          int ilit4511#1 = 9;
          int addRes4512#1 = IAdd(mulRes44F5,ilit4511);
          int idx4513#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4512);
          int[10] seq4514#1 = <int[10]>{idx44F8,idx44FB,idx44FE,idx4501,idx4504,idx4507,idx450A,idx450D,idx4510,idx4513};
          int[10] femIndicies44F3#10 = seq4514;
          int ilit4538#11 = 0;
          int ilit4539#11 = 3;
          int idx453A#1 = Subscript<int>(femIndicies44F3,ilit4538);
          int mulRes453B#3 = IMul(ilit4539,idx453A);
          int addRes453C#1 = IAdd(ilit4538,mulRes453B);
          int ilit453D#11 = 1;
          int addRes453E#1 = IAdd(ilit453D,mulRes453B);
          int ilit453F#11 = 2;
          int addRes4540#1 = IAdd(ilit453F,mulRes453B);
          real dof_load4541#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes453C);
          real dof_load4542#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes453E);
          real dof_load4543#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4540);
          tensor[3] interCons4544#1 = <tensor[3]>[dof_load4541,dof_load4542,dof_load4543];
          int idx4545#1 = Subscript<int>(femIndicies44F3,ilit453D);
          int mulRes4546#3 = IMul(ilit4539,idx4545);
          int addRes4547#1 = IAdd(ilit4538,mulRes4546);
          int addRes4548#1 = IAdd(ilit453D,mulRes4546);
          int addRes4549#1 = IAdd(ilit453F,mulRes4546);
          real dof_load454A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4547);
          real dof_load454B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4548);
          real dof_load454C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4549);
          tensor[3] interCons454D#1 = <tensor[3]>[dof_load454A,dof_load454B,dof_load454C];
          int idx454E#1 = Subscript<int>(femIndicies44F3,ilit453F);
          int mulRes454F#3 = IMul(ilit4539,idx454E);
          int addRes4550#1 = IAdd(ilit4538,mulRes454F);
          int addRes4551#1 = IAdd(ilit453D,mulRes454F);
          int addRes4552#1 = IAdd(ilit453F,mulRes454F);
          real dof_load4553#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4550);
          real dof_load4554#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4551);
          real dof_load4555#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4552);
          tensor[3] interCons4556#1 = <tensor[3]>[dof_load4553,dof_load4554,dof_load4555];
          int idx4557#1 = Subscript<int>(femIndicies44F3,ilit4539);
          int mulRes4558#3 = IMul(ilit4539,idx4557);
          int addRes4559#1 = IAdd(ilit4538,mulRes4558);
          int addRes455A#1 = IAdd(ilit453D,mulRes4558);
          int addRes455B#1 = IAdd(ilit453F,mulRes4558);
          real dof_load455C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4559);
          real dof_load455D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes455A);
          real dof_load455E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes455B);
          tensor[3] interCons455F#1 = <tensor[3]>[dof_load455C,dof_load455D,dof_load455E];
          int ilit4560#1 = 4;
          int idx4561#1 = Subscript<int>(femIndicies44F3,ilit4560);
          int mulRes4562#3 = IMul(ilit4539,idx4561);
          int addRes4563#1 = IAdd(ilit4538,mulRes4562);
          int addRes4564#1 = IAdd(ilit453D,mulRes4562);
          int addRes4565#1 = IAdd(ilit453F,mulRes4562);
          real dof_load4566#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4563);
          real dof_load4567#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4564);
          real dof_load4568#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4565);
          tensor[3] interCons4569#1 = <tensor[3]>[dof_load4566,dof_load4567,dof_load4568];
          int ilit456A#1 = 5;
          int idx456B#1 = Subscript<int>(femIndicies44F3,ilit456A);
          int mulRes456C#3 = IMul(ilit4539,idx456B);
          int addRes456D#1 = IAdd(ilit4538,mulRes456C);
          int addRes456E#1 = IAdd(ilit453D,mulRes456C);
          int addRes456F#1 = IAdd(ilit453F,mulRes456C);
          real dof_load4570#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456D);
          real dof_load4571#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456E);
          real dof_load4572#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456F);
          tensor[3] interCons4573#1 = <tensor[3]>[dof_load4570,dof_load4571,dof_load4572];
          int ilit4574#1 = 6;
          int idx4575#1 = Subscript<int>(femIndicies44F3,ilit4574);
          int mulRes4576#3 = IMul(ilit4539,idx4575);
          int addRes4577#1 = IAdd(ilit4538,mulRes4576);
          int addRes4578#1 = IAdd(ilit453D,mulRes4576);
          int addRes4579#1 = IAdd(ilit453F,mulRes4576);
          real dof_load457A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4577);
          real dof_load457B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4578);
          real dof_load457C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4579);
          tensor[3] interCons457D#1 = <tensor[3]>[dof_load457A,dof_load457B,dof_load457C];
          int ilit457E#1 = 7;
          int idx457F#1 = Subscript<int>(femIndicies44F3,ilit457E);
          int mulRes4580#3 = IMul(ilit4539,idx457F);
          int addRes4581#1 = IAdd(ilit4538,mulRes4580);
          int addRes4582#1 = IAdd(ilit453D,mulRes4580);
          int addRes4583#1 = IAdd(ilit453F,mulRes4580);
          real dof_load4584#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4581);
          real dof_load4585#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4582);
          real dof_load4586#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4583);
          tensor[3] interCons4587#1 = <tensor[3]>[dof_load4584,dof_load4585,dof_load4586];
          int ilit4588#1 = 8;
          int idx4589#1 = Subscript<int>(femIndicies44F3,ilit4588);
          int mulRes458A#3 = IMul(ilit4539,idx4589);
          int addRes458B#1 = IAdd(ilit4538,mulRes458A);
          int addRes458C#1 = IAdd(ilit453D,mulRes458A);
          int addRes458D#1 = IAdd(ilit453F,mulRes458A);
          real dof_load458E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458B);
          real dof_load458F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458C);
          real dof_load4590#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458D);
          tensor[3] interCons4591#1 = <tensor[3]>[dof_load458E,dof_load458F,dof_load4590];
          int ilit4592#1 = 9;
          int idx4593#1 = Subscript<int>(femIndicies44F3,ilit4592);
          int mulRes4594#3 = IMul(ilit4539,idx4593);
          int addRes4595#1 = IAdd(ilit4538,mulRes4594);
          int addRes4596#1 = IAdd(ilit453D,mulRes4594);
          int addRes4597#1 = IAdd(ilit453F,mulRes4594);
          real dof_load4598#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4595);
          real dof_load4599#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4596);
          real dof_load459A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4597);
          tensor[3] interCons459B#1 = <tensor[3]>[dof_load4598,dof_load4599,dof_load459A];
          tensor[10,3] dofs459C#1 = <tensor[10,3]>[interCons4544,interCons454D,interCons4556,interCons455F,interCons4569,interCons4573,interCons457D,interCons4587,interCons4591,interCons459B];
          tensor[10,3] femDofs4537#30 = dofs459C;
          real varAcc4604#2 = VIndex<3,0>(_t435E);
          real varAcc4605#2 = VIndex<3,1>(_t435E);
          real varAcc4606#2 = VIndex<3,2>(_t435E);
          real coeff4607#3 = 0.2e1;
          real iden4608#4 = varAcc4604;
          real prod24609#1 = RMul(iden4608,varAcc4604);
          real one460A#13 = 0.1e1;
          real prod460B#3 = RMul(one460A,one460A);
          real prod460C#2 = RMul(prod24609,prod460B);
          real coeff460D#6 = 0.4e1;
          real iden460E#3 = varAcc4605;
          real prod460F#2 = RMul(iden460E,one460A);
          real prod4610#2 = RMul(iden4608,prod460F);
          real iden4611#3 = varAcc4606;
          real prod4612#2 = RMul(one460A,iden4611);
          real prod4613#2 = RMul(iden4608,prod4612);
          real coeff4614#3 = -0.3e1;
          real prod4615#3 = RMul(iden4608,prod460B);
          real prod24616#1 = RMul(iden460E,varAcc4605);
          real prod4617#1 = RMul(prod24616,one460A);
          real prod4618#2 = RMul(one460A,prod4617);
          real prod4619#1 = RMul(iden460E,iden4611);
          real prod461A#2 = RMul(one460A,prod4619);
          real prod461B#3 = RMul(one460A,prod460F);
          real prod2461C#1 = RMul(iden4611,varAcc4606);
          real prod461D#1 = RMul(one460A,prod2461C);
          real prod461E#2 = RMul(one460A,prod461D);
          real prod461F#3 = RMul(one460A,prod4612);
          real prod4620#1 = RMul(one460A,prod460B);
          real mult4621#1 = RMul(one460A,prod4620);
          real mult4622#1 = RMul(coeff4614,prod461F);
          real mult4623#2 = RMul(coeff4607,prod461E);
          real mult4624#1 = RMul(coeff4614,prod461B);
          real mult4625#2 = RMul(coeff460D,prod461A);
          real mult4626#2 = RMul(coeff4607,prod4618);
          real mult4627#1 = RMul(coeff4614,prod4615);
          real mult4628#2 = RMul(coeff460D,prod4613);
          real mult4629#2 = RMul(coeff460D,prod4610);
          real mult462A#2 = RMul(coeff4607,prod460C);
          real sum462B#1 = RAdd(mult4629,mult462A);
          real sum462C#1 = RAdd(mult4628,sum462B);
          real sum462D#1 = RAdd(mult4627,sum462C);
          real sum462E#1 = RAdd(mult4626,sum462D);
          real sum462F#1 = RAdd(mult4625,sum462E);
          real sum4630#1 = RAdd(mult4624,sum462F);
          real sum4631#1 = RAdd(mult4623,sum4630);
          real sum4632#1 = RAdd(mult4622,sum4631);
          real sum4633#1 = RAdd(mult4621,sum4632);
          real intermediate4634#1 = sum4633;
          real coeff4635#3 = -0.1e1;
          real mult4636#1 = RMul(coeff4635,prod4615);
          real sum4637#1 = RAdd(mult4636,mult462A);
          real intermediate4638#1 = sum4637;
          real mult4639#1 = RMul(coeff4635,prod461B);
          real sum463A#1 = RAdd(mult4639,mult4626);
          real intermediate463B#1 = sum463A;
          real mult463C#1 = RMul(coeff4635,prod461F);
          real sum463D#1 = RAdd(mult463C,mult4623);
          real intermediate463E#1 = sum463D;
          real coeff463F#6 = -0.4e1;
          real mult4640#1 = RMul(coeff460D,prod461F);
          real mult4641#1 = RMul(coeff463F,prod461E);
          real mult4642#2 = RMul(coeff463F,prod461A);
          real mult4643#2 = RMul(coeff463F,prod4613);
          real sum4644#1 = RAdd(mult4642,mult4643);
          real sum4645#1 = RAdd(mult4641,sum4644);
          real sum4646#1 = RAdd(mult4640,sum4645);
          real intermediate4647#1 = sum4646;
          real mult4648#1 = RMul(coeff460D,prod461B);
          real mult4649#1 = RMul(coeff463F,prod4618);
          real mult464A#2 = RMul(coeff463F,prod4610);
          real sum464B#1 = RAdd(mult4649,mult464A);
          real sum464C#1 = RAdd(mult4642,sum464B);
          real sum464D#1 = RAdd(mult4648,sum464C);
          real intermediate464E#1 = sum464D;
          real mult464F#1 = RMul(coeff460D,prod4615);
          real mult4650#1 = RMul(coeff463F,prod460C);
          real sum4651#1 = RAdd(mult464A,mult4650);
          real sum4652#1 = RAdd(mult4643,sum4651);
          real sum4653#1 = RAdd(mult464F,sum4652);
          real intermediate4654#1 = sum4653;
          tensor[10] intermediateCons4655#1 = <tensor[10]>[intermediate4634,intermediate4638,intermediate463B,intermediate463E,mult4625,mult4628,mult4629,intermediate4647,intermediate464E,intermediate4654];
          tensor[10] basisResult4603#10 = intermediateCons4655;
          real r46AA#1 = TensorIndex<tensor[10,3],[0,0]>(femDofs4537);
          real r46AB#3 = TensorIndex<tensor[10],[0]>(basisResult4603);
          real r46AC#1 = RMul(r46AA,r46AB);
          real r46AD#1 = TensorIndex<tensor[10,3],[1,0]>(femDofs4537);
          real r46AE#3 = TensorIndex<tensor[10],[1]>(basisResult4603);
          real r46AF#1 = RMul(r46AD,r46AE);
          real r46B0#1 = TensorIndex<tensor[10,3],[2,0]>(femDofs4537);
          real r46B1#3 = TensorIndex<tensor[10],[2]>(basisResult4603);
          real r46B2#1 = RMul(r46B0,r46B1);
          real r46B3#1 = TensorIndex<tensor[10,3],[3,0]>(femDofs4537);
          real r46B4#3 = TensorIndex<tensor[10],[3]>(basisResult4603);
          real r46B5#1 = RMul(r46B3,r46B4);
          real r46B6#1 = TensorIndex<tensor[10,3],[4,0]>(femDofs4537);
          real r46B7#3 = TensorIndex<tensor[10],[4]>(basisResult4603);
          real r46B8#1 = RMul(r46B6,r46B7);
          real r46B9#1 = TensorIndex<tensor[10,3],[5,0]>(femDofs4537);
          real r46BA#3 = TensorIndex<tensor[10],[5]>(basisResult4603);
          real r46BB#1 = RMul(r46B9,r46BA);
          real r46BC#1 = TensorIndex<tensor[10,3],[6,0]>(femDofs4537);
          real r46BD#3 = TensorIndex<tensor[10],[6]>(basisResult4603);
          real r46BE#1 = RMul(r46BC,r46BD);
          real r46BF#1 = TensorIndex<tensor[10,3],[7,0]>(femDofs4537);
          real r46C0#3 = TensorIndex<tensor[10],[7]>(basisResult4603);
          real r46C1#1 = RMul(r46BF,r46C0);
          real r46C2#1 = TensorIndex<tensor[10,3],[8,0]>(femDofs4537);
          real r46C3#3 = TensorIndex<tensor[10],[8]>(basisResult4603);
          real r46C4#1 = RMul(r46C2,r46C3);
          real r46C5#1 = TensorIndex<tensor[10,3],[9,0]>(femDofs4537);
          real r46C6#3 = TensorIndex<tensor[10],[9]>(basisResult4603);
          real r46C7#1 = RMul(r46C5,r46C6);
          real r46C8#1 = RAdd(r46AC,r46AF);
          real r46C9#1 = RAdd(r46C8,r46B2);
          real r46CA#1 = RAdd(r46C9,r46B5);
          real r46CB#1 = RAdd(r46CA,r46B8);
          real r46CC#1 = RAdd(r46CB,r46BB);
          real r46CD#1 = RAdd(r46CC,r46BE);
          real r46CE#1 = RAdd(r46CD,r46C1);
          real r46CF#1 = RAdd(r46CE,r46C4);
          real r46D0#1 = RAdd(r46CF,r46C7);
          real r46D1#1 = TensorIndex<tensor[10,3],[0,1]>(femDofs4537);
          real r46D2#1 = RMul(r46D1,r46AB);
          real r46D3#1 = TensorIndex<tensor[10,3],[1,1]>(femDofs4537);
          real r46D4#1 = RMul(r46D3,r46AE);
          real r46D5#1 = TensorIndex<tensor[10,3],[2,1]>(femDofs4537);
          real r46D6#1 = RMul(r46D5,r46B1);
          real r46D7#1 = TensorIndex<tensor[10,3],[3,1]>(femDofs4537);
          real r46D8#1 = RMul(r46D7,r46B4);
          real r46D9#1 = TensorIndex<tensor[10,3],[4,1]>(femDofs4537);
          real r46DA#1 = RMul(r46D9,r46B7);
          real r46DB#1 = TensorIndex<tensor[10,3],[5,1]>(femDofs4537);
          real r46DC#1 = RMul(r46DB,r46BA);
          real r46DD#1 = TensorIndex<tensor[10,3],[6,1]>(femDofs4537);
          real r46DE#1 = RMul(r46DD,r46BD);
          real r46DF#1 = TensorIndex<tensor[10,3],[7,1]>(femDofs4537);
          real r46E0#1 = RMul(r46DF,r46C0);
          real r46E1#1 = TensorIndex<tensor[10,3],[8,1]>(femDofs4537);
          real r46E2#1 = RMul(r46E1,r46C3);
          real r46E3#1 = TensorIndex<tensor[10,3],[9,1]>(femDofs4537);
          real r46E4#1 = RMul(r46E3,r46C6);
          real r46E5#1 = RAdd(r46D2,r46D4);
          real r46E6#1 = RAdd(r46E5,r46D6);
          real r46E7#1 = RAdd(r46E6,r46D8);
          real r46E8#1 = RAdd(r46E7,r46DA);
          real r46E9#1 = RAdd(r46E8,r46DC);
          real r46EA#1 = RAdd(r46E9,r46DE);
          real r46EB#1 = RAdd(r46EA,r46E0);
          real r46EC#1 = RAdd(r46EB,r46E2);
          real r46ED#1 = RAdd(r46EC,r46E4);
          real r46EE#1 = TensorIndex<tensor[10,3],[0,2]>(femDofs4537);
          real r46EF#1 = RMul(r46EE,r46AB);
          real r46F0#1 = TensorIndex<tensor[10,3],[1,2]>(femDofs4537);
          real r46F1#1 = RMul(r46F0,r46AE);
          real r46F2#1 = TensorIndex<tensor[10,3],[2,2]>(femDofs4537);
          real r46F3#1 = RMul(r46F2,r46B1);
          real r46F4#1 = TensorIndex<tensor[10,3],[3,2]>(femDofs4537);
          real r46F5#1 = RMul(r46F4,r46B4);
          real r46F6#1 = TensorIndex<tensor[10,3],[4,2]>(femDofs4537);
          real r46F7#1 = RMul(r46F6,r46B7);
          real r46F8#1 = TensorIndex<tensor[10,3],[5,2]>(femDofs4537);
          real r46F9#1 = RMul(r46F8,r46BA);
          real r46FA#1 = TensorIndex<tensor[10,3],[6,2]>(femDofs4537);
          real r46FB#1 = RMul(r46FA,r46BD);
          real r46FC#1 = TensorIndex<tensor[10,3],[7,2]>(femDofs4537);
          real r46FD#1 = RMul(r46FC,r46C0);
          real r46FE#1 = TensorIndex<tensor[10,3],[8,2]>(femDofs4537);
          real r46FF#1 = RMul(r46FE,r46C3);
          real r4700#1 = TensorIndex<tensor[10,3],[9,2]>(femDofs4537);
          real r4701#1 = RMul(r4700,r46C6);
          real r4702#1 = RAdd(r46EF,r46F1);
          real r4703#1 = RAdd(r4702,r46F3);
          real r4704#1 = RAdd(r4703,r46F5);
          real r4705#1 = RAdd(r4704,r46F7);
          real r4706#1 = RAdd(r4705,r46F9);
          real r4707#1 = RAdd(r4706,r46FB);
          real r4708#1 = RAdd(r4707,r46FD);
          real r4709#1 = RAdd(r4708,r46FF);
          real r470A#1 = RAdd(r4709,r4701);
          tensor[3] probe_l_846A9#5 = <tensor[3]>[r46D0,r46ED,r470A];
          real op1_e3_l_11476E#1 = VDot<3>(probe_l_846A9,probe_l_846A9);
          real op1_e3_l_124771#1 = Sqrt(op1_e3_l_11476E);
          real realLit4775#1 = 0.1e1;
          real r4776#3 = RDiv(realLit4775,op1_e3_l_124771);
          real r4777#1 = TensorIndex<tensor[3],[0]>(probe_l_846A9);
          real r4778#1 = RMul(r4776,r4777);
          real r4779#1 = TensorIndex<tensor[3],[1]>(probe_l_846A9);
          real r477A#1 = RMul(r4776,r4779);
          real r477B#1 = TensorIndex<tensor[3],[2]>(probe_l_846A9);
          real r477C#1 = RMul(r4776,r477B);
          tensor[3] _t4774#1 = <tensor[3]>[r4778,r477A,r477C];
          goto JOIN4789
        JOIN4789:  preds = [ASSIGN4786,ASSIGN560E]
          tensor[3] _t4787#3 = phi(_t4774,_t4788)
          real r478B#1 = TensorIndex<tensor[3],[0]>(_t4787);
          real r478C#3 = RMul(_t44E4,stepSize42F0);
          real r478D#1 = RMul(r478C,r478B);
          real r478E#1 = TensorIndex<tensor[3],[1]>(_t4787);
          real r478F#1 = RMul(r478C,r478E);
          real r4790#1 = TensorIndex<tensor[3],[2]>(_t4787);
          real r4791#1 = RMul(r478C,r4790);
          tensor[3] up1478A#3 = <tensor[3]>[r478D,r478F,r4791];
          tensor[3] op1_e3_l_11479B#3 = VSub<3>(altCPos4300,center42F6);
          tensor[3] projParam479F#1 = ProjectLast<tensor[3,3],[0]>(M42F4);
          real vdot47A0#1 = VDot<3>(projParam479F,op1_e3_l_11479B);
          tensor[3] projParam47A1#1 = ProjectLast<tensor[3,3],[1]>(M42F4);
          real vdot47A2#1 = VDot<3>(projParam47A1,op1_e3_l_11479B);
          tensor[3] projParam47A3#1 = ProjectLast<tensor[3,3],[2]>(M42F4);
          real vdot47A4#1 = VDot<3>(projParam47A3,op1_e3_l_11479B);
          tensor[3] op1_e3_l_12479E#5 = <tensor[3]>[vdot47A0,vdot47A2,vdot47A4];
          real op1_e3_l_1747AD#1 = VDot<3>(op1_e3_l_12479E,op1_e3_l_12479E);
          real r47B1#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_12479E);
          real r47B2#3 = RMul(_t44E4,stepSize42F0);
          real r47B3#1 = RMul(r47B2,r47B1);
          real r47B4#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_12479E);
          real r47B5#1 = RMul(r47B2,r47B4);
          real r47B6#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_12479E);
          real r47B7#1 = RMul(r47B2,r47B6);
          tensor[3] op1_e3_l_1847B0#3 = <tensor[3]>[r47B3,r47B5,r47B7];
          real op1_e3_l_1947C1#1 = Sqrt(op1_e3_l_1747AD);
          real realLit47C5#1 = 0.1e1;
          real r47C6#3 = RDiv(realLit47C5,op1_e3_l_1947C1);
          real r47C7#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_1847B0);
          real r47C8#1 = RMul(r47C6,r47C7);
          real r47C9#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_1847B0);
          real r47CA#1 = RMul(r47C6,r47C9);
          real r47CB#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_1847B0);
          real r47CC#1 = RMul(r47C6,r47CB);
          tensor[3] op1_e3_l_2147C4#1 = <tensor[3]>[r47C8,r47CA,r47CC];
          tensor[3] op1_e3_l_3347D7#2 = VSub<3>(up1478A,op1_e3_l_2147C4);
          real op1_e3_l_3547DA#1 = VDot<3>(op1_e3_l_3347D7,op1_e3_l_3347D7);
          real _t47DD#1 = Sqrt(op1_e3_l_3547DA);
          bool _t47E0#1 = GT<real>(_t47DD,_t44BF);
          if _t47E0 then goto ASSIGN47E4 else goto ASSIGN5354
        ASSIGN47E4:  preds = [COND47E2]
          bool _t47E3#1 = true;
          goto JOIN47E7
        JOIN47E7:  preds = [ASSIGN47E4,ASSIGN5607]
          bool _t47E5#1 = phi(_t47E3,_t47E6)
          if _t47E5 then goto ASSIGN47EA else goto JOIN47EE
        ASSIGN47EA:  preds = [COND47E8]
          string _t47E9#1 = "ERG:Error in evaluation on pos 1:";
          string _t47EB#1 = "\n";
          Print<[string,tensor[3],string]>(_t47E9,startPos4302,_t47EB);
          goto JOIN47EE
        JOIN47EE:  preds = [MASSIGN47ED,COND47E8]
          femData:MeshPos intermed47EF#4 = fn_2FB47F0 (cPos42FE,up1478A);
          femData:MeshPos callFindPos4910#2 = findPos3B9C (_t42E8,altCPos4300);
          int intPos4912#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos4910);
          tensor[3] refPos4914#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos4910);
          int ilit4917#1 = 10;
          int mulRes4918#10 = IMul(intPos4912,ilit4917);
          int ilit4919#1 = 0;
          int addRes491A#1 = IAdd(mulRes4918,ilit4919);
          int idx491B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes491A);
          int ilit491C#1 = 1;
          int addRes491D#1 = IAdd(mulRes4918,ilit491C);
          int idx491E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes491D);
          int ilit491F#1 = 2;
          int addRes4920#1 = IAdd(mulRes4918,ilit491F);
          int idx4921#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4920);
          int ilit4922#1 = 3;
          int addRes4923#1 = IAdd(mulRes4918,ilit4922);
          int idx4924#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4923);
          int ilit4925#1 = 4;
          int addRes4926#1 = IAdd(mulRes4918,ilit4925);
          int idx4927#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4926);
          int ilit4928#1 = 5;
          int addRes4929#1 = IAdd(mulRes4918,ilit4928);
          int idx492A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4929);
          int ilit492B#1 = 6;
          int addRes492C#1 = IAdd(mulRes4918,ilit492B);
          int idx492D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes492C);
          int ilit492E#1 = 7;
          int addRes492F#1 = IAdd(mulRes4918,ilit492E);
          int idx4930#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes492F);
          int ilit4931#1 = 8;
          int addRes4932#1 = IAdd(mulRes4918,ilit4931);
          int idx4933#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4932);
          int ilit4934#1 = 9;
          int addRes4935#1 = IAdd(mulRes4918,ilit4934);
          int idx4936#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4935);
          int[10] seq4937#1 = <int[10]>{idx491B,idx491E,idx4921,idx4924,idx4927,idx492A,idx492D,idx4930,idx4933,idx4936};
          int[10] femIndicies4916#10 = seq4937;
          int ilit495B#11 = 0;
          int ilit495C#11 = 3;
          int idx495D#1 = Subscript<int>(femIndicies4916,ilit495B);
          int mulRes495E#3 = IMul(ilit495C,idx495D);
          int addRes495F#1 = IAdd(ilit495B,mulRes495E);
          int ilit4960#11 = 1;
          int addRes4961#1 = IAdd(ilit4960,mulRes495E);
          int ilit4962#11 = 2;
          int addRes4963#1 = IAdd(ilit4962,mulRes495E);
          real dof_load4964#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes495F);
          real dof_load4965#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4961);
          real dof_load4966#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4963);
          tensor[3] interCons4967#1 = <tensor[3]>[dof_load4964,dof_load4965,dof_load4966];
          int idx4968#1 = Subscript<int>(femIndicies4916,ilit4960);
          int mulRes4969#3 = IMul(ilit495C,idx4968);
          int addRes496A#1 = IAdd(ilit495B,mulRes4969);
          int addRes496B#1 = IAdd(ilit4960,mulRes4969);
          int addRes496C#1 = IAdd(ilit4962,mulRes4969);
          real dof_load496D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496A);
          real dof_load496E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496B);
          real dof_load496F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496C);
          tensor[3] interCons4970#1 = <tensor[3]>[dof_load496D,dof_load496E,dof_load496F];
          int idx4971#1 = Subscript<int>(femIndicies4916,ilit4962);
          int mulRes4972#3 = IMul(ilit495C,idx4971);
          int addRes4973#1 = IAdd(ilit495B,mulRes4972);
          int addRes4974#1 = IAdd(ilit4960,mulRes4972);
          int addRes4975#1 = IAdd(ilit4962,mulRes4972);
          real dof_load4976#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4973);
          real dof_load4977#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4974);
          real dof_load4978#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4975);
          tensor[3] interCons4979#1 = <tensor[3]>[dof_load4976,dof_load4977,dof_load4978];
          int idx497A#1 = Subscript<int>(femIndicies4916,ilit495C);
          int mulRes497B#3 = IMul(ilit495C,idx497A);
          int addRes497C#1 = IAdd(ilit495B,mulRes497B);
          int addRes497D#1 = IAdd(ilit4960,mulRes497B);
          int addRes497E#1 = IAdd(ilit4962,mulRes497B);
          real dof_load497F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497C);
          real dof_load4980#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497D);
          real dof_load4981#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497E);
          tensor[3] interCons4982#1 = <tensor[3]>[dof_load497F,dof_load4980,dof_load4981];
          int ilit4983#1 = 4;
          int idx4984#1 = Subscript<int>(femIndicies4916,ilit4983);
          int mulRes4985#3 = IMul(ilit495C,idx4984);
          int addRes4986#1 = IAdd(ilit495B,mulRes4985);
          int addRes4987#1 = IAdd(ilit4960,mulRes4985);
          int addRes4988#1 = IAdd(ilit4962,mulRes4985);
          real dof_load4989#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4986);
          real dof_load498A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4987);
          real dof_load498B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4988);
          tensor[3] interCons498C#1 = <tensor[3]>[dof_load4989,dof_load498A,dof_load498B];
          int ilit498D#1 = 5;
          int idx498E#1 = Subscript<int>(femIndicies4916,ilit498D);
          int mulRes498F#3 = IMul(ilit495C,idx498E);
          int addRes4990#1 = IAdd(ilit495B,mulRes498F);
          int addRes4991#1 = IAdd(ilit4960,mulRes498F);
          int addRes4992#1 = IAdd(ilit4962,mulRes498F);
          real dof_load4993#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4990);
          real dof_load4994#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4991);
          real dof_load4995#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4992);
          tensor[3] interCons4996#1 = <tensor[3]>[dof_load4993,dof_load4994,dof_load4995];
          int ilit4997#1 = 6;
          int idx4998#1 = Subscript<int>(femIndicies4916,ilit4997);
          int mulRes4999#3 = IMul(ilit495C,idx4998);
          int addRes499A#1 = IAdd(ilit495B,mulRes4999);
          int addRes499B#1 = IAdd(ilit4960,mulRes4999);
          int addRes499C#1 = IAdd(ilit4962,mulRes4999);
          real dof_load499D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499A);
          real dof_load499E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499B);
          real dof_load499F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499C);
          tensor[3] interCons49A0#1 = <tensor[3]>[dof_load499D,dof_load499E,dof_load499F];
          int ilit49A1#1 = 7;
          int idx49A2#1 = Subscript<int>(femIndicies4916,ilit49A1);
          int mulRes49A3#3 = IMul(ilit495C,idx49A2);
          int addRes49A4#1 = IAdd(ilit495B,mulRes49A3);
          int addRes49A5#1 = IAdd(ilit4960,mulRes49A3);
          int addRes49A6#1 = IAdd(ilit4962,mulRes49A3);
          real dof_load49A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A4);
          real dof_load49A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A5);
          real dof_load49A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A6);
          tensor[3] interCons49AA#1 = <tensor[3]>[dof_load49A7,dof_load49A8,dof_load49A9];
          int ilit49AB#1 = 8;
          int idx49AC#1 = Subscript<int>(femIndicies4916,ilit49AB);
          int mulRes49AD#3 = IMul(ilit495C,idx49AC);
          int addRes49AE#1 = IAdd(ilit495B,mulRes49AD);
          int addRes49AF#1 = IAdd(ilit4960,mulRes49AD);
          int addRes49B0#1 = IAdd(ilit4962,mulRes49AD);
          real dof_load49B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49AE);
          real dof_load49B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49AF);
          real dof_load49B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B0);
          tensor[3] interCons49B4#1 = <tensor[3]>[dof_load49B1,dof_load49B2,dof_load49B3];
          int ilit49B5#1 = 9;
          int idx49B6#1 = Subscript<int>(femIndicies4916,ilit49B5);
          int mulRes49B7#3 = IMul(ilit495C,idx49B6);
          int addRes49B8#1 = IAdd(ilit495B,mulRes49B7);
          int addRes49B9#1 = IAdd(ilit4960,mulRes49B7);
          int addRes49BA#1 = IAdd(ilit4962,mulRes49B7);
          real dof_load49BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B8);
          real dof_load49BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B9);
          real dof_load49BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49BA);
          tensor[3] interCons49BE#1 = <tensor[3]>[dof_load49BB,dof_load49BC,dof_load49BD];
          tensor[10,3] dofs49BF#1 = <tensor[10,3]>[interCons4967,interCons4970,interCons4979,interCons4982,interCons498C,interCons4996,interCons49A0,interCons49AA,interCons49B4,interCons49BE];
          tensor[10,3] femDofs495A#30 = dofs49BF;
          real varAcc4A27#2 = VIndex<3,0>(refPos4914);
          real varAcc4A28#2 = VIndex<3,1>(refPos4914);
          real varAcc4A29#2 = VIndex<3,2>(refPos4914);
          real coeff4A2A#3 = 0.2e1;
          real iden4A2B#4 = varAcc4A27;
          real prod24A2C#1 = RMul(iden4A2B,varAcc4A27);
          real one4A2D#13 = 0.1e1;
          real prod4A2E#3 = RMul(one4A2D,one4A2D);
          real prod4A2F#2 = RMul(prod24A2C,prod4A2E);
          real coeff4A30#6 = 0.4e1;
          real iden4A31#3 = varAcc4A28;
          real prod4A32#2 = RMul(iden4A31,one4A2D);
          real prod4A33#2 = RMul(iden4A2B,prod4A32);
          real iden4A34#3 = varAcc4A29;
          real prod4A35#2 = RMul(one4A2D,iden4A34);
          real prod4A36#2 = RMul(iden4A2B,prod4A35);
          real coeff4A37#3 = -0.3e1;
          real prod4A38#3 = RMul(iden4A2B,prod4A2E);
          real prod24A39#1 = RMul(iden4A31,varAcc4A28);
          real prod4A3A#1 = RMul(prod24A39,one4A2D);
          real prod4A3B#2 = RMul(one4A2D,prod4A3A);
          real prod4A3C#1 = RMul(iden4A31,iden4A34);
          real prod4A3D#2 = RMul(one4A2D,prod4A3C);
          real prod4A3E#3 = RMul(one4A2D,prod4A32);
          real prod24A3F#1 = RMul(iden4A34,varAcc4A29);
          real prod4A40#1 = RMul(one4A2D,prod24A3F);
          real prod4A41#2 = RMul(one4A2D,prod4A40);
          real prod4A42#3 = RMul(one4A2D,prod4A35);
          real prod4A43#1 = RMul(one4A2D,prod4A2E);
          real mult4A44#1 = RMul(one4A2D,prod4A43);
          real mult4A45#1 = RMul(coeff4A37,prod4A42);
          real mult4A46#2 = RMul(coeff4A2A,prod4A41);
          real mult4A47#1 = RMul(coeff4A37,prod4A3E);
          real mult4A48#2 = RMul(coeff4A30,prod4A3D);
          real mult4A49#2 = RMul(coeff4A2A,prod4A3B);
          real mult4A4A#1 = RMul(coeff4A37,prod4A38);
          real mult4A4B#2 = RMul(coeff4A30,prod4A36);
          real mult4A4C#2 = RMul(coeff4A30,prod4A33);
          real mult4A4D#2 = RMul(coeff4A2A,prod4A2F);
          real sum4A4E#1 = RAdd(mult4A4C,mult4A4D);
          real sum4A4F#1 = RAdd(mult4A4B,sum4A4E);
          real sum4A50#1 = RAdd(mult4A4A,sum4A4F);
          real sum4A51#1 = RAdd(mult4A49,sum4A50);
          real sum4A52#1 = RAdd(mult4A48,sum4A51);
          real sum4A53#1 = RAdd(mult4A47,sum4A52);
          real sum4A54#1 = RAdd(mult4A46,sum4A53);
          real sum4A55#1 = RAdd(mult4A45,sum4A54);
          real sum4A56#1 = RAdd(mult4A44,sum4A55);
          real intermediate4A57#1 = sum4A56;
          real coeff4A58#3 = -0.1e1;
          real mult4A59#1 = RMul(coeff4A58,prod4A38);
          real sum4A5A#1 = RAdd(mult4A59,mult4A4D);
          real intermediate4A5B#1 = sum4A5A;
          real mult4A5C#1 = RMul(coeff4A58,prod4A3E);
          real sum4A5D#1 = RAdd(mult4A5C,mult4A49);
          real intermediate4A5E#1 = sum4A5D;
          real mult4A5F#1 = RMul(coeff4A58,prod4A42);
          real sum4A60#1 = RAdd(mult4A5F,mult4A46);
          real intermediate4A61#1 = sum4A60;
          real coeff4A62#6 = -0.4e1;
          real mult4A63#1 = RMul(coeff4A30,prod4A42);
          real mult4A64#1 = RMul(coeff4A62,prod4A41);
          real mult4A65#2 = RMul(coeff4A62,prod4A3D);
          real mult4A66#2 = RMul(coeff4A62,prod4A36);
          real sum4A67#1 = RAdd(mult4A65,mult4A66);
          real sum4A68#1 = RAdd(mult4A64,sum4A67);
          real sum4A69#1 = RAdd(mult4A63,sum4A68);
          real intermediate4A6A#1 = sum4A69;
          real mult4A6B#1 = RMul(coeff4A30,prod4A3E);
          real mult4A6C#1 = RMul(coeff4A62,prod4A3B);
          real mult4A6D#2 = RMul(coeff4A62,prod4A33);
          real sum4A6E#1 = RAdd(mult4A6C,mult4A6D);
          real sum4A6F#1 = RAdd(mult4A65,sum4A6E);
          real sum4A70#1 = RAdd(mult4A6B,sum4A6F);
          real intermediate4A71#1 = sum4A70;
          real mult4A72#1 = RMul(coeff4A30,prod4A38);
          real mult4A73#1 = RMul(coeff4A62,prod4A2F);
          real sum4A74#1 = RAdd(mult4A6D,mult4A73);
          real sum4A75#1 = RAdd(mult4A66,sum4A74);
          real sum4A76#1 = RAdd(mult4A72,sum4A75);
          real intermediate4A77#1 = sum4A76;
          tensor[10] intermediateCons4A78#1 = <tensor[10]>[intermediate4A57,intermediate4A5B,intermediate4A5E,intermediate4A61,mult4A48,mult4A4B,mult4A4C,intermediate4A6A,intermediate4A71,intermediate4A77];
          tensor[10] basisResult4A26#10 = intermediateCons4A78;
          real r4ACD#1 = TensorIndex<tensor[10,3],[0,0]>(femDofs495A);
          real r4ACE#3 = TensorIndex<tensor[10],[0]>(basisResult4A26);
          real r4ACF#1 = RMul(r4ACD,r4ACE);
          real r4AD0#1 = TensorIndex<tensor[10,3],[1,0]>(femDofs495A);
          real r4AD1#3 = TensorIndex<tensor[10],[1]>(basisResult4A26);
          real r4AD2#1 = RMul(r4AD0,r4AD1);
          real r4AD3#1 = TensorIndex<tensor[10,3],[2,0]>(femDofs495A);
          real r4AD4#3 = TensorIndex<tensor[10],[2]>(basisResult4A26);
          real r4AD5#1 = RMul(r4AD3,r4AD4);
          real r4AD6#1 = TensorIndex<tensor[10,3],[3,0]>(femDofs495A);
          real r4AD7#3 = TensorIndex<tensor[10],[3]>(basisResult4A26);
          real r4AD8#1 = RMul(r4AD6,r4AD7);
          real r4AD9#1 = TensorIndex<tensor[10,3],[4,0]>(femDofs495A);
          real r4ADA#3 = TensorIndex<tensor[10],[4]>(basisResult4A26);
          real r4ADB#1 = RMul(r4AD9,r4ADA);
          real r4ADC#1 = TensorIndex<tensor[10,3],[5,0]>(femDofs495A);
          real r4ADD#3 = TensorIndex<tensor[10],[5]>(basisResult4A26);
          real r4ADE#1 = RMul(r4ADC,r4ADD);
          real r4ADF#1 = TensorIndex<tensor[10,3],[6,0]>(femDofs495A);
          real r4AE0#3 = TensorIndex<tensor[10],[6]>(basisResult4A26);
          real r4AE1#1 = RMul(r4ADF,r4AE0);
          real r4AE2#1 = TensorIndex<tensor[10,3],[7,0]>(femDofs495A);
          real r4AE3#3 = TensorIndex<tensor[10],[7]>(basisResult4A26);
          real r4AE4#1 = RMul(r4AE2,r4AE3);
          real r4AE5#1 = TensorIndex<tensor[10,3],[8,0]>(femDofs495A);
          real r4AE6#3 = TensorIndex<tensor[10],[8]>(basisResult4A26);
          real r4AE7#1 = RMul(r4AE5,r4AE6);
          real r4AE8#1 = TensorIndex<tensor[10,3],[9,0]>(femDofs495A);
          real r4AE9#3 = TensorIndex<tensor[10],[9]>(basisResult4A26);
          real r4AEA#1 = RMul(r4AE8,r4AE9);
          real r4AEB#1 = RAdd(r4ACF,r4AD2);
          real r4AEC#1 = RAdd(r4AEB,r4AD5);
          real r4AED#1 = RAdd(r4AEC,r4AD8);
          real r4AEE#1 = RAdd(r4AED,r4ADB);
          real r4AEF#1 = RAdd(r4AEE,r4ADE);
          real r4AF0#1 = RAdd(r4AEF,r4AE1);
          real r4AF1#1 = RAdd(r4AF0,r4AE4);
          real r4AF2#1 = RAdd(r4AF1,r4AE7);
          real r4AF3#1 = RAdd(r4AF2,r4AEA);
          real r4AF4#1 = TensorIndex<tensor[10,3],[0,1]>(femDofs495A);
          real r4AF5#1 = RMul(r4AF4,r4ACE);
          real r4AF6#1 = TensorIndex<tensor[10,3],[1,1]>(femDofs495A);
          real r4AF7#1 = RMul(r4AF6,r4AD1);
          real r4AF8#1 = TensorIndex<tensor[10,3],[2,1]>(femDofs495A);
          real r4AF9#1 = RMul(r4AF8,r4AD4);
          real r4AFA#1 = TensorIndex<tensor[10,3],[3,1]>(femDofs495A);
          real r4AFB#1 = RMul(r4AFA,r4AD7);
          real r4AFC#1 = TensorIndex<tensor[10,3],[4,1]>(femDofs495A);
          real r4AFD#1 = RMul(r4AFC,r4ADA);
          real r4AFE#1 = TensorIndex<tensor[10,3],[5,1]>(femDofs495A);
          real r4AFF#1 = RMul(r4AFE,r4ADD);
          real r4B00#1 = TensorIndex<tensor[10,3],[6,1]>(femDofs495A);
          real r4B01#1 = RMul(r4B00,r4AE0);
          real r4B02#1 = TensorIndex<tensor[10,3],[7,1]>(femDofs495A);
          real r4B03#1 = RMul(r4B02,r4AE3);
          real r4B04#1 = TensorIndex<tensor[10,3],[8,1]>(femDofs495A);
          real r4B05#1 = RMul(r4B04,r4AE6);
          real r4B06#1 = TensorIndex<tensor[10,3],[9,1]>(femDofs495A);
          real r4B07#1 = RMul(r4B06,r4AE9);
          real r4B08#1 = RAdd(r4AF5,r4AF7);
          real r4B09#1 = RAdd(r4B08,r4AF9);
          real r4B0A#1 = RAdd(r4B09,r4AFB);
          real r4B0B#1 = RAdd(r4B0A,r4AFD);
          real r4B0C#1 = RAdd(r4B0B,r4AFF);
          real r4B0D#1 = RAdd(r4B0C,r4B01);
          real r4B0E#1 = RAdd(r4B0D,r4B03);
          real r4B0F#1 = RAdd(r4B0E,r4B05);
          real r4B10#1 = RAdd(r4B0F,r4B07);
          real r4B11#1 = TensorIndex<tensor[10,3],[0,2]>(femDofs495A);
          real r4B12#1 = RMul(r4B11,r4ACE);
          real r4B13#1 = TensorIndex<tensor[10,3],[1,2]>(femDofs495A);
          real r4B14#1 = RMul(r4B13,r4AD1);
          real r4B15#1 = TensorIndex<tensor[10,3],[2,2]>(femDofs495A);
          real r4B16#1 = RMul(r4B15,r4AD4);
          real r4B17#1 = TensorIndex<tensor[10,3],[3,2]>(femDofs495A);
          real r4B18#1 = RMul(r4B17,r4AD7);
          real r4B19#1 = TensorIndex<tensor[10,3],[4,2]>(femDofs495A);
          real r4B1A#1 = RMul(r4B19,r4ADA);
          real r4B1B#1 = TensorIndex<tensor[10,3],[5,2]>(femDofs495A);
          real r4B1C#1 = RMul(r4B1B,r4ADD);
          real r4B1D#1 = TensorIndex<tensor[10,3],[6,2]>(femDofs495A);
          real r4B1E#1 = RMul(r4B1D,r4AE0);
          real r4B1F#1 = TensorIndex<tensor[10,3],[7,2]>(femDofs495A);
          real r4B20#1 = RMul(r4B1F,r4AE3);
          real r4B21#1 = TensorIndex<tensor[10,3],[8,2]>(femDofs495A);
          real r4B22#1 = RMul(r4B21,r4AE6);
          real r4B23#1 = TensorIndex<tensor[10,3],[9,2]>(femDofs495A);
          real r4B24#1 = RMul(r4B23,r4AE9);
          real r4B25#1 = RAdd(r4B12,r4B14);
          real r4B26#1 = RAdd(r4B25,r4B16);
          real r4B27#1 = RAdd(r4B26,r4B18);
          real r4B28#1 = RAdd(r4B27,r4B1A);
          real r4B29#1 = RAdd(r4B28,r4B1C);
          real r4B2A#1 = RAdd(r4B29,r4B1E);
          real r4B2B#1 = RAdd(r4B2A,r4B20);
          real r4B2C#1 = RAdd(r4B2B,r4B22);
          real r4B2D#1 = RAdd(r4B2C,r4B24);
          tensor[3] compositionl4ACC#8 = <tensor[3]>[r4AF3,r4B10,r4B2D];
          real op1_e3_l_204B91#1 = VDot<3>(compositionl4ACC,compositionl4ACC);
          real r4B95#1 = TensorIndex<tensor[3],[0]>(compositionl4ACC);
          real r4B96#3 = RMul(_t44E4,stepSize42F0);
          real r4B97#1 = RMul(r4B96,r4B95);
          real r4B98#1 = TensorIndex<tensor[3],[1]>(compositionl4ACC);
          real r4B99#1 = RMul(r4B96,r4B98);
          real r4B9A#1 = TensorIndex<tensor[3],[2]>(compositionl4ACC);
          real r4B9B#1 = RMul(r4B96,r4B9A);
          tensor[3] op1_e3_l_214B94#3 = <tensor[3]>[r4B97,r4B99,r4B9B];
          real op1_e3_l_224BA5#2 = Sqrt(op1_e3_l_204B91);
          real realLit4BA9#1 = 0.1e1;
          real r4BAA#3 = RDiv(realLit4BA9,op1_e3_l_224BA5);
          real r4BAB#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_214B94);
          real r4BAC#1 = RMul(r4BAA,r4BAB);
          real r4BAD#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_214B94);
          real r4BAE#1 = RMul(r4BAA,r4BAD);
          real r4BAF#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_214B94);
          real r4BB0#1 = RMul(r4BAA,r4BAF);
          tensor[3] op1_e3_l_234BA8#1 = <tensor[3]>[r4BAC,r4BAE,r4BB0];
          tensor[3] altIntermed4BBB#6 = VAdd<3>(altCPos4300,op1_e3_l_234BA8);
          bool _t4BBE#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed47EF);
          femData:MeshPos _t4BC0#5 = findPos3B9C (meshData42EE,altIntermed4BBB);
          bool _t4BC2#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t4BC0);
          bool _t4BC4#1 = NEQ<bool>(_t4BBE,_t4BC2);
          if _t4BC4 then goto ASSIGN4BC8 else goto JOIN4BE0
        ASSIGN4BC8:  preds = [COND4BC6]
          string _t4BC7#1 = "ERG:Warning of validity intermed";
          string _t4BC9#3 = "\n";
          Print<[string,tensor[3],string]>(_t4BC7,startPos4302,_t4BC9);
          string _t4BCC#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t4BCC,altIntermed4BBB,_t4BC9);
          string _t4BCF#1 = "Cell change: ";
          femData:Mesh _t4BD1#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4337);
          int _t4BD3#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4337);
          femData:MeshCell _t4BD5#1 = LoadFem<femData:MeshCell>(_t4BD1,_t4BD3);
          string _t4BD7#1 = " to ";
          femData:Mesh _t4BD9#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4BC0);
          int _t4BDB#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4BC0);
          femData:MeshCell _t4BDD#1 = LoadFem<femData:MeshCell>(_t4BD9,_t4BDB);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t4BCF,_t4BD5,_t4BD7,_t4BDD,_t4BC9);
          goto JOIN4BE0
        JOIN4BE0:  preds = [MASSIGN4BDF,COND4BC6]
          bool _t4BE1#2 = BNot(_t4BBE);
          if _t4BE1 then goto ASSIGN4BE5 else goto ASSIGN5352
        ASSIGN4BE5:  preds = [COND4BE3]
          bool _t4BE4#1 = true;
          goto JOIN4BE8
        JOIN4BE8:  preds = [ASSIGN4BE5,ASSIGN5352]
          bool _t4BE6#1 = phi(_t4BE4,_t4BE7)
          if _t4BE6 then goto ASSIGN4BEB else goto JOIN4BF6
        ASSIGN4BEB:  preds = [COND4BE9]
          string _t4BEA#1 = "Went off the mesh\?";
          string _t4BEC#2 = " and ";
          bool _t4BEE#1 = BNot(_t4BC2);
          string _t4BF0#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t4BEA,_t4BE1,_t4BEC,altIntermed4BBB,_t4BEC,_t4BEE,_t4BF0);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN4BF6
        JOIN4BF6:  preds = [*STABILIZE4BF5,COND4BE9]
          tensor[3] _t4BF7#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed47EF);
          int _t4BF9#3 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed47EF);
          femData:Mesh _t4BFB#18 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed47EF);
          int ilit4BFE#1 = 4;
          int mulRes4BFF#4 = IMul(_t4BF9,ilit4BFE);
          int ilit4C00#1 = 0;
          int addRes4C01#1 = IAdd(mulRes4BFF,ilit4C00);
          int idx4C02#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C01);
          int ilit4C03#1 = 1;
          int addRes4C04#1 = IAdd(mulRes4BFF,ilit4C03);
          int idx4C05#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C04);
          int ilit4C06#1 = 2;
          int addRes4C07#1 = IAdd(mulRes4BFF,ilit4C06);
          int idx4C08#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C07);
          int ilit4C09#1 = 3;
          int addRes4C0A#1 = IAdd(mulRes4BFF,ilit4C09);
          int idx4C0B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C0A);
          int[4] seq4C0C#1 = <int[4]>{idx4C02,idx4C05,idx4C08,idx4C0B};
          int[4] femIndicies4BFD#4 = seq4C0C;
          int ilit4C1E#5 = 0;
          int ilit4C1F#5 = 3;
          int idx4C20#1 = Subscript<int>(femIndicies4BFD,ilit4C1E);
          int mulRes4C21#3 = IMul(ilit4C1F,idx4C20);
          int addRes4C22#1 = IAdd(ilit4C1E,mulRes4C21);
          int ilit4C23#5 = 1;
          int addRes4C24#1 = IAdd(ilit4C23,mulRes4C21);
          int ilit4C25#5 = 2;
          int addRes4C26#1 = IAdd(ilit4C25,mulRes4C21);
          real dof_load4C27#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C22);
          real dof_load4C28#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C24);
          real dof_load4C29#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C26);
          tensor[3] interCons4C2A#1 = <tensor[3]>[dof_load4C27,dof_load4C28,dof_load4C29];
          int idx4C2B#1 = Subscript<int>(femIndicies4BFD,ilit4C23);
          int mulRes4C2C#3 = IMul(ilit4C1F,idx4C2B);
          int addRes4C2D#1 = IAdd(ilit4C1E,mulRes4C2C);
          int addRes4C2E#1 = IAdd(ilit4C23,mulRes4C2C);
          int addRes4C2F#1 = IAdd(ilit4C25,mulRes4C2C);
          real dof_load4C30#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2D);
          real dof_load4C31#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2E);
          real dof_load4C32#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2F);
          tensor[3] interCons4C33#1 = <tensor[3]>[dof_load4C30,dof_load4C31,dof_load4C32];
          int idx4C34#1 = Subscript<int>(femIndicies4BFD,ilit4C25);
          int mulRes4C35#3 = IMul(ilit4C1F,idx4C34);
          int addRes4C36#1 = IAdd(ilit4C1E,mulRes4C35);
          int addRes4C37#1 = IAdd(ilit4C23,mulRes4C35);
          int addRes4C38#1 = IAdd(ilit4C25,mulRes4C35);
          real dof_load4C39#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C36);
          real dof_load4C3A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C37);
          real dof_load4C3B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C38);
          tensor[3] interCons4C3C#1 = <tensor[3]>[dof_load4C39,dof_load4C3A,dof_load4C3B];
          int idx4C3D#1 = Subscript<int>(femIndicies4BFD,ilit4C1F);
          int mulRes4C3E#3 = IMul(ilit4C1F,idx4C3D);
          int addRes4C3F#1 = IAdd(ilit4C1E,mulRes4C3E);
          int addRes4C40#1 = IAdd(ilit4C23,mulRes4C3E);
          int addRes4C41#1 = IAdd(ilit4C25,mulRes4C3E);
          real dof_load4C42#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C3F);
          real dof_load4C43#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C40);
          real dof_load4C44#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C41);
          tensor[3] interCons4C45#1 = <tensor[3]>[dof_load4C42,dof_load4C43,dof_load4C44];
          tensor[4,3] dofs4C46#1 = <tensor[4,3]>[interCons4C2A,interCons4C33,interCons4C3C,interCons4C45];
          tensor[4,3] femDofs4C1D#24 = dofs4C46;
          real varAcc4C72#1 = VIndex<3,0>(_t4BF7);
          real varAcc4C73#1 = VIndex<3,1>(_t4BF7);
          real varAcc4C74#1 = VIndex<3,2>(_t4BF7);
          real coeff4C75#3 = -0.1e1;
          real iden4C76#1 = varAcc4C72;
          real one4C77#11 = 0.1e1;
          real prod4C78#2 = RMul(one4C77,one4C77);
          real prod4C79#2 = RMul(iden4C76,prod4C78);
          real iden4C7A#1 = varAcc4C73;
          real prod4C7B#1 = RMul(iden4C7A,one4C77);
          real prod4C7C#2 = RMul(one4C77,prod4C7B);
          real iden4C7D#1 = varAcc4C74;
          real prod4C7E#1 = RMul(one4C77,iden4C7D);
          real prod4C7F#2 = RMul(one4C77,prod4C7E);
          real prod4C80#1 = RMul(one4C77,prod4C78);
          real mult4C81#1 = RMul(one4C77,prod4C80);
          real mult4C82#1 = RMul(coeff4C75,prod4C7F);
          real mult4C83#1 = RMul(coeff4C75,prod4C7C);
          real mult4C84#1 = RMul(coeff4C75,prod4C79);
          real sum4C85#1 = RAdd(mult4C83,mult4C84);
          real sum4C86#1 = RAdd(mult4C82,sum4C85);
          real sum4C87#1 = RAdd(mult4C81,sum4C86);
          real intermediate4C88#1 = sum4C87;
          real basisEval4C89#1 = RMul(one4C77,prod4C79);
          real basisEval4C8A#1 = RMul(one4C77,prod4C7C);
          real basisEval4C8B#1 = RMul(one4C77,prod4C7F);
          tensor[4] intermediateCons4C8C#1 = <tensor[4]>[intermediate4C88,basisEval4C89,basisEval4C8A,basisEval4C8B];
          tensor[4] basisResult4C71#8 = intermediateCons4C8C;
          real r4CAA#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs4C1D);
          real r4CAB#3 = TensorIndex<tensor[4],[0]>(basisResult4C71);
          real r4CAC#1 = RMul(r4CAA,r4CAB);
          real r4CAD#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs4C1D);
          real r4CAE#3 = TensorIndex<tensor[4],[1]>(basisResult4C71);
          real r4CAF#1 = RMul(r4CAD,r4CAE);
          real r4CB0#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs4C1D);
          real r4CB1#3 = TensorIndex<tensor[4],[2]>(basisResult4C71);
          real r4CB2#1 = RMul(r4CB0,r4CB1);
          real r4CB3#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs4C1D);
          real r4CB4#3 = TensorIndex<tensor[4],[3]>(basisResult4C71);
          real r4CB5#1 = RMul(r4CB3,r4CB4);
          real r4CB6#1 = RAdd(r4CAC,r4CAF);
          real r4CB7#1 = RAdd(r4CB6,r4CB2);
          real r4CB8#1 = RAdd(r4CB7,r4CB5);
          real r4CB9#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs4C1D);
          real r4CBA#1 = RMul(r4CB9,r4CAB);
          real r4CBB#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs4C1D);
          real r4CBC#1 = RMul(r4CBB,r4CAE);
          real r4CBD#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs4C1D);
          real r4CBE#1 = RMul(r4CBD,r4CB1);
          real r4CBF#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs4C1D);
          real r4CC0#1 = RMul(r4CBF,r4CB4);
          real r4CC1#1 = RAdd(r4CBA,r4CBC);
          real r4CC2#1 = RAdd(r4CC1,r4CBE);
          real r4CC3#1 = RAdd(r4CC2,r4CC0);
          real r4CC4#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs4C1D);
          real r4CC5#1 = RMul(r4CC4,r4CAB);
          real r4CC6#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs4C1D);
          real r4CC7#1 = RMul(r4CC6,r4CAE);
          real r4CC8#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs4C1D);
          real r4CC9#1 = RMul(r4CC8,r4CB1);
          real r4CCA#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs4C1D);
          real r4CCB#1 = RMul(r4CCA,r4CB4);
          real r4CCC#1 = RAdd(r4CC5,r4CC7);
          real r4CCD#1 = RAdd(r4CCC,r4CC9);
          real r4CCE#1 = RAdd(r4CCD,r4CCB);
          tensor[3] _t4CA9#1 = <tensor[3]>[r4CB8,r4CC3,r4CCE];
          real r4CF7#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs4C1D);
          real r4CF8#3 = TensorIndex<tensor[4],[0]>(basisResult4C71);
          real r4CF9#1 = RMul(r4CF7,r4CF8);
          real r4CFA#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs4C1D);
          real r4CFB#3 = TensorIndex<tensor[4],[1]>(basisResult4C71);
          real r4CFC#1 = RMul(r4CFA,r4CFB);
          real r4CFD#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs4C1D);
          real r4CFE#3 = TensorIndex<tensor[4],[2]>(basisResult4C71);
          real r4CFF#1 = RMul(r4CFD,r4CFE);
          real r4D00#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs4C1D);
          real r4D01#3 = TensorIndex<tensor[4],[3]>(basisResult4C71);
          real r4D02#1 = RMul(r4D00,r4D01);
          real r4D03#1 = RAdd(r4CF9,r4CFC);
          real r4D04#1 = RAdd(r4D03,r4CFF);
          real r4D05#1 = RAdd(r4D04,r4D02);
          real r4D06#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs4C1D);
          real r4D07#1 = RMul(r4D06,r4CF8);
          real r4D08#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs4C1D);
          real r4D09#1 = RMul(r4D08,r4CFB);
          real r4D0A#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs4C1D);
          real r4D0B#1 = RMul(r4D0A,r4CFE);
          real r4D0C#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs4C1D);
          real r4D0D#1 = RMul(r4D0C,r4D01);
          real r4D0E#1 = RAdd(r4D07,r4D09);
          real r4D0F#1 = RAdd(r4D0E,r4D0B);
          real r4D10#1 = RAdd(r4D0F,r4D0D);
          real r4D11#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs4C1D);
          real r4D12#1 = RMul(r4D11,r4CF8);
          real r4D13#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs4C1D);
          real r4D14#1 = RMul(r4D13,r4CFB);
          real r4D15#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs4C1D);
          real r4D16#1 = RMul(r4D15,r4CFE);
          real r4D17#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs4C1D);
          real r4D18#1 = RMul(r4D17,r4D01);
          real r4D19#1 = RAdd(r4D12,r4D14);
          real r4D1A#1 = RAdd(r4D19,r4D16);
          real r4D1B#1 = RAdd(r4D1A,r4D18);
          tensor[3] probe_l_214CF6#1 = <tensor[3]>[r4D05,r4D10,r4D1B];
          tensor[3] op1_e3_l_394D43#2 = VSub<3>(probe_l_214CF6,altIntermed4BBB);
          real op1_e3_l_414D46#1 = VDot<3>(op1_e3_l_394D43,op1_e3_l_394D43);
          real _t4D49#1 = Sqrt(op1_e3_l_414D46);
          bool _t4D4C#1 = GT<real>(_t4D49,_t44BF);
          if _t4D4C then goto ASSIGN4D50 else goto ASSIGN534C
        ASSIGN4D50:  preds = [COND4D4E]
          string _t4D4F#1 = "ERG:Error in tracing 2: At step:";
          string _t4D51#1 = " with particle:";
          string _t4D53#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t4D4F,step42FC,_t4D51,startPos4302,_t4D53);
          string _t4D56#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t4D56,_t4CA9,altIntermed4BBB,_t4D53);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN4D5C
        JOIN4D5C:  preds = [*STABILIZE4D5B,MASSIGN5351]
          if _t4BBE then goto ASSIGN4D5F else goto ASSIGN5345
        ASSIGN4D5F:  preds = [COND4D5D]
          femData:MeshCell c4D5E#1 = LoadFem<femData:MeshCell>(_t4BFB,_t4BF9);
          int _t4D60#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c4D5E);
          femData:FuncCell _t4D62#2 = LoadFem<femData:FuncCell>(data42EC,_t4D60);
          femData:FemFunc _t4D64#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t4D62);
          femData:Space _t4D66#10 = ExtractFem<femData:Space,femData:FemFunc>(_t4D64);
          int _t4D68#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t4D62);
          int ilit4D6B#1 = 10;
          int mulRes4D6C#10 = IMul(_t4D68,ilit4D6B);
          int ilit4D6D#1 = 0;
          int addRes4D6E#1 = IAdd(mulRes4D6C,ilit4D6D);
          int idx4D6F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D6E);
          int ilit4D70#1 = 1;
          int addRes4D71#1 = IAdd(mulRes4D6C,ilit4D70);
          int idx4D72#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D71);
          int ilit4D73#1 = 2;
          int addRes4D74#1 = IAdd(mulRes4D6C,ilit4D73);
          int idx4D75#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D74);
          int ilit4D76#1 = 3;
          int addRes4D77#1 = IAdd(mulRes4D6C,ilit4D76);
          int idx4D78#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D77);
          int ilit4D79#1 = 4;
          int addRes4D7A#1 = IAdd(mulRes4D6C,ilit4D79);
          int idx4D7B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D7A);
          int ilit4D7C#1 = 5;
          int addRes4D7D#1 = IAdd(mulRes4D6C,ilit4D7C);
          int idx4D7E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D7D);
          int ilit4D7F#1 = 6;
          int addRes4D80#1 = IAdd(mulRes4D6C,ilit4D7F);
          int idx4D81#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D80);
          int ilit4D82#1 = 7;
          int addRes4D83#1 = IAdd(mulRes4D6C,ilit4D82);
          int idx4D84#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D83);
          int ilit4D85#1 = 8;
          int addRes4D86#1 = IAdd(mulRes4D6C,ilit4D85);
          int idx4D87#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D86);
          int ilit4D88#1 = 9;
          int addRes4D89#1 = IAdd(mulRes4D6C,ilit4D88);
          int idx4D8A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D89);
          int[10] seq4D8B#1 = <int[10]>{idx4D6F,idx4D72,idx4D75,idx4D78,idx4D7B,idx4D7E,idx4D81,idx4D84,idx4D87,idx4D8A};
          int[10] femIndicies4D6A#10 = seq4D8B;
          int ilit4DAF#11 = 0;
          int ilit4DB0#11 = 3;
          int idx4DB1#1 = Subscript<int>(femIndicies4D6A,ilit4DAF);
          int mulRes4DB2#3 = IMul(ilit4DB0,idx4DB1);
          int addRes4DB3#1 = IAdd(ilit4DAF,mulRes4DB2);
          int ilit4DB4#11 = 1;
          int addRes4DB5#1 = IAdd(ilit4DB4,mulRes4DB2);
          int ilit4DB6#11 = 2;
          int addRes4DB7#1 = IAdd(ilit4DB6,mulRes4DB2);
          real dof_load4DB8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB3);
          real dof_load4DB9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB5);
          real dof_load4DBA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB7);
          tensor[3] interCons4DBB#1 = <tensor[3]>[dof_load4DB8,dof_load4DB9,dof_load4DBA];
          int idx4DBC#1 = Subscript<int>(femIndicies4D6A,ilit4DB4);
          int mulRes4DBD#3 = IMul(ilit4DB0,idx4DBC);
          int addRes4DBE#1 = IAdd(ilit4DAF,mulRes4DBD);
          int addRes4DBF#1 = IAdd(ilit4DB4,mulRes4DBD);
          int addRes4DC0#1 = IAdd(ilit4DB6,mulRes4DBD);
          real dof_load4DC1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DBE);
          real dof_load4DC2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DBF);
          real dof_load4DC3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC0);
          tensor[3] interCons4DC4#1 = <tensor[3]>[dof_load4DC1,dof_load4DC2,dof_load4DC3];
          int idx4DC5#1 = Subscript<int>(femIndicies4D6A,ilit4DB6);
          int mulRes4DC6#3 = IMul(ilit4DB0,idx4DC5);
          int addRes4DC7#1 = IAdd(ilit4DAF,mulRes4DC6);
          int addRes4DC8#1 = IAdd(ilit4DB4,mulRes4DC6);
          int addRes4DC9#1 = IAdd(ilit4DB6,mulRes4DC6);
          real dof_load4DCA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC7);
          real dof_load4DCB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC8);
          real dof_load4DCC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC9);
          tensor[3] interCons4DCD#1 = <tensor[3]>[dof_load4DCA,dof_load4DCB,dof_load4DCC];
          int idx4DCE#1 = Subscript<int>(femIndicies4D6A,ilit4DB0);
          int mulRes4DCF#3 = IMul(ilit4DB0,idx4DCE);
          int addRes4DD0#1 = IAdd(ilit4DAF,mulRes4DCF);
          int addRes4DD1#1 = IAdd(ilit4DB4,mulRes4DCF);
          int addRes4DD2#1 = IAdd(ilit4DB6,mulRes4DCF);
          real dof_load4DD3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD0);
          real dof_load4DD4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD1);
          real dof_load4DD5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD2);
          tensor[3] interCons4DD6#1 = <tensor[3]>[dof_load4DD3,dof_load4DD4,dof_load4DD5];
          int ilit4DD7#1 = 4;
          int idx4DD8#1 = Subscript<int>(femIndicies4D6A,ilit4DD7);
          int mulRes4DD9#3 = IMul(ilit4DB0,idx4DD8);
          int addRes4DDA#1 = IAdd(ilit4DAF,mulRes4DD9);
          int addRes4DDB#1 = IAdd(ilit4DB4,mulRes4DD9);
          int addRes4DDC#1 = IAdd(ilit4DB6,mulRes4DD9);
          real dof_load4DDD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDA);
          real dof_load4DDE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDB);
          real dof_load4DDF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDC);
          tensor[3] interCons4DE0#1 = <tensor[3]>[dof_load4DDD,dof_load4DDE,dof_load4DDF];
          int ilit4DE1#1 = 5;
          int idx4DE2#1 = Subscript<int>(femIndicies4D6A,ilit4DE1);
          int mulRes4DE3#3 = IMul(ilit4DB0,idx4DE2);
          int addRes4DE4#1 = IAdd(ilit4DAF,mulRes4DE3);
          int addRes4DE5#1 = IAdd(ilit4DB4,mulRes4DE3);
          int addRes4DE6#1 = IAdd(ilit4DB6,mulRes4DE3);
          real dof_load4DE7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE4);
          real dof_load4DE8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE5);
          real dof_load4DE9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE6);
          tensor[3] interCons4DEA#1 = <tensor[3]>[dof_load4DE7,dof_load4DE8,dof_load4DE9];
          int ilit4DEB#1 = 6;
          int idx4DEC#1 = Subscript<int>(femIndicies4D6A,ilit4DEB);
          int mulRes4DED#3 = IMul(ilit4DB0,idx4DEC);
          int addRes4DEE#1 = IAdd(ilit4DAF,mulRes4DED);
          int addRes4DEF#1 = IAdd(ilit4DB4,mulRes4DED);
          int addRes4DF0#1 = IAdd(ilit4DB6,mulRes4DED);
          real dof_load4DF1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DEE);
          real dof_load4DF2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DEF);
          real dof_load4DF3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF0);
          tensor[3] interCons4DF4#1 = <tensor[3]>[dof_load4DF1,dof_load4DF2,dof_load4DF3];
          int ilit4DF5#1 = 7;
          int idx4DF6#1 = Subscript<int>(femIndicies4D6A,ilit4DF5);
          int mulRes4DF7#3 = IMul(ilit4DB0,idx4DF6);
          int addRes4DF8#1 = IAdd(ilit4DAF,mulRes4DF7);
          int addRes4DF9#1 = IAdd(ilit4DB4,mulRes4DF7);
          int addRes4DFA#1 = IAdd(ilit4DB6,mulRes4DF7);
          real dof_load4DFB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF8);
          real dof_load4DFC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF9);
          real dof_load4DFD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DFA);
          tensor[3] interCons4DFE#1 = <tensor[3]>[dof_load4DFB,dof_load4DFC,dof_load4DFD];
          int ilit4DFF#1 = 8;
          int idx4E00#1 = Subscript<int>(femIndicies4D6A,ilit4DFF);
          int mulRes4E01#3 = IMul(ilit4DB0,idx4E00);
          int addRes4E02#1 = IAdd(ilit4DAF,mulRes4E01);
          int addRes4E03#1 = IAdd(ilit4DB4,mulRes4E01);
          int addRes4E04#1 = IAdd(ilit4DB6,mulRes4E01);
          real dof_load4E05#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E02);
          real dof_load4E06#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E03);
          real dof_load4E07#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E04);
          tensor[3] interCons4E08#1 = <tensor[3]>[dof_load4E05,dof_load4E06,dof_load4E07];
          int ilit4E09#1 = 9;
          int idx4E0A#1 = Subscript<int>(femIndicies4D6A,ilit4E09);
          int mulRes4E0B#3 = IMul(ilit4DB0,idx4E0A);
          int addRes4E0C#1 = IAdd(ilit4DAF,mulRes4E0B);
          int addRes4E0D#1 = IAdd(ilit4DB4,mulRes4E0B);
          int addRes4E0E#1 = IAdd(ilit4DB6,mulRes4E0B);
          real dof_load4E0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0C);
          real dof_load4E10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0D);
          real dof_load4E11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0E);
          tensor[3] interCons4E12#1 = <tensor[3]>[dof_load4E0F,dof_load4E10,dof_load4E11];
          tensor[10,3] dofs4E13#1 = <tensor[10,3]>[interCons4DBB,interCons4DC4,interCons4DCD,interCons4DD6,interCons4DE0,interCons4DEA,interCons4DF4,interCons4DFE,interCons4E08,interCons4E12];
          tensor[10,3] femDofs4DAE#30 = dofs4E13;
          real varAcc4E7B#2 = VIndex<3,0>(_t4BF7);
          real varAcc4E7C#2 = VIndex<3,1>(_t4BF7);
          real varAcc4E7D#2 = VIndex<3,2>(_t4BF7);
          real coeff4E7E#3 = 0.2e1;
          real iden4E7F#4 = varAcc4E7B;
          real prod24E80#1 = RMul(iden4E7F,varAcc4E7B);
          real one4E81#13 = 0.1e1;
          real prod4E82#3 = RMul(one4E81,one4E81);
          real prod4E83#2 = RMul(prod24E80,prod4E82);
          real coeff4E84#6 = 0.4e1;
          real iden4E85#3 = varAcc4E7C;
          real prod4E86#2 = RMul(iden4E85,one4E81);
          real prod4E87#2 = RMul(iden4E7F,prod4E86);
          real iden4E88#3 = varAcc4E7D;
          real prod4E89#2 = RMul(one4E81,iden4E88);
          real prod4E8A#2 = RMul(iden4E7F,prod4E89);
          real coeff4E8B#3 = -0.3e1;
          real prod4E8C#3 = RMul(iden4E7F,prod4E82);
          real prod24E8D#1 = RMul(iden4E85,varAcc4E7C);
          real prod4E8E#1 = RMul(prod24E8D,one4E81);
          real prod4E8F#2 = RMul(one4E81,prod4E8E);
          real prod4E90#1 = RMul(iden4E85,iden4E88);
          real prod4E91#2 = RMul(one4E81,prod4E90);
          real prod4E92#3 = RMul(one4E81,prod4E86);
          real prod24E93#1 = RMul(iden4E88,varAcc4E7D);
          real prod4E94#1 = RMul(one4E81,prod24E93);
          real prod4E95#2 = RMul(one4E81,prod4E94);
          real prod4E96#3 = RMul(one4E81,prod4E89);
          real prod4E97#1 = RMul(one4E81,prod4E82);
          real mult4E98#1 = RMul(one4E81,prod4E97);
          real mult4E99#1 = RMul(coeff4E8B,prod4E96);
          real mult4E9A#2 = RMul(coeff4E7E,prod4E95);
          real mult4E9B#1 = RMul(coeff4E8B,prod4E92);
          real mult4E9C#2 = RMul(coeff4E84,prod4E91);
          real mult4E9D#2 = RMul(coeff4E7E,prod4E8F);
          real mult4E9E#1 = RMul(coeff4E8B,prod4E8C);
          real mult4E9F#2 = RMul(coeff4E84,prod4E8A);
          real mult4EA0#2 = RMul(coeff4E84,prod4E87);
          real mult4EA1#2 = RMul(coeff4E7E,prod4E83);
          real sum4EA2#1 = RAdd(mult4EA0,mult4EA1);
          real sum4EA3#1 = RAdd(mult4E9F,sum4EA2);
          real sum4EA4#1 = RAdd(mult4E9E,sum4EA3);
          real sum4EA5#1 = RAdd(mult4E9D,sum4EA4);
          real sum4EA6#1 = RAdd(mult4E9C,sum4EA5);
          real sum4EA7#1 = RAdd(mult4E9B,sum4EA6);
          real sum4EA8#1 = RAdd(mult4E9A,sum4EA7);
          real sum4EA9#1 = RAdd(mult4E99,sum4EA8);
          real sum4EAA#1 = RAdd(mult4E98,sum4EA9);
          real intermediate4EAB#1 = sum4EAA;
          real coeff4EAC#3 = -0.1e1;
          real mult4EAD#1 = RMul(coeff4EAC,prod4E8C);
          real sum4EAE#1 = RAdd(mult4EAD,mult4EA1);
          real intermediate4EAF#1 = sum4EAE;
          real mult4EB0#1 = RMul(coeff4EAC,prod4E92);
          real sum4EB1#1 = RAdd(mult4EB0,mult4E9D);
          real intermediate4EB2#1 = sum4EB1;
          real mult4EB3#1 = RMul(coeff4EAC,prod4E96);
          real sum4EB4#1 = RAdd(mult4EB3,mult4E9A);
          real intermediate4EB5#1 = sum4EB4;
          real coeff4EB6#6 = -0.4e1;
          real mult4EB7#1 = RMul(coeff4E84,prod4E96);
          real mult4EB8#1 = RMul(coeff4EB6,prod4E95);
          real mult4EB9#2 = RMul(coeff4EB6,prod4E91);
          real mult4EBA#2 = RMul(coeff4EB6,prod4E8A);
          real sum4EBB#1 = RAdd(mult4EB9,mult4EBA);
          real sum4EBC#1 = RAdd(mult4EB8,sum4EBB);
          real sum4EBD#1 = RAdd(mult4EB7,sum4EBC);
          real intermediate4EBE#1 = sum4EBD;
          real mult4EBF#1 = RMul(coeff4E84,prod4E92);
          real mult4EC0#1 = RMul(coeff4EB6,prod4E8F);
          real mult4EC1#2 = RMul(coeff4EB6,prod4E87);
          real sum4EC2#1 = RAdd(mult4EC0,mult4EC1);
          real sum4EC3#1 = RAdd(mult4EB9,sum4EC2);
          real sum4EC4#1 = RAdd(mult4EBF,sum4EC3);
          real intermediate4EC5#1 = sum4EC4;
          real mult4EC6#1 = RMul(coeff4E84,prod4E8C);
          real mult4EC7#1 = RMul(coeff4EB6,prod4E83);
          real sum4EC8#1 = RAdd(mult4EC1,mult4EC7);
          real sum4EC9#1 = RAdd(mult4EBA,sum4EC8);
          real sum4ECA#1 = RAdd(mult4EC6,sum4EC9);
          real intermediate4ECB#1 = sum4ECA;
          tensor[10] intermediateCons4ECC#1 = <tensor[10]>[intermediate4EAB,intermediate4EAF,intermediate4EB2,intermediate4EB5,mult4E9C,mult4E9F,mult4EA0,intermediate4EBE,intermediate4EC5,intermediate4ECB];
          tensor[10] basisResult4E7A#10 = intermediateCons4ECC;
          real r4F21#1 = TensorIndex<tensor[10,3],[0,0]>(femDofs4DAE);
          real r4F22#3 = TensorIndex<tensor[10],[0]>(basisResult4E7A);
          real r4F23#1 = RMul(r4F21,r4F22);
          real r4F24#1 = TensorIndex<tensor[10,3],[1,0]>(femDofs4DAE);
          real r4F25#3 = TensorIndex<tensor[10],[1]>(basisResult4E7A);
          real r4F26#1 = RMul(r4F24,r4F25);
          real r4F27#1 = TensorIndex<tensor[10,3],[2,0]>(femDofs4DAE);
          real r4F28#3 = TensorIndex<tensor[10],[2]>(basisResult4E7A);
          real r4F29#1 = RMul(r4F27,r4F28);
          real r4F2A#1 = TensorIndex<tensor[10,3],[3,0]>(femDofs4DAE);
          real r4F2B#3 = TensorIndex<tensor[10],[3]>(basisResult4E7A);
          real r4F2C#1 = RMul(r4F2A,r4F2B);
          real r4F2D#1 = TensorIndex<tensor[10,3],[4,0]>(femDofs4DAE);
          real r4F2E#3 = TensorIndex<tensor[10],[4]>(basisResult4E7A);
          real r4F2F#1 = RMul(r4F2D,r4F2E);
          real r4F30#1 = TensorIndex<tensor[10,3],[5,0]>(femDofs4DAE);
          real r4F31#3 = TensorIndex<tensor[10],[5]>(basisResult4E7A);
          real r4F32#1 = RMul(r4F30,r4F31);
          real r4F33#1 = TensorIndex<tensor[10,3],[6,0]>(femDofs4DAE);
          real r4F34#3 = TensorIndex<tensor[10],[6]>(basisResult4E7A);
          real r4F35#1 = RMul(r4F33,r4F34);
          real r4F36#1 = TensorIndex<tensor[10,3],[7,0]>(femDofs4DAE);
          real r4F37#3 = TensorIndex<tensor[10],[7]>(basisResult4E7A);
          real r4F38#1 = RMul(r4F36,r4F37);
          real r4F39#1 = TensorIndex<tensor[10,3],[8,0]>(femDofs4DAE);
          real r4F3A#3 = TensorIndex<tensor[10],[8]>(basisResult4E7A);
          real r4F3B#1 = RMul(r4F39,r4F3A);
          real r4F3C#1 = TensorIndex<tensor[10,3],[9,0]>(femDofs4DAE);
          real r4F3D#3 = TensorIndex<tensor[10],[9]>(basisResult4E7A);
          real r4F3E#1 = RMul(r4F3C,r4F3D);
          real r4F3F#1 = RAdd(r4F23,r4F26);
          real r4F40#1 = RAdd(r4F3F,r4F29);
          real r4F41#1 = RAdd(r4F40,r4F2C);
          real r4F42#1 = RAdd(r4F41,r4F2F);
          real r4F43#1 = RAdd(r4F42,r4F32);
          real r4F44#1 = RAdd(r4F43,r4F35);
          real r4F45#1 = RAdd(r4F44,r4F38);
          real r4F46#1 = RAdd(r4F45,r4F3B);
          real r4F47#1 = RAdd(r4F46,r4F3E);
          real r4F48#1 = TensorIndex<tensor[10,3],[0,1]>(femDofs4DAE);
          real r4F49#1 = RMul(r4F48,r4F22);
          real r4F4A#1 = TensorIndex<tensor[10,3],[1,1]>(femDofs4DAE);
          real r4F4B#1 = RMul(r4F4A,r4F25);
          real r4F4C#1 = TensorIndex<tensor[10,3],[2,1]>(femDofs4DAE);
          real r4F4D#1 = RMul(r4F4C,r4F28);
          real r4F4E#1 = TensorIndex<tensor[10,3],[3,1]>(femDofs4DAE);
          real r4F4F#1 = RMul(r4F4E,r4F2B);
          real r4F50#1 = TensorIndex<tensor[10,3],[4,1]>(femDofs4DAE);
          real r4F51#1 = RMul(r4F50,r4F2E);
          real r4F52#1 = TensorIndex<tensor[10,3],[5,1]>(femDofs4DAE);
          real r4F53#1 = RMul(r4F52,r4F31);
          real r4F54#1 = TensorIndex<tensor[10,3],[6,1]>(femDofs4DAE);
          real r4F55#1 = RMul(r4F54,r4F34);
          real r4F56#1 = TensorIndex<tensor[10,3],[7,1]>(femDofs4DAE);
          real r4F57#1 = RMul(r4F56,r4F37);
          real r4F58#1 = TensorIndex<tensor[10,3],[8,1]>(femDofs4DAE);
          real r4F59#1 = RMul(r4F58,r4F3A);
          real r4F5A#1 = TensorIndex<tensor[10,3],[9,1]>(femDofs4DAE);
          real r4F5B#1 = RMul(r4F5A,r4F3D);
          real r4F5C#1 = RAdd(r4F49,r4F4B);
          real r4F5D#1 = RAdd(r4F5C,r4F4D);
          real r4F5E#1 = RAdd(r4F5D,r4F4F);
          real r4F5F#1 = RAdd(r4F5E,r4F51);
          real r4F60#1 = RAdd(r4F5F,r4F53);
          real r4F61#1 = RAdd(r4F60,r4F55);
          real r4F62#1 = RAdd(r4F61,r4F57);
          real r4F63#1 = RAdd(r4F62,r4F59);
          real r4F64#1 = RAdd(r4F63,r4F5B);
          real r4F65#1 = TensorIndex<tensor[10,3],[0,2]>(femDofs4DAE);
          real r4F66#1 = RMul(r4F65,r4F22);
          real r4F67#1 = TensorIndex<tensor[10,3],[1,2]>(femDofs4DAE);
          real r4F68#1 = RMul(r4F67,r4F25);
          real r4F69#1 = TensorIndex<tensor[10,3],[2,2]>(femDofs4DAE);
          real r4F6A#1 = RMul(r4F69,r4F28);
          real r4F6B#1 = TensorIndex<tensor[10,3],[3,2]>(femDofs4DAE);
          real r4F6C#1 = RMul(r4F6B,r4F2B);
          real r4F6D#1 = TensorIndex<tensor[10,3],[4,2]>(femDofs4DAE);
          real r4F6E#1 = RMul(r4F6D,r4F2E);
          real r4F6F#1 = TensorIndex<tensor[10,3],[5,2]>(femDofs4DAE);
          real r4F70#1 = RMul(r4F6F,r4F31);
          real r4F71#1 = TensorIndex<tensor[10,3],[6,2]>(femDofs4DAE);
          real r4F72#1 = RMul(r4F71,r4F34);
          real r4F73#1 = TensorIndex<tensor[10,3],[7,2]>(femDofs4DAE);
          real r4F74#1 = RMul(r4F73,r4F37);
          real r4F75#1 = TensorIndex<tensor[10,3],[8,2]>(femDofs4DAE);
          real r4F76#1 = RMul(r4F75,r4F3A);
          real r4F77#1 = TensorIndex<tensor[10,3],[9,2]>(femDofs4DAE);
          real r4F78#1 = RMul(r4F77,r4F3D);
          real r4F79#1 = RAdd(r4F66,r4F68);
          real r4F7A#1 = RAdd(r4F79,r4F6A);
          real r4F7B#1 = RAdd(r4F7A,r4F6C);
          real r4F7C#1 = RAdd(r4F7B,r4F6E);
          real r4F7D#1 = RAdd(r4F7C,r4F70);
          real r4F7E#1 = RAdd(r4F7D,r4F72);
          real r4F7F#1 = RAdd(r4F7E,r4F74);
          real r4F80#1 = RAdd(r4F7F,r4F76);
          real r4F81#1 = RAdd(r4F80,r4F78);
          tensor[3] probe_l_84F20#5 = <tensor[3]>[r4F47,r4F64,r4F81];
          real op1_e3_l_114FE5#1 = VDot<3>(probe_l_84F20,probe_l_84F20);
          real op1_e3_l_124FE8#1 = Sqrt(op1_e3_l_114FE5);
          real realLit4FEC#1 = 0.1e1;
          real r4FED#3 = RDiv(realLit4FEC,op1_e3_l_124FE8);
          real r4FEE#1 = TensorIndex<tensor[3],[0]>(probe_l_84F20);
          real r4FEF#1 = RMul(r4FED,r4FEE);
          real r4FF0#1 = TensorIndex<tensor[3],[1]>(probe_l_84F20);
          real r4FF1#1 = RMul(r4FED,r4FF0);
          real r4FF2#1 = TensorIndex<tensor[3],[2]>(probe_l_84F20);
          real r4FF3#1 = RMul(r4FED,r4FF2);
          tensor[3] _t4FEB#1 = <tensor[3]>[r4FEF,r4FF1,r4FF3];
          goto JOIN5000
        JOIN5000:  preds = [ASSIGN4FFD,ASSIGN534A]
          tensor[3] _t4FFE#1 = phi(_t4FEB,_t4FFF)
          tensor[3] up25001#4 = VScale<3>(stepSize42F0,_t4FFE);
          femData:MeshPos cPos5004#1 = fn_2FB47F0 (cPos42FE,up25001);
          femData:MeshPos callFindPos5006#2 = findPos3B9C (_t42E8,altIntermed4BBB);
          int intPos5008#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5006);
          tensor[3] refPos500A#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5006);
          int ilit500D#1 = 10;
          int mulRes500E#10 = IMul(intPos5008,ilit500D);
          int ilit500F#1 = 0;
          int addRes5010#1 = IAdd(mulRes500E,ilit500F);
          int idx5011#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5010);
          int ilit5012#1 = 1;
          int addRes5013#1 = IAdd(mulRes500E,ilit5012);
          int idx5014#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5013);
          int ilit5015#1 = 2;
          int addRes5016#1 = IAdd(mulRes500E,ilit5015);
          int idx5017#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5016);
          int ilit5018#1 = 3;
          int addRes5019#1 = IAdd(mulRes500E,ilit5018);
          int idx501A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5019);
          int ilit501B#1 = 4;
          int addRes501C#1 = IAdd(mulRes500E,ilit501B);
          int idx501D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes501C);
          int ilit501E#1 = 5;
          int addRes501F#1 = IAdd(mulRes500E,ilit501E);
          int idx5020#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes501F);
          int ilit5021#1 = 6;
          int addRes5022#1 = IAdd(mulRes500E,ilit5021);
          int idx5023#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5022);
          int ilit5024#1 = 7;
          int addRes5025#1 = IAdd(mulRes500E,ilit5024);
          int idx5026#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5025);
          int ilit5027#1 = 8;
          int addRes5028#1 = IAdd(mulRes500E,ilit5027);
          int idx5029#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5028);
          int ilit502A#1 = 9;
          int addRes502B#1 = IAdd(mulRes500E,ilit502A);
          int idx502C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes502B);
          int[10] seq502D#1 = <int[10]>{idx5011,idx5014,idx5017,idx501A,idx501D,idx5020,idx5023,idx5026,idx5029,idx502C};
          int[10] femIndicies500C#10 = seq502D;
          int ilit5051#11 = 0;
          int ilit5052#11 = 3;
          int idx5053#1 = Subscript<int>(femIndicies500C,ilit5051);
          int mulRes5054#3 = IMul(ilit5052,idx5053);
          int addRes5055#1 = IAdd(ilit5051,mulRes5054);
          int ilit5056#11 = 1;
          int addRes5057#1 = IAdd(ilit5056,mulRes5054);
          int ilit5058#11 = 2;
          int addRes5059#1 = IAdd(ilit5058,mulRes5054);
          real dof_load505A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5055);
          real dof_load505B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5057);
          real dof_load505C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5059);
          tensor[3] interCons505D#1 = <tensor[3]>[dof_load505A,dof_load505B,dof_load505C];
          int idx505E#1 = Subscript<int>(femIndicies500C,ilit5056);
          int mulRes505F#3 = IMul(ilit5052,idx505E);
          int addRes5060#1 = IAdd(ilit5051,mulRes505F);
          int addRes5061#1 = IAdd(ilit5056,mulRes505F);
          int addRes5062#1 = IAdd(ilit5058,mulRes505F);
          real dof_load5063#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5060);
          real dof_load5064#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5061);
          real dof_load5065#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5062);
          tensor[3] interCons5066#1 = <tensor[3]>[dof_load5063,dof_load5064,dof_load5065];
          int idx5067#1 = Subscript<int>(femIndicies500C,ilit5058);
          int mulRes5068#3 = IMul(ilit5052,idx5067);
          int addRes5069#1 = IAdd(ilit5051,mulRes5068);
          int addRes506A#1 = IAdd(ilit5056,mulRes5068);
          int addRes506B#1 = IAdd(ilit5058,mulRes5068);
          real dof_load506C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5069);
          real dof_load506D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes506A);
          real dof_load506E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes506B);
          tensor[3] interCons506F#1 = <tensor[3]>[dof_load506C,dof_load506D,dof_load506E];
          int idx5070#1 = Subscript<int>(femIndicies500C,ilit5052);
          int mulRes5071#3 = IMul(ilit5052,idx5070);
          int addRes5072#1 = IAdd(ilit5051,mulRes5071);
          int addRes5073#1 = IAdd(ilit5056,mulRes5071);
          int addRes5074#1 = IAdd(ilit5058,mulRes5071);
          real dof_load5075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5072);
          real dof_load5076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5073);
          real dof_load5077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5074);
          tensor[3] interCons5078#1 = <tensor[3]>[dof_load5075,dof_load5076,dof_load5077];
          int ilit5079#1 = 4;
          int idx507A#1 = Subscript<int>(femIndicies500C,ilit5079);
          int mulRes507B#3 = IMul(ilit5052,idx507A);
          int addRes507C#1 = IAdd(ilit5051,mulRes507B);
          int addRes507D#1 = IAdd(ilit5056,mulRes507B);
          int addRes507E#1 = IAdd(ilit5058,mulRes507B);
          real dof_load507F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507C);
          real dof_load5080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507D);
          real dof_load5081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507E);
          tensor[3] interCons5082#1 = <tensor[3]>[dof_load507F,dof_load5080,dof_load5081];
          int ilit5083#1 = 5;
          int idx5084#1 = Subscript<int>(femIndicies500C,ilit5083);
          int mulRes5085#3 = IMul(ilit5052,idx5084);
          int addRes5086#1 = IAdd(ilit5051,mulRes5085);
          int addRes5087#1 = IAdd(ilit5056,mulRes5085);
          int addRes5088#1 = IAdd(ilit5058,mulRes5085);
          real dof_load5089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5086);
          real dof_load508A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5087);
          real dof_load508B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5088);
          tensor[3] interCons508C#1 = <tensor[3]>[dof_load5089,dof_load508A,dof_load508B];
          int ilit508D#1 = 6;
          int idx508E#1 = Subscript<int>(femIndicies500C,ilit508D);
          int mulRes508F#3 = IMul(ilit5052,idx508E);
          int addRes5090#1 = IAdd(ilit5051,mulRes508F);
          int addRes5091#1 = IAdd(ilit5056,mulRes508F);
          int addRes5092#1 = IAdd(ilit5058,mulRes508F);
          real dof_load5093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5090);
          real dof_load5094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5091);
          real dof_load5095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5092);
          tensor[3] interCons5096#1 = <tensor[3]>[dof_load5093,dof_load5094,dof_load5095];
          int ilit5097#1 = 7;
          int idx5098#1 = Subscript<int>(femIndicies500C,ilit5097);
          int mulRes5099#3 = IMul(ilit5052,idx5098);
          int addRes509A#1 = IAdd(ilit5051,mulRes5099);
          int addRes509B#1 = IAdd(ilit5056,mulRes5099);
          int addRes509C#1 = IAdd(ilit5058,mulRes5099);
          real dof_load509D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509A);
          real dof_load509E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509B);
          real dof_load509F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509C);
          tensor[3] interCons50A0#1 = <tensor[3]>[dof_load509D,dof_load509E,dof_load509F];
          int ilit50A1#1 = 8;
          int idx50A2#1 = Subscript<int>(femIndicies500C,ilit50A1);
          int mulRes50A3#3 = IMul(ilit5052,idx50A2);
          int addRes50A4#1 = IAdd(ilit5051,mulRes50A3);
          int addRes50A5#1 = IAdd(ilit5056,mulRes50A3);
          int addRes50A6#1 = IAdd(ilit5058,mulRes50A3);
          real dof_load50A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A4);
          real dof_load50A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A5);
          real dof_load50A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A6);
          tensor[3] interCons50AA#1 = <tensor[3]>[dof_load50A7,dof_load50A8,dof_load50A9];
          int ilit50AB#1 = 9;
          int idx50AC#1 = Subscript<int>(femIndicies500C,ilit50AB);
          int mulRes50AD#3 = IMul(ilit5052,idx50AC);
          int addRes50AE#1 = IAdd(ilit5051,mulRes50AD);
          int addRes50AF#1 = IAdd(ilit5056,mulRes50AD);
          int addRes50B0#1 = IAdd(ilit5058,mulRes50AD);
          real dof_load50B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50AE);
          real dof_load50B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50AF);
          real dof_load50B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50B0);
          tensor[3] interCons50B4#1 = <tensor[3]>[dof_load50B1,dof_load50B2,dof_load50B3];
          tensor[10,3] dofs50B5#1 = <tensor[10,3]>[interCons505D,interCons5066,interCons506F,interCons5078,interCons5082,interCons508C,interCons5096,interCons50A0,interCons50AA,interCons50B4];
          tensor[10,3] femDofs5050#30 = dofs50B5;
          real varAcc511D#2 = VIndex<3,0>(refPos500A);
          real varAcc511E#2 = VIndex<3,1>(refPos500A);
          real varAcc511F#2 = VIndex<3,2>(refPos500A);
          real coeff5120#3 = 0.2e1;
          real iden5121#4 = varAcc511D;
          real prod25122#1 = RMul(iden5121,varAcc511D);
          real one5123#13 = 0.1e1;
          real prod5124#3 = RMul(one5123,one5123);
          real prod5125#2 = RMul(prod25122,prod5124);
          real coeff5126#6 = 0.4e1;
          real iden5127#3 = varAcc511E;
          real prod5128#2 = RMul(iden5127,one5123);
          real prod5129#2 = RMul(iden5121,prod5128);
          real iden512A#3 = varAcc511F;
          real prod512B#2 = RMul(one5123,iden512A);
          real prod512C#2 = RMul(iden5121,prod512B);
          real coeff512D#3 = -0.3e1;
          real prod512E#3 = RMul(iden5121,prod5124);
          real prod2512F#1 = RMul(iden5127,varAcc511E);
          real prod5130#1 = RMul(prod2512F,one5123);
          real prod5131#2 = RMul(one5123,prod5130);
          real prod5132#1 = RMul(iden5127,iden512A);
          real prod5133#2 = RMul(one5123,prod5132);
          real prod5134#3 = RMul(one5123,prod5128);
          real prod25135#1 = RMul(iden512A,varAcc511F);
          real prod5136#1 = RMul(one5123,prod25135);
          real prod5137#2 = RMul(one5123,prod5136);
          real prod5138#3 = RMul(one5123,prod512B);
          real prod5139#1 = RMul(one5123,prod5124);
          real mult513A#1 = RMul(one5123,prod5139);
          real mult513B#1 = RMul(coeff512D,prod5138);
          real mult513C#2 = RMul(coeff5120,prod5137);
          real mult513D#1 = RMul(coeff512D,prod5134);
          real mult513E#2 = RMul(coeff5126,prod5133);
          real mult513F#2 = RMul(coeff5120,prod5131);
          real mult5140#1 = RMul(coeff512D,prod512E);
          real mult5141#2 = RMul(coeff5126,prod512C);
          real mult5142#2 = RMul(coeff5126,prod5129);
          real mult5143#2 = RMul(coeff5120,prod5125);
          real sum5144#1 = RAdd(mult5142,mult5143);
          real sum5145#1 = RAdd(mult5141,sum5144);
          real sum5146#1 = RAdd(mult5140,sum5145);
          real sum5147#1 = RAdd(mult513F,sum5146);
          real sum5148#1 = RAdd(mult513E,sum5147);
          real sum5149#1 = RAdd(mult513D,sum5148);
          real sum514A#1 = RAdd(mult513C,sum5149);
          real sum514B#1 = RAdd(mult513B,sum514A);
          real sum514C#1 = RAdd(mult513A,sum514B);
          real intermediate514D#1 = sum514C;
          real coeff514E#3 = -0.1e1;
          real mult514F#1 = RMul(coeff514E,prod512E);
          real sum5150#1 = RAdd(mult514F,mult5143);
          real intermediate5151#1 = sum5150;
          real mult5152#1 = RMul(coeff514E,prod5134);
          real sum5153#1 = RAdd(mult5152,mult513F);
          real intermediate5154#1 = sum5153;
          real mult5155#1 = RMul(coeff514E,prod5138);
          real sum5156#1 = RAdd(mult5155,mult513C);
          real intermediate5157#1 = sum5156;
          real coeff5158#6 = -0.4e1;
          real mult5159#1 = RMul(coeff5126,prod5138);
          real mult515A#1 = RMul(coeff5158,prod5137);
          real mult515B#2 = RMul(coeff5158,prod5133);
          real mult515C#2 = RMul(coeff5158,prod512C);
          real sum515D#1 = RAdd(mult515B,mult515C);
          real sum515E#1 = RAdd(mult515A,sum515D);
          real sum515F#1 = RAdd(mult5159,sum515E);
          real intermediate5160#1 = sum515F;
          real mult5161#1 = RMul(coeff5126,prod5134);
          real mult5162#1 = RMul(coeff5158,prod5131);
          real mult5163#2 = RMul(coeff5158,prod5129);
          real sum5164#1 = RAdd(mult5162,mult5163);
          real sum5165#1 = RAdd(mult515B,sum5164);
          real sum5166#1 = RAdd(mult5161,sum5165);
          real intermediate5167#1 = sum5166;
          real mult5168#1 = RMul(coeff5126,prod512E);
          real mult5169#1 = RMul(coeff5158,prod5125);
          real sum516A#1 = RAdd(mult5163,mult5169);
          real sum516B#1 = RAdd(mult515C,sum516A);
          real sum516C#1 = RAdd(mult5168,sum516B);
          real intermediate516D#1 = sum516C;
          tensor[10] intermediateCons516E#1 = <tensor[10]>[intermediate514D,intermediate5151,intermediate5154,intermediate5157,mult513E,mult5141,mult5142,intermediate5160,intermediate5167,intermediate516D];
          tensor[10] basisResult511C#10 = intermediateCons516E;
          real r51C3#1 = TensorIndex<tensor[10,3],[0,0]>(femDofs5050);
          real r51C4#3 = TensorIndex<tensor[10],[0]>(basisResult511C);
          real r51C5#1 = RMul(r51C3,r51C4);
          real r51C6#1 = TensorIndex<tensor[10,3],[1,0]>(femDofs5050);
          real r51C7#3 = TensorIndex<tensor[10],[1]>(basisResult511C);
          real r51C8#1 = RMul(r51C6,r51C7);
          real r51C9#1 = TensorIndex<tensor[10,3],[2,0]>(femDofs5050);
          real r51CA#3 = TensorIndex<tensor[10],[2]>(basisResult511C);
          real r51CB#1 = RMul(r51C9,r51CA);
          real r51CC#1 = TensorIndex<tensor[10,3],[3,0]>(femDofs5050);
          real r51CD#3 = TensorIndex<tensor[10],[3]>(basisResult511C);
          real r51CE#1 = RMul(r51CC,r51CD);
          real r51CF#1 = TensorIndex<tensor[10,3],[4,0]>(femDofs5050);
          real r51D0#3 = TensorIndex<tensor[10],[4]>(basisResult511C);
          real r51D1#1 = RMul(r51CF,r51D0);
          real r51D2#1 = TensorIndex<tensor[10,3],[5,0]>(femDofs5050);
          real r51D3#3 = TensorIndex<tensor[10],[5]>(basisResult511C);
          real r51D4#1 = RMul(r51D2,r51D3);
          real r51D5#1 = TensorIndex<tensor[10,3],[6,0]>(femDofs5050);
          real r51D6#3 = TensorIndex<tensor[10],[6]>(basisResult511C);
          real r51D7#1 = RMul(r51D5,r51D6);
          real r51D8#1 = TensorIndex<tensor[10,3],[7,0]>(femDofs5050);
          real r51D9#3 = TensorIndex<tensor[10],[7]>(basisResult511C);
          real r51DA#1 = RMul(r51D8,r51D9);
          real r51DB#1 = TensorIndex<tensor[10,3],[8,0]>(femDofs5050);
          real r51DC#3 = TensorIndex<tensor[10],[8]>(basisResult511C);
          real r51DD#1 = RMul(r51DB,r51DC);
          real r51DE#1 = TensorIndex<tensor[10,3],[9,0]>(femDofs5050);
          real r51DF#3 = TensorIndex<tensor[10],[9]>(basisResult511C);
          real r51E0#1 = RMul(r51DE,r51DF);
          real r51E1#1 = RAdd(r51C5,r51C8);
          real r51E2#1 = RAdd(r51E1,r51CB);
          real r51E3#1 = RAdd(r51E2,r51CE);
          real r51E4#1 = RAdd(r51E3,r51D1);
          real r51E5#1 = RAdd(r51E4,r51D4);
          real r51E6#1 = RAdd(r51E5,r51D7);
          real r51E7#1 = RAdd(r51E6,r51DA);
          real r51E8#1 = RAdd(r51E7,r51DD);
          real r51E9#1 = RAdd(r51E8,r51E0);
          real r51EA#1 = TensorIndex<tensor[10,3],[0,1]>(femDofs5050);
          real r51EB#1 = RMul(r51EA,r51C4);
          real r51EC#1 = TensorIndex<tensor[10,3],[1,1]>(femDofs5050);
          real r51ED#1 = RMul(r51EC,r51C7);
          real r51EE#1 = TensorIndex<tensor[10,3],[2,1]>(femDofs5050);
          real r51EF#1 = RMul(r51EE,r51CA);
          real r51F0#1 = TensorIndex<tensor[10,3],[3,1]>(femDofs5050);
          real r51F1#1 = RMul(r51F0,r51CD);
          real r51F2#1 = TensorIndex<tensor[10,3],[4,1]>(femDofs5050);
          real r51F3#1 = RMul(r51F2,r51D0);
          real r51F4#1 = TensorIndex<tensor[10,3],[5,1]>(femDofs5050);
          real r51F5#1 = RMul(r51F4,r51D3);
          real r51F6#1 = TensorIndex<tensor[10,3],[6,1]>(femDofs5050);
          real r51F7#1 = RMul(r51F6,r51D6);
          real r51F8#1 = TensorIndex<tensor[10,3],[7,1]>(femDofs5050);
          real r51F9#1 = RMul(r51F8,r51D9);
          real r51FA#1 = TensorIndex<tensor[10,3],[8,1]>(femDofs5050);
          real r51FB#1 = RMul(r51FA,r51DC);
          real r51FC#1 = TensorIndex<tensor[10,3],[9,1]>(femDofs5050);
          real r51FD#1 = RMul(r51FC,r51DF);
          real r51FE#1 = RAdd(r51EB,r51ED);
          real r51FF#1 = RAdd(r51FE,r51EF);
          real r5200#1 = RAdd(r51FF,r51F1);
          real r5201#1 = RAdd(r5200,r51F3);
          real r5202#1 = RAdd(r5201,r51F5);
          real r5203#1 = RAdd(r5202,r51F7);
          real r5204#1 = RAdd(r5203,r51F9);
          real r5205#1 = RAdd(r5204,r51FB);
          real r5206#1 = RAdd(r5205,r51FD);
          real r5207#1 = TensorIndex<tensor[10,3],[0,2]>(femDofs5050);
          real r5208#1 = RMul(r5207,r51C4);
          real r5209#1 = TensorIndex<tensor[10,3],[1,2]>(femDofs5050);
          real r520A#1 = RMul(r5209,r51C7);
          real r520B#1 = TensorIndex<tensor[10,3],[2,2]>(femDofs5050);
          real r520C#1 = RMul(r520B,r51CA);
          real r520D#1 = TensorIndex<tensor[10,3],[3,2]>(femDofs5050);
          real r520E#1 = RMul(r520D,r51CD);
          real r520F#1 = TensorIndex<tensor[10,3],[4,2]>(femDofs5050);
          real r5210#1 = RMul(r520F,r51D0);
          real r5211#1 = TensorIndex<tensor[10,3],[5,2]>(femDofs5050);
          real r5212#1 = RMul(r5211,r51D3);
          real r5213#1 = TensorIndex<tensor[10,3],[6,2]>(femDofs5050);
          real r5214#1 = RMul(r5213,r51D6);
          real r5215#1 = TensorIndex<tensor[10,3],[7,2]>(femDofs5050);
          real r5216#1 = RMul(r5215,r51D9);
          real r5217#1 = TensorIndex<tensor[10,3],[8,2]>(femDofs5050);
          real r5218#1 = RMul(r5217,r51DC);
          real r5219#1 = TensorIndex<tensor[10,3],[9,2]>(femDofs5050);
          real r521A#1 = RMul(r5219,r51DF);
          real r521B#1 = RAdd(r5208,r520A);
          real r521C#1 = RAdd(r521B,r520C);
          real r521D#1 = RAdd(r521C,r520E);
          real r521E#1 = RAdd(r521D,r5210);
          real r521F#1 = RAdd(r521E,r5212);
          real r5220#1 = RAdd(r521F,r5214);
          real r5221#1 = RAdd(r5220,r5216);
          real r5222#1 = RAdd(r5221,r5218);
          real r5223#1 = RAdd(r5222,r521A);
          tensor[3] compositionl51C2#3 = <tensor[3]>[r51E9,r5206,r5223];
          real op1_e3_l_195287#1 = VDot<3>(compositionl51C2,compositionl51C2);
          tensor[3] op1_e3_l_20528A#3 = VScale<3>(stepSize42F0,compositionl51C2);
          real op1_e3_l_21528D#1 = Sqrt(op1_e3_l_195287);
          real realLit5291#1 = 0.1e1;
          real r5292#3 = RDiv(realLit5291,op1_e3_l_21528D);
          real r5293#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_20528A);
          real r5294#1 = RMul(r5292,r5293);
          real r5295#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_20528A);
          real r5296#1 = RMul(r5292,r5295);
          real r5297#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_20528A);
          real r5298#1 = RMul(r5292,r5297);
          tensor[3] op1_e3_l_225290#3 = <tensor[3]>[r5294,r5296,r5298];
          tensor[3] altCPos52A3#1 = VAdd<3>(altCPos4300,op1_e3_l_225290);
          int _t52A6#1 = 1;
          int step52A8#1 = IAdd(step42FC,_t52A6);
          real r52AB#1 = TensorIndex<tensor[3],[0]>(compositionl4ACC);
          real r52AC#3 = RMul(_t44E4,stepSize42F0);
          real r52AD#1 = RMul(r52AC,r52AB);
          real r52AE#1 = TensorIndex<tensor[3],[1]>(compositionl4ACC);
          real r52AF#1 = RMul(r52AC,r52AE);
          real r52B0#1 = TensorIndex<tensor[3],[2]>(compositionl4ACC);
          real r52B1#1 = RMul(r52AC,r52B0);
          tensor[3] op1_e3_l_4552AA#3 = <tensor[3]>[r52AD,r52AF,r52B1];
          real realLit52BC#1 = 0.1e1;
          real r52BD#3 = RDiv(realLit52BC,op1_e3_l_224BA5);
          real r52BE#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_4552AA);
          real r52BF#1 = RMul(r52BD,r52BE);
          real r52C0#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_4552AA);
          real r52C1#1 = RMul(r52BD,r52C0);
          real r52C2#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_4552AA);
          real r52C3#1 = RMul(r52BD,r52C2);
          tensor[3] op1_e3_l_4752BB#1 = <tensor[3]>[r52BF,r52C1,r52C3];
          tensor[3] op1_e3_l_4852CE#1 = VAdd<3>(altCPos4300,op1_e3_l_4752BB);
          tensor[3] op1_e3_l_4952D1#3 = VSub<3>(op1_e3_l_4852CE,center42F6);
          tensor[3] projParam52D5#1 = ProjectLast<tensor[3,3],[0]>(M42F4);
          real vdot52D6#1 = VDot<3>(projParam52D5,op1_e3_l_4952D1);
          tensor[3] projParam52D7#1 = ProjectLast<tensor[3,3],[1]>(M42F4);
          real vdot52D8#1 = VDot<3>(projParam52D7,op1_e3_l_4952D1);
          tensor[3] projParam52D9#1 = ProjectLast<tensor[3,3],[2]>(M42F4);
          real vdot52DA#1 = VDot<3>(projParam52D9,op1_e3_l_4952D1);
          tensor[3] op1_e3_l_5052D4#3 = <tensor[3]>[vdot52D6,vdot52D8,vdot52DA];
          real op1_e3_l_7152E3#1 = VDot<3>(op1_e3_l_5052D4,op1_e3_l_5052D4);
          tensor[3] op1_e3_l_7252E6#3 = VScale<3>(stepSize42F0,op1_e3_l_5052D4);
          real op1_e3_l_7352E9#1 = Sqrt(op1_e3_l_7152E3);
          real realLit52ED#1 = 0.1e1;
          real r52EE#3 = RDiv(realLit52ED,op1_e3_l_7352E9);
          real r52EF#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_7252E6);
          real r52F0#1 = RMul(r52EE,r52EF);
          real r52F1#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_7252E6);
          real r52F2#1 = RMul(r52EE,r52F1);
          real r52F3#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_7252E6);
          real r52F4#1 = RMul(r52EE,r52F3);
          tensor[3] op1_e3_l_7552EC#1 = <tensor[3]>[r52F0,r52F2,r52F4];
          tensor[3] op1_e3_l_11152FF#2 = VSub<3>(up25001,op1_e3_l_7552EC);
          real op1_e3_l_1135302#1 = VDot<3>(op1_e3_l_11152FF,op1_e3_l_11152FF);
          real _t5305#2 = Sqrt(op1_e3_l_1135302);
          bool _t5308#1 = GT<real>(_t5305,_t44BF);
          if _t5308 then goto ASSIGN530C else goto ASSIGN533A
        ASSIGN530C:  preds = [COND530A]
          bool _t530B#1 = true;
          goto JOIN530F
        JOIN530F:  preds = [ASSIGN530C,ASSIGN5343]
          bool _t530D#1 = phi(_t530B,_t530E)
          if _t530D then goto ASSIGN5312 else goto JOIN5331
        ASSIGN5312:  preds = [COND5310]
          string _t5311#1 = "ERG:Error in evaluation on pos 2:";
          string _t5313#3 = "\n";
          Print<[string,tensor[3],string]>(_t5311,startPos4302,_t5313);
          string _t5316#1 = "The errors are:";
          string _t5318#1 = " and ";
          tensor[3] op1_e3_l_33531A#2 = VSub<3>(up25001,op1_e3_l_225290);
          real op1_e3_l_35531D#1 = VDot<3>(op1_e3_l_33531A,op1_e3_l_33531A);
          real _t5320#1 = Sqrt(op1_e3_l_35531D);
          Print<[string,real,string,real,string]>(_t5316,_t5305,_t5318,_t5320,_t5313);
          string _t5324#1 = "The cells are:";
          femData:MeshCell _t5326#1 = LoadFem<femData:MeshCell>(_t4BFB,_t4BF9);
          string _t5328#1 = " vs ";
          femData:Mesh _t532A#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4BC0);
          int _t532C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4BC0);
          femData:MeshCell _t532E#1 = LoadFem<femData:MeshCell>(_t532A,_t532C);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t5324,_t5326,_t5328,_t532E,_t5313);
          goto JOIN5331
        JOIN5331:  preds = [MASSIGN5330,COND5310]
          self.stream = stream4461;
          self.newStream = newStream4467;
          self.step = step52A8;
          self.cPos = cPos5004;
          self.altCPos = altCPos52A3;
          active
        ASSIGN533A:  preds = [COND530A]
          tensor[3] op1_e3_l_335338#2 = VSub<3>(up25001,op1_e3_l_225290);
          real op1_e3_l_35533B#1 = VDot<3>(op1_e3_l_335338,op1_e3_l_335338);
          real _t533E#1 = Sqrt(op1_e3_l_35533B);
          real _t5341#1 = 0.1e-4;
          bool _t530E#1 = GT<real>(_t533E,_t5341);
          goto JOIN530F
        ASSIGN5345:  preds = [COND4D5D]
          string _t5344#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t5344);
          real realLit5347#3 = 0.e0;
          tensor[3] _t4FFF#1 = <tensor[3]>[realLit5347,realLit5347,realLit5347];
          goto JOIN5000
        ASSIGN534C:  preds = [COND4D4E]
          string _t534B#1 = "fine in cell 2:";
          femData:MeshCell _t534D#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t534F#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t534B,_t534D,_t534F);
          goto JOIN4D5C
        ASSIGN5352:  preds = [COND4BE3]
          bool _t4BE7#1 = BNot(_t4BC2);
          goto JOIN4BE8
        ASSIGN5354:  preds = [COND47E2]
          femData:MeshPos callFindPos5353#2 = findPos3B9C (_t42E8,altCPos4300);
          int intPos5355#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5353);
          tensor[3] refPos5357#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5353);
          int ilit535A#1 = 10;
          int mulRes535B#10 = IMul(intPos5355,ilit535A);
          int ilit535C#1 = 0;
          int addRes535D#1 = IAdd(mulRes535B,ilit535C);
          int idx535E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes535D);
          int ilit535F#1 = 1;
          int addRes5360#1 = IAdd(mulRes535B,ilit535F);
          int idx5361#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5360);
          int ilit5362#1 = 2;
          int addRes5363#1 = IAdd(mulRes535B,ilit5362);
          int idx5364#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5363);
          int ilit5365#1 = 3;
          int addRes5366#1 = IAdd(mulRes535B,ilit5365);
          int idx5367#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5366);
          int ilit5368#1 = 4;
          int addRes5369#1 = IAdd(mulRes535B,ilit5368);
          int idx536A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5369);
          int ilit536B#1 = 5;
          int addRes536C#1 = IAdd(mulRes535B,ilit536B);
          int idx536D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes536C);
          int ilit536E#1 = 6;
          int addRes536F#1 = IAdd(mulRes535B,ilit536E);
          int idx5370#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes536F);
          int ilit5371#1 = 7;
          int addRes5372#1 = IAdd(mulRes535B,ilit5371);
          int idx5373#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5372);
          int ilit5374#1 = 8;
          int addRes5375#1 = IAdd(mulRes535B,ilit5374);
          int idx5376#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5375);
          int ilit5377#1 = 9;
          int addRes5378#1 = IAdd(mulRes535B,ilit5377);
          int idx5379#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5378);
          int[10] seq537A#1 = <int[10]>{idx535E,idx5361,idx5364,idx5367,idx536A,idx536D,idx5370,idx5373,idx5376,idx5379};
          int[10] femIndicies5359#10 = seq537A;
          int ilit539E#11 = 0;
          int ilit539F#11 = 3;
          int idx53A0#1 = Subscript<int>(femIndicies5359,ilit539E);
          int mulRes53A1#3 = IMul(ilit539F,idx53A0);
          int addRes53A2#1 = IAdd(ilit539E,mulRes53A1);
          int ilit53A3#11 = 1;
          int addRes53A4#1 = IAdd(ilit53A3,mulRes53A1);
          int ilit53A5#11 = 2;
          int addRes53A6#1 = IAdd(ilit53A5,mulRes53A1);
          real dof_load53A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A2);
          real dof_load53A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A4);
          real dof_load53A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A6);
          tensor[3] interCons53AA#1 = <tensor[3]>[dof_load53A7,dof_load53A8,dof_load53A9];
          int idx53AB#1 = Subscript<int>(femIndicies5359,ilit53A3);
          int mulRes53AC#3 = IMul(ilit539F,idx53AB);
          int addRes53AD#1 = IAdd(ilit539E,mulRes53AC);
          int addRes53AE#1 = IAdd(ilit53A3,mulRes53AC);
          int addRes53AF#1 = IAdd(ilit53A5,mulRes53AC);
          real dof_load53B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AD);
          real dof_load53B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AE);
          real dof_load53B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AF);
          tensor[3] interCons53B3#1 = <tensor[3]>[dof_load53B0,dof_load53B1,dof_load53B2];
          int idx53B4#1 = Subscript<int>(femIndicies5359,ilit53A5);
          int mulRes53B5#3 = IMul(ilit539F,idx53B4);
          int addRes53B6#1 = IAdd(ilit539E,mulRes53B5);
          int addRes53B7#1 = IAdd(ilit53A3,mulRes53B5);
          int addRes53B8#1 = IAdd(ilit53A5,mulRes53B5);
          real dof_load53B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B6);
          real dof_load53BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B7);
          real dof_load53BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B8);
          tensor[3] interCons53BC#1 = <tensor[3]>[dof_load53B9,dof_load53BA,dof_load53BB];
          int idx53BD#1 = Subscript<int>(femIndicies5359,ilit539F);
          int mulRes53BE#3 = IMul(ilit539F,idx53BD);
          int addRes53BF#1 = IAdd(ilit539E,mulRes53BE);
          int addRes53C0#1 = IAdd(ilit53A3,mulRes53BE);
          int addRes53C1#1 = IAdd(ilit53A5,mulRes53BE);
          real dof_load53C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53BF);
          real dof_load53C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C0);
          real dof_load53C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C1);
          tensor[3] interCons53C5#1 = <tensor[3]>[dof_load53C2,dof_load53C3,dof_load53C4];
          int ilit53C6#1 = 4;
          int idx53C7#1 = Subscript<int>(femIndicies5359,ilit53C6);
          int mulRes53C8#3 = IMul(ilit539F,idx53C7);
          int addRes53C9#1 = IAdd(ilit539E,mulRes53C8);
          int addRes53CA#1 = IAdd(ilit53A3,mulRes53C8);
          int addRes53CB#1 = IAdd(ilit53A5,mulRes53C8);
          real dof_load53CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C9);
          real dof_load53CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53CA);
          real dof_load53CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53CB);
          tensor[3] interCons53CF#1 = <tensor[3]>[dof_load53CC,dof_load53CD,dof_load53CE];
          int ilit53D0#1 = 5;
          int idx53D1#1 = Subscript<int>(femIndicies5359,ilit53D0);
          int mulRes53D2#3 = IMul(ilit539F,idx53D1);
          int addRes53D3#1 = IAdd(ilit539E,mulRes53D2);
          int addRes53D4#1 = IAdd(ilit53A3,mulRes53D2);
          int addRes53D5#1 = IAdd(ilit53A5,mulRes53D2);
          real dof_load53D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D3);
          real dof_load53D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D4);
          real dof_load53D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D5);
          tensor[3] interCons53D9#1 = <tensor[3]>[dof_load53D6,dof_load53D7,dof_load53D8];
          int ilit53DA#1 = 6;
          int idx53DB#1 = Subscript<int>(femIndicies5359,ilit53DA);
          int mulRes53DC#3 = IMul(ilit539F,idx53DB);
          int addRes53DD#1 = IAdd(ilit539E,mulRes53DC);
          int addRes53DE#1 = IAdd(ilit53A3,mulRes53DC);
          int addRes53DF#1 = IAdd(ilit53A5,mulRes53DC);
          real dof_load53E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DD);
          real dof_load53E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DE);
          real dof_load53E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DF);
          tensor[3] interCons53E3#1 = <tensor[3]>[dof_load53E0,dof_load53E1,dof_load53E2];
          int ilit53E4#1 = 7;
          int idx53E5#1 = Subscript<int>(femIndicies5359,ilit53E4);
          int mulRes53E6#3 = IMul(ilit539F,idx53E5);
          int addRes53E7#1 = IAdd(ilit539E,mulRes53E6);
          int addRes53E8#1 = IAdd(ilit53A3,mulRes53E6);
          int addRes53E9#1 = IAdd(ilit53A5,mulRes53E6);
          real dof_load53EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E7);
          real dof_load53EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E8);
          real dof_load53EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E9);
          tensor[3] interCons53ED#1 = <tensor[3]>[dof_load53EA,dof_load53EB,dof_load53EC];
          int ilit53EE#1 = 8;
          int idx53EF#1 = Subscript<int>(femIndicies5359,ilit53EE);
          int mulRes53F0#3 = IMul(ilit539F,idx53EF);
          int addRes53F1#1 = IAdd(ilit539E,mulRes53F0);
          int addRes53F2#1 = IAdd(ilit53A3,mulRes53F0);
          int addRes53F3#1 = IAdd(ilit53A5,mulRes53F0);
          real dof_load53F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F1);
          real dof_load53F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F2);
          real dof_load53F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F3);
          tensor[3] interCons53F7#1 = <tensor[3]>[dof_load53F4,dof_load53F5,dof_load53F6];
          int ilit53F8#1 = 9;
          int idx53F9#1 = Subscript<int>(femIndicies5359,ilit53F8);
          int mulRes53FA#3 = IMul(ilit539F,idx53F9);
          int addRes53FB#1 = IAdd(ilit539E,mulRes53FA);
          int addRes53FC#1 = IAdd(ilit53A3,mulRes53FA);
          int addRes53FD#1 = IAdd(ilit53A5,mulRes53FA);
          real dof_load53FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FB);
          real dof_load53FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FC);
          real dof_load5400#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FD);
          tensor[3] interCons5401#1 = <tensor[3]>[dof_load53FE,dof_load53FF,dof_load5400];
          tensor[10,3] dofs5402#1 = <tensor[10,3]>[interCons53AA,interCons53B3,interCons53BC,interCons53C5,interCons53CF,interCons53D9,interCons53E3,interCons53ED,interCons53F7,interCons5401];
          tensor[10,3] femDofs539D#30 = dofs5402;
          real varAcc546A#2 = VIndex<3,0>(refPos5357);
          real varAcc546B#2 = VIndex<3,1>(refPos5357);
          real varAcc546C#2 = VIndex<3,2>(refPos5357);
          real coeff546D#3 = 0.2e1;
          real iden546E#4 = varAcc546A;
          real prod2546F#1 = RMul(iden546E,varAcc546A);
          real one5470#13 = 0.1e1;
          real prod5471#3 = RMul(one5470,one5470);
          real prod5472#2 = RMul(prod2546F,prod5471);
          real coeff5473#6 = 0.4e1;
          real iden5474#3 = varAcc546B;
          real prod5475#2 = RMul(iden5474,one5470);
          real prod5476#2 = RMul(iden546E,prod5475);
          real iden5477#3 = varAcc546C;
          real prod5478#2 = RMul(one5470,iden5477);
          real prod5479#2 = RMul(iden546E,prod5478);
          real coeff547A#3 = -0.3e1;
          real prod547B#3 = RMul(iden546E,prod5471);
          real prod2547C#1 = RMul(iden5474,varAcc546B);
          real prod547D#1 = RMul(prod2547C,one5470);
          real prod547E#2 = RMul(one5470,prod547D);
          real prod547F#1 = RMul(iden5474,iden5477);
          real prod5480#2 = RMul(one5470,prod547F);
          real prod5481#3 = RMul(one5470,prod5475);
          real prod25482#1 = RMul(iden5477,varAcc546C);
          real prod5483#1 = RMul(one5470,prod25482);
          real prod5484#2 = RMul(one5470,prod5483);
          real prod5485#3 = RMul(one5470,prod5478);
          real prod5486#1 = RMul(one5470,prod5471);
          real mult5487#1 = RMul(one5470,prod5486);
          real mult5488#1 = RMul(coeff547A,prod5485);
          real mult5489#2 = RMul(coeff546D,prod5484);
          real mult548A#1 = RMul(coeff547A,prod5481);
          real mult548B#2 = RMul(coeff5473,prod5480);
          real mult548C#2 = RMul(coeff546D,prod547E);
          real mult548D#1 = RMul(coeff547A,prod547B);
          real mult548E#2 = RMul(coeff5473,prod5479);
          real mult548F#2 = RMul(coeff5473,prod5476);
          real mult5490#2 = RMul(coeff546D,prod5472);
          real sum5491#1 = RAdd(mult548F,mult5490);
          real sum5492#1 = RAdd(mult548E,sum5491);
          real sum5493#1 = RAdd(mult548D,sum5492);
          real sum5494#1 = RAdd(mult548C,sum5493);
          real sum5495#1 = RAdd(mult548B,sum5494);
          real sum5496#1 = RAdd(mult548A,sum5495);
          real sum5497#1 = RAdd(mult5489,sum5496);
          real sum5498#1 = RAdd(mult5488,sum5497);
          real sum5499#1 = RAdd(mult5487,sum5498);
          real intermediate549A#1 = sum5499;
          real coeff549B#3 = -0.1e1;
          real mult549C#1 = RMul(coeff549B,prod547B);
          real sum549D#1 = RAdd(mult549C,mult5490);
          real intermediate549E#1 = sum549D;
          real mult549F#1 = RMul(coeff549B,prod5481);
          real sum54A0#1 = RAdd(mult549F,mult548C);
          real intermediate54A1#1 = sum54A0;
          real mult54A2#1 = RMul(coeff549B,prod5485);
          real sum54A3#1 = RAdd(mult54A2,mult5489);
          real intermediate54A4#1 = sum54A3;
          real coeff54A5#6 = -0.4e1;
          real mult54A6#1 = RMul(coeff5473,prod5485);
          real mult54A7#1 = RMul(coeff54A5,prod5484);
          real mult54A8#2 = RMul(coeff54A5,prod5480);
          real mult54A9#2 = RMul(coeff54A5,prod5479);
          real sum54AA#1 = RAdd(mult54A8,mult54A9);
          real sum54AB#1 = RAdd(mult54A7,sum54AA);
          real sum54AC#1 = RAdd(mult54A6,sum54AB);
          real intermediate54AD#1 = sum54AC;
          real mult54AE#1 = RMul(coeff5473,prod5481);
          real mult54AF#1 = RMul(coeff54A5,prod547E);
          real mult54B0#2 = RMul(coeff54A5,prod5476);
          real sum54B1#1 = RAdd(mult54AF,mult54B0);
          real sum54B2#1 = RAdd(mult54A8,sum54B1);
          real sum54B3#1 = RAdd(mult54AE,sum54B2);
          real intermediate54B4#1 = sum54B3;
          real mult54B5#1 = RMul(coeff5473,prod547B);
          real mult54B6#1 = RMul(coeff54A5,prod5472);
          real sum54B7#1 = RAdd(mult54B0,mult54B6);
          real sum54B8#1 = RAdd(mult54A9,sum54B7);
          real sum54B9#1 = RAdd(mult54B5,sum54B8);
          real intermediate54BA#1 = sum54B9;
          tensor[10] intermediateCons54BB#1 = <tensor[10]>[intermediate549A,intermediate549E,intermediate54A1,intermediate54A4,mult548B,mult548E,mult548F,intermediate54AD,intermediate54B4,intermediate54BA];
          tensor[10] basisResult5469#10 = intermediateCons54BB;
          real r5510#1 = TensorIndex<tensor[10,3],[0,0]>(femDofs539D);
          real r5511#3 = TensorIndex<tensor[10],[0]>(basisResult5469);
          real r5512#1 = RMul(r5510,r5511);
          real r5513#1 = TensorIndex<tensor[10,3],[1,0]>(femDofs539D);
          real r5514#3 = TensorIndex<tensor[10],[1]>(basisResult5469);
          real r5515#1 = RMul(r5513,r5514);
          real r5516#1 = TensorIndex<tensor[10,3],[2,0]>(femDofs539D);
          real r5517#3 = TensorIndex<tensor[10],[2]>(basisResult5469);
          real r5518#1 = RMul(r5516,r5517);
          real r5519#1 = TensorIndex<tensor[10,3],[3,0]>(femDofs539D);
          real r551A#3 = TensorIndex<tensor[10],[3]>(basisResult5469);
          real r551B#1 = RMul(r5519,r551A);
          real r551C#1 = TensorIndex<tensor[10,3],[4,0]>(femDofs539D);
          real r551D#3 = TensorIndex<tensor[10],[4]>(basisResult5469);
          real r551E#1 = RMul(r551C,r551D);
          real r551F#1 = TensorIndex<tensor[10,3],[5,0]>(femDofs539D);
          real r5520#3 = TensorIndex<tensor[10],[5]>(basisResult5469);
          real r5521#1 = RMul(r551F,r5520);
          real r5522#1 = TensorIndex<tensor[10,3],[6,0]>(femDofs539D);
          real r5523#3 = TensorIndex<tensor[10],[6]>(basisResult5469);
          real r5524#1 = RMul(r5522,r5523);
          real r5525#1 = TensorIndex<tensor[10,3],[7,0]>(femDofs539D);
          real r5526#3 = TensorIndex<tensor[10],[7]>(basisResult5469);
          real r5527#1 = RMul(r5525,r5526);
          real r5528#1 = TensorIndex<tensor[10,3],[8,0]>(femDofs539D);
          real r5529#3 = TensorIndex<tensor[10],[8]>(basisResult5469);
          real r552A#1 = RMul(r5528,r5529);
          real r552B#1 = TensorIndex<tensor[10,3],[9,0]>(femDofs539D);
          real r552C#3 = TensorIndex<tensor[10],[9]>(basisResult5469);
          real r552D#1 = RMul(r552B,r552C);
          real r552E#1 = RAdd(r5512,r5515);
          real r552F#1 = RAdd(r552E,r5518);
          real r5530#1 = RAdd(r552F,r551B);
          real r5531#1 = RAdd(r5530,r551E);
          real r5532#1 = RAdd(r5531,r5521);
          real r5533#1 = RAdd(r5532,r5524);
          real r5534#1 = RAdd(r5533,r5527);
          real r5535#1 = RAdd(r5534,r552A);
          real r5536#1 = RAdd(r5535,r552D);
          real r5537#1 = TensorIndex<tensor[10,3],[0,1]>(femDofs539D);
          real r5538#1 = RMul(r5537,r5511);
          real r5539#1 = TensorIndex<tensor[10,3],[1,1]>(femDofs539D);
          real r553A#1 = RMul(r5539,r5514);
          real r553B#1 = TensorIndex<tensor[10,3],[2,1]>(femDofs539D);
          real r553C#1 = RMul(r553B,r5517);
          real r553D#1 = TensorIndex<tensor[10,3],[3,1]>(femDofs539D);
          real r553E#1 = RMul(r553D,r551A);
          real r553F#1 = TensorIndex<tensor[10,3],[4,1]>(femDofs539D);
          real r5540#1 = RMul(r553F,r551D);
          real r5541#1 = TensorIndex<tensor[10,3],[5,1]>(femDofs539D);
          real r5542#1 = RMul(r5541,r5520);
          real r5543#1 = TensorIndex<tensor[10,3],[6,1]>(femDofs539D);
          real r5544#1 = RMul(r5543,r5523);
          real r5545#1 = TensorIndex<tensor[10,3],[7,1]>(femDofs539D);
          real r5546#1 = RMul(r5545,r5526);
          real r5547#1 = TensorIndex<tensor[10,3],[8,1]>(femDofs539D);
          real r5548#1 = RMul(r5547,r5529);
          real r5549#1 = TensorIndex<tensor[10,3],[9,1]>(femDofs539D);
          real r554A#1 = RMul(r5549,r552C);
          real r554B#1 = RAdd(r5538,r553A);
          real r554C#1 = RAdd(r554B,r553C);
          real r554D#1 = RAdd(r554C,r553E);
          real r554E#1 = RAdd(r554D,r5540);
          real r554F#1 = RAdd(r554E,r5542);
          real r5550#1 = RAdd(r554F,r5544);
          real r5551#1 = RAdd(r5550,r5546);
          real r5552#1 = RAdd(r5551,r5548);
          real r5553#1 = RAdd(r5552,r554A);
          real r5554#1 = TensorIndex<tensor[10,3],[0,2]>(femDofs539D);
          real r5555#1 = RMul(r5554,r5511);
          real r5556#1 = TensorIndex<tensor[10,3],[1,2]>(femDofs539D);
          real r5557#1 = RMul(r5556,r5514);
          real r5558#1 = TensorIndex<tensor[10,3],[2,2]>(femDofs539D);
          real r5559#1 = RMul(r5558,r5517);
          real r555A#1 = TensorIndex<tensor[10,3],[3,2]>(femDofs539D);
          real r555B#1 = RMul(r555A,r551A);
          real r555C#1 = TensorIndex<tensor[10,3],[4,2]>(femDofs539D);
          real r555D#1 = RMul(r555C,r551D);
          real r555E#1 = TensorIndex<tensor[10,3],[5,2]>(femDofs539D);
          real r555F#1 = RMul(r555E,r5520);
          real r5560#1 = TensorIndex<tensor[10,3],[6,2]>(femDofs539D);
          real r5561#1 = RMul(r5560,r5523);
          real r5562#1 = TensorIndex<tensor[10,3],[7,2]>(femDofs539D);
          real r5563#1 = RMul(r5562,r5526);
          real r5564#1 = TensorIndex<tensor[10,3],[8,2]>(femDofs539D);
          real r5565#1 = RMul(r5564,r5529);
          real r5566#1 = TensorIndex<tensor[10,3],[9,2]>(femDofs539D);
          real r5567#1 = RMul(r5566,r552C);
          real r5568#1 = RAdd(r5555,r5557);
          real r5569#1 = RAdd(r5568,r5559);
          real r556A#1 = RAdd(r5569,r555B);
          real r556B#1 = RAdd(r556A,r555D);
          real r556C#1 = RAdd(r556B,r555F);
          real r556D#1 = RAdd(r556C,r5561);
          real r556E#1 = RAdd(r556D,r5563);
          real r556F#1 = RAdd(r556E,r5565);
          real r5570#1 = RAdd(r556F,r5567);
          tensor[3] compositionl550F#5 = <tensor[3]>[r5536,r5553,r5570];
          real op1_e3_l_2255D4#1 = VDot<3>(compositionl550F,compositionl550F);
          real r55D8#1 = TensorIndex<tensor[3],[0]>(compositionl550F);
          real r55D9#3 = RMul(_t44E4,stepSize42F0);
          real r55DA#1 = RMul(r55D9,r55D8);
          real r55DB#1 = TensorIndex<tensor[3],[1]>(compositionl550F);
          real r55DC#1 = RMul(r55D9,r55DB);
          real r55DD#1 = TensorIndex<tensor[3],[2]>(compositionl550F);
          real r55DE#1 = RMul(r55D9,r55DD);
          tensor[3] op1_e3_l_2355D7#3 = <tensor[3]>[r55DA,r55DC,r55DE];
          real op1_e3_l_2455E8#1 = Sqrt(op1_e3_l_2255D4);
          real realLit55EC#1 = 0.1e1;
          real r55ED#3 = RDiv(realLit55EC,op1_e3_l_2455E8);
          real r55EE#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_2355D7);
          real r55EF#1 = RMul(r55ED,r55EE);
          real r55F0#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_2355D7);
          real r55F1#1 = RMul(r55ED,r55F0);
          real r55F2#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_2355D7);
          real r55F3#1 = RMul(r55ED,r55F2);
          tensor[3] op1_e3_l_2655EB#1 = <tensor[3]>[r55EF,r55F1,r55F3];
          tensor[3] op1_e3_l_3555FE#2 = VSub<3>(up1478A,op1_e3_l_2655EB);
          real op1_e3_l_375601#1 = VDot<3>(op1_e3_l_3555FE,op1_e3_l_3555FE);
          real _t5604#1 = Sqrt(op1_e3_l_375601);
          bool _t47E6#1 = GT<real>(_t5604,_t44BF);
          goto JOIN47E7
        ASSIGN5609:  preds = [COND44E6]
          string _t5608#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t5608);
          real realLit560B#3 = 0.e0;
          tensor[3] _t4788#1 = <tensor[3]>[realLit560B,realLit560B,realLit560B];
          goto JOIN4789
        ASSIGN5610:  preds = [COND44C3]
          string _t560F#1 = "fine in cell 1:";
          femData:MeshCell _t5611#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t5613#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t560F,_t5611,_t5613);
          goto JOIN44E3
        ASSIGN5617:  preds = [COND4346]
          bool _t5616#1 = BNot(_t4339);
          if _t5616 then goto ASSIGN561A else goto ASSIGN561D
        ASSIGN561A:  preds = [COND5618]
          bool _t5619#1 = true;
          goto JOIN561C
        JOIN561C:  preds = [ASSIGN561A,ASSIGN561D]
          bool _t434A#1 = phi(_t5619,_t561B)
          goto JOIN434B
        ASSIGN561D:  preds = [COND5618]
          bool _t561B#1 = EQ<int>(step42FC,stepMax42F2);
          goto JOIN561C
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY561E:  preds = []
      tensor[3][] startPoints561F#1 = globals.startPoints3B4A;
    FOREACH5622:  preds = [ASSIGN5620,NEXT5624]
      foreach (x5621 in startPoints561F) on exit goto RETURN5625
      new gg(x5621);
      goto FOREACH5622
    RETURN5625:  preds = [FOREACH5622]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData3B45 (meshData) = <no-default>
  input 0space0409_intermedateGlobal3B46 (space) = <no-default>
  input 0data040B_intermedateGlobal3B47 (data) = <no-default>
  input timeSteps3B48 (timeSteps) = <default>
  input timeEps3B49 (timeEps) = <default>
  input startPoints3B4A (startPoints) = <no-default>
  input stepSize3B4B (stepSize) = <default>
  input stepMax3B4C (stepMax) = <default>
  input M3B4D (M) = <no-default>
  input center3B4E (center) = <no-default>
  global femData:FemFunc data3B4F
  global femData:Mesh _t3B50
  global femData:Space _tX3B51
## functions
  function femData:MeshPos findPos3B9C (femData:Mesh mesh3B9D#19, tensor[3] pos3B9E#4) {
    ENTRY3B9F:  preds = []
      real _t3BA0#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn3BA2#1 = <tensor[3]>[_t3BA0,_t3BA0,_t3BA0];
      int newtonInt3BA4#1 = 0;
      int[] yayCells3BA6#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3B9D,pos3B9E);
    FOREACH3BA9:  preds = [ASSIGN3BA7,NEXT42DB]
      foreach (cellItter3BA8 in yayCells3BA6) on exit goto ASSIGN42DD
      int _t3BAA#1 = 16;
      int[] _t3BAC#1 = Range(newtonInt3BA4,_t3BAA);
    FOREACH3BAF:  preds = [ASSIGN3BAD,NEXT42DA]
      foreach (newtonItter3BAE in _t3BAC) on exit goto NEXT42DB
        tensor[3] xn417E#4 = phi(xn3BA2,xn4242)
      int ilit3BB1#1 = 4;
      int mulRes3BB2#4 = IMul(cellItter3BA8,ilit3BB1);
      int addRes3BB4#1 = mulRes3BB2;
      int idx3BB5#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BB4);
      int ilit3BB6#1 = 1;
      int addRes3BB7#1 = IAdd(mulRes3BB2,ilit3BB6);
      int idx3BB8#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BB7);
      int ilit3BB9#1 = 2;
      int addRes3BBA#1 = IAdd(mulRes3BB2,ilit3BB9);
      int idx3BBB#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BBA);
      int ilit3BBC#1 = 3;
      int addRes3BBD#1 = IAdd(mulRes3BB2,ilit3BBC);
      int idx3BBE#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BBD);
      int ilit3BD2#4 = 3;
      int idx3BD3#1 = idx3BB5;
      int mulRes3BD4#3 = IMul(ilit3BD2,idx3BD3);
      int addRes3BD5#1 = mulRes3BD4;
      int ilit3BD6#4 = 1;
      int addRes3BD7#1 = IAdd(ilit3BD6,mulRes3BD4);
      int ilit3BD8#4 = 2;
      int addRes3BD9#1 = IAdd(ilit3BD8,mulRes3BD4);
      real dof_load3BDA#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD5);
      real dof_load3BDB#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD7);
      real dof_load3BDC#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD9);
      int idx3BDE#1 = idx3BB8;
      int mulRes3BDF#3 = IMul(ilit3BD2,idx3BDE);
      int addRes3BE0#1 = mulRes3BDF;
      int addRes3BE1#1 = IAdd(ilit3BD6,mulRes3BDF);
      int addRes3BE2#1 = IAdd(ilit3BD8,mulRes3BDF);
      real dof_load3BE3#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE0);
      real dof_load3BE4#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE1);
      real dof_load3BE5#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE2);
      int idx3BE7#1 = idx3BBB;
      int mulRes3BE8#3 = IMul(ilit3BD2,idx3BE7);
      int addRes3BE9#1 = mulRes3BE8;
      int addRes3BEA#1 = IAdd(ilit3BD6,mulRes3BE8);
      int addRes3BEB#1 = IAdd(ilit3BD8,mulRes3BE8);
      real dof_load3BEC#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE9);
      real dof_load3BED#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BEA);
      real dof_load3BEE#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BEB);
      int idx3BF0#1 = idx3BBE;
      int mulRes3BF1#3 = IMul(ilit3BD2,idx3BF0);
      int addRes3BF2#1 = mulRes3BF1;
      int addRes3BF3#1 = IAdd(ilit3BD6,mulRes3BF1);
      int addRes3BF4#1 = IAdd(ilit3BD8,mulRes3BF1);
      real dof_load3BF5#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF2);
      real dof_load3BF6#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF3);
      real dof_load3BF7#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF4);
      real coeff3C28#1 = -0.1e1;
      real one3C29#4 = 0.1e1;
      real prod3C2A#1 = RMul(one3C29,one3C29);
      real prod3C2B#2 = RMul(one3C29,prod3C2A);
      real basisEval3C2C#6 = RMul(coeff3C28,prod3C2B);
      real basisEval3C2D#6 = RMul(one3C29,prod3C2B);
      real basisEval3C2E#12 = 0.e0;
      real r3C43#3 = dof_load3BDA;
      real r3C44#3 = basisEval3C2C;
      real r3C45#1 = RMul(r3C43,r3C44);
      real r3C46#3 = dof_load3BE3;
      real r3C47#3 = basisEval3C2D;
      real r3C48#1 = RMul(r3C46,r3C47);
      real r3C49#3 = dof_load3BEC;
      real r3C4A#3 = basisEval3C2E;
      real r3C4B#1 = RMul(r3C49,r3C4A);
      real r3C4C#3 = dof_load3BF5;
      real r3C4D#3 = basisEval3C2E;
      real r3C4E#1 = RMul(r3C4C,r3C4D);
      real r3C4F#1 = RAdd(r3C45,r3C48);
      real r3C50#1 = RAdd(r3C4F,r3C4B);
      real r3C51#2 = RAdd(r3C50,r3C4E);
      real r3C52#3 = basisEval3C2C;
      real r3C53#1 = RMul(r3C43,r3C52);
      real r3C54#3 = basisEval3C2E;
      real r3C55#1 = RMul(r3C46,r3C54);
      real r3C56#3 = basisEval3C2D;
      real r3C57#1 = RMul(r3C49,r3C56);
      real r3C58#3 = basisEval3C2E;
      real r3C59#1 = RMul(r3C4C,r3C58);
      real r3C5A#1 = RAdd(r3C53,r3C55);
      real r3C5B#1 = RAdd(r3C5A,r3C57);
      real r3C5C#2 = RAdd(r3C5B,r3C59);
      real r3C5D#3 = basisEval3C2C;
      real r3C5E#1 = RMul(r3C43,r3C5D);
      real r3C5F#3 = basisEval3C2E;
      real r3C60#1 = RMul(r3C46,r3C5F);
      real r3C61#3 = basisEval3C2E;
      real r3C62#1 = RMul(r3C49,r3C61);
      real r3C63#3 = basisEval3C2D;
      real r3C64#1 = RMul(r3C4C,r3C63);
      real r3C65#1 = RAdd(r3C5E,r3C60);
      real r3C66#1 = RAdd(r3C65,r3C62);
      real r3C67#2 = RAdd(r3C66,r3C64);
      real r3C69#3 = dof_load3BDB;
      real r3C6A#1 = RMul(r3C69,r3C44);
      real r3C6B#3 = dof_load3BE4;
      real r3C6C#1 = RMul(r3C6B,r3C47);
      real r3C6D#3 = dof_load3BED;
      real r3C6E#1 = RMul(r3C6D,r3C4A);
      real r3C6F#3 = dof_load3BF6;
      real r3C70#1 = RMul(r3C6F,r3C4D);
      real r3C71#1 = RAdd(r3C6A,r3C6C);
      real r3C72#1 = RAdd(r3C71,r3C6E);
      real r3C73#2 = RAdd(r3C72,r3C70);
      real r3C74#1 = RMul(r3C69,r3C52);
      real r3C75#1 = RMul(r3C6B,r3C54);
      real r3C76#1 = RMul(r3C6D,r3C56);
      real r3C77#1 = RMul(r3C6F,r3C58);
      real r3C78#1 = RAdd(r3C74,r3C75);
      real r3C79#1 = RAdd(r3C78,r3C76);
      real r3C7A#2 = RAdd(r3C79,r3C77);
      real r3C7B#1 = RMul(r3C69,r3C5D);
      real r3C7C#1 = RMul(r3C6B,r3C5F);
      real r3C7D#1 = RMul(r3C6D,r3C61);
      real r3C7E#1 = RMul(r3C6F,r3C63);
      real r3C7F#1 = RAdd(r3C7B,r3C7C);
      real r3C80#1 = RAdd(r3C7F,r3C7D);
      real r3C81#2 = RAdd(r3C80,r3C7E);
      real r3C83#3 = dof_load3BDC;
      real r3C84#1 = RMul(r3C83,r3C44);
      real r3C85#3 = dof_load3BE5;
      real r3C86#1 = RMul(r3C85,r3C47);
      real r3C87#3 = dof_load3BEE;
      real r3C88#1 = RMul(r3C87,r3C4A);
      real r3C89#3 = dof_load3BF7;
      real r3C8A#1 = RMul(r3C89,r3C4D);
      real r3C8B#1 = RAdd(r3C84,r3C86);
      real r3C8C#1 = RAdd(r3C8B,r3C88);
      real r3C8D#2 = RAdd(r3C8C,r3C8A);
      real r3C8E#1 = RMul(r3C83,r3C52);
      real r3C8F#1 = RMul(r3C85,r3C54);
      real r3C90#1 = RMul(r3C87,r3C56);
      real r3C91#1 = RMul(r3C89,r3C58);
      real r3C92#1 = RAdd(r3C8E,r3C8F);
      real r3C93#1 = RAdd(r3C92,r3C90);
      real r3C94#2 = RAdd(r3C93,r3C91);
      real r3C95#1 = RMul(r3C83,r3C5D);
      real r3C96#1 = RMul(r3C85,r3C5F);
      real r3C97#1 = RMul(r3C87,r3C61);
      real r3C98#1 = RMul(r3C89,r3C63);
      real r3C99#1 = RAdd(r3C95,r3C96);
      real r3C9A#1 = RAdd(r3C99,r3C97);
      real r3C9B#2 = RAdd(r3C9A,r3C98);
      real realLit3CFA#9 = 0.e0;
      real r3CFB#3 = r3C51;
      real r3CFC#3 = RMul(realLit3CFA,r3CFB);
      real r3CFD#3 = r3C73;
      real r3CFE#3 = RMul(realLit3CFA,r3CFD);
      real r3CFF#3 = r3C8D;
      real r3D00#5 = RMul(realLit3CFA,r3CFF);
      real r3D01#3 = RAdd(r3CFC,r3CFE);
      real r3D02#3 = RAdd(r3D01,r3D00);
      real r3D03#3 = r3C5C;
      real r3D04#3 = RMul(realLit3CFA,r3D03);
      real r3D05#3 = r3C7A;
      real r3D06#3 = RMul(realLit3CFA,r3D05);
      real r3D07#3 = r3C94;
      real r3D08#5 = RMul(realLit3CFA,r3D07);
      real r3D09#3 = RAdd(r3D04,r3D06);
      real r3D0A#3 = RAdd(r3D09,r3D08);
      real r3D0B#3 = r3C67;
      real r3D0C#3 = RMul(realLit3CFA,r3D0B);
      real r3D0D#3 = r3C81;
      real r3D0E#3 = RMul(realLit3CFA,r3D0D);
      real r3D0F#3 = r3C9B;
      real r3D10#5 = RMul(realLit3CFA,r3D0F);
      real r3D11#3 = RAdd(r3D0C,r3D0E);
      real r3D12#3 = RAdd(r3D11,r3D10);
      real realLit3D14#9 = -0.1e1;
      real r3D15#1 = RMul(realLit3D14,r3CFF);
      real r3D16#1 = RAdd(r3D01,r3D15);
      real r3D17#1 = RMul(realLit3D14,r3D07);
      real r3D18#1 = RAdd(r3D09,r3D17);
      real r3D19#1 = RMul(realLit3D14,r3D0F);
      real r3D1A#1 = RAdd(r3D11,r3D19);
      real realLit3D1C#9 = 0.1e1;
      real r3D1D#1 = RMul(realLit3D1C,r3CFD);
      real r3D1E#1 = RAdd(r3CFC,r3D1D);
      real r3D1F#1 = RAdd(r3D1E,r3D00);
      real r3D20#1 = RMul(realLit3D1C,r3D05);
      real r3D21#1 = RAdd(r3D04,r3D20);
      real r3D22#1 = RAdd(r3D21,r3D08);
      real r3D23#1 = RMul(realLit3D1C,r3D0D);
      real r3D24#1 = RAdd(r3D0C,r3D23);
      real r3D25#1 = RAdd(r3D24,r3D10);
      real r3D28#1 = RMul(realLit3D1C,r3CFF);
      real r3D29#1 = RAdd(r3D01,r3D28);
      real r3D2A#1 = RMul(realLit3D1C,r3D07);
      real r3D2B#1 = RAdd(r3D09,r3D2A);
      real r3D2C#1 = RMul(realLit3D1C,r3D0F);
      real r3D2D#1 = RAdd(r3D11,r3D2C);
      real r3D2F#1 = RMul(realLit3D14,r3CFB);
      real r3D30#1 = RAdd(r3D2F,r3CFE);
      real r3D31#1 = RAdd(r3D30,r3D00);
      real r3D32#1 = RMul(realLit3D14,r3D03);
      real r3D33#1 = RAdd(r3D32,r3D06);
      real r3D34#1 = RAdd(r3D33,r3D08);
      real r3D35#1 = RMul(realLit3D14,r3D0B);
      real r3D36#1 = RAdd(r3D35,r3D0E);
      real r3D37#1 = RAdd(r3D36,r3D10);
      real r3D3A#1 = RMul(realLit3D14,r3CFD);
      real r3D3B#1 = RAdd(r3CFC,r3D3A);
      real r3D3C#1 = RAdd(r3D3B,r3D00);
      real r3D3D#1 = RMul(realLit3D14,r3D05);
      real r3D3E#1 = RAdd(r3D04,r3D3D);
      real r3D3F#1 = RAdd(r3D3E,r3D08);
      real r3D40#1 = RMul(realLit3D14,r3D0D);
      real r3D41#1 = RAdd(r3D0C,r3D40);
      real r3D42#1 = RAdd(r3D41,r3D10);
      real r3D44#1 = RMul(realLit3D1C,r3CFB);
      real r3D45#1 = RAdd(r3D44,r3CFE);
      real r3D46#1 = RAdd(r3D45,r3D00);
      real r3D47#1 = RMul(realLit3D1C,r3D03);
      real r3D48#1 = RAdd(r3D47,r3D06);
      real r3D49#1 = RAdd(r3D48,r3D08);
      real r3D4A#1 = RMul(realLit3D1C,r3D0B);
      real r3D4B#1 = RAdd(r3D4A,r3D0E);
      real r3D4C#1 = RAdd(r3D4B,r3D10);
      real r3DA7#9 = r3C51;
      real r3DA8#3 = r3D02;
      real r3DA9#1 = RMul(r3DA7,r3DA8);
      real r3DAA#9 = r3C73;
      real r3DAB#3 = r3D29;
      real r3DAC#1 = RMul(r3DAA,r3DAB);
      real r3DAD#9 = r3C8D;
      real r3DAE#3 = r3D3C;
      real r3DAF#1 = RMul(r3DAD,r3DAE);
      real r3DB0#1 = RAdd(r3DA9,r3DAC);
      real r3DB1#1 = RAdd(r3DB0,r3DAF);
      real r3DB2#3 = r3D0A;
      real r3DB3#1 = RMul(r3DA7,r3DB2);
      real r3DB4#3 = r3D2B;
      real r3DB5#1 = RMul(r3DAA,r3DB4);
      real r3DB6#3 = r3D3F;
      real r3DB7#1 = RMul(r3DAD,r3DB6);
      real r3DB8#1 = RAdd(r3DB3,r3DB5);
      real r3DB9#1 = RAdd(r3DB8,r3DB7);
      real r3DBA#3 = r3D12;
      real r3DBB#1 = RMul(r3DA7,r3DBA);
      real r3DBC#3 = r3D2D;
      real r3DBD#1 = RMul(r3DAA,r3DBC);
      real r3DBE#3 = r3D42;
      real r3DBF#1 = RMul(r3DAD,r3DBE);
      real r3DC0#1 = RAdd(r3DBB,r3DBD);
      real r3DC1#1 = RAdd(r3DC0,r3DBF);
      real r3DC3#3 = r3D16;
      real r3DC4#1 = RMul(r3DA7,r3DC3);
      real r3DC5#3 = r3D02;
      real r3DC6#1 = RMul(r3DAA,r3DC5);
      real r3DC7#3 = r3D46;
      real r3DC8#1 = RMul(r3DAD,r3DC7);
      real r3DC9#1 = RAdd(r3DC4,r3DC6);
      real r3DCA#1 = RAdd(r3DC9,r3DC8);
      real r3DCB#3 = r3D18;
      real r3DCC#1 = RMul(r3DA7,r3DCB);
      real r3DCD#3 = r3D0A;
      real r3DCE#1 = RMul(r3DAA,r3DCD);
      real r3DCF#3 = r3D49;
      real r3DD0#1 = RMul(r3DAD,r3DCF);
      real r3DD1#1 = RAdd(r3DCC,r3DCE);
      real r3DD2#1 = RAdd(r3DD1,r3DD0);
      real r3DD3#3 = r3D1A;
      real r3DD4#1 = RMul(r3DA7,r3DD3);
      real r3DD5#3 = r3D12;
      real r3DD6#1 = RMul(r3DAA,r3DD5);
      real r3DD7#3 = r3D4C;
      real r3DD8#1 = RMul(r3DAD,r3DD7);
      real r3DD9#1 = RAdd(r3DD4,r3DD6);
      real r3DDA#1 = RAdd(r3DD9,r3DD8);
      real r3DDC#3 = r3D1F;
      real r3DDD#1 = RMul(r3DA7,r3DDC);
      real r3DDE#3 = r3D31;
      real r3DDF#1 = RMul(r3DAA,r3DDE);
      real r3DE0#3 = r3D02;
      real r3DE1#1 = RMul(r3DAD,r3DE0);
      real r3DE2#1 = RAdd(r3DDD,r3DDF);
      real r3DE3#1 = RAdd(r3DE2,r3DE1);
      real r3DE4#3 = r3D22;
      real r3DE5#1 = RMul(r3DA7,r3DE4);
      real r3DE6#3 = r3D34;
      real r3DE7#1 = RMul(r3DAA,r3DE6);
      real r3DE8#3 = r3D0A;
      real r3DE9#1 = RMul(r3DAD,r3DE8);
      real r3DEA#1 = RAdd(r3DE5,r3DE7);
      real r3DEB#1 = RAdd(r3DEA,r3DE9);
      real r3DEC#3 = r3D25;
      real r3DED#1 = RMul(r3DA7,r3DEC);
      real r3DEE#3 = r3D37;
      real r3DEF#1 = RMul(r3DAA,r3DEE);
      real r3DF0#3 = r3D12;
      real r3DF1#1 = RMul(r3DAD,r3DF0);
      real r3DF2#1 = RAdd(r3DED,r3DEF);
      real r3DF3#1 = RAdd(r3DF2,r3DF1);
      real r3DF6#9 = r3C5C;
      real r3DF7#1 = RMul(r3DF6,r3DA8);
      real r3DF8#9 = r3C7A;
      real r3DF9#1 = RMul(r3DF8,r3DAB);
      real r3DFA#9 = r3C94;
      real r3DFB#1 = RMul(r3DFA,r3DAE);
      real r3DFC#1 = RAdd(r3DF7,r3DF9);
      real r3DFD#1 = RAdd(r3DFC,r3DFB);
      real r3DFE#1 = RMul(r3DF6,r3DB2);
      real r3DFF#1 = RMul(r3DF8,r3DB4);
      real r3E00#1 = RMul(r3DFA,r3DB6);
      real r3E01#1 = RAdd(r3DFE,r3DFF);
      real r3E02#1 = RAdd(r3E01,r3E00);
      real r3E03#1 = RMul(r3DF6,r3DBA);
      real r3E04#1 = RMul(r3DF8,r3DBC);
      real r3E05#1 = RMul(r3DFA,r3DBE);
      real r3E06#1 = RAdd(r3E03,r3E04);
      real r3E07#1 = RAdd(r3E06,r3E05);
      real r3E09#1 = RMul(r3DF6,r3DC3);
      real r3E0A#1 = RMul(r3DF8,r3DC5);
      real r3E0B#1 = RMul(r3DFA,r3DC7);
      real r3E0C#1 = RAdd(r3E09,r3E0A);
      real r3E0D#1 = RAdd(r3E0C,r3E0B);
      real r3E0E#1 = RMul(r3DF6,r3DCB);
      real r3E0F#1 = RMul(r3DF8,r3DCD);
      real r3E10#1 = RMul(r3DFA,r3DCF);
      real r3E11#1 = RAdd(r3E0E,r3E0F);
      real r3E12#1 = RAdd(r3E11,r3E10);
      real r3E13#1 = RMul(r3DF6,r3DD3);
      real r3E14#1 = RMul(r3DF8,r3DD5);
      real r3E15#1 = RMul(r3DFA,r3DD7);
      real r3E16#1 = RAdd(r3E13,r3E14);
      real r3E17#1 = RAdd(r3E16,r3E15);
      real r3E19#1 = RMul(r3DF6,r3DDC);
      real r3E1A#1 = RMul(r3DF8,r3DDE);
      real r3E1B#1 = RMul(r3DFA,r3DE0);
      real r3E1C#1 = RAdd(r3E19,r3E1A);
      real r3E1D#1 = RAdd(r3E1C,r3E1B);
      real r3E1E#1 = RMul(r3DF6,r3DE4);
      real r3E1F#1 = RMul(r3DF8,r3DE6);
      real r3E20#1 = RMul(r3DFA,r3DE8);
      real r3E21#1 = RAdd(r3E1E,r3E1F);
      real r3E22#1 = RAdd(r3E21,r3E20);
      real r3E23#1 = RMul(r3DF6,r3DEC);
      real r3E24#1 = RMul(r3DF8,r3DEE);
      real r3E25#1 = RMul(r3DFA,r3DF0);
      real r3E26#1 = RAdd(r3E23,r3E24);
      real r3E27#1 = RAdd(r3E26,r3E25);
      real r3E2A#9 = r3C67;
      real r3E2B#1 = RMul(r3E2A,r3DA8);
      real r3E2C#9 = r3C81;
      real r3E2D#1 = RMul(r3E2C,r3DAB);
      real r3E2E#9 = r3C9B;
      real r3E2F#1 = RMul(r3E2E,r3DAE);
      real r3E30#1 = RAdd(r3E2B,r3E2D);
      real r3E31#1 = RAdd(r3E30,r3E2F);
      real r3E32#1 = RMul(r3E2A,r3DB2);
      real r3E33#1 = RMul(r3E2C,r3DB4);
      real r3E34#1 = RMul(r3E2E,r3DB6);
      real r3E35#1 = RAdd(r3E32,r3E33);
      real r3E36#1 = RAdd(r3E35,r3E34);
      real r3E37#1 = RMul(r3E2A,r3DBA);
      real r3E38#1 = RMul(r3E2C,r3DBC);
      real r3E39#1 = RMul(r3E2E,r3DBE);
      real r3E3A#1 = RAdd(r3E37,r3E38);
      real r3E3B#1 = RAdd(r3E3A,r3E39);
      real r3E3D#1 = RMul(r3E2A,r3DC3);
      real r3E3E#1 = RMul(r3E2C,r3DC5);
      real r3E3F#1 = RMul(r3E2E,r3DC7);
      real r3E40#1 = RAdd(r3E3D,r3E3E);
      real r3E41#1 = RAdd(r3E40,r3E3F);
      real r3E42#1 = RMul(r3E2A,r3DCB);
      real r3E43#1 = RMul(r3E2C,r3DCD);
      real r3E44#1 = RMul(r3E2E,r3DCF);
      real r3E45#1 = RAdd(r3E42,r3E43);
      real r3E46#1 = RAdd(r3E45,r3E44);
      real r3E47#1 = RMul(r3E2A,r3DD3);
      real r3E48#1 = RMul(r3E2C,r3DD5);
      real r3E49#1 = RMul(r3E2E,r3DD7);
      real r3E4A#1 = RAdd(r3E47,r3E48);
      real r3E4B#1 = RAdd(r3E4A,r3E49);
      real r3E4D#1 = RMul(r3E2A,r3DDC);
      real r3E4E#1 = RMul(r3E2C,r3DDE);
      real r3E4F#1 = RMul(r3E2E,r3DE0);
      real r3E50#1 = RAdd(r3E4D,r3E4E);
      real r3E51#1 = RAdd(r3E50,r3E4F);
      real r3E52#1 = RMul(r3E2A,r3DE4);
      real r3E53#1 = RMul(r3E2C,r3DE6);
      real r3E54#1 = RMul(r3E2E,r3DE8);
      real r3E55#1 = RAdd(r3E52,r3E53);
      real r3E56#1 = RAdd(r3E55,r3E54);
      real r3E57#1 = RMul(r3E2A,r3DEC);
      real r3E58#1 = RMul(r3E2C,r3DEE);
      real r3E59#1 = RMul(r3E2E,r3DF0);
      real r3E5A#1 = RAdd(r3E57,r3E58);
      real r3E5B#1 = RAdd(r3E5A,r3E59);
      real r3F18#1 = dof_load3BDA;
      real r3F19#3 = basisEval3C2C;
      real r3F1A#1 = RMul(r3F18,r3F19);
      real r3F1B#1 = dof_load3BE3;
      real r3F1C#3 = basisEval3C2D;
      real r3F1D#1 = RMul(r3F1B,r3F1C);
      real r3F1E#1 = dof_load3BEC;
      real r3F1F#3 = basisEval3C2E;
      real r3F20#1 = RMul(r3F1E,r3F1F);
      real r3F21#1 = dof_load3BF5;
      real r3F22#3 = basisEval3C2E;
      real r3F23#1 = RMul(r3F21,r3F22);
      real r3F24#1 = RAdd(r3F1A,r3F1D);
      real r3F25#1 = RAdd(r3F24,r3F20);
      real r3F26#1 = RAdd(r3F25,r3F23);
      real r3F27#1 = dof_load3BDB;
      real r3F28#1 = RMul(r3F27,r3F19);
      real r3F29#1 = dof_load3BE4;
      real r3F2A#1 = RMul(r3F29,r3F1C);
      real r3F2B#1 = dof_load3BED;
      real r3F2C#1 = RMul(r3F2B,r3F1F);
      real r3F2D#1 = dof_load3BF6;
      real r3F2E#1 = RMul(r3F2D,r3F22);
      real r3F2F#1 = RAdd(r3F28,r3F2A);
      real r3F30#1 = RAdd(r3F2F,r3F2C);
      real r3F31#1 = RAdd(r3F30,r3F2E);
      real r3F32#1 = dof_load3BDC;
      real r3F33#1 = RMul(r3F32,r3F19);
      real r3F34#1 = dof_load3BE5;
      real r3F35#1 = RMul(r3F34,r3F1C);
      real r3F36#1 = dof_load3BEE;
      real r3F37#1 = RMul(r3F36,r3F1F);
      real r3F38#1 = dof_load3BF7;
      real r3F39#1 = RMul(r3F38,r3F22);
      real r3F3A#1 = RAdd(r3F33,r3F35);
      real r3F3B#1 = RAdd(r3F3A,r3F37);
      real r3F3C#1 = RAdd(r3F3B,r3F39);
      tensor[3] probe_l_143F17#1 = <tensor[3]>[r3F26,r3F31,r3F3C];
      real r3F65#1 = dof_load3BDA;
      real r3F66#3 = basisEval3C2C;
      real r3F67#1 = RMul(r3F65,r3F66);
      real r3F68#1 = dof_load3BE3;
      real r3F69#3 = basisEval3C2E;
      real r3F6A#1 = RMul(r3F68,r3F69);
      real r3F6B#1 = dof_load3BEC;
      real r3F6C#3 = basisEval3C2D;
      real r3F6D#1 = RMul(r3F6B,r3F6C);
      real r3F6E#1 = dof_load3BF5;
      real r3F6F#3 = basisEval3C2E;
      real r3F70#1 = RMul(r3F6E,r3F6F);
      real r3F71#1 = RAdd(r3F67,r3F6A);
      real r3F72#1 = RAdd(r3F71,r3F6D);
      real r3F73#1 = RAdd(r3F72,r3F70);
      real r3F74#1 = dof_load3BDB;
      real r3F75#1 = RMul(r3F74,r3F66);
      real r3F76#1 = dof_load3BE4;
      real r3F77#1 = RMul(r3F76,r3F69);
      real r3F78#1 = dof_load3BED;
      real r3F79#1 = RMul(r3F78,r3F6C);
      real r3F7A#1 = dof_load3BF6;
      real r3F7B#1 = RMul(r3F7A,r3F6F);
      real r3F7C#1 = RAdd(r3F75,r3F77);
      real r3F7D#1 = RAdd(r3F7C,r3F79);
      real r3F7E#1 = RAdd(r3F7D,r3F7B);
      real r3F7F#1 = dof_load3BDC;
      real r3F80#1 = RMul(r3F7F,r3F66);
      real r3F81#1 = dof_load3BE5;
      real r3F82#1 = RMul(r3F81,r3F69);
      real r3F83#1 = dof_load3BEE;
      real r3F84#1 = RMul(r3F83,r3F6C);
      real r3F85#1 = dof_load3BF7;
      real r3F86#1 = RMul(r3F85,r3F6F);
      real r3F87#1 = RAdd(r3F80,r3F82);
      real r3F88#1 = RAdd(r3F87,r3F84);
      real r3F89#1 = RAdd(r3F88,r3F86);
      tensor[3] probe_l_153F64#3 = <tensor[3]>[r3F73,r3F7E,r3F89];
      real r3FB2#1 = dof_load3BDA;
      real r3FB3#3 = basisEval3C2C;
      real r3FB4#1 = RMul(r3FB2,r3FB3);
      real r3FB5#1 = dof_load3BE3;
      real r3FB6#3 = basisEval3C2E;
      real r3FB7#1 = RMul(r3FB5,r3FB6);
      real r3FB8#1 = dof_load3BEC;
      real r3FB9#3 = basisEval3C2E;
      real r3FBA#1 = RMul(r3FB8,r3FB9);
      real r3FBB#1 = dof_load3BF5;
      real r3FBC#3 = basisEval3C2D;
      real r3FBD#1 = RMul(r3FBB,r3FBC);
      real r3FBE#1 = RAdd(r3FB4,r3FB7);
      real r3FBF#1 = RAdd(r3FBE,r3FBA);
      real r3FC0#1 = RAdd(r3FBF,r3FBD);
      real r3FC1#1 = dof_load3BDB;
      real r3FC2#1 = RMul(r3FC1,r3FB3);
      real r3FC3#1 = dof_load3BE4;
      real r3FC4#1 = RMul(r3FC3,r3FB6);
      real r3FC5#1 = dof_load3BED;
      real r3FC6#1 = RMul(r3FC5,r3FB9);
      real r3FC7#1 = dof_load3BF6;
      real r3FC8#1 = RMul(r3FC7,r3FBC);
      real r3FC9#1 = RAdd(r3FC2,r3FC4);
      real r3FCA#1 = RAdd(r3FC9,r3FC6);
      real r3FCB#1 = RAdd(r3FCA,r3FC8);
      real r3FCC#1 = dof_load3BDC;
      real r3FCD#1 = RMul(r3FCC,r3FB3);
      real r3FCE#1 = dof_load3BE5;
      real r3FCF#1 = RMul(r3FCE,r3FB6);
      real r3FD0#1 = dof_load3BEE;
      real r3FD1#1 = RMul(r3FD0,r3FB9);
      real r3FD2#1 = dof_load3BF7;
      real r3FD3#1 = RMul(r3FD2,r3FBC);
      real r3FD4#1 = RAdd(r3FCD,r3FCF);
      real r3FD5#1 = RAdd(r3FD4,r3FD1);
      real r3FD6#1 = RAdd(r3FD5,r3FD3);
      real realLit3FFF#3 = 0.e0;
      real r4000#3 = r3FC0;
      real r4001#3 = RMul(realLit3FFF,r4000);
      real r4002#3 = r3FCB;
      real r4003#3 = RMul(realLit3FFF,r4002);
      real r4004#3 = r3FD6;
      real r4005#5 = RMul(realLit3FFF,r4004);
      real r4006#3 = RAdd(r4001,r4003);
      real r4007#3 = RAdd(r4006,r4005);
      real realLit4008#3 = 0.1e1;
      real r4009#1 = RMul(realLit4008,r4004);
      real r400A#1 = RAdd(r4006,r4009);
      real realLit400B#3 = -0.1e1;
      real r400C#1 = RMul(realLit400B,r4002);
      real r400D#1 = RAdd(r4001,r400C);
      real r400E#1 = RAdd(r400D,r4005);
      tensor[3] tensor400F#1 = <tensor[3]>[r4007,r400A,r400E];
      real r4010#1 = RMul(realLit400B,r4004);
      real r4011#1 = RAdd(r4006,r4010);
      real r4012#1 = RMul(realLit4008,r4000);
      real r4013#1 = RAdd(r4012,r4003);
      real r4014#1 = RAdd(r4013,r4005);
      tensor[3] tensor4015#1 = <tensor[3]>[r4011,r4007,r4014];
      real r4016#1 = RMul(realLit4008,r4002);
      real r4017#1 = RAdd(r4001,r4016);
      real r4018#1 = RAdd(r4017,r4005);
      real r4019#1 = RMul(realLit400B,r4000);
      real r401A#1 = RAdd(r4019,r4003);
      real r401B#1 = RAdd(r401A,r4005);
      tensor[3] tensor401C#1 = <tensor[3]>[r4018,r401B,r4007];
      tensor[3] projParam403E#1 = tensor400F;
      real vdot403F#1 = VDot<3>(probe_l_153F64,projParam403E);
      tensor[3] projParam4040#1 = tensor4015;
      real vdot4041#1 = VDot<3>(probe_l_153F64,projParam4040);
      tensor[3] projParam4042#1 = tensor401C;
      real vdot4043#1 = VDot<3>(probe_l_153F64,projParam4042);
      tensor[3] op1_e3_l_18403D#1 = <tensor[3]>[vdot403F,vdot4041,vdot4043];
      real op1_e3_l_19404C#1 = VDot<3>(probe_l_143F17,op1_e3_l_18403D);
      real realLit4050#27 = 0.e0;
      real r4051#1 = r3DB1;
      real r4052#2 = RMul(realLit4050,r4051);
      real r4053#2 = r3DB9;
      real r4054#1 = RMul(realLit4050,r4053);
      real r4055#2 = r3DC1;
      real r4056#2 = RMul(realLit4050,r4055);
      real r4057#2 = r3DFD;
      real r4058#2 = RMul(realLit4050,r4057);
      real r4059#1 = r3E02;
      real r405A#3 = RMul(realLit4050,r4059);
      real realLit405B#9 = 0.1e1;
      real r405C#2 = r3E07;
      real r405D#1 = RMul(realLit405B,r405C);
      real r405E#2 = r3E31;
      real r405F#2 = RMul(realLit4050,r405E);
      real realLit4060#9 = -0.1e1;
      real r4061#2 = r3E36;
      real r4062#1 = RMul(realLit4060,r4061);
      real r4063#1 = r3E3B;
      real r4064#3 = RMul(realLit4050,r4063);
      real r4065#2 = RAdd(r4052,r4054);
      real r4066#1 = RAdd(r4065,r4056);
      real r4067#1 = RAdd(r4066,r4058);
      real r4068#1 = RAdd(r4067,r405A);
      real r4069#1 = RAdd(r4068,r405D);
      real r406A#1 = RAdd(r4069,r405F);
      real r406B#1 = RAdd(r406A,r4062);
      real r406C#1 = RAdd(r406B,r4064);
      real r406D#1 = r3DCA;
      real r406E#2 = RMul(realLit4050,r406D);
      real r406F#2 = r3DD2;
      real r4070#1 = RMul(realLit4050,r406F);
      real r4071#2 = r3DDA;
      real r4072#2 = RMul(realLit4050,r4071);
      real r4073#2 = r3E0D;
      real r4074#2 = RMul(realLit4050,r4073);
      real r4075#1 = r3E12;
      real r4076#3 = RMul(realLit4050,r4075);
      real r4077#2 = r3E17;
      real r4078#1 = RMul(realLit405B,r4077);
      real r4079#2 = r3E41;
      real r407A#2 = RMul(realLit4050,r4079);
      real r407B#2 = r3E46;
      real r407C#1 = RMul(realLit4060,r407B);
      real r407D#1 = r3E4B;
      real r407E#3 = RMul(realLit4050,r407D);
      real r407F#2 = RAdd(r406E,r4070);
      real r4080#1 = RAdd(r407F,r4072);
      real r4081#1 = RAdd(r4080,r4074);
      real r4082#1 = RAdd(r4081,r4076);
      real r4083#1 = RAdd(r4082,r4078);
      real r4084#1 = RAdd(r4083,r407A);
      real r4085#1 = RAdd(r4084,r407C);
      real r4086#1 = RAdd(r4085,r407E);
      real r4087#1 = r3DE3;
      real r4088#2 = RMul(realLit4050,r4087);
      real r4089#2 = r3DEB;
      real r408A#1 = RMul(realLit4050,r4089);
      real r408B#2 = r3DF3;
      real r408C#2 = RMul(realLit4050,r408B);
      real r408D#2 = r3E1D;
      real r408E#2 = RMul(realLit4050,r408D);
      real r408F#1 = r3E22;
      real r4090#3 = RMul(realLit4050,r408F);
      real r4091#2 = r3E27;
      real r4092#1 = RMul(realLit405B,r4091);
      real r4093#2 = r3E51;
      real r4094#2 = RMul(realLit4050,r4093);
      real r4095#2 = r3E56;
      real r4096#1 = RMul(realLit4060,r4095);
      real r4097#1 = r3E5B;
      real r4098#3 = RMul(realLit4050,r4097);
      real r4099#2 = RAdd(r4088,r408A);
      real r409A#1 = RAdd(r4099,r408C);
      real r409B#1 = RAdd(r409A,r408E);
      real r409C#1 = RAdd(r409B,r4090);
      real r409D#1 = RAdd(r409C,r4092);
      real r409E#1 = RAdd(r409D,r4094);
      real r409F#1 = RAdd(r409E,r4096);
      real r40A0#1 = RAdd(r409F,r4098);
      real r40A2#1 = RMul(realLit4060,r4055);
      real r40A3#2 = RMul(realLit4050,r405C);
      real r40A4#1 = RMul(realLit405B,r405E);
      real r40A5#2 = RMul(realLit4050,r4061);
      real r40A6#1 = RAdd(r4065,r40A2);
      real r40A7#1 = RAdd(r40A6,r4058);
      real r40A8#1 = RAdd(r40A7,r405A);
      real r40A9#1 = RAdd(r40A8,r40A3);
      real r40AA#1 = RAdd(r40A9,r40A4);
      real r40AB#1 = RAdd(r40AA,r40A5);
      real r40AC#1 = RAdd(r40AB,r4064);
      real r40AD#1 = RMul(realLit4060,r4071);
      real r40AE#2 = RMul(realLit4050,r4077);
      real r40AF#1 = RMul(realLit405B,r4079);
      real r40B0#2 = RMul(realLit4050,r407B);
      real r40B1#1 = RAdd(r407F,r40AD);
      real r40B2#1 = RAdd(r40B1,r4074);
      real r40B3#1 = RAdd(r40B2,r4076);
      real r40B4#1 = RAdd(r40B3,r40AE);
      real r40B5#1 = RAdd(r40B4,r40AF);
      real r40B6#1 = RAdd(r40B5,r40B0);
      real r40B7#1 = RAdd(r40B6,r407E);
      real r40B8#1 = RMul(realLit4060,r408B);
      real r40B9#2 = RMul(realLit4050,r4091);
      real r40BA#1 = RMul(realLit405B,r4093);
      real r40BB#2 = RMul(realLit4050,r4095);
      real r40BC#1 = RAdd(r4099,r40B8);
      real r40BD#1 = RAdd(r40BC,r408E);
      real r40BE#1 = RAdd(r40BD,r4090);
      real r40BF#1 = RAdd(r40BE,r40B9);
      real r40C0#1 = RAdd(r40BF,r40BA);
      real r40C1#1 = RAdd(r40C0,r40BB);
      real r40C2#1 = RAdd(r40C1,r4098);
      real r40C4#1 = RMul(realLit405B,r4053);
      real r40C5#1 = RMul(realLit4060,r4057);
      real r40C6#1 = RAdd(r4052,r40C4);
      real r40C7#1 = RAdd(r40C6,r4056);
      real r40C8#1 = RAdd(r40C7,r40C5);
      real r40C9#1 = RAdd(r40C8,r405A);
      real r40CA#1 = RAdd(r40C9,r40A3);
      real r40CB#1 = RAdd(r40CA,r405F);
      real r40CC#1 = RAdd(r40CB,r40A5);
      real r40CD#1 = RAdd(r40CC,r4064);
      real r40CE#1 = RMul(realLit405B,r406F);
      real r40CF#1 = RMul(realLit4060,r4073);
      real r40D0#1 = RAdd(r406E,r40CE);
      real r40D1#1 = RAdd(r40D0,r4072);
      real r40D2#1 = RAdd(r40D1,r40CF);
      real r40D3#1 = RAdd(r40D2,r4076);
      real r40D4#1 = RAdd(r40D3,r40AE);
      real r40D5#1 = RAdd(r40D4,r407A);
      real r40D6#1 = RAdd(r40D5,r40B0);
      real r40D7#1 = RAdd(r40D6,r407E);
      real r40D8#1 = RMul(realLit405B,r4089);
      real r40D9#1 = RMul(realLit4060,r408D);
      real r40DA#1 = RAdd(r4088,r40D8);
      real r40DB#1 = RAdd(r40DA,r408C);
      real r40DC#1 = RAdd(r40DB,r40D9);
      real r40DD#1 = RAdd(r40DC,r4090);
      real r40DE#1 = RAdd(r40DD,r40B9);
      real r40DF#1 = RAdd(r40DE,r4094);
      real r40E0#1 = RAdd(r40DF,r40BB);
      real r40E1#1 = RAdd(r40E0,r4098);
      real realLit4179#1 = 0.2e1;
      real op1_e3_l_214178#9 = RMul(realLit4179,op1_e3_l_19404C);
      real varAcc417F#1 = VIndex<3,0>(xn417E);
      real varAcc4180#1 = VIndex<3,1>(xn417E);
      real varAcc4181#1 = VIndex<3,2>(xn417E);
      real coeff4182#3 = -0.1e1;
      real iden4183#1 = varAcc417F;
      real one4184#11 = 0.1e1;
      real prod4185#2 = RMul(one4184,one4184);
      real prod4186#2 = RMul(iden4183,prod4185);
      real iden4187#1 = varAcc4180;
      real prod4188#1 = RMul(iden4187,one4184);
      real prod4189#2 = RMul(one4184,prod4188);
      real iden418A#1 = varAcc4181;
      real prod418B#1 = RMul(one4184,iden418A);
      real prod418C#2 = RMul(one4184,prod418B);
      real prod418D#1 = RMul(one4184,prod4185);
      real mult418E#1 = RMul(one4184,prod418D);
      real mult418F#1 = RMul(coeff4182,prod418C);
      real mult4190#1 = RMul(coeff4182,prod4189);
      real mult4191#1 = RMul(coeff4182,prod4186);
      real sum4192#1 = RAdd(mult4190,mult4191);
      real sum4193#1 = RAdd(mult418F,sum4192);
      real sum4194#1 = RAdd(mult418E,sum4193);
      real intermediate4195#2 = sum4194;
      real basisEval4196#2 = RMul(one4184,prod4186);
      real basisEval4197#2 = RMul(one4184,prod4189);
      real basisEval4198#2 = RMul(one4184,prod418C);
      real r41B7#1 = dof_load3BDA;
      real r41B8#3 = intermediate4195;
      real r41B9#1 = RMul(r41B7,r41B8);
      real r41BA#1 = dof_load3BE3;
      real r41BB#3 = basisEval4196;
      real r41BC#1 = RMul(r41BA,r41BB);
      real r41BD#1 = dof_load3BEC;
      real r41BE#3 = basisEval4197;
      real r41BF#1 = RMul(r41BD,r41BE);
      real r41C0#1 = dof_load3BF5;
      real r41C1#3 = basisEval4198;
      real r41C2#1 = RMul(r41C0,r41C1);
      real r41C3#1 = RAdd(r41B9,r41BC);
      real r41C4#1 = RAdd(r41C3,r41BF);
      real r41C5#1 = RAdd(r41C4,r41C2);
      real r41C6#1 = dof_load3BDB;
      real r41C7#1 = RMul(r41C6,r41B8);
      real r41C8#1 = dof_load3BE4;
      real r41C9#1 = RMul(r41C8,r41BB);
      real r41CA#1 = dof_load3BED;
      real r41CB#1 = RMul(r41CA,r41BE);
      real r41CC#1 = dof_load3BF6;
      real r41CD#1 = RMul(r41CC,r41C1);
      real r41CE#1 = RAdd(r41C7,r41C9);
      real r41CF#1 = RAdd(r41CE,r41CB);
      real r41D0#1 = RAdd(r41CF,r41CD);
      real r41D1#1 = dof_load3BDC;
      real r41D2#1 = RMul(r41D1,r41B8);
      real r41D3#1 = dof_load3BE5;
      real r41D4#1 = RMul(r41D3,r41BB);
      real r41D5#1 = dof_load3BEE;
      real r41D6#1 = RMul(r41D5,r41BE);
      real r41D7#1 = dof_load3BF7;
      real r41D8#1 = RMul(r41D7,r41C1);
      real r41D9#1 = RAdd(r41D2,r41D4);
      real r41DA#1 = RAdd(r41D9,r41D6);
      real r41DB#1 = RAdd(r41DA,r41D8);
      tensor[3] probe_l_2241B6#1 = <tensor[3]>[r41C5,r41D0,r41DB];
      real r4204#1 = r406C;
      real r4205#1 = RDiv(r4204,op1_e3_l_214178);
      real r4206#1 = r4086;
      real r4207#1 = RDiv(r4206,op1_e3_l_214178);
      real r4208#1 = r40A0;
      real r4209#1 = RDiv(r4208,op1_e3_l_214178);
      tensor[3] tensor420A#2 = <tensor[3]>[r4205,r4207,r4209];
      real r420B#1 = r40AC;
      real r420C#1 = RDiv(r420B,op1_e3_l_214178);
      real r420D#1 = r40B7;
      real r420E#1 = RDiv(r420D,op1_e3_l_214178);
      real r420F#1 = r40C2;
      real r4210#1 = RDiv(r420F,op1_e3_l_214178);
      tensor[3] tensor4211#2 = <tensor[3]>[r420C,r420E,r4210];
      real r4212#1 = r40CD;
      real r4213#1 = RDiv(r4212,op1_e3_l_214178);
      real r4214#1 = r40D7;
      real r4215#1 = RDiv(r4214,op1_e3_l_214178);
      real r4216#1 = r40E1;
      real r4217#1 = RDiv(r4216,op1_e3_l_214178);
      tensor[3] tensor4218#2 = <tensor[3]>[r4213,r4215,r4217];
      tensor[3] op1_e3_l_244230#3 = VSub<3>(probe_l_2241B6,pos3B9E);
      tensor[3] projParam4234#1 = tensor420A;
      real vdot4235#1 = VDot<3>(projParam4234,op1_e3_l_244230);
      tensor[3] projParam4236#1 = tensor4211;
      real vdot4237#1 = VDot<3>(projParam4236,op1_e3_l_244230);
      tensor[3] projParam4238#1 = tensor4218;
      real vdot4239#1 = VDot<3>(projParam4238,op1_e3_l_244230);
      tensor[3] op1_e3_l_254233#1 = <tensor[3]>[vdot4235,vdot4237,vdot4239];
      tensor[3] xn4242#4 = VSub<3>(xn417E,op1_e3_l_254233);
      real _t4245#6 = 0.1e-7;
      real _t4247#1 = RMul(_t4245,_t4245);
      real r424B#1 = dof_load3BDA;
      real r424C#3 = intermediate4195;
      real r424D#1 = RMul(r424B,r424C);
      real r424E#1 = dof_load3BE3;
      real r424F#3 = basisEval4196;
      real r4250#1 = RMul(r424E,r424F);
      real r4251#1 = dof_load3BEC;
      real r4252#3 = basisEval4197;
      real r4253#1 = RMul(r4251,r4252);
      real r4254#1 = dof_load3BF5;
      real r4255#3 = basisEval4198;
      real r4256#1 = RMul(r4254,r4255);
      real r4257#1 = RAdd(r424D,r4250);
      real r4258#1 = RAdd(r4257,r4253);
      real r4259#1 = RAdd(r4258,r4256);
      real r425A#1 = dof_load3BDB;
      real r425B#1 = RMul(r425A,r424C);
      real r425C#1 = dof_load3BE4;
      real r425D#1 = RMul(r425C,r424F);
      real r425E#1 = dof_load3BED;
      real r425F#1 = RMul(r425E,r4252);
      real r4260#1 = dof_load3BF6;
      real r4261#1 = RMul(r4260,r4255);
      real r4262#1 = RAdd(r425B,r425D);
      real r4263#1 = RAdd(r4262,r425F);
      real r4264#1 = RAdd(r4263,r4261);
      real r4265#1 = dof_load3BDC;
      real r4266#1 = RMul(r4265,r424C);
      real r4267#1 = dof_load3BE5;
      real r4268#1 = RMul(r4267,r424F);
      real r4269#1 = dof_load3BEE;
      real r426A#1 = RMul(r4269,r4252);
      real r426B#1 = dof_load3BF7;
      real r426C#1 = RMul(r426B,r4255);
      real r426D#1 = RAdd(r4266,r4268);
      real r426E#1 = RAdd(r426D,r426A);
      real r426F#1 = RAdd(r426E,r426C);
      tensor[3] probe_l_30424A#1 = <tensor[3]>[r4259,r4264,r426F];
      tensor[3] op1_e3_l_324297#3 = VSub<3>(probe_l_30424A,pos3B9E);
      tensor[3] projParam429B#1 = tensor420A;
      real vdot429C#1 = VDot<3>(projParam429B,op1_e3_l_324297);
      tensor[3] projParam429D#1 = tensor4211;
      real vdot429E#1 = VDot<3>(projParam429D,op1_e3_l_324297);
      tensor[3] projParam429F#1 = tensor4218;
      real vdot42A0#1 = VDot<3>(projParam429F,op1_e3_l_324297);
      tensor[3] op1_e3_l_48429A#2 = <tensor[3]>[vdot429C,vdot429E,vdot42A0];
      real _t42A9#1 = VDot<3>(op1_e3_l_48429A,op1_e3_l_48429A);
      bool _t42AC#1 = GTE<real>(_t4247,_t42A9);
      if _t42AC then goto ASSIGN42B0 else goto JOIN42D9
    ASSIGN42B0:  preds = [COND42AE]
      real _t42AF#4 = 0.1e1;
      real _t42B1#1 = RAdd(_t42AF,_t4245);
      tensor[3] _t42B4#1 = <tensor[3]>[_t42AF,_t42AF,_t42AF];
      real _t42B6#1 = VDot<3>(_t42B4,xn4242);
      bool _t42B9#1 = GT<real>(_t42B1,_t42B6);
      tensor[3] _t42BB#1 = <tensor[3]>[_t4245,_t4245,_t4245];
      tensor[3] _t42BD#3 = VAdd<3>(_t42BB,xn4242);
      real _t42C0#1 = VIndex<3,0>(_t42BD);
      real _t42C2#3 = -0.e0;
      bool _t42C4#1 = GT<real>(_t42C0,_t42C2);
      real _t42C6#1 = VIndex<3,1>(_t42BD);
      bool _t42C8#1 = GT<real>(_t42C6,_t42C2);
      real _t42CA#1 = VIndex<3,2>(_t42BD);
      bool _t42CC#1 = GT<real>(_t42CA,_t42C2);
      bool _t42CE#1 = BAnd(_t42C8,_t42CC);
      bool _t42D0#1 = BAnd(_t42C4,_t42CE);
      bool _t42D2#1 = BAnd(_t42B9,_t42D0);
      if _t42D2 then goto ASSIGN42D6 else goto JOIN42D8
    ASSIGN42D6:  preds = [COND42D4]
      femData:MeshPos _t42D5#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3B9D,cellItter3BA8,xn4242,pos3B9E);
      return _t42D5
      goto JOIN42D8
    JOIN42D8:  preds = [*RETURN(_t42D5)42D7,COND42D4]
      goto JOIN42D9
    JOIN42D9:  preds = [JOIN42D8,COND42AE]
      goto FOREACH3BAF
    NEXT42DB:  preds = [FOREACH3BAF]
      goto FOREACH3BA9
    ASSIGN42DD:  preds = [FOREACH3BA9]
      femData:MeshPos _t42DC#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3B9D);
      return _t42DC
}
  function femData:MeshPos fn_2FB47F0 (femData:MeshPos x47F1#5, tensor[3] dPos47F2#1) {
    ENTRY47F3:  preds = []
      femData:Mesh meshData47F4#1 = globals.meshData3B45;
      int timeSteps47F6#1 = globals.timeSteps3B48;
      bool _t47F8#1 = ExtractFemItem<bool,Valid(MeshPos)>(x47F1);
      bool _t47FA#1 = BNot(_t47F8);
      if _t47FA then goto RETURN(x47F1)47FD else goto JOIN47FE
    RETURN(x47F1)47FD:  preds = [COND47FC]
      return x47F1
      goto JOIN47FE
    JOIN47FE:  preds = [*RETURN(x47F1)47FD,COND47FC]
      int _t47FF#1 = 0;
      int[] _t4801#1 = Range(_t47FF,timeSteps47F6);
    FOREACH4804:  preds = [ASSIGN4802,*NEXT4806]
      foreach (i4803 in _t4801) on exit goto ASSIGN4808
      return
      goto FOREACH4804
    ASSIGN4808:  preds = [FOREACH4804]
      string _t4807#1 = "Took stupid way out!\n";
      Print<[string]>(_t4807);
      tensor[3] _t480A#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x47F1);
      int _t480C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x47F1);
      femData:Mesh _t480E#16 = ExtractFem<femData:Mesh,femData:MeshPos>(x47F1);
      int ilit4811#1 = 4;
      int mulRes4812#4 = IMul(_t480C,ilit4811);
      int addRes4814#1 = mulRes4812;
      int idx4815#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes4814);
      int ilit4816#1 = 1;
      int addRes4817#1 = IAdd(mulRes4812,ilit4816);
      int idx4818#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes4817);
      int ilit4819#1 = 2;
      int addRes481A#1 = IAdd(mulRes4812,ilit4819);
      int idx481B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes481A);
      int ilit481C#1 = 3;
      int addRes481D#1 = IAdd(mulRes4812,ilit481C);
      int idx481E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes481D);
      int ilit4832#4 = 3;
      int idx4833#1 = idx4815;
      int mulRes4834#3 = IMul(ilit4832,idx4833);
      int addRes4835#1 = mulRes4834;
      int ilit4836#4 = 1;
      int addRes4837#1 = IAdd(ilit4836,mulRes4834);
      int ilit4838#4 = 2;
      int addRes4839#1 = IAdd(ilit4838,mulRes4834);
      real dof_load483A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4835);
      real dof_load483B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4837);
      real dof_load483C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4839);
      int idx483E#1 = idx4818;
      int mulRes483F#3 = IMul(ilit4832,idx483E);
      int addRes4840#1 = mulRes483F;
      int addRes4841#1 = IAdd(ilit4836,mulRes483F);
      int addRes4842#1 = IAdd(ilit4838,mulRes483F);
      real dof_load4843#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4840);
      real dof_load4844#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4841);
      real dof_load4845#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4842);
      int idx4847#1 = idx481B;
      int mulRes4848#3 = IMul(ilit4832,idx4847);
      int addRes4849#1 = mulRes4848;
      int addRes484A#1 = IAdd(ilit4836,mulRes4848);
      int addRes484B#1 = IAdd(ilit4838,mulRes4848);
      real dof_load484C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4849);
      real dof_load484D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes484A);
      real dof_load484E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes484B);
      int idx4850#1 = idx481E;
      int mulRes4851#3 = IMul(ilit4832,idx4850);
      int addRes4852#1 = mulRes4851;
      int addRes4853#1 = IAdd(ilit4836,mulRes4851);
      int addRes4854#1 = IAdd(ilit4838,mulRes4851);
      real dof_load4855#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4852);
      real dof_load4856#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4853);
      real dof_load4857#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4854);
      real varAcc4885#1 = VIndex<3,0>(_t480A);
      real varAcc4886#1 = VIndex<3,1>(_t480A);
      real varAcc4887#1 = VIndex<3,2>(_t480A);
      real coeff4888#3 = -0.1e1;
      real iden4889#1 = varAcc4885;
      real one488A#11 = 0.1e1;
      real prod488B#2 = RMul(one488A,one488A);
      real prod488C#2 = RMul(iden4889,prod488B);
      real iden488D#1 = varAcc4886;
      real prod488E#1 = RMul(iden488D,one488A);
      real prod488F#2 = RMul(one488A,prod488E);
      real iden4890#1 = varAcc4887;
      real prod4891#1 = RMul(one488A,iden4890);
      real prod4892#2 = RMul(one488A,prod4891);
      real prod4893#1 = RMul(one488A,prod488B);
      real mult4894#1 = RMul(one488A,prod4893);
      real mult4895#1 = RMul(coeff4888,prod4892);
      real mult4896#1 = RMul(coeff4888,prod488F);
      real mult4897#1 = RMul(coeff4888,prod488C);
      real sum4898#1 = RAdd(mult4896,mult4897);
      real sum4899#1 = RAdd(mult4895,sum4898);
      real sum489A#1 = RAdd(mult4894,sum4899);
      real intermediate489B#1 = sum489A;
      real basisEval489C#1 = RMul(one488A,prod488C);
      real basisEval489D#1 = RMul(one488A,prod488F);
      real basisEval489E#1 = RMul(one488A,prod4892);
      real r48BD#1 = dof_load483A;
      real r48BE#3 = intermediate489B;
      real r48BF#1 = RMul(r48BD,r48BE);
      real r48C0#1 = dof_load4843;
      real r48C1#3 = basisEval489C;
      real r48C2#1 = RMul(r48C0,r48C1);
      real r48C3#1 = dof_load484C;
      real r48C4#3 = basisEval489D;
      real r48C5#1 = RMul(r48C3,r48C4);
      real r48C6#1 = dof_load4855;
      real r48C7#3 = basisEval489E;
      real r48C8#1 = RMul(r48C6,r48C7);
      real r48C9#1 = RAdd(r48BF,r48C2);
      real r48CA#1 = RAdd(r48C9,r48C5);
      real r48CB#1 = RAdd(r48CA,r48C8);
      real r48CC#1 = dof_load483B;
      real r48CD#1 = RMul(r48CC,r48BE);
      real r48CE#1 = dof_load4844;
      real r48CF#1 = RMul(r48CE,r48C1);
      real r48D0#1 = dof_load484D;
      real r48D1#1 = RMul(r48D0,r48C4);
      real r48D2#1 = dof_load4856;
      real r48D3#1 = RMul(r48D2,r48C7);
      real r48D4#1 = RAdd(r48CD,r48CF);
      real r48D5#1 = RAdd(r48D4,r48D1);
      real r48D6#1 = RAdd(r48D5,r48D3);
      real r48D7#1 = dof_load483C;
      real r48D8#1 = RMul(r48D7,r48BE);
      real r48D9#1 = dof_load4845;
      real r48DA#1 = RMul(r48D9,r48C1);
      real r48DB#1 = dof_load484E;
      real r48DC#1 = RMul(r48DB,r48C4);
      real r48DD#1 = dof_load4857;
      real r48DE#1 = RMul(r48DD,r48C7);
      real r48DF#1 = RAdd(r48D8,r48DA);
      real r48E0#1 = RAdd(r48DF,r48DC);
      real r48E1#1 = RAdd(r48E0,r48DE);
      tensor[3] probe_l_548BC#1 = <tensor[3]>[r48CB,r48D6,r48E1];
      tensor[3] _t4909#1 = VAdd<3>(probe_l_548BC,dPos47F2);
      femData:MeshPos cmp490C#1 = findPos3B9C (meshData47F4,_t4909);
      return cmp490C
}
## input initialization
  ENTRY3B52:  preds = []
    int timeSteps3B53#1 = 32;
    globals.timeSteps3B48 = timeSteps3B53;
    real timeEps3B56#1 = 0.1e-6;
    globals.timeEps3B49 = timeEps3B56;
    real stepSize3B59#1 = 0.1e-1;
    globals.stepSize3B4B = stepSize3B59;
    int stepMax3B5C#1 = 300;
    globals.stepMax3B4C = stepMax3B5C;
    return
## global-variable initialization
  ENTRY3B60:  preds = []
    femData:Mesh meshData3B61#3 = globals.meshData3B45;
    femData:Space 0space0409_intermedateGlobal3B63#1 = globals.0space0409_intermedateGlobal3B46;
    femData:FemFunc 0data040B_intermedateGlobal3B65#1 = globals.0data040B_intermedateGlobal3B47;
    int _t3B67#1 = 0;
    int _t3B69#1 = 1;
    int _t3B6B#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3B61);
    int _t3B6D#1 = ISub(_t3B6B,_t3B69);
    int[] _t3B6F#1 = Range(_t3B67,_t3B6D);
    femData:MeshCell[] _t3B71#1 = <femData:MeshCell[]>{};
  FOREACH3B74:  preds = [ASSIGN3B72,NEXT3B7A]
    foreach (_t3B73 in _t3B6F) on exit goto ASSIGN3B7C
      femData:MeshCell[] _t3B78#1 = phi(_t3B71,_t3B77)
    femData:MeshCell _t3B75#1 = LoadFem<femData:MeshCell>(meshData3B61,_t3B73);
    femData:MeshCell[] _t3B77#1 = Append<femData:MeshCell>(_t3B78,_t3B75);
    goto FOREACH3B74
  ASSIGN3B7C:  preds = [FOREACH3B74]
    femData:Space space3B7B#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal3B63,meshData3B61);
    femData:FemFunc data3B7D#2 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal3B65,space3B7B);
    globals.data3B4F = data3B7D;
    femData:Space _t3B80#2 = ExtractFem<femData:Space,femData:FemFunc>(data3B7D);
    femData:Mesh _t3B82#1 = ExtractFem<femData:Mesh,femData:Space>(_t3B80);
    globals._t3B50 = _t3B82;
    globals._tX3B51 = _t3B80;
    return
## strand
  strand gg (tensor[3] startPos3B87#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3B8E:  preds = []
        femData:Mesh meshData3B8F#1 = globals.meshData3B45;
        tensor[3][0] _t3B91#1 = <tensor[3][0]>{};
        tensor[3][] _t3B93#1 = MkDynamic<tensor[3],0>(_t3B91);
        tensor[3][0] _t3B95#1 = <tensor[3][0]>{};
        tensor[3][] _t3B97#1 = MkDynamic<tensor[3],0>(_t3B95);
        int step3B99#1 = 0;
        femData:MeshPos cPos3B9B#1 = findPos3B9C (meshData3B8F,startPos3B87);
        self.stream = _t3B93;
        self.newStream = _t3B97;
        self.step = step3B99;
        self.cPos = cPos3B9B;
        self.altCPos = startPos3B87;
        self.startPos = startPos3B87;
        return
    end state init
    method update
        ENTRY42E7:  preds = []
          femData:Mesh _t42E8#3 = globals._t3B50;
          femData:Space _t42EA#30 = globals._tX3B51;
          femData:FemFunc data42EC#92 = globals.data3B4F;
          femData:Mesh meshData42EE#2 = globals.meshData3B45;
          real stepSize42F0#8 = globals.stepSize3B4B;
          int stepMax42F2#1 = globals.stepMax3B4C;
          tensor[3,3] M42F4#6 = globals.M3B4D;
          tensor[3] center42F6#2 = globals.center3B4E;
          tensor[3][] stream42F8#2 = self.stream;
          tensor[3][] newStream42FA#2 = self.newStream;
          int step42FC#5 = self.step;
          femData:MeshPos cPos42FE#9 = self.cPos;
          tensor[3] altCPos4300#11 = self.altCPos;
          tensor[3] startPos4302#6 = self.startPos;
          int _t4304#1 = 0;
          bool _t4306#1 = EQ<int>(step42FC,_t4304);
          if _t4306 then goto ASSIGN430A else goto JOIN4334
        ASSIGN430A:  preds = [COND4308]
          bool _t4309#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos42FE);
          if _t4309 then goto ASSIGN430D else goto JOIN4333
        ASSIGN430D:  preds = [COND430B]
          tensor[3] rp430C#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          real _t430E#1 = VIndex<3,0>(rp430C);
          real _t4310#3 = 0.1e-5;
          bool _t4312#1 = LTE<real>(_t430E,_t4310);
          if _t4312 then goto STABILIZE4315 else goto JOIN4316
        STABILIZE4315:  preds = [COND4314]
          stabilize
          goto JOIN4316
        JOIN4316:  preds = [*STABILIZE4315,COND4314]
          real _t4317#1 = VIndex<3,1>(rp430C);
          bool _t4319#1 = LTE<real>(_t4317,_t4310);
          if _t4319 then goto STABILIZE431C else goto JOIN431D
        STABILIZE431C:  preds = [COND431B]
          stabilize
          goto JOIN431D
        JOIN431D:  preds = [*STABILIZE431C,COND431B]
          real _t431E#1 = VIndex<3,2>(rp430C);
          bool _t4320#1 = LTE<real>(_t431E,_t4310);
          if _t4320 then goto STABILIZE4323 else goto JOIN4324
        STABILIZE4323:  preds = [COND4322]
          stabilize
          goto JOIN4324
        JOIN4324:  preds = [*STABILIZE4323,COND4322]
          real _t4325#3 = 0.1e1;
          tensor[3] _t4327#1 = <tensor[3]>[_t4325,_t4325,_t4325];
          real r4329#1 = VDot<3>(_t4327,rp430C);
          real _t432C#1 = 0.9999999e0;
          bool _t432E#1 = LTE<real>(_t432C,r4329);
          if _t432E then goto STABILIZE4331 else goto JOIN4332
        STABILIZE4331:  preds = [COND4330]
          stabilize
          goto JOIN4332
        JOIN4332:  preds = [*STABILIZE4331,COND4330]
          goto JOIN4333
        JOIN4333:  preds = [JOIN4332,COND430B]
          goto JOIN4334
        JOIN4334:  preds = [JOIN4333,COND4308]
          bool _t4335#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos42FE);
          femData:MeshPos _t4337#6 = findPos3B9C (meshData42EE,altCPos4300);
          bool _t4339#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t4337);
          bool _t433B#1 = NEQ<bool>(_t4335,_t4339);
          if _t433B then goto ASSIGN433F else goto JOIN4343
        ASSIGN433F:  preds = [COND433D]
          string _t433E#1 = "ERG:Warning of validity startPos:";
          string _t4340#1 = "\n";
          Print<[string,tensor[3],string]>(_t433E,startPos4302,_t4340);
          goto JOIN4343
        JOIN4343:  preds = [MASSIGN4342,COND433D]
          bool _t4344#2 = BNot(_t4335);
          if _t4344 then goto ASSIGN4348 else goto ASSIGN5617
        ASSIGN4348:  preds = [COND4346]
          bool _t4347#1 = true;
          goto JOIN434B
        JOIN434B:  preds = [ASSIGN4348,JOIN561C]
          bool _t4349#1 = phi(_t4347,_t434A)
          if _t4349 then goto ASSIGN434E else goto JOIN435D
        ASSIGN434E:  preds = [COND434C]
          string _t434D#1 = "Went off the mesh\?";
          string _t434F#2 = " and ";
          bool _t4351#1 = BNot(_t4339);
          string _t4353#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t434D,_t4344,_t434F,altCPos4300,_t434F,_t4351,_t4353);
          string _t4356#1 = "Pos is:";
          tensor[3] _t4358#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          Print<[string,tensor[3],string]>(_t4356,_t4358,_t4353);
          Print<[tensor[3][],string,tensor[3][],string]>(stream42F8,_t4353,newStream42FA,_t4353);
          stabilize
          goto JOIN435D
        JOIN435D:  preds = [*STABILIZE435C,COND434C]
          tensor[3] _t435E#7 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          int _t4360#5 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos42FE);
          femData:Mesh _t4362#20 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos42FE);
          int ilit4365#1 = 4;
          int mulRes4366#4 = IMul(_t4360,ilit4365);
          int addRes4368#1 = mulRes4366;
          int idx4369#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes4368);
          int ilit436A#1 = 1;
          int addRes436B#1 = IAdd(mulRes4366,ilit436A);
          int idx436C#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes436B);
          int ilit436D#1 = 2;
          int addRes436E#1 = IAdd(mulRes4366,ilit436D);
          int idx436F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes436E);
          int ilit4370#1 = 3;
          int addRes4371#1 = IAdd(mulRes4366,ilit4370);
          int idx4372#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes4371);
          int ilit4386#4 = 3;
          int idx4387#1 = idx4369;
          int mulRes4388#3 = IMul(ilit4386,idx4387);
          int addRes4389#1 = mulRes4388;
          int ilit438A#4 = 1;
          int addRes438B#1 = IAdd(ilit438A,mulRes4388);
          int ilit438C#4 = 2;
          int addRes438D#1 = IAdd(ilit438C,mulRes4388);
          real dof_load438E#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4389);
          real dof_load438F#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes438B);
          real dof_load4390#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes438D);
          int idx4392#1 = idx436C;
          int mulRes4393#3 = IMul(ilit4386,idx4392);
          int addRes4394#1 = mulRes4393;
          int addRes4395#1 = IAdd(ilit438A,mulRes4393);
          int addRes4396#1 = IAdd(ilit438C,mulRes4393);
          real dof_load4397#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4394);
          real dof_load4398#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4395);
          real dof_load4399#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4396);
          int idx439B#1 = idx436F;
          int mulRes439C#3 = IMul(ilit4386,idx439B);
          int addRes439D#1 = mulRes439C;
          int addRes439E#1 = IAdd(ilit438A,mulRes439C);
          int addRes439F#1 = IAdd(ilit438C,mulRes439C);
          real dof_load43A0#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439D);
          real dof_load43A1#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439E);
          real dof_load43A2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439F);
          int idx43A4#1 = idx4372;
          int mulRes43A5#3 = IMul(ilit4386,idx43A4);
          int addRes43A6#1 = mulRes43A5;
          int addRes43A7#1 = IAdd(ilit438A,mulRes43A5);
          int addRes43A8#1 = IAdd(ilit438C,mulRes43A5);
          real dof_load43A9#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A6);
          real dof_load43AA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A7);
          real dof_load43AB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A8);
          real varAcc43D9#1 = VIndex<3,0>(_t435E);
          real varAcc43DA#1 = VIndex<3,1>(_t435E);
          real varAcc43DB#1 = VIndex<3,2>(_t435E);
          real coeff43DC#3 = -0.1e1;
          real iden43DD#1 = varAcc43D9;
          real one43DE#11 = 0.1e1;
          real prod43DF#2 = RMul(one43DE,one43DE);
          real prod43E0#2 = RMul(iden43DD,prod43DF);
          real iden43E1#1 = varAcc43DA;
          real prod43E2#1 = RMul(iden43E1,one43DE);
          real prod43E3#2 = RMul(one43DE,prod43E2);
          real iden43E4#1 = varAcc43DB;
          real prod43E5#1 = RMul(one43DE,iden43E4);
          real prod43E6#2 = RMul(one43DE,prod43E5);
          real prod43E7#1 = RMul(one43DE,prod43DF);
          real mult43E8#1 = RMul(one43DE,prod43E7);
          real mult43E9#1 = RMul(coeff43DC,prod43E6);
          real mult43EA#1 = RMul(coeff43DC,prod43E3);
          real mult43EB#1 = RMul(coeff43DC,prod43E0);
          real sum43EC#1 = RAdd(mult43EA,mult43EB);
          real sum43ED#1 = RAdd(mult43E9,sum43EC);
          real sum43EE#1 = RAdd(mult43E8,sum43ED);
          real intermediate43EF#2 = sum43EE;
          real basisEval43F0#2 = RMul(one43DE,prod43E0);
          real basisEval43F1#2 = RMul(one43DE,prod43E3);
          real basisEval43F2#2 = RMul(one43DE,prod43E6);
          real r4411#1 = dof_load438E;
          real r4412#3 = intermediate43EF;
          real r4413#1 = RMul(r4411,r4412);
          real r4414#1 = dof_load4397;
          real r4415#3 = basisEval43F0;
          real r4416#1 = RMul(r4414,r4415);
          real r4417#1 = dof_load43A0;
          real r4418#3 = basisEval43F1;
          real r4419#1 = RMul(r4417,r4418);
          real r441A#1 = dof_load43A9;
          real r441B#3 = basisEval43F2;
          real r441C#1 = RMul(r441A,r441B);
          real r441D#1 = RAdd(r4413,r4416);
          real r441E#1 = RAdd(r441D,r4419);
          real r441F#1 = RAdd(r441E,r441C);
          real r4420#1 = dof_load438F;
          real r4421#1 = RMul(r4420,r4412);
          real r4422#1 = dof_load4398;
          real r4423#1 = RMul(r4422,r4415);
          real r4424#1 = dof_load43A1;
          real r4425#1 = RMul(r4424,r4418);
          real r4426#1 = dof_load43AA;
          real r4427#1 = RMul(r4426,r441B);
          real r4428#1 = RAdd(r4421,r4423);
          real r4429#1 = RAdd(r4428,r4425);
          real r442A#1 = RAdd(r4429,r4427);
          real r442B#1 = dof_load4390;
          real r442C#1 = RMul(r442B,r4412);
          real r442D#1 = dof_load4399;
          real r442E#1 = RMul(r442D,r4415);
          real r442F#1 = dof_load43A2;
          real r4430#1 = RMul(r442F,r4418);
          real r4431#1 = dof_load43AB;
          real r4432#1 = RMul(r4431,r441B);
          real r4433#1 = RAdd(r442C,r442E);
          real r4434#1 = RAdd(r4433,r4430);
          real r4435#1 = RAdd(r4434,r4432);
          tensor[3] _t4410#2 = <tensor[3]>[r441F,r442A,r4435];
          tensor[3][1] _t445D#1 = <tensor[3][1]>{_t4410};
          tensor[3][] _t445F#1 = MkDynamic<tensor[3],1>(_t445D);
          tensor[3][] stream4461#4 = Concat<tensor[3]>(stream42F8,_t445F);
          tensor[3][1] _t4463#1 = <tensor[3][1]>{altCPos4300};
          tensor[3][] _t4465#1 = MkDynamic<tensor[3],1>(_t4463);
          tensor[3][] newStream4467#4 = Concat<tensor[3]>(newStream42FA,_t4465);
          real r446A#1 = dof_load438E;
          real r446B#3 = intermediate43EF;
          real r446C#1 = RMul(r446A,r446B);
          real r446D#1 = dof_load4397;
          real r446E#3 = basisEval43F0;
          real r446F#1 = RMul(r446D,r446E);
          real r4470#1 = dof_load43A0;
          real r4471#3 = basisEval43F1;
          real r4472#1 = RMul(r4470,r4471);
          real r4473#1 = dof_load43A9;
          real r4474#3 = basisEval43F2;
          real r4475#1 = RMul(r4473,r4474);
          real r4476#1 = RAdd(r446C,r446F);
          real r4477#1 = RAdd(r4476,r4472);
          real r4478#1 = RAdd(r4477,r4475);
          real r4479#1 = dof_load438F;
          real r447A#1 = RMul(r4479,r446B);
          real r447B#1 = dof_load4398;
          real r447C#1 = RMul(r447B,r446E);
          real r447D#1 = dof_load43A1;
          real r447E#1 = RMul(r447D,r4471);
          real r447F#1 = dof_load43AA;
          real r4480#1 = RMul(r447F,r4474);
          real r4481#1 = RAdd(r447A,r447C);
          real r4482#1 = RAdd(r4481,r447E);
          real r4483#1 = RAdd(r4482,r4480);
          real r4484#1 = dof_load4390;
          real r4485#1 = RMul(r4484,r446B);
          real r4486#1 = dof_load4399;
          real r4487#1 = RMul(r4486,r446E);
          real r4488#1 = dof_load43A2;
          real r4489#1 = RMul(r4488,r4471);
          real r448A#1 = dof_load43AB;
          real r448B#1 = RMul(r448A,r4474);
          real r448C#1 = RAdd(r4485,r4487);
          real r448D#1 = RAdd(r448C,r4489);
          real r448E#1 = RAdd(r448D,r448B);
          tensor[3] probe_l_54469#1 = <tensor[3]>[r4478,r4483,r448E];
          tensor[3] op1_e3_l_744B6#2 = VSub<3>(probe_l_54469,altCPos4300);
          real op1_e3_l_944B9#1 = VDot<3>(op1_e3_l_744B6,op1_e3_l_744B6);
          real _t44BC#1 = Sqrt(op1_e3_l_944B9);
          real _t44BF#5 = 0.1e-5;
          bool _t44C1#1 = GT<real>(_t44BC,_t44BF);
          if _t44C1 then goto ASSIGN44C5 else goto ASSIGN5610
        ASSIGN44C5:  preds = [COND44C3]
          string _t44C4#1 = "ERG:Error in tracing 1: At step:";
          string _t44C6#1 = " with particle:";
          string _t44C8#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t44C4,step42FC,_t44C6,startPos4302,_t44C8);
          string _t44CB#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t44CB,_t4410,altCPos4300,_t44C8);
          string _t44CE#1 = "Cells are:";
          femData:MeshCell _t44D0#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t44D2#2 = " and ";
          femData:Mesh _t44D4#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4337);
          int _t44D6#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4337);
          femData:MeshCell _t44D8#1 = LoadFem<femData:MeshCell>(_t44D4,_t44D6);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t44CE,_t44D0,_t44D2,_t44D8,_t44C8);
          string _t44DB#1 = "Ref poses are:";
          tensor[3] _t44DD#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t4337);
          Print<[string,tensor[3],string,tensor[3],string]>(_t44DB,_t435E,_t44D2,_t44DD,_t44C8);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN44E3
        JOIN44E3:  preds = [*STABILIZE44E2,MASSIGN5615]
          real _t44E4#5 = 0.5e0;
          if _t4335 then goto ASSIGN44E8 else goto ASSIGN5609
        ASSIGN44E8:  preds = [COND44E6]
          femData:MeshCell c44E7#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          int _t44E9#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c44E7);
          femData:FuncCell _t44EB#2 = LoadFem<femData:FuncCell>(data42EC,_t44E9);
          femData:FemFunc _t44ED#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t44EB);
          femData:Space _t44EF#10 = ExtractFem<femData:Space,femData:FemFunc>(_t44ED);
          int _t44F1#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t44EB);
          int ilit44F4#1 = 10;
          int mulRes44F5#10 = IMul(_t44F1,ilit44F4);
          int addRes44F7#1 = mulRes44F5;
          int idx44F8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44F7);
          int ilit44F9#1 = 1;
          int addRes44FA#1 = IAdd(mulRes44F5,ilit44F9);
          int idx44FB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44FA);
          int ilit44FC#1 = 2;
          int addRes44FD#1 = IAdd(mulRes44F5,ilit44FC);
          int idx44FE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44FD);
          int ilit44FF#1 = 3;
          int addRes4500#1 = IAdd(mulRes44F5,ilit44FF);
          int idx4501#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4500);
          int ilit4502#1 = 4;
          int addRes4503#1 = IAdd(mulRes44F5,ilit4502);
          int idx4504#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4503);
          int ilit4505#1 = 5;
          int addRes4506#1 = IAdd(mulRes44F5,ilit4505);
          int idx4507#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4506);
          int ilit4508#1 = 6;
          int addRes4509#1 = IAdd(mulRes44F5,ilit4508);
          int idx450A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4509);
          int ilit450B#1 = 7;
          int addRes450C#1 = IAdd(mulRes44F5,ilit450B);
          int idx450D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes450C);
          int ilit450E#1 = 8;
          int addRes450F#1 = IAdd(mulRes44F5,ilit450E);
          int idx4510#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes450F);
          int ilit4511#1 = 9;
          int addRes4512#1 = IAdd(mulRes44F5,ilit4511);
          int idx4513#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4512);
          int ilit4539#10 = 3;
          int idx453A#1 = idx44F8;
          int mulRes453B#3 = IMul(ilit4539,idx453A);
          int addRes453C#1 = mulRes453B;
          int ilit453D#10 = 1;
          int addRes453E#1 = IAdd(ilit453D,mulRes453B);
          int ilit453F#10 = 2;
          int addRes4540#1 = IAdd(ilit453F,mulRes453B);
          real dof_load4541#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes453C);
          real dof_load4542#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes453E);
          real dof_load4543#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4540);
          int idx4545#1 = idx44FB;
          int mulRes4546#3 = IMul(ilit4539,idx4545);
          int addRes4547#1 = mulRes4546;
          int addRes4548#1 = IAdd(ilit453D,mulRes4546);
          int addRes4549#1 = IAdd(ilit453F,mulRes4546);
          real dof_load454A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4547);
          real dof_load454B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4548);
          real dof_load454C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4549);
          int idx454E#1 = idx44FE;
          int mulRes454F#3 = IMul(ilit4539,idx454E);
          int addRes4550#1 = mulRes454F;
          int addRes4551#1 = IAdd(ilit453D,mulRes454F);
          int addRes4552#1 = IAdd(ilit453F,mulRes454F);
          real dof_load4553#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4550);
          real dof_load4554#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4551);
          real dof_load4555#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4552);
          int idx4557#1 = idx4501;
          int mulRes4558#3 = IMul(ilit4539,idx4557);
          int addRes4559#1 = mulRes4558;
          int addRes455A#1 = IAdd(ilit453D,mulRes4558);
          int addRes455B#1 = IAdd(ilit453F,mulRes4558);
          real dof_load455C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4559);
          real dof_load455D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes455A);
          real dof_load455E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes455B);
          int idx4561#1 = idx4504;
          int mulRes4562#3 = IMul(ilit4539,idx4561);
          int addRes4563#1 = mulRes4562;
          int addRes4564#1 = IAdd(ilit453D,mulRes4562);
          int addRes4565#1 = IAdd(ilit453F,mulRes4562);
          real dof_load4566#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4563);
          real dof_load4567#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4564);
          real dof_load4568#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4565);
          int idx456B#1 = idx4507;
          int mulRes456C#3 = IMul(ilit4539,idx456B);
          int addRes456D#1 = mulRes456C;
          int addRes456E#1 = IAdd(ilit453D,mulRes456C);
          int addRes456F#1 = IAdd(ilit453F,mulRes456C);
          real dof_load4570#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456D);
          real dof_load4571#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456E);
          real dof_load4572#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456F);
          int idx4575#1 = idx450A;
          int mulRes4576#3 = IMul(ilit4539,idx4575);
          int addRes4577#1 = mulRes4576;
          int addRes4578#1 = IAdd(ilit453D,mulRes4576);
          int addRes4579#1 = IAdd(ilit453F,mulRes4576);
          real dof_load457A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4577);
          real dof_load457B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4578);
          real dof_load457C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4579);
          int idx457F#1 = idx450D;
          int mulRes4580#3 = IMul(ilit4539,idx457F);
          int addRes4581#1 = mulRes4580;
          int addRes4582#1 = IAdd(ilit453D,mulRes4580);
          int addRes4583#1 = IAdd(ilit453F,mulRes4580);
          real dof_load4584#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4581);
          real dof_load4585#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4582);
          real dof_load4586#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4583);
          int idx4589#1 = idx4510;
          int mulRes458A#3 = IMul(ilit4539,idx4589);
          int addRes458B#1 = mulRes458A;
          int addRes458C#1 = IAdd(ilit453D,mulRes458A);
          int addRes458D#1 = IAdd(ilit453F,mulRes458A);
          real dof_load458E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458B);
          real dof_load458F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458C);
          real dof_load4590#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458D);
          int idx4593#1 = idx4513;
          int mulRes4594#3 = IMul(ilit4539,idx4593);
          int addRes4595#1 = mulRes4594;
          int addRes4596#1 = IAdd(ilit453D,mulRes4594);
          int addRes4597#1 = IAdd(ilit453F,mulRes4594);
          real dof_load4598#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4595);
          real dof_load4599#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4596);
          real dof_load459A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4597);
          real varAcc4604#2 = VIndex<3,0>(_t435E);
          real varAcc4605#2 = VIndex<3,1>(_t435E);
          real varAcc4606#2 = VIndex<3,2>(_t435E);
          real coeff4607#3 = 0.2e1;
          real iden4608#4 = varAcc4604;
          real prod24609#1 = RMul(iden4608,varAcc4604);
          real one460A#13 = 0.1e1;
          real prod460B#3 = RMul(one460A,one460A);
          real prod460C#2 = RMul(prod24609,prod460B);
          real coeff460D#6 = 0.4e1;
          real iden460E#3 = varAcc4605;
          real prod460F#2 = RMul(iden460E,one460A);
          real prod4610#2 = RMul(iden4608,prod460F);
          real iden4611#3 = varAcc4606;
          real prod4612#2 = RMul(one460A,iden4611);
          real prod4613#2 = RMul(iden4608,prod4612);
          real coeff4614#3 = -0.3e1;
          real prod4615#3 = RMul(iden4608,prod460B);
          real prod24616#1 = RMul(iden460E,varAcc4605);
          real prod4617#1 = RMul(prod24616,one460A);
          real prod4618#2 = RMul(one460A,prod4617);
          real prod4619#1 = RMul(iden460E,iden4611);
          real prod461A#2 = RMul(one460A,prod4619);
          real prod461B#3 = RMul(one460A,prod460F);
          real prod2461C#1 = RMul(iden4611,varAcc4606);
          real prod461D#1 = RMul(one460A,prod2461C);
          real prod461E#2 = RMul(one460A,prod461D);
          real prod461F#3 = RMul(one460A,prod4612);
          real prod4620#1 = RMul(one460A,prod460B);
          real mult4621#1 = RMul(one460A,prod4620);
          real mult4622#1 = RMul(coeff4614,prod461F);
          real mult4623#2 = RMul(coeff4607,prod461E);
          real mult4624#1 = RMul(coeff4614,prod461B);
          real mult4625#2 = RMul(coeff460D,prod461A);
          real mult4626#2 = RMul(coeff4607,prod4618);
          real mult4627#1 = RMul(coeff4614,prod4615);
          real mult4628#2 = RMul(coeff460D,prod4613);
          real mult4629#2 = RMul(coeff460D,prod4610);
          real mult462A#2 = RMul(coeff4607,prod460C);
          real sum462B#1 = RAdd(mult4629,mult462A);
          real sum462C#1 = RAdd(mult4628,sum462B);
          real sum462D#1 = RAdd(mult4627,sum462C);
          real sum462E#1 = RAdd(mult4626,sum462D);
          real sum462F#1 = RAdd(mult4625,sum462E);
          real sum4630#1 = RAdd(mult4624,sum462F);
          real sum4631#1 = RAdd(mult4623,sum4630);
          real sum4632#1 = RAdd(mult4622,sum4631);
          real sum4633#1 = RAdd(mult4621,sum4632);
          real intermediate4634#1 = sum4633;
          real coeff4635#3 = -0.1e1;
          real mult4636#1 = RMul(coeff4635,prod4615);
          real sum4637#1 = RAdd(mult4636,mult462A);
          real intermediate4638#1 = sum4637;
          real mult4639#1 = RMul(coeff4635,prod461B);
          real sum463A#1 = RAdd(mult4639,mult4626);
          real intermediate463B#1 = sum463A;
          real mult463C#1 = RMul(coeff4635,prod461F);
          real sum463D#1 = RAdd(mult463C,mult4623);
          real intermediate463E#1 = sum463D;
          real coeff463F#6 = -0.4e1;
          real mult4640#1 = RMul(coeff460D,prod461F);
          real mult4641#1 = RMul(coeff463F,prod461E);
          real mult4642#2 = RMul(coeff463F,prod461A);
          real mult4643#2 = RMul(coeff463F,prod4613);
          real sum4644#1 = RAdd(mult4642,mult4643);
          real sum4645#1 = RAdd(mult4641,sum4644);
          real sum4646#1 = RAdd(mult4640,sum4645);
          real intermediate4647#1 = sum4646;
          real mult4648#1 = RMul(coeff460D,prod461B);
          real mult4649#1 = RMul(coeff463F,prod4618);
          real mult464A#2 = RMul(coeff463F,prod4610);
          real sum464B#1 = RAdd(mult4649,mult464A);
          real sum464C#1 = RAdd(mult4642,sum464B);
          real sum464D#1 = RAdd(mult4648,sum464C);
          real intermediate464E#1 = sum464D;
          real mult464F#1 = RMul(coeff460D,prod4615);
          real mult4650#1 = RMul(coeff463F,prod460C);
          real sum4651#1 = RAdd(mult464A,mult4650);
          real sum4652#1 = RAdd(mult4643,sum4651);
          real sum4653#1 = RAdd(mult464F,sum4652);
          real intermediate4654#1 = sum4653;
          real r46AA#1 = dof_load4541;
          real r46AB#3 = intermediate4634;
          real r46AC#1 = RMul(r46AA,r46AB);
          real r46AD#1 = dof_load454A;
          real r46AE#3 = intermediate4638;
          real r46AF#1 = RMul(r46AD,r46AE);
          real r46B0#1 = dof_load4553;
          real r46B1#3 = intermediate463B;
          real r46B2#1 = RMul(r46B0,r46B1);
          real r46B3#1 = dof_load455C;
          real r46B4#3 = intermediate463E;
          real r46B5#1 = RMul(r46B3,r46B4);
          real r46B6#1 = dof_load4566;
          real r46B7#3 = mult4625;
          real r46B8#1 = RMul(r46B6,r46B7);
          real r46B9#1 = dof_load4570;
          real r46BA#3 = mult4628;
          real r46BB#1 = RMul(r46B9,r46BA);
          real r46BC#1 = dof_load457A;
          real r46BD#3 = mult4629;
          real r46BE#1 = RMul(r46BC,r46BD);
          real r46BF#1 = dof_load4584;
          real r46C0#3 = intermediate4647;
          real r46C1#1 = RMul(r46BF,r46C0);
          real r46C2#1 = dof_load458E;
          real r46C3#3 = intermediate464E;
          real r46C4#1 = RMul(r46C2,r46C3);
          real r46C5#1 = dof_load4598;
          real r46C6#3 = intermediate4654;
          real r46C7#1 = RMul(r46C5,r46C6);
          real r46C8#1 = RAdd(r46AC,r46AF);
          real r46C9#1 = RAdd(r46C8,r46B2);
          real r46CA#1 = RAdd(r46C9,r46B5);
          real r46CB#1 = RAdd(r46CA,r46B8);
          real r46CC#1 = RAdd(r46CB,r46BB);
          real r46CD#1 = RAdd(r46CC,r46BE);
          real r46CE#1 = RAdd(r46CD,r46C1);
          real r46CF#1 = RAdd(r46CE,r46C4);
          real r46D0#2 = RAdd(r46CF,r46C7);
          real r46D1#1 = dof_load4542;
          real r46D2#1 = RMul(r46D1,r46AB);
          real r46D3#1 = dof_load454B;
          real r46D4#1 = RMul(r46D3,r46AE);
          real r46D5#1 = dof_load4554;
          real r46D6#1 = RMul(r46D5,r46B1);
          real r46D7#1 = dof_load455D;
          real r46D8#1 = RMul(r46D7,r46B4);
          real r46D9#1 = dof_load4567;
          real r46DA#1 = RMul(r46D9,r46B7);
          real r46DB#1 = dof_load4571;
          real r46DC#1 = RMul(r46DB,r46BA);
          real r46DD#1 = dof_load457B;
          real r46DE#1 = RMul(r46DD,r46BD);
          real r46DF#1 = dof_load4585;
          real r46E0#1 = RMul(r46DF,r46C0);
          real r46E1#1 = dof_load458F;
          real r46E2#1 = RMul(r46E1,r46C3);
          real r46E3#1 = dof_load4599;
          real r46E4#1 = RMul(r46E3,r46C6);
          real r46E5#1 = RAdd(r46D2,r46D4);
          real r46E6#1 = RAdd(r46E5,r46D6);
          real r46E7#1 = RAdd(r46E6,r46D8);
          real r46E8#1 = RAdd(r46E7,r46DA);
          real r46E9#1 = RAdd(r46E8,r46DC);
          real r46EA#1 = RAdd(r46E9,r46DE);
          real r46EB#1 = RAdd(r46EA,r46E0);
          real r46EC#1 = RAdd(r46EB,r46E2);
          real r46ED#2 = RAdd(r46EC,r46E4);
          real r46EE#1 = dof_load4543;
          real r46EF#1 = RMul(r46EE,r46AB);
          real r46F0#1 = dof_load454C;
          real r46F1#1 = RMul(r46F0,r46AE);
          real r46F2#1 = dof_load4555;
          real r46F3#1 = RMul(r46F2,r46B1);
          real r46F4#1 = dof_load455E;
          real r46F5#1 = RMul(r46F4,r46B4);
          real r46F6#1 = dof_load4568;
          real r46F7#1 = RMul(r46F6,r46B7);
          real r46F8#1 = dof_load4572;
          real r46F9#1 = RMul(r46F8,r46BA);
          real r46FA#1 = dof_load457C;
          real r46FB#1 = RMul(r46FA,r46BD);
          real r46FC#1 = dof_load4586;
          real r46FD#1 = RMul(r46FC,r46C0);
          real r46FE#1 = dof_load4590;
          real r46FF#1 = RMul(r46FE,r46C3);
          real r4700#1 = dof_load459A;
          real r4701#1 = RMul(r4700,r46C6);
          real r4702#1 = RAdd(r46EF,r46F1);
          real r4703#1 = RAdd(r4702,r46F3);
          real r4704#1 = RAdd(r4703,r46F5);
          real r4705#1 = RAdd(r4704,r46F7);
          real r4706#1 = RAdd(r4705,r46F9);
          real r4707#1 = RAdd(r4706,r46FB);
          real r4708#1 = RAdd(r4707,r46FD);
          real r4709#1 = RAdd(r4708,r46FF);
          real r470A#2 = RAdd(r4709,r4701);
          tensor[3] probe_l_846A9#2 = <tensor[3]>[r46D0,r46ED,r470A];
          real op1_e3_l_11476E#1 = VDot<3>(probe_l_846A9,probe_l_846A9);
          real op1_e3_l_124771#1 = Sqrt(op1_e3_l_11476E);
          real realLit4775#1 = 0.1e1;
          real r4776#3 = RDiv(realLit4775,op1_e3_l_124771);
          real r4777#1 = r46D0;
          real r4778#1 = RMul(r4776,r4777);
          real r4779#1 = r46ED;
          real r477A#1 = RMul(r4776,r4779);
          real r477B#1 = r470A;
          real r477C#1 = RMul(r4776,r477B);
          tensor[3] _t4774#1 = <tensor[3]>[r4778,r477A,r477C];
          goto JOIN4789
        JOIN4789:  preds = [ASSIGN4786,ASSIGN560E]
          tensor[3] _t4787#3 = phi(_t4774,_t4788)
          real r478B#1 = TensorIndex<tensor[3],[0]>(_t4787);
          real r478C#3 = RMul(_t44E4,stepSize42F0);
          real r478D#1 = RMul(r478C,r478B);
          real r478E#1 = TensorIndex<tensor[3],[1]>(_t4787);
          real r478F#1 = RMul(r478C,r478E);
          real r4790#1 = TensorIndex<tensor[3],[2]>(_t4787);
          real r4791#1 = RMul(r478C,r4790);
          tensor[3] up1478A#3 = <tensor[3]>[r478D,r478F,r4791];
          tensor[3] op1_e3_l_11479B#3 = VSub<3>(altCPos4300,center42F6);
          tensor[3] projParam479F#1 = ProjectLast<tensor[3,3],[0]>(M42F4);
          real vdot47A0#2 = VDot<3>(projParam479F,op1_e3_l_11479B);
          tensor[3] projParam47A1#1 = ProjectLast<tensor[3,3],[1]>(M42F4);
          real vdot47A2#2 = VDot<3>(projParam47A1,op1_e3_l_11479B);
          tensor[3] projParam47A3#1 = ProjectLast<tensor[3,3],[2]>(M42F4);
          real vdot47A4#2 = VDot<3>(projParam47A3,op1_e3_l_11479B);
          tensor[3] op1_e3_l_12479E#2 = <tensor[3]>[vdot47A0,vdot47A2,vdot47A4];
          real op1_e3_l_1747AD#1 = VDot<3>(op1_e3_l_12479E,op1_e3_l_12479E);
          real r47B1#1 = vdot47A0;
          real r47B2#3 = RMul(_t44E4,stepSize42F0);
          real r47B3#1 = RMul(r47B2,r47B1);
          real r47B4#1 = vdot47A2;
          real r47B5#1 = RMul(r47B2,r47B4);
          real r47B6#1 = vdot47A4;
          real r47B7#1 = RMul(r47B2,r47B6);
          real op1_e3_l_1947C1#1 = Sqrt(op1_e3_l_1747AD);
          real realLit47C5#1 = 0.1e1;
          real r47C6#3 = RDiv(realLit47C5,op1_e3_l_1947C1);
          real r47C7#1 = r47B3;
          real r47C8#1 = RMul(r47C6,r47C7);
          real r47C9#1 = r47B5;
          real r47CA#1 = RMul(r47C6,r47C9);
          real r47CB#1 = r47B7;
          real r47CC#1 = RMul(r47C6,r47CB);
          tensor[3] op1_e3_l_2147C4#1 = <tensor[3]>[r47C8,r47CA,r47CC];
          tensor[3] op1_e3_l_3347D7#2 = VSub<3>(up1478A,op1_e3_l_2147C4);
          real op1_e3_l_3547DA#1 = VDot<3>(op1_e3_l_3347D7,op1_e3_l_3347D7);
          real _t47DD#1 = Sqrt(op1_e3_l_3547DA);
          bool _t47E0#1 = GT<real>(_t47DD,_t44BF);
          if _t47E0 then goto ASSIGN47E4 else goto ASSIGN5354
        ASSIGN47E4:  preds = [COND47E2]
          bool _t47E3#1 = true;
          goto JOIN47E7
        JOIN47E7:  preds = [ASSIGN47E4,ASSIGN5607]
          bool _t47E5#1 = phi(_t47E3,_t47E6)
          if _t47E5 then goto ASSIGN47EA else goto JOIN47EE
        ASSIGN47EA:  preds = [COND47E8]
          string _t47E9#1 = "ERG:Error in evaluation on pos 1:";
          string _t47EB#1 = "\n";
          Print<[string,tensor[3],string]>(_t47E9,startPos4302,_t47EB);
          goto JOIN47EE
        JOIN47EE:  preds = [MASSIGN47ED,COND47E8]
          femData:MeshPos intermed47EF#4 = fn_2FB47F0 (cPos42FE,up1478A);
          femData:MeshPos callFindPos4910#2 = findPos3B9C (_t42E8,altCPos4300);
          int intPos4912#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos4910);
          tensor[3] refPos4914#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos4910);
          int ilit4917#1 = 10;
          int mulRes4918#10 = IMul(intPos4912,ilit4917);
          int addRes491A#1 = mulRes4918;
          int idx491B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes491A);
          int ilit491C#1 = 1;
          int addRes491D#1 = IAdd(mulRes4918,ilit491C);
          int idx491E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes491D);
          int ilit491F#1 = 2;
          int addRes4920#1 = IAdd(mulRes4918,ilit491F);
          int idx4921#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4920);
          int ilit4922#1 = 3;
          int addRes4923#1 = IAdd(mulRes4918,ilit4922);
          int idx4924#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4923);
          int ilit4925#1 = 4;
          int addRes4926#1 = IAdd(mulRes4918,ilit4925);
          int idx4927#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4926);
          int ilit4928#1 = 5;
          int addRes4929#1 = IAdd(mulRes4918,ilit4928);
          int idx492A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4929);
          int ilit492B#1 = 6;
          int addRes492C#1 = IAdd(mulRes4918,ilit492B);
          int idx492D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes492C);
          int ilit492E#1 = 7;
          int addRes492F#1 = IAdd(mulRes4918,ilit492E);
          int idx4930#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes492F);
          int ilit4931#1 = 8;
          int addRes4932#1 = IAdd(mulRes4918,ilit4931);
          int idx4933#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4932);
          int ilit4934#1 = 9;
          int addRes4935#1 = IAdd(mulRes4918,ilit4934);
          int idx4936#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4935);
          int ilit495C#10 = 3;
          int idx495D#1 = idx491B;
          int mulRes495E#3 = IMul(ilit495C,idx495D);
          int addRes495F#1 = mulRes495E;
          int ilit4960#10 = 1;
          int addRes4961#1 = IAdd(ilit4960,mulRes495E);
          int ilit4962#10 = 2;
          int addRes4963#1 = IAdd(ilit4962,mulRes495E);
          real dof_load4964#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes495F);
          real dof_load4965#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4961);
          real dof_load4966#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4963);
          int idx4968#1 = idx491E;
          int mulRes4969#3 = IMul(ilit495C,idx4968);
          int addRes496A#1 = mulRes4969;
          int addRes496B#1 = IAdd(ilit4960,mulRes4969);
          int addRes496C#1 = IAdd(ilit4962,mulRes4969);
          real dof_load496D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496A);
          real dof_load496E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496B);
          real dof_load496F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496C);
          int idx4971#1 = idx4921;
          int mulRes4972#3 = IMul(ilit495C,idx4971);
          int addRes4973#1 = mulRes4972;
          int addRes4974#1 = IAdd(ilit4960,mulRes4972);
          int addRes4975#1 = IAdd(ilit4962,mulRes4972);
          real dof_load4976#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4973);
          real dof_load4977#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4974);
          real dof_load4978#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4975);
          int idx497A#1 = idx4924;
          int mulRes497B#3 = IMul(ilit495C,idx497A);
          int addRes497C#1 = mulRes497B;
          int addRes497D#1 = IAdd(ilit4960,mulRes497B);
          int addRes497E#1 = IAdd(ilit4962,mulRes497B);
          real dof_load497F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497C);
          real dof_load4980#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497D);
          real dof_load4981#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497E);
          int idx4984#1 = idx4927;
          int mulRes4985#3 = IMul(ilit495C,idx4984);
          int addRes4986#1 = mulRes4985;
          int addRes4987#1 = IAdd(ilit4960,mulRes4985);
          int addRes4988#1 = IAdd(ilit4962,mulRes4985);
          real dof_load4989#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4986);
          real dof_load498A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4987);
          real dof_load498B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4988);
          int idx498E#1 = idx492A;
          int mulRes498F#3 = IMul(ilit495C,idx498E);
          int addRes4990#1 = mulRes498F;
          int addRes4991#1 = IAdd(ilit4960,mulRes498F);
          int addRes4992#1 = IAdd(ilit4962,mulRes498F);
          real dof_load4993#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4990);
          real dof_load4994#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4991);
          real dof_load4995#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4992);
          int idx4998#1 = idx492D;
          int mulRes4999#3 = IMul(ilit495C,idx4998);
          int addRes499A#1 = mulRes4999;
          int addRes499B#1 = IAdd(ilit4960,mulRes4999);
          int addRes499C#1 = IAdd(ilit4962,mulRes4999);
          real dof_load499D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499A);
          real dof_load499E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499B);
          real dof_load499F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499C);
          int idx49A2#1 = idx4930;
          int mulRes49A3#3 = IMul(ilit495C,idx49A2);
          int addRes49A4#1 = mulRes49A3;
          int addRes49A5#1 = IAdd(ilit4960,mulRes49A3);
          int addRes49A6#1 = IAdd(ilit4962,mulRes49A3);
          real dof_load49A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A4);
          real dof_load49A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A5);
          real dof_load49A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A6);
          int idx49AC#1 = idx4933;
          int mulRes49AD#3 = IMul(ilit495C,idx49AC);
          int addRes49AE#1 = mulRes49AD;
          int addRes49AF#1 = IAdd(ilit4960,mulRes49AD);
          int addRes49B0#1 = IAdd(ilit4962,mulRes49AD);
          real dof_load49B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49AE);
          real dof_load49B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49AF);
          real dof_load49B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B0);
          int idx49B6#1 = idx4936;
          int mulRes49B7#3 = IMul(ilit495C,idx49B6);
          int addRes49B8#1 = mulRes49B7;
          int addRes49B9#1 = IAdd(ilit4960,mulRes49B7);
          int addRes49BA#1 = IAdd(ilit4962,mulRes49B7);
          real dof_load49BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B8);
          real dof_load49BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B9);
          real dof_load49BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49BA);
          real varAcc4A27#2 = VIndex<3,0>(refPos4914);
          real varAcc4A28#2 = VIndex<3,1>(refPos4914);
          real varAcc4A29#2 = VIndex<3,2>(refPos4914);
          real coeff4A2A#3 = 0.2e1;
          real iden4A2B#4 = varAcc4A27;
          real prod24A2C#1 = RMul(iden4A2B,varAcc4A27);
          real one4A2D#13 = 0.1e1;
          real prod4A2E#3 = RMul(one4A2D,one4A2D);
          real prod4A2F#2 = RMul(prod24A2C,prod4A2E);
          real coeff4A30#6 = 0.4e1;
          real iden4A31#3 = varAcc4A28;
          real prod4A32#2 = RMul(iden4A31,one4A2D);
          real prod4A33#2 = RMul(iden4A2B,prod4A32);
          real iden4A34#3 = varAcc4A29;
          real prod4A35#2 = RMul(one4A2D,iden4A34);
          real prod4A36#2 = RMul(iden4A2B,prod4A35);
          real coeff4A37#3 = -0.3e1;
          real prod4A38#3 = RMul(iden4A2B,prod4A2E);
          real prod24A39#1 = RMul(iden4A31,varAcc4A28);
          real prod4A3A#1 = RMul(prod24A39,one4A2D);
          real prod4A3B#2 = RMul(one4A2D,prod4A3A);
          real prod4A3C#1 = RMul(iden4A31,iden4A34);
          real prod4A3D#2 = RMul(one4A2D,prod4A3C);
          real prod4A3E#3 = RMul(one4A2D,prod4A32);
          real prod24A3F#1 = RMul(iden4A34,varAcc4A29);
          real prod4A40#1 = RMul(one4A2D,prod24A3F);
          real prod4A41#2 = RMul(one4A2D,prod4A40);
          real prod4A42#3 = RMul(one4A2D,prod4A35);
          real prod4A43#1 = RMul(one4A2D,prod4A2E);
          real mult4A44#1 = RMul(one4A2D,prod4A43);
          real mult4A45#1 = RMul(coeff4A37,prod4A42);
          real mult4A46#2 = RMul(coeff4A2A,prod4A41);
          real mult4A47#1 = RMul(coeff4A37,prod4A3E);
          real mult4A48#2 = RMul(coeff4A30,prod4A3D);
          real mult4A49#2 = RMul(coeff4A2A,prod4A3B);
          real mult4A4A#1 = RMul(coeff4A37,prod4A38);
          real mult4A4B#2 = RMul(coeff4A30,prod4A36);
          real mult4A4C#2 = RMul(coeff4A30,prod4A33);
          real mult4A4D#2 = RMul(coeff4A2A,prod4A2F);
          real sum4A4E#1 = RAdd(mult4A4C,mult4A4D);
          real sum4A4F#1 = RAdd(mult4A4B,sum4A4E);
          real sum4A50#1 = RAdd(mult4A4A,sum4A4F);
          real sum4A51#1 = RAdd(mult4A49,sum4A50);
          real sum4A52#1 = RAdd(mult4A48,sum4A51);
          real sum4A53#1 = RAdd(mult4A47,sum4A52);
          real sum4A54#1 = RAdd(mult4A46,sum4A53);
          real sum4A55#1 = RAdd(mult4A45,sum4A54);
          real sum4A56#1 = RAdd(mult4A44,sum4A55);
          real intermediate4A57#1 = sum4A56;
          real coeff4A58#3 = -0.1e1;
          real mult4A59#1 = RMul(coeff4A58,prod4A38);
          real sum4A5A#1 = RAdd(mult4A59,mult4A4D);
          real intermediate4A5B#1 = sum4A5A;
          real mult4A5C#1 = RMul(coeff4A58,prod4A3E);
          real sum4A5D#1 = RAdd(mult4A5C,mult4A49);
          real intermediate4A5E#1 = sum4A5D;
          real mult4A5F#1 = RMul(coeff4A58,prod4A42);
          real sum4A60#1 = RAdd(mult4A5F,mult4A46);
          real intermediate4A61#1 = sum4A60;
          real coeff4A62#6 = -0.4e1;
          real mult4A63#1 = RMul(coeff4A30,prod4A42);
          real mult4A64#1 = RMul(coeff4A62,prod4A41);
          real mult4A65#2 = RMul(coeff4A62,prod4A3D);
          real mult4A66#2 = RMul(coeff4A62,prod4A36);
          real sum4A67#1 = RAdd(mult4A65,mult4A66);
          real sum4A68#1 = RAdd(mult4A64,sum4A67);
          real sum4A69#1 = RAdd(mult4A63,sum4A68);
          real intermediate4A6A#1 = sum4A69;
          real mult4A6B#1 = RMul(coeff4A30,prod4A3E);
          real mult4A6C#1 = RMul(coeff4A62,prod4A3B);
          real mult4A6D#2 = RMul(coeff4A62,prod4A33);
          real sum4A6E#1 = RAdd(mult4A6C,mult4A6D);
          real sum4A6F#1 = RAdd(mult4A65,sum4A6E);
          real sum4A70#1 = RAdd(mult4A6B,sum4A6F);
          real intermediate4A71#1 = sum4A70;
          real mult4A72#1 = RMul(coeff4A30,prod4A38);
          real mult4A73#1 = RMul(coeff4A62,prod4A2F);
          real sum4A74#1 = RAdd(mult4A6D,mult4A73);
          real sum4A75#1 = RAdd(mult4A66,sum4A74);
          real sum4A76#1 = RAdd(mult4A72,sum4A75);
          real intermediate4A77#1 = sum4A76;
          real r4ACD#1 = dof_load4964;
          real r4ACE#3 = intermediate4A57;
          real r4ACF#1 = RMul(r4ACD,r4ACE);
          real r4AD0#1 = dof_load496D;
          real r4AD1#3 = intermediate4A5B;
          real r4AD2#1 = RMul(r4AD0,r4AD1);
          real r4AD3#1 = dof_load4976;
          real r4AD4#3 = intermediate4A5E;
          real r4AD5#1 = RMul(r4AD3,r4AD4);
          real r4AD6#1 = dof_load497F;
          real r4AD7#3 = intermediate4A61;
          real r4AD8#1 = RMul(r4AD6,r4AD7);
          real r4AD9#1 = dof_load4989;
          real r4ADA#3 = mult4A48;
          real r4ADB#1 = RMul(r4AD9,r4ADA);
          real r4ADC#1 = dof_load4993;
          real r4ADD#3 = mult4A4B;
          real r4ADE#1 = RMul(r4ADC,r4ADD);
          real r4ADF#1 = dof_load499D;
          real r4AE0#3 = mult4A4C;
          real r4AE1#1 = RMul(r4ADF,r4AE0);
          real r4AE2#1 = dof_load49A7;
          real r4AE3#3 = intermediate4A6A;
          real r4AE4#1 = RMul(r4AE2,r4AE3);
          real r4AE5#1 = dof_load49B1;
          real r4AE6#3 = intermediate4A71;
          real r4AE7#1 = RMul(r4AE5,r4AE6);
          real r4AE8#1 = dof_load49BB;
          real r4AE9#3 = intermediate4A77;
          real r4AEA#1 = RMul(r4AE8,r4AE9);
          real r4AEB#1 = RAdd(r4ACF,r4AD2);
          real r4AEC#1 = RAdd(r4AEB,r4AD5);
          real r4AED#1 = RAdd(r4AEC,r4AD8);
          real r4AEE#1 = RAdd(r4AED,r4ADB);
          real r4AEF#1 = RAdd(r4AEE,r4ADE);
          real r4AF0#1 = RAdd(r4AEF,r4AE1);
          real r4AF1#1 = RAdd(r4AF0,r4AE4);
          real r4AF2#1 = RAdd(r4AF1,r4AE7);
          real r4AF3#3 = RAdd(r4AF2,r4AEA);
          real r4AF4#1 = dof_load4965;
          real r4AF5#1 = RMul(r4AF4,r4ACE);
          real r4AF6#1 = dof_load496E;
          real r4AF7#1 = RMul(r4AF6,r4AD1);
          real r4AF8#1 = dof_load4977;
          real r4AF9#1 = RMul(r4AF8,r4AD4);
          real r4AFA#1 = dof_load4980;
          real r4AFB#1 = RMul(r4AFA,r4AD7);
          real r4AFC#1 = dof_load498A;
          real r4AFD#1 = RMul(r4AFC,r4ADA);
          real r4AFE#1 = dof_load4994;
          real r4AFF#1 = RMul(r4AFE,r4ADD);
          real r4B00#1 = dof_load499E;
          real r4B01#1 = RMul(r4B00,r4AE0);
          real r4B02#1 = dof_load49A8;
          real r4B03#1 = RMul(r4B02,r4AE3);
          real r4B04#1 = dof_load49B2;
          real r4B05#1 = RMul(r4B04,r4AE6);
          real r4B06#1 = dof_load49BC;
          real r4B07#1 = RMul(r4B06,r4AE9);
          real r4B08#1 = RAdd(r4AF5,r4AF7);
          real r4B09#1 = RAdd(r4B08,r4AF9);
          real r4B0A#1 = RAdd(r4B09,r4AFB);
          real r4B0B#1 = RAdd(r4B0A,r4AFD);
          real r4B0C#1 = RAdd(r4B0B,r4AFF);
          real r4B0D#1 = RAdd(r4B0C,r4B01);
          real r4B0E#1 = RAdd(r4B0D,r4B03);
          real r4B0F#1 = RAdd(r4B0E,r4B05);
          real r4B10#3 = RAdd(r4B0F,r4B07);
          real r4B11#1 = dof_load4966;
          real r4B12#1 = RMul(r4B11,r4ACE);
          real r4B13#1 = dof_load496F;
          real r4B14#1 = RMul(r4B13,r4AD1);
          real r4B15#1 = dof_load4978;
          real r4B16#1 = RMul(r4B15,r4AD4);
          real r4B17#1 = dof_load4981;
          real r4B18#1 = RMul(r4B17,r4AD7);
          real r4B19#1 = dof_load498B;
          real r4B1A#1 = RMul(r4B19,r4ADA);
          real r4B1B#1 = dof_load4995;
          real r4B1C#1 = RMul(r4B1B,r4ADD);
          real r4B1D#1 = dof_load499F;
          real r4B1E#1 = RMul(r4B1D,r4AE0);
          real r4B1F#1 = dof_load49A9;
          real r4B20#1 = RMul(r4B1F,r4AE3);
          real r4B21#1 = dof_load49B3;
          real r4B22#1 = RMul(r4B21,r4AE6);
          real r4B23#1 = dof_load49BD;
          real r4B24#1 = RMul(r4B23,r4AE9);
          real r4B25#1 = RAdd(r4B12,r4B14);
          real r4B26#1 = RAdd(r4B25,r4B16);
          real r4B27#1 = RAdd(r4B26,r4B18);
          real r4B28#1 = RAdd(r4B27,r4B1A);
          real r4B29#1 = RAdd(r4B28,r4B1C);
          real r4B2A#1 = RAdd(r4B29,r4B1E);
          real r4B2B#1 = RAdd(r4B2A,r4B20);
          real r4B2C#1 = RAdd(r4B2B,r4B22);
          real r4B2D#3 = RAdd(r4B2C,r4B24);
          tensor[3] compositionl4ACC#2 = <tensor[3]>[r4AF3,r4B10,r4B2D];
          real op1_e3_l_204B91#1 = VDot<3>(compositionl4ACC,compositionl4ACC);
          real r4B95#1 = r4AF3;
          real r4B96#3 = RMul(_t44E4,stepSize42F0);
          real r4B97#1 = RMul(r4B96,r4B95);
          real r4B98#1 = r4B10;
          real r4B99#1 = RMul(r4B96,r4B98);
          real r4B9A#1 = r4B2D;
          real r4B9B#1 = RMul(r4B96,r4B9A);
          real op1_e3_l_224BA5#2 = Sqrt(op1_e3_l_204B91);
          real realLit4BA9#1 = 0.1e1;
          real r4BAA#3 = RDiv(realLit4BA9,op1_e3_l_224BA5);
          real r4BAB#1 = r4B97;
          real r4BAC#1 = RMul(r4BAA,r4BAB);
          real r4BAD#1 = r4B99;
          real r4BAE#1 = RMul(r4BAA,r4BAD);
          real r4BAF#1 = r4B9B;
          real r4BB0#1 = RMul(r4BAA,r4BAF);
          tensor[3] op1_e3_l_234BA8#1 = <tensor[3]>[r4BAC,r4BAE,r4BB0];
          tensor[3] altIntermed4BBB#6 = VAdd<3>(altCPos4300,op1_e3_l_234BA8);
          bool _t4BBE#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed47EF);
          femData:MeshPos _t4BC0#5 = findPos3B9C (meshData42EE,altIntermed4BBB);
          bool _t4BC2#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t4BC0);
          bool _t4BC4#1 = NEQ<bool>(_t4BBE,_t4BC2);
          if _t4BC4 then goto ASSIGN4BC8 else goto JOIN4BE0
        ASSIGN4BC8:  preds = [COND4BC6]
          string _t4BC7#1 = "ERG:Warning of validity intermed";
          string _t4BC9#3 = "\n";
          Print<[string,tensor[3],string]>(_t4BC7,startPos4302,_t4BC9);
          string _t4BCC#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t4BCC,altIntermed4BBB,_t4BC9);
          string _t4BCF#1 = "Cell change: ";
          femData:Mesh _t4BD1#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4337);
          int _t4BD3#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4337);
          femData:MeshCell _t4BD5#1 = LoadFem<femData:MeshCell>(_t4BD1,_t4BD3);
          string _t4BD7#1 = " to ";
          femData:Mesh _t4BD9#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4BC0);
          int _t4BDB#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4BC0);
          femData:MeshCell _t4BDD#1 = LoadFem<femData:MeshCell>(_t4BD9,_t4BDB);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t4BCF,_t4BD5,_t4BD7,_t4BDD,_t4BC9);
          goto JOIN4BE0
        JOIN4BE0:  preds = [MASSIGN4BDF,COND4BC6]
          bool _t4BE1#2 = BNot(_t4BBE);
          if _t4BE1 then goto ASSIGN4BE5 else goto ASSIGN5352
        ASSIGN4BE5:  preds = [COND4BE3]
          bool _t4BE4#1 = true;
          goto JOIN4BE8
        JOIN4BE8:  preds = [ASSIGN4BE5,ASSIGN5352]
          bool _t4BE6#1 = phi(_t4BE4,_t4BE7)
          if _t4BE6 then goto ASSIGN4BEB else goto JOIN4BF6
        ASSIGN4BEB:  preds = [COND4BE9]
          string _t4BEA#1 = "Went off the mesh\?";
          string _t4BEC#2 = " and ";
          bool _t4BEE#1 = BNot(_t4BC2);
          string _t4BF0#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t4BEA,_t4BE1,_t4BEC,altIntermed4BBB,_t4BEC,_t4BEE,_t4BF0);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN4BF6
        JOIN4BF6:  preds = [*STABILIZE4BF5,COND4BE9]
          tensor[3] _t4BF7#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed47EF);
          int _t4BF9#3 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed47EF);
          femData:Mesh _t4BFB#18 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed47EF);
          int ilit4BFE#1 = 4;
          int mulRes4BFF#4 = IMul(_t4BF9,ilit4BFE);
          int addRes4C01#1 = mulRes4BFF;
          int idx4C02#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C01);
          int ilit4C03#1 = 1;
          int addRes4C04#1 = IAdd(mulRes4BFF,ilit4C03);
          int idx4C05#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C04);
          int ilit4C06#1 = 2;
          int addRes4C07#1 = IAdd(mulRes4BFF,ilit4C06);
          int idx4C08#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C07);
          int ilit4C09#1 = 3;
          int addRes4C0A#1 = IAdd(mulRes4BFF,ilit4C09);
          int idx4C0B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C0A);
          int ilit4C1F#4 = 3;
          int idx4C20#1 = idx4C02;
          int mulRes4C21#3 = IMul(ilit4C1F,idx4C20);
          int addRes4C22#1 = mulRes4C21;
          int ilit4C23#4 = 1;
          int addRes4C24#1 = IAdd(ilit4C23,mulRes4C21);
          int ilit4C25#4 = 2;
          int addRes4C26#1 = IAdd(ilit4C25,mulRes4C21);
          real dof_load4C27#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C22);
          real dof_load4C28#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C24);
          real dof_load4C29#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C26);
          int idx4C2B#1 = idx4C05;
          int mulRes4C2C#3 = IMul(ilit4C1F,idx4C2B);
          int addRes4C2D#1 = mulRes4C2C;
          int addRes4C2E#1 = IAdd(ilit4C23,mulRes4C2C);
          int addRes4C2F#1 = IAdd(ilit4C25,mulRes4C2C);
          real dof_load4C30#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2D);
          real dof_load4C31#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2E);
          real dof_load4C32#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2F);
          int idx4C34#1 = idx4C08;
          int mulRes4C35#3 = IMul(ilit4C1F,idx4C34);
          int addRes4C36#1 = mulRes4C35;
          int addRes4C37#1 = IAdd(ilit4C23,mulRes4C35);
          int addRes4C38#1 = IAdd(ilit4C25,mulRes4C35);
          real dof_load4C39#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C36);
          real dof_load4C3A#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C37);
          real dof_load4C3B#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C38);
          int idx4C3D#1 = idx4C0B;
          int mulRes4C3E#3 = IMul(ilit4C1F,idx4C3D);
          int addRes4C3F#1 = mulRes4C3E;
          int addRes4C40#1 = IAdd(ilit4C23,mulRes4C3E);
          int addRes4C41#1 = IAdd(ilit4C25,mulRes4C3E);
          real dof_load4C42#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C3F);
          real dof_load4C43#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C40);
          real dof_load4C44#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C41);
          real varAcc4C72#1 = VIndex<3,0>(_t4BF7);
          real varAcc4C73#1 = VIndex<3,1>(_t4BF7);
          real varAcc4C74#1 = VIndex<3,2>(_t4BF7);
          real coeff4C75#3 = -0.1e1;
          real iden4C76#1 = varAcc4C72;
          real one4C77#11 = 0.1e1;
          real prod4C78#2 = RMul(one4C77,one4C77);
          real prod4C79#2 = RMul(iden4C76,prod4C78);
          real iden4C7A#1 = varAcc4C73;
          real prod4C7B#1 = RMul(iden4C7A,one4C77);
          real prod4C7C#2 = RMul(one4C77,prod4C7B);
          real iden4C7D#1 = varAcc4C74;
          real prod4C7E#1 = RMul(one4C77,iden4C7D);
          real prod4C7F#2 = RMul(one4C77,prod4C7E);
          real prod4C80#1 = RMul(one4C77,prod4C78);
          real mult4C81#1 = RMul(one4C77,prod4C80);
          real mult4C82#1 = RMul(coeff4C75,prod4C7F);
          real mult4C83#1 = RMul(coeff4C75,prod4C7C);
          real mult4C84#1 = RMul(coeff4C75,prod4C79);
          real sum4C85#1 = RAdd(mult4C83,mult4C84);
          real sum4C86#1 = RAdd(mult4C82,sum4C85);
          real sum4C87#1 = RAdd(mult4C81,sum4C86);
          real intermediate4C88#2 = sum4C87;
          real basisEval4C89#2 = RMul(one4C77,prod4C79);
          real basisEval4C8A#2 = RMul(one4C77,prod4C7C);
          real basisEval4C8B#2 = RMul(one4C77,prod4C7F);
          real r4CAA#1 = dof_load4C27;
          real r4CAB#3 = intermediate4C88;
          real r4CAC#1 = RMul(r4CAA,r4CAB);
          real r4CAD#1 = dof_load4C30;
          real r4CAE#3 = basisEval4C89;
          real r4CAF#1 = RMul(r4CAD,r4CAE);
          real r4CB0#1 = dof_load4C39;
          real r4CB1#3 = basisEval4C8A;
          real r4CB2#1 = RMul(r4CB0,r4CB1);
          real r4CB3#1 = dof_load4C42;
          real r4CB4#3 = basisEval4C8B;
          real r4CB5#1 = RMul(r4CB3,r4CB4);
          real r4CB6#1 = RAdd(r4CAC,r4CAF);
          real r4CB7#1 = RAdd(r4CB6,r4CB2);
          real r4CB8#1 = RAdd(r4CB7,r4CB5);
          real r4CB9#1 = dof_load4C28;
          real r4CBA#1 = RMul(r4CB9,r4CAB);
          real r4CBB#1 = dof_load4C31;
          real r4CBC#1 = RMul(r4CBB,r4CAE);
          real r4CBD#1 = dof_load4C3A;
          real r4CBE#1 = RMul(r4CBD,r4CB1);
          real r4CBF#1 = dof_load4C43;
          real r4CC0#1 = RMul(r4CBF,r4CB4);
          real r4CC1#1 = RAdd(r4CBA,r4CBC);
          real r4CC2#1 = RAdd(r4CC1,r4CBE);
          real r4CC3#1 = RAdd(r4CC2,r4CC0);
          real r4CC4#1 = dof_load4C29;
          real r4CC5#1 = RMul(r4CC4,r4CAB);
          real r4CC6#1 = dof_load4C32;
          real r4CC7#1 = RMul(r4CC6,r4CAE);
          real r4CC8#1 = dof_load4C3B;
          real r4CC9#1 = RMul(r4CC8,r4CB1);
          real r4CCA#1 = dof_load4C44;
          real r4CCB#1 = RMul(r4CCA,r4CB4);
          real r4CCC#1 = RAdd(r4CC5,r4CC7);
          real r4CCD#1 = RAdd(r4CCC,r4CC9);
          real r4CCE#1 = RAdd(r4CCD,r4CCB);
          tensor[3] _t4CA9#1 = <tensor[3]>[r4CB8,r4CC3,r4CCE];
          real r4CF7#1 = dof_load4C27;
          real r4CF8#3 = intermediate4C88;
          real r4CF9#1 = RMul(r4CF7,r4CF8);
          real r4CFA#1 = dof_load4C30;
          real r4CFB#3 = basisEval4C89;
          real r4CFC#1 = RMul(r4CFA,r4CFB);
          real r4CFD#1 = dof_load4C39;
          real r4CFE#3 = basisEval4C8A;
          real r4CFF#1 = RMul(r4CFD,r4CFE);
          real r4D00#1 = dof_load4C42;
          real r4D01#3 = basisEval4C8B;
          real r4D02#1 = RMul(r4D00,r4D01);
          real r4D03#1 = RAdd(r4CF9,r4CFC);
          real r4D04#1 = RAdd(r4D03,r4CFF);
          real r4D05#1 = RAdd(r4D04,r4D02);
          real r4D06#1 = dof_load4C28;
          real r4D07#1 = RMul(r4D06,r4CF8);
          real r4D08#1 = dof_load4C31;
          real r4D09#1 = RMul(r4D08,r4CFB);
          real r4D0A#1 = dof_load4C3A;
          real r4D0B#1 = RMul(r4D0A,r4CFE);
          real r4D0C#1 = dof_load4C43;
          real r4D0D#1 = RMul(r4D0C,r4D01);
          real r4D0E#1 = RAdd(r4D07,r4D09);
          real r4D0F#1 = RAdd(r4D0E,r4D0B);
          real r4D10#1 = RAdd(r4D0F,r4D0D);
          real r4D11#1 = dof_load4C29;
          real r4D12#1 = RMul(r4D11,r4CF8);
          real r4D13#1 = dof_load4C32;
          real r4D14#1 = RMul(r4D13,r4CFB);
          real r4D15#1 = dof_load4C3B;
          real r4D16#1 = RMul(r4D15,r4CFE);
          real r4D17#1 = dof_load4C44;
          real r4D18#1 = RMul(r4D17,r4D01);
          real r4D19#1 = RAdd(r4D12,r4D14);
          real r4D1A#1 = RAdd(r4D19,r4D16);
          real r4D1B#1 = RAdd(r4D1A,r4D18);
          tensor[3] probe_l_214CF6#1 = <tensor[3]>[r4D05,r4D10,r4D1B];
          tensor[3] op1_e3_l_394D43#2 = VSub<3>(probe_l_214CF6,altIntermed4BBB);
          real op1_e3_l_414D46#1 = VDot<3>(op1_e3_l_394D43,op1_e3_l_394D43);
          real _t4D49#1 = Sqrt(op1_e3_l_414D46);
          bool _t4D4C#1 = GT<real>(_t4D49,_t44BF);
          if _t4D4C then goto ASSIGN4D50 else goto ASSIGN534C
        ASSIGN4D50:  preds = [COND4D4E]
          string _t4D4F#1 = "ERG:Error in tracing 2: At step:";
          string _t4D51#1 = " with particle:";
          string _t4D53#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t4D4F,step42FC,_t4D51,startPos4302,_t4D53);
          string _t4D56#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t4D56,_t4CA9,altIntermed4BBB,_t4D53);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN4D5C
        JOIN4D5C:  preds = [*STABILIZE4D5B,MASSIGN5351]
          if _t4BBE then goto ASSIGN4D5F else goto ASSIGN5345
        ASSIGN4D5F:  preds = [COND4D5D]
          femData:MeshCell c4D5E#1 = LoadFem<femData:MeshCell>(_t4BFB,_t4BF9);
          int _t4D60#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c4D5E);
          femData:FuncCell _t4D62#2 = LoadFem<femData:FuncCell>(data42EC,_t4D60);
          femData:FemFunc _t4D64#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t4D62);
          femData:Space _t4D66#10 = ExtractFem<femData:Space,femData:FemFunc>(_t4D64);
          int _t4D68#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t4D62);
          int ilit4D6B#1 = 10;
          int mulRes4D6C#10 = IMul(_t4D68,ilit4D6B);
          int addRes4D6E#1 = mulRes4D6C;
          int idx4D6F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D6E);
          int ilit4D70#1 = 1;
          int addRes4D71#1 = IAdd(mulRes4D6C,ilit4D70);
          int idx4D72#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D71);
          int ilit4D73#1 = 2;
          int addRes4D74#1 = IAdd(mulRes4D6C,ilit4D73);
          int idx4D75#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D74);
          int ilit4D76#1 = 3;
          int addRes4D77#1 = IAdd(mulRes4D6C,ilit4D76);
          int idx4D78#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D77);
          int ilit4D79#1 = 4;
          int addRes4D7A#1 = IAdd(mulRes4D6C,ilit4D79);
          int idx4D7B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D7A);
          int ilit4D7C#1 = 5;
          int addRes4D7D#1 = IAdd(mulRes4D6C,ilit4D7C);
          int idx4D7E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D7D);
          int ilit4D7F#1 = 6;
          int addRes4D80#1 = IAdd(mulRes4D6C,ilit4D7F);
          int idx4D81#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D80);
          int ilit4D82#1 = 7;
          int addRes4D83#1 = IAdd(mulRes4D6C,ilit4D82);
          int idx4D84#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D83);
          int ilit4D85#1 = 8;
          int addRes4D86#1 = IAdd(mulRes4D6C,ilit4D85);
          int idx4D87#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D86);
          int ilit4D88#1 = 9;
          int addRes4D89#1 = IAdd(mulRes4D6C,ilit4D88);
          int idx4D8A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D89);
          int ilit4DB0#10 = 3;
          int idx4DB1#1 = idx4D6F;
          int mulRes4DB2#3 = IMul(ilit4DB0,idx4DB1);
          int addRes4DB3#1 = mulRes4DB2;
          int ilit4DB4#10 = 1;
          int addRes4DB5#1 = IAdd(ilit4DB4,mulRes4DB2);
          int ilit4DB6#10 = 2;
          int addRes4DB7#1 = IAdd(ilit4DB6,mulRes4DB2);
          real dof_load4DB8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB3);
          real dof_load4DB9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB5);
          real dof_load4DBA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB7);
          int idx4DBC#1 = idx4D72;
          int mulRes4DBD#3 = IMul(ilit4DB0,idx4DBC);
          int addRes4DBE#1 = mulRes4DBD;
          int addRes4DBF#1 = IAdd(ilit4DB4,mulRes4DBD);
          int addRes4DC0#1 = IAdd(ilit4DB6,mulRes4DBD);
          real dof_load4DC1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DBE);
          real dof_load4DC2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DBF);
          real dof_load4DC3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC0);
          int idx4DC5#1 = idx4D75;
          int mulRes4DC6#3 = IMul(ilit4DB0,idx4DC5);
          int addRes4DC7#1 = mulRes4DC6;
          int addRes4DC8#1 = IAdd(ilit4DB4,mulRes4DC6);
          int addRes4DC9#1 = IAdd(ilit4DB6,mulRes4DC6);
          real dof_load4DCA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC7);
          real dof_load4DCB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC8);
          real dof_load4DCC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC9);
          int idx4DCE#1 = idx4D78;
          int mulRes4DCF#3 = IMul(ilit4DB0,idx4DCE);
          int addRes4DD0#1 = mulRes4DCF;
          int addRes4DD1#1 = IAdd(ilit4DB4,mulRes4DCF);
          int addRes4DD2#1 = IAdd(ilit4DB6,mulRes4DCF);
          real dof_load4DD3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD0);
          real dof_load4DD4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD1);
          real dof_load4DD5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD2);
          int idx4DD8#1 = idx4D7B;
          int mulRes4DD9#3 = IMul(ilit4DB0,idx4DD8);
          int addRes4DDA#1 = mulRes4DD9;
          int addRes4DDB#1 = IAdd(ilit4DB4,mulRes4DD9);
          int addRes4DDC#1 = IAdd(ilit4DB6,mulRes4DD9);
          real dof_load4DDD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDA);
          real dof_load4DDE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDB);
          real dof_load4DDF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDC);
          int idx4DE2#1 = idx4D7E;
          int mulRes4DE3#3 = IMul(ilit4DB0,idx4DE2);
          int addRes4DE4#1 = mulRes4DE3;
          int addRes4DE5#1 = IAdd(ilit4DB4,mulRes4DE3);
          int addRes4DE6#1 = IAdd(ilit4DB6,mulRes4DE3);
          real dof_load4DE7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE4);
          real dof_load4DE8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE5);
          real dof_load4DE9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE6);
          int idx4DEC#1 = idx4D81;
          int mulRes4DED#3 = IMul(ilit4DB0,idx4DEC);
          int addRes4DEE#1 = mulRes4DED;
          int addRes4DEF#1 = IAdd(ilit4DB4,mulRes4DED);
          int addRes4DF0#1 = IAdd(ilit4DB6,mulRes4DED);
          real dof_load4DF1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DEE);
          real dof_load4DF2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DEF);
          real dof_load4DF3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF0);
          int idx4DF6#1 = idx4D84;
          int mulRes4DF7#3 = IMul(ilit4DB0,idx4DF6);
          int addRes4DF8#1 = mulRes4DF7;
          int addRes4DF9#1 = IAdd(ilit4DB4,mulRes4DF7);
          int addRes4DFA#1 = IAdd(ilit4DB6,mulRes4DF7);
          real dof_load4DFB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF8);
          real dof_load4DFC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF9);
          real dof_load4DFD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DFA);
          int idx4E00#1 = idx4D87;
          int mulRes4E01#3 = IMul(ilit4DB0,idx4E00);
          int addRes4E02#1 = mulRes4E01;
          int addRes4E03#1 = IAdd(ilit4DB4,mulRes4E01);
          int addRes4E04#1 = IAdd(ilit4DB6,mulRes4E01);
          real dof_load4E05#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E02);
          real dof_load4E06#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E03);
          real dof_load4E07#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E04);
          int idx4E0A#1 = idx4D8A;
          int mulRes4E0B#3 = IMul(ilit4DB0,idx4E0A);
          int addRes4E0C#1 = mulRes4E0B;
          int addRes4E0D#1 = IAdd(ilit4DB4,mulRes4E0B);
          int addRes4E0E#1 = IAdd(ilit4DB6,mulRes4E0B);
          real dof_load4E0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0C);
          real dof_load4E10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0D);
          real dof_load4E11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0E);
          real varAcc4E7B#2 = VIndex<3,0>(_t4BF7);
          real varAcc4E7C#2 = VIndex<3,1>(_t4BF7);
          real varAcc4E7D#2 = VIndex<3,2>(_t4BF7);
          real coeff4E7E#3 = 0.2e1;
          real iden4E7F#4 = varAcc4E7B;
          real prod24E80#1 = RMul(iden4E7F,varAcc4E7B);
          real one4E81#13 = 0.1e1;
          real prod4E82#3 = RMul(one4E81,one4E81);
          real prod4E83#2 = RMul(prod24E80,prod4E82);
          real coeff4E84#6 = 0.4e1;
          real iden4E85#3 = varAcc4E7C;
          real prod4E86#2 = RMul(iden4E85,one4E81);
          real prod4E87#2 = RMul(iden4E7F,prod4E86);
          real iden4E88#3 = varAcc4E7D;
          real prod4E89#2 = RMul(one4E81,iden4E88);
          real prod4E8A#2 = RMul(iden4E7F,prod4E89);
          real coeff4E8B#3 = -0.3e1;
          real prod4E8C#3 = RMul(iden4E7F,prod4E82);
          real prod24E8D#1 = RMul(iden4E85,varAcc4E7C);
          real prod4E8E#1 = RMul(prod24E8D,one4E81);
          real prod4E8F#2 = RMul(one4E81,prod4E8E);
          real prod4E90#1 = RMul(iden4E85,iden4E88);
          real prod4E91#2 = RMul(one4E81,prod4E90);
          real prod4E92#3 = RMul(one4E81,prod4E86);
          real prod24E93#1 = RMul(iden4E88,varAcc4E7D);
          real prod4E94#1 = RMul(one4E81,prod24E93);
          real prod4E95#2 = RMul(one4E81,prod4E94);
          real prod4E96#3 = RMul(one4E81,prod4E89);
          real prod4E97#1 = RMul(one4E81,prod4E82);
          real mult4E98#1 = RMul(one4E81,prod4E97);
          real mult4E99#1 = RMul(coeff4E8B,prod4E96);
          real mult4E9A#2 = RMul(coeff4E7E,prod4E95);
          real mult4E9B#1 = RMul(coeff4E8B,prod4E92);
          real mult4E9C#2 = RMul(coeff4E84,prod4E91);
          real mult4E9D#2 = RMul(coeff4E7E,prod4E8F);
          real mult4E9E#1 = RMul(coeff4E8B,prod4E8C);
          real mult4E9F#2 = RMul(coeff4E84,prod4E8A);
          real mult4EA0#2 = RMul(coeff4E84,prod4E87);
          real mult4EA1#2 = RMul(coeff4E7E,prod4E83);
          real sum4EA2#1 = RAdd(mult4EA0,mult4EA1);
          real sum4EA3#1 = RAdd(mult4E9F,sum4EA2);
          real sum4EA4#1 = RAdd(mult4E9E,sum4EA3);
          real sum4EA5#1 = RAdd(mult4E9D,sum4EA4);
          real sum4EA6#1 = RAdd(mult4E9C,sum4EA5);
          real sum4EA7#1 = RAdd(mult4E9B,sum4EA6);
          real sum4EA8#1 = RAdd(mult4E9A,sum4EA7);
          real sum4EA9#1 = RAdd(mult4E99,sum4EA8);
          real sum4EAA#1 = RAdd(mult4E98,sum4EA9);
          real intermediate4EAB#1 = sum4EAA;
          real coeff4EAC#3 = -0.1e1;
          real mult4EAD#1 = RMul(coeff4EAC,prod4E8C);
          real sum4EAE#1 = RAdd(mult4EAD,mult4EA1);
          real intermediate4EAF#1 = sum4EAE;
          real mult4EB0#1 = RMul(coeff4EAC,prod4E92);
          real sum4EB1#1 = RAdd(mult4EB0,mult4E9D);
          real intermediate4EB2#1 = sum4EB1;
          real mult4EB3#1 = RMul(coeff4EAC,prod4E96);
          real sum4EB4#1 = RAdd(mult4EB3,mult4E9A);
          real intermediate4EB5#1 = sum4EB4;
          real coeff4EB6#6 = -0.4e1;
          real mult4EB7#1 = RMul(coeff4E84,prod4E96);
          real mult4EB8#1 = RMul(coeff4EB6,prod4E95);
          real mult4EB9#2 = RMul(coeff4EB6,prod4E91);
          real mult4EBA#2 = RMul(coeff4EB6,prod4E8A);
          real sum4EBB#1 = RAdd(mult4EB9,mult4EBA);
          real sum4EBC#1 = RAdd(mult4EB8,sum4EBB);
          real sum4EBD#1 = RAdd(mult4EB7,sum4EBC);
          real intermediate4EBE#1 = sum4EBD;
          real mult4EBF#1 = RMul(coeff4E84,prod4E92);
          real mult4EC0#1 = RMul(coeff4EB6,prod4E8F);
          real mult4EC1#2 = RMul(coeff4EB6,prod4E87);
          real sum4EC2#1 = RAdd(mult4EC0,mult4EC1);
          real sum4EC3#1 = RAdd(mult4EB9,sum4EC2);
          real sum4EC4#1 = RAdd(mult4EBF,sum4EC3);
          real intermediate4EC5#1 = sum4EC4;
          real mult4EC6#1 = RMul(coeff4E84,prod4E8C);
          real mult4EC7#1 = RMul(coeff4EB6,prod4E83);
          real sum4EC8#1 = RAdd(mult4EC1,mult4EC7);
          real sum4EC9#1 = RAdd(mult4EBA,sum4EC8);
          real sum4ECA#1 = RAdd(mult4EC6,sum4EC9);
          real intermediate4ECB#1 = sum4ECA;
          real r4F21#1 = dof_load4DB8;
          real r4F22#3 = intermediate4EAB;
          real r4F23#1 = RMul(r4F21,r4F22);
          real r4F24#1 = dof_load4DC1;
          real r4F25#3 = intermediate4EAF;
          real r4F26#1 = RMul(r4F24,r4F25);
          real r4F27#1 = dof_load4DCA;
          real r4F28#3 = intermediate4EB2;
          real r4F29#1 = RMul(r4F27,r4F28);
          real r4F2A#1 = dof_load4DD3;
          real r4F2B#3 = intermediate4EB5;
          real r4F2C#1 = RMul(r4F2A,r4F2B);
          real r4F2D#1 = dof_load4DDD;
          real r4F2E#3 = mult4E9C;
          real r4F2F#1 = RMul(r4F2D,r4F2E);
          real r4F30#1 = dof_load4DE7;
          real r4F31#3 = mult4E9F;
          real r4F32#1 = RMul(r4F30,r4F31);
          real r4F33#1 = dof_load4DF1;
          real r4F34#3 = mult4EA0;
          real r4F35#1 = RMul(r4F33,r4F34);
          real r4F36#1 = dof_load4DFB;
          real r4F37#3 = intermediate4EBE;
          real r4F38#1 = RMul(r4F36,r4F37);
          real r4F39#1 = dof_load4E05;
          real r4F3A#3 = intermediate4EC5;
          real r4F3B#1 = RMul(r4F39,r4F3A);
          real r4F3C#1 = dof_load4E0F;
          real r4F3D#3 = intermediate4ECB;
          real r4F3E#1 = RMul(r4F3C,r4F3D);
          real r4F3F#1 = RAdd(r4F23,r4F26);
          real r4F40#1 = RAdd(r4F3F,r4F29);
          real r4F41#1 = RAdd(r4F40,r4F2C);
          real r4F42#1 = RAdd(r4F41,r4F2F);
          real r4F43#1 = RAdd(r4F42,r4F32);
          real r4F44#1 = RAdd(r4F43,r4F35);
          real r4F45#1 = RAdd(r4F44,r4F38);
          real r4F46#1 = RAdd(r4F45,r4F3B);
          real r4F47#2 = RAdd(r4F46,r4F3E);
          real r4F48#1 = dof_load4DB9;
          real r4F49#1 = RMul(r4F48,r4F22);
          real r4F4A#1 = dof_load4DC2;
          real r4F4B#1 = RMul(r4F4A,r4F25);
          real r4F4C#1 = dof_load4DCB;
          real r4F4D#1 = RMul(r4F4C,r4F28);
          real r4F4E#1 = dof_load4DD4;
          real r4F4F#1 = RMul(r4F4E,r4F2B);
          real r4F50#1 = dof_load4DDE;
          real r4F51#1 = RMul(r4F50,r4F2E);
          real r4F52#1 = dof_load4DE8;
          real r4F53#1 = RMul(r4F52,r4F31);
          real r4F54#1 = dof_load4DF2;
          real r4F55#1 = RMul(r4F54,r4F34);
          real r4F56#1 = dof_load4DFC;
          real r4F57#1 = RMul(r4F56,r4F37);
          real r4F58#1 = dof_load4E06;
          real r4F59#1 = RMul(r4F58,r4F3A);
          real r4F5A#1 = dof_load4E10;
          real r4F5B#1 = RMul(r4F5A,r4F3D);
          real r4F5C#1 = RAdd(r4F49,r4F4B);
          real r4F5D#1 = RAdd(r4F5C,r4F4D);
          real r4F5E#1 = RAdd(r4F5D,r4F4F);
          real r4F5F#1 = RAdd(r4F5E,r4F51);
          real r4F60#1 = RAdd(r4F5F,r4F53);
          real r4F61#1 = RAdd(r4F60,r4F55);
          real r4F62#1 = RAdd(r4F61,r4F57);
          real r4F63#1 = RAdd(r4F62,r4F59);
          real r4F64#2 = RAdd(r4F63,r4F5B);
          real r4F65#1 = dof_load4DBA;
          real r4F66#1 = RMul(r4F65,r4F22);
          real r4F67#1 = dof_load4DC3;
          real r4F68#1 = RMul(r4F67,r4F25);
          real r4F69#1 = dof_load4DCC;
          real r4F6A#1 = RMul(r4F69,r4F28);
          real r4F6B#1 = dof_load4DD5;
          real r4F6C#1 = RMul(r4F6B,r4F2B);
          real r4F6D#1 = dof_load4DDF;
          real r4F6E#1 = RMul(r4F6D,r4F2E);
          real r4F6F#1 = dof_load4DE9;
          real r4F70#1 = RMul(r4F6F,r4F31);
          real r4F71#1 = dof_load4DF3;
          real r4F72#1 = RMul(r4F71,r4F34);
          real r4F73#1 = dof_load4DFD;
          real r4F74#1 = RMul(r4F73,r4F37);
          real r4F75#1 = dof_load4E07;
          real r4F76#1 = RMul(r4F75,r4F3A);
          real r4F77#1 = dof_load4E11;
          real r4F78#1 = RMul(r4F77,r4F3D);
          real r4F79#1 = RAdd(r4F66,r4F68);
          real r4F7A#1 = RAdd(r4F79,r4F6A);
          real r4F7B#1 = RAdd(r4F7A,r4F6C);
          real r4F7C#1 = RAdd(r4F7B,r4F6E);
          real r4F7D#1 = RAdd(r4F7C,r4F70);
          real r4F7E#1 = RAdd(r4F7D,r4F72);
          real r4F7F#1 = RAdd(r4F7E,r4F74);
          real r4F80#1 = RAdd(r4F7F,r4F76);
          real r4F81#2 = RAdd(r4F80,r4F78);
          tensor[3] probe_l_84F20#2 = <tensor[3]>[r4F47,r4F64,r4F81];
          real op1_e3_l_114FE5#1 = VDot<3>(probe_l_84F20,probe_l_84F20);
          real op1_e3_l_124FE8#1 = Sqrt(op1_e3_l_114FE5);
          real realLit4FEC#1 = 0.1e1;
          real r4FED#3 = RDiv(realLit4FEC,op1_e3_l_124FE8);
          real r4FEE#1 = r4F47;
          real r4FEF#1 = RMul(r4FED,r4FEE);
          real r4FF0#1 = r4F64;
          real r4FF1#1 = RMul(r4FED,r4FF0);
          real r4FF2#1 = r4F81;
          real r4FF3#1 = RMul(r4FED,r4FF2);
          tensor[3] _t4FEB#1 = <tensor[3]>[r4FEF,r4FF1,r4FF3];
          goto JOIN5000
        JOIN5000:  preds = [ASSIGN4FFD,ASSIGN534A]
          tensor[3] _t4FFE#1 = phi(_t4FEB,_t4FFF)
          tensor[3] up25001#4 = VScale<3>(stepSize42F0,_t4FFE);
          femData:MeshPos cPos5004#1 = fn_2FB47F0 (cPos42FE,up25001);
          femData:MeshPos callFindPos5006#2 = findPos3B9C (_t42E8,altIntermed4BBB);
          int intPos5008#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5006);
          tensor[3] refPos500A#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5006);
          int ilit500D#1 = 10;
          int mulRes500E#10 = IMul(intPos5008,ilit500D);
          int addRes5010#1 = mulRes500E;
          int idx5011#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5010);
          int ilit5012#1 = 1;
          int addRes5013#1 = IAdd(mulRes500E,ilit5012);
          int idx5014#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5013);
          int ilit5015#1 = 2;
          int addRes5016#1 = IAdd(mulRes500E,ilit5015);
          int idx5017#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5016);
          int ilit5018#1 = 3;
          int addRes5019#1 = IAdd(mulRes500E,ilit5018);
          int idx501A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5019);
          int ilit501B#1 = 4;
          int addRes501C#1 = IAdd(mulRes500E,ilit501B);
          int idx501D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes501C);
          int ilit501E#1 = 5;
          int addRes501F#1 = IAdd(mulRes500E,ilit501E);
          int idx5020#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes501F);
          int ilit5021#1 = 6;
          int addRes5022#1 = IAdd(mulRes500E,ilit5021);
          int idx5023#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5022);
          int ilit5024#1 = 7;
          int addRes5025#1 = IAdd(mulRes500E,ilit5024);
          int idx5026#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5025);
          int ilit5027#1 = 8;
          int addRes5028#1 = IAdd(mulRes500E,ilit5027);
          int idx5029#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5028);
          int ilit502A#1 = 9;
          int addRes502B#1 = IAdd(mulRes500E,ilit502A);
          int idx502C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes502B);
          int ilit5052#10 = 3;
          int idx5053#1 = idx5011;
          int mulRes5054#3 = IMul(ilit5052,idx5053);
          int addRes5055#1 = mulRes5054;
          int ilit5056#10 = 1;
          int addRes5057#1 = IAdd(ilit5056,mulRes5054);
          int ilit5058#10 = 2;
          int addRes5059#1 = IAdd(ilit5058,mulRes5054);
          real dof_load505A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5055);
          real dof_load505B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5057);
          real dof_load505C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5059);
          int idx505E#1 = idx5014;
          int mulRes505F#3 = IMul(ilit5052,idx505E);
          int addRes5060#1 = mulRes505F;
          int addRes5061#1 = IAdd(ilit5056,mulRes505F);
          int addRes5062#1 = IAdd(ilit5058,mulRes505F);
          real dof_load5063#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5060);
          real dof_load5064#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5061);
          real dof_load5065#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5062);
          int idx5067#1 = idx5017;
          int mulRes5068#3 = IMul(ilit5052,idx5067);
          int addRes5069#1 = mulRes5068;
          int addRes506A#1 = IAdd(ilit5056,mulRes5068);
          int addRes506B#1 = IAdd(ilit5058,mulRes5068);
          real dof_load506C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5069);
          real dof_load506D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes506A);
          real dof_load506E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes506B);
          int idx5070#1 = idx501A;
          int mulRes5071#3 = IMul(ilit5052,idx5070);
          int addRes5072#1 = mulRes5071;
          int addRes5073#1 = IAdd(ilit5056,mulRes5071);
          int addRes5074#1 = IAdd(ilit5058,mulRes5071);
          real dof_load5075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5072);
          real dof_load5076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5073);
          real dof_load5077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5074);
          int idx507A#1 = idx501D;
          int mulRes507B#3 = IMul(ilit5052,idx507A);
          int addRes507C#1 = mulRes507B;
          int addRes507D#1 = IAdd(ilit5056,mulRes507B);
          int addRes507E#1 = IAdd(ilit5058,mulRes507B);
          real dof_load507F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507C);
          real dof_load5080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507D);
          real dof_load5081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507E);
          int idx5084#1 = idx5020;
          int mulRes5085#3 = IMul(ilit5052,idx5084);
          int addRes5086#1 = mulRes5085;
          int addRes5087#1 = IAdd(ilit5056,mulRes5085);
          int addRes5088#1 = IAdd(ilit5058,mulRes5085);
          real dof_load5089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5086);
          real dof_load508A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5087);
          real dof_load508B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5088);
          int idx508E#1 = idx5023;
          int mulRes508F#3 = IMul(ilit5052,idx508E);
          int addRes5090#1 = mulRes508F;
          int addRes5091#1 = IAdd(ilit5056,mulRes508F);
          int addRes5092#1 = IAdd(ilit5058,mulRes508F);
          real dof_load5093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5090);
          real dof_load5094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5091);
          real dof_load5095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5092);
          int idx5098#1 = idx5026;
          int mulRes5099#3 = IMul(ilit5052,idx5098);
          int addRes509A#1 = mulRes5099;
          int addRes509B#1 = IAdd(ilit5056,mulRes5099);
          int addRes509C#1 = IAdd(ilit5058,mulRes5099);
          real dof_load509D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509A);
          real dof_load509E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509B);
          real dof_load509F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509C);
          int idx50A2#1 = idx5029;
          int mulRes50A3#3 = IMul(ilit5052,idx50A2);
          int addRes50A4#1 = mulRes50A3;
          int addRes50A5#1 = IAdd(ilit5056,mulRes50A3);
          int addRes50A6#1 = IAdd(ilit5058,mulRes50A3);
          real dof_load50A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A4);
          real dof_load50A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A5);
          real dof_load50A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A6);
          int idx50AC#1 = idx502C;
          int mulRes50AD#3 = IMul(ilit5052,idx50AC);
          int addRes50AE#1 = mulRes50AD;
          int addRes50AF#1 = IAdd(ilit5056,mulRes50AD);
          int addRes50B0#1 = IAdd(ilit5058,mulRes50AD);
          real dof_load50B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50AE);
          real dof_load50B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50AF);
          real dof_load50B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50B0);
          real varAcc511D#2 = VIndex<3,0>(refPos500A);
          real varAcc511E#2 = VIndex<3,1>(refPos500A);
          real varAcc511F#2 = VIndex<3,2>(refPos500A);
          real coeff5120#3 = 0.2e1;
          real iden5121#4 = varAcc511D;
          real prod25122#1 = RMul(iden5121,varAcc511D);
          real one5123#13 = 0.1e1;
          real prod5124#3 = RMul(one5123,one5123);
          real prod5125#2 = RMul(prod25122,prod5124);
          real coeff5126#6 = 0.4e1;
          real iden5127#3 = varAcc511E;
          real prod5128#2 = RMul(iden5127,one5123);
          real prod5129#2 = RMul(iden5121,prod5128);
          real iden512A#3 = varAcc511F;
          real prod512B#2 = RMul(one5123,iden512A);
          real prod512C#2 = RMul(iden5121,prod512B);
          real coeff512D#3 = -0.3e1;
          real prod512E#3 = RMul(iden5121,prod5124);
          real prod2512F#1 = RMul(iden5127,varAcc511E);
          real prod5130#1 = RMul(prod2512F,one5123);
          real prod5131#2 = RMul(one5123,prod5130);
          real prod5132#1 = RMul(iden5127,iden512A);
          real prod5133#2 = RMul(one5123,prod5132);
          real prod5134#3 = RMul(one5123,prod5128);
          real prod25135#1 = RMul(iden512A,varAcc511F);
          real prod5136#1 = RMul(one5123,prod25135);
          real prod5137#2 = RMul(one5123,prod5136);
          real prod5138#3 = RMul(one5123,prod512B);
          real prod5139#1 = RMul(one5123,prod5124);
          real mult513A#1 = RMul(one5123,prod5139);
          real mult513B#1 = RMul(coeff512D,prod5138);
          real mult513C#2 = RMul(coeff5120,prod5137);
          real mult513D#1 = RMul(coeff512D,prod5134);
          real mult513E#2 = RMul(coeff5126,prod5133);
          real mult513F#2 = RMul(coeff5120,prod5131);
          real mult5140#1 = RMul(coeff512D,prod512E);
          real mult5141#2 = RMul(coeff5126,prod512C);
          real mult5142#2 = RMul(coeff5126,prod5129);
          real mult5143#2 = RMul(coeff5120,prod5125);
          real sum5144#1 = RAdd(mult5142,mult5143);
          real sum5145#1 = RAdd(mult5141,sum5144);
          real sum5146#1 = RAdd(mult5140,sum5145);
          real sum5147#1 = RAdd(mult513F,sum5146);
          real sum5148#1 = RAdd(mult513E,sum5147);
          real sum5149#1 = RAdd(mult513D,sum5148);
          real sum514A#1 = RAdd(mult513C,sum5149);
          real sum514B#1 = RAdd(mult513B,sum514A);
          real sum514C#1 = RAdd(mult513A,sum514B);
          real intermediate514D#1 = sum514C;
          real coeff514E#3 = -0.1e1;
          real mult514F#1 = RMul(coeff514E,prod512E);
          real sum5150#1 = RAdd(mult514F,mult5143);
          real intermediate5151#1 = sum5150;
          real mult5152#1 = RMul(coeff514E,prod5134);
          real sum5153#1 = RAdd(mult5152,mult513F);
          real intermediate5154#1 = sum5153;
          real mult5155#1 = RMul(coeff514E,prod5138);
          real sum5156#1 = RAdd(mult5155,mult513C);
          real intermediate5157#1 = sum5156;
          real coeff5158#6 = -0.4e1;
          real mult5159#1 = RMul(coeff5126,prod5138);
          real mult515A#1 = RMul(coeff5158,prod5137);
          real mult515B#2 = RMul(coeff5158,prod5133);
          real mult515C#2 = RMul(coeff5158,prod512C);
          real sum515D#1 = RAdd(mult515B,mult515C);
          real sum515E#1 = RAdd(mult515A,sum515D);
          real sum515F#1 = RAdd(mult5159,sum515E);
          real intermediate5160#1 = sum515F;
          real mult5161#1 = RMul(coeff5126,prod5134);
          real mult5162#1 = RMul(coeff5158,prod5131);
          real mult5163#2 = RMul(coeff5158,prod5129);
          real sum5164#1 = RAdd(mult5162,mult5163);
          real sum5165#1 = RAdd(mult515B,sum5164);
          real sum5166#1 = RAdd(mult5161,sum5165);
          real intermediate5167#1 = sum5166;
          real mult5168#1 = RMul(coeff5126,prod512E);
          real mult5169#1 = RMul(coeff5158,prod5125);
          real sum516A#1 = RAdd(mult5163,mult5169);
          real sum516B#1 = RAdd(mult515C,sum516A);
          real sum516C#1 = RAdd(mult5168,sum516B);
          real intermediate516D#1 = sum516C;
          real r51C3#1 = dof_load505A;
          real r51C4#3 = intermediate514D;
          real r51C5#1 = RMul(r51C3,r51C4);
          real r51C6#1 = dof_load5063;
          real r51C7#3 = intermediate5151;
          real r51C8#1 = RMul(r51C6,r51C7);
          real r51C9#1 = dof_load506C;
          real r51CA#3 = intermediate5154;
          real r51CB#1 = RMul(r51C9,r51CA);
          real r51CC#1 = dof_load5075;
          real r51CD#3 = intermediate5157;
          real r51CE#1 = RMul(r51CC,r51CD);
          real r51CF#1 = dof_load507F;
          real r51D0#3 = mult513E;
          real r51D1#1 = RMul(r51CF,r51D0);
          real r51D2#1 = dof_load5089;
          real r51D3#3 = mult5141;
          real r51D4#1 = RMul(r51D2,r51D3);
          real r51D5#1 = dof_load5093;
          real r51D6#3 = mult5142;
          real r51D7#1 = RMul(r51D5,r51D6);
          real r51D8#1 = dof_load509D;
          real r51D9#3 = intermediate5160;
          real r51DA#1 = RMul(r51D8,r51D9);
          real r51DB#1 = dof_load50A7;
          real r51DC#3 = intermediate5167;
          real r51DD#1 = RMul(r51DB,r51DC);
          real r51DE#1 = dof_load50B1;
          real r51DF#3 = intermediate516D;
          real r51E0#1 = RMul(r51DE,r51DF);
          real r51E1#1 = RAdd(r51C5,r51C8);
          real r51E2#1 = RAdd(r51E1,r51CB);
          real r51E3#1 = RAdd(r51E2,r51CE);
          real r51E4#1 = RAdd(r51E3,r51D1);
          real r51E5#1 = RAdd(r51E4,r51D4);
          real r51E6#1 = RAdd(r51E5,r51D7);
          real r51E7#1 = RAdd(r51E6,r51DA);
          real r51E8#1 = RAdd(r51E7,r51DD);
          real r51E9#1 = RAdd(r51E8,r51E0);
          real r51EA#1 = dof_load505B;
          real r51EB#1 = RMul(r51EA,r51C4);
          real r51EC#1 = dof_load5064;
          real r51ED#1 = RMul(r51EC,r51C7);
          real r51EE#1 = dof_load506D;
          real r51EF#1 = RMul(r51EE,r51CA);
          real r51F0#1 = dof_load5076;
          real r51F1#1 = RMul(r51F0,r51CD);
          real r51F2#1 = dof_load5080;
          real r51F3#1 = RMul(r51F2,r51D0);
          real r51F4#1 = dof_load508A;
          real r51F5#1 = RMul(r51F4,r51D3);
          real r51F6#1 = dof_load5094;
          real r51F7#1 = RMul(r51F6,r51D6);
          real r51F8#1 = dof_load509E;
          real r51F9#1 = RMul(r51F8,r51D9);
          real r51FA#1 = dof_load50A8;
          real r51FB#1 = RMul(r51FA,r51DC);
          real r51FC#1 = dof_load50B2;
          real r51FD#1 = RMul(r51FC,r51DF);
          real r51FE#1 = RAdd(r51EB,r51ED);
          real r51FF#1 = RAdd(r51FE,r51EF);
          real r5200#1 = RAdd(r51FF,r51F1);
          real r5201#1 = RAdd(r5200,r51F3);
          real r5202#1 = RAdd(r5201,r51F5);
          real r5203#1 = RAdd(r5202,r51F7);
          real r5204#1 = RAdd(r5203,r51F9);
          real r5205#1 = RAdd(r5204,r51FB);
          real r5206#1 = RAdd(r5205,r51FD);
          real r5207#1 = dof_load505C;
          real r5208#1 = RMul(r5207,r51C4);
          real r5209#1 = dof_load5065;
          real r520A#1 = RMul(r5209,r51C7);
          real r520B#1 = dof_load506E;
          real r520C#1 = RMul(r520B,r51CA);
          real r520D#1 = dof_load5077;
          real r520E#1 = RMul(r520D,r51CD);
          real r520F#1 = dof_load5081;
          real r5210#1 = RMul(r520F,r51D0);
          real r5211#1 = dof_load508B;
          real r5212#1 = RMul(r5211,r51D3);
          real r5213#1 = dof_load5095;
          real r5214#1 = RMul(r5213,r51D6);
          real r5215#1 = dof_load509F;
          real r5216#1 = RMul(r5215,r51D9);
          real r5217#1 = dof_load50A9;
          real r5218#1 = RMul(r5217,r51DC);
          real r5219#1 = dof_load50B3;
          real r521A#1 = RMul(r5219,r51DF);
          real r521B#1 = RAdd(r5208,r520A);
          real r521C#1 = RAdd(r521B,r520C);
          real r521D#1 = RAdd(r521C,r520E);
          real r521E#1 = RAdd(r521D,r5210);
          real r521F#1 = RAdd(r521E,r5212);
          real r5220#1 = RAdd(r521F,r5214);
          real r5221#1 = RAdd(r5220,r5216);
          real r5222#1 = RAdd(r5221,r5218);
          real r5223#1 = RAdd(r5222,r521A);
          tensor[3] compositionl51C2#3 = <tensor[3]>[r51E9,r5206,r5223];
          real op1_e3_l_195287#1 = VDot<3>(compositionl51C2,compositionl51C2);
          tensor[3] op1_e3_l_20528A#3 = VScale<3>(stepSize42F0,compositionl51C2);
          real op1_e3_l_21528D#1 = Sqrt(op1_e3_l_195287);
          real realLit5291#1 = 0.1e1;
          real r5292#3 = RDiv(realLit5291,op1_e3_l_21528D);
          real r5293#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_20528A);
          real r5294#1 = RMul(r5292,r5293);
          real r5295#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_20528A);
          real r5296#1 = RMul(r5292,r5295);
          real r5297#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_20528A);
          real r5298#1 = RMul(r5292,r5297);
          tensor[3] op1_e3_l_225290#3 = <tensor[3]>[r5294,r5296,r5298];
          tensor[3] altCPos52A3#1 = VAdd<3>(altCPos4300,op1_e3_l_225290);
          int _t52A6#1 = 1;
          int step52A8#1 = IAdd(step42FC,_t52A6);
          real r52AB#1 = r4AF3;
          real r52AC#3 = RMul(_t44E4,stepSize42F0);
          real r52AD#1 = RMul(r52AC,r52AB);
          real r52AE#1 = r4B10;
          real r52AF#1 = RMul(r52AC,r52AE);
          real r52B0#1 = r4B2D;
          real r52B1#1 = RMul(r52AC,r52B0);
          real realLit52BC#1 = 0.1e1;
          real r52BD#3 = RDiv(realLit52BC,op1_e3_l_224BA5);
          real r52BE#1 = r52AD;
          real r52BF#1 = RMul(r52BD,r52BE);
          real r52C0#1 = r52AF;
          real r52C1#1 = RMul(r52BD,r52C0);
          real r52C2#1 = r52B1;
          real r52C3#1 = RMul(r52BD,r52C2);
          tensor[3] op1_e3_l_4752BB#1 = <tensor[3]>[r52BF,r52C1,r52C3];
          tensor[3] op1_e3_l_4852CE#1 = VAdd<3>(altCPos4300,op1_e3_l_4752BB);
          tensor[3] op1_e3_l_4952D1#3 = VSub<3>(op1_e3_l_4852CE,center42F6);
          tensor[3] projParam52D5#1 = ProjectLast<tensor[3,3],[0]>(M42F4);
          real vdot52D6#1 = VDot<3>(projParam52D5,op1_e3_l_4952D1);
          tensor[3] projParam52D7#1 = ProjectLast<tensor[3,3],[1]>(M42F4);
          real vdot52D8#1 = VDot<3>(projParam52D7,op1_e3_l_4952D1);
          tensor[3] projParam52D9#1 = ProjectLast<tensor[3,3],[2]>(M42F4);
          real vdot52DA#1 = VDot<3>(projParam52D9,op1_e3_l_4952D1);
          tensor[3] op1_e3_l_5052D4#3 = <tensor[3]>[vdot52D6,vdot52D8,vdot52DA];
          real op1_e3_l_7152E3#1 = VDot<3>(op1_e3_l_5052D4,op1_e3_l_5052D4);
          tensor[3] op1_e3_l_7252E6#3 = VScale<3>(stepSize42F0,op1_e3_l_5052D4);
          real op1_e3_l_7352E9#1 = Sqrt(op1_e3_l_7152E3);
          real realLit52ED#1 = 0.1e1;
          real r52EE#3 = RDiv(realLit52ED,op1_e3_l_7352E9);
          real r52EF#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_7252E6);
          real r52F0#1 = RMul(r52EE,r52EF);
          real r52F1#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_7252E6);
          real r52F2#1 = RMul(r52EE,r52F1);
          real r52F3#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_7252E6);
          real r52F4#1 = RMul(r52EE,r52F3);
          tensor[3] op1_e3_l_7552EC#1 = <tensor[3]>[r52F0,r52F2,r52F4];
          tensor[3] op1_e3_l_11152FF#2 = VSub<3>(up25001,op1_e3_l_7552EC);
          real op1_e3_l_1135302#1 = VDot<3>(op1_e3_l_11152FF,op1_e3_l_11152FF);
          real _t5305#2 = Sqrt(op1_e3_l_1135302);
          bool _t5308#1 = GT<real>(_t5305,_t44BF);
          if _t5308 then goto ASSIGN530C else goto ASSIGN533A
        ASSIGN530C:  preds = [COND530A]
          bool _t530B#1 = true;
          goto JOIN530F
        JOIN530F:  preds = [ASSIGN530C,ASSIGN5343]
          bool _t530D#1 = phi(_t530B,_t530E)
          if _t530D then goto ASSIGN5312 else goto JOIN5331
        ASSIGN5312:  preds = [COND5310]
          string _t5311#1 = "ERG:Error in evaluation on pos 2:";
          string _t5313#3 = "\n";
          Print<[string,tensor[3],string]>(_t5311,startPos4302,_t5313);
          string _t5316#1 = "The errors are:";
          string _t5318#1 = " and ";
          tensor[3] op1_e3_l_33531A#2 = VSub<3>(up25001,op1_e3_l_225290);
          real op1_e3_l_35531D#1 = VDot<3>(op1_e3_l_33531A,op1_e3_l_33531A);
          real _t5320#1 = Sqrt(op1_e3_l_35531D);
          Print<[string,real,string,real,string]>(_t5316,_t5305,_t5318,_t5320,_t5313);
          string _t5324#1 = "The cells are:";
          femData:MeshCell _t5326#1 = LoadFem<femData:MeshCell>(_t4BFB,_t4BF9);
          string _t5328#1 = " vs ";
          femData:Mesh _t532A#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4BC0);
          int _t532C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4BC0);
          femData:MeshCell _t532E#1 = LoadFem<femData:MeshCell>(_t532A,_t532C);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t5324,_t5326,_t5328,_t532E,_t5313);
          goto JOIN5331
        JOIN5331:  preds = [MASSIGN5330,COND5310]
          self.stream = stream4461;
          self.newStream = newStream4467;
          self.step = step52A8;
          self.cPos = cPos5004;
          self.altCPos = altCPos52A3;
          active
        ASSIGN533A:  preds = [COND530A]
          tensor[3] op1_e3_l_335338#2 = VSub<3>(up25001,op1_e3_l_225290);
          real op1_e3_l_35533B#1 = VDot<3>(op1_e3_l_335338,op1_e3_l_335338);
          real _t533E#1 = Sqrt(op1_e3_l_35533B);
          real _t5341#1 = 0.1e-4;
          bool _t530E#1 = GT<real>(_t533E,_t5341);
          goto JOIN530F
        ASSIGN5345:  preds = [COND4D5D]
          string _t5344#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t5344);
          real realLit5347#3 = 0.e0;
          tensor[3] _t4FFF#1 = <tensor[3]>[realLit5347,realLit5347,realLit5347];
          goto JOIN5000
        ASSIGN534C:  preds = [COND4D4E]
          string _t534B#1 = "fine in cell 2:";
          femData:MeshCell _t534D#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t534F#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t534B,_t534D,_t534F);
          goto JOIN4D5C
        ASSIGN5352:  preds = [COND4BE3]
          bool _t4BE7#1 = BNot(_t4BC2);
          goto JOIN4BE8
        ASSIGN5354:  preds = [COND47E2]
          femData:MeshPos callFindPos5353#2 = findPos3B9C (_t42E8,altCPos4300);
          int intPos5355#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5353);
          tensor[3] refPos5357#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5353);
          int ilit535A#1 = 10;
          int mulRes535B#10 = IMul(intPos5355,ilit535A);
          int addRes535D#1 = mulRes535B;
          int idx535E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes535D);
          int ilit535F#1 = 1;
          int addRes5360#1 = IAdd(mulRes535B,ilit535F);
          int idx5361#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5360);
          int ilit5362#1 = 2;
          int addRes5363#1 = IAdd(mulRes535B,ilit5362);
          int idx5364#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5363);
          int ilit5365#1 = 3;
          int addRes5366#1 = IAdd(mulRes535B,ilit5365);
          int idx5367#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5366);
          int ilit5368#1 = 4;
          int addRes5369#1 = IAdd(mulRes535B,ilit5368);
          int idx536A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5369);
          int ilit536B#1 = 5;
          int addRes536C#1 = IAdd(mulRes535B,ilit536B);
          int idx536D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes536C);
          int ilit536E#1 = 6;
          int addRes536F#1 = IAdd(mulRes535B,ilit536E);
          int idx5370#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes536F);
          int ilit5371#1 = 7;
          int addRes5372#1 = IAdd(mulRes535B,ilit5371);
          int idx5373#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5372);
          int ilit5374#1 = 8;
          int addRes5375#1 = IAdd(mulRes535B,ilit5374);
          int idx5376#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5375);
          int ilit5377#1 = 9;
          int addRes5378#1 = IAdd(mulRes535B,ilit5377);
          int idx5379#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5378);
          int ilit539F#10 = 3;
          int idx53A0#1 = idx535E;
          int mulRes53A1#3 = IMul(ilit539F,idx53A0);
          int addRes53A2#1 = mulRes53A1;
          int ilit53A3#10 = 1;
          int addRes53A4#1 = IAdd(ilit53A3,mulRes53A1);
          int ilit53A5#10 = 2;
          int addRes53A6#1 = IAdd(ilit53A5,mulRes53A1);
          real dof_load53A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A2);
          real dof_load53A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A4);
          real dof_load53A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A6);
          int idx53AB#1 = idx5361;
          int mulRes53AC#3 = IMul(ilit539F,idx53AB);
          int addRes53AD#1 = mulRes53AC;
          int addRes53AE#1 = IAdd(ilit53A3,mulRes53AC);
          int addRes53AF#1 = IAdd(ilit53A5,mulRes53AC);
          real dof_load53B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AD);
          real dof_load53B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AE);
          real dof_load53B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AF);
          int idx53B4#1 = idx5364;
          int mulRes53B5#3 = IMul(ilit539F,idx53B4);
          int addRes53B6#1 = mulRes53B5;
          int addRes53B7#1 = IAdd(ilit53A3,mulRes53B5);
          int addRes53B8#1 = IAdd(ilit53A5,mulRes53B5);
          real dof_load53B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B6);
          real dof_load53BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B7);
          real dof_load53BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B8);
          int idx53BD#1 = idx5367;
          int mulRes53BE#3 = IMul(ilit539F,idx53BD);
          int addRes53BF#1 = mulRes53BE;
          int addRes53C0#1 = IAdd(ilit53A3,mulRes53BE);
          int addRes53C1#1 = IAdd(ilit53A5,mulRes53BE);
          real dof_load53C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53BF);
          real dof_load53C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C0);
          real dof_load53C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C1);
          int idx53C7#1 = idx536A;
          int mulRes53C8#3 = IMul(ilit539F,idx53C7);
          int addRes53C9#1 = mulRes53C8;
          int addRes53CA#1 = IAdd(ilit53A3,mulRes53C8);
          int addRes53CB#1 = IAdd(ilit53A5,mulRes53C8);
          real dof_load53CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C9);
          real dof_load53CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53CA);
          real dof_load53CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53CB);
          int idx53D1#1 = idx536D;
          int mulRes53D2#3 = IMul(ilit539F,idx53D1);
          int addRes53D3#1 = mulRes53D2;
          int addRes53D4#1 = IAdd(ilit53A3,mulRes53D2);
          int addRes53D5#1 = IAdd(ilit53A5,mulRes53D2);
          real dof_load53D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D3);
          real dof_load53D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D4);
          real dof_load53D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D5);
          int idx53DB#1 = idx5370;
          int mulRes53DC#3 = IMul(ilit539F,idx53DB);
          int addRes53DD#1 = mulRes53DC;
          int addRes53DE#1 = IAdd(ilit53A3,mulRes53DC);
          int addRes53DF#1 = IAdd(ilit53A5,mulRes53DC);
          real dof_load53E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DD);
          real dof_load53E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DE);
          real dof_load53E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DF);
          int idx53E5#1 = idx5373;
          int mulRes53E6#3 = IMul(ilit539F,idx53E5);
          int addRes53E7#1 = mulRes53E6;
          int addRes53E8#1 = IAdd(ilit53A3,mulRes53E6);
          int addRes53E9#1 = IAdd(ilit53A5,mulRes53E6);
          real dof_load53EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E7);
          real dof_load53EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E8);
          real dof_load53EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E9);
          int idx53EF#1 = idx5376;
          int mulRes53F0#3 = IMul(ilit539F,idx53EF);
          int addRes53F1#1 = mulRes53F0;
          int addRes53F2#1 = IAdd(ilit53A3,mulRes53F0);
          int addRes53F3#1 = IAdd(ilit53A5,mulRes53F0);
          real dof_load53F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F1);
          real dof_load53F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F2);
          real dof_load53F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F3);
          int idx53F9#1 = idx5379;
          int mulRes53FA#3 = IMul(ilit539F,idx53F9);
          int addRes53FB#1 = mulRes53FA;
          int addRes53FC#1 = IAdd(ilit53A3,mulRes53FA);
          int addRes53FD#1 = IAdd(ilit53A5,mulRes53FA);
          real dof_load53FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FB);
          real dof_load53FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FC);
          real dof_load5400#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FD);
          real varAcc546A#2 = VIndex<3,0>(refPos5357);
          real varAcc546B#2 = VIndex<3,1>(refPos5357);
          real varAcc546C#2 = VIndex<3,2>(refPos5357);
          real coeff546D#3 = 0.2e1;
          real iden546E#4 = varAcc546A;
          real prod2546F#1 = RMul(iden546E,varAcc546A);
          real one5470#13 = 0.1e1;
          real prod5471#3 = RMul(one5470,one5470);
          real prod5472#2 = RMul(prod2546F,prod5471);
          real coeff5473#6 = 0.4e1;
          real iden5474#3 = varAcc546B;
          real prod5475#2 = RMul(iden5474,one5470);
          real prod5476#2 = RMul(iden546E,prod5475);
          real iden5477#3 = varAcc546C;
          real prod5478#2 = RMul(one5470,iden5477);
          real prod5479#2 = RMul(iden546E,prod5478);
          real coeff547A#3 = -0.3e1;
          real prod547B#3 = RMul(iden546E,prod5471);
          real prod2547C#1 = RMul(iden5474,varAcc546B);
          real prod547D#1 = RMul(prod2547C,one5470);
          real prod547E#2 = RMul(one5470,prod547D);
          real prod547F#1 = RMul(iden5474,iden5477);
          real prod5480#2 = RMul(one5470,prod547F);
          real prod5481#3 = RMul(one5470,prod5475);
          real prod25482#1 = RMul(iden5477,varAcc546C);
          real prod5483#1 = RMul(one5470,prod25482);
          real prod5484#2 = RMul(one5470,prod5483);
          real prod5485#3 = RMul(one5470,prod5478);
          real prod5486#1 = RMul(one5470,prod5471);
          real mult5487#1 = RMul(one5470,prod5486);
          real mult5488#1 = RMul(coeff547A,prod5485);
          real mult5489#2 = RMul(coeff546D,prod5484);
          real mult548A#1 = RMul(coeff547A,prod5481);
          real mult548B#2 = RMul(coeff5473,prod5480);
          real mult548C#2 = RMul(coeff546D,prod547E);
          real mult548D#1 = RMul(coeff547A,prod547B);
          real mult548E#2 = RMul(coeff5473,prod5479);
          real mult548F#2 = RMul(coeff5473,prod5476);
          real mult5490#2 = RMul(coeff546D,prod5472);
          real sum5491#1 = RAdd(mult548F,mult5490);
          real sum5492#1 = RAdd(mult548E,sum5491);
          real sum5493#1 = RAdd(mult548D,sum5492);
          real sum5494#1 = RAdd(mult548C,sum5493);
          real sum5495#1 = RAdd(mult548B,sum5494);
          real sum5496#1 = RAdd(mult548A,sum5495);
          real sum5497#1 = RAdd(mult5489,sum5496);
          real sum5498#1 = RAdd(mult5488,sum5497);
          real sum5499#1 = RAdd(mult5487,sum5498);
          real intermediate549A#1 = sum5499;
          real coeff549B#3 = -0.1e1;
          real mult549C#1 = RMul(coeff549B,prod547B);
          real sum549D#1 = RAdd(mult549C,mult5490);
          real intermediate549E#1 = sum549D;
          real mult549F#1 = RMul(coeff549B,prod5481);
          real sum54A0#1 = RAdd(mult549F,mult548C);
          real intermediate54A1#1 = sum54A0;
          real mult54A2#1 = RMul(coeff549B,prod5485);
          real sum54A3#1 = RAdd(mult54A2,mult5489);
          real intermediate54A4#1 = sum54A3;
          real coeff54A5#6 = -0.4e1;
          real mult54A6#1 = RMul(coeff5473,prod5485);
          real mult54A7#1 = RMul(coeff54A5,prod5484);
          real mult54A8#2 = RMul(coeff54A5,prod5480);
          real mult54A9#2 = RMul(coeff54A5,prod5479);
          real sum54AA#1 = RAdd(mult54A8,mult54A9);
          real sum54AB#1 = RAdd(mult54A7,sum54AA);
          real sum54AC#1 = RAdd(mult54A6,sum54AB);
          real intermediate54AD#1 = sum54AC;
          real mult54AE#1 = RMul(coeff5473,prod5481);
          real mult54AF#1 = RMul(coeff54A5,prod547E);
          real mult54B0#2 = RMul(coeff54A5,prod5476);
          real sum54B1#1 = RAdd(mult54AF,mult54B0);
          real sum54B2#1 = RAdd(mult54A8,sum54B1);
          real sum54B3#1 = RAdd(mult54AE,sum54B2);
          real intermediate54B4#1 = sum54B3;
          real mult54B5#1 = RMul(coeff5473,prod547B);
          real mult54B6#1 = RMul(coeff54A5,prod5472);
          real sum54B7#1 = RAdd(mult54B0,mult54B6);
          real sum54B8#1 = RAdd(mult54A9,sum54B7);
          real sum54B9#1 = RAdd(mult54B5,sum54B8);
          real intermediate54BA#1 = sum54B9;
          real r5510#1 = dof_load53A7;
          real r5511#3 = intermediate549A;
          real r5512#1 = RMul(r5510,r5511);
          real r5513#1 = dof_load53B0;
          real r5514#3 = intermediate549E;
          real r5515#1 = RMul(r5513,r5514);
          real r5516#1 = dof_load53B9;
          real r5517#3 = intermediate54A1;
          real r5518#1 = RMul(r5516,r5517);
          real r5519#1 = dof_load53C2;
          real r551A#3 = intermediate54A4;
          real r551B#1 = RMul(r5519,r551A);
          real r551C#1 = dof_load53CC;
          real r551D#3 = mult548B;
          real r551E#1 = RMul(r551C,r551D);
          real r551F#1 = dof_load53D6;
          real r5520#3 = mult548E;
          real r5521#1 = RMul(r551F,r5520);
          real r5522#1 = dof_load53E0;
          real r5523#3 = mult548F;
          real r5524#1 = RMul(r5522,r5523);
          real r5525#1 = dof_load53EA;
          real r5526#3 = intermediate54AD;
          real r5527#1 = RMul(r5525,r5526);
          real r5528#1 = dof_load53F4;
          real r5529#3 = intermediate54B4;
          real r552A#1 = RMul(r5528,r5529);
          real r552B#1 = dof_load53FE;
          real r552C#3 = intermediate54BA;
          real r552D#1 = RMul(r552B,r552C);
          real r552E#1 = RAdd(r5512,r5515);
          real r552F#1 = RAdd(r552E,r5518);
          real r5530#1 = RAdd(r552F,r551B);
          real r5531#1 = RAdd(r5530,r551E);
          real r5532#1 = RAdd(r5531,r5521);
          real r5533#1 = RAdd(r5532,r5524);
          real r5534#1 = RAdd(r5533,r5527);
          real r5535#1 = RAdd(r5534,r552A);
          real r5536#2 = RAdd(r5535,r552D);
          real r5537#1 = dof_load53A8;
          real r5538#1 = RMul(r5537,r5511);
          real r5539#1 = dof_load53B1;
          real r553A#1 = RMul(r5539,r5514);
          real r553B#1 = dof_load53BA;
          real r553C#1 = RMul(r553B,r5517);
          real r553D#1 = dof_load53C3;
          real r553E#1 = RMul(r553D,r551A);
          real r553F#1 = dof_load53CD;
          real r5540#1 = RMul(r553F,r551D);
          real r5541#1 = dof_load53D7;
          real r5542#1 = RMul(r5541,r5520);
          real r5543#1 = dof_load53E1;
          real r5544#1 = RMul(r5543,r5523);
          real r5545#1 = dof_load53EB;
          real r5546#1 = RMul(r5545,r5526);
          real r5547#1 = dof_load53F5;
          real r5548#1 = RMul(r5547,r5529);
          real r5549#1 = dof_load53FF;
          real r554A#1 = RMul(r5549,r552C);
          real r554B#1 = RAdd(r5538,r553A);
          real r554C#1 = RAdd(r554B,r553C);
          real r554D#1 = RAdd(r554C,r553E);
          real r554E#1 = RAdd(r554D,r5540);
          real r554F#1 = RAdd(r554E,r5542);
          real r5550#1 = RAdd(r554F,r5544);
          real r5551#1 = RAdd(r5550,r5546);
          real r5552#1 = RAdd(r5551,r5548);
          real r5553#2 = RAdd(r5552,r554A);
          real r5554#1 = dof_load53A9;
          real r5555#1 = RMul(r5554,r5511);
          real r5556#1 = dof_load53B2;
          real r5557#1 = RMul(r5556,r5514);
          real r5558#1 = dof_load53BB;
          real r5559#1 = RMul(r5558,r5517);
          real r555A#1 = dof_load53C4;
          real r555B#1 = RMul(r555A,r551A);
          real r555C#1 = dof_load53CE;
          real r555D#1 = RMul(r555C,r551D);
          real r555E#1 = dof_load53D8;
          real r555F#1 = RMul(r555E,r5520);
          real r5560#1 = dof_load53E2;
          real r5561#1 = RMul(r5560,r5523);
          real r5562#1 = dof_load53EC;
          real r5563#1 = RMul(r5562,r5526);
          real r5564#1 = dof_load53F6;
          real r5565#1 = RMul(r5564,r5529);
          real r5566#1 = dof_load5400;
          real r5567#1 = RMul(r5566,r552C);
          real r5568#1 = RAdd(r5555,r5557);
          real r5569#1 = RAdd(r5568,r5559);
          real r556A#1 = RAdd(r5569,r555B);
          real r556B#1 = RAdd(r556A,r555D);
          real r556C#1 = RAdd(r556B,r555F);
          real r556D#1 = RAdd(r556C,r5561);
          real r556E#1 = RAdd(r556D,r5563);
          real r556F#1 = RAdd(r556E,r5565);
          real r5570#2 = RAdd(r556F,r5567);
          tensor[3] compositionl550F#2 = <tensor[3]>[r5536,r5553,r5570];
          real op1_e3_l_2255D4#1 = VDot<3>(compositionl550F,compositionl550F);
          real r55D8#1 = r5536;
          real r55D9#3 = RMul(_t44E4,stepSize42F0);
          real r55DA#1 = RMul(r55D9,r55D8);
          real r55DB#1 = r5553;
          real r55DC#1 = RMul(r55D9,r55DB);
          real r55DD#1 = r5570;
          real r55DE#1 = RMul(r55D9,r55DD);
          real op1_e3_l_2455E8#1 = Sqrt(op1_e3_l_2255D4);
          real realLit55EC#1 = 0.1e1;
          real r55ED#3 = RDiv(realLit55EC,op1_e3_l_2455E8);
          real r55EE#1 = r55DA;
          real r55EF#1 = RMul(r55ED,r55EE);
          real r55F0#1 = r55DC;
          real r55F1#1 = RMul(r55ED,r55F0);
          real r55F2#1 = r55DE;
          real r55F3#1 = RMul(r55ED,r55F2);
          tensor[3] op1_e3_l_2655EB#1 = <tensor[3]>[r55EF,r55F1,r55F3];
          tensor[3] op1_e3_l_3555FE#2 = VSub<3>(up1478A,op1_e3_l_2655EB);
          real op1_e3_l_375601#1 = VDot<3>(op1_e3_l_3555FE,op1_e3_l_3555FE);
          real _t5604#1 = Sqrt(op1_e3_l_375601);
          bool _t47E6#1 = GT<real>(_t5604,_t44BF);
          goto JOIN47E7
        ASSIGN5609:  preds = [COND44E6]
          string _t5608#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t5608);
          real realLit560B#3 = 0.e0;
          tensor[3] _t4788#1 = <tensor[3]>[realLit560B,realLit560B,realLit560B];
          goto JOIN4789
        ASSIGN5610:  preds = [COND44C3]
          string _t560F#1 = "fine in cell 1:";
          femData:MeshCell _t5611#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t5613#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t560F,_t5611,_t5613);
          goto JOIN44E3
        ASSIGN5617:  preds = [COND4346]
          bool _t5616#1 = BNot(_t4339);
          if _t5616 then goto ASSIGN561A else goto ASSIGN561D
        ASSIGN561A:  preds = [COND5618]
          bool _t5619#1 = true;
          goto JOIN561C
        JOIN561C:  preds = [ASSIGN561A,ASSIGN561D]
          bool _t434A#1 = phi(_t5619,_t561B)
          goto JOIN434B
        ASSIGN561D:  preds = [COND5618]
          bool _t561B#1 = EQ<int>(step42FC,stepMax42F2);
          goto JOIN561C
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY561E:  preds = []
      tensor[3][] startPoints561F#1 = globals.startPoints3B4A;
    FOREACH5622:  preds = [ASSIGN5620,NEXT5624]
      foreach (x5621 in startPoints561F) on exit goto RETURN5625
      new gg(x5621);
      goto FOREACH5622
    RETURN5625:  preds = [FOREACH5622]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData3B45 (meshData) = <no-default>
  input 0space0409_intermedateGlobal3B46 (space) = <no-default>
  input 0data040B_intermedateGlobal3B47 (data) = <no-default>
  input timeSteps3B48 (timeSteps) = <default>
  input timeEps3B49 (timeEps) = <default>
  input startPoints3B4A (startPoints) = <no-default>
  input stepSize3B4B (stepSize) = <default>
  input stepMax3B4C (stepMax) = <default>
  input M3B4D (M) = <no-default>
  input center3B4E (center) = <no-default>
  global femData:FemFunc data3B4F
  global femData:Mesh _t3B50
  global femData:Space _tX3B51
## functions
  function femData:MeshPos findPos3B9C (femData:Mesh mesh3B9D#19, tensor[3] pos3B9E#3) {
    ENTRY3B9F:  preds = []
      real _t3BA0#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn3BA2#1 = <tensor[3]>[_t3BA0,_t3BA0,_t3BA0];
      int newtonInt3BA4#1 = 0;
      int[] yayCells3BA6#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3B9D,pos3B9E);
    FOREACH3BA9:  preds = [ASSIGN3BA7,NEXT42DB]
      foreach (cellItter3BA8 in yayCells3BA6) on exit goto ASSIGN42DD
      int _t3BAA#1 = 16;
      int[] _t3BAC#1 = Range(newtonInt3BA4,_t3BAA);
    FOREACH3BAF:  preds = [ASSIGN3BAD,NEXT42DA]
      foreach (newtonItter3BAE in _t3BAC) on exit goto NEXT42DB
        tensor[3] xn417E#4 = phi(xn3BA2,xn4242)
      int ilit3BB1#1 = 4;
      int mulRes3BB2#4 = IMul(cellItter3BA8,ilit3BB1);
      int idx3BB5#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,mulRes3BB2);
      int ilit3BB6#5 = 1;
      int addRes3BB7#1 = IAdd(mulRes3BB2,ilit3BB6);
      int idx3BB8#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BB7);
      int ilit3BB9#5 = 2;
      int addRes3BBA#1 = IAdd(mulRes3BB2,ilit3BB9);
      int idx3BBB#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BBA);
      int ilit3BBC#5 = 3;
      int addRes3BBD#1 = IAdd(mulRes3BB2,ilit3BBC);
      int idx3BBE#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BBD);
      int mulRes3BD4#3 = IMul(ilit3BBC,idx3BB5);
      int addRes3BD7#1 = IAdd(ilit3BB6,mulRes3BD4);
      int addRes3BD9#1 = IAdd(ilit3BB9,mulRes3BD4);
      real dof_load3BDA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BD4);
      real dof_load3BDB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD7);
      real dof_load3BDC#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD9);
      int mulRes3BDF#3 = IMul(ilit3BBC,idx3BB8);
      int addRes3BE1#1 = IAdd(ilit3BB6,mulRes3BDF);
      int addRes3BE2#1 = IAdd(ilit3BB9,mulRes3BDF);
      real dof_load3BE3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BDF);
      real dof_load3BE4#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE1);
      real dof_load3BE5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE2);
      int mulRes3BE8#3 = IMul(ilit3BBC,idx3BBB);
      int addRes3BEA#1 = IAdd(ilit3BB6,mulRes3BE8);
      int addRes3BEB#1 = IAdd(ilit3BB9,mulRes3BE8);
      real dof_load3BEC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BE8);
      real dof_load3BED#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BEA);
      real dof_load3BEE#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BEB);
      int mulRes3BF1#3 = IMul(ilit3BBC,idx3BBE);
      int addRes3BF3#1 = IAdd(ilit3BB6,mulRes3BF1);
      int addRes3BF4#1 = IAdd(ilit3BB9,mulRes3BF1);
      real dof_load3BF5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BF1);
      real dof_load3BF6#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF3);
      real dof_load3BF7#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF4);
      real coeff3C28#22 = -0.1e1;
      real one3C29#33 = 0.1e1;
      real prod3C2A#2 = RMul(one3C29,one3C29);
      real prod3C2B#2 = RMul(one3C29,prod3C2A);
      real basisEval3C2C#3 = RMul(coeff3C28,prod3C2B);
      real basisEval3C2D#10 = RMul(one3C29,prod3C2B);
      real basisEval3C2E#45 = 0.e0;
      real r3C45#2 = RMul(dof_load3BDA,basisEval3C2C);
      real r3C48#1 = RMul(dof_load3BE3,basisEval3C2D);
      real r3C4B#2 = RMul(dof_load3BEC,basisEval3C2E);
      real r3C4E#2 = RMul(dof_load3BF5,basisEval3C2E);
      real r3C4F#1 = RAdd(r3C45,r3C48);
      real r3C50#1 = RAdd(r3C4F,r3C4B);
      real r3C51#13 = RAdd(r3C50,r3C4E);
      real r3C55#1 = RMul(dof_load3BE3,basisEval3C2E);
      real r3C57#1 = RMul(dof_load3BEC,basisEval3C2D);
      real r3C5A#2 = RAdd(r3C45,r3C55);
      real r3C5B#1 = RAdd(r3C5A,r3C57);
      real r3C5C#13 = RAdd(r3C5B,r3C4E);
      real r3C64#1 = RMul(dof_load3BF5,basisEval3C2D);
      real r3C66#1 = RAdd(r3C5A,r3C4B);
      real r3C67#12 = RAdd(r3C66,r3C64);
      real r3C6A#2 = RMul(dof_load3BDB,basisEval3C2C);
      real r3C6C#1 = RMul(dof_load3BE4,basisEval3C2D);
      real r3C6E#2 = RMul(dof_load3BED,basisEval3C2E);
      real r3C70#2 = RMul(dof_load3BF6,basisEval3C2E);
      real r3C71#1 = RAdd(r3C6A,r3C6C);
      real r3C72#1 = RAdd(r3C71,r3C6E);
      real r3C73#13 = RAdd(r3C72,r3C70);
      real r3C75#1 = RMul(dof_load3BE4,basisEval3C2E);
      real r3C76#1 = RMul(dof_load3BED,basisEval3C2D);
      real r3C78#2 = RAdd(r3C6A,r3C75);
      real r3C79#1 = RAdd(r3C78,r3C76);
      real r3C7A#13 = RAdd(r3C79,r3C70);
      real r3C7E#1 = RMul(dof_load3BF6,basisEval3C2D);
      real r3C80#1 = RAdd(r3C78,r3C6E);
      real r3C81#12 = RAdd(r3C80,r3C7E);
      real r3C84#2 = RMul(dof_load3BDC,basisEval3C2C);
      real r3C86#1 = RMul(dof_load3BE5,basisEval3C2D);
      real r3C88#2 = RMul(dof_load3BEE,basisEval3C2E);
      real r3C8A#2 = RMul(dof_load3BF7,basisEval3C2E);
      real r3C8B#1 = RAdd(r3C84,r3C86);
      real r3C8C#1 = RAdd(r3C8B,r3C88);
      real r3C8D#13 = RAdd(r3C8C,r3C8A);
      real r3C8F#1 = RMul(dof_load3BE5,basisEval3C2E);
      real r3C90#1 = RMul(dof_load3BEE,basisEval3C2D);
      real r3C92#2 = RAdd(r3C84,r3C8F);
      real r3C93#1 = RAdd(r3C92,r3C90);
      real r3C94#13 = RAdd(r3C93,r3C8A);
      real r3C98#1 = RMul(dof_load3BF7,basisEval3C2D);
      real r3C9A#1 = RAdd(r3C92,r3C88);
      real r3C9B#12 = RAdd(r3C9A,r3C98);
      real r3CFC#3 = RMul(basisEval3C2E,r3C51);
      real r3CFE#3 = RMul(basisEval3C2E,r3C73);
      real r3D00#5 = RMul(basisEval3C2E,r3C8D);
      real r3D01#3 = RAdd(r3CFC,r3CFE);
      real r3D02#9 = RAdd(r3D01,r3D00);
      real r3D04#3 = RMul(basisEval3C2E,r3C5C);
      real r3D06#3 = RMul(basisEval3C2E,r3C7A);
      real r3D08#5 = RMul(basisEval3C2E,r3C94);
      real r3D09#3 = RAdd(r3D04,r3D06);
      real r3D0A#9 = RAdd(r3D09,r3D08);
      real r3D0C#3 = RMul(basisEval3C2E,r3C67);
      real r3D0E#3 = RMul(basisEval3C2E,r3C81);
      real r3D10#5 = RMul(basisEval3C2E,r3C9B);
      real r3D11#3 = RAdd(r3D0C,r3D0E);
      real r3D12#12 = RAdd(r3D11,r3D10);
      real r3D15#1 = RMul(coeff3C28,r3C8D);
      real r3D16#3 = RAdd(r3D01,r3D15);
      real r3D17#1 = RMul(coeff3C28,r3C94);
      real r3D18#3 = RAdd(r3D09,r3D17);
      real r3D19#1 = RMul(coeff3C28,r3C9B);
      real r3D1A#4 = RAdd(r3D11,r3D19);
      real r3D1D#1 = RMul(one3C29,r3C73);
      real r3D1E#1 = RAdd(r3CFC,r3D1D);
      real r3D1F#3 = RAdd(r3D1E,r3D00);
      real r3D20#1 = RMul(one3C29,r3C7A);
      real r3D21#1 = RAdd(r3D04,r3D20);
      real r3D22#3 = RAdd(r3D21,r3D08);
      real r3D23#1 = RMul(one3C29,r3C81);
      real r3D24#1 = RAdd(r3D0C,r3D23);
      real r3D25#4 = RAdd(r3D24,r3D10);
      real r3D28#1 = RMul(one3C29,r3C8D);
      real r3D29#3 = RAdd(r3D01,r3D28);
      real r3D2A#1 = RMul(one3C29,r3C94);
      real r3D2B#3 = RAdd(r3D09,r3D2A);
      real r3D2C#1 = RMul(one3C29,r3C9B);
      real r3D2D#4 = RAdd(r3D11,r3D2C);
      real r3D2F#1 = RMul(coeff3C28,r3C51);
      real r3D30#1 = RAdd(r3D2F,r3CFE);
      real r3D31#3 = RAdd(r3D30,r3D00);
      real r3D32#1 = RMul(coeff3C28,r3C5C);
      real r3D33#1 = RAdd(r3D32,r3D06);
      real r3D34#3 = RAdd(r3D33,r3D08);
      real r3D35#1 = RMul(coeff3C28,r3C67);
      real r3D36#1 = RAdd(r3D35,r3D0E);
      real r3D37#4 = RAdd(r3D36,r3D10);
      real r3D3A#1 = RMul(coeff3C28,r3C73);
      real r3D3B#1 = RAdd(r3CFC,r3D3A);
      real r3D3C#3 = RAdd(r3D3B,r3D00);
      real r3D3D#1 = RMul(coeff3C28,r3C7A);
      real r3D3E#1 = RAdd(r3D04,r3D3D);
      real r3D3F#3 = RAdd(r3D3E,r3D08);
      real r3D40#1 = RMul(coeff3C28,r3C81);
      real r3D41#1 = RAdd(r3D0C,r3D40);
      real r3D42#4 = RAdd(r3D41,r3D10);
      real r3D44#1 = RMul(one3C29,r3C51);
      real r3D45#1 = RAdd(r3D44,r3CFE);
      real r3D46#3 = RAdd(r3D45,r3D00);
      real r3D47#1 = RMul(one3C29,r3C5C);
      real r3D48#1 = RAdd(r3D47,r3D06);
      real r3D49#3 = RAdd(r3D48,r3D08);
      real r3D4A#1 = RMul(one3C29,r3C67);
      real r3D4B#1 = RAdd(r3D4A,r3D0E);
      real r3D4C#4 = RAdd(r3D4B,r3D10);
      real r3DA9#1 = RMul(r3C51,r3D02);
      real r3DAC#1 = RMul(r3C73,r3D29);
      real r3DAF#1 = RMul(r3C8D,r3D3C);
      real r3DB0#1 = RAdd(r3DA9,r3DAC);
      real r3DB1#1 = RAdd(r3DB0,r3DAF);
      real r3DB3#1 = RMul(r3C51,r3D0A);
      real r3DB5#1 = RMul(r3C73,r3D2B);
      real r3DB7#1 = RMul(r3C8D,r3D3F);
      real r3DB8#1 = RAdd(r3DB3,r3DB5);
      real r3DB9#2 = RAdd(r3DB8,r3DB7);
      real r3DBB#1 = RMul(r3C51,r3D12);
      real r3DBD#1 = RMul(r3C73,r3D2D);
      real r3DBF#1 = RMul(r3C8D,r3D42);
      real r3DC0#1 = RAdd(r3DBB,r3DBD);
      real r3DC1#2 = RAdd(r3DC0,r3DBF);
      real r3DC4#1 = RMul(r3C51,r3D16);
      real r3DC6#1 = RMul(r3C73,r3D02);
      real r3DC8#1 = RMul(r3C8D,r3D46);
      real r3DC9#1 = RAdd(r3DC4,r3DC6);
      real r3DCA#1 = RAdd(r3DC9,r3DC8);
      real r3DCC#1 = RMul(r3C51,r3D18);
      real r3DCE#1 = RMul(r3C73,r3D0A);
      real r3DD0#1 = RMul(r3C8D,r3D49);
      real r3DD1#1 = RAdd(r3DCC,r3DCE);
      real r3DD2#2 = RAdd(r3DD1,r3DD0);
      real r3DD4#1 = RMul(r3C51,r3D1A);
      real r3DD6#1 = RMul(r3C73,r3D12);
      real r3DD8#1 = RMul(r3C8D,r3D4C);
      real r3DD9#1 = RAdd(r3DD4,r3DD6);
      real r3DDA#2 = RAdd(r3DD9,r3DD8);
      real r3DDD#1 = RMul(r3C51,r3D1F);
      real r3DDF#1 = RMul(r3C73,r3D31);
      real r3DE1#1 = RMul(r3C8D,r3D02);
      real r3DE2#1 = RAdd(r3DDD,r3DDF);
      real r3DE3#1 = RAdd(r3DE2,r3DE1);
      real r3DE5#1 = RMul(r3C51,r3D22);
      real r3DE7#1 = RMul(r3C73,r3D34);
      real r3DE9#1 = RMul(r3C8D,r3D0A);
      real r3DEA#1 = RAdd(r3DE5,r3DE7);
      real r3DEB#2 = RAdd(r3DEA,r3DE9);
      real r3DED#1 = RMul(r3C51,r3D25);
      real r3DEF#1 = RMul(r3C73,r3D37);
      real r3DF1#1 = RMul(r3C8D,r3D12);
      real r3DF2#1 = RAdd(r3DED,r3DEF);
      real r3DF3#2 = RAdd(r3DF2,r3DF1);
      real r3DF7#1 = RMul(r3C5C,r3D02);
      real r3DF9#1 = RMul(r3C7A,r3D29);
      real r3DFB#1 = RMul(r3C94,r3D3C);
      real r3DFC#1 = RAdd(r3DF7,r3DF9);
      real r3DFD#2 = RAdd(r3DFC,r3DFB);
      real r3DFE#1 = RMul(r3C5C,r3D0A);
      real r3DFF#1 = RMul(r3C7A,r3D2B);
      real r3E00#1 = RMul(r3C94,r3D3F);
      real r3E01#1 = RAdd(r3DFE,r3DFF);
      real r3E02#1 = RAdd(r3E01,r3E00);
      real r3E03#1 = RMul(r3C5C,r3D12);
      real r3E04#1 = RMul(r3C7A,r3D2D);
      real r3E05#1 = RMul(r3C94,r3D42);
      real r3E06#1 = RAdd(r3E03,r3E04);
      real r3E07#2 = RAdd(r3E06,r3E05);
      real r3E09#1 = RMul(r3C5C,r3D16);
      real r3E0A#1 = RMul(r3C7A,r3D02);
      real r3E0B#1 = RMul(r3C94,r3D46);
      real r3E0C#1 = RAdd(r3E09,r3E0A);
      real r3E0D#2 = RAdd(r3E0C,r3E0B);
      real r3E0E#1 = RMul(r3C5C,r3D18);
      real r3E0F#1 = RMul(r3C7A,r3D0A);
      real r3E10#1 = RMul(r3C94,r3D49);
      real r3E11#1 = RAdd(r3E0E,r3E0F);
      real r3E12#1 = RAdd(r3E11,r3E10);
      real r3E13#1 = RMul(r3C5C,r3D1A);
      real r3E14#1 = RMul(r3C7A,r3D12);
      real r3E15#1 = RMul(r3C94,r3D4C);
      real r3E16#1 = RAdd(r3E13,r3E14);
      real r3E17#2 = RAdd(r3E16,r3E15);
      real r3E19#1 = RMul(r3C5C,r3D1F);
      real r3E1A#1 = RMul(r3C7A,r3D31);
      real r3E1B#1 = RMul(r3C94,r3D02);
      real r3E1C#1 = RAdd(r3E19,r3E1A);
      real r3E1D#2 = RAdd(r3E1C,r3E1B);
      real r3E1E#1 = RMul(r3C5C,r3D22);
      real r3E1F#1 = RMul(r3C7A,r3D34);
      real r3E20#1 = RMul(r3C94,r3D0A);
      real r3E21#1 = RAdd(r3E1E,r3E1F);
      real r3E22#1 = RAdd(r3E21,r3E20);
      real r3E23#1 = RMul(r3C5C,r3D25);
      real r3E24#1 = RMul(r3C7A,r3D37);
      real r3E25#1 = RMul(r3C94,r3D12);
      real r3E26#1 = RAdd(r3E23,r3E24);
      real r3E27#2 = RAdd(r3E26,r3E25);
      real r3E2B#1 = RMul(r3C67,r3D02);
      real r3E2D#1 = RMul(r3C81,r3D29);
      real r3E2F#1 = RMul(r3C9B,r3D3C);
      real r3E30#1 = RAdd(r3E2B,r3E2D);
      real r3E31#2 = RAdd(r3E30,r3E2F);
      real r3E32#1 = RMul(r3C67,r3D0A);
      real r3E33#1 = RMul(r3C81,r3D2B);
      real r3E34#1 = RMul(r3C9B,r3D3F);
      real r3E35#1 = RAdd(r3E32,r3E33);
      real r3E36#2 = RAdd(r3E35,r3E34);
      real r3E37#1 = RMul(r3C67,r3D12);
      real r3E38#1 = RMul(r3C81,r3D2D);
      real r3E39#1 = RMul(r3C9B,r3D42);
      real r3E3A#1 = RAdd(r3E37,r3E38);
      real r3E3B#1 = RAdd(r3E3A,r3E39);
      real r3E3D#1 = RMul(r3C67,r3D16);
      real r3E3E#1 = RMul(r3C81,r3D02);
      real r3E3F#1 = RMul(r3C9B,r3D46);
      real r3E40#1 = RAdd(r3E3D,r3E3E);
      real r3E41#2 = RAdd(r3E40,r3E3F);
      real r3E42#1 = RMul(r3C67,r3D18);
      real r3E43#1 = RMul(r3C81,r3D0A);
      real r3E44#1 = RMul(r3C9B,r3D49);
      real r3E45#1 = RAdd(r3E42,r3E43);
      real r3E46#2 = RAdd(r3E45,r3E44);
      real r3E47#1 = RMul(r3C67,r3D1A);
      real r3E48#1 = RMul(r3C81,r3D12);
      real r3E49#1 = RMul(r3C9B,r3D4C);
      real r3E4A#1 = RAdd(r3E47,r3E48);
      real r3E4B#1 = RAdd(r3E4A,r3E49);
      real r3E4D#1 = RMul(r3C67,r3D1F);
      real r3E4E#1 = RMul(r3C81,r3D31);
      real r3E4F#1 = RMul(r3C9B,r3D02);
      real r3E50#1 = RAdd(r3E4D,r3E4E);
      real r3E51#2 = RAdd(r3E50,r3E4F);
      real r3E52#1 = RMul(r3C67,r3D22);
      real r3E53#1 = RMul(r3C81,r3D34);
      real r3E54#1 = RMul(r3C9B,r3D0A);
      real r3E55#1 = RAdd(r3E52,r3E53);
      real r3E56#2 = RAdd(r3E55,r3E54);
      real r3E57#1 = RMul(r3C67,r3D25);
      real r3E58#1 = RMul(r3C81,r3D37);
      real r3E59#1 = RMul(r3C9B,r3D12);
      real r3E5A#1 = RAdd(r3E57,r3E58);
      real r3E5B#1 = RAdd(r3E5A,r3E59);
      tensor[3] probe_l_143F17#1 = <tensor[3]>[r3C51,r3C73,r3C8D];
      tensor[3] probe_l_153F64#3 = <tensor[3]>[r3C5C,r3C7A,r3C94];
      tensor[3] tensor400F#1 = <tensor[3]>[r3D12,r3D2D,r3D42];
      tensor[3] tensor4015#1 = <tensor[3]>[r3D1A,r3D12,r3D4C];
      tensor[3] tensor401C#1 = <tensor[3]>[r3D25,r3D37,r3D12];
      real vdot403F#1 = VDot<3>(probe_l_153F64,tensor400F);
      real vdot4041#1 = VDot<3>(probe_l_153F64,tensor4015);
      real vdot4043#1 = VDot<3>(probe_l_153F64,tensor401C);
      tensor[3] op1_e3_l_18403D#1 = <tensor[3]>[vdot403F,vdot4041,vdot4043];
      real op1_e3_l_19404C#1 = VDot<3>(probe_l_143F17,op1_e3_l_18403D);
      real r4052#2 = RMul(basisEval3C2E,r3DB1);
      real r4054#1 = RMul(basisEval3C2E,r3DB9);
      real r4056#2 = RMul(basisEval3C2E,r3DC1);
      real r4058#2 = RMul(basisEval3C2E,r3DFD);
      real r405A#3 = RMul(basisEval3C2E,r3E02);
      real r405D#1 = RMul(one3C29,r3E07);
      real r405F#2 = RMul(basisEval3C2E,r3E31);
      real r4062#1 = RMul(coeff3C28,r3E36);
      real r4064#3 = RMul(basisEval3C2E,r3E3B);
      real r4065#2 = RAdd(r4052,r4054);
      real r4066#1 = RAdd(r4065,r4056);
      real r4067#1 = RAdd(r4066,r4058);
      real r4068#1 = RAdd(r4067,r405A);
      real r4069#1 = RAdd(r4068,r405D);
      real r406A#1 = RAdd(r4069,r405F);
      real r406B#1 = RAdd(r406A,r4062);
      real r406C#1 = RAdd(r406B,r4064);
      real r406E#2 = RMul(basisEval3C2E,r3DCA);
      real r4070#1 = RMul(basisEval3C2E,r3DD2);
      real r4072#2 = RMul(basisEval3C2E,r3DDA);
      real r4074#2 = RMul(basisEval3C2E,r3E0D);
      real r4076#3 = RMul(basisEval3C2E,r3E12);
      real r4078#1 = RMul(one3C29,r3E17);
      real r407A#2 = RMul(basisEval3C2E,r3E41);
      real r407C#1 = RMul(coeff3C28,r3E46);
      real r407E#3 = RMul(basisEval3C2E,r3E4B);
      real r407F#2 = RAdd(r406E,r4070);
      real r4080#1 = RAdd(r407F,r4072);
      real r4081#1 = RAdd(r4080,r4074);
      real r4082#1 = RAdd(r4081,r4076);
      real r4083#1 = RAdd(r4082,r4078);
      real r4084#1 = RAdd(r4083,r407A);
      real r4085#1 = RAdd(r4084,r407C);
      real r4086#1 = RAdd(r4085,r407E);
      real r4088#2 = RMul(basisEval3C2E,r3DE3);
      real r408A#1 = RMul(basisEval3C2E,r3DEB);
      real r408C#2 = RMul(basisEval3C2E,r3DF3);
      real r408E#2 = RMul(basisEval3C2E,r3E1D);
      real r4090#3 = RMul(basisEval3C2E,r3E22);
      real r4092#1 = RMul(one3C29,r3E27);
      real r4094#2 = RMul(basisEval3C2E,r3E51);
      real r4096#1 = RMul(coeff3C28,r3E56);
      real r4098#3 = RMul(basisEval3C2E,r3E5B);
      real r4099#2 = RAdd(r4088,r408A);
      real r409A#1 = RAdd(r4099,r408C);
      real r409B#1 = RAdd(r409A,r408E);
      real r409C#1 = RAdd(r409B,r4090);
      real r409D#1 = RAdd(r409C,r4092);
      real r409E#1 = RAdd(r409D,r4094);
      real r409F#1 = RAdd(r409E,r4096);
      real r40A0#1 = RAdd(r409F,r4098);
      real r40A2#1 = RMul(coeff3C28,r3DC1);
      real r40A3#2 = RMul(basisEval3C2E,r3E07);
      real r40A4#1 = RMul(one3C29,r3E31);
      real r40A5#2 = RMul(basisEval3C2E,r3E36);
      real r40A6#1 = RAdd(r4065,r40A2);
      real r40A7#1 = RAdd(r40A6,r4058);
      real r40A8#1 = RAdd(r40A7,r405A);
      real r40A9#1 = RAdd(r40A8,r40A3);
      real r40AA#1 = RAdd(r40A9,r40A4);
      real r40AB#1 = RAdd(r40AA,r40A5);
      real r40AC#1 = RAdd(r40AB,r4064);
      real r40AD#1 = RMul(coeff3C28,r3DDA);
      real r40AE#2 = RMul(basisEval3C2E,r3E17);
      real r40AF#1 = RMul(one3C29,r3E41);
      real r40B0#2 = RMul(basisEval3C2E,r3E46);
      real r40B1#1 = RAdd(r407F,r40AD);
      real r40B2#1 = RAdd(r40B1,r4074);
      real r40B3#1 = RAdd(r40B2,r4076);
      real r40B4#1 = RAdd(r40B3,r40AE);
      real r40B5#1 = RAdd(r40B4,r40AF);
      real r40B6#1 = RAdd(r40B5,r40B0);
      real r40B7#1 = RAdd(r40B6,r407E);
      real r40B8#1 = RMul(coeff3C28,r3DF3);
      real r40B9#2 = RMul(basisEval3C2E,r3E27);
      real r40BA#1 = RMul(one3C29,r3E51);
      real r40BB#2 = RMul(basisEval3C2E,r3E56);
      real r40BC#1 = RAdd(r4099,r40B8);
      real r40BD#1 = RAdd(r40BC,r408E);
      real r40BE#1 = RAdd(r40BD,r4090);
      real r40BF#1 = RAdd(r40BE,r40B9);
      real r40C0#1 = RAdd(r40BF,r40BA);
      real r40C1#1 = RAdd(r40C0,r40BB);
      real r40C2#1 = RAdd(r40C1,r4098);
      real r40C4#1 = RMul(one3C29,r3DB9);
      real r40C5#1 = RMul(coeff3C28,r3DFD);
      real r40C6#1 = RAdd(r4052,r40C4);
      real r40C7#1 = RAdd(r40C6,r4056);
      real r40C8#1 = RAdd(r40C7,r40C5);
      real r40C9#1 = RAdd(r40C8,r405A);
      real r40CA#1 = RAdd(r40C9,r40A3);
      real r40CB#1 = RAdd(r40CA,r405F);
      real r40CC#1 = RAdd(r40CB,r40A5);
      real r40CD#1 = RAdd(r40CC,r4064);
      real r40CE#1 = RMul(one3C29,r3DD2);
      real r40CF#1 = RMul(coeff3C28,r3E0D);
      real r40D0#1 = RAdd(r406E,r40CE);
      real r40D1#1 = RAdd(r40D0,r4072);
      real r40D2#1 = RAdd(r40D1,r40CF);
      real r40D3#1 = RAdd(r40D2,r4076);
      real r40D4#1 = RAdd(r40D3,r40AE);
      real r40D5#1 = RAdd(r40D4,r407A);
      real r40D6#1 = RAdd(r40D5,r40B0);
      real r40D7#1 = RAdd(r40D6,r407E);
      real r40D8#1 = RMul(one3C29,r3DEB);
      real r40D9#1 = RMul(coeff3C28,r3E1D);
      real r40DA#1 = RAdd(r4088,r40D8);
      real r40DB#1 = RAdd(r40DA,r408C);
      real r40DC#1 = RAdd(r40DB,r40D9);
      real r40DD#1 = RAdd(r40DC,r4090);
      real r40DE#1 = RAdd(r40DD,r40B9);
      real r40DF#1 = RAdd(r40DE,r4094);
      real r40E0#1 = RAdd(r40DF,r40BB);
      real r40E1#1 = RAdd(r40E0,r4098);
      real realLit4179#1 = 0.2e1;
      real op1_e3_l_214178#9 = RMul(realLit4179,op1_e3_l_19404C);
      real varAcc417F#1 = VIndex<3,0>(xn417E);
      real varAcc4180#1 = VIndex<3,1>(xn417E);
      real varAcc4181#1 = VIndex<3,2>(xn417E);
      real prod4186#2 = RMul(varAcc417F,prod3C2A);
      real prod4188#1 = RMul(varAcc4180,one3C29);
      real prod4189#2 = RMul(one3C29,prod4188);
      real prod418B#1 = RMul(one3C29,varAcc4181);
      real prod418C#2 = RMul(one3C29,prod418B);
      real mult418F#1 = RMul(coeff3C28,prod418C);
      real mult4190#1 = RMul(coeff3C28,prod4189);
      real mult4191#1 = RMul(coeff3C28,prod4186);
      real sum4192#1 = RAdd(mult4190,mult4191);
      real sum4193#1 = RAdd(mult418F,sum4192);
      real sum4194#3 = RAdd(basisEval3C2D,sum4193);
      real basisEval4196#3 = RMul(one3C29,prod4186);
      real basisEval4197#3 = RMul(one3C29,prod4189);
      real basisEval4198#3 = RMul(one3C29,prod418C);
      real r41B9#1 = RMul(dof_load3BDA,sum4194);
      real r41BC#1 = RMul(dof_load3BE3,basisEval4196);
      real r41BF#1 = RMul(dof_load3BEC,basisEval4197);
      real r41C2#1 = RMul(dof_load3BF5,basisEval4198);
      real r41C3#1 = RAdd(r41B9,r41BC);
      real r41C4#1 = RAdd(r41C3,r41BF);
      real r41C5#1 = RAdd(r41C4,r41C2);
      real r41C7#1 = RMul(dof_load3BDB,sum4194);
      real r41C9#1 = RMul(dof_load3BE4,basisEval4196);
      real r41CB#1 = RMul(dof_load3BED,basisEval4197);
      real r41CD#1 = RMul(dof_load3BF6,basisEval4198);
      real r41CE#1 = RAdd(r41C7,r41C9);
      real r41CF#1 = RAdd(r41CE,r41CB);
      real r41D0#1 = RAdd(r41CF,r41CD);
      real r41D2#1 = RMul(dof_load3BDC,sum4194);
      real r41D4#1 = RMul(dof_load3BE5,basisEval4196);
      real r41D6#1 = RMul(dof_load3BEE,basisEval4197);
      real r41D8#1 = RMul(dof_load3BF7,basisEval4198);
      real r41D9#1 = RAdd(r41D2,r41D4);
      real r41DA#1 = RAdd(r41D9,r41D6);
      real r41DB#1 = RAdd(r41DA,r41D8);
      tensor[3] probe_l_2241B6#1 = <tensor[3]>[r41C5,r41D0,r41DB];
      real r4205#1 = RDiv(r406C,op1_e3_l_214178);
      real r4207#1 = RDiv(r4086,op1_e3_l_214178);
      real r4209#1 = RDiv(r40A0,op1_e3_l_214178);
      tensor[3] tensor420A#1 = <tensor[3]>[r4205,r4207,r4209];
      real r420C#1 = RDiv(r40AC,op1_e3_l_214178);
      real r420E#1 = RDiv(r40B7,op1_e3_l_214178);
      real r4210#1 = RDiv(r40C2,op1_e3_l_214178);
      tensor[3] tensor4211#1 = <tensor[3]>[r420C,r420E,r4210];
      real r4213#1 = RDiv(r40CD,op1_e3_l_214178);
      real r4215#1 = RDiv(r40D7,op1_e3_l_214178);
      real r4217#1 = RDiv(r40E1,op1_e3_l_214178);
      tensor[3] tensor4218#1 = <tensor[3]>[r4213,r4215,r4217];
      tensor[3] op1_e3_l_244230#3 = VSub<3>(probe_l_2241B6,pos3B9E);
      real vdot4235#1 = VDot<3>(tensor420A,op1_e3_l_244230);
      real vdot4237#1 = VDot<3>(tensor4211,op1_e3_l_244230);
      real vdot4239#1 = VDot<3>(tensor4218,op1_e3_l_244230);
      tensor[3] op1_e3_l_254233#3 = <tensor[3]>[vdot4235,vdot4237,vdot4239];
      tensor[3] xn4242#4 = VSub<3>(xn417E,op1_e3_l_254233);
      real _t4245#6 = 0.1e-7;
      real _t4247#1 = RMul(_t4245,_t4245);
      real _t42A9#1 = VDot<3>(op1_e3_l_254233,op1_e3_l_254233);
      bool _t42AC#1 = GTE<real>(_t4247,_t42A9);
      if _t42AC then goto ASSIGN59A3 else goto JOIN42D9
    ASSIGN59A3:  preds = [COND42AE]
      real _t42B1#1 = RAdd(one3C29,_t4245);
      tensor[3] _t42B4#1 = <tensor[3]>[one3C29,one3C29,one3C29];
      real _t42B6#1 = VDot<3>(_t42B4,xn4242);
      bool _t42B9#1 = GT<real>(_t42B1,_t42B6);
      tensor[3] _t42BB#1 = <tensor[3]>[_t4245,_t4245,_t4245];
      tensor[3] _t42BD#3 = VAdd<3>(_t42BB,xn4242);
      real _t42C0#1 = VIndex<3,0>(_t42BD);
      real _t42C2#3 = -0.e0;
      bool _t42C4#1 = GT<real>(_t42C0,_t42C2);
      real _t42C6#1 = VIndex<3,1>(_t42BD);
      bool _t42C8#1 = GT<real>(_t42C6,_t42C2);
      real _t42CA#1 = VIndex<3,2>(_t42BD);
      bool _t42CC#1 = GT<real>(_t42CA,_t42C2);
      bool _t42CE#1 = BAnd(_t42C8,_t42CC);
      bool _t42D0#1 = BAnd(_t42C4,_t42CE);
      bool _t42D2#1 = BAnd(_t42B9,_t42D0);
      if _t42D2 then goto ASSIGN42D6 else goto JOIN42D8
    ASSIGN42D6:  preds = [COND42D4]
      femData:MeshPos _t42D5#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3B9D,cellItter3BA8,xn4242,pos3B9E);
      return _t42D5
      goto JOIN42D8
    JOIN42D8:  preds = [*RETURN(_t42D5)42D7,COND42D4]
      goto JOIN42D9
    JOIN42D9:  preds = [JOIN42D8,COND42AE]
      goto FOREACH3BAF
    NEXT42DB:  preds = [FOREACH3BAF]
      goto FOREACH3BA9
    ASSIGN42DD:  preds = [FOREACH3BA9]
      femData:MeshPos _t42DC#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3B9D);
      return _t42DC
}
  function femData:MeshPos fn_2FB47F0 (femData:MeshPos x47F1#5, tensor[3] dPos47F2#1) {
    ENTRY47F3:  preds = []
      femData:Mesh meshData47F4#1 = globals.meshData3B45;
      int timeSteps47F6#1 = globals.timeSteps3B48;
      bool _t47F8#1 = ExtractFemItem<bool,Valid(MeshPos)>(x47F1);
      bool _t47FA#1 = BNot(_t47F8);
      if _t47FA then goto RETURN(x47F1)47FD else goto JOIN47FE
    RETURN(x47F1)47FD:  preds = [COND47FC]
      return x47F1
      goto JOIN47FE
    JOIN47FE:  preds = [*RETURN(x47F1)47FD,COND47FC]
      int _t47FF#1 = 0;
      int[] _t4801#1 = Range(_t47FF,timeSteps47F6);
    FOREACH4804:  preds = [ASSIGN4802,*NEXT4806]
      foreach (i4803 in _t4801) on exit goto ASSIGN4808
      return
      goto FOREACH4804
    ASSIGN4808:  preds = [FOREACH4804]
      string _t4807#1 = "Took stupid way out!\n";
      Print<[string]>(_t4807);
      tensor[3] _t480A#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x47F1);
      int _t480C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x47F1);
      femData:Mesh _t480E#16 = ExtractFem<femData:Mesh,femData:MeshPos>(x47F1);
      int ilit4811#1 = 4;
      int mulRes4812#4 = IMul(_t480C,ilit4811);
      int idx4815#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,mulRes4812);
      int ilit4816#5 = 1;
      int addRes4817#1 = IAdd(mulRes4812,ilit4816);
      int idx4818#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes4817);
      int ilit4819#5 = 2;
      int addRes481A#1 = IAdd(mulRes4812,ilit4819);
      int idx481B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes481A);
      int ilit481C#5 = 3;
      int addRes481D#1 = IAdd(mulRes4812,ilit481C);
      int idx481E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes481D);
      int mulRes4834#3 = IMul(ilit481C,idx4815);
      int addRes4837#1 = IAdd(ilit4816,mulRes4834);
      int addRes4839#1 = IAdd(ilit4819,mulRes4834);
      real dof_load483A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes4834);
      real dof_load483B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4837);
      real dof_load483C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4839);
      int mulRes483F#3 = IMul(ilit481C,idx4818);
      int addRes4841#1 = IAdd(ilit4816,mulRes483F);
      int addRes4842#1 = IAdd(ilit4819,mulRes483F);
      real dof_load4843#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes483F);
      real dof_load4844#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4841);
      real dof_load4845#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4842);
      int mulRes4848#3 = IMul(ilit481C,idx481B);
      int addRes484A#1 = IAdd(ilit4816,mulRes4848);
      int addRes484B#1 = IAdd(ilit4819,mulRes4848);
      real dof_load484C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes4848);
      real dof_load484D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes484A);
      real dof_load484E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes484B);
      int mulRes4851#3 = IMul(ilit481C,idx481E);
      int addRes4853#1 = IAdd(ilit4816,mulRes4851);
      int addRes4854#1 = IAdd(ilit4819,mulRes4851);
      real dof_load4855#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes4851);
      real dof_load4856#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4853);
      real dof_load4857#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4854);
      real varAcc4885#1 = VIndex<3,0>(_t480A);
      real varAcc4886#1 = VIndex<3,1>(_t480A);
      real varAcc4887#1 = VIndex<3,2>(_t480A);
      real coeff4888#3 = -0.1e1;
      real one488A#11 = 0.1e1;
      real prod488B#2 = RMul(one488A,one488A);
      real prod488C#2 = RMul(varAcc4885,prod488B);
      real prod488E#1 = RMul(varAcc4886,one488A);
      real prod488F#2 = RMul(one488A,prod488E);
      real prod4891#1 = RMul(one488A,varAcc4887);
      real prod4892#2 = RMul(one488A,prod4891);
      real prod4893#1 = RMul(one488A,prod488B);
      real mult4894#1 = RMul(one488A,prod4893);
      real mult4895#1 = RMul(coeff4888,prod4892);
      real mult4896#1 = RMul(coeff4888,prod488F);
      real mult4897#1 = RMul(coeff4888,prod488C);
      real sum4898#1 = RAdd(mult4896,mult4897);
      real sum4899#1 = RAdd(mult4895,sum4898);
      real sum489A#3 = RAdd(mult4894,sum4899);
      real basisEval489C#3 = RMul(one488A,prod488C);
      real basisEval489D#3 = RMul(one488A,prod488F);
      real basisEval489E#3 = RMul(one488A,prod4892);
      real r48BF#1 = RMul(dof_load483A,sum489A);
      real r48C2#1 = RMul(dof_load4843,basisEval489C);
      real r48C5#1 = RMul(dof_load484C,basisEval489D);
      real r48C8#1 = RMul(dof_load4855,basisEval489E);
      real r48C9#1 = RAdd(r48BF,r48C2);
      real r48CA#1 = RAdd(r48C9,r48C5);
      real r48CB#1 = RAdd(r48CA,r48C8);
      real r48CD#1 = RMul(dof_load483B,sum489A);
      real r48CF#1 = RMul(dof_load4844,basisEval489C);
      real r48D1#1 = RMul(dof_load484D,basisEval489D);
      real r48D3#1 = RMul(dof_load4856,basisEval489E);
      real r48D4#1 = RAdd(r48CD,r48CF);
      real r48D5#1 = RAdd(r48D4,r48D1);
      real r48D6#1 = RAdd(r48D5,r48D3);
      real r48D8#1 = RMul(dof_load483C,sum489A);
      real r48DA#1 = RMul(dof_load4845,basisEval489C);
      real r48DC#1 = RMul(dof_load484E,basisEval489D);
      real r48DE#1 = RMul(dof_load4857,basisEval489E);
      real r48DF#1 = RAdd(r48D8,r48DA);
      real r48E0#1 = RAdd(r48DF,r48DC);
      real r48E1#1 = RAdd(r48E0,r48DE);
      tensor[3] probe_l_548BC#1 = <tensor[3]>[r48CB,r48D6,r48E1];
      tensor[3] _t4909#1 = VAdd<3>(probe_l_548BC,dPos47F2);
      femData:MeshPos cmp490C#1 = findPos3B9C (meshData47F4,_t4909);
      return cmp490C
}
## input initialization
  ENTRY3B52:  preds = []
    int timeSteps3B53#1 = 32;
    globals.timeSteps3B48 = timeSteps3B53;
    real timeEps3B56#1 = 0.1e-6;
    globals.timeEps3B49 = timeEps3B56;
    real stepSize3B59#1 = 0.1e-1;
    globals.stepSize3B4B = stepSize3B59;
    int stepMax3B5C#1 = 300;
    globals.stepMax3B4C = stepMax3B5C;
    return
## global-variable initialization
  ENTRY3B60:  preds = []
    femData:Mesh meshData3B61#3 = globals.meshData3B45;
    femData:Space 0space0409_intermedateGlobal3B63#1 = globals.0space0409_intermedateGlobal3B46;
    femData:FemFunc 0data040B_intermedateGlobal3B65#1 = globals.0data040B_intermedateGlobal3B47;
    int _t3B67#1 = 0;
    int _t3B69#1 = 1;
    int _t3B6B#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3B61);
    int _t3B6D#1 = ISub(_t3B6B,_t3B69);
    int[] _t3B6F#1 = Range(_t3B67,_t3B6D);
    femData:MeshCell[] _t3B71#1 = <femData:MeshCell[]>{};
  FOREACH3B74:  preds = [ASSIGN3B72,NEXT3B7A]
    foreach (_t3B73 in _t3B6F) on exit goto ASSIGN3B7C
      femData:MeshCell[] _t3B78#1 = phi(_t3B71,_t3B77)
    femData:MeshCell _t3B75#1 = LoadFem<femData:MeshCell>(meshData3B61,_t3B73);
    femData:MeshCell[] _t3B77#1 = Append<femData:MeshCell>(_t3B78,_t3B75);
    goto FOREACH3B74
  ASSIGN3B7C:  preds = [FOREACH3B74]
    femData:Space space3B7B#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal3B63,meshData3B61);
    femData:FemFunc data3B7D#2 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal3B65,space3B7B);
    globals.data3B4F = data3B7D;
    femData:Space _t3B80#2 = ExtractFem<femData:Space,femData:FemFunc>(data3B7D);
    femData:Mesh _t3B82#1 = ExtractFem<femData:Mesh,femData:Space>(_t3B80);
    globals._t3B50 = _t3B82;
    globals._tX3B51 = _t3B80;
    return
## strand
  strand gg (tensor[3] startPos3B87#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3B8E:  preds = []
        femData:Mesh meshData3B8F#1 = globals.meshData3B45;
        tensor[3][0] _t3B91#1 = <tensor[3][0]>{};
        tensor[3][] _t3B93#1 = MkDynamic<tensor[3],0>(_t3B91);
        tensor[3][0] _t3B95#1 = <tensor[3][0]>{};
        tensor[3][] _t3B97#1 = MkDynamic<tensor[3],0>(_t3B95);
        int step3B99#1 = 0;
        femData:MeshPos cPos3B9B#1 = findPos3B9C (meshData3B8F,startPos3B87);
        self.stream = _t3B93;
        self.newStream = _t3B97;
        self.step = step3B99;
        self.cPos = cPos3B9B;
        self.altCPos = startPos3B87;
        self.startPos = startPos3B87;
        return
    end state init
    method update
        ENTRY42E7:  preds = []
          femData:Mesh _t42E8#3 = globals._t3B50;
          femData:Space _t42EA#30 = globals._tX3B51;
          femData:FemFunc data42EC#92 = globals.data3B4F;
          femData:Mesh meshData42EE#2 = globals.meshData3B45;
          real stepSize42F0#4 = globals.stepSize3B4B;
          int stepMax42F2#1 = globals.stepMax3B4C;
          tensor[3,3] M42F4#3 = globals.M3B4D;
          tensor[3] center42F6#2 = globals.center3B4E;
          tensor[3][] stream42F8#2 = self.stream;
          tensor[3][] newStream42FA#2 = self.newStream;
          int step42FC#5 = self.step;
          femData:MeshPos cPos42FE#9 = self.cPos;
          tensor[3] altCPos4300#10 = self.altCPos;
          tensor[3] startPos4302#6 = self.startPos;
          int _t4304#1 = 0;
          bool _t4306#1 = EQ<int>(step42FC,_t4304);
          if _t4306 then goto ASSIGN430A else goto JOIN4334
        ASSIGN430A:  preds = [COND4308]
          bool _t4309#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos42FE);
          if _t4309 then goto ASSIGN430D else goto JOIN4333
        ASSIGN430D:  preds = [COND430B]
          tensor[3] rp430C#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          real _t430E#1 = VIndex<3,0>(rp430C);
          real _t4310#3 = 0.1e-5;
          bool _t4312#1 = LTE<real>(_t430E,_t4310);
          if _t4312 then goto STABILIZE4315 else goto JOIN4316
        STABILIZE4315:  preds = [COND4314]
          stabilize
          goto JOIN4316
        JOIN4316:  preds = [*STABILIZE4315,COND4314]
          real _t4317#1 = VIndex<3,1>(rp430C);
          bool _t4319#1 = LTE<real>(_t4317,_t4310);
          if _t4319 then goto STABILIZE431C else goto JOIN431D
        STABILIZE431C:  preds = [COND431B]
          stabilize
          goto JOIN431D
        JOIN431D:  preds = [*STABILIZE431C,COND431B]
          real _t431E#1 = VIndex<3,2>(rp430C);
          bool _t4320#1 = LTE<real>(_t431E,_t4310);
          if _t4320 then goto STABILIZE4323 else goto JOIN4324
        STABILIZE4323:  preds = [COND4322]
          stabilize
          goto JOIN4324
        JOIN4324:  preds = [*STABILIZE4323,COND4322]
          real _t4325#3 = 0.1e1;
          tensor[3] _t4327#1 = <tensor[3]>[_t4325,_t4325,_t4325];
          real r4329#1 = VDot<3>(_t4327,rp430C);
          real _t432C#1 = 0.9999999e0;
          bool _t432E#1 = LTE<real>(_t432C,r4329);
          if _t432E then goto STABILIZE4331 else goto JOIN4332
        STABILIZE4331:  preds = [COND4330]
          stabilize
          goto JOIN4332
        JOIN4332:  preds = [*STABILIZE4331,COND4330]
          goto JOIN4333
        JOIN4333:  preds = [JOIN4332,COND430B]
          goto JOIN4334
        JOIN4334:  preds = [JOIN4333,COND4308]
          bool _t4335#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos42FE);
          femData:MeshPos _t4337#6 = findPos3B9C (meshData42EE,altCPos4300);
          bool _t4339#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t4337);
          bool _t433B#1 = NEQ<bool>(_t4335,_t4339);
          if _t433B then goto ASSIGN433F else goto JOIN4343
        ASSIGN433F:  preds = [COND433D]
          string _t433E#1 = "ERG:Warning of validity startPos:";
          string _t4340#1 = "\n";
          Print<[string,tensor[3],string]>(_t433E,startPos4302,_t4340);
          goto JOIN4343
        JOIN4343:  preds = [MASSIGN4342,COND433D]
          bool _t4344#2 = BNot(_t4335);
          if _t4344 then goto ASSIGN4348 else goto ASSIGN5617
        ASSIGN4348:  preds = [COND4346]
          bool _t4347#1 = true;
          goto JOIN434B
        JOIN434B:  preds = [ASSIGN4348,JOIN561C]
          bool _t4349#1 = phi(_t4347,_t434A)
          if _t4349 then goto ASSIGN434E else goto JOIN435D
        ASSIGN434E:  preds = [COND434C]
          string _t434D#1 = "Went off the mesh\?";
          string _t434F#2 = " and ";
          bool _t4351#1 = BNot(_t4339);
          string _t4353#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t434D,_t4344,_t434F,altCPos4300,_t434F,_t4351,_t4353);
          string _t4356#1 = "Pos is:";
          tensor[3] _t4358#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          Print<[string,tensor[3],string]>(_t4356,_t4358,_t4353);
          Print<[tensor[3][],string,tensor[3][],string]>(stream42F8,_t4353,newStream42FA,_t4353);
          stabilize
          goto JOIN435D
        JOIN435D:  preds = [*STABILIZE435C,COND434C]
          tensor[3] _t435E#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          int _t4360#5 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos42FE);
          femData:Mesh _t4362#20 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos42FE);
          int ilit4365#7 = 4;
          int mulRes4366#4 = IMul(_t4360,ilit4365);
          int idx4369#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,mulRes4366);
          int ilit436A#66 = 1;
          int addRes436B#1 = IAdd(mulRes4366,ilit436A);
          int idx436C#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes436B);
          int ilit436D#65 = 2;
          int addRes436E#1 = IAdd(mulRes4366,ilit436D);
          int idx436F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes436E);
          int ilit4370#65 = 3;
          int addRes4371#1 = IAdd(mulRes4366,ilit4370);
          int idx4372#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes4371);
          int mulRes4388#3 = IMul(ilit4370,idx4369);
          int addRes438B#1 = IAdd(ilit436A,mulRes4388);
          int addRes438D#1 = IAdd(ilit436D,mulRes4388);
          real dof_load438E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes4388);
          real dof_load438F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes438B);
          real dof_load4390#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes438D);
          int mulRes4393#3 = IMul(ilit4370,idx436C);
          int addRes4395#1 = IAdd(ilit436A,mulRes4393);
          int addRes4396#1 = IAdd(ilit436D,mulRes4393);
          real dof_load4397#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes4393);
          real dof_load4398#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4395);
          real dof_load4399#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4396);
          int mulRes439C#3 = IMul(ilit4370,idx436F);
          int addRes439E#1 = IAdd(ilit436A,mulRes439C);
          int addRes439F#1 = IAdd(ilit436D,mulRes439C);
          real dof_load43A0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes439C);
          real dof_load43A1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439E);
          real dof_load43A2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439F);
          int mulRes43A5#3 = IMul(ilit4370,idx4372);
          int addRes43A7#1 = IAdd(ilit436A,mulRes43A5);
          int addRes43A8#1 = IAdd(ilit436D,mulRes43A5);
          real dof_load43A9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes43A5);
          real dof_load43AA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A7);
          real dof_load43AB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A8);
          real varAcc43D9#5 = VIndex<3,0>(_t435E);
          real varAcc43DA#4 = VIndex<3,1>(_t435E);
          real varAcc43DB#4 = VIndex<3,2>(_t435E);
          real coeff43DC#15 = -0.1e1;
          real one43DE#62 = 0.1e1;
          real prod43DF#11 = RMul(one43DE,one43DE);
          real prod43E0#4 = RMul(varAcc43D9,prod43DF);
          real prod43E2#2 = RMul(varAcc43DA,one43DE);
          real prod43E3#4 = RMul(one43DE,prod43E2);
          real prod43E5#2 = RMul(one43DE,varAcc43DB);
          real prod43E6#4 = RMul(one43DE,prod43E5);
          real prod43E7#1 = RMul(one43DE,prod43DF);
          real mult43E8#7 = RMul(one43DE,prod43E7);
          real mult43E9#2 = RMul(coeff43DC,prod43E6);
          real mult43EA#2 = RMul(coeff43DC,prod43E3);
          real mult43EB#2 = RMul(coeff43DC,prod43E0);
          real sum43EC#1 = RAdd(mult43EA,mult43EB);
          real sum43ED#1 = RAdd(mult43E9,sum43EC);
          real sum43EE#3 = RAdd(mult43E8,sum43ED);
          real basisEval43F0#3 = RMul(one43DE,prod43E0);
          real basisEval43F1#3 = RMul(one43DE,prod43E3);
          real basisEval43F2#3 = RMul(one43DE,prod43E6);
          real r4413#1 = RMul(dof_load438E,sum43EE);
          real r4416#1 = RMul(dof_load4397,basisEval43F0);
          real r4419#1 = RMul(dof_load43A0,basisEval43F1);
          real r441C#1 = RMul(dof_load43A9,basisEval43F2);
          real r441D#1 = RAdd(r4413,r4416);
          real r441E#1 = RAdd(r441D,r4419);
          real r441F#1 = RAdd(r441E,r441C);
          real r4421#1 = RMul(dof_load438F,sum43EE);
          real r4423#1 = RMul(dof_load4398,basisEval43F0);
          real r4425#1 = RMul(dof_load43A1,basisEval43F1);
          real r4427#1 = RMul(dof_load43AA,basisEval43F2);
          real r4428#1 = RAdd(r4421,r4423);
          real r4429#1 = RAdd(r4428,r4425);
          real r442A#1 = RAdd(r4429,r4427);
          real r442C#1 = RMul(dof_load4390,sum43EE);
          real r442E#1 = RMul(dof_load4399,basisEval43F0);
          real r4430#1 = RMul(dof_load43A2,basisEval43F1);
          real r4432#1 = RMul(dof_load43AB,basisEval43F2);
          real r4433#1 = RAdd(r442C,r442E);
          real r4434#1 = RAdd(r4433,r4430);
          real r4435#1 = RAdd(r4434,r4432);
          tensor[3] _t4410#3 = <tensor[3]>[r441F,r442A,r4435];
          tensor[3][1] _t445D#1 = <tensor[3][1]>{_t4410};
          tensor[3][] _t445F#1 = MkDynamic<tensor[3],1>(_t445D);
          tensor[3][] stream4461#4 = Concat<tensor[3]>(stream42F8,_t445F);
          tensor[3][1] _t4463#1 = <tensor[3][1]>{altCPos4300};
          tensor[3][] _t4465#1 = MkDynamic<tensor[3],1>(_t4463);
          tensor[3][] newStream4467#4 = Concat<tensor[3]>(newStream42FA,_t4465);
          tensor[3] op1_e3_l_744B6#2 = VSub<3>(_t4410,altCPos4300);
          real op1_e3_l_944B9#1 = VDot<3>(op1_e3_l_744B6,op1_e3_l_744B6);
          real _t44BC#1 = Sqrt(op1_e3_l_944B9);
          real _t44BF#5 = 0.1e-5;
          bool _t44C1#1 = GT<real>(_t44BC,_t44BF);
          if _t44C1 then goto ASSIGN44C5 else goto ASSIGN5610
        ASSIGN44C5:  preds = [COND44C3]
          string _t44C4#1 = "ERG:Error in tracing 1: At step:";
          string _t44C6#1 = " with particle:";
          string _t44C8#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t44C4,step42FC,_t44C6,startPos4302,_t44C8);
          string _t44CB#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t44CB,_t4410,altCPos4300,_t44C8);
          string _t44CE#1 = "Cells are:";
          femData:MeshCell _t44D0#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t44D2#2 = " and ";
          femData:Mesh _t44D4#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4337);
          int _t44D6#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4337);
          femData:MeshCell _t44D8#1 = LoadFem<femData:MeshCell>(_t44D4,_t44D6);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t44CE,_t44D0,_t44D2,_t44D8,_t44C8);
          string _t44DB#1 = "Ref poses are:";
          tensor[3] _t44DD#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t4337);
          Print<[string,tensor[3],string,tensor[3],string]>(_t44DB,_t435E,_t44D2,_t44DD,_t44C8);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN44E3
        JOIN44E3:  preds = [*STABILIZE44E2,MASSIGN5615]
          real _t44E4#1 = 0.5e0;
          if _t4335 then goto ASSIGN44E8 else goto ASSIGN5609
        ASSIGN44E8:  preds = [COND44E6]
          femData:MeshCell c44E7#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          int _t44E9#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c44E7);
          femData:FuncCell _t44EB#2 = LoadFem<femData:FuncCell>(data42EC,_t44E9);
          femData:FemFunc _t44ED#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t44EB);
          femData:Space _t44EF#10 = ExtractFem<femData:Space,femData:FemFunc>(_t44ED);
          int _t44F1#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t44EB);
          int ilit44F4#1 = 10;
          int mulRes44F5#10 = IMul(_t44F1,ilit44F4);
          int idx44F8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,mulRes44F5);
          int addRes44FA#1 = IAdd(mulRes44F5,ilit436A);
          int idx44FB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44FA);
          int addRes44FD#1 = IAdd(mulRes44F5,ilit436D);
          int idx44FE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44FD);
          int addRes4500#1 = IAdd(mulRes44F5,ilit4370);
          int idx4501#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4500);
          int addRes4503#1 = IAdd(mulRes44F5,ilit4365);
          int idx4504#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4503);
          int ilit4505#1 = 5;
          int addRes4506#1 = IAdd(mulRes44F5,ilit4505);
          int idx4507#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4506);
          int ilit4508#1 = 6;
          int addRes4509#1 = IAdd(mulRes44F5,ilit4508);
          int idx450A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4509);
          int ilit450B#1 = 7;
          int addRes450C#1 = IAdd(mulRes44F5,ilit450B);
          int idx450D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes450C);
          int ilit450E#1 = 8;
          int addRes450F#1 = IAdd(mulRes44F5,ilit450E);
          int idx4510#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes450F);
          int ilit4511#1 = 9;
          int addRes4512#1 = IAdd(mulRes44F5,ilit4511);
          int idx4513#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4512);
          int mulRes453B#3 = IMul(ilit4370,idx44F8);
          int addRes453E#1 = IAdd(ilit436A,mulRes453B);
          int addRes4540#1 = IAdd(ilit436D,mulRes453B);
          real dof_load4541#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes453B);
          real dof_load4542#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes453E);
          real dof_load4543#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4540);
          int mulRes4546#3 = IMul(ilit4370,idx44FB);
          int addRes4548#1 = IAdd(ilit436A,mulRes4546);
          int addRes4549#1 = IAdd(ilit436D,mulRes4546);
          real dof_load454A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4546);
          real dof_load454B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4548);
          real dof_load454C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4549);
          int mulRes454F#3 = IMul(ilit4370,idx44FE);
          int addRes4551#1 = IAdd(ilit436A,mulRes454F);
          int addRes4552#1 = IAdd(ilit436D,mulRes454F);
          real dof_load4553#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes454F);
          real dof_load4554#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4551);
          real dof_load4555#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4552);
          int mulRes4558#3 = IMul(ilit4370,idx4501);
          int addRes455A#1 = IAdd(ilit436A,mulRes4558);
          int addRes455B#1 = IAdd(ilit436D,mulRes4558);
          real dof_load455C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4558);
          real dof_load455D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes455A);
          real dof_load455E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes455B);
          int mulRes4562#3 = IMul(ilit4370,idx4504);
          int addRes4564#1 = IAdd(ilit436A,mulRes4562);
          int addRes4565#1 = IAdd(ilit436D,mulRes4562);
          real dof_load4566#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4562);
          real dof_load4567#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4564);
          real dof_load4568#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4565);
          int mulRes456C#3 = IMul(ilit4370,idx4507);
          int addRes456E#1 = IAdd(ilit436A,mulRes456C);
          int addRes456F#1 = IAdd(ilit436D,mulRes456C);
          real dof_load4570#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes456C);
          real dof_load4571#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456E);
          real dof_load4572#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456F);
          int mulRes4576#3 = IMul(ilit4370,idx450A);
          int addRes4578#1 = IAdd(ilit436A,mulRes4576);
          int addRes4579#1 = IAdd(ilit436D,mulRes4576);
          real dof_load457A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4576);
          real dof_load457B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4578);
          real dof_load457C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4579);
          int mulRes4580#3 = IMul(ilit4370,idx450D);
          int addRes4582#1 = IAdd(ilit436A,mulRes4580);
          int addRes4583#1 = IAdd(ilit436D,mulRes4580);
          real dof_load4584#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4580);
          real dof_load4585#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4582);
          real dof_load4586#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4583);
          int mulRes458A#3 = IMul(ilit4370,idx4510);
          int addRes458C#1 = IAdd(ilit436A,mulRes458A);
          int addRes458D#1 = IAdd(ilit436D,mulRes458A);
          real dof_load458E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes458A);
          real dof_load458F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458C);
          real dof_load4590#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458D);
          int mulRes4594#3 = IMul(ilit4370,idx4513);
          int addRes4596#1 = IAdd(ilit436A,mulRes4594);
          int addRes4597#1 = IAdd(ilit436D,mulRes4594);
          real dof_load4598#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4594);
          real dof_load4599#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4596);
          real dof_load459A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4597);
          real coeff4607#3 = 0.2e1;
          real prod24609#1 = RMul(varAcc43D9,varAcc43D9);
          real prod460C#2 = RMul(prod24609,prod43DF);
          real coeff460D#6 = 0.4e1;
          real prod4610#2 = RMul(varAcc43D9,prod43E2);
          real prod4613#2 = RMul(varAcc43D9,prod43E5);
          real coeff4614#3 = -0.3e1;
          real prod24616#1 = RMul(varAcc43DA,varAcc43DA);
          real prod4617#1 = RMul(prod24616,one43DE);
          real prod4618#2 = RMul(one43DE,prod4617);
          real prod4619#1 = RMul(varAcc43DA,varAcc43DB);
          real prod461A#2 = RMul(one43DE,prod4619);
          real prod2461C#1 = RMul(varAcc43DB,varAcc43DB);
          real prod461D#1 = RMul(one43DE,prod2461C);
          real prod461E#2 = RMul(one43DE,prod461D);
          real mult4622#1 = RMul(coeff4614,prod43E6);
          real mult4623#2 = RMul(coeff4607,prod461E);
          real mult4624#1 = RMul(coeff4614,prod43E3);
          real mult4625#4 = RMul(coeff460D,prod461A);
          real mult4626#2 = RMul(coeff4607,prod4618);
          real mult4627#1 = RMul(coeff4614,prod43E0);
          real mult4628#4 = RMul(coeff460D,prod4613);
          real mult4629#4 = RMul(coeff460D,prod4610);
          real mult462A#2 = RMul(coeff4607,prod460C);
          real sum462B#1 = RAdd(mult4629,mult462A);
          real sum462C#1 = RAdd(mult4628,sum462B);
          real sum462D#1 = RAdd(mult4627,sum462C);
          real sum462E#1 = RAdd(mult4626,sum462D);
          real sum462F#1 = RAdd(mult4625,sum462E);
          real sum4630#1 = RAdd(mult4624,sum462F);
          real sum4631#1 = RAdd(mult4623,sum4630);
          real sum4632#1 = RAdd(mult4622,sum4631);
          real sum4633#3 = RAdd(mult43E8,sum4632);
          real sum4637#3 = RAdd(mult43EB,mult462A);
          real sum463A#3 = RAdd(mult43EA,mult4626);
          real sum463D#3 = RAdd(mult43E9,mult4623);
          real coeff463F#6 = -0.4e1;
          real mult4640#1 = RMul(coeff460D,prod43E6);
          real mult4641#1 = RMul(coeff463F,prod461E);
          real mult4642#2 = RMul(coeff463F,prod461A);
          real mult4643#2 = RMul(coeff463F,prod4613);
          real sum4644#1 = RAdd(mult4642,mult4643);
          real sum4645#1 = RAdd(mult4641,sum4644);
          real sum4646#3 = RAdd(mult4640,sum4645);
          real mult4648#1 = RMul(coeff460D,prod43E3);
          real mult4649#1 = RMul(coeff463F,prod4618);
          real mult464A#2 = RMul(coeff463F,prod4610);
          real sum464B#1 = RAdd(mult4649,mult464A);
          real sum464C#1 = RAdd(mult4642,sum464B);
          real sum464D#3 = RAdd(mult4648,sum464C);
          real mult464F#1 = RMul(coeff460D,prod43E0);
          real mult4650#1 = RMul(coeff463F,prod460C);
          real sum4651#1 = RAdd(mult464A,mult4650);
          real sum4652#1 = RAdd(mult4643,sum4651);
          real sum4653#3 = RAdd(mult464F,sum4652);
          real r46AC#1 = RMul(dof_load4541,sum4633);
          real r46AF#1 = RMul(dof_load454A,sum4637);
          real r46B2#1 = RMul(dof_load4553,sum463A);
          real r46B5#1 = RMul(dof_load455C,sum463D);
          real r46B8#1 = RMul(dof_load4566,mult4625);
          real r46BB#1 = RMul(dof_load4570,mult4628);
          real r46BE#1 = RMul(dof_load457A,mult4629);
          real r46C1#1 = RMul(dof_load4584,sum4646);
          real r46C4#1 = RMul(dof_load458E,sum464D);
          real r46C7#1 = RMul(dof_load4598,sum4653);
          real r46C8#1 = RAdd(r46AC,r46AF);
          real r46C9#1 = RAdd(r46C8,r46B2);
          real r46CA#1 = RAdd(r46C9,r46B5);
          real r46CB#1 = RAdd(r46CA,r46B8);
          real r46CC#1 = RAdd(r46CB,r46BB);
          real r46CD#1 = RAdd(r46CC,r46BE);
          real r46CE#1 = RAdd(r46CD,r46C1);
          real r46CF#1 = RAdd(r46CE,r46C4);
          real r46D0#2 = RAdd(r46CF,r46C7);
          real r46D2#1 = RMul(dof_load4542,sum4633);
          real r46D4#1 = RMul(dof_load454B,sum4637);
          real r46D6#1 = RMul(dof_load4554,sum463A);
          real r46D8#1 = RMul(dof_load455D,sum463D);
          real r46DA#1 = RMul(dof_load4567,mult4625);
          real r46DC#1 = RMul(dof_load4571,mult4628);
          real r46DE#1 = RMul(dof_load457B,mult4629);
          real r46E0#1 = RMul(dof_load4585,sum4646);
          real r46E2#1 = RMul(dof_load458F,sum464D);
          real r46E4#1 = RMul(dof_load4599,sum4653);
          real r46E5#1 = RAdd(r46D2,r46D4);
          real r46E6#1 = RAdd(r46E5,r46D6);
          real r46E7#1 = RAdd(r46E6,r46D8);
          real r46E8#1 = RAdd(r46E7,r46DA);
          real r46E9#1 = RAdd(r46E8,r46DC);
          real r46EA#1 = RAdd(r46E9,r46DE);
          real r46EB#1 = RAdd(r46EA,r46E0);
          real r46EC#1 = RAdd(r46EB,r46E2);
          real r46ED#2 = RAdd(r46EC,r46E4);
          real r46EF#1 = RMul(dof_load4543,sum4633);
          real r46F1#1 = RMul(dof_load454C,sum4637);
          real r46F3#1 = RMul(dof_load4555,sum463A);
          real r46F5#1 = RMul(dof_load455E,sum463D);
          real r46F7#1 = RMul(dof_load4568,mult4625);
          real r46F9#1 = RMul(dof_load4572,mult4628);
          real r46FB#1 = RMul(dof_load457C,mult4629);
          real r46FD#1 = RMul(dof_load4586,sum4646);
          real r46FF#1 = RMul(dof_load4590,sum464D);
          real r4701#1 = RMul(dof_load459A,sum4653);
          real r4702#1 = RAdd(r46EF,r46F1);
          real r4703#1 = RAdd(r4702,r46F3);
          real r4704#1 = RAdd(r4703,r46F5);
          real r4705#1 = RAdd(r4704,r46F7);
          real r4706#1 = RAdd(r4705,r46F9);
          real r4707#1 = RAdd(r4706,r46FB);
          real r4708#1 = RAdd(r4707,r46FD);
          real r4709#1 = RAdd(r4708,r46FF);
          real r470A#2 = RAdd(r4709,r4701);
          tensor[3] probe_l_846A9#2 = <tensor[3]>[r46D0,r46ED,r470A];
          real op1_e3_l_11476E#1 = VDot<3>(probe_l_846A9,probe_l_846A9);
          real op1_e3_l_124771#1 = Sqrt(op1_e3_l_11476E);
          real r4776#3 = RDiv(one43DE,op1_e3_l_124771);
          real r4778#1 = RMul(r4776,r46D0);
          real r477A#1 = RMul(r4776,r46ED);
          real r477C#1 = RMul(r4776,r470A);
          tensor[3] _t4774#1 = <tensor[3]>[r4778,r477A,r477C];
          goto JOIN4789
        JOIN4789:  preds = [ASSIGN4786,ASSIGN560E]
          tensor[3] _t4787#3 = phi(_t4774,_t4788)
          real r478B#1 = TensorIndex<tensor[3],[0]>(_t4787);
          real r478C#12 = RMul(_t44E4,stepSize42F0);
          real r478D#1 = RMul(r478C,r478B);
          real r478E#1 = TensorIndex<tensor[3],[1]>(_t4787);
          real r478F#1 = RMul(r478C,r478E);
          real r4790#1 = TensorIndex<tensor[3],[2]>(_t4787);
          real r4791#1 = RMul(r478C,r4790);
          tensor[3] up1478A#3 = <tensor[3]>[r478D,r478F,r4791];
          tensor[3] op1_e3_l_11479B#3 = VSub<3>(altCPos4300,center42F6);
          tensor[3] projParam479F#2 = ProjectLast<tensor[3,3],[0]>(M42F4);
          real vdot47A0#2 = VDot<3>(projParam479F,op1_e3_l_11479B);
          tensor[3] projParam47A1#2 = ProjectLast<tensor[3,3],[1]>(M42F4);
          real vdot47A2#2 = VDot<3>(projParam47A1,op1_e3_l_11479B);
          tensor[3] projParam47A3#2 = ProjectLast<tensor[3,3],[2]>(M42F4);
          real vdot47A4#2 = VDot<3>(projParam47A3,op1_e3_l_11479B);
          tensor[3] op1_e3_l_12479E#2 = <tensor[3]>[vdot47A0,vdot47A2,vdot47A4];
          real op1_e3_l_1747AD#1 = VDot<3>(op1_e3_l_12479E,op1_e3_l_12479E);
          real r47B3#1 = RMul(r478C,vdot47A0);
          real r47B5#1 = RMul(r478C,vdot47A2);
          real r47B7#1 = RMul(r478C,vdot47A4);
          real op1_e3_l_1947C1#1 = Sqrt(op1_e3_l_1747AD);
          real r47C6#3 = RDiv(one43DE,op1_e3_l_1947C1);
          real r47C8#1 = RMul(r47C6,r47B3);
          real r47CA#1 = RMul(r47C6,r47B5);
          real r47CC#1 = RMul(r47C6,r47B7);
          tensor[3] op1_e3_l_2147C4#1 = <tensor[3]>[r47C8,r47CA,r47CC];
          tensor[3] op1_e3_l_3347D7#2 = VSub<3>(up1478A,op1_e3_l_2147C4);
          real op1_e3_l_3547DA#1 = VDot<3>(op1_e3_l_3347D7,op1_e3_l_3347D7);
          real _t47DD#1 = Sqrt(op1_e3_l_3547DA);
          bool _t47E0#1 = GT<real>(_t47DD,_t44BF);
          if _t47E0 then goto ASSIGN47E4 else goto ASSIGN5354
        ASSIGN47E4:  preds = [COND47E2]
          bool _t47E3#1 = true;
          goto JOIN47E7
        JOIN47E7:  preds = [ASSIGN47E4,ASSIGN5607]
          bool _t47E5#1 = phi(_t47E3,_t47E6)
          if _t47E5 then goto ASSIGN47EA else goto JOIN47EE
        ASSIGN47EA:  preds = [COND47E8]
          string _t47E9#1 = "ERG:Error in evaluation on pos 1:";
          string _t47EB#1 = "\n";
          Print<[string,tensor[3],string]>(_t47E9,startPos4302,_t47EB);
          goto JOIN47EE
        JOIN47EE:  preds = [MASSIGN47ED,COND47E8]
          femData:MeshPos intermed47EF#4 = fn_2FB47F0 (cPos42FE,up1478A);
          femData:MeshPos callFindPos4910#2 = findPos3B9C (_t42E8,altCPos4300);
          int intPos4912#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos4910);
          tensor[3] refPos4914#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos4910);
          int ilit4917#3 = 10;
          int mulRes4918#10 = IMul(intPos4912,ilit4917);
          int idx491B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,mulRes4918);
          int addRes491D#1 = IAdd(mulRes4918,ilit436A);
          int idx491E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes491D);
          int addRes4920#1 = IAdd(mulRes4918,ilit436D);
          int idx4921#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4920);
          int addRes4923#1 = IAdd(mulRes4918,ilit4370);
          int idx4924#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4923);
          int addRes4926#1 = IAdd(mulRes4918,ilit4365);
          int idx4927#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4926);
          int ilit4928#3 = 5;
          int addRes4929#1 = IAdd(mulRes4918,ilit4928);
          int idx492A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4929);
          int ilit492B#3 = 6;
          int addRes492C#1 = IAdd(mulRes4918,ilit492B);
          int idx492D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes492C);
          int ilit492E#3 = 7;
          int addRes492F#1 = IAdd(mulRes4918,ilit492E);
          int idx4930#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes492F);
          int ilit4931#3 = 8;
          int addRes4932#1 = IAdd(mulRes4918,ilit4931);
          int idx4933#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4932);
          int ilit4934#3 = 9;
          int addRes4935#1 = IAdd(mulRes4918,ilit4934);
          int idx4936#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4935);
          int mulRes495E#3 = IMul(ilit4370,idx491B);
          int addRes4961#1 = IAdd(ilit436A,mulRes495E);
          int addRes4963#1 = IAdd(ilit436D,mulRes495E);
          real dof_load4964#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes495E);
          real dof_load4965#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4961);
          real dof_load4966#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4963);
          int mulRes4969#3 = IMul(ilit4370,idx491E);
          int addRes496B#1 = IAdd(ilit436A,mulRes4969);
          int addRes496C#1 = IAdd(ilit436D,mulRes4969);
          real dof_load496D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4969);
          real dof_load496E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496B);
          real dof_load496F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496C);
          int mulRes4972#3 = IMul(ilit4370,idx4921);
          int addRes4974#1 = IAdd(ilit436A,mulRes4972);
          int addRes4975#1 = IAdd(ilit436D,mulRes4972);
          real dof_load4976#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4972);
          real dof_load4977#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4974);
          real dof_load4978#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4975);
          int mulRes497B#3 = IMul(ilit4370,idx4924);
          int addRes497D#1 = IAdd(ilit436A,mulRes497B);
          int addRes497E#1 = IAdd(ilit436D,mulRes497B);
          real dof_load497F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes497B);
          real dof_load4980#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497D);
          real dof_load4981#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497E);
          int mulRes4985#3 = IMul(ilit4370,idx4927);
          int addRes4987#1 = IAdd(ilit436A,mulRes4985);
          int addRes4988#1 = IAdd(ilit436D,mulRes4985);
          real dof_load4989#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4985);
          real dof_load498A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4987);
          real dof_load498B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4988);
          int mulRes498F#3 = IMul(ilit4370,idx492A);
          int addRes4991#1 = IAdd(ilit436A,mulRes498F);
          int addRes4992#1 = IAdd(ilit436D,mulRes498F);
          real dof_load4993#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes498F);
          real dof_load4994#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4991);
          real dof_load4995#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4992);
          int mulRes4999#3 = IMul(ilit4370,idx492D);
          int addRes499B#1 = IAdd(ilit436A,mulRes4999);
          int addRes499C#1 = IAdd(ilit436D,mulRes4999);
          real dof_load499D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4999);
          real dof_load499E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499B);
          real dof_load499F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499C);
          int mulRes49A3#3 = IMul(ilit4370,idx4930);
          int addRes49A5#1 = IAdd(ilit436A,mulRes49A3);
          int addRes49A6#1 = IAdd(ilit436D,mulRes49A3);
          real dof_load49A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes49A3);
          real dof_load49A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A5);
          real dof_load49A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A6);
          int mulRes49AD#3 = IMul(ilit4370,idx4933);
          int addRes49AF#1 = IAdd(ilit436A,mulRes49AD);
          int addRes49B0#1 = IAdd(ilit436D,mulRes49AD);
          real dof_load49B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes49AD);
          real dof_load49B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49AF);
          real dof_load49B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B0);
          int mulRes49B7#3 = IMul(ilit4370,idx4936);
          int addRes49B9#1 = IAdd(ilit436A,mulRes49B7);
          int addRes49BA#1 = IAdd(ilit436D,mulRes49B7);
          real dof_load49BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes49B7);
          real dof_load49BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B9);
          real dof_load49BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49BA);
          real varAcc4A27#5 = VIndex<3,0>(refPos4914);
          real varAcc4A28#4 = VIndex<3,1>(refPos4914);
          real varAcc4A29#4 = VIndex<3,2>(refPos4914);
          real coeff4A2A#9 = 0.2e1;
          real prod24A2C#1 = RMul(varAcc4A27,varAcc4A27);
          real prod4A2F#2 = RMul(prod24A2C,prod43DF);
          real coeff4A30#18 = 0.4e1;
          real prod4A32#2 = RMul(varAcc4A28,one43DE);
          real prod4A33#2 = RMul(varAcc4A27,prod4A32);
          real prod4A35#2 = RMul(one43DE,varAcc4A29);
          real prod4A36#2 = RMul(varAcc4A27,prod4A35);
          real coeff4A37#9 = -0.3e1;
          real prod4A38#3 = RMul(varAcc4A27,prod43DF);
          real prod24A39#1 = RMul(varAcc4A28,varAcc4A28);
          real prod4A3A#1 = RMul(prod24A39,one43DE);
          real prod4A3B#2 = RMul(one43DE,prod4A3A);
          real prod4A3C#1 = RMul(varAcc4A28,varAcc4A29);
          real prod4A3D#2 = RMul(one43DE,prod4A3C);
          real prod4A3E#3 = RMul(one43DE,prod4A32);
          real prod24A3F#1 = RMul(varAcc4A29,varAcc4A29);
          real prod4A40#1 = RMul(one43DE,prod24A3F);
          real prod4A41#2 = RMul(one43DE,prod4A40);
          real prod4A42#3 = RMul(one43DE,prod4A35);
          real mult4A45#1 = RMul(coeff4A37,prod4A42);
          real mult4A46#2 = RMul(coeff4A2A,prod4A41);
          real mult4A47#1 = RMul(coeff4A37,prod4A3E);
          real mult4A48#4 = RMul(coeff4A30,prod4A3D);
          real mult4A49#2 = RMul(coeff4A2A,prod4A3B);
          real mult4A4A#1 = RMul(coeff4A37,prod4A38);
          real mult4A4B#4 = RMul(coeff4A30,prod4A36);
          real mult4A4C#4 = RMul(coeff4A30,prod4A33);
          real mult4A4D#2 = RMul(coeff4A2A,prod4A2F);
          real sum4A4E#1 = RAdd(mult4A4C,mult4A4D);
          real sum4A4F#1 = RAdd(mult4A4B,sum4A4E);
          real sum4A50#1 = RAdd(mult4A4A,sum4A4F);
          real sum4A51#1 = RAdd(mult4A49,sum4A50);
          real sum4A52#1 = RAdd(mult4A48,sum4A51);
          real sum4A53#1 = RAdd(mult4A47,sum4A52);
          real sum4A54#1 = RAdd(mult4A46,sum4A53);
          real sum4A55#1 = RAdd(mult4A45,sum4A54);
          real sum4A56#3 = RAdd(mult43E8,sum4A55);
          real mult4A59#1 = RMul(coeff43DC,prod4A38);
          real sum4A5A#3 = RAdd(mult4A59,mult4A4D);
          real mult4A5C#1 = RMul(coeff43DC,prod4A3E);
          real sum4A5D#3 = RAdd(mult4A5C,mult4A49);
          real mult4A5F#1 = RMul(coeff43DC,prod4A42);
          real sum4A60#3 = RAdd(mult4A5F,mult4A46);
          real coeff4A62#18 = -0.4e1;
          real mult4A63#1 = RMul(coeff4A30,prod4A42);
          real mult4A64#1 = RMul(coeff4A62,prod4A41);
          real mult4A65#2 = RMul(coeff4A62,prod4A3D);
          real mult4A66#2 = RMul(coeff4A62,prod4A36);
          real sum4A67#1 = RAdd(mult4A65,mult4A66);
          real sum4A68#1 = RAdd(mult4A64,sum4A67);
          real sum4A69#3 = RAdd(mult4A63,sum4A68);
          real mult4A6B#1 = RMul(coeff4A30,prod4A3E);
          real mult4A6C#1 = RMul(coeff4A62,prod4A3B);
          real mult4A6D#2 = RMul(coeff4A62,prod4A33);
          real sum4A6E#1 = RAdd(mult4A6C,mult4A6D);
          real sum4A6F#1 = RAdd(mult4A65,sum4A6E);
          real sum4A70#3 = RAdd(mult4A6B,sum4A6F);
          real mult4A72#1 = RMul(coeff4A30,prod4A38);
          real mult4A73#1 = RMul(coeff4A62,prod4A2F);
          real sum4A74#1 = RAdd(mult4A6D,mult4A73);
          real sum4A75#1 = RAdd(mult4A66,sum4A74);
          real sum4A76#3 = RAdd(mult4A72,sum4A75);
          real r4ACF#1 = RMul(dof_load4964,sum4A56);
          real r4AD2#1 = RMul(dof_load496D,sum4A5A);
          real r4AD5#1 = RMul(dof_load4976,sum4A5D);
          real r4AD8#1 = RMul(dof_load497F,sum4A60);
          real r4ADB#1 = RMul(dof_load4989,mult4A48);
          real r4ADE#1 = RMul(dof_load4993,mult4A4B);
          real r4AE1#1 = RMul(dof_load499D,mult4A4C);
          real r4AE4#1 = RMul(dof_load49A7,sum4A69);
          real r4AE7#1 = RMul(dof_load49B1,sum4A70);
          real r4AEA#1 = RMul(dof_load49BB,sum4A76);
          real r4AEB#1 = RAdd(r4ACF,r4AD2);
          real r4AEC#1 = RAdd(r4AEB,r4AD5);
          real r4AED#1 = RAdd(r4AEC,r4AD8);
          real r4AEE#1 = RAdd(r4AED,r4ADB);
          real r4AEF#1 = RAdd(r4AEE,r4ADE);
          real r4AF0#1 = RAdd(r4AEF,r4AE1);
          real r4AF1#1 = RAdd(r4AF0,r4AE4);
          real r4AF2#1 = RAdd(r4AF1,r4AE7);
          real r4AF3#2 = RAdd(r4AF2,r4AEA);
          real r4AF5#1 = RMul(dof_load4965,sum4A56);
          real r4AF7#1 = RMul(dof_load496E,sum4A5A);
          real r4AF9#1 = RMul(dof_load4977,sum4A5D);
          real r4AFB#1 = RMul(dof_load4980,sum4A60);
          real r4AFD#1 = RMul(dof_load498A,mult4A48);
          real r4AFF#1 = RMul(dof_load4994,mult4A4B);
          real r4B01#1 = RMul(dof_load499E,mult4A4C);
          real r4B03#1 = RMul(dof_load49A8,sum4A69);
          real r4B05#1 = RMul(dof_load49B2,sum4A70);
          real r4B07#1 = RMul(dof_load49BC,sum4A76);
          real r4B08#1 = RAdd(r4AF5,r4AF7);
          real r4B09#1 = RAdd(r4B08,r4AF9);
          real r4B0A#1 = RAdd(r4B09,r4AFB);
          real r4B0B#1 = RAdd(r4B0A,r4AFD);
          real r4B0C#1 = RAdd(r4B0B,r4AFF);
          real r4B0D#1 = RAdd(r4B0C,r4B01);
          real r4B0E#1 = RAdd(r4B0D,r4B03);
          real r4B0F#1 = RAdd(r4B0E,r4B05);
          real r4B10#2 = RAdd(r4B0F,r4B07);
          real r4B12#1 = RMul(dof_load4966,sum4A56);
          real r4B14#1 = RMul(dof_load496F,sum4A5A);
          real r4B16#1 = RMul(dof_load4978,sum4A5D);
          real r4B18#1 = RMul(dof_load4981,sum4A60);
          real r4B1A#1 = RMul(dof_load498B,mult4A48);
          real r4B1C#1 = RMul(dof_load4995,mult4A4B);
          real r4B1E#1 = RMul(dof_load499F,mult4A4C);
          real r4B20#1 = RMul(dof_load49A9,sum4A69);
          real r4B22#1 = RMul(dof_load49B3,sum4A70);
          real r4B24#1 = RMul(dof_load49BD,sum4A76);
          real r4B25#1 = RAdd(r4B12,r4B14);
          real r4B26#1 = RAdd(r4B25,r4B16);
          real r4B27#1 = RAdd(r4B26,r4B18);
          real r4B28#1 = RAdd(r4B27,r4B1A);
          real r4B29#1 = RAdd(r4B28,r4B1C);
          real r4B2A#1 = RAdd(r4B29,r4B1E);
          real r4B2B#1 = RAdd(r4B2A,r4B20);
          real r4B2C#1 = RAdd(r4B2B,r4B22);
          real r4B2D#2 = RAdd(r4B2C,r4B24);
          tensor[3] compositionl4ACC#2 = <tensor[3]>[r4AF3,r4B10,r4B2D];
          real op1_e3_l_204B91#1 = VDot<3>(compositionl4ACC,compositionl4ACC);
          real r4B97#1 = RMul(r478C,r4AF3);
          real r4B99#1 = RMul(r478C,r4B10);
          real r4B9B#1 = RMul(r478C,r4B2D);
          real op1_e3_l_224BA5#1 = Sqrt(op1_e3_l_204B91);
          real r4BAA#3 = RDiv(one43DE,op1_e3_l_224BA5);
          real r4BAC#1 = RMul(r4BAA,r4B97);
          real r4BAE#1 = RMul(r4BAA,r4B99);
          real r4BB0#1 = RMul(r4BAA,r4B9B);
          tensor[3] op1_e3_l_234BA8#1 = <tensor[3]>[r4BAC,r4BAE,r4BB0];
          tensor[3] altIntermed4BBB#7 = VAdd<3>(altCPos4300,op1_e3_l_234BA8);
          bool _t4BBE#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed47EF);
          femData:MeshPos _t4BC0#5 = findPos3B9C (meshData42EE,altIntermed4BBB);
          bool _t4BC2#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t4BC0);
          bool _t4BC4#1 = NEQ<bool>(_t4BBE,_t4BC2);
          if _t4BC4 then goto ASSIGN4BC8 else goto JOIN4BE0
        ASSIGN4BC8:  preds = [COND4BC6]
          string _t4BC7#1 = "ERG:Warning of validity intermed";
          string _t4BC9#3 = "\n";
          Print<[string,tensor[3],string]>(_t4BC7,startPos4302,_t4BC9);
          string _t4BCC#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t4BCC,altIntermed4BBB,_t4BC9);
          string _t4BCF#1 = "Cell change: ";
          femData:Mesh _t4BD1#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4337);
          int _t4BD3#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4337);
          femData:MeshCell _t4BD5#1 = LoadFem<femData:MeshCell>(_t4BD1,_t4BD3);
          string _t4BD7#1 = " to ";
          femData:Mesh _t4BD9#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4BC0);
          int _t4BDB#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4BC0);
          femData:MeshCell _t4BDD#1 = LoadFem<femData:MeshCell>(_t4BD9,_t4BDB);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t4BCF,_t4BD5,_t4BD7,_t4BDD,_t4BC9);
          goto JOIN4BE0
        JOIN4BE0:  preds = [MASSIGN4BDF,COND4BC6]
          bool _t4BE1#2 = BNot(_t4BBE);
          if _t4BE1 then goto ASSIGN4BE5 else goto ASSIGN5352
        ASSIGN4BE5:  preds = [COND4BE3]
          bool _t4BE4#1 = true;
          goto JOIN4BE8
        JOIN4BE8:  preds = [ASSIGN4BE5,ASSIGN5352]
          bool _t4BE6#1 = phi(_t4BE4,_t4BE7)
          if _t4BE6 then goto ASSIGN4BEB else goto JOIN4BF6
        ASSIGN4BEB:  preds = [COND4BE9]
          string _t4BEA#1 = "Went off the mesh\?";
          string _t4BEC#2 = " and ";
          bool _t4BEE#1 = BNot(_t4BC2);
          string _t4BF0#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t4BEA,_t4BE1,_t4BEC,altIntermed4BBB,_t4BEC,_t4BEE,_t4BF0);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN4BF6
        JOIN4BF6:  preds = [*STABILIZE4BF5,COND4BE9]
          tensor[3] _t4BF7#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed47EF);
          int _t4BF9#3 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed47EF);
          femData:Mesh _t4BFB#18 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed47EF);
          int mulRes4BFF#4 = IMul(_t4BF9,ilit4365);
          int idx4C02#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,mulRes4BFF);
          int addRes4C04#1 = IAdd(mulRes4BFF,ilit436A);
          int idx4C05#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C04);
          int addRes4C07#1 = IAdd(mulRes4BFF,ilit436D);
          int idx4C08#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C07);
          int addRes4C0A#1 = IAdd(mulRes4BFF,ilit4370);
          int idx4C0B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C0A);
          int mulRes4C21#3 = IMul(ilit4370,idx4C02);
          int addRes4C24#1 = IAdd(ilit436A,mulRes4C21);
          int addRes4C26#1 = IAdd(ilit436D,mulRes4C21);
          real dof_load4C27#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C21);
          real dof_load4C28#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C24);
          real dof_load4C29#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C26);
          int mulRes4C2C#3 = IMul(ilit4370,idx4C05);
          int addRes4C2E#1 = IAdd(ilit436A,mulRes4C2C);
          int addRes4C2F#1 = IAdd(ilit436D,mulRes4C2C);
          real dof_load4C30#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C2C);
          real dof_load4C31#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2E);
          real dof_load4C32#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2F);
          int mulRes4C35#3 = IMul(ilit4370,idx4C08);
          int addRes4C37#1 = IAdd(ilit436A,mulRes4C35);
          int addRes4C38#1 = IAdd(ilit436D,mulRes4C35);
          real dof_load4C39#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C35);
          real dof_load4C3A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C37);
          real dof_load4C3B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C38);
          int mulRes4C3E#3 = IMul(ilit4370,idx4C0B);
          int addRes4C40#1 = IAdd(ilit436A,mulRes4C3E);
          int addRes4C41#1 = IAdd(ilit436D,mulRes4C3E);
          real dof_load4C42#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C3E);
          real dof_load4C43#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C40);
          real dof_load4C44#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C41);
          real varAcc4C72#5 = VIndex<3,0>(_t4BF7);
          real varAcc4C73#4 = VIndex<3,1>(_t4BF7);
          real varAcc4C74#4 = VIndex<3,2>(_t4BF7);
          real prod4C79#4 = RMul(varAcc4C72,prod43DF);
          real prod4C7B#2 = RMul(varAcc4C73,one43DE);
          real prod4C7C#4 = RMul(one43DE,prod4C7B);
          real prod4C7E#2 = RMul(one43DE,varAcc4C74);
          real prod4C7F#4 = RMul(one43DE,prod4C7E);
          real mult4C82#2 = RMul(coeff43DC,prod4C7F);
          real mult4C83#2 = RMul(coeff43DC,prod4C7C);
          real mult4C84#2 = RMul(coeff43DC,prod4C79);
          real sum4C85#1 = RAdd(mult4C83,mult4C84);
          real sum4C86#1 = RAdd(mult4C82,sum4C85);
          real sum4C87#3 = RAdd(mult43E8,sum4C86);
          real basisEval4C89#3 = RMul(one43DE,prod4C79);
          real basisEval4C8A#3 = RMul(one43DE,prod4C7C);
          real basisEval4C8B#3 = RMul(one43DE,prod4C7F);
          real r4CAC#1 = RMul(dof_load4C27,sum4C87);
          real r4CAF#1 = RMul(dof_load4C30,basisEval4C89);
          real r4CB2#1 = RMul(dof_load4C39,basisEval4C8A);
          real r4CB5#1 = RMul(dof_load4C42,basisEval4C8B);
          real r4CB6#1 = RAdd(r4CAC,r4CAF);
          real r4CB7#1 = RAdd(r4CB6,r4CB2);
          real r4CB8#1 = RAdd(r4CB7,r4CB5);
          real r4CBA#1 = RMul(dof_load4C28,sum4C87);
          real r4CBC#1 = RMul(dof_load4C31,basisEval4C89);
          real r4CBE#1 = RMul(dof_load4C3A,basisEval4C8A);
          real r4CC0#1 = RMul(dof_load4C43,basisEval4C8B);
          real r4CC1#1 = RAdd(r4CBA,r4CBC);
          real r4CC2#1 = RAdd(r4CC1,r4CBE);
          real r4CC3#1 = RAdd(r4CC2,r4CC0);
          real r4CC5#1 = RMul(dof_load4C29,sum4C87);
          real r4CC7#1 = RMul(dof_load4C32,basisEval4C89);
          real r4CC9#1 = RMul(dof_load4C3B,basisEval4C8A);
          real r4CCB#1 = RMul(dof_load4C44,basisEval4C8B);
          real r4CCC#1 = RAdd(r4CC5,r4CC7);
          real r4CCD#1 = RAdd(r4CCC,r4CC9);
          real r4CCE#1 = RAdd(r4CCD,r4CCB);
          tensor[3] _t4CA9#2 = <tensor[3]>[r4CB8,r4CC3,r4CCE];
          tensor[3] op1_e3_l_394D43#2 = VSub<3>(_t4CA9,altIntermed4BBB);
          real op1_e3_l_414D46#1 = VDot<3>(op1_e3_l_394D43,op1_e3_l_394D43);
          real _t4D49#1 = Sqrt(op1_e3_l_414D46);
          bool _t4D4C#1 = GT<real>(_t4D49,_t44BF);
          if _t4D4C then goto ASSIGN4D50 else goto ASSIGN534C
        ASSIGN4D50:  preds = [COND4D4E]
          string _t4D4F#1 = "ERG:Error in tracing 2: At step:";
          string _t4D51#1 = " with particle:";
          string _t4D53#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t4D4F,step42FC,_t4D51,startPos4302,_t4D53);
          string _t4D56#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t4D56,_t4CA9,altIntermed4BBB,_t4D53);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN4D5C
        JOIN4D5C:  preds = [*STABILIZE4D5B,MASSIGN5351]
          if _t4BBE then goto ASSIGN4D5F else goto ASSIGN5345
        ASSIGN4D5F:  preds = [COND4D5D]
          femData:MeshCell c4D5E#1 = LoadFem<femData:MeshCell>(_t4BFB,_t4BF9);
          int _t4D60#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c4D5E);
          femData:FuncCell _t4D62#2 = LoadFem<femData:FuncCell>(data42EC,_t4D60);
          femData:FemFunc _t4D64#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t4D62);
          femData:Space _t4D66#10 = ExtractFem<femData:Space,femData:FemFunc>(_t4D64);
          int _t4D68#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t4D62);
          int mulRes4D6C#10 = IMul(_t4D68,ilit4917);
          int idx4D6F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,mulRes4D6C);
          int addRes4D71#1 = IAdd(mulRes4D6C,ilit436A);
          int idx4D72#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D71);
          int addRes4D74#1 = IAdd(mulRes4D6C,ilit436D);
          int idx4D75#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D74);
          int addRes4D77#1 = IAdd(mulRes4D6C,ilit4370);
          int idx4D78#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D77);
          int addRes4D7A#1 = IAdd(mulRes4D6C,ilit4365);
          int idx4D7B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D7A);
          int addRes4D7D#1 = IAdd(mulRes4D6C,ilit4928);
          int idx4D7E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D7D);
          int addRes4D80#1 = IAdd(mulRes4D6C,ilit492B);
          int idx4D81#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D80);
          int addRes4D83#1 = IAdd(mulRes4D6C,ilit492E);
          int idx4D84#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D83);
          int addRes4D86#1 = IAdd(mulRes4D6C,ilit4931);
          int idx4D87#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D86);
          int addRes4D89#1 = IAdd(mulRes4D6C,ilit4934);
          int idx4D8A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D89);
          int mulRes4DB2#3 = IMul(ilit4370,idx4D6F);
          int addRes4DB5#1 = IAdd(ilit436A,mulRes4DB2);
          int addRes4DB7#1 = IAdd(ilit436D,mulRes4DB2);
          real dof_load4DB8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DB2);
          real dof_load4DB9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB5);
          real dof_load4DBA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB7);
          int mulRes4DBD#3 = IMul(ilit4370,idx4D72);
          int addRes4DBF#1 = IAdd(ilit436A,mulRes4DBD);
          int addRes4DC0#1 = IAdd(ilit436D,mulRes4DBD);
          real dof_load4DC1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DBD);
          real dof_load4DC2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DBF);
          real dof_load4DC3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC0);
          int mulRes4DC6#3 = IMul(ilit4370,idx4D75);
          int addRes4DC8#1 = IAdd(ilit436A,mulRes4DC6);
          int addRes4DC9#1 = IAdd(ilit436D,mulRes4DC6);
          real dof_load4DCA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DC6);
          real dof_load4DCB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC8);
          real dof_load4DCC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC9);
          int mulRes4DCF#3 = IMul(ilit4370,idx4D78);
          int addRes4DD1#1 = IAdd(ilit436A,mulRes4DCF);
          int addRes4DD2#1 = IAdd(ilit436D,mulRes4DCF);
          real dof_load4DD3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DCF);
          real dof_load4DD4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD1);
          real dof_load4DD5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD2);
          int mulRes4DD9#3 = IMul(ilit4370,idx4D7B);
          int addRes4DDB#1 = IAdd(ilit436A,mulRes4DD9);
          int addRes4DDC#1 = IAdd(ilit436D,mulRes4DD9);
          real dof_load4DDD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DD9);
          real dof_load4DDE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDB);
          real dof_load4DDF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDC);
          int mulRes4DE3#3 = IMul(ilit4370,idx4D7E);
          int addRes4DE5#1 = IAdd(ilit436A,mulRes4DE3);
          int addRes4DE6#1 = IAdd(ilit436D,mulRes4DE3);
          real dof_load4DE7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DE3);
          real dof_load4DE8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE5);
          real dof_load4DE9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE6);
          int mulRes4DED#3 = IMul(ilit4370,idx4D81);
          int addRes4DEF#1 = IAdd(ilit436A,mulRes4DED);
          int addRes4DF0#1 = IAdd(ilit436D,mulRes4DED);
          real dof_load4DF1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DED);
          real dof_load4DF2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DEF);
          real dof_load4DF3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF0);
          int mulRes4DF7#3 = IMul(ilit4370,idx4D84);
          int addRes4DF9#1 = IAdd(ilit436A,mulRes4DF7);
          int addRes4DFA#1 = IAdd(ilit436D,mulRes4DF7);
          real dof_load4DFB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DF7);
          real dof_load4DFC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF9);
          real dof_load4DFD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DFA);
          int mulRes4E01#3 = IMul(ilit4370,idx4D87);
          int addRes4E03#1 = IAdd(ilit436A,mulRes4E01);
          int addRes4E04#1 = IAdd(ilit436D,mulRes4E01);
          real dof_load4E05#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4E01);
          real dof_load4E06#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E03);
          real dof_load4E07#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E04);
          int mulRes4E0B#3 = IMul(ilit4370,idx4D8A);
          int addRes4E0D#1 = IAdd(ilit436A,mulRes4E0B);
          int addRes4E0E#1 = IAdd(ilit436D,mulRes4E0B);
          real dof_load4E0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4E0B);
          real dof_load4E10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0D);
          real dof_load4E11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0E);
          real prod24E80#1 = RMul(varAcc4C72,varAcc4C72);
          real prod4E83#2 = RMul(prod24E80,prod43DF);
          real prod4E87#2 = RMul(varAcc4C72,prod4C7B);
          real prod4E8A#2 = RMul(varAcc4C72,prod4C7E);
          real prod24E8D#1 = RMul(varAcc4C73,varAcc4C73);
          real prod4E8E#1 = RMul(prod24E8D,one43DE);
          real prod4E8F#2 = RMul(one43DE,prod4E8E);
          real prod4E90#1 = RMul(varAcc4C73,varAcc4C74);
          real prod4E91#2 = RMul(one43DE,prod4E90);
          real prod24E93#1 = RMul(varAcc4C74,varAcc4C74);
          real prod4E94#1 = RMul(one43DE,prod24E93);
          real prod4E95#2 = RMul(one43DE,prod4E94);
          real mult4E99#1 = RMul(coeff4A37,prod4C7F);
          real mult4E9A#2 = RMul(coeff4A2A,prod4E95);
          real mult4E9B#1 = RMul(coeff4A37,prod4C7C);
          real mult4E9C#4 = RMul(coeff4A30,prod4E91);
          real mult4E9D#2 = RMul(coeff4A2A,prod4E8F);
          real mult4E9E#1 = RMul(coeff4A37,prod4C79);
          real mult4E9F#4 = RMul(coeff4A30,prod4E8A);
          real mult4EA0#4 = RMul(coeff4A30,prod4E87);
          real mult4EA1#2 = RMul(coeff4A2A,prod4E83);
          real sum4EA2#1 = RAdd(mult4EA0,mult4EA1);
          real sum4EA3#1 = RAdd(mult4E9F,sum4EA2);
          real sum4EA4#1 = RAdd(mult4E9E,sum4EA3);
          real sum4EA5#1 = RAdd(mult4E9D,sum4EA4);
          real sum4EA6#1 = RAdd(mult4E9C,sum4EA5);
          real sum4EA7#1 = RAdd(mult4E9B,sum4EA6);
          real sum4EA8#1 = RAdd(mult4E9A,sum4EA7);
          real sum4EA9#1 = RAdd(mult4E99,sum4EA8);
          real sum4EAA#3 = RAdd(mult43E8,sum4EA9);
          real sum4EAE#3 = RAdd(mult4C84,mult4EA1);
          real sum4EB1#3 = RAdd(mult4C83,mult4E9D);
          real sum4EB4#3 = RAdd(mult4C82,mult4E9A);
          real mult4EB7#1 = RMul(coeff4A30,prod4C7F);
          real mult4EB8#1 = RMul(coeff4A62,prod4E95);
          real mult4EB9#2 = RMul(coeff4A62,prod4E91);
          real mult4EBA#2 = RMul(coeff4A62,prod4E8A);
          real sum4EBB#1 = RAdd(mult4EB9,mult4EBA);
          real sum4EBC#1 = RAdd(mult4EB8,sum4EBB);
          real sum4EBD#3 = RAdd(mult4EB7,sum4EBC);
          real mult4EBF#1 = RMul(coeff4A30,prod4C7C);
          real mult4EC0#1 = RMul(coeff4A62,prod4E8F);
          real mult4EC1#2 = RMul(coeff4A62,prod4E87);
          real sum4EC2#1 = RAdd(mult4EC0,mult4EC1);
          real sum4EC3#1 = RAdd(mult4EB9,sum4EC2);
          real sum4EC4#3 = RAdd(mult4EBF,sum4EC3);
          real mult4EC6#1 = RMul(coeff4A30,prod4C79);
          real mult4EC7#1 = RMul(coeff4A62,prod4E83);
          real sum4EC8#1 = RAdd(mult4EC1,mult4EC7);
          real sum4EC9#1 = RAdd(mult4EBA,sum4EC8);
          real sum4ECA#3 = RAdd(mult4EC6,sum4EC9);
          real r4F23#1 = RMul(dof_load4DB8,sum4EAA);
          real r4F26#1 = RMul(dof_load4DC1,sum4EAE);
          real r4F29#1 = RMul(dof_load4DCA,sum4EB1);
          real r4F2C#1 = RMul(dof_load4DD3,sum4EB4);
          real r4F2F#1 = RMul(dof_load4DDD,mult4E9C);
          real r4F32#1 = RMul(dof_load4DE7,mult4E9F);
          real r4F35#1 = RMul(dof_load4DF1,mult4EA0);
          real r4F38#1 = RMul(dof_load4DFB,sum4EBD);
          real r4F3B#1 = RMul(dof_load4E05,sum4EC4);
          real r4F3E#1 = RMul(dof_load4E0F,sum4ECA);
          real r4F3F#1 = RAdd(r4F23,r4F26);
          real r4F40#1 = RAdd(r4F3F,r4F29);
          real r4F41#1 = RAdd(r4F40,r4F2C);
          real r4F42#1 = RAdd(r4F41,r4F2F);
          real r4F43#1 = RAdd(r4F42,r4F32);
          real r4F44#1 = RAdd(r4F43,r4F35);
          real r4F45#1 = RAdd(r4F44,r4F38);
          real r4F46#1 = RAdd(r4F45,r4F3B);
          real r4F47#2 = RAdd(r4F46,r4F3E);
          real r4F49#1 = RMul(dof_load4DB9,sum4EAA);
          real r4F4B#1 = RMul(dof_load4DC2,sum4EAE);
          real r4F4D#1 = RMul(dof_load4DCB,sum4EB1);
          real r4F4F#1 = RMul(dof_load4DD4,sum4EB4);
          real r4F51#1 = RMul(dof_load4DDE,mult4E9C);
          real r4F53#1 = RMul(dof_load4DE8,mult4E9F);
          real r4F55#1 = RMul(dof_load4DF2,mult4EA0);
          real r4F57#1 = RMul(dof_load4DFC,sum4EBD);
          real r4F59#1 = RMul(dof_load4E06,sum4EC4);
          real r4F5B#1 = RMul(dof_load4E10,sum4ECA);
          real r4F5C#1 = RAdd(r4F49,r4F4B);
          real r4F5D#1 = RAdd(r4F5C,r4F4D);
          real r4F5E#1 = RAdd(r4F5D,r4F4F);
          real r4F5F#1 = RAdd(r4F5E,r4F51);
          real r4F60#1 = RAdd(r4F5F,r4F53);
          real r4F61#1 = RAdd(r4F60,r4F55);
          real r4F62#1 = RAdd(r4F61,r4F57);
          real r4F63#1 = RAdd(r4F62,r4F59);
          real r4F64#2 = RAdd(r4F63,r4F5B);
          real r4F66#1 = RMul(dof_load4DBA,sum4EAA);
          real r4F68#1 = RMul(dof_load4DC3,sum4EAE);
          real r4F6A#1 = RMul(dof_load4DCC,sum4EB1);
          real r4F6C#1 = RMul(dof_load4DD5,sum4EB4);
          real r4F6E#1 = RMul(dof_load4DDF,mult4E9C);
          real r4F70#1 = RMul(dof_load4DE9,mult4E9F);
          real r4F72#1 = RMul(dof_load4DF3,mult4EA0);
          real r4F74#1 = RMul(dof_load4DFD,sum4EBD);
          real r4F76#1 = RMul(dof_load4E07,sum4EC4);
          real r4F78#1 = RMul(dof_load4E11,sum4ECA);
          real r4F79#1 = RAdd(r4F66,r4F68);
          real r4F7A#1 = RAdd(r4F79,r4F6A);
          real r4F7B#1 = RAdd(r4F7A,r4F6C);
          real r4F7C#1 = RAdd(r4F7B,r4F6E);
          real r4F7D#1 = RAdd(r4F7C,r4F70);
          real r4F7E#1 = RAdd(r4F7D,r4F72);
          real r4F7F#1 = RAdd(r4F7E,r4F74);
          real r4F80#1 = RAdd(r4F7F,r4F76);
          real r4F81#2 = RAdd(r4F80,r4F78);
          tensor[3] probe_l_84F20#2 = <tensor[3]>[r4F47,r4F64,r4F81];
          real op1_e3_l_114FE5#1 = VDot<3>(probe_l_84F20,probe_l_84F20);
          real op1_e3_l_124FE8#1 = Sqrt(op1_e3_l_114FE5);
          real r4FED#3 = RDiv(one43DE,op1_e3_l_124FE8);
          real r4FEF#1 = RMul(r4FED,r4F47);
          real r4FF1#1 = RMul(r4FED,r4F64);
          real r4FF3#1 = RMul(r4FED,r4F81);
          tensor[3] _t4FEB#1 = <tensor[3]>[r4FEF,r4FF1,r4FF3];
          goto JOIN5000
        JOIN5000:  preds = [ASSIGN4FFD,ASSIGN534A]
          tensor[3] _t4FFE#1 = phi(_t4FEB,_t4FFF)
          tensor[3] up25001#4 = VScale<3>(stepSize42F0,_t4FFE);
          femData:MeshPos cPos5004#1 = fn_2FB47F0 (cPos42FE,up25001);
          femData:MeshPos callFindPos5006#2 = findPos3B9C (_t42E8,altIntermed4BBB);
          int intPos5008#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5006);
          tensor[3] refPos500A#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5006);
          int mulRes500E#10 = IMul(intPos5008,ilit4917);
          int idx5011#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,mulRes500E);
          int addRes5013#1 = IAdd(mulRes500E,ilit436A);
          int idx5014#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5013);
          int addRes5016#1 = IAdd(mulRes500E,ilit436D);
          int idx5017#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5016);
          int addRes5019#1 = IAdd(mulRes500E,ilit4370);
          int idx501A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5019);
          int addRes501C#1 = IAdd(mulRes500E,ilit4365);
          int idx501D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes501C);
          int addRes501F#1 = IAdd(mulRes500E,ilit4928);
          int idx5020#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes501F);
          int addRes5022#1 = IAdd(mulRes500E,ilit492B);
          int idx5023#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5022);
          int addRes5025#1 = IAdd(mulRes500E,ilit492E);
          int idx5026#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5025);
          int addRes5028#1 = IAdd(mulRes500E,ilit4931);
          int idx5029#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5028);
          int addRes502B#1 = IAdd(mulRes500E,ilit4934);
          int idx502C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes502B);
          int mulRes5054#3 = IMul(ilit4370,idx5011);
          int addRes5057#1 = IAdd(ilit436A,mulRes5054);
          int addRes5059#1 = IAdd(ilit436D,mulRes5054);
          real dof_load505A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5054);
          real dof_load505B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5057);
          real dof_load505C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5059);
          int mulRes505F#3 = IMul(ilit4370,idx5014);
          int addRes5061#1 = IAdd(ilit436A,mulRes505F);
          int addRes5062#1 = IAdd(ilit436D,mulRes505F);
          real dof_load5063#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes505F);
          real dof_load5064#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5061);
          real dof_load5065#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5062);
          int mulRes5068#3 = IMul(ilit4370,idx5017);
          int addRes506A#1 = IAdd(ilit436A,mulRes5068);
          int addRes506B#1 = IAdd(ilit436D,mulRes5068);
          real dof_load506C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5068);
          real dof_load506D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes506A);
          real dof_load506E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes506B);
          int mulRes5071#3 = IMul(ilit4370,idx501A);
          int addRes5073#1 = IAdd(ilit436A,mulRes5071);
          int addRes5074#1 = IAdd(ilit436D,mulRes5071);
          real dof_load5075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5071);
          real dof_load5076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5073);
          real dof_load5077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5074);
          int mulRes507B#3 = IMul(ilit4370,idx501D);
          int addRes507D#1 = IAdd(ilit436A,mulRes507B);
          int addRes507E#1 = IAdd(ilit436D,mulRes507B);
          real dof_load507F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes507B);
          real dof_load5080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507D);
          real dof_load5081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507E);
          int mulRes5085#3 = IMul(ilit4370,idx5020);
          int addRes5087#1 = IAdd(ilit436A,mulRes5085);
          int addRes5088#1 = IAdd(ilit436D,mulRes5085);
          real dof_load5089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5085);
          real dof_load508A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5087);
          real dof_load508B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5088);
          int mulRes508F#3 = IMul(ilit4370,idx5023);
          int addRes5091#1 = IAdd(ilit436A,mulRes508F);
          int addRes5092#1 = IAdd(ilit436D,mulRes508F);
          real dof_load5093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes508F);
          real dof_load5094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5091);
          real dof_load5095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5092);
          int mulRes5099#3 = IMul(ilit4370,idx5026);
          int addRes509B#1 = IAdd(ilit436A,mulRes5099);
          int addRes509C#1 = IAdd(ilit436D,mulRes5099);
          real dof_load509D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5099);
          real dof_load509E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509B);
          real dof_load509F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509C);
          int mulRes50A3#3 = IMul(ilit4370,idx5029);
          int addRes50A5#1 = IAdd(ilit436A,mulRes50A3);
          int addRes50A6#1 = IAdd(ilit436D,mulRes50A3);
          real dof_load50A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes50A3);
          real dof_load50A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A5);
          real dof_load50A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A6);
          int mulRes50AD#3 = IMul(ilit4370,idx502C);
          int addRes50AF#1 = IAdd(ilit436A,mulRes50AD);
          int addRes50B0#1 = IAdd(ilit436D,mulRes50AD);
          real dof_load50B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes50AD);
          real dof_load50B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50AF);
          real dof_load50B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50B0);
          real varAcc511D#5 = VIndex<3,0>(refPos500A);
          real varAcc511E#4 = VIndex<3,1>(refPos500A);
          real varAcc511F#4 = VIndex<3,2>(refPos500A);
          real prod25122#1 = RMul(varAcc511D,varAcc511D);
          real prod5125#2 = RMul(prod25122,prod43DF);
          real prod5128#2 = RMul(varAcc511E,one43DE);
          real prod5129#2 = RMul(varAcc511D,prod5128);
          real prod512B#2 = RMul(one43DE,varAcc511F);
          real prod512C#2 = RMul(varAcc511D,prod512B);
          real prod512E#3 = RMul(varAcc511D,prod43DF);
          real prod2512F#1 = RMul(varAcc511E,varAcc511E);
          real prod5130#1 = RMul(prod2512F,one43DE);
          real prod5131#2 = RMul(one43DE,prod5130);
          real prod5132#1 = RMul(varAcc511E,varAcc511F);
          real prod5133#2 = RMul(one43DE,prod5132);
          real prod5134#3 = RMul(one43DE,prod5128);
          real prod25135#1 = RMul(varAcc511F,varAcc511F);
          real prod5136#1 = RMul(one43DE,prod25135);
          real prod5137#2 = RMul(one43DE,prod5136);
          real prod5138#3 = RMul(one43DE,prod512B);
          real mult513B#1 = RMul(coeff4A37,prod5138);
          real mult513C#2 = RMul(coeff4A2A,prod5137);
          real mult513D#1 = RMul(coeff4A37,prod5134);
          real mult513E#4 = RMul(coeff4A30,prod5133);
          real mult513F#2 = RMul(coeff4A2A,prod5131);
          real mult5140#1 = RMul(coeff4A37,prod512E);
          real mult5141#4 = RMul(coeff4A30,prod512C);
          real mult5142#4 = RMul(coeff4A30,prod5129);
          real mult5143#2 = RMul(coeff4A2A,prod5125);
          real sum5144#1 = RAdd(mult5142,mult5143);
          real sum5145#1 = RAdd(mult5141,sum5144);
          real sum5146#1 = RAdd(mult5140,sum5145);
          real sum5147#1 = RAdd(mult513F,sum5146);
          real sum5148#1 = RAdd(mult513E,sum5147);
          real sum5149#1 = RAdd(mult513D,sum5148);
          real sum514A#1 = RAdd(mult513C,sum5149);
          real sum514B#1 = RAdd(mult513B,sum514A);
          real sum514C#3 = RAdd(mult43E8,sum514B);
          real mult514F#1 = RMul(coeff43DC,prod512E);
          real sum5150#3 = RAdd(mult514F,mult5143);
          real mult5152#1 = RMul(coeff43DC,prod5134);
          real sum5153#3 = RAdd(mult5152,mult513F);
          real mult5155#1 = RMul(coeff43DC,prod5138);
          real sum5156#3 = RAdd(mult5155,mult513C);
          real mult5159#1 = RMul(coeff4A30,prod5138);
          real mult515A#1 = RMul(coeff4A62,prod5137);
          real mult515B#2 = RMul(coeff4A62,prod5133);
          real mult515C#2 = RMul(coeff4A62,prod512C);
          real sum515D#1 = RAdd(mult515B,mult515C);
          real sum515E#1 = RAdd(mult515A,sum515D);
          real sum515F#3 = RAdd(mult5159,sum515E);
          real mult5161#1 = RMul(coeff4A30,prod5134);
          real mult5162#1 = RMul(coeff4A62,prod5131);
          real mult5163#2 = RMul(coeff4A62,prod5129);
          real sum5164#1 = RAdd(mult5162,mult5163);
          real sum5165#1 = RAdd(mult515B,sum5164);
          real sum5166#3 = RAdd(mult5161,sum5165);
          real mult5168#1 = RMul(coeff4A30,prod512E);
          real mult5169#1 = RMul(coeff4A62,prod5125);
          real sum516A#1 = RAdd(mult5163,mult5169);
          real sum516B#1 = RAdd(mult515C,sum516A);
          real sum516C#3 = RAdd(mult5168,sum516B);
          real r51C5#1 = RMul(dof_load505A,sum514C);
          real r51C8#1 = RMul(dof_load5063,sum5150);
          real r51CB#1 = RMul(dof_load506C,sum5153);
          real r51CE#1 = RMul(dof_load5075,sum5156);
          real r51D1#1 = RMul(dof_load507F,mult513E);
          real r51D4#1 = RMul(dof_load5089,mult5141);
          real r51D7#1 = RMul(dof_load5093,mult5142);
          real r51DA#1 = RMul(dof_load509D,sum515F);
          real r51DD#1 = RMul(dof_load50A7,sum5166);
          real r51E0#1 = RMul(dof_load50B1,sum516C);
          real r51E1#1 = RAdd(r51C5,r51C8);
          real r51E2#1 = RAdd(r51E1,r51CB);
          real r51E3#1 = RAdd(r51E2,r51CE);
          real r51E4#1 = RAdd(r51E3,r51D1);
          real r51E5#1 = RAdd(r51E4,r51D4);
          real r51E6#1 = RAdd(r51E5,r51D7);
          real r51E7#1 = RAdd(r51E6,r51DA);
          real r51E8#1 = RAdd(r51E7,r51DD);
          real r51E9#1 = RAdd(r51E8,r51E0);
          real r51EB#1 = RMul(dof_load505B,sum514C);
          real r51ED#1 = RMul(dof_load5064,sum5150);
          real r51EF#1 = RMul(dof_load506D,sum5153);
          real r51F1#1 = RMul(dof_load5076,sum5156);
          real r51F3#1 = RMul(dof_load5080,mult513E);
          real r51F5#1 = RMul(dof_load508A,mult5141);
          real r51F7#1 = RMul(dof_load5094,mult5142);
          real r51F9#1 = RMul(dof_load509E,sum515F);
          real r51FB#1 = RMul(dof_load50A8,sum5166);
          real r51FD#1 = RMul(dof_load50B2,sum516C);
          real r51FE#1 = RAdd(r51EB,r51ED);
          real r51FF#1 = RAdd(r51FE,r51EF);
          real r5200#1 = RAdd(r51FF,r51F1);
          real r5201#1 = RAdd(r5200,r51F3);
          real r5202#1 = RAdd(r5201,r51F5);
          real r5203#1 = RAdd(r5202,r51F7);
          real r5204#1 = RAdd(r5203,r51F9);
          real r5205#1 = RAdd(r5204,r51FB);
          real r5206#1 = RAdd(r5205,r51FD);
          real r5208#1 = RMul(dof_load505C,sum514C);
          real r520A#1 = RMul(dof_load5065,sum5150);
          real r520C#1 = RMul(dof_load506E,sum5153);
          real r520E#1 = RMul(dof_load5077,sum5156);
          real r5210#1 = RMul(dof_load5081,mult513E);
          real r5212#1 = RMul(dof_load508B,mult5141);
          real r5214#1 = RMul(dof_load5095,mult5142);
          real r5216#1 = RMul(dof_load509F,sum515F);
          real r5218#1 = RMul(dof_load50A9,sum5166);
          real r521A#1 = RMul(dof_load50B3,sum516C);
          real r521B#1 = RAdd(r5208,r520A);
          real r521C#1 = RAdd(r521B,r520C);
          real r521D#1 = RAdd(r521C,r520E);
          real r521E#1 = RAdd(r521D,r5210);
          real r521F#1 = RAdd(r521E,r5212);
          real r5220#1 = RAdd(r521F,r5214);
          real r5221#1 = RAdd(r5220,r5216);
          real r5222#1 = RAdd(r5221,r5218);
          real r5223#1 = RAdd(r5222,r521A);
          tensor[3] compositionl51C2#3 = <tensor[3]>[r51E9,r5206,r5223];
          real op1_e3_l_195287#1 = VDot<3>(compositionl51C2,compositionl51C2);
          tensor[3] op1_e3_l_20528A#3 = VScale<3>(stepSize42F0,compositionl51C2);
          real op1_e3_l_21528D#1 = Sqrt(op1_e3_l_195287);
          real r5292#3 = RDiv(one43DE,op1_e3_l_21528D);
          real r5293#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_20528A);
          real r5294#1 = RMul(r5292,r5293);
          real r5295#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_20528A);
          real r5296#1 = RMul(r5292,r5295);
          real r5297#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_20528A);
          real r5298#1 = RMul(r5292,r5297);
          tensor[3] op1_e3_l_225290#3 = <tensor[3]>[r5294,r5296,r5298];
          tensor[3] altCPos52A3#1 = VAdd<3>(altCPos4300,op1_e3_l_225290);
          int step52A8#1 = IAdd(step42FC,ilit436A);
          tensor[3] op1_e3_l_4952D1#3 = VSub<3>(altIntermed4BBB,center42F6);
          real vdot52D6#1 = VDot<3>(projParam479F,op1_e3_l_4952D1);
          real vdot52D8#1 = VDot<3>(projParam47A1,op1_e3_l_4952D1);
          real vdot52DA#1 = VDot<3>(projParam47A3,op1_e3_l_4952D1);
          tensor[3] op1_e3_l_5052D4#3 = <tensor[3]>[vdot52D6,vdot52D8,vdot52DA];
          real op1_e3_l_7152E3#1 = VDot<3>(op1_e3_l_5052D4,op1_e3_l_5052D4);
          tensor[3] op1_e3_l_7252E6#3 = VScale<3>(stepSize42F0,op1_e3_l_5052D4);
          real op1_e3_l_7352E9#1 = Sqrt(op1_e3_l_7152E3);
          real r52EE#3 = RDiv(one43DE,op1_e3_l_7352E9);
          real r52EF#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_7252E6);
          real r52F0#1 = RMul(r52EE,r52EF);
          real r52F1#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_7252E6);
          real r52F2#1 = RMul(r52EE,r52F1);
          real r52F3#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_7252E6);
          real r52F4#1 = RMul(r52EE,r52F3);
          tensor[3] op1_e3_l_7552EC#1 = <tensor[3]>[r52F0,r52F2,r52F4];
          tensor[3] op1_e3_l_11152FF#2 = VSub<3>(up25001,op1_e3_l_7552EC);
          real op1_e3_l_1135302#1 = VDot<3>(op1_e3_l_11152FF,op1_e3_l_11152FF);
          real _t5305#2 = Sqrt(op1_e3_l_1135302);
          bool _t5308#1 = GT<real>(_t5305,_t44BF);
          if _t5308 then goto ASSIGN530C else goto ASSIGN533A
        ASSIGN530C:  preds = [COND530A]
          bool _t530B#1 = true;
          goto JOIN530F
        JOIN530F:  preds = [ASSIGN530C,ASSIGN5343]
          bool _t530D#1 = phi(_t530B,_t530E)
          if _t530D then goto ASSIGN5312 else goto JOIN5331
        ASSIGN5312:  preds = [COND5310]
          string _t5311#1 = "ERG:Error in evaluation on pos 2:";
          string _t5313#3 = "\n";
          Print<[string,tensor[3],string]>(_t5311,startPos4302,_t5313);
          string _t5316#1 = "The errors are:";
          string _t5318#1 = " and ";
          tensor[3] op1_e3_l_33531A#2 = VSub<3>(up25001,op1_e3_l_225290);
          real op1_e3_l_35531D#1 = VDot<3>(op1_e3_l_33531A,op1_e3_l_33531A);
          real _t5320#1 = Sqrt(op1_e3_l_35531D);
          Print<[string,real,string,real,string]>(_t5316,_t5305,_t5318,_t5320,_t5313);
          string _t5324#1 = "The cells are:";
          femData:MeshCell _t5326#1 = LoadFem<femData:MeshCell>(_t4BFB,_t4BF9);
          string _t5328#1 = " vs ";
          femData:Mesh _t532A#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4BC0);
          int _t532C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4BC0);
          femData:MeshCell _t532E#1 = LoadFem<femData:MeshCell>(_t532A,_t532C);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t5324,_t5326,_t5328,_t532E,_t5313);
          goto JOIN5331
        JOIN5331:  preds = [MASSIGN5330,COND5310]
          self.stream = stream4461;
          self.newStream = newStream4467;
          self.step = step52A8;
          self.cPos = cPos5004;
          self.altCPos = altCPos52A3;
          active
        ASSIGN533A:  preds = [COND530A]
          tensor[3] op1_e3_l_335338#2 = VSub<3>(up25001,op1_e3_l_225290);
          real op1_e3_l_35533B#1 = VDot<3>(op1_e3_l_335338,op1_e3_l_335338);
          real _t533E#1 = Sqrt(op1_e3_l_35533B);
          real _t5341#1 = 0.1e-4;
          bool _t530E#1 = GT<real>(_t533E,_t5341);
          goto JOIN530F
        ASSIGN5345:  preds = [COND4D5D]
          string _t5344#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t5344);
          real realLit5347#3 = 0.e0;
          tensor[3] _t4FFF#1 = <tensor[3]>[realLit5347,realLit5347,realLit5347];
          goto JOIN5000
        ASSIGN534C:  preds = [COND4D4E]
          string _t534B#1 = "fine in cell 2:";
          femData:MeshCell _t534D#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t534F#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t534B,_t534D,_t534F);
          goto JOIN4D5C
        ASSIGN5352:  preds = [COND4BE3]
          bool _t4BE7#1 = BNot(_t4BC2);
          goto JOIN4BE8
        ASSIGN5354:  preds = [COND47E2]
          femData:MeshPos callFindPos5353#2 = findPos3B9C (_t42E8,altCPos4300);
          int intPos5355#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5353);
          tensor[3] refPos5357#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5353);
          int ilit535A#1 = 10;
          int mulRes535B#10 = IMul(intPos5355,ilit535A);
          int idx535E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,mulRes535B);
          int addRes5360#1 = IAdd(mulRes535B,ilit436A);
          int idx5361#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5360);
          int addRes5363#1 = IAdd(mulRes535B,ilit436D);
          int idx5364#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5363);
          int addRes5366#1 = IAdd(mulRes535B,ilit4370);
          int idx5367#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5366);
          int addRes5369#1 = IAdd(mulRes535B,ilit4365);
          int idx536A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5369);
          int ilit536B#1 = 5;
          int addRes536C#1 = IAdd(mulRes535B,ilit536B);
          int idx536D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes536C);
          int ilit536E#1 = 6;
          int addRes536F#1 = IAdd(mulRes535B,ilit536E);
          int idx5370#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes536F);
          int ilit5371#1 = 7;
          int addRes5372#1 = IAdd(mulRes535B,ilit5371);
          int idx5373#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5372);
          int ilit5374#1 = 8;
          int addRes5375#1 = IAdd(mulRes535B,ilit5374);
          int idx5376#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5375);
          int ilit5377#1 = 9;
          int addRes5378#1 = IAdd(mulRes535B,ilit5377);
          int idx5379#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5378);
          int mulRes53A1#3 = IMul(ilit4370,idx535E);
          int addRes53A4#1 = IAdd(ilit436A,mulRes53A1);
          int addRes53A6#1 = IAdd(ilit436D,mulRes53A1);
          real dof_load53A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53A1);
          real dof_load53A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A4);
          real dof_load53A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A6);
          int mulRes53AC#3 = IMul(ilit4370,idx5361);
          int addRes53AE#1 = IAdd(ilit436A,mulRes53AC);
          int addRes53AF#1 = IAdd(ilit436D,mulRes53AC);
          real dof_load53B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53AC);
          real dof_load53B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AE);
          real dof_load53B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AF);
          int mulRes53B5#3 = IMul(ilit4370,idx5364);
          int addRes53B7#1 = IAdd(ilit436A,mulRes53B5);
          int addRes53B8#1 = IAdd(ilit436D,mulRes53B5);
          real dof_load53B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53B5);
          real dof_load53BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B7);
          real dof_load53BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B8);
          int mulRes53BE#3 = IMul(ilit4370,idx5367);
          int addRes53C0#1 = IAdd(ilit436A,mulRes53BE);
          int addRes53C1#1 = IAdd(ilit436D,mulRes53BE);
          real dof_load53C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53BE);
          real dof_load53C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C0);
          real dof_load53C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C1);
          int mulRes53C8#3 = IMul(ilit4370,idx536A);
          int addRes53CA#1 = IAdd(ilit436A,mulRes53C8);
          int addRes53CB#1 = IAdd(ilit436D,mulRes53C8);
          real dof_load53CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53C8);
          real dof_load53CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53CA);
          real dof_load53CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53CB);
          int mulRes53D2#3 = IMul(ilit4370,idx536D);
          int addRes53D4#1 = IAdd(ilit436A,mulRes53D2);
          int addRes53D5#1 = IAdd(ilit436D,mulRes53D2);
          real dof_load53D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53D2);
          real dof_load53D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D4);
          real dof_load53D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D5);
          int mulRes53DC#3 = IMul(ilit4370,idx5370);
          int addRes53DE#1 = IAdd(ilit436A,mulRes53DC);
          int addRes53DF#1 = IAdd(ilit436D,mulRes53DC);
          real dof_load53E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53DC);
          real dof_load53E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DE);
          real dof_load53E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DF);
          int mulRes53E6#3 = IMul(ilit4370,idx5373);
          int addRes53E8#1 = IAdd(ilit436A,mulRes53E6);
          int addRes53E9#1 = IAdd(ilit436D,mulRes53E6);
          real dof_load53EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53E6);
          real dof_load53EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E8);
          real dof_load53EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E9);
          int mulRes53F0#3 = IMul(ilit4370,idx5376);
          int addRes53F2#1 = IAdd(ilit436A,mulRes53F0);
          int addRes53F3#1 = IAdd(ilit436D,mulRes53F0);
          real dof_load53F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53F0);
          real dof_load53F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F2);
          real dof_load53F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F3);
          int mulRes53FA#3 = IMul(ilit4370,idx5379);
          int addRes53FC#1 = IAdd(ilit436A,mulRes53FA);
          int addRes53FD#1 = IAdd(ilit436D,mulRes53FA);
          real dof_load53FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53FA);
          real dof_load53FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FC);
          real dof_load5400#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FD);
          real varAcc546A#5 = VIndex<3,0>(refPos5357);
          real varAcc546B#4 = VIndex<3,1>(refPos5357);
          real varAcc546C#4 = VIndex<3,2>(refPos5357);
          real coeff546D#3 = 0.2e1;
          real prod2546F#1 = RMul(varAcc546A,varAcc546A);
          real prod5472#2 = RMul(prod2546F,prod43DF);
          real coeff5473#6 = 0.4e1;
          real prod5475#2 = RMul(varAcc546B,one43DE);
          real prod5476#2 = RMul(varAcc546A,prod5475);
          real prod5478#2 = RMul(one43DE,varAcc546C);
          real prod5479#2 = RMul(varAcc546A,prod5478);
          real coeff547A#3 = -0.3e1;
          real prod547B#3 = RMul(varAcc546A,prod43DF);
          real prod2547C#1 = RMul(varAcc546B,varAcc546B);
          real prod547D#1 = RMul(prod2547C,one43DE);
          real prod547E#2 = RMul(one43DE,prod547D);
          real prod547F#1 = RMul(varAcc546B,varAcc546C);
          real prod5480#2 = RMul(one43DE,prod547F);
          real prod5481#3 = RMul(one43DE,prod5475);
          real prod25482#1 = RMul(varAcc546C,varAcc546C);
          real prod5483#1 = RMul(one43DE,prod25482);
          real prod5484#2 = RMul(one43DE,prod5483);
          real prod5485#3 = RMul(one43DE,prod5478);
          real mult5488#1 = RMul(coeff547A,prod5485);
          real mult5489#2 = RMul(coeff546D,prod5484);
          real mult548A#1 = RMul(coeff547A,prod5481);
          real mult548B#4 = RMul(coeff5473,prod5480);
          real mult548C#2 = RMul(coeff546D,prod547E);
          real mult548D#1 = RMul(coeff547A,prod547B);
          real mult548E#4 = RMul(coeff5473,prod5479);
          real mult548F#4 = RMul(coeff5473,prod5476);
          real mult5490#2 = RMul(coeff546D,prod5472);
          real sum5491#1 = RAdd(mult548F,mult5490);
          real sum5492#1 = RAdd(mult548E,sum5491);
          real sum5493#1 = RAdd(mult548D,sum5492);
          real sum5494#1 = RAdd(mult548C,sum5493);
          real sum5495#1 = RAdd(mult548B,sum5494);
          real sum5496#1 = RAdd(mult548A,sum5495);
          real sum5497#1 = RAdd(mult5489,sum5496);
          real sum5498#1 = RAdd(mult5488,sum5497);
          real sum5499#3 = RAdd(mult43E8,sum5498);
          real mult549C#1 = RMul(coeff43DC,prod547B);
          real sum549D#3 = RAdd(mult549C,mult5490);
          real mult549F#1 = RMul(coeff43DC,prod5481);
          real sum54A0#3 = RAdd(mult549F,mult548C);
          real mult54A2#1 = RMul(coeff43DC,prod5485);
          real sum54A3#3 = RAdd(mult54A2,mult5489);
          real coeff54A5#6 = -0.4e1;
          real mult54A6#1 = RMul(coeff5473,prod5485);
          real mult54A7#1 = RMul(coeff54A5,prod5484);
          real mult54A8#2 = RMul(coeff54A5,prod5480);
          real mult54A9#2 = RMul(coeff54A5,prod5479);
          real sum54AA#1 = RAdd(mult54A8,mult54A9);
          real sum54AB#1 = RAdd(mult54A7,sum54AA);
          real sum54AC#3 = RAdd(mult54A6,sum54AB);
          real mult54AE#1 = RMul(coeff5473,prod5481);
          real mult54AF#1 = RMul(coeff54A5,prod547E);
          real mult54B0#2 = RMul(coeff54A5,prod5476);
          real sum54B1#1 = RAdd(mult54AF,mult54B0);
          real sum54B2#1 = RAdd(mult54A8,sum54B1);
          real sum54B3#3 = RAdd(mult54AE,sum54B2);
          real mult54B5#1 = RMul(coeff5473,prod547B);
          real mult54B6#1 = RMul(coeff54A5,prod5472);
          real sum54B7#1 = RAdd(mult54B0,mult54B6);
          real sum54B8#1 = RAdd(mult54A9,sum54B7);
          real sum54B9#3 = RAdd(mult54B5,sum54B8);
          real r5512#1 = RMul(dof_load53A7,sum5499);
          real r5515#1 = RMul(dof_load53B0,sum549D);
          real r5518#1 = RMul(dof_load53B9,sum54A0);
          real r551B#1 = RMul(dof_load53C2,sum54A3);
          real r551E#1 = RMul(dof_load53CC,mult548B);
          real r5521#1 = RMul(dof_load53D6,mult548E);
          real r5524#1 = RMul(dof_load53E0,mult548F);
          real r5527#1 = RMul(dof_load53EA,sum54AC);
          real r552A#1 = RMul(dof_load53F4,sum54B3);
          real r552D#1 = RMul(dof_load53FE,sum54B9);
          real r552E#1 = RAdd(r5512,r5515);
          real r552F#1 = RAdd(r552E,r5518);
          real r5530#1 = RAdd(r552F,r551B);
          real r5531#1 = RAdd(r5530,r551E);
          real r5532#1 = RAdd(r5531,r5521);
          real r5533#1 = RAdd(r5532,r5524);
          real r5534#1 = RAdd(r5533,r5527);
          real r5535#1 = RAdd(r5534,r552A);
          real r5536#2 = RAdd(r5535,r552D);
          real r5538#1 = RMul(dof_load53A8,sum5499);
          real r553A#1 = RMul(dof_load53B1,sum549D);
          real r553C#1 = RMul(dof_load53BA,sum54A0);
          real r553E#1 = RMul(dof_load53C3,sum54A3);
          real r5540#1 = RMul(dof_load53CD,mult548B);
          real r5542#1 = RMul(dof_load53D7,mult548E);
          real r5544#1 = RMul(dof_load53E1,mult548F);
          real r5546#1 = RMul(dof_load53EB,sum54AC);
          real r5548#1 = RMul(dof_load53F5,sum54B3);
          real r554A#1 = RMul(dof_load53FF,sum54B9);
          real r554B#1 = RAdd(r5538,r553A);
          real r554C#1 = RAdd(r554B,r553C);
          real r554D#1 = RAdd(r554C,r553E);
          real r554E#1 = RAdd(r554D,r5540);
          real r554F#1 = RAdd(r554E,r5542);
          real r5550#1 = RAdd(r554F,r5544);
          real r5551#1 = RAdd(r5550,r5546);
          real r5552#1 = RAdd(r5551,r5548);
          real r5553#2 = RAdd(r5552,r554A);
          real r5555#1 = RMul(dof_load53A9,sum5499);
          real r5557#1 = RMul(dof_load53B2,sum549D);
          real r5559#1 = RMul(dof_load53BB,sum54A0);
          real r555B#1 = RMul(dof_load53C4,sum54A3);
          real r555D#1 = RMul(dof_load53CE,mult548B);
          real r555F#1 = RMul(dof_load53D8,mult548E);
          real r5561#1 = RMul(dof_load53E2,mult548F);
          real r5563#1 = RMul(dof_load53EC,sum54AC);
          real r5565#1 = RMul(dof_load53F6,sum54B3);
          real r5567#1 = RMul(dof_load5400,sum54B9);
          real r5568#1 = RAdd(r5555,r5557);
          real r5569#1 = RAdd(r5568,r5559);
          real r556A#1 = RAdd(r5569,r555B);
          real r556B#1 = RAdd(r556A,r555D);
          real r556C#1 = RAdd(r556B,r555F);
          real r556D#1 = RAdd(r556C,r5561);
          real r556E#1 = RAdd(r556D,r5563);
          real r556F#1 = RAdd(r556E,r5565);
          real r5570#2 = RAdd(r556F,r5567);
          tensor[3] compositionl550F#2 = <tensor[3]>[r5536,r5553,r5570];
          real op1_e3_l_2255D4#1 = VDot<3>(compositionl550F,compositionl550F);
          real r55DA#1 = RMul(r478C,r5536);
          real r55DC#1 = RMul(r478C,r5553);
          real r55DE#1 = RMul(r478C,r5570);
          real op1_e3_l_2455E8#1 = Sqrt(op1_e3_l_2255D4);
          real r55ED#3 = RDiv(one43DE,op1_e3_l_2455E8);
          real r55EF#1 = RMul(r55ED,r55DA);
          real r55F1#1 = RMul(r55ED,r55DC);
          real r55F3#1 = RMul(r55ED,r55DE);
          tensor[3] op1_e3_l_2655EB#1 = <tensor[3]>[r55EF,r55F1,r55F3];
          tensor[3] op1_e3_l_3555FE#2 = VSub<3>(up1478A,op1_e3_l_2655EB);
          real op1_e3_l_375601#1 = VDot<3>(op1_e3_l_3555FE,op1_e3_l_3555FE);
          real _t5604#1 = Sqrt(op1_e3_l_375601);
          bool _t47E6#1 = GT<real>(_t5604,_t44BF);
          goto JOIN47E7
        ASSIGN5609:  preds = [COND44E6]
          string _t5608#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t5608);
          real realLit560B#3 = 0.e0;
          tensor[3] _t4788#1 = <tensor[3]>[realLit560B,realLit560B,realLit560B];
          goto JOIN4789
        ASSIGN5610:  preds = [COND44C3]
          string _t560F#1 = "fine in cell 1:";
          femData:MeshCell _t5611#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t5613#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t560F,_t5611,_t5613);
          goto JOIN44E3
        ASSIGN5617:  preds = [COND4346]
          bool _t5616#1 = BNot(_t4339);
          if _t5616 then goto ASSIGN561A else goto ASSIGN561D
        ASSIGN561A:  preds = [COND5618]
          bool _t5619#1 = true;
          goto JOIN561C
        JOIN561C:  preds = [ASSIGN561A,ASSIGN561D]
          bool _t434A#1 = phi(_t5619,_t561B)
          goto JOIN434B
        ASSIGN561D:  preds = [COND5618]
          bool _t561B#1 = EQ<int>(step42FC,stepMax42F2);
          goto JOIN561C
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY561E:  preds = []
      tensor[3][] startPoints561F#1 = globals.startPoints3B4A;
    FOREACH5622:  preds = [ASSIGN5620,NEXT5624]
      foreach (x5621 in startPoints561F) on exit goto RETURN5625
      new gg(x5621);
      goto FOREACH5622
    RETURN5625:  preds = [FOREACH5622]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData3B45 (meshData) = <no-default>
  input 0space0409_intermedateGlobal3B46 (space) = <no-default>
  input 0data040B_intermedateGlobal3B47 (data) = <no-default>
  input timeSteps3B48 (timeSteps) = <default>
  input timeEps3B49 (timeEps) = <default>
  input startPoints3B4A (startPoints) = <no-default>
  input stepSize3B4B (stepSize) = <default>
  input stepMax3B4C (stepMax) = <default>
  input M3B4D (M) = <no-default>
  input center3B4E (center) = <no-default>
  global femData:FemFunc data3B4F
  global femData:Mesh _t3B50
  global femData:Space _tX3B51
## functions
  function femData:MeshPos findPos3B9C (femData:Mesh mesh3B9D#19, tensor[3] pos3B9E#3) {
    ENTRY3B9F:  preds = []
      real _t3BA0#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn3BA2#1 = <tensor[3]>[_t3BA0,_t3BA0,_t3BA0];
      int newtonInt3BA4#1 = 0;
      int[] yayCells3BA6#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3B9D,pos3B9E);
    FOREACH3BA9:  preds = [ASSIGN3BA7,NEXT42DB]
      foreach (cellItter3BA8 in yayCells3BA6) on exit goto ASSIGN42DD
      int _t3BAA#1 = 16;
      int[] _t3BAC#1 = Range(newtonInt3BA4,_t3BAA);
    FOREACH3BAF:  preds = [ASSIGN3BAD,NEXT42DA]
      foreach (newtonItter3BAE in _t3BAC) on exit goto NEXT42DB
        tensor[3] xn417E#4 = phi(xn3BA2,xn4242)
      int ilit3BB1#1 = 4;
      int mulRes3BB2#4 = IMul(cellItter3BA8,ilit3BB1);
      int idx3BB5#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,mulRes3BB2);
      int ilit3BB6#5 = 1;
      int addRes3BB7#1 = IAdd(mulRes3BB2,ilit3BB6);
      int idx3BB8#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BB7);
      int ilit3BB9#5 = 2;
      int addRes3BBA#1 = IAdd(mulRes3BB2,ilit3BB9);
      int idx3BBB#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BBA);
      int ilit3BBC#5 = 3;
      int addRes3BBD#1 = IAdd(mulRes3BB2,ilit3BBC);
      int idx3BBE#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BBD);
      int mulRes3BD4#3 = IMul(ilit3BBC,idx3BB5);
      int addRes3BD7#1 = IAdd(ilit3BB6,mulRes3BD4);
      int addRes3BD9#1 = IAdd(ilit3BB9,mulRes3BD4);
      real dof_load3BDA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BD4);
      real dof_load3BDB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD7);
      real dof_load3BDC#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD9);
      int mulRes3BDF#3 = IMul(ilit3BBC,idx3BB8);
      int addRes3BE1#1 = IAdd(ilit3BB6,mulRes3BDF);
      int addRes3BE2#1 = IAdd(ilit3BB9,mulRes3BDF);
      real dof_load3BE3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BDF);
      real dof_load3BE4#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE1);
      real dof_load3BE5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE2);
      int mulRes3BE8#3 = IMul(ilit3BBC,idx3BBB);
      int addRes3BEA#1 = IAdd(ilit3BB6,mulRes3BE8);
      int addRes3BEB#1 = IAdd(ilit3BB9,mulRes3BE8);
      real dof_load3BEC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BE8);
      real dof_load3BED#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BEA);
      real dof_load3BEE#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BEB);
      int mulRes3BF1#3 = IMul(ilit3BBC,idx3BBE);
      int addRes3BF3#1 = IAdd(ilit3BB6,mulRes3BF1);
      int addRes3BF4#1 = IAdd(ilit3BB9,mulRes3BF1);
      real dof_load3BF5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BF1);
      real dof_load3BF6#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF3);
      real dof_load3BF7#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF4);
      real coeff3C28#22 = -0.1e1;
      real one3C29#33 = 0.1e1;
      real prod3C2A#2 = RMul(one3C29,one3C29);
      real prod3C2B#2 = RMul(one3C29,prod3C2A);
      real basisEval3C2C#3 = RMul(coeff3C28,prod3C2B);
      real basisEval3C2D#10 = RMul(one3C29,prod3C2B);
      real basisEval3C2E#45 = 0.e0;
      real r3C45#2 = RMul(dof_load3BDA,basisEval3C2C);
      real r3C48#1 = RMul(dof_load3BE3,basisEval3C2D);
      real r3C4B#2 = RMul(dof_load3BEC,basisEval3C2E);
      real r3C4E#2 = RMul(dof_load3BF5,basisEval3C2E);
      real r3C4F#1 = RAdd(r3C45,r3C48);
      real r3C50#1 = RAdd(r3C4F,r3C4B);
      real r3C51#13 = RAdd(r3C50,r3C4E);
      real r3C55#1 = RMul(dof_load3BE3,basisEval3C2E);
      real r3C57#1 = RMul(dof_load3BEC,basisEval3C2D);
      real r3C5A#2 = RAdd(r3C45,r3C55);
      real r3C5B#1 = RAdd(r3C5A,r3C57);
      real r3C5C#13 = RAdd(r3C5B,r3C4E);
      real r3C64#1 = RMul(dof_load3BF5,basisEval3C2D);
      real r3C66#1 = RAdd(r3C5A,r3C4B);
      real r3C67#12 = RAdd(r3C66,r3C64);
      real r3C6A#2 = RMul(dof_load3BDB,basisEval3C2C);
      real r3C6C#1 = RMul(dof_load3BE4,basisEval3C2D);
      real r3C6E#2 = RMul(dof_load3BED,basisEval3C2E);
      real r3C70#2 = RMul(dof_load3BF6,basisEval3C2E);
      real r3C71#1 = RAdd(r3C6A,r3C6C);
      real r3C72#1 = RAdd(r3C71,r3C6E);
      real r3C73#13 = RAdd(r3C72,r3C70);
      real r3C75#1 = RMul(dof_load3BE4,basisEval3C2E);
      real r3C76#1 = RMul(dof_load3BED,basisEval3C2D);
      real r3C78#2 = RAdd(r3C6A,r3C75);
      real r3C79#1 = RAdd(r3C78,r3C76);
      real r3C7A#13 = RAdd(r3C79,r3C70);
      real r3C7E#1 = RMul(dof_load3BF6,basisEval3C2D);
      real r3C80#1 = RAdd(r3C78,r3C6E);
      real r3C81#12 = RAdd(r3C80,r3C7E);
      real r3C84#2 = RMul(dof_load3BDC,basisEval3C2C);
      real r3C86#1 = RMul(dof_load3BE5,basisEval3C2D);
      real r3C88#2 = RMul(dof_load3BEE,basisEval3C2E);
      real r3C8A#2 = RMul(dof_load3BF7,basisEval3C2E);
      real r3C8B#1 = RAdd(r3C84,r3C86);
      real r3C8C#1 = RAdd(r3C8B,r3C88);
      real r3C8D#13 = RAdd(r3C8C,r3C8A);
      real r3C8F#1 = RMul(dof_load3BE5,basisEval3C2E);
      real r3C90#1 = RMul(dof_load3BEE,basisEval3C2D);
      real r3C92#2 = RAdd(r3C84,r3C8F);
      real r3C93#1 = RAdd(r3C92,r3C90);
      real r3C94#13 = RAdd(r3C93,r3C8A);
      real r3C98#1 = RMul(dof_load3BF7,basisEval3C2D);
      real r3C9A#1 = RAdd(r3C92,r3C88);
      real r3C9B#12 = RAdd(r3C9A,r3C98);
      real r3CFC#3 = RMul(basisEval3C2E,r3C51);
      real r3CFE#3 = RMul(basisEval3C2E,r3C73);
      real r3D00#5 = RMul(basisEval3C2E,r3C8D);
      real r3D01#3 = RAdd(r3CFC,r3CFE);
      real r3D02#9 = RAdd(r3D01,r3D00);
      real r3D04#3 = RMul(basisEval3C2E,r3C5C);
      real r3D06#3 = RMul(basisEval3C2E,r3C7A);
      real r3D08#5 = RMul(basisEval3C2E,r3C94);
      real r3D09#3 = RAdd(r3D04,r3D06);
      real r3D0A#9 = RAdd(r3D09,r3D08);
      real r3D0C#3 = RMul(basisEval3C2E,r3C67);
      real r3D0E#3 = RMul(basisEval3C2E,r3C81);
      real r3D10#5 = RMul(basisEval3C2E,r3C9B);
      real r3D11#3 = RAdd(r3D0C,r3D0E);
      real r3D12#12 = RAdd(r3D11,r3D10);
      real r3D15#1 = RMul(coeff3C28,r3C8D);
      real r3D16#3 = RAdd(r3D01,r3D15);
      real r3D17#1 = RMul(coeff3C28,r3C94);
      real r3D18#3 = RAdd(r3D09,r3D17);
      real r3D19#1 = RMul(coeff3C28,r3C9B);
      real r3D1A#4 = RAdd(r3D11,r3D19);
      real r3D1D#1 = RMul(one3C29,r3C73);
      real r3D1E#1 = RAdd(r3CFC,r3D1D);
      real r3D1F#3 = RAdd(r3D1E,r3D00);
      real r3D20#1 = RMul(one3C29,r3C7A);
      real r3D21#1 = RAdd(r3D04,r3D20);
      real r3D22#3 = RAdd(r3D21,r3D08);
      real r3D23#1 = RMul(one3C29,r3C81);
      real r3D24#1 = RAdd(r3D0C,r3D23);
      real r3D25#4 = RAdd(r3D24,r3D10);
      real r3D28#1 = RMul(one3C29,r3C8D);
      real r3D29#3 = RAdd(r3D01,r3D28);
      real r3D2A#1 = RMul(one3C29,r3C94);
      real r3D2B#3 = RAdd(r3D09,r3D2A);
      real r3D2C#1 = RMul(one3C29,r3C9B);
      real r3D2D#4 = RAdd(r3D11,r3D2C);
      real r3D2F#1 = RMul(coeff3C28,r3C51);
      real r3D30#1 = RAdd(r3D2F,r3CFE);
      real r3D31#3 = RAdd(r3D30,r3D00);
      real r3D32#1 = RMul(coeff3C28,r3C5C);
      real r3D33#1 = RAdd(r3D32,r3D06);
      real r3D34#3 = RAdd(r3D33,r3D08);
      real r3D35#1 = RMul(coeff3C28,r3C67);
      real r3D36#1 = RAdd(r3D35,r3D0E);
      real r3D37#4 = RAdd(r3D36,r3D10);
      real r3D3A#1 = RMul(coeff3C28,r3C73);
      real r3D3B#1 = RAdd(r3CFC,r3D3A);
      real r3D3C#3 = RAdd(r3D3B,r3D00);
      real r3D3D#1 = RMul(coeff3C28,r3C7A);
      real r3D3E#1 = RAdd(r3D04,r3D3D);
      real r3D3F#3 = RAdd(r3D3E,r3D08);
      real r3D40#1 = RMul(coeff3C28,r3C81);
      real r3D41#1 = RAdd(r3D0C,r3D40);
      real r3D42#4 = RAdd(r3D41,r3D10);
      real r3D44#1 = RMul(one3C29,r3C51);
      real r3D45#1 = RAdd(r3D44,r3CFE);
      real r3D46#3 = RAdd(r3D45,r3D00);
      real r3D47#1 = RMul(one3C29,r3C5C);
      real r3D48#1 = RAdd(r3D47,r3D06);
      real r3D49#3 = RAdd(r3D48,r3D08);
      real r3D4A#1 = RMul(one3C29,r3C67);
      real r3D4B#1 = RAdd(r3D4A,r3D0E);
      real r3D4C#4 = RAdd(r3D4B,r3D10);
      real r3DA9#1 = RMul(r3C51,r3D02);
      real r3DAC#1 = RMul(r3C73,r3D29);
      real r3DAF#1 = RMul(r3C8D,r3D3C);
      real r3DB0#1 = RAdd(r3DA9,r3DAC);
      real r3DB1#1 = RAdd(r3DB0,r3DAF);
      real r3DB3#1 = RMul(r3C51,r3D0A);
      real r3DB5#1 = RMul(r3C73,r3D2B);
      real r3DB7#1 = RMul(r3C8D,r3D3F);
      real r3DB8#1 = RAdd(r3DB3,r3DB5);
      real r3DB9#2 = RAdd(r3DB8,r3DB7);
      real r3DBB#1 = RMul(r3C51,r3D12);
      real r3DBD#1 = RMul(r3C73,r3D2D);
      real r3DBF#1 = RMul(r3C8D,r3D42);
      real r3DC0#1 = RAdd(r3DBB,r3DBD);
      real r3DC1#2 = RAdd(r3DC0,r3DBF);
      real r3DC4#1 = RMul(r3C51,r3D16);
      real r3DC6#1 = RMul(r3C73,r3D02);
      real r3DC8#1 = RMul(r3C8D,r3D46);
      real r3DC9#1 = RAdd(r3DC4,r3DC6);
      real r3DCA#1 = RAdd(r3DC9,r3DC8);
      real r3DCC#1 = RMul(r3C51,r3D18);
      real r3DCE#1 = RMul(r3C73,r3D0A);
      real r3DD0#1 = RMul(r3C8D,r3D49);
      real r3DD1#1 = RAdd(r3DCC,r3DCE);
      real r3DD2#2 = RAdd(r3DD1,r3DD0);
      real r3DD4#1 = RMul(r3C51,r3D1A);
      real r3DD6#1 = RMul(r3C73,r3D12);
      real r3DD8#1 = RMul(r3C8D,r3D4C);
      real r3DD9#1 = RAdd(r3DD4,r3DD6);
      real r3DDA#2 = RAdd(r3DD9,r3DD8);
      real r3DDD#1 = RMul(r3C51,r3D1F);
      real r3DDF#1 = RMul(r3C73,r3D31);
      real r3DE1#1 = RMul(r3C8D,r3D02);
      real r3DE2#1 = RAdd(r3DDD,r3DDF);
      real r3DE3#1 = RAdd(r3DE2,r3DE1);
      real r3DE5#1 = RMul(r3C51,r3D22);
      real r3DE7#1 = RMul(r3C73,r3D34);
      real r3DE9#1 = RMul(r3C8D,r3D0A);
      real r3DEA#1 = RAdd(r3DE5,r3DE7);
      real r3DEB#2 = RAdd(r3DEA,r3DE9);
      real r3DED#1 = RMul(r3C51,r3D25);
      real r3DEF#1 = RMul(r3C73,r3D37);
      real r3DF1#1 = RMul(r3C8D,r3D12);
      real r3DF2#1 = RAdd(r3DED,r3DEF);
      real r3DF3#2 = RAdd(r3DF2,r3DF1);
      real r3DF7#1 = RMul(r3C5C,r3D02);
      real r3DF9#1 = RMul(r3C7A,r3D29);
      real r3DFB#1 = RMul(r3C94,r3D3C);
      real r3DFC#1 = RAdd(r3DF7,r3DF9);
      real r3DFD#2 = RAdd(r3DFC,r3DFB);
      real r3DFE#1 = RMul(r3C5C,r3D0A);
      real r3DFF#1 = RMul(r3C7A,r3D2B);
      real r3E00#1 = RMul(r3C94,r3D3F);
      real r3E01#1 = RAdd(r3DFE,r3DFF);
      real r3E02#1 = RAdd(r3E01,r3E00);
      real r3E03#1 = RMul(r3C5C,r3D12);
      real r3E04#1 = RMul(r3C7A,r3D2D);
      real r3E05#1 = RMul(r3C94,r3D42);
      real r3E06#1 = RAdd(r3E03,r3E04);
      real r3E07#2 = RAdd(r3E06,r3E05);
      real r3E09#1 = RMul(r3C5C,r3D16);
      real r3E0A#1 = RMul(r3C7A,r3D02);
      real r3E0B#1 = RMul(r3C94,r3D46);
      real r3E0C#1 = RAdd(r3E09,r3E0A);
      real r3E0D#2 = RAdd(r3E0C,r3E0B);
      real r3E0E#1 = RMul(r3C5C,r3D18);
      real r3E0F#1 = RMul(r3C7A,r3D0A);
      real r3E10#1 = RMul(r3C94,r3D49);
      real r3E11#1 = RAdd(r3E0E,r3E0F);
      real r3E12#1 = RAdd(r3E11,r3E10);
      real r3E13#1 = RMul(r3C5C,r3D1A);
      real r3E14#1 = RMul(r3C7A,r3D12);
      real r3E15#1 = RMul(r3C94,r3D4C);
      real r3E16#1 = RAdd(r3E13,r3E14);
      real r3E17#2 = RAdd(r3E16,r3E15);
      real r3E19#1 = RMul(r3C5C,r3D1F);
      real r3E1A#1 = RMul(r3C7A,r3D31);
      real r3E1B#1 = RMul(r3C94,r3D02);
      real r3E1C#1 = RAdd(r3E19,r3E1A);
      real r3E1D#2 = RAdd(r3E1C,r3E1B);
      real r3E1E#1 = RMul(r3C5C,r3D22);
      real r3E1F#1 = RMul(r3C7A,r3D34);
      real r3E20#1 = RMul(r3C94,r3D0A);
      real r3E21#1 = RAdd(r3E1E,r3E1F);
      real r3E22#1 = RAdd(r3E21,r3E20);
      real r3E23#1 = RMul(r3C5C,r3D25);
      real r3E24#1 = RMul(r3C7A,r3D37);
      real r3E25#1 = RMul(r3C94,r3D12);
      real r3E26#1 = RAdd(r3E23,r3E24);
      real r3E27#2 = RAdd(r3E26,r3E25);
      real r3E2B#1 = RMul(r3C67,r3D02);
      real r3E2D#1 = RMul(r3C81,r3D29);
      real r3E2F#1 = RMul(r3C9B,r3D3C);
      real r3E30#1 = RAdd(r3E2B,r3E2D);
      real r3E31#2 = RAdd(r3E30,r3E2F);
      real r3E32#1 = RMul(r3C67,r3D0A);
      real r3E33#1 = RMul(r3C81,r3D2B);
      real r3E34#1 = RMul(r3C9B,r3D3F);
      real r3E35#1 = RAdd(r3E32,r3E33);
      real r3E36#2 = RAdd(r3E35,r3E34);
      real r3E37#1 = RMul(r3C67,r3D12);
      real r3E38#1 = RMul(r3C81,r3D2D);
      real r3E39#1 = RMul(r3C9B,r3D42);
      real r3E3A#1 = RAdd(r3E37,r3E38);
      real r3E3B#1 = RAdd(r3E3A,r3E39);
      real r3E3D#1 = RMul(r3C67,r3D16);
      real r3E3E#1 = RMul(r3C81,r3D02);
      real r3E3F#1 = RMul(r3C9B,r3D46);
      real r3E40#1 = RAdd(r3E3D,r3E3E);
      real r3E41#2 = RAdd(r3E40,r3E3F);
      real r3E42#1 = RMul(r3C67,r3D18);
      real r3E43#1 = RMul(r3C81,r3D0A);
      real r3E44#1 = RMul(r3C9B,r3D49);
      real r3E45#1 = RAdd(r3E42,r3E43);
      real r3E46#2 = RAdd(r3E45,r3E44);
      real r3E47#1 = RMul(r3C67,r3D1A);
      real r3E48#1 = RMul(r3C81,r3D12);
      real r3E49#1 = RMul(r3C9B,r3D4C);
      real r3E4A#1 = RAdd(r3E47,r3E48);
      real r3E4B#1 = RAdd(r3E4A,r3E49);
      real r3E4D#1 = RMul(r3C67,r3D1F);
      real r3E4E#1 = RMul(r3C81,r3D31);
      real r3E4F#1 = RMul(r3C9B,r3D02);
      real r3E50#1 = RAdd(r3E4D,r3E4E);
      real r3E51#2 = RAdd(r3E50,r3E4F);
      real r3E52#1 = RMul(r3C67,r3D22);
      real r3E53#1 = RMul(r3C81,r3D34);
      real r3E54#1 = RMul(r3C9B,r3D0A);
      real r3E55#1 = RAdd(r3E52,r3E53);
      real r3E56#2 = RAdd(r3E55,r3E54);
      real r3E57#1 = RMul(r3C67,r3D25);
      real r3E58#1 = RMul(r3C81,r3D37);
      real r3E59#1 = RMul(r3C9B,r3D12);
      real r3E5A#1 = RAdd(r3E57,r3E58);
      real r3E5B#1 = RAdd(r3E5A,r3E59);
      tensor[3] probe_l_143F17#1 = <tensor[3]>[r3C51,r3C73,r3C8D];
      tensor[3] probe_l_153F64#3 = <tensor[3]>[r3C5C,r3C7A,r3C94];
      tensor[3] tensor400F#1 = <tensor[3]>[r3D12,r3D2D,r3D42];
      tensor[3] tensor4015#1 = <tensor[3]>[r3D1A,r3D12,r3D4C];
      tensor[3] tensor401C#1 = <tensor[3]>[r3D25,r3D37,r3D12];
      real vdot403F#1 = VDot<3>(probe_l_153F64,tensor400F);
      real vdot4041#1 = VDot<3>(probe_l_153F64,tensor4015);
      real vdot4043#1 = VDot<3>(probe_l_153F64,tensor401C);
      tensor[3] op1_e3_l_18403D#1 = <tensor[3]>[vdot403F,vdot4041,vdot4043];
      real op1_e3_l_19404C#1 = VDot<3>(probe_l_143F17,op1_e3_l_18403D);
      real r4052#2 = RMul(basisEval3C2E,r3DB1);
      real r4054#1 = RMul(basisEval3C2E,r3DB9);
      real r4056#2 = RMul(basisEval3C2E,r3DC1);
      real r4058#2 = RMul(basisEval3C2E,r3DFD);
      real r405A#3 = RMul(basisEval3C2E,r3E02);
      real r405D#1 = RMul(one3C29,r3E07);
      real r405F#2 = RMul(basisEval3C2E,r3E31);
      real r4062#1 = RMul(coeff3C28,r3E36);
      real r4064#3 = RMul(basisEval3C2E,r3E3B);
      real r4065#2 = RAdd(r4052,r4054);
      real r4066#1 = RAdd(r4065,r4056);
      real r4067#1 = RAdd(r4066,r4058);
      real r4068#1 = RAdd(r4067,r405A);
      real r4069#1 = RAdd(r4068,r405D);
      real r406A#1 = RAdd(r4069,r405F);
      real r406B#1 = RAdd(r406A,r4062);
      real r406C#1 = RAdd(r406B,r4064);
      real r406E#2 = RMul(basisEval3C2E,r3DCA);
      real r4070#1 = RMul(basisEval3C2E,r3DD2);
      real r4072#2 = RMul(basisEval3C2E,r3DDA);
      real r4074#2 = RMul(basisEval3C2E,r3E0D);
      real r4076#3 = RMul(basisEval3C2E,r3E12);
      real r4078#1 = RMul(one3C29,r3E17);
      real r407A#2 = RMul(basisEval3C2E,r3E41);
      real r407C#1 = RMul(coeff3C28,r3E46);
      real r407E#3 = RMul(basisEval3C2E,r3E4B);
      real r407F#2 = RAdd(r406E,r4070);
      real r4080#1 = RAdd(r407F,r4072);
      real r4081#1 = RAdd(r4080,r4074);
      real r4082#1 = RAdd(r4081,r4076);
      real r4083#1 = RAdd(r4082,r4078);
      real r4084#1 = RAdd(r4083,r407A);
      real r4085#1 = RAdd(r4084,r407C);
      real r4086#1 = RAdd(r4085,r407E);
      real r4088#2 = RMul(basisEval3C2E,r3DE3);
      real r408A#1 = RMul(basisEval3C2E,r3DEB);
      real r408C#2 = RMul(basisEval3C2E,r3DF3);
      real r408E#2 = RMul(basisEval3C2E,r3E1D);
      real r4090#3 = RMul(basisEval3C2E,r3E22);
      real r4092#1 = RMul(one3C29,r3E27);
      real r4094#2 = RMul(basisEval3C2E,r3E51);
      real r4096#1 = RMul(coeff3C28,r3E56);
      real r4098#3 = RMul(basisEval3C2E,r3E5B);
      real r4099#2 = RAdd(r4088,r408A);
      real r409A#1 = RAdd(r4099,r408C);
      real r409B#1 = RAdd(r409A,r408E);
      real r409C#1 = RAdd(r409B,r4090);
      real r409D#1 = RAdd(r409C,r4092);
      real r409E#1 = RAdd(r409D,r4094);
      real r409F#1 = RAdd(r409E,r4096);
      real r40A0#1 = RAdd(r409F,r4098);
      real r40A2#1 = RMul(coeff3C28,r3DC1);
      real r40A3#2 = RMul(basisEval3C2E,r3E07);
      real r40A4#1 = RMul(one3C29,r3E31);
      real r40A5#2 = RMul(basisEval3C2E,r3E36);
      real r40A6#1 = RAdd(r4065,r40A2);
      real r40A7#1 = RAdd(r40A6,r4058);
      real r40A8#1 = RAdd(r40A7,r405A);
      real r40A9#1 = RAdd(r40A8,r40A3);
      real r40AA#1 = RAdd(r40A9,r40A4);
      real r40AB#1 = RAdd(r40AA,r40A5);
      real r40AC#1 = RAdd(r40AB,r4064);
      real r40AD#1 = RMul(coeff3C28,r3DDA);
      real r40AE#2 = RMul(basisEval3C2E,r3E17);
      real r40AF#1 = RMul(one3C29,r3E41);
      real r40B0#2 = RMul(basisEval3C2E,r3E46);
      real r40B1#1 = RAdd(r407F,r40AD);
      real r40B2#1 = RAdd(r40B1,r4074);
      real r40B3#1 = RAdd(r40B2,r4076);
      real r40B4#1 = RAdd(r40B3,r40AE);
      real r40B5#1 = RAdd(r40B4,r40AF);
      real r40B6#1 = RAdd(r40B5,r40B0);
      real r40B7#1 = RAdd(r40B6,r407E);
      real r40B8#1 = RMul(coeff3C28,r3DF3);
      real r40B9#2 = RMul(basisEval3C2E,r3E27);
      real r40BA#1 = RMul(one3C29,r3E51);
      real r40BB#2 = RMul(basisEval3C2E,r3E56);
      real r40BC#1 = RAdd(r4099,r40B8);
      real r40BD#1 = RAdd(r40BC,r408E);
      real r40BE#1 = RAdd(r40BD,r4090);
      real r40BF#1 = RAdd(r40BE,r40B9);
      real r40C0#1 = RAdd(r40BF,r40BA);
      real r40C1#1 = RAdd(r40C0,r40BB);
      real r40C2#1 = RAdd(r40C1,r4098);
      real r40C4#1 = RMul(one3C29,r3DB9);
      real r40C5#1 = RMul(coeff3C28,r3DFD);
      real r40C6#1 = RAdd(r4052,r40C4);
      real r40C7#1 = RAdd(r40C6,r4056);
      real r40C8#1 = RAdd(r40C7,r40C5);
      real r40C9#1 = RAdd(r40C8,r405A);
      real r40CA#1 = RAdd(r40C9,r40A3);
      real r40CB#1 = RAdd(r40CA,r405F);
      real r40CC#1 = RAdd(r40CB,r40A5);
      real r40CD#1 = RAdd(r40CC,r4064);
      real r40CE#1 = RMul(one3C29,r3DD2);
      real r40CF#1 = RMul(coeff3C28,r3E0D);
      real r40D0#1 = RAdd(r406E,r40CE);
      real r40D1#1 = RAdd(r40D0,r4072);
      real r40D2#1 = RAdd(r40D1,r40CF);
      real r40D3#1 = RAdd(r40D2,r4076);
      real r40D4#1 = RAdd(r40D3,r40AE);
      real r40D5#1 = RAdd(r40D4,r407A);
      real r40D6#1 = RAdd(r40D5,r40B0);
      real r40D7#1 = RAdd(r40D6,r407E);
      real r40D8#1 = RMul(one3C29,r3DEB);
      real r40D9#1 = RMul(coeff3C28,r3E1D);
      real r40DA#1 = RAdd(r4088,r40D8);
      real r40DB#1 = RAdd(r40DA,r408C);
      real r40DC#1 = RAdd(r40DB,r40D9);
      real r40DD#1 = RAdd(r40DC,r4090);
      real r40DE#1 = RAdd(r40DD,r40B9);
      real r40DF#1 = RAdd(r40DE,r4094);
      real r40E0#1 = RAdd(r40DF,r40BB);
      real r40E1#1 = RAdd(r40E0,r4098);
      real realLit4179#1 = 0.2e1;
      real op1_e3_l_214178#9 = RMul(realLit4179,op1_e3_l_19404C);
      real varAcc417F#1 = VIndex<3,0>(xn417E);
      real varAcc4180#1 = VIndex<3,1>(xn417E);
      real varAcc4181#1 = VIndex<3,2>(xn417E);
      real prod4186#2 = RMul(varAcc417F,prod3C2A);
      real prod4188#1 = RMul(varAcc4180,one3C29);
      real prod4189#2 = RMul(one3C29,prod4188);
      real prod418B#1 = RMul(one3C29,varAcc4181);
      real prod418C#2 = RMul(one3C29,prod418B);
      real mult418F#1 = RMul(coeff3C28,prod418C);
      real mult4190#1 = RMul(coeff3C28,prod4189);
      real mult4191#1 = RMul(coeff3C28,prod4186);
      real sum4192#1 = RAdd(mult4190,mult4191);
      real sum4193#1 = RAdd(mult418F,sum4192);
      real sum4194#3 = RAdd(basisEval3C2D,sum4193);
      real basisEval4196#3 = RMul(one3C29,prod4186);
      real basisEval4197#3 = RMul(one3C29,prod4189);
      real basisEval4198#3 = RMul(one3C29,prod418C);
      real r41B9#1 = RMul(dof_load3BDA,sum4194);
      real r41BC#1 = RMul(dof_load3BE3,basisEval4196);
      real r41BF#1 = RMul(dof_load3BEC,basisEval4197);
      real r41C2#1 = RMul(dof_load3BF5,basisEval4198);
      real r41C3#1 = RAdd(r41B9,r41BC);
      real r41C4#1 = RAdd(r41C3,r41BF);
      real r41C5#1 = RAdd(r41C4,r41C2);
      real r41C7#1 = RMul(dof_load3BDB,sum4194);
      real r41C9#1 = RMul(dof_load3BE4,basisEval4196);
      real r41CB#1 = RMul(dof_load3BED,basisEval4197);
      real r41CD#1 = RMul(dof_load3BF6,basisEval4198);
      real r41CE#1 = RAdd(r41C7,r41C9);
      real r41CF#1 = RAdd(r41CE,r41CB);
      real r41D0#1 = RAdd(r41CF,r41CD);
      real r41D2#1 = RMul(dof_load3BDC,sum4194);
      real r41D4#1 = RMul(dof_load3BE5,basisEval4196);
      real r41D6#1 = RMul(dof_load3BEE,basisEval4197);
      real r41D8#1 = RMul(dof_load3BF7,basisEval4198);
      real r41D9#1 = RAdd(r41D2,r41D4);
      real r41DA#1 = RAdd(r41D9,r41D6);
      real r41DB#1 = RAdd(r41DA,r41D8);
      tensor[3] probe_l_2241B6#1 = <tensor[3]>[r41C5,r41D0,r41DB];
      real r4205#1 = RDiv(r406C,op1_e3_l_214178);
      real r4207#1 = RDiv(r4086,op1_e3_l_214178);
      real r4209#1 = RDiv(r40A0,op1_e3_l_214178);
      tensor[3] tensor420A#1 = <tensor[3]>[r4205,r4207,r4209];
      real r420C#1 = RDiv(r40AC,op1_e3_l_214178);
      real r420E#1 = RDiv(r40B7,op1_e3_l_214178);
      real r4210#1 = RDiv(r40C2,op1_e3_l_214178);
      tensor[3] tensor4211#1 = <tensor[3]>[r420C,r420E,r4210];
      real r4213#1 = RDiv(r40CD,op1_e3_l_214178);
      real r4215#1 = RDiv(r40D7,op1_e3_l_214178);
      real r4217#1 = RDiv(r40E1,op1_e3_l_214178);
      tensor[3] tensor4218#1 = <tensor[3]>[r4213,r4215,r4217];
      tensor[3] op1_e3_l_244230#3 = VSub<3>(probe_l_2241B6,pos3B9E);
      real vdot4235#1 = VDot<3>(tensor420A,op1_e3_l_244230);
      real vdot4237#1 = VDot<3>(tensor4211,op1_e3_l_244230);
      real vdot4239#1 = VDot<3>(tensor4218,op1_e3_l_244230);
      tensor[3] op1_e3_l_254233#3 = <tensor[3]>[vdot4235,vdot4237,vdot4239];
      tensor[3] xn4242#4 = VSub<3>(xn417E,op1_e3_l_254233);
      real _t4245#6 = 0.1e-7;
      real _t4247#1 = RMul(_t4245,_t4245);
      real _t42A9#1 = VDot<3>(op1_e3_l_254233,op1_e3_l_254233);
      bool _t42AC#1 = GTE<real>(_t4247,_t42A9);
      if _t42AC then goto ASSIGN59A3 else goto JOIN42D9
    ASSIGN59A3:  preds = [COND42AE]
      real _t42B1#1 = RAdd(one3C29,_t4245);
      tensor[3] _t42B4#1 = <tensor[3]>[one3C29,one3C29,one3C29];
      real _t42B6#1 = VDot<3>(_t42B4,xn4242);
      bool _t42B9#1 = GT<real>(_t42B1,_t42B6);
      tensor[3] _t42BB#1 = <tensor[3]>[_t4245,_t4245,_t4245];
      tensor[3] _t42BD#3 = VAdd<3>(_t42BB,xn4242);
      real _t42C0#1 = VIndex<3,0>(_t42BD);
      real _t42C2#3 = -0.e0;
      bool _t42C4#1 = GT<real>(_t42C0,_t42C2);
      real _t42C6#1 = VIndex<3,1>(_t42BD);
      bool _t42C8#1 = GT<real>(_t42C6,_t42C2);
      real _t42CA#1 = VIndex<3,2>(_t42BD);
      bool _t42CC#1 = GT<real>(_t42CA,_t42C2);
      bool _t42CE#1 = BAnd(_t42C8,_t42CC);
      bool _t42D0#1 = BAnd(_t42C4,_t42CE);
      bool _t42D2#1 = BAnd(_t42B9,_t42D0);
      if _t42D2 then goto ASSIGN42D6 else goto JOIN42D8
    ASSIGN42D6:  preds = [COND42D4]
      femData:MeshPos _t42D5#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3B9D,cellItter3BA8,xn4242,pos3B9E);
      return _t42D5
      goto JOIN42D8
    JOIN42D8:  preds = [*RETURN(_t42D5)42D7,COND42D4]
      goto JOIN42D9
    JOIN42D9:  preds = [JOIN42D8,COND42AE]
      goto FOREACH3BAF
    NEXT42DB:  preds = [FOREACH3BAF]
      goto FOREACH3BA9
    ASSIGN42DD:  preds = [FOREACH3BA9]
      femData:MeshPos _t42DC#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3B9D);
      return _t42DC
}
  function femData:MeshPos fn_2FB47F0 (femData:MeshPos x47F1#5, tensor[3] dPos47F2#1) {
    ENTRY47F3:  preds = []
      femData:Mesh meshData47F4#1 = globals.meshData3B45;
      int timeSteps47F6#1 = globals.timeSteps3B48;
      bool _t47F8#1 = ExtractFemItem<bool,Valid(MeshPos)>(x47F1);
      bool _t47FA#1 = BNot(_t47F8);
      if _t47FA then goto RETURN(x47F1)47FD else goto JOIN47FE
    RETURN(x47F1)47FD:  preds = [COND47FC]
      return x47F1
      goto JOIN47FE
    JOIN47FE:  preds = [*RETURN(x47F1)47FD,COND47FC]
      int _t47FF#1 = 0;
      int[] _t4801#1 = Range(_t47FF,timeSteps47F6);
    FOREACH4804:  preds = [ASSIGN4802,*NEXT4806]
      foreach (i4803 in _t4801) on exit goto ASSIGN4808
      return
      goto FOREACH4804
    ASSIGN4808:  preds = [FOREACH4804]
      string _t4807#1 = "Took stupid way out!\n";
      Print<[string]>(_t4807);
      tensor[3] _t480A#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x47F1);
      int _t480C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x47F1);
      femData:Mesh _t480E#16 = ExtractFem<femData:Mesh,femData:MeshPos>(x47F1);
      int ilit4811#1 = 4;
      int mulRes4812#4 = IMul(_t480C,ilit4811);
      int idx4815#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,mulRes4812);
      int ilit4816#5 = 1;
      int addRes4817#1 = IAdd(mulRes4812,ilit4816);
      int idx4818#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes4817);
      int ilit4819#5 = 2;
      int addRes481A#1 = IAdd(mulRes4812,ilit4819);
      int idx481B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes481A);
      int ilit481C#5 = 3;
      int addRes481D#1 = IAdd(mulRes4812,ilit481C);
      int idx481E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes481D);
      int mulRes4834#3 = IMul(ilit481C,idx4815);
      int addRes4837#1 = IAdd(ilit4816,mulRes4834);
      int addRes4839#1 = IAdd(ilit4819,mulRes4834);
      real dof_load483A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes4834);
      real dof_load483B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4837);
      real dof_load483C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4839);
      int mulRes483F#3 = IMul(ilit481C,idx4818);
      int addRes4841#1 = IAdd(ilit4816,mulRes483F);
      int addRes4842#1 = IAdd(ilit4819,mulRes483F);
      real dof_load4843#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes483F);
      real dof_load4844#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4841);
      real dof_load4845#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4842);
      int mulRes4848#3 = IMul(ilit481C,idx481B);
      int addRes484A#1 = IAdd(ilit4816,mulRes4848);
      int addRes484B#1 = IAdd(ilit4819,mulRes4848);
      real dof_load484C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes4848);
      real dof_load484D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes484A);
      real dof_load484E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes484B);
      int mulRes4851#3 = IMul(ilit481C,idx481E);
      int addRes4853#1 = IAdd(ilit4816,mulRes4851);
      int addRes4854#1 = IAdd(ilit4819,mulRes4851);
      real dof_load4855#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes4851);
      real dof_load4856#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4853);
      real dof_load4857#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4854);
      real varAcc4885#1 = VIndex<3,0>(_t480A);
      real varAcc4886#1 = VIndex<3,1>(_t480A);
      real varAcc4887#1 = VIndex<3,2>(_t480A);
      real coeff4888#3 = -0.1e1;
      real one488A#11 = 0.1e1;
      real prod488B#2 = RMul(one488A,one488A);
      real prod488C#2 = RMul(varAcc4885,prod488B);
      real prod488E#1 = RMul(varAcc4886,one488A);
      real prod488F#2 = RMul(one488A,prod488E);
      real prod4891#1 = RMul(one488A,varAcc4887);
      real prod4892#2 = RMul(one488A,prod4891);
      real prod4893#1 = RMul(one488A,prod488B);
      real mult4894#1 = RMul(one488A,prod4893);
      real mult4895#1 = RMul(coeff4888,prod4892);
      real mult4896#1 = RMul(coeff4888,prod488F);
      real mult4897#1 = RMul(coeff4888,prod488C);
      real sum4898#1 = RAdd(mult4896,mult4897);
      real sum4899#1 = RAdd(mult4895,sum4898);
      real sum489A#3 = RAdd(mult4894,sum4899);
      real basisEval489C#3 = RMul(one488A,prod488C);
      real basisEval489D#3 = RMul(one488A,prod488F);
      real basisEval489E#3 = RMul(one488A,prod4892);
      real r48BF#1 = RMul(dof_load483A,sum489A);
      real r48C2#1 = RMul(dof_load4843,basisEval489C);
      real r48C5#1 = RMul(dof_load484C,basisEval489D);
      real r48C8#1 = RMul(dof_load4855,basisEval489E);
      real r48C9#1 = RAdd(r48BF,r48C2);
      real r48CA#1 = RAdd(r48C9,r48C5);
      real r48CB#1 = RAdd(r48CA,r48C8);
      real r48CD#1 = RMul(dof_load483B,sum489A);
      real r48CF#1 = RMul(dof_load4844,basisEval489C);
      real r48D1#1 = RMul(dof_load484D,basisEval489D);
      real r48D3#1 = RMul(dof_load4856,basisEval489E);
      real r48D4#1 = RAdd(r48CD,r48CF);
      real r48D5#1 = RAdd(r48D4,r48D1);
      real r48D6#1 = RAdd(r48D5,r48D3);
      real r48D8#1 = RMul(dof_load483C,sum489A);
      real r48DA#1 = RMul(dof_load4845,basisEval489C);
      real r48DC#1 = RMul(dof_load484E,basisEval489D);
      real r48DE#1 = RMul(dof_load4857,basisEval489E);
      real r48DF#1 = RAdd(r48D8,r48DA);
      real r48E0#1 = RAdd(r48DF,r48DC);
      real r48E1#1 = RAdd(r48E0,r48DE);
      tensor[3] probe_l_548BC#1 = <tensor[3]>[r48CB,r48D6,r48E1];
      tensor[3] _t4909#1 = VAdd<3>(probe_l_548BC,dPos47F2);
      femData:MeshPos cmp490C#1 = findPos3B9C (meshData47F4,_t4909);
      return cmp490C
}
## input initialization
  ENTRY3B52:  preds = []
    int timeSteps3B53#1 = 32;
    globals.timeSteps3B48 = timeSteps3B53;
    real timeEps3B56#1 = 0.1e-6;
    globals.timeEps3B49 = timeEps3B56;
    real stepSize3B59#1 = 0.1e-1;
    globals.stepSize3B4B = stepSize3B59;
    int stepMax3B5C#1 = 300;
    globals.stepMax3B4C = stepMax3B5C;
    return
## global-variable initialization
  ENTRY3B60:  preds = []
    femData:Mesh meshData3B61#3 = globals.meshData3B45;
    femData:Space 0space0409_intermedateGlobal3B63#1 = globals.0space0409_intermedateGlobal3B46;
    femData:FemFunc 0data040B_intermedateGlobal3B65#1 = globals.0data040B_intermedateGlobal3B47;
    int _t3B67#1 = 0;
    int _t3B69#1 = 1;
    int _t3B6B#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3B61);
    int _t3B6D#1 = ISub(_t3B6B,_t3B69);
    int[] _t3B6F#1 = Range(_t3B67,_t3B6D);
    femData:MeshCell[] _t3B71#1 = <femData:MeshCell[]>{};
  FOREACH3B74:  preds = [ASSIGN3B72,NEXT3B7A]
    foreach (_t3B73 in _t3B6F) on exit goto ASSIGN3B7C
      femData:MeshCell[] _t3B78#1 = phi(_t3B71,_t3B77)
    femData:MeshCell _t3B75#1 = LoadFem<femData:MeshCell>(meshData3B61,_t3B73);
    femData:MeshCell[] _t3B77#1 = Append<femData:MeshCell>(_t3B78,_t3B75);
    goto FOREACH3B74
  ASSIGN3B7C:  preds = [FOREACH3B74]
    femData:Space space3B7B#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal3B63,meshData3B61);
    femData:FemFunc data3B7D#2 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal3B65,space3B7B);
    globals.data3B4F = data3B7D;
    femData:Space _t3B80#2 = ExtractFem<femData:Space,femData:FemFunc>(data3B7D);
    femData:Mesh _t3B82#1 = ExtractFem<femData:Mesh,femData:Space>(_t3B80);
    globals._t3B50 = _t3B82;
    globals._tX3B51 = _t3B80;
    return
## strand
  strand gg (tensor[3] startPos3B87#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3B8E:  preds = []
        femData:Mesh meshData3B8F#1 = globals.meshData3B45;
        tensor[3][0] _t3B91#1 = <tensor[3][0]>{};
        tensor[3][] _t3B93#1 = MkDynamic<tensor[3],0>(_t3B91);
        tensor[3][0] _t3B95#1 = <tensor[3][0]>{};
        tensor[3][] _t3B97#1 = MkDynamic<tensor[3],0>(_t3B95);
        int step3B99#1 = 0;
        femData:MeshPos cPos3B9B#1 = findPos3B9C (meshData3B8F,startPos3B87);
        self.stream = _t3B93;
        self.newStream = _t3B97;
        self.step = step3B99;
        self.cPos = cPos3B9B;
        self.altCPos = startPos3B87;
        self.startPos = startPos3B87;
        return
    end state init
    method update
        ENTRY42E7:  preds = []
          femData:Mesh _t42E8#3 = globals._t3B50;
          femData:Space _t42EA#30 = globals._tX3B51;
          femData:FemFunc data42EC#92 = globals.data3B4F;
          femData:Mesh meshData42EE#2 = globals.meshData3B45;
          real stepSize42F0#4 = globals.stepSize3B4B;
          int stepMax42F2#1 = globals.stepMax3B4C;
          tensor[3,3] M42F4#3 = globals.M3B4D;
          tensor[3] center42F6#2 = globals.center3B4E;
          tensor[3][] stream42F8#2 = self.stream;
          tensor[3][] newStream42FA#2 = self.newStream;
          int step42FC#5 = self.step;
          femData:MeshPos cPos42FE#9 = self.cPos;
          tensor[3] altCPos4300#10 = self.altCPos;
          tensor[3] startPos4302#6 = self.startPos;
          int _t4304#1 = 0;
          bool _t4306#1 = EQ<int>(step42FC,_t4304);
          if _t4306 then goto ASSIGN430A else goto JOIN4334
        ASSIGN430A:  preds = [COND4308]
          bool _t4309#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos42FE);
          if _t4309 then goto ASSIGN430D else goto JOIN4333
        ASSIGN430D:  preds = [COND430B]
          tensor[3] rp430C#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          real _t430E#1 = VIndex<3,0>(rp430C);
          real _t4310#3 = 0.1e-5;
          bool _t4312#1 = LTE<real>(_t430E,_t4310);
          if _t4312 then goto STABILIZE4315 else goto JOIN4316
        STABILIZE4315:  preds = [COND4314]
          stabilize
          goto JOIN4316
        JOIN4316:  preds = [*STABILIZE4315,COND4314]
          real _t4317#1 = VIndex<3,1>(rp430C);
          bool _t4319#1 = LTE<real>(_t4317,_t4310);
          if _t4319 then goto STABILIZE431C else goto JOIN431D
        STABILIZE431C:  preds = [COND431B]
          stabilize
          goto JOIN431D
        JOIN431D:  preds = [*STABILIZE431C,COND431B]
          real _t431E#1 = VIndex<3,2>(rp430C);
          bool _t4320#1 = LTE<real>(_t431E,_t4310);
          if _t4320 then goto STABILIZE4323 else goto JOIN4324
        STABILIZE4323:  preds = [COND4322]
          stabilize
          goto JOIN4324
        JOIN4324:  preds = [*STABILIZE4323,COND4322]
          real _t4325#3 = 0.1e1;
          tensor[3] _t4327#1 = <tensor[3]>[_t4325,_t4325,_t4325];
          real r4329#1 = VDot<3>(_t4327,rp430C);
          real _t432C#1 = 0.9999999e0;
          bool _t432E#1 = LTE<real>(_t432C,r4329);
          if _t432E then goto STABILIZE4331 else goto JOIN4332
        STABILIZE4331:  preds = [COND4330]
          stabilize
          goto JOIN4332
        JOIN4332:  preds = [*STABILIZE4331,COND4330]
          goto JOIN4333
        JOIN4333:  preds = [JOIN4332,COND430B]
          goto JOIN4334
        JOIN4334:  preds = [JOIN4333,COND4308]
          bool _t4335#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos42FE);
          femData:MeshPos _t4337#6 = findPos3B9C (meshData42EE,altCPos4300);
          bool _t4339#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t4337);
          bool _t433B#1 = NEQ<bool>(_t4335,_t4339);
          if _t433B then goto ASSIGN433F else goto JOIN4343
        ASSIGN433F:  preds = [COND433D]
          string _t433E#1 = "ERG:Warning of validity startPos:";
          string _t4340#1 = "\n";
          Print<[string,tensor[3],string]>(_t433E,startPos4302,_t4340);
          goto JOIN4343
        JOIN4343:  preds = [MASSIGN4342,COND433D]
          bool _t4344#2 = BNot(_t4335);
          if _t4344 then goto ASSIGN4348 else goto ASSIGN5617
        ASSIGN4348:  preds = [COND4346]
          bool _t4347#1 = true;
          goto JOIN434B
        JOIN434B:  preds = [ASSIGN4348,JOIN561C]
          bool _t4349#1 = phi(_t4347,_t434A)
          if _t4349 then goto ASSIGN434E else goto JOIN435D
        ASSIGN434E:  preds = [COND434C]
          string _t434D#1 = "Went off the mesh\?";
          string _t434F#2 = " and ";
          bool _t4351#1 = BNot(_t4339);
          string _t4353#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t434D,_t4344,_t434F,altCPos4300,_t434F,_t4351,_t4353);
          string _t4356#1 = "Pos is:";
          tensor[3] _t4358#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          Print<[string,tensor[3],string]>(_t4356,_t4358,_t4353);
          Print<[tensor[3][],string,tensor[3][],string]>(stream42F8,_t4353,newStream42FA,_t4353);
          stabilize
          goto JOIN435D
        JOIN435D:  preds = [*STABILIZE435C,COND434C]
          tensor[3] _t435E#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          int _t4360#5 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos42FE);
          femData:Mesh _t4362#20 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos42FE);
          int ilit4365#7 = 4;
          int mulRes4366#4 = IMul(_t4360,ilit4365);
          int idx4369#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,mulRes4366);
          int ilit436A#66 = 1;
          int addRes436B#1 = IAdd(mulRes4366,ilit436A);
          int idx436C#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes436B);
          int ilit436D#65 = 2;
          int addRes436E#1 = IAdd(mulRes4366,ilit436D);
          int idx436F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes436E);
          int ilit4370#65 = 3;
          int addRes4371#1 = IAdd(mulRes4366,ilit4370);
          int idx4372#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes4371);
          int mulRes4388#3 = IMul(ilit4370,idx4369);
          int addRes438B#1 = IAdd(ilit436A,mulRes4388);
          int addRes438D#1 = IAdd(ilit436D,mulRes4388);
          real dof_load438E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes4388);
          real dof_load438F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes438B);
          real dof_load4390#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes438D);
          int mulRes4393#3 = IMul(ilit4370,idx436C);
          int addRes4395#1 = IAdd(ilit436A,mulRes4393);
          int addRes4396#1 = IAdd(ilit436D,mulRes4393);
          real dof_load4397#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes4393);
          real dof_load4398#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4395);
          real dof_load4399#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4396);
          int mulRes439C#3 = IMul(ilit4370,idx436F);
          int addRes439E#1 = IAdd(ilit436A,mulRes439C);
          int addRes439F#1 = IAdd(ilit436D,mulRes439C);
          real dof_load43A0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes439C);
          real dof_load43A1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439E);
          real dof_load43A2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439F);
          int mulRes43A5#3 = IMul(ilit4370,idx4372);
          int addRes43A7#1 = IAdd(ilit436A,mulRes43A5);
          int addRes43A8#1 = IAdd(ilit436D,mulRes43A5);
          real dof_load43A9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes43A5);
          real dof_load43AA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A7);
          real dof_load43AB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A8);
          real varAcc43D9#5 = VIndex<3,0>(_t435E);
          real varAcc43DA#4 = VIndex<3,1>(_t435E);
          real varAcc43DB#4 = VIndex<3,2>(_t435E);
          real coeff43DC#15 = -0.1e1;
          real one43DE#62 = 0.1e1;
          real prod43DF#11 = RMul(one43DE,one43DE);
          real prod43E0#4 = RMul(varAcc43D9,prod43DF);
          real prod43E2#2 = RMul(varAcc43DA,one43DE);
          real prod43E3#4 = RMul(one43DE,prod43E2);
          real prod43E5#2 = RMul(one43DE,varAcc43DB);
          real prod43E6#4 = RMul(one43DE,prod43E5);
          real prod43E7#1 = RMul(one43DE,prod43DF);
          real mult43E8#7 = RMul(one43DE,prod43E7);
          real mult43E9#2 = RMul(coeff43DC,prod43E6);
          real mult43EA#2 = RMul(coeff43DC,prod43E3);
          real mult43EB#2 = RMul(coeff43DC,prod43E0);
          real sum43EC#1 = RAdd(mult43EA,mult43EB);
          real sum43ED#1 = RAdd(mult43E9,sum43EC);
          real sum43EE#3 = RAdd(mult43E8,sum43ED);
          real basisEval43F0#3 = RMul(one43DE,prod43E0);
          real basisEval43F1#3 = RMul(one43DE,prod43E3);
          real basisEval43F2#3 = RMul(one43DE,prod43E6);
          real r4413#1 = RMul(dof_load438E,sum43EE);
          real r4416#1 = RMul(dof_load4397,basisEval43F0);
          real r4419#1 = RMul(dof_load43A0,basisEval43F1);
          real r441C#1 = RMul(dof_load43A9,basisEval43F2);
          real r441D#1 = RAdd(r4413,r4416);
          real r441E#1 = RAdd(r441D,r4419);
          real r441F#1 = RAdd(r441E,r441C);
          real r4421#1 = RMul(dof_load438F,sum43EE);
          real r4423#1 = RMul(dof_load4398,basisEval43F0);
          real r4425#1 = RMul(dof_load43A1,basisEval43F1);
          real r4427#1 = RMul(dof_load43AA,basisEval43F2);
          real r4428#1 = RAdd(r4421,r4423);
          real r4429#1 = RAdd(r4428,r4425);
          real r442A#1 = RAdd(r4429,r4427);
          real r442C#1 = RMul(dof_load4390,sum43EE);
          real r442E#1 = RMul(dof_load4399,basisEval43F0);
          real r4430#1 = RMul(dof_load43A2,basisEval43F1);
          real r4432#1 = RMul(dof_load43AB,basisEval43F2);
          real r4433#1 = RAdd(r442C,r442E);
          real r4434#1 = RAdd(r4433,r4430);
          real r4435#1 = RAdd(r4434,r4432);
          tensor[3] _t4410#3 = <tensor[3]>[r441F,r442A,r4435];
          tensor[3][1] _t445D#1 = <tensor[3][1]>{_t4410};
          tensor[3][] _t445F#1 = MkDynamic<tensor[3],1>(_t445D);
          tensor[3][] stream4461#4 = Concat<tensor[3]>(stream42F8,_t445F);
          tensor[3][1] _t4463#1 = <tensor[3][1]>{altCPos4300};
          tensor[3][] _t4465#1 = MkDynamic<tensor[3],1>(_t4463);
          tensor[3][] newStream4467#4 = Concat<tensor[3]>(newStream42FA,_t4465);
          tensor[3] op1_e3_l_744B6#2 = VSub<3>(_t4410,altCPos4300);
          real op1_e3_l_944B9#1 = VDot<3>(op1_e3_l_744B6,op1_e3_l_744B6);
          real _t44BC#1 = Sqrt(op1_e3_l_944B9);
          real _t44BF#5 = 0.1e-5;
          bool _t44C1#1 = GT<real>(_t44BC,_t44BF);
          if _t44C1 then goto ASSIGN44C5 else goto ASSIGN5610
        ASSIGN44C5:  preds = [COND44C3]
          string _t44C4#1 = "ERG:Error in tracing 1: At step:";
          string _t44C6#1 = " with particle:";
          string _t44C8#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t44C4,step42FC,_t44C6,startPos4302,_t44C8);
          string _t44CB#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t44CB,_t4410,altCPos4300,_t44C8);
          string _t44CE#1 = "Cells are:";
          femData:MeshCell _t44D0#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t44D2#2 = " and ";
          femData:Mesh _t44D4#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4337);
          int _t44D6#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4337);
          femData:MeshCell _t44D8#1 = LoadFem<femData:MeshCell>(_t44D4,_t44D6);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t44CE,_t44D0,_t44D2,_t44D8,_t44C8);
          string _t44DB#1 = "Ref poses are:";
          tensor[3] _t44DD#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t4337);
          Print<[string,tensor[3],string,tensor[3],string]>(_t44DB,_t435E,_t44D2,_t44DD,_t44C8);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN44E3
        JOIN44E3:  preds = [*STABILIZE44E2,MASSIGN5615]
          real _t44E4#1 = 0.5e0;
          if _t4335 then goto ASSIGN44E8 else goto ASSIGN5609
        ASSIGN44E8:  preds = [COND44E6]
          femData:MeshCell c44E7#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          int _t44E9#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c44E7);
          femData:FuncCell _t44EB#2 = LoadFem<femData:FuncCell>(data42EC,_t44E9);
          femData:FemFunc _t44ED#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t44EB);
          femData:Space _t44EF#10 = ExtractFem<femData:Space,femData:FemFunc>(_t44ED);
          int _t44F1#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t44EB);
          int ilit44F4#1 = 10;
          int mulRes44F5#10 = IMul(_t44F1,ilit44F4);
          int idx44F8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,mulRes44F5);
          int addRes44FA#1 = IAdd(mulRes44F5,ilit436A);
          int idx44FB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44FA);
          int addRes44FD#1 = IAdd(mulRes44F5,ilit436D);
          int idx44FE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44FD);
          int addRes4500#1 = IAdd(mulRes44F5,ilit4370);
          int idx4501#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4500);
          int addRes4503#1 = IAdd(mulRes44F5,ilit4365);
          int idx4504#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4503);
          int ilit4505#1 = 5;
          int addRes4506#1 = IAdd(mulRes44F5,ilit4505);
          int idx4507#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4506);
          int ilit4508#1 = 6;
          int addRes4509#1 = IAdd(mulRes44F5,ilit4508);
          int idx450A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4509);
          int ilit450B#1 = 7;
          int addRes450C#1 = IAdd(mulRes44F5,ilit450B);
          int idx450D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes450C);
          int ilit450E#1 = 8;
          int addRes450F#1 = IAdd(mulRes44F5,ilit450E);
          int idx4510#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes450F);
          int ilit4511#1 = 9;
          int addRes4512#1 = IAdd(mulRes44F5,ilit4511);
          int idx4513#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4512);
          int mulRes453B#3 = IMul(ilit4370,idx44F8);
          int addRes453E#1 = IAdd(ilit436A,mulRes453B);
          int addRes4540#1 = IAdd(ilit436D,mulRes453B);
          real dof_load4541#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes453B);
          real dof_load4542#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes453E);
          real dof_load4543#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4540);
          int mulRes4546#3 = IMul(ilit4370,idx44FB);
          int addRes4548#1 = IAdd(ilit436A,mulRes4546);
          int addRes4549#1 = IAdd(ilit436D,mulRes4546);
          real dof_load454A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4546);
          real dof_load454B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4548);
          real dof_load454C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4549);
          int mulRes454F#3 = IMul(ilit4370,idx44FE);
          int addRes4551#1 = IAdd(ilit436A,mulRes454F);
          int addRes4552#1 = IAdd(ilit436D,mulRes454F);
          real dof_load4553#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes454F);
          real dof_load4554#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4551);
          real dof_load4555#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4552);
          int mulRes4558#3 = IMul(ilit4370,idx4501);
          int addRes455A#1 = IAdd(ilit436A,mulRes4558);
          int addRes455B#1 = IAdd(ilit436D,mulRes4558);
          real dof_load455C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4558);
          real dof_load455D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes455A);
          real dof_load455E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes455B);
          int mulRes4562#3 = IMul(ilit4370,idx4504);
          int addRes4564#1 = IAdd(ilit436A,mulRes4562);
          int addRes4565#1 = IAdd(ilit436D,mulRes4562);
          real dof_load4566#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4562);
          real dof_load4567#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4564);
          real dof_load4568#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4565);
          int mulRes456C#3 = IMul(ilit4370,idx4507);
          int addRes456E#1 = IAdd(ilit436A,mulRes456C);
          int addRes456F#1 = IAdd(ilit436D,mulRes456C);
          real dof_load4570#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes456C);
          real dof_load4571#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456E);
          real dof_load4572#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456F);
          int mulRes4576#3 = IMul(ilit4370,idx450A);
          int addRes4578#1 = IAdd(ilit436A,mulRes4576);
          int addRes4579#1 = IAdd(ilit436D,mulRes4576);
          real dof_load457A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4576);
          real dof_load457B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4578);
          real dof_load457C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4579);
          int mulRes4580#3 = IMul(ilit4370,idx450D);
          int addRes4582#1 = IAdd(ilit436A,mulRes4580);
          int addRes4583#1 = IAdd(ilit436D,mulRes4580);
          real dof_load4584#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4580);
          real dof_load4585#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4582);
          real dof_load4586#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4583);
          int mulRes458A#3 = IMul(ilit4370,idx4510);
          int addRes458C#1 = IAdd(ilit436A,mulRes458A);
          int addRes458D#1 = IAdd(ilit436D,mulRes458A);
          real dof_load458E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes458A);
          real dof_load458F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458C);
          real dof_load4590#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458D);
          int mulRes4594#3 = IMul(ilit4370,idx4513);
          int addRes4596#1 = IAdd(ilit436A,mulRes4594);
          int addRes4597#1 = IAdd(ilit436D,mulRes4594);
          real dof_load4598#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4594);
          real dof_load4599#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4596);
          real dof_load459A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4597);
          real coeff4607#3 = 0.2e1;
          real prod24609#1 = RMul(varAcc43D9,varAcc43D9);
          real prod460C#2 = RMul(prod24609,prod43DF);
          real coeff460D#6 = 0.4e1;
          real prod4610#2 = RMul(varAcc43D9,prod43E2);
          real prod4613#2 = RMul(varAcc43D9,prod43E5);
          real coeff4614#3 = -0.3e1;
          real prod24616#1 = RMul(varAcc43DA,varAcc43DA);
          real prod4617#1 = RMul(prod24616,one43DE);
          real prod4618#2 = RMul(one43DE,prod4617);
          real prod4619#1 = RMul(varAcc43DA,varAcc43DB);
          real prod461A#2 = RMul(one43DE,prod4619);
          real prod2461C#1 = RMul(varAcc43DB,varAcc43DB);
          real prod461D#1 = RMul(one43DE,prod2461C);
          real prod461E#2 = RMul(one43DE,prod461D);
          real mult4622#1 = RMul(coeff4614,prod43E6);
          real mult4623#2 = RMul(coeff4607,prod461E);
          real mult4624#1 = RMul(coeff4614,prod43E3);
          real mult4625#4 = RMul(coeff460D,prod461A);
          real mult4626#2 = RMul(coeff4607,prod4618);
          real mult4627#1 = RMul(coeff4614,prod43E0);
          real mult4628#4 = RMul(coeff460D,prod4613);
          real mult4629#4 = RMul(coeff460D,prod4610);
          real mult462A#2 = RMul(coeff4607,prod460C);
          real sum462B#1 = RAdd(mult4629,mult462A);
          real sum462C#1 = RAdd(mult4628,sum462B);
          real sum462D#1 = RAdd(mult4627,sum462C);
          real sum462E#1 = RAdd(mult4626,sum462D);
          real sum462F#1 = RAdd(mult4625,sum462E);
          real sum4630#1 = RAdd(mult4624,sum462F);
          real sum4631#1 = RAdd(mult4623,sum4630);
          real sum4632#1 = RAdd(mult4622,sum4631);
          real sum4633#3 = RAdd(mult43E8,sum4632);
          real sum4637#3 = RAdd(mult43EB,mult462A);
          real sum463A#3 = RAdd(mult43EA,mult4626);
          real sum463D#3 = RAdd(mult43E9,mult4623);
          real coeff463F#6 = -0.4e1;
          real mult4640#1 = RMul(coeff460D,prod43E6);
          real mult4641#1 = RMul(coeff463F,prod461E);
          real mult4642#2 = RMul(coeff463F,prod461A);
          real mult4643#2 = RMul(coeff463F,prod4613);
          real sum4644#1 = RAdd(mult4642,mult4643);
          real sum4645#1 = RAdd(mult4641,sum4644);
          real sum4646#3 = RAdd(mult4640,sum4645);
          real mult4648#1 = RMul(coeff460D,prod43E3);
          real mult4649#1 = RMul(coeff463F,prod4618);
          real mult464A#2 = RMul(coeff463F,prod4610);
          real sum464B#1 = RAdd(mult4649,mult464A);
          real sum464C#1 = RAdd(mult4642,sum464B);
          real sum464D#3 = RAdd(mult4648,sum464C);
          real mult464F#1 = RMul(coeff460D,prod43E0);
          real mult4650#1 = RMul(coeff463F,prod460C);
          real sum4651#1 = RAdd(mult464A,mult4650);
          real sum4652#1 = RAdd(mult4643,sum4651);
          real sum4653#3 = RAdd(mult464F,sum4652);
          real r46AC#1 = RMul(dof_load4541,sum4633);
          real r46AF#1 = RMul(dof_load454A,sum4637);
          real r46B2#1 = RMul(dof_load4553,sum463A);
          real r46B5#1 = RMul(dof_load455C,sum463D);
          real r46B8#1 = RMul(dof_load4566,mult4625);
          real r46BB#1 = RMul(dof_load4570,mult4628);
          real r46BE#1 = RMul(dof_load457A,mult4629);
          real r46C1#1 = RMul(dof_load4584,sum4646);
          real r46C4#1 = RMul(dof_load458E,sum464D);
          real r46C7#1 = RMul(dof_load4598,sum4653);
          real r46C8#1 = RAdd(r46AC,r46AF);
          real r46C9#1 = RAdd(r46C8,r46B2);
          real r46CA#1 = RAdd(r46C9,r46B5);
          real r46CB#1 = RAdd(r46CA,r46B8);
          real r46CC#1 = RAdd(r46CB,r46BB);
          real r46CD#1 = RAdd(r46CC,r46BE);
          real r46CE#1 = RAdd(r46CD,r46C1);
          real r46CF#1 = RAdd(r46CE,r46C4);
          real r46D0#2 = RAdd(r46CF,r46C7);
          real r46D2#1 = RMul(dof_load4542,sum4633);
          real r46D4#1 = RMul(dof_load454B,sum4637);
          real r46D6#1 = RMul(dof_load4554,sum463A);
          real r46D8#1 = RMul(dof_load455D,sum463D);
          real r46DA#1 = RMul(dof_load4567,mult4625);
          real r46DC#1 = RMul(dof_load4571,mult4628);
          real r46DE#1 = RMul(dof_load457B,mult4629);
          real r46E0#1 = RMul(dof_load4585,sum4646);
          real r46E2#1 = RMul(dof_load458F,sum464D);
          real r46E4#1 = RMul(dof_load4599,sum4653);
          real r46E5#1 = RAdd(r46D2,r46D4);
          real r46E6#1 = RAdd(r46E5,r46D6);
          real r46E7#1 = RAdd(r46E6,r46D8);
          real r46E8#1 = RAdd(r46E7,r46DA);
          real r46E9#1 = RAdd(r46E8,r46DC);
          real r46EA#1 = RAdd(r46E9,r46DE);
          real r46EB#1 = RAdd(r46EA,r46E0);
          real r46EC#1 = RAdd(r46EB,r46E2);
          real r46ED#2 = RAdd(r46EC,r46E4);
          real r46EF#1 = RMul(dof_load4543,sum4633);
          real r46F1#1 = RMul(dof_load454C,sum4637);
          real r46F3#1 = RMul(dof_load4555,sum463A);
          real r46F5#1 = RMul(dof_load455E,sum463D);
          real r46F7#1 = RMul(dof_load4568,mult4625);
          real r46F9#1 = RMul(dof_load4572,mult4628);
          real r46FB#1 = RMul(dof_load457C,mult4629);
          real r46FD#1 = RMul(dof_load4586,sum4646);
          real r46FF#1 = RMul(dof_load4590,sum464D);
          real r4701#1 = RMul(dof_load459A,sum4653);
          real r4702#1 = RAdd(r46EF,r46F1);
          real r4703#1 = RAdd(r4702,r46F3);
          real r4704#1 = RAdd(r4703,r46F5);
          real r4705#1 = RAdd(r4704,r46F7);
          real r4706#1 = RAdd(r4705,r46F9);
          real r4707#1 = RAdd(r4706,r46FB);
          real r4708#1 = RAdd(r4707,r46FD);
          real r4709#1 = RAdd(r4708,r46FF);
          real r470A#2 = RAdd(r4709,r4701);
          tensor[3] probe_l_846A9#2 = <tensor[3]>[r46D0,r46ED,r470A];
          real op1_e3_l_11476E#1 = VDot<3>(probe_l_846A9,probe_l_846A9);
          real op1_e3_l_124771#1 = Sqrt(op1_e3_l_11476E);
          real r4776#3 = RDiv(one43DE,op1_e3_l_124771);
          real r4778#1 = RMul(r4776,r46D0);
          real r477A#1 = RMul(r4776,r46ED);
          real r477C#1 = RMul(r4776,r470A);
          tensor[3] _t4774#1 = <tensor[3]>[r4778,r477A,r477C];
          goto JOIN4789
        JOIN4789:  preds = [ASSIGN4786,ASSIGN560E]
          tensor[3] _t4787#3 = phi(_t4774,_t4788)
          real r478B#1 = TensorIndex<tensor[3],[0]>(_t4787);
          real r478C#12 = RMul(_t44E4,stepSize42F0);
          real r478D#1 = RMul(r478C,r478B);
          real r478E#1 = TensorIndex<tensor[3],[1]>(_t4787);
          real r478F#1 = RMul(r478C,r478E);
          real r4790#1 = TensorIndex<tensor[3],[2]>(_t4787);
          real r4791#1 = RMul(r478C,r4790);
          tensor[3] up1478A#3 = <tensor[3]>[r478D,r478F,r4791];
          tensor[3] op1_e3_l_11479B#3 = VSub<3>(altCPos4300,center42F6);
          tensor[3] projParam479F#2 = ProjectLast<tensor[3,3],[0]>(M42F4);
          real vdot47A0#2 = VDot<3>(projParam479F,op1_e3_l_11479B);
          tensor[3] projParam47A1#2 = ProjectLast<tensor[3,3],[1]>(M42F4);
          real vdot47A2#2 = VDot<3>(projParam47A1,op1_e3_l_11479B);
          tensor[3] projParam47A3#2 = ProjectLast<tensor[3,3],[2]>(M42F4);
          real vdot47A4#2 = VDot<3>(projParam47A3,op1_e3_l_11479B);
          tensor[3] op1_e3_l_12479E#2 = <tensor[3]>[vdot47A0,vdot47A2,vdot47A4];
          real op1_e3_l_1747AD#1 = VDot<3>(op1_e3_l_12479E,op1_e3_l_12479E);
          real r47B3#1 = RMul(r478C,vdot47A0);
          real r47B5#1 = RMul(r478C,vdot47A2);
          real r47B7#1 = RMul(r478C,vdot47A4);
          real op1_e3_l_1947C1#1 = Sqrt(op1_e3_l_1747AD);
          real r47C6#3 = RDiv(one43DE,op1_e3_l_1947C1);
          real r47C8#1 = RMul(r47C6,r47B3);
          real r47CA#1 = RMul(r47C6,r47B5);
          real r47CC#1 = RMul(r47C6,r47B7);
          tensor[3] op1_e3_l_2147C4#1 = <tensor[3]>[r47C8,r47CA,r47CC];
          tensor[3] op1_e3_l_3347D7#2 = VSub<3>(up1478A,op1_e3_l_2147C4);
          real op1_e3_l_3547DA#1 = VDot<3>(op1_e3_l_3347D7,op1_e3_l_3347D7);
          real _t47DD#1 = Sqrt(op1_e3_l_3547DA);
          bool _t47E0#1 = GT<real>(_t47DD,_t44BF);
          if _t47E0 then goto ASSIGN47E4 else goto ASSIGN5354
        ASSIGN47E4:  preds = [COND47E2]
          bool _t47E3#1 = true;
          goto JOIN47E7
        JOIN47E7:  preds = [ASSIGN47E4,ASSIGN5607]
          bool _t47E5#1 = phi(_t47E3,_t47E6)
          if _t47E5 then goto ASSIGN47EA else goto JOIN47EE
        ASSIGN47EA:  preds = [COND47E8]
          string _t47E9#1 = "ERG:Error in evaluation on pos 1:";
          string _t47EB#1 = "\n";
          Print<[string,tensor[3],string]>(_t47E9,startPos4302,_t47EB);
          goto JOIN47EE
        JOIN47EE:  preds = [MASSIGN47ED,COND47E8]
          femData:MeshPos intermed47EF#4 = fn_2FB47F0 (cPos42FE,up1478A);
          femData:MeshPos callFindPos4910#2 = findPos3B9C (_t42E8,altCPos4300);
          int intPos4912#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos4910);
          tensor[3] refPos4914#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos4910);
          int ilit4917#3 = 10;
          int mulRes4918#10 = IMul(intPos4912,ilit4917);
          int idx491B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,mulRes4918);
          int addRes491D#1 = IAdd(mulRes4918,ilit436A);
          int idx491E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes491D);
          int addRes4920#1 = IAdd(mulRes4918,ilit436D);
          int idx4921#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4920);
          int addRes4923#1 = IAdd(mulRes4918,ilit4370);
          int idx4924#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4923);
          int addRes4926#1 = IAdd(mulRes4918,ilit4365);
          int idx4927#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4926);
          int ilit4928#3 = 5;
          int addRes4929#1 = IAdd(mulRes4918,ilit4928);
          int idx492A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4929);
          int ilit492B#3 = 6;
          int addRes492C#1 = IAdd(mulRes4918,ilit492B);
          int idx492D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes492C);
          int ilit492E#3 = 7;
          int addRes492F#1 = IAdd(mulRes4918,ilit492E);
          int idx4930#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes492F);
          int ilit4931#3 = 8;
          int addRes4932#1 = IAdd(mulRes4918,ilit4931);
          int idx4933#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4932);
          int ilit4934#3 = 9;
          int addRes4935#1 = IAdd(mulRes4918,ilit4934);
          int idx4936#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4935);
          int mulRes495E#3 = IMul(ilit4370,idx491B);
          int addRes4961#1 = IAdd(ilit436A,mulRes495E);
          int addRes4963#1 = IAdd(ilit436D,mulRes495E);
          real dof_load4964#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes495E);
          real dof_load4965#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4961);
          real dof_load4966#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4963);
          int mulRes4969#3 = IMul(ilit4370,idx491E);
          int addRes496B#1 = IAdd(ilit436A,mulRes4969);
          int addRes496C#1 = IAdd(ilit436D,mulRes4969);
          real dof_load496D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4969);
          real dof_load496E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496B);
          real dof_load496F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496C);
          int mulRes4972#3 = IMul(ilit4370,idx4921);
          int addRes4974#1 = IAdd(ilit436A,mulRes4972);
          int addRes4975#1 = IAdd(ilit436D,mulRes4972);
          real dof_load4976#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4972);
          real dof_load4977#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4974);
          real dof_load4978#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4975);
          int mulRes497B#3 = IMul(ilit4370,idx4924);
          int addRes497D#1 = IAdd(ilit436A,mulRes497B);
          int addRes497E#1 = IAdd(ilit436D,mulRes497B);
          real dof_load497F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes497B);
          real dof_load4980#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497D);
          real dof_load4981#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497E);
          int mulRes4985#3 = IMul(ilit4370,idx4927);
          int addRes4987#1 = IAdd(ilit436A,mulRes4985);
          int addRes4988#1 = IAdd(ilit436D,mulRes4985);
          real dof_load4989#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4985);
          real dof_load498A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4987);
          real dof_load498B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4988);
          int mulRes498F#3 = IMul(ilit4370,idx492A);
          int addRes4991#1 = IAdd(ilit436A,mulRes498F);
          int addRes4992#1 = IAdd(ilit436D,mulRes498F);
          real dof_load4993#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes498F);
          real dof_load4994#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4991);
          real dof_load4995#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4992);
          int mulRes4999#3 = IMul(ilit4370,idx492D);
          int addRes499B#1 = IAdd(ilit436A,mulRes4999);
          int addRes499C#1 = IAdd(ilit436D,mulRes4999);
          real dof_load499D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4999);
          real dof_load499E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499B);
          real dof_load499F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499C);
          int mulRes49A3#3 = IMul(ilit4370,idx4930);
          int addRes49A5#1 = IAdd(ilit436A,mulRes49A3);
          int addRes49A6#1 = IAdd(ilit436D,mulRes49A3);
          real dof_load49A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes49A3);
          real dof_load49A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A5);
          real dof_load49A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A6);
          int mulRes49AD#3 = IMul(ilit4370,idx4933);
          int addRes49AF#1 = IAdd(ilit436A,mulRes49AD);
          int addRes49B0#1 = IAdd(ilit436D,mulRes49AD);
          real dof_load49B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes49AD);
          real dof_load49B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49AF);
          real dof_load49B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B0);
          int mulRes49B7#3 = IMul(ilit4370,idx4936);
          int addRes49B9#1 = IAdd(ilit436A,mulRes49B7);
          int addRes49BA#1 = IAdd(ilit436D,mulRes49B7);
          real dof_load49BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes49B7);
          real dof_load49BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B9);
          real dof_load49BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49BA);
          real varAcc4A27#5 = VIndex<3,0>(refPos4914);
          real varAcc4A28#4 = VIndex<3,1>(refPos4914);
          real varAcc4A29#4 = VIndex<3,2>(refPos4914);
          real coeff4A2A#9 = 0.2e1;
          real prod24A2C#1 = RMul(varAcc4A27,varAcc4A27);
          real prod4A2F#2 = RMul(prod24A2C,prod43DF);
          real coeff4A30#18 = 0.4e1;
          real prod4A32#2 = RMul(varAcc4A28,one43DE);
          real prod4A33#2 = RMul(varAcc4A27,prod4A32);
          real prod4A35#2 = RMul(one43DE,varAcc4A29);
          real prod4A36#2 = RMul(varAcc4A27,prod4A35);
          real coeff4A37#9 = -0.3e1;
          real prod4A38#3 = RMul(varAcc4A27,prod43DF);
          real prod24A39#1 = RMul(varAcc4A28,varAcc4A28);
          real prod4A3A#1 = RMul(prod24A39,one43DE);
          real prod4A3B#2 = RMul(one43DE,prod4A3A);
          real prod4A3C#1 = RMul(varAcc4A28,varAcc4A29);
          real prod4A3D#2 = RMul(one43DE,prod4A3C);
          real prod4A3E#3 = RMul(one43DE,prod4A32);
          real prod24A3F#1 = RMul(varAcc4A29,varAcc4A29);
          real prod4A40#1 = RMul(one43DE,prod24A3F);
          real prod4A41#2 = RMul(one43DE,prod4A40);
          real prod4A42#3 = RMul(one43DE,prod4A35);
          real mult4A45#1 = RMul(coeff4A37,prod4A42);
          real mult4A46#2 = RMul(coeff4A2A,prod4A41);
          real mult4A47#1 = RMul(coeff4A37,prod4A3E);
          real mult4A48#4 = RMul(coeff4A30,prod4A3D);
          real mult4A49#2 = RMul(coeff4A2A,prod4A3B);
          real mult4A4A#1 = RMul(coeff4A37,prod4A38);
          real mult4A4B#4 = RMul(coeff4A30,prod4A36);
          real mult4A4C#4 = RMul(coeff4A30,prod4A33);
          real mult4A4D#2 = RMul(coeff4A2A,prod4A2F);
          real sum4A4E#1 = RAdd(mult4A4C,mult4A4D);
          real sum4A4F#1 = RAdd(mult4A4B,sum4A4E);
          real sum4A50#1 = RAdd(mult4A4A,sum4A4F);
          real sum4A51#1 = RAdd(mult4A49,sum4A50);
          real sum4A52#1 = RAdd(mult4A48,sum4A51);
          real sum4A53#1 = RAdd(mult4A47,sum4A52);
          real sum4A54#1 = RAdd(mult4A46,sum4A53);
          real sum4A55#1 = RAdd(mult4A45,sum4A54);
          real sum4A56#3 = RAdd(mult43E8,sum4A55);
          real mult4A59#1 = RMul(coeff43DC,prod4A38);
          real sum4A5A#3 = RAdd(mult4A59,mult4A4D);
          real mult4A5C#1 = RMul(coeff43DC,prod4A3E);
          real sum4A5D#3 = RAdd(mult4A5C,mult4A49);
          real mult4A5F#1 = RMul(coeff43DC,prod4A42);
          real sum4A60#3 = RAdd(mult4A5F,mult4A46);
          real coeff4A62#18 = -0.4e1;
          real mult4A63#1 = RMul(coeff4A30,prod4A42);
          real mult4A64#1 = RMul(coeff4A62,prod4A41);
          real mult4A65#2 = RMul(coeff4A62,prod4A3D);
          real mult4A66#2 = RMul(coeff4A62,prod4A36);
          real sum4A67#1 = RAdd(mult4A65,mult4A66);
          real sum4A68#1 = RAdd(mult4A64,sum4A67);
          real sum4A69#3 = RAdd(mult4A63,sum4A68);
          real mult4A6B#1 = RMul(coeff4A30,prod4A3E);
          real mult4A6C#1 = RMul(coeff4A62,prod4A3B);
          real mult4A6D#2 = RMul(coeff4A62,prod4A33);
          real sum4A6E#1 = RAdd(mult4A6C,mult4A6D);
          real sum4A6F#1 = RAdd(mult4A65,sum4A6E);
          real sum4A70#3 = RAdd(mult4A6B,sum4A6F);
          real mult4A72#1 = RMul(coeff4A30,prod4A38);
          real mult4A73#1 = RMul(coeff4A62,prod4A2F);
          real sum4A74#1 = RAdd(mult4A6D,mult4A73);
          real sum4A75#1 = RAdd(mult4A66,sum4A74);
          real sum4A76#3 = RAdd(mult4A72,sum4A75);
          real r4ACF#1 = RMul(dof_load4964,sum4A56);
          real r4AD2#1 = RMul(dof_load496D,sum4A5A);
          real r4AD5#1 = RMul(dof_load4976,sum4A5D);
          real r4AD8#1 = RMul(dof_load497F,sum4A60);
          real r4ADB#1 = RMul(dof_load4989,mult4A48);
          real r4ADE#1 = RMul(dof_load4993,mult4A4B);
          real r4AE1#1 = RMul(dof_load499D,mult4A4C);
          real r4AE4#1 = RMul(dof_load49A7,sum4A69);
          real r4AE7#1 = RMul(dof_load49B1,sum4A70);
          real r4AEA#1 = RMul(dof_load49BB,sum4A76);
          real r4AEB#1 = RAdd(r4ACF,r4AD2);
          real r4AEC#1 = RAdd(r4AEB,r4AD5);
          real r4AED#1 = RAdd(r4AEC,r4AD8);
          real r4AEE#1 = RAdd(r4AED,r4ADB);
          real r4AEF#1 = RAdd(r4AEE,r4ADE);
          real r4AF0#1 = RAdd(r4AEF,r4AE1);
          real r4AF1#1 = RAdd(r4AF0,r4AE4);
          real r4AF2#1 = RAdd(r4AF1,r4AE7);
          real r4AF3#2 = RAdd(r4AF2,r4AEA);
          real r4AF5#1 = RMul(dof_load4965,sum4A56);
          real r4AF7#1 = RMul(dof_load496E,sum4A5A);
          real r4AF9#1 = RMul(dof_load4977,sum4A5D);
          real r4AFB#1 = RMul(dof_load4980,sum4A60);
          real r4AFD#1 = RMul(dof_load498A,mult4A48);
          real r4AFF#1 = RMul(dof_load4994,mult4A4B);
          real r4B01#1 = RMul(dof_load499E,mult4A4C);
          real r4B03#1 = RMul(dof_load49A8,sum4A69);
          real r4B05#1 = RMul(dof_load49B2,sum4A70);
          real r4B07#1 = RMul(dof_load49BC,sum4A76);
          real r4B08#1 = RAdd(r4AF5,r4AF7);
          real r4B09#1 = RAdd(r4B08,r4AF9);
          real r4B0A#1 = RAdd(r4B09,r4AFB);
          real r4B0B#1 = RAdd(r4B0A,r4AFD);
          real r4B0C#1 = RAdd(r4B0B,r4AFF);
          real r4B0D#1 = RAdd(r4B0C,r4B01);
          real r4B0E#1 = RAdd(r4B0D,r4B03);
          real r4B0F#1 = RAdd(r4B0E,r4B05);
          real r4B10#2 = RAdd(r4B0F,r4B07);
          real r4B12#1 = RMul(dof_load4966,sum4A56);
          real r4B14#1 = RMul(dof_load496F,sum4A5A);
          real r4B16#1 = RMul(dof_load4978,sum4A5D);
          real r4B18#1 = RMul(dof_load4981,sum4A60);
          real r4B1A#1 = RMul(dof_load498B,mult4A48);
          real r4B1C#1 = RMul(dof_load4995,mult4A4B);
          real r4B1E#1 = RMul(dof_load499F,mult4A4C);
          real r4B20#1 = RMul(dof_load49A9,sum4A69);
          real r4B22#1 = RMul(dof_load49B3,sum4A70);
          real r4B24#1 = RMul(dof_load49BD,sum4A76);
          real r4B25#1 = RAdd(r4B12,r4B14);
          real r4B26#1 = RAdd(r4B25,r4B16);
          real r4B27#1 = RAdd(r4B26,r4B18);
          real r4B28#1 = RAdd(r4B27,r4B1A);
          real r4B29#1 = RAdd(r4B28,r4B1C);
          real r4B2A#1 = RAdd(r4B29,r4B1E);
          real r4B2B#1 = RAdd(r4B2A,r4B20);
          real r4B2C#1 = RAdd(r4B2B,r4B22);
          real r4B2D#2 = RAdd(r4B2C,r4B24);
          tensor[3] compositionl4ACC#2 = <tensor[3]>[r4AF3,r4B10,r4B2D];
          real op1_e3_l_204B91#1 = VDot<3>(compositionl4ACC,compositionl4ACC);
          real r4B97#1 = RMul(r478C,r4AF3);
          real r4B99#1 = RMul(r478C,r4B10);
          real r4B9B#1 = RMul(r478C,r4B2D);
          real op1_e3_l_224BA5#1 = Sqrt(op1_e3_l_204B91);
          real r4BAA#3 = RDiv(one43DE,op1_e3_l_224BA5);
          real r4BAC#1 = RMul(r4BAA,r4B97);
          real r4BAE#1 = RMul(r4BAA,r4B99);
          real r4BB0#1 = RMul(r4BAA,r4B9B);
          tensor[3] op1_e3_l_234BA8#1 = <tensor[3]>[r4BAC,r4BAE,r4BB0];
          tensor[3] altIntermed4BBB#7 = VAdd<3>(altCPos4300,op1_e3_l_234BA8);
          bool _t4BBE#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed47EF);
          femData:MeshPos _t4BC0#5 = findPos3B9C (meshData42EE,altIntermed4BBB);
          bool _t4BC2#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t4BC0);
          bool _t4BC4#1 = NEQ<bool>(_t4BBE,_t4BC2);
          if _t4BC4 then goto ASSIGN4BC8 else goto JOIN4BE0
        ASSIGN4BC8:  preds = [COND4BC6]
          string _t4BC7#1 = "ERG:Warning of validity intermed";
          string _t4BC9#3 = "\n";
          Print<[string,tensor[3],string]>(_t4BC7,startPos4302,_t4BC9);
          string _t4BCC#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t4BCC,altIntermed4BBB,_t4BC9);
          string _t4BCF#1 = "Cell change: ";
          femData:Mesh _t4BD1#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4337);
          int _t4BD3#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4337);
          femData:MeshCell _t4BD5#1 = LoadFem<femData:MeshCell>(_t4BD1,_t4BD3);
          string _t4BD7#1 = " to ";
          femData:Mesh _t4BD9#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4BC0);
          int _t4BDB#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4BC0);
          femData:MeshCell _t4BDD#1 = LoadFem<femData:MeshCell>(_t4BD9,_t4BDB);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t4BCF,_t4BD5,_t4BD7,_t4BDD,_t4BC9);
          goto JOIN4BE0
        JOIN4BE0:  preds = [MASSIGN4BDF,COND4BC6]
          bool _t4BE1#2 = BNot(_t4BBE);
          if _t4BE1 then goto ASSIGN4BE5 else goto ASSIGN5352
        ASSIGN4BE5:  preds = [COND4BE3]
          bool _t4BE4#1 = true;
          goto JOIN4BE8
        JOIN4BE8:  preds = [ASSIGN4BE5,ASSIGN5352]
          bool _t4BE6#1 = phi(_t4BE4,_t4BE7)
          if _t4BE6 then goto ASSIGN4BEB else goto JOIN4BF6
        ASSIGN4BEB:  preds = [COND4BE9]
          string _t4BEA#1 = "Went off the mesh\?";
          string _t4BEC#2 = " and ";
          bool _t4BEE#1 = BNot(_t4BC2);
          string _t4BF0#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t4BEA,_t4BE1,_t4BEC,altIntermed4BBB,_t4BEC,_t4BEE,_t4BF0);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN4BF6
        JOIN4BF6:  preds = [*STABILIZE4BF5,COND4BE9]
          tensor[3] _t4BF7#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed47EF);
          int _t4BF9#3 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed47EF);
          femData:Mesh _t4BFB#18 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed47EF);
          int mulRes4BFF#4 = IMul(_t4BF9,ilit4365);
          int idx4C02#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,mulRes4BFF);
          int addRes4C04#1 = IAdd(mulRes4BFF,ilit436A);
          int idx4C05#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C04);
          int addRes4C07#1 = IAdd(mulRes4BFF,ilit436D);
          int idx4C08#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C07);
          int addRes4C0A#1 = IAdd(mulRes4BFF,ilit4370);
          int idx4C0B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C0A);
          int mulRes4C21#3 = IMul(ilit4370,idx4C02);
          int addRes4C24#1 = IAdd(ilit436A,mulRes4C21);
          int addRes4C26#1 = IAdd(ilit436D,mulRes4C21);
          real dof_load4C27#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C21);
          real dof_load4C28#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C24);
          real dof_load4C29#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C26);
          int mulRes4C2C#3 = IMul(ilit4370,idx4C05);
          int addRes4C2E#1 = IAdd(ilit436A,mulRes4C2C);
          int addRes4C2F#1 = IAdd(ilit436D,mulRes4C2C);
          real dof_load4C30#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C2C);
          real dof_load4C31#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2E);
          real dof_load4C32#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2F);
          int mulRes4C35#3 = IMul(ilit4370,idx4C08);
          int addRes4C37#1 = IAdd(ilit436A,mulRes4C35);
          int addRes4C38#1 = IAdd(ilit436D,mulRes4C35);
          real dof_load4C39#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C35);
          real dof_load4C3A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C37);
          real dof_load4C3B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C38);
          int mulRes4C3E#3 = IMul(ilit4370,idx4C0B);
          int addRes4C40#1 = IAdd(ilit436A,mulRes4C3E);
          int addRes4C41#1 = IAdd(ilit436D,mulRes4C3E);
          real dof_load4C42#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C3E);
          real dof_load4C43#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C40);
          real dof_load4C44#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C41);
          real varAcc4C72#5 = VIndex<3,0>(_t4BF7);
          real varAcc4C73#4 = VIndex<3,1>(_t4BF7);
          real varAcc4C74#4 = VIndex<3,2>(_t4BF7);
          real prod4C79#4 = RMul(varAcc4C72,prod43DF);
          real prod4C7B#2 = RMul(varAcc4C73,one43DE);
          real prod4C7C#4 = RMul(one43DE,prod4C7B);
          real prod4C7E#2 = RMul(one43DE,varAcc4C74);
          real prod4C7F#4 = RMul(one43DE,prod4C7E);
          real mult4C82#2 = RMul(coeff43DC,prod4C7F);
          real mult4C83#2 = RMul(coeff43DC,prod4C7C);
          real mult4C84#2 = RMul(coeff43DC,prod4C79);
          real sum4C85#1 = RAdd(mult4C83,mult4C84);
          real sum4C86#1 = RAdd(mult4C82,sum4C85);
          real sum4C87#3 = RAdd(mult43E8,sum4C86);
          real basisEval4C89#3 = RMul(one43DE,prod4C79);
          real basisEval4C8A#3 = RMul(one43DE,prod4C7C);
          real basisEval4C8B#3 = RMul(one43DE,prod4C7F);
          real r4CAC#1 = RMul(dof_load4C27,sum4C87);
          real r4CAF#1 = RMul(dof_load4C30,basisEval4C89);
          real r4CB2#1 = RMul(dof_load4C39,basisEval4C8A);
          real r4CB5#1 = RMul(dof_load4C42,basisEval4C8B);
          real r4CB6#1 = RAdd(r4CAC,r4CAF);
          real r4CB7#1 = RAdd(r4CB6,r4CB2);
          real r4CB8#1 = RAdd(r4CB7,r4CB5);
          real r4CBA#1 = RMul(dof_load4C28,sum4C87);
          real r4CBC#1 = RMul(dof_load4C31,basisEval4C89);
          real r4CBE#1 = RMul(dof_load4C3A,basisEval4C8A);
          real r4CC0#1 = RMul(dof_load4C43,basisEval4C8B);
          real r4CC1#1 = RAdd(r4CBA,r4CBC);
          real r4CC2#1 = RAdd(r4CC1,r4CBE);
          real r4CC3#1 = RAdd(r4CC2,r4CC0);
          real r4CC5#1 = RMul(dof_load4C29,sum4C87);
          real r4CC7#1 = RMul(dof_load4C32,basisEval4C89);
          real r4CC9#1 = RMul(dof_load4C3B,basisEval4C8A);
          real r4CCB#1 = RMul(dof_load4C44,basisEval4C8B);
          real r4CCC#1 = RAdd(r4CC5,r4CC7);
          real r4CCD#1 = RAdd(r4CCC,r4CC9);
          real r4CCE#1 = RAdd(r4CCD,r4CCB);
          tensor[3] _t4CA9#2 = <tensor[3]>[r4CB8,r4CC3,r4CCE];
          tensor[3] op1_e3_l_394D43#2 = VSub<3>(_t4CA9,altIntermed4BBB);
          real op1_e3_l_414D46#1 = VDot<3>(op1_e3_l_394D43,op1_e3_l_394D43);
          real _t4D49#1 = Sqrt(op1_e3_l_414D46);
          bool _t4D4C#1 = GT<real>(_t4D49,_t44BF);
          if _t4D4C then goto ASSIGN4D50 else goto ASSIGN534C
        ASSIGN4D50:  preds = [COND4D4E]
          string _t4D4F#1 = "ERG:Error in tracing 2: At step:";
          string _t4D51#1 = " with particle:";
          string _t4D53#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t4D4F,step42FC,_t4D51,startPos4302,_t4D53);
          string _t4D56#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t4D56,_t4CA9,altIntermed4BBB,_t4D53);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN4D5C
        JOIN4D5C:  preds = [*STABILIZE4D5B,MASSIGN5351]
          if _t4BBE then goto ASSIGN4D5F else goto ASSIGN5345
        ASSIGN4D5F:  preds = [COND4D5D]
          femData:MeshCell c4D5E#1 = LoadFem<femData:MeshCell>(_t4BFB,_t4BF9);
          int _t4D60#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c4D5E);
          femData:FuncCell _t4D62#2 = LoadFem<femData:FuncCell>(data42EC,_t4D60);
          femData:FemFunc _t4D64#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t4D62);
          femData:Space _t4D66#10 = ExtractFem<femData:Space,femData:FemFunc>(_t4D64);
          int _t4D68#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t4D62);
          int mulRes4D6C#10 = IMul(_t4D68,ilit4917);
          int idx4D6F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,mulRes4D6C);
          int addRes4D71#1 = IAdd(mulRes4D6C,ilit436A);
          int idx4D72#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D71);
          int addRes4D74#1 = IAdd(mulRes4D6C,ilit436D);
          int idx4D75#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D74);
          int addRes4D77#1 = IAdd(mulRes4D6C,ilit4370);
          int idx4D78#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D77);
          int addRes4D7A#1 = IAdd(mulRes4D6C,ilit4365);
          int idx4D7B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D7A);
          int addRes4D7D#1 = IAdd(mulRes4D6C,ilit4928);
          int idx4D7E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D7D);
          int addRes4D80#1 = IAdd(mulRes4D6C,ilit492B);
          int idx4D81#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D80);
          int addRes4D83#1 = IAdd(mulRes4D6C,ilit492E);
          int idx4D84#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D83);
          int addRes4D86#1 = IAdd(mulRes4D6C,ilit4931);
          int idx4D87#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D86);
          int addRes4D89#1 = IAdd(mulRes4D6C,ilit4934);
          int idx4D8A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D89);
          int mulRes4DB2#3 = IMul(ilit4370,idx4D6F);
          int addRes4DB5#1 = IAdd(ilit436A,mulRes4DB2);
          int addRes4DB7#1 = IAdd(ilit436D,mulRes4DB2);
          real dof_load4DB8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DB2);
          real dof_load4DB9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB5);
          real dof_load4DBA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB7);
          int mulRes4DBD#3 = IMul(ilit4370,idx4D72);
          int addRes4DBF#1 = IAdd(ilit436A,mulRes4DBD);
          int addRes4DC0#1 = IAdd(ilit436D,mulRes4DBD);
          real dof_load4DC1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DBD);
          real dof_load4DC2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DBF);
          real dof_load4DC3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC0);
          int mulRes4DC6#3 = IMul(ilit4370,idx4D75);
          int addRes4DC8#1 = IAdd(ilit436A,mulRes4DC6);
          int addRes4DC9#1 = IAdd(ilit436D,mulRes4DC6);
          real dof_load4DCA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DC6);
          real dof_load4DCB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC8);
          real dof_load4DCC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC9);
          int mulRes4DCF#3 = IMul(ilit4370,idx4D78);
          int addRes4DD1#1 = IAdd(ilit436A,mulRes4DCF);
          int addRes4DD2#1 = IAdd(ilit436D,mulRes4DCF);
          real dof_load4DD3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DCF);
          real dof_load4DD4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD1);
          real dof_load4DD5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD2);
          int mulRes4DD9#3 = IMul(ilit4370,idx4D7B);
          int addRes4DDB#1 = IAdd(ilit436A,mulRes4DD9);
          int addRes4DDC#1 = IAdd(ilit436D,mulRes4DD9);
          real dof_load4DDD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DD9);
          real dof_load4DDE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDB);
          real dof_load4DDF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDC);
          int mulRes4DE3#3 = IMul(ilit4370,idx4D7E);
          int addRes4DE5#1 = IAdd(ilit436A,mulRes4DE3);
          int addRes4DE6#1 = IAdd(ilit436D,mulRes4DE3);
          real dof_load4DE7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DE3);
          real dof_load4DE8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE5);
          real dof_load4DE9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE6);
          int mulRes4DED#3 = IMul(ilit4370,idx4D81);
          int addRes4DEF#1 = IAdd(ilit436A,mulRes4DED);
          int addRes4DF0#1 = IAdd(ilit436D,mulRes4DED);
          real dof_load4DF1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DED);
          real dof_load4DF2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DEF);
          real dof_load4DF3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF0);
          int mulRes4DF7#3 = IMul(ilit4370,idx4D84);
          int addRes4DF9#1 = IAdd(ilit436A,mulRes4DF7);
          int addRes4DFA#1 = IAdd(ilit436D,mulRes4DF7);
          real dof_load4DFB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DF7);
          real dof_load4DFC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF9);
          real dof_load4DFD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DFA);
          int mulRes4E01#3 = IMul(ilit4370,idx4D87);
          int addRes4E03#1 = IAdd(ilit436A,mulRes4E01);
          int addRes4E04#1 = IAdd(ilit436D,mulRes4E01);
          real dof_load4E05#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4E01);
          real dof_load4E06#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E03);
          real dof_load4E07#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E04);
          int mulRes4E0B#3 = IMul(ilit4370,idx4D8A);
          int addRes4E0D#1 = IAdd(ilit436A,mulRes4E0B);
          int addRes4E0E#1 = IAdd(ilit436D,mulRes4E0B);
          real dof_load4E0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4E0B);
          real dof_load4E10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0D);
          real dof_load4E11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0E);
          real prod24E80#1 = RMul(varAcc4C72,varAcc4C72);
          real prod4E83#2 = RMul(prod24E80,prod43DF);
          real prod4E87#2 = RMul(varAcc4C72,prod4C7B);
          real prod4E8A#2 = RMul(varAcc4C72,prod4C7E);
          real prod24E8D#1 = RMul(varAcc4C73,varAcc4C73);
          real prod4E8E#1 = RMul(prod24E8D,one43DE);
          real prod4E8F#2 = RMul(one43DE,prod4E8E);
          real prod4E90#1 = RMul(varAcc4C73,varAcc4C74);
          real prod4E91#2 = RMul(one43DE,prod4E90);
          real prod24E93#1 = RMul(varAcc4C74,varAcc4C74);
          real prod4E94#1 = RMul(one43DE,prod24E93);
          real prod4E95#2 = RMul(one43DE,prod4E94);
          real mult4E99#1 = RMul(coeff4A37,prod4C7F);
          real mult4E9A#2 = RMul(coeff4A2A,prod4E95);
          real mult4E9B#1 = RMul(coeff4A37,prod4C7C);
          real mult4E9C#4 = RMul(coeff4A30,prod4E91);
          real mult4E9D#2 = RMul(coeff4A2A,prod4E8F);
          real mult4E9E#1 = RMul(coeff4A37,prod4C79);
          real mult4E9F#4 = RMul(coeff4A30,prod4E8A);
          real mult4EA0#4 = RMul(coeff4A30,prod4E87);
          real mult4EA1#2 = RMul(coeff4A2A,prod4E83);
          real sum4EA2#1 = RAdd(mult4EA0,mult4EA1);
          real sum4EA3#1 = RAdd(mult4E9F,sum4EA2);
          real sum4EA4#1 = RAdd(mult4E9E,sum4EA3);
          real sum4EA5#1 = RAdd(mult4E9D,sum4EA4);
          real sum4EA6#1 = RAdd(mult4E9C,sum4EA5);
          real sum4EA7#1 = RAdd(mult4E9B,sum4EA6);
          real sum4EA8#1 = RAdd(mult4E9A,sum4EA7);
          real sum4EA9#1 = RAdd(mult4E99,sum4EA8);
          real sum4EAA#3 = RAdd(mult43E8,sum4EA9);
          real sum4EAE#3 = RAdd(mult4C84,mult4EA1);
          real sum4EB1#3 = RAdd(mult4C83,mult4E9D);
          real sum4EB4#3 = RAdd(mult4C82,mult4E9A);
          real mult4EB7#1 = RMul(coeff4A30,prod4C7F);
          real mult4EB8#1 = RMul(coeff4A62,prod4E95);
          real mult4EB9#2 = RMul(coeff4A62,prod4E91);
          real mult4EBA#2 = RMul(coeff4A62,prod4E8A);
          real sum4EBB#1 = RAdd(mult4EB9,mult4EBA);
          real sum4EBC#1 = RAdd(mult4EB8,sum4EBB);
          real sum4EBD#3 = RAdd(mult4EB7,sum4EBC);
          real mult4EBF#1 = RMul(coeff4A30,prod4C7C);
          real mult4EC0#1 = RMul(coeff4A62,prod4E8F);
          real mult4EC1#2 = RMul(coeff4A62,prod4E87);
          real sum4EC2#1 = RAdd(mult4EC0,mult4EC1);
          real sum4EC3#1 = RAdd(mult4EB9,sum4EC2);
          real sum4EC4#3 = RAdd(mult4EBF,sum4EC3);
          real mult4EC6#1 = RMul(coeff4A30,prod4C79);
          real mult4EC7#1 = RMul(coeff4A62,prod4E83);
          real sum4EC8#1 = RAdd(mult4EC1,mult4EC7);
          real sum4EC9#1 = RAdd(mult4EBA,sum4EC8);
          real sum4ECA#3 = RAdd(mult4EC6,sum4EC9);
          real r4F23#1 = RMul(dof_load4DB8,sum4EAA);
          real r4F26#1 = RMul(dof_load4DC1,sum4EAE);
          real r4F29#1 = RMul(dof_load4DCA,sum4EB1);
          real r4F2C#1 = RMul(dof_load4DD3,sum4EB4);
          real r4F2F#1 = RMul(dof_load4DDD,mult4E9C);
          real r4F32#1 = RMul(dof_load4DE7,mult4E9F);
          real r4F35#1 = RMul(dof_load4DF1,mult4EA0);
          real r4F38#1 = RMul(dof_load4DFB,sum4EBD);
          real r4F3B#1 = RMul(dof_load4E05,sum4EC4);
          real r4F3E#1 = RMul(dof_load4E0F,sum4ECA);
          real r4F3F#1 = RAdd(r4F23,r4F26);
          real r4F40#1 = RAdd(r4F3F,r4F29);
          real r4F41#1 = RAdd(r4F40,r4F2C);
          real r4F42#1 = RAdd(r4F41,r4F2F);
          real r4F43#1 = RAdd(r4F42,r4F32);
          real r4F44#1 = RAdd(r4F43,r4F35);
          real r4F45#1 = RAdd(r4F44,r4F38);
          real r4F46#1 = RAdd(r4F45,r4F3B);
          real r4F47#2 = RAdd(r4F46,r4F3E);
          real r4F49#1 = RMul(dof_load4DB9,sum4EAA);
          real r4F4B#1 = RMul(dof_load4DC2,sum4EAE);
          real r4F4D#1 = RMul(dof_load4DCB,sum4EB1);
          real r4F4F#1 = RMul(dof_load4DD4,sum4EB4);
          real r4F51#1 = RMul(dof_load4DDE,mult4E9C);
          real r4F53#1 = RMul(dof_load4DE8,mult4E9F);
          real r4F55#1 = RMul(dof_load4DF2,mult4EA0);
          real r4F57#1 = RMul(dof_load4DFC,sum4EBD);
          real r4F59#1 = RMul(dof_load4E06,sum4EC4);
          real r4F5B#1 = RMul(dof_load4E10,sum4ECA);
          real r4F5C#1 = RAdd(r4F49,r4F4B);
          real r4F5D#1 = RAdd(r4F5C,r4F4D);
          real r4F5E#1 = RAdd(r4F5D,r4F4F);
          real r4F5F#1 = RAdd(r4F5E,r4F51);
          real r4F60#1 = RAdd(r4F5F,r4F53);
          real r4F61#1 = RAdd(r4F60,r4F55);
          real r4F62#1 = RAdd(r4F61,r4F57);
          real r4F63#1 = RAdd(r4F62,r4F59);
          real r4F64#2 = RAdd(r4F63,r4F5B);
          real r4F66#1 = RMul(dof_load4DBA,sum4EAA);
          real r4F68#1 = RMul(dof_load4DC3,sum4EAE);
          real r4F6A#1 = RMul(dof_load4DCC,sum4EB1);
          real r4F6C#1 = RMul(dof_load4DD5,sum4EB4);
          real r4F6E#1 = RMul(dof_load4DDF,mult4E9C);
          real r4F70#1 = RMul(dof_load4DE9,mult4E9F);
          real r4F72#1 = RMul(dof_load4DF3,mult4EA0);
          real r4F74#1 = RMul(dof_load4DFD,sum4EBD);
          real r4F76#1 = RMul(dof_load4E07,sum4EC4);
          real r4F78#1 = RMul(dof_load4E11,sum4ECA);
          real r4F79#1 = RAdd(r4F66,r4F68);
          real r4F7A#1 = RAdd(r4F79,r4F6A);
          real r4F7B#1 = RAdd(r4F7A,r4F6C);
          real r4F7C#1 = RAdd(r4F7B,r4F6E);
          real r4F7D#1 = RAdd(r4F7C,r4F70);
          real r4F7E#1 = RAdd(r4F7D,r4F72);
          real r4F7F#1 = RAdd(r4F7E,r4F74);
          real r4F80#1 = RAdd(r4F7F,r4F76);
          real r4F81#2 = RAdd(r4F80,r4F78);
          tensor[3] probe_l_84F20#2 = <tensor[3]>[r4F47,r4F64,r4F81];
          real op1_e3_l_114FE5#1 = VDot<3>(probe_l_84F20,probe_l_84F20);
          real op1_e3_l_124FE8#1 = Sqrt(op1_e3_l_114FE5);
          real r4FED#3 = RDiv(one43DE,op1_e3_l_124FE8);
          real r4FEF#1 = RMul(r4FED,r4F47);
          real r4FF1#1 = RMul(r4FED,r4F64);
          real r4FF3#1 = RMul(r4FED,r4F81);
          tensor[3] _t4FEB#1 = <tensor[3]>[r4FEF,r4FF1,r4FF3];
          goto JOIN5000
        JOIN5000:  preds = [ASSIGN4FFD,ASSIGN534A]
          tensor[3] _t4FFE#1 = phi(_t4FEB,_t4FFF)
          tensor[3] up25001#4 = VScale<3>(stepSize42F0,_t4FFE);
          femData:MeshPos cPos5004#1 = fn_2FB47F0 (cPos42FE,up25001);
          femData:MeshPos callFindPos5006#2 = findPos3B9C (_t42E8,altIntermed4BBB);
          int intPos5008#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5006);
          tensor[3] refPos500A#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5006);
          int mulRes500E#10 = IMul(intPos5008,ilit4917);
          int idx5011#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,mulRes500E);
          int addRes5013#1 = IAdd(mulRes500E,ilit436A);
          int idx5014#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5013);
          int addRes5016#1 = IAdd(mulRes500E,ilit436D);
          int idx5017#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5016);
          int addRes5019#1 = IAdd(mulRes500E,ilit4370);
          int idx501A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5019);
          int addRes501C#1 = IAdd(mulRes500E,ilit4365);
          int idx501D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes501C);
          int addRes501F#1 = IAdd(mulRes500E,ilit4928);
          int idx5020#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes501F);
          int addRes5022#1 = IAdd(mulRes500E,ilit492B);
          int idx5023#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5022);
          int addRes5025#1 = IAdd(mulRes500E,ilit492E);
          int idx5026#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5025);
          int addRes5028#1 = IAdd(mulRes500E,ilit4931);
          int idx5029#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5028);
          int addRes502B#1 = IAdd(mulRes500E,ilit4934);
          int idx502C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes502B);
          int mulRes5054#3 = IMul(ilit4370,idx5011);
          int addRes5057#1 = IAdd(ilit436A,mulRes5054);
          int addRes5059#1 = IAdd(ilit436D,mulRes5054);
          real dof_load505A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5054);
          real dof_load505B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5057);
          real dof_load505C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5059);
          int mulRes505F#3 = IMul(ilit4370,idx5014);
          int addRes5061#1 = IAdd(ilit436A,mulRes505F);
          int addRes5062#1 = IAdd(ilit436D,mulRes505F);
          real dof_load5063#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes505F);
          real dof_load5064#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5061);
          real dof_load5065#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5062);
          int mulRes5068#3 = IMul(ilit4370,idx5017);
          int addRes506A#1 = IAdd(ilit436A,mulRes5068);
          int addRes506B#1 = IAdd(ilit436D,mulRes5068);
          real dof_load506C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5068);
          real dof_load506D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes506A);
          real dof_load506E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes506B);
          int mulRes5071#3 = IMul(ilit4370,idx501A);
          int addRes5073#1 = IAdd(ilit436A,mulRes5071);
          int addRes5074#1 = IAdd(ilit436D,mulRes5071);
          real dof_load5075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5071);
          real dof_load5076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5073);
          real dof_load5077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5074);
          int mulRes507B#3 = IMul(ilit4370,idx501D);
          int addRes507D#1 = IAdd(ilit436A,mulRes507B);
          int addRes507E#1 = IAdd(ilit436D,mulRes507B);
          real dof_load507F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes507B);
          real dof_load5080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507D);
          real dof_load5081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507E);
          int mulRes5085#3 = IMul(ilit4370,idx5020);
          int addRes5087#1 = IAdd(ilit436A,mulRes5085);
          int addRes5088#1 = IAdd(ilit436D,mulRes5085);
          real dof_load5089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5085);
          real dof_load508A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5087);
          real dof_load508B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5088);
          int mulRes508F#3 = IMul(ilit4370,idx5023);
          int addRes5091#1 = IAdd(ilit436A,mulRes508F);
          int addRes5092#1 = IAdd(ilit436D,mulRes508F);
          real dof_load5093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes508F);
          real dof_load5094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5091);
          real dof_load5095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5092);
          int mulRes5099#3 = IMul(ilit4370,idx5026);
          int addRes509B#1 = IAdd(ilit436A,mulRes5099);
          int addRes509C#1 = IAdd(ilit436D,mulRes5099);
          real dof_load509D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5099);
          real dof_load509E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509B);
          real dof_load509F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509C);
          int mulRes50A3#3 = IMul(ilit4370,idx5029);
          int addRes50A5#1 = IAdd(ilit436A,mulRes50A3);
          int addRes50A6#1 = IAdd(ilit436D,mulRes50A3);
          real dof_load50A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes50A3);
          real dof_load50A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A5);
          real dof_load50A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A6);
          int mulRes50AD#3 = IMul(ilit4370,idx502C);
          int addRes50AF#1 = IAdd(ilit436A,mulRes50AD);
          int addRes50B0#1 = IAdd(ilit436D,mulRes50AD);
          real dof_load50B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes50AD);
          real dof_load50B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50AF);
          real dof_load50B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50B0);
          real varAcc511D#5 = VIndex<3,0>(refPos500A);
          real varAcc511E#4 = VIndex<3,1>(refPos500A);
          real varAcc511F#4 = VIndex<3,2>(refPos500A);
          real prod25122#1 = RMul(varAcc511D,varAcc511D);
          real prod5125#2 = RMul(prod25122,prod43DF);
          real prod5128#2 = RMul(varAcc511E,one43DE);
          real prod5129#2 = RMul(varAcc511D,prod5128);
          real prod512B#2 = RMul(one43DE,varAcc511F);
          real prod512C#2 = RMul(varAcc511D,prod512B);
          real prod512E#3 = RMul(varAcc511D,prod43DF);
          real prod2512F#1 = RMul(varAcc511E,varAcc511E);
          real prod5130#1 = RMul(prod2512F,one43DE);
          real prod5131#2 = RMul(one43DE,prod5130);
          real prod5132#1 = RMul(varAcc511E,varAcc511F);
          real prod5133#2 = RMul(one43DE,prod5132);
          real prod5134#3 = RMul(one43DE,prod5128);
          real prod25135#1 = RMul(varAcc511F,varAcc511F);
          real prod5136#1 = RMul(one43DE,prod25135);
          real prod5137#2 = RMul(one43DE,prod5136);
          real prod5138#3 = RMul(one43DE,prod512B);
          real mult513B#1 = RMul(coeff4A37,prod5138);
          real mult513C#2 = RMul(coeff4A2A,prod5137);
          real mult513D#1 = RMul(coeff4A37,prod5134);
          real mult513E#4 = RMul(coeff4A30,prod5133);
          real mult513F#2 = RMul(coeff4A2A,prod5131);
          real mult5140#1 = RMul(coeff4A37,prod512E);
          real mult5141#4 = RMul(coeff4A30,prod512C);
          real mult5142#4 = RMul(coeff4A30,prod5129);
          real mult5143#2 = RMul(coeff4A2A,prod5125);
          real sum5144#1 = RAdd(mult5142,mult5143);
          real sum5145#1 = RAdd(mult5141,sum5144);
          real sum5146#1 = RAdd(mult5140,sum5145);
          real sum5147#1 = RAdd(mult513F,sum5146);
          real sum5148#1 = RAdd(mult513E,sum5147);
          real sum5149#1 = RAdd(mult513D,sum5148);
          real sum514A#1 = RAdd(mult513C,sum5149);
          real sum514B#1 = RAdd(mult513B,sum514A);
          real sum514C#3 = RAdd(mult43E8,sum514B);
          real mult514F#1 = RMul(coeff43DC,prod512E);
          real sum5150#3 = RAdd(mult514F,mult5143);
          real mult5152#1 = RMul(coeff43DC,prod5134);
          real sum5153#3 = RAdd(mult5152,mult513F);
          real mult5155#1 = RMul(coeff43DC,prod5138);
          real sum5156#3 = RAdd(mult5155,mult513C);
          real mult5159#1 = RMul(coeff4A30,prod5138);
          real mult515A#1 = RMul(coeff4A62,prod5137);
          real mult515B#2 = RMul(coeff4A62,prod5133);
          real mult515C#2 = RMul(coeff4A62,prod512C);
          real sum515D#1 = RAdd(mult515B,mult515C);
          real sum515E#1 = RAdd(mult515A,sum515D);
          real sum515F#3 = RAdd(mult5159,sum515E);
          real mult5161#1 = RMul(coeff4A30,prod5134);
          real mult5162#1 = RMul(coeff4A62,prod5131);
          real mult5163#2 = RMul(coeff4A62,prod5129);
          real sum5164#1 = RAdd(mult5162,mult5163);
          real sum5165#1 = RAdd(mult515B,sum5164);
          real sum5166#3 = RAdd(mult5161,sum5165);
          real mult5168#1 = RMul(coeff4A30,prod512E);
          real mult5169#1 = RMul(coeff4A62,prod5125);
          real sum516A#1 = RAdd(mult5163,mult5169);
          real sum516B#1 = RAdd(mult515C,sum516A);
          real sum516C#3 = RAdd(mult5168,sum516B);
          real r51C5#1 = RMul(dof_load505A,sum514C);
          real r51C8#1 = RMul(dof_load5063,sum5150);
          real r51CB#1 = RMul(dof_load506C,sum5153);
          real r51CE#1 = RMul(dof_load5075,sum5156);
          real r51D1#1 = RMul(dof_load507F,mult513E);
          real r51D4#1 = RMul(dof_load5089,mult5141);
          real r51D7#1 = RMul(dof_load5093,mult5142);
          real r51DA#1 = RMul(dof_load509D,sum515F);
          real r51DD#1 = RMul(dof_load50A7,sum5166);
          real r51E0#1 = RMul(dof_load50B1,sum516C);
          real r51E1#1 = RAdd(r51C5,r51C8);
          real r51E2#1 = RAdd(r51E1,r51CB);
          real r51E3#1 = RAdd(r51E2,r51CE);
          real r51E4#1 = RAdd(r51E3,r51D1);
          real r51E5#1 = RAdd(r51E4,r51D4);
          real r51E6#1 = RAdd(r51E5,r51D7);
          real r51E7#1 = RAdd(r51E6,r51DA);
          real r51E8#1 = RAdd(r51E7,r51DD);
          real r51E9#1 = RAdd(r51E8,r51E0);
          real r51EB#1 = RMul(dof_load505B,sum514C);
          real r51ED#1 = RMul(dof_load5064,sum5150);
          real r51EF#1 = RMul(dof_load506D,sum5153);
          real r51F1#1 = RMul(dof_load5076,sum5156);
          real r51F3#1 = RMul(dof_load5080,mult513E);
          real r51F5#1 = RMul(dof_load508A,mult5141);
          real r51F7#1 = RMul(dof_load5094,mult5142);
          real r51F9#1 = RMul(dof_load509E,sum515F);
          real r51FB#1 = RMul(dof_load50A8,sum5166);
          real r51FD#1 = RMul(dof_load50B2,sum516C);
          real r51FE#1 = RAdd(r51EB,r51ED);
          real r51FF#1 = RAdd(r51FE,r51EF);
          real r5200#1 = RAdd(r51FF,r51F1);
          real r5201#1 = RAdd(r5200,r51F3);
          real r5202#1 = RAdd(r5201,r51F5);
          real r5203#1 = RAdd(r5202,r51F7);
          real r5204#1 = RAdd(r5203,r51F9);
          real r5205#1 = RAdd(r5204,r51FB);
          real r5206#1 = RAdd(r5205,r51FD);
          real r5208#1 = RMul(dof_load505C,sum514C);
          real r520A#1 = RMul(dof_load5065,sum5150);
          real r520C#1 = RMul(dof_load506E,sum5153);
          real r520E#1 = RMul(dof_load5077,sum5156);
          real r5210#1 = RMul(dof_load5081,mult513E);
          real r5212#1 = RMul(dof_load508B,mult5141);
          real r5214#1 = RMul(dof_load5095,mult5142);
          real r5216#1 = RMul(dof_load509F,sum515F);
          real r5218#1 = RMul(dof_load50A9,sum5166);
          real r521A#1 = RMul(dof_load50B3,sum516C);
          real r521B#1 = RAdd(r5208,r520A);
          real r521C#1 = RAdd(r521B,r520C);
          real r521D#1 = RAdd(r521C,r520E);
          real r521E#1 = RAdd(r521D,r5210);
          real r521F#1 = RAdd(r521E,r5212);
          real r5220#1 = RAdd(r521F,r5214);
          real r5221#1 = RAdd(r5220,r5216);
          real r5222#1 = RAdd(r5221,r5218);
          real r5223#1 = RAdd(r5222,r521A);
          tensor[3] compositionl51C2#3 = <tensor[3]>[r51E9,r5206,r5223];
          real op1_e3_l_195287#1 = VDot<3>(compositionl51C2,compositionl51C2);
          tensor[3] op1_e3_l_20528A#3 = VScale<3>(stepSize42F0,compositionl51C2);
          real op1_e3_l_21528D#1 = Sqrt(op1_e3_l_195287);
          real r5292#3 = RDiv(one43DE,op1_e3_l_21528D);
          real r5293#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_20528A);
          real r5294#1 = RMul(r5292,r5293);
          real r5295#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_20528A);
          real r5296#1 = RMul(r5292,r5295);
          real r5297#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_20528A);
          real r5298#1 = RMul(r5292,r5297);
          tensor[3] op1_e3_l_225290#3 = <tensor[3]>[r5294,r5296,r5298];
          tensor[3] altCPos52A3#1 = VAdd<3>(altCPos4300,op1_e3_l_225290);
          int step52A8#1 = IAdd(step42FC,ilit436A);
          tensor[3] op1_e3_l_4952D1#3 = VSub<3>(altIntermed4BBB,center42F6);
          real vdot52D6#1 = VDot<3>(projParam479F,op1_e3_l_4952D1);
          real vdot52D8#1 = VDot<3>(projParam47A1,op1_e3_l_4952D1);
          real vdot52DA#1 = VDot<3>(projParam47A3,op1_e3_l_4952D1);
          tensor[3] op1_e3_l_5052D4#3 = <tensor[3]>[vdot52D6,vdot52D8,vdot52DA];
          real op1_e3_l_7152E3#1 = VDot<3>(op1_e3_l_5052D4,op1_e3_l_5052D4);
          tensor[3] op1_e3_l_7252E6#3 = VScale<3>(stepSize42F0,op1_e3_l_5052D4);
          real op1_e3_l_7352E9#1 = Sqrt(op1_e3_l_7152E3);
          real r52EE#3 = RDiv(one43DE,op1_e3_l_7352E9);
          real r52EF#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_7252E6);
          real r52F0#1 = RMul(r52EE,r52EF);
          real r52F1#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_7252E6);
          real r52F2#1 = RMul(r52EE,r52F1);
          real r52F3#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_7252E6);
          real r52F4#1 = RMul(r52EE,r52F3);
          tensor[3] op1_e3_l_7552EC#1 = <tensor[3]>[r52F0,r52F2,r52F4];
          tensor[3] op1_e3_l_11152FF#2 = VSub<3>(up25001,op1_e3_l_7552EC);
          real op1_e3_l_1135302#1 = VDot<3>(op1_e3_l_11152FF,op1_e3_l_11152FF);
          real _t5305#2 = Sqrt(op1_e3_l_1135302);
          bool _t5308#1 = GT<real>(_t5305,_t44BF);
          if _t5308 then goto ASSIGN530C else goto ASSIGN533A
        ASSIGN530C:  preds = [COND530A]
          bool _t530B#1 = true;
          goto JOIN530F
        JOIN530F:  preds = [ASSIGN530C,ASSIGN5343]
          bool _t530D#1 = phi(_t530B,_t530E)
          if _t530D then goto ASSIGN5312 else goto JOIN5331
        ASSIGN5312:  preds = [COND5310]
          string _t5311#1 = "ERG:Error in evaluation on pos 2:";
          string _t5313#3 = "\n";
          Print<[string,tensor[3],string]>(_t5311,startPos4302,_t5313);
          string _t5316#1 = "The errors are:";
          string _t5318#1 = " and ";
          tensor[3] op1_e3_l_33531A#2 = VSub<3>(up25001,op1_e3_l_225290);
          real op1_e3_l_35531D#1 = VDot<3>(op1_e3_l_33531A,op1_e3_l_33531A);
          real _t5320#1 = Sqrt(op1_e3_l_35531D);
          Print<[string,real,string,real,string]>(_t5316,_t5305,_t5318,_t5320,_t5313);
          string _t5324#1 = "The cells are:";
          femData:MeshCell _t5326#1 = LoadFem<femData:MeshCell>(_t4BFB,_t4BF9);
          string _t5328#1 = " vs ";
          femData:Mesh _t532A#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4BC0);
          int _t532C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4BC0);
          femData:MeshCell _t532E#1 = LoadFem<femData:MeshCell>(_t532A,_t532C);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t5324,_t5326,_t5328,_t532E,_t5313);
          goto JOIN5331
        JOIN5331:  preds = [MASSIGN5330,COND5310]
          self.stream = stream4461;
          self.newStream = newStream4467;
          self.step = step52A8;
          self.cPos = cPos5004;
          self.altCPos = altCPos52A3;
          active
        ASSIGN533A:  preds = [COND530A]
          tensor[3] op1_e3_l_335338#2 = VSub<3>(up25001,op1_e3_l_225290);
          real op1_e3_l_35533B#1 = VDot<3>(op1_e3_l_335338,op1_e3_l_335338);
          real _t533E#1 = Sqrt(op1_e3_l_35533B);
          real _t5341#1 = 0.1e-4;
          bool _t530E#1 = GT<real>(_t533E,_t5341);
          goto JOIN530F
        ASSIGN5345:  preds = [COND4D5D]
          string _t5344#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t5344);
          real realLit5347#3 = 0.e0;
          tensor[3] _t4FFF#1 = <tensor[3]>[realLit5347,realLit5347,realLit5347];
          goto JOIN5000
        ASSIGN534C:  preds = [COND4D4E]
          string _t534B#1 = "fine in cell 2:";
          femData:MeshCell _t534D#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t534F#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t534B,_t534D,_t534F);
          goto JOIN4D5C
        ASSIGN5352:  preds = [COND4BE3]
          bool _t4BE7#1 = BNot(_t4BC2);
          goto JOIN4BE8
        ASSIGN5354:  preds = [COND47E2]
          femData:MeshPos callFindPos5353#2 = findPos3B9C (_t42E8,altCPos4300);
          int intPos5355#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5353);
          tensor[3] refPos5357#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5353);
          int ilit535A#1 = 10;
          int mulRes535B#10 = IMul(intPos5355,ilit535A);
          int idx535E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,mulRes535B);
          int addRes5360#1 = IAdd(mulRes535B,ilit436A);
          int idx5361#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5360);
          int addRes5363#1 = IAdd(mulRes535B,ilit436D);
          int idx5364#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5363);
          int addRes5366#1 = IAdd(mulRes535B,ilit4370);
          int idx5367#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5366);
          int addRes5369#1 = IAdd(mulRes535B,ilit4365);
          int idx536A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5369);
          int ilit536B#1 = 5;
          int addRes536C#1 = IAdd(mulRes535B,ilit536B);
          int idx536D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes536C);
          int ilit536E#1 = 6;
          int addRes536F#1 = IAdd(mulRes535B,ilit536E);
          int idx5370#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes536F);
          int ilit5371#1 = 7;
          int addRes5372#1 = IAdd(mulRes535B,ilit5371);
          int idx5373#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5372);
          int ilit5374#1 = 8;
          int addRes5375#1 = IAdd(mulRes535B,ilit5374);
          int idx5376#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5375);
          int ilit5377#1 = 9;
          int addRes5378#1 = IAdd(mulRes535B,ilit5377);
          int idx5379#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5378);
          int mulRes53A1#3 = IMul(ilit4370,idx535E);
          int addRes53A4#1 = IAdd(ilit436A,mulRes53A1);
          int addRes53A6#1 = IAdd(ilit436D,mulRes53A1);
          real dof_load53A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53A1);
          real dof_load53A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A4);
          real dof_load53A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A6);
          int mulRes53AC#3 = IMul(ilit4370,idx5361);
          int addRes53AE#1 = IAdd(ilit436A,mulRes53AC);
          int addRes53AF#1 = IAdd(ilit436D,mulRes53AC);
          real dof_load53B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53AC);
          real dof_load53B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AE);
          real dof_load53B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AF);
          int mulRes53B5#3 = IMul(ilit4370,idx5364);
          int addRes53B7#1 = IAdd(ilit436A,mulRes53B5);
          int addRes53B8#1 = IAdd(ilit436D,mulRes53B5);
          real dof_load53B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53B5);
          real dof_load53BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B7);
          real dof_load53BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B8);
          int mulRes53BE#3 = IMul(ilit4370,idx5367);
          int addRes53C0#1 = IAdd(ilit436A,mulRes53BE);
          int addRes53C1#1 = IAdd(ilit436D,mulRes53BE);
          real dof_load53C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53BE);
          real dof_load53C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C0);
          real dof_load53C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C1);
          int mulRes53C8#3 = IMul(ilit4370,idx536A);
          int addRes53CA#1 = IAdd(ilit436A,mulRes53C8);
          int addRes53CB#1 = IAdd(ilit436D,mulRes53C8);
          real dof_load53CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53C8);
          real dof_load53CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53CA);
          real dof_load53CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53CB);
          int mulRes53D2#3 = IMul(ilit4370,idx536D);
          int addRes53D4#1 = IAdd(ilit436A,mulRes53D2);
          int addRes53D5#1 = IAdd(ilit436D,mulRes53D2);
          real dof_load53D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53D2);
          real dof_load53D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D4);
          real dof_load53D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D5);
          int mulRes53DC#3 = IMul(ilit4370,idx5370);
          int addRes53DE#1 = IAdd(ilit436A,mulRes53DC);
          int addRes53DF#1 = IAdd(ilit436D,mulRes53DC);
          real dof_load53E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53DC);
          real dof_load53E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DE);
          real dof_load53E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DF);
          int mulRes53E6#3 = IMul(ilit4370,idx5373);
          int addRes53E8#1 = IAdd(ilit436A,mulRes53E6);
          int addRes53E9#1 = IAdd(ilit436D,mulRes53E6);
          real dof_load53EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53E6);
          real dof_load53EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E8);
          real dof_load53EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E9);
          int mulRes53F0#3 = IMul(ilit4370,idx5376);
          int addRes53F2#1 = IAdd(ilit436A,mulRes53F0);
          int addRes53F3#1 = IAdd(ilit436D,mulRes53F0);
          real dof_load53F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53F0);
          real dof_load53F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F2);
          real dof_load53F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F3);
          int mulRes53FA#3 = IMul(ilit4370,idx5379);
          int addRes53FC#1 = IAdd(ilit436A,mulRes53FA);
          int addRes53FD#1 = IAdd(ilit436D,mulRes53FA);
          real dof_load53FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53FA);
          real dof_load53FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FC);
          real dof_load5400#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FD);
          real varAcc546A#5 = VIndex<3,0>(refPos5357);
          real varAcc546B#4 = VIndex<3,1>(refPos5357);
          real varAcc546C#4 = VIndex<3,2>(refPos5357);
          real coeff546D#3 = 0.2e1;
          real prod2546F#1 = RMul(varAcc546A,varAcc546A);
          real prod5472#2 = RMul(prod2546F,prod43DF);
          real coeff5473#6 = 0.4e1;
          real prod5475#2 = RMul(varAcc546B,one43DE);
          real prod5476#2 = RMul(varAcc546A,prod5475);
          real prod5478#2 = RMul(one43DE,varAcc546C);
          real prod5479#2 = RMul(varAcc546A,prod5478);
          real coeff547A#3 = -0.3e1;
          real prod547B#3 = RMul(varAcc546A,prod43DF);
          real prod2547C#1 = RMul(varAcc546B,varAcc546B);
          real prod547D#1 = RMul(prod2547C,one43DE);
          real prod547E#2 = RMul(one43DE,prod547D);
          real prod547F#1 = RMul(varAcc546B,varAcc546C);
          real prod5480#2 = RMul(one43DE,prod547F);
          real prod5481#3 = RMul(one43DE,prod5475);
          real prod25482#1 = RMul(varAcc546C,varAcc546C);
          real prod5483#1 = RMul(one43DE,prod25482);
          real prod5484#2 = RMul(one43DE,prod5483);
          real prod5485#3 = RMul(one43DE,prod5478);
          real mult5488#1 = RMul(coeff547A,prod5485);
          real mult5489#2 = RMul(coeff546D,prod5484);
          real mult548A#1 = RMul(coeff547A,prod5481);
          real mult548B#4 = RMul(coeff5473,prod5480);
          real mult548C#2 = RMul(coeff546D,prod547E);
          real mult548D#1 = RMul(coeff547A,prod547B);
          real mult548E#4 = RMul(coeff5473,prod5479);
          real mult548F#4 = RMul(coeff5473,prod5476);
          real mult5490#2 = RMul(coeff546D,prod5472);
          real sum5491#1 = RAdd(mult548F,mult5490);
          real sum5492#1 = RAdd(mult548E,sum5491);
          real sum5493#1 = RAdd(mult548D,sum5492);
          real sum5494#1 = RAdd(mult548C,sum5493);
          real sum5495#1 = RAdd(mult548B,sum5494);
          real sum5496#1 = RAdd(mult548A,sum5495);
          real sum5497#1 = RAdd(mult5489,sum5496);
          real sum5498#1 = RAdd(mult5488,sum5497);
          real sum5499#3 = RAdd(mult43E8,sum5498);
          real mult549C#1 = RMul(coeff43DC,prod547B);
          real sum549D#3 = RAdd(mult549C,mult5490);
          real mult549F#1 = RMul(coeff43DC,prod5481);
          real sum54A0#3 = RAdd(mult549F,mult548C);
          real mult54A2#1 = RMul(coeff43DC,prod5485);
          real sum54A3#3 = RAdd(mult54A2,mult5489);
          real coeff54A5#6 = -0.4e1;
          real mult54A6#1 = RMul(coeff5473,prod5485);
          real mult54A7#1 = RMul(coeff54A5,prod5484);
          real mult54A8#2 = RMul(coeff54A5,prod5480);
          real mult54A9#2 = RMul(coeff54A5,prod5479);
          real sum54AA#1 = RAdd(mult54A8,mult54A9);
          real sum54AB#1 = RAdd(mult54A7,sum54AA);
          real sum54AC#3 = RAdd(mult54A6,sum54AB);
          real mult54AE#1 = RMul(coeff5473,prod5481);
          real mult54AF#1 = RMul(coeff54A5,prod547E);
          real mult54B0#2 = RMul(coeff54A5,prod5476);
          real sum54B1#1 = RAdd(mult54AF,mult54B0);
          real sum54B2#1 = RAdd(mult54A8,sum54B1);
          real sum54B3#3 = RAdd(mult54AE,sum54B2);
          real mult54B5#1 = RMul(coeff5473,prod547B);
          real mult54B6#1 = RMul(coeff54A5,prod5472);
          real sum54B7#1 = RAdd(mult54B0,mult54B6);
          real sum54B8#1 = RAdd(mult54A9,sum54B7);
          real sum54B9#3 = RAdd(mult54B5,sum54B8);
          real r5512#1 = RMul(dof_load53A7,sum5499);
          real r5515#1 = RMul(dof_load53B0,sum549D);
          real r5518#1 = RMul(dof_load53B9,sum54A0);
          real r551B#1 = RMul(dof_load53C2,sum54A3);
          real r551E#1 = RMul(dof_load53CC,mult548B);
          real r5521#1 = RMul(dof_load53D6,mult548E);
          real r5524#1 = RMul(dof_load53E0,mult548F);
          real r5527#1 = RMul(dof_load53EA,sum54AC);
          real r552A#1 = RMul(dof_load53F4,sum54B3);
          real r552D#1 = RMul(dof_load53FE,sum54B9);
          real r552E#1 = RAdd(r5512,r5515);
          real r552F#1 = RAdd(r552E,r5518);
          real r5530#1 = RAdd(r552F,r551B);
          real r5531#1 = RAdd(r5530,r551E);
          real r5532#1 = RAdd(r5531,r5521);
          real r5533#1 = RAdd(r5532,r5524);
          real r5534#1 = RAdd(r5533,r5527);
          real r5535#1 = RAdd(r5534,r552A);
          real r5536#2 = RAdd(r5535,r552D);
          real r5538#1 = RMul(dof_load53A8,sum5499);
          real r553A#1 = RMul(dof_load53B1,sum549D);
          real r553C#1 = RMul(dof_load53BA,sum54A0);
          real r553E#1 = RMul(dof_load53C3,sum54A3);
          real r5540#1 = RMul(dof_load53CD,mult548B);
          real r5542#1 = RMul(dof_load53D7,mult548E);
          real r5544#1 = RMul(dof_load53E1,mult548F);
          real r5546#1 = RMul(dof_load53EB,sum54AC);
          real r5548#1 = RMul(dof_load53F5,sum54B3);
          real r554A#1 = RMul(dof_load53FF,sum54B9);
          real r554B#1 = RAdd(r5538,r553A);
          real r554C#1 = RAdd(r554B,r553C);
          real r554D#1 = RAdd(r554C,r553E);
          real r554E#1 = RAdd(r554D,r5540);
          real r554F#1 = RAdd(r554E,r5542);
          real r5550#1 = RAdd(r554F,r5544);
          real r5551#1 = RAdd(r5550,r5546);
          real r5552#1 = RAdd(r5551,r5548);
          real r5553#2 = RAdd(r5552,r554A);
          real r5555#1 = RMul(dof_load53A9,sum5499);
          real r5557#1 = RMul(dof_load53B2,sum549D);
          real r5559#1 = RMul(dof_load53BB,sum54A0);
          real r555B#1 = RMul(dof_load53C4,sum54A3);
          real r555D#1 = RMul(dof_load53CE,mult548B);
          real r555F#1 = RMul(dof_load53D8,mult548E);
          real r5561#1 = RMul(dof_load53E2,mult548F);
          real r5563#1 = RMul(dof_load53EC,sum54AC);
          real r5565#1 = RMul(dof_load53F6,sum54B3);
          real r5567#1 = RMul(dof_load5400,sum54B9);
          real r5568#1 = RAdd(r5555,r5557);
          real r5569#1 = RAdd(r5568,r5559);
          real r556A#1 = RAdd(r5569,r555B);
          real r556B#1 = RAdd(r556A,r555D);
          real r556C#1 = RAdd(r556B,r555F);
          real r556D#1 = RAdd(r556C,r5561);
          real r556E#1 = RAdd(r556D,r5563);
          real r556F#1 = RAdd(r556E,r5565);
          real r5570#2 = RAdd(r556F,r5567);
          tensor[3] compositionl550F#2 = <tensor[3]>[r5536,r5553,r5570];
          real op1_e3_l_2255D4#1 = VDot<3>(compositionl550F,compositionl550F);
          real r55DA#1 = RMul(r478C,r5536);
          real r55DC#1 = RMul(r478C,r5553);
          real r55DE#1 = RMul(r478C,r5570);
          real op1_e3_l_2455E8#1 = Sqrt(op1_e3_l_2255D4);
          real r55ED#3 = RDiv(one43DE,op1_e3_l_2455E8);
          real r55EF#1 = RMul(r55ED,r55DA);
          real r55F1#1 = RMul(r55ED,r55DC);
          real r55F3#1 = RMul(r55ED,r55DE);
          tensor[3] op1_e3_l_2655EB#1 = <tensor[3]>[r55EF,r55F1,r55F3];
          tensor[3] op1_e3_l_3555FE#2 = VSub<3>(up1478A,op1_e3_l_2655EB);
          real op1_e3_l_375601#1 = VDot<3>(op1_e3_l_3555FE,op1_e3_l_3555FE);
          real _t5604#1 = Sqrt(op1_e3_l_375601);
          bool _t47E6#1 = GT<real>(_t5604,_t44BF);
          goto JOIN47E7
        ASSIGN5609:  preds = [COND44E6]
          string _t5608#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t5608);
          real realLit560B#3 = 0.e0;
          tensor[3] _t4788#1 = <tensor[3]>[realLit560B,realLit560B,realLit560B];
          goto JOIN4789
        ASSIGN5610:  preds = [COND44C3]
          string _t560F#1 = "fine in cell 1:";
          femData:MeshCell _t5611#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t5613#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t560F,_t5611,_t5613);
          goto JOIN44E3
        ASSIGN5617:  preds = [COND4346]
          bool _t5616#1 = BNot(_t4339);
          if _t5616 then goto ASSIGN561A else goto ASSIGN561D
        ASSIGN561A:  preds = [COND5618]
          bool _t5619#1 = true;
          goto JOIN561C
        JOIN561C:  preds = [ASSIGN561A,ASSIGN561D]
          bool _t434A#1 = phi(_t5619,_t561B)
          goto JOIN434B
        ASSIGN561D:  preds = [COND5618]
          bool _t561B#1 = EQ<int>(step42FC,stepMax42F2);
          goto JOIN561C
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY561E:  preds = []
      tensor[3][] startPoints561F#1 = globals.startPoints3B4A;
    FOREACH5622:  preds = [ASSIGN5620,NEXT5624]
      foreach (x5621 in startPoints561F) on exit goto RETURN5625
      new gg(x5621);
      goto FOREACH5622
    RETURN5625:  preds = [FOREACH5622]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData3B45 (meshData) = <no-default>
  input 0space0409_intermedateGlobal3B46 (space) = <no-default>
  input 0data040B_intermedateGlobal3B47 (data) = <no-default>
  input timeSteps3B48 (timeSteps) = <default>
  input timeEps3B49 (timeEps) = <default>
  input startPoints3B4A (startPoints) = <no-default>
  input stepSize3B4B (stepSize) = <default>
  input stepMax3B4C (stepMax) = <default>
  input M3B4D (M) = <no-default>
  input center3B4E (center) = <no-default>
  global femData:FemFunc data3B4F
  global femData:Mesh _t3B50
  global femData:Space _tX3B51
## functions
  function femData:MeshPos findPos3B9C (femData:Mesh mesh3B9D#19, tensor[3] pos3B9E#3) {
    ENTRY3B9F:  preds = []
      real _t3BA0#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn3BA2#1 = <tensor[3]>[_t3BA0,_t3BA0,_t3BA0];
      int newtonInt3BA4#1 = 0;
      int[] yayCells3BA6#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3B9D,pos3B9E);
    FOREACH3BA9:  preds = [ASSIGN3BA7,NEXT42DB]
      foreach (cellItter3BA8 in yayCells3BA6) on exit goto ASSIGN42DD
      int _t3BAA#1 = 16;
      int[] _t3BAC#1 = Range(newtonInt3BA4,_t3BAA);
    FOREACH3BAF:  preds = [ASSIGN3BAD,NEXT42DA]
      foreach (newtonItter3BAE in _t3BAC) on exit goto NEXT42DB
        tensor[3] xn417E#4 = phi(xn3BA2,xn4242)
      int ilit3BB1#1 = 4;
      int mulRes3BB2#4 = IMul(cellItter3BA8,ilit3BB1);
      int idx3BB5#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,mulRes3BB2);
      int ilit3BB6#5 = 1;
      int addRes3BB7#1 = IAdd(mulRes3BB2,ilit3BB6);
      int idx3BB8#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BB7);
      int ilit3BB9#5 = 2;
      int addRes3BBA#1 = IAdd(mulRes3BB2,ilit3BB9);
      int idx3BBB#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BBA);
      int ilit3BBC#5 = 3;
      int addRes3BBD#1 = IAdd(mulRes3BB2,ilit3BBC);
      int idx3BBE#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3B9D,addRes3BBD);
      int mulRes3BD4#3 = IMul(ilit3BBC,idx3BB5);
      int addRes3BD7#1 = IAdd(ilit3BB6,mulRes3BD4);
      int addRes3BD9#1 = IAdd(ilit3BB9,mulRes3BD4);
      real dof_load3BDA#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BD4);
      real dof_load3BDB#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD7);
      real dof_load3BDC#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BD9);
      int mulRes3BDF#3 = IMul(ilit3BBC,idx3BB8);
      int addRes3BE1#1 = IAdd(ilit3BB6,mulRes3BDF);
      int addRes3BE2#1 = IAdd(ilit3BB9,mulRes3BDF);
      real dof_load3BE3#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BDF);
      real dof_load3BE4#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE1);
      real dof_load3BE5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BE2);
      int mulRes3BE8#3 = IMul(ilit3BBC,idx3BBB);
      int addRes3BEA#1 = IAdd(ilit3BB6,mulRes3BE8);
      int addRes3BEB#1 = IAdd(ilit3BB9,mulRes3BE8);
      real dof_load3BEC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BE8);
      real dof_load3BED#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BEA);
      real dof_load3BEE#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BEB);
      int mulRes3BF1#3 = IMul(ilit3BBC,idx3BBE);
      int addRes3BF3#1 = IAdd(ilit3BB6,mulRes3BF1);
      int addRes3BF4#1 = IAdd(ilit3BB9,mulRes3BF1);
      real dof_load3BF5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,mulRes3BF1);
      real dof_load3BF6#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF3);
      real dof_load3BF7#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3B9D,addRes3BF4);
      real coeff3C28#22 = -0.1e1;
      real one3C29#33 = 0.1e1;
      real prod3C2A#2 = RMul(one3C29,one3C29);
      real prod3C2B#2 = RMul(one3C29,prod3C2A);
      real basisEval3C2C#3 = RMul(coeff3C28,prod3C2B);
      real basisEval3C2D#10 = RMul(one3C29,prod3C2B);
      real basisEval3C2E#45 = 0.e0;
      real r3C45#2 = RMul(dof_load3BDA,basisEval3C2C);
      real r3C48#1 = RMul(dof_load3BE3,basisEval3C2D);
      real r3C4B#2 = RMul(dof_load3BEC,basisEval3C2E);
      real r3C4E#2 = RMul(dof_load3BF5,basisEval3C2E);
      real r3C4F#1 = RAdd(r3C45,r3C48);
      real r3C50#1 = RAdd(r3C4F,r3C4B);
      real r3C51#13 = RAdd(r3C50,r3C4E);
      real r3C55#1 = RMul(dof_load3BE3,basisEval3C2E);
      real r3C57#1 = RMul(dof_load3BEC,basisEval3C2D);
      real r3C5A#2 = RAdd(r3C45,r3C55);
      real r3C5B#1 = RAdd(r3C5A,r3C57);
      real r3C5C#13 = RAdd(r3C5B,r3C4E);
      real r3C64#1 = RMul(dof_load3BF5,basisEval3C2D);
      real r3C66#1 = RAdd(r3C5A,r3C4B);
      real r3C67#12 = RAdd(r3C66,r3C64);
      real r3C6A#2 = RMul(dof_load3BDB,basisEval3C2C);
      real r3C6C#1 = RMul(dof_load3BE4,basisEval3C2D);
      real r3C6E#2 = RMul(dof_load3BED,basisEval3C2E);
      real r3C70#2 = RMul(dof_load3BF6,basisEval3C2E);
      real r3C71#1 = RAdd(r3C6A,r3C6C);
      real r3C72#1 = RAdd(r3C71,r3C6E);
      real r3C73#13 = RAdd(r3C72,r3C70);
      real r3C75#1 = RMul(dof_load3BE4,basisEval3C2E);
      real r3C76#1 = RMul(dof_load3BED,basisEval3C2D);
      real r3C78#2 = RAdd(r3C6A,r3C75);
      real r3C79#1 = RAdd(r3C78,r3C76);
      real r3C7A#13 = RAdd(r3C79,r3C70);
      real r3C7E#1 = RMul(dof_load3BF6,basisEval3C2D);
      real r3C80#1 = RAdd(r3C78,r3C6E);
      real r3C81#12 = RAdd(r3C80,r3C7E);
      real r3C84#2 = RMul(dof_load3BDC,basisEval3C2C);
      real r3C86#1 = RMul(dof_load3BE5,basisEval3C2D);
      real r3C88#2 = RMul(dof_load3BEE,basisEval3C2E);
      real r3C8A#2 = RMul(dof_load3BF7,basisEval3C2E);
      real r3C8B#1 = RAdd(r3C84,r3C86);
      real r3C8C#1 = RAdd(r3C8B,r3C88);
      real r3C8D#13 = RAdd(r3C8C,r3C8A);
      real r3C8F#1 = RMul(dof_load3BE5,basisEval3C2E);
      real r3C90#1 = RMul(dof_load3BEE,basisEval3C2D);
      real r3C92#2 = RAdd(r3C84,r3C8F);
      real r3C93#1 = RAdd(r3C92,r3C90);
      real r3C94#13 = RAdd(r3C93,r3C8A);
      real r3C98#1 = RMul(dof_load3BF7,basisEval3C2D);
      real r3C9A#1 = RAdd(r3C92,r3C88);
      real r3C9B#12 = RAdd(r3C9A,r3C98);
      real r3CFC#3 = RMul(basisEval3C2E,r3C51);
      real r3CFE#3 = RMul(basisEval3C2E,r3C73);
      real r3D00#5 = RMul(basisEval3C2E,r3C8D);
      real r3D01#3 = RAdd(r3CFC,r3CFE);
      real r3D02#9 = RAdd(r3D01,r3D00);
      real r3D04#3 = RMul(basisEval3C2E,r3C5C);
      real r3D06#3 = RMul(basisEval3C2E,r3C7A);
      real r3D08#5 = RMul(basisEval3C2E,r3C94);
      real r3D09#3 = RAdd(r3D04,r3D06);
      real r3D0A#9 = RAdd(r3D09,r3D08);
      real r3D0C#3 = RMul(basisEval3C2E,r3C67);
      real r3D0E#3 = RMul(basisEval3C2E,r3C81);
      real r3D10#5 = RMul(basisEval3C2E,r3C9B);
      real r3D11#3 = RAdd(r3D0C,r3D0E);
      real r3D12#12 = RAdd(r3D11,r3D10);
      real r3D15#1 = RMul(coeff3C28,r3C8D);
      real r3D16#3 = RAdd(r3D01,r3D15);
      real r3D17#1 = RMul(coeff3C28,r3C94);
      real r3D18#3 = RAdd(r3D09,r3D17);
      real r3D19#1 = RMul(coeff3C28,r3C9B);
      real r3D1A#4 = RAdd(r3D11,r3D19);
      real r3D1D#1 = RMul(one3C29,r3C73);
      real r3D1E#1 = RAdd(r3CFC,r3D1D);
      real r3D1F#3 = RAdd(r3D1E,r3D00);
      real r3D20#1 = RMul(one3C29,r3C7A);
      real r3D21#1 = RAdd(r3D04,r3D20);
      real r3D22#3 = RAdd(r3D21,r3D08);
      real r3D23#1 = RMul(one3C29,r3C81);
      real r3D24#1 = RAdd(r3D0C,r3D23);
      real r3D25#4 = RAdd(r3D24,r3D10);
      real r3D28#1 = RMul(one3C29,r3C8D);
      real r3D29#3 = RAdd(r3D01,r3D28);
      real r3D2A#1 = RMul(one3C29,r3C94);
      real r3D2B#3 = RAdd(r3D09,r3D2A);
      real r3D2C#1 = RMul(one3C29,r3C9B);
      real r3D2D#4 = RAdd(r3D11,r3D2C);
      real r3D2F#1 = RMul(coeff3C28,r3C51);
      real r3D30#1 = RAdd(r3D2F,r3CFE);
      real r3D31#3 = RAdd(r3D30,r3D00);
      real r3D32#1 = RMul(coeff3C28,r3C5C);
      real r3D33#1 = RAdd(r3D32,r3D06);
      real r3D34#3 = RAdd(r3D33,r3D08);
      real r3D35#1 = RMul(coeff3C28,r3C67);
      real r3D36#1 = RAdd(r3D35,r3D0E);
      real r3D37#4 = RAdd(r3D36,r3D10);
      real r3D3A#1 = RMul(coeff3C28,r3C73);
      real r3D3B#1 = RAdd(r3CFC,r3D3A);
      real r3D3C#3 = RAdd(r3D3B,r3D00);
      real r3D3D#1 = RMul(coeff3C28,r3C7A);
      real r3D3E#1 = RAdd(r3D04,r3D3D);
      real r3D3F#3 = RAdd(r3D3E,r3D08);
      real r3D40#1 = RMul(coeff3C28,r3C81);
      real r3D41#1 = RAdd(r3D0C,r3D40);
      real r3D42#4 = RAdd(r3D41,r3D10);
      real r3D44#1 = RMul(one3C29,r3C51);
      real r3D45#1 = RAdd(r3D44,r3CFE);
      real r3D46#3 = RAdd(r3D45,r3D00);
      real r3D47#1 = RMul(one3C29,r3C5C);
      real r3D48#1 = RAdd(r3D47,r3D06);
      real r3D49#3 = RAdd(r3D48,r3D08);
      real r3D4A#1 = RMul(one3C29,r3C67);
      real r3D4B#1 = RAdd(r3D4A,r3D0E);
      real r3D4C#4 = RAdd(r3D4B,r3D10);
      real r3DA9#1 = RMul(r3C51,r3D02);
      real r3DAC#1 = RMul(r3C73,r3D29);
      real r3DAF#1 = RMul(r3C8D,r3D3C);
      real r3DB0#1 = RAdd(r3DA9,r3DAC);
      real r3DB1#1 = RAdd(r3DB0,r3DAF);
      real r3DB3#1 = RMul(r3C51,r3D0A);
      real r3DB5#1 = RMul(r3C73,r3D2B);
      real r3DB7#1 = RMul(r3C8D,r3D3F);
      real r3DB8#1 = RAdd(r3DB3,r3DB5);
      real r3DB9#2 = RAdd(r3DB8,r3DB7);
      real r3DBB#1 = RMul(r3C51,r3D12);
      real r3DBD#1 = RMul(r3C73,r3D2D);
      real r3DBF#1 = RMul(r3C8D,r3D42);
      real r3DC0#1 = RAdd(r3DBB,r3DBD);
      real r3DC1#2 = RAdd(r3DC0,r3DBF);
      real r3DC4#1 = RMul(r3C51,r3D16);
      real r3DC6#1 = RMul(r3C73,r3D02);
      real r3DC8#1 = RMul(r3C8D,r3D46);
      real r3DC9#1 = RAdd(r3DC4,r3DC6);
      real r3DCA#1 = RAdd(r3DC9,r3DC8);
      real r3DCC#1 = RMul(r3C51,r3D18);
      real r3DCE#1 = RMul(r3C73,r3D0A);
      real r3DD0#1 = RMul(r3C8D,r3D49);
      real r3DD1#1 = RAdd(r3DCC,r3DCE);
      real r3DD2#2 = RAdd(r3DD1,r3DD0);
      real r3DD4#1 = RMul(r3C51,r3D1A);
      real r3DD6#1 = RMul(r3C73,r3D12);
      real r3DD8#1 = RMul(r3C8D,r3D4C);
      real r3DD9#1 = RAdd(r3DD4,r3DD6);
      real r3DDA#2 = RAdd(r3DD9,r3DD8);
      real r3DDD#1 = RMul(r3C51,r3D1F);
      real r3DDF#1 = RMul(r3C73,r3D31);
      real r3DE1#1 = RMul(r3C8D,r3D02);
      real r3DE2#1 = RAdd(r3DDD,r3DDF);
      real r3DE3#1 = RAdd(r3DE2,r3DE1);
      real r3DE5#1 = RMul(r3C51,r3D22);
      real r3DE7#1 = RMul(r3C73,r3D34);
      real r3DE9#1 = RMul(r3C8D,r3D0A);
      real r3DEA#1 = RAdd(r3DE5,r3DE7);
      real r3DEB#2 = RAdd(r3DEA,r3DE9);
      real r3DED#1 = RMul(r3C51,r3D25);
      real r3DEF#1 = RMul(r3C73,r3D37);
      real r3DF1#1 = RMul(r3C8D,r3D12);
      real r3DF2#1 = RAdd(r3DED,r3DEF);
      real r3DF3#2 = RAdd(r3DF2,r3DF1);
      real r3DF7#1 = RMul(r3C5C,r3D02);
      real r3DF9#1 = RMul(r3C7A,r3D29);
      real r3DFB#1 = RMul(r3C94,r3D3C);
      real r3DFC#1 = RAdd(r3DF7,r3DF9);
      real r3DFD#2 = RAdd(r3DFC,r3DFB);
      real r3DFE#1 = RMul(r3C5C,r3D0A);
      real r3DFF#1 = RMul(r3C7A,r3D2B);
      real r3E00#1 = RMul(r3C94,r3D3F);
      real r3E01#1 = RAdd(r3DFE,r3DFF);
      real r3E02#1 = RAdd(r3E01,r3E00);
      real r3E03#1 = RMul(r3C5C,r3D12);
      real r3E04#1 = RMul(r3C7A,r3D2D);
      real r3E05#1 = RMul(r3C94,r3D42);
      real r3E06#1 = RAdd(r3E03,r3E04);
      real r3E07#2 = RAdd(r3E06,r3E05);
      real r3E09#1 = RMul(r3C5C,r3D16);
      real r3E0A#1 = RMul(r3C7A,r3D02);
      real r3E0B#1 = RMul(r3C94,r3D46);
      real r3E0C#1 = RAdd(r3E09,r3E0A);
      real r3E0D#2 = RAdd(r3E0C,r3E0B);
      real r3E0E#1 = RMul(r3C5C,r3D18);
      real r3E0F#1 = RMul(r3C7A,r3D0A);
      real r3E10#1 = RMul(r3C94,r3D49);
      real r3E11#1 = RAdd(r3E0E,r3E0F);
      real r3E12#1 = RAdd(r3E11,r3E10);
      real r3E13#1 = RMul(r3C5C,r3D1A);
      real r3E14#1 = RMul(r3C7A,r3D12);
      real r3E15#1 = RMul(r3C94,r3D4C);
      real r3E16#1 = RAdd(r3E13,r3E14);
      real r3E17#2 = RAdd(r3E16,r3E15);
      real r3E19#1 = RMul(r3C5C,r3D1F);
      real r3E1A#1 = RMul(r3C7A,r3D31);
      real r3E1B#1 = RMul(r3C94,r3D02);
      real r3E1C#1 = RAdd(r3E19,r3E1A);
      real r3E1D#2 = RAdd(r3E1C,r3E1B);
      real r3E1E#1 = RMul(r3C5C,r3D22);
      real r3E1F#1 = RMul(r3C7A,r3D34);
      real r3E20#1 = RMul(r3C94,r3D0A);
      real r3E21#1 = RAdd(r3E1E,r3E1F);
      real r3E22#1 = RAdd(r3E21,r3E20);
      real r3E23#1 = RMul(r3C5C,r3D25);
      real r3E24#1 = RMul(r3C7A,r3D37);
      real r3E25#1 = RMul(r3C94,r3D12);
      real r3E26#1 = RAdd(r3E23,r3E24);
      real r3E27#2 = RAdd(r3E26,r3E25);
      real r3E2B#1 = RMul(r3C67,r3D02);
      real r3E2D#1 = RMul(r3C81,r3D29);
      real r3E2F#1 = RMul(r3C9B,r3D3C);
      real r3E30#1 = RAdd(r3E2B,r3E2D);
      real r3E31#2 = RAdd(r3E30,r3E2F);
      real r3E32#1 = RMul(r3C67,r3D0A);
      real r3E33#1 = RMul(r3C81,r3D2B);
      real r3E34#1 = RMul(r3C9B,r3D3F);
      real r3E35#1 = RAdd(r3E32,r3E33);
      real r3E36#2 = RAdd(r3E35,r3E34);
      real r3E37#1 = RMul(r3C67,r3D12);
      real r3E38#1 = RMul(r3C81,r3D2D);
      real r3E39#1 = RMul(r3C9B,r3D42);
      real r3E3A#1 = RAdd(r3E37,r3E38);
      real r3E3B#1 = RAdd(r3E3A,r3E39);
      real r3E3D#1 = RMul(r3C67,r3D16);
      real r3E3E#1 = RMul(r3C81,r3D02);
      real r3E3F#1 = RMul(r3C9B,r3D46);
      real r3E40#1 = RAdd(r3E3D,r3E3E);
      real r3E41#2 = RAdd(r3E40,r3E3F);
      real r3E42#1 = RMul(r3C67,r3D18);
      real r3E43#1 = RMul(r3C81,r3D0A);
      real r3E44#1 = RMul(r3C9B,r3D49);
      real r3E45#1 = RAdd(r3E42,r3E43);
      real r3E46#2 = RAdd(r3E45,r3E44);
      real r3E47#1 = RMul(r3C67,r3D1A);
      real r3E48#1 = RMul(r3C81,r3D12);
      real r3E49#1 = RMul(r3C9B,r3D4C);
      real r3E4A#1 = RAdd(r3E47,r3E48);
      real r3E4B#1 = RAdd(r3E4A,r3E49);
      real r3E4D#1 = RMul(r3C67,r3D1F);
      real r3E4E#1 = RMul(r3C81,r3D31);
      real r3E4F#1 = RMul(r3C9B,r3D02);
      real r3E50#1 = RAdd(r3E4D,r3E4E);
      real r3E51#2 = RAdd(r3E50,r3E4F);
      real r3E52#1 = RMul(r3C67,r3D22);
      real r3E53#1 = RMul(r3C81,r3D34);
      real r3E54#1 = RMul(r3C9B,r3D0A);
      real r3E55#1 = RAdd(r3E52,r3E53);
      real r3E56#2 = RAdd(r3E55,r3E54);
      real r3E57#1 = RMul(r3C67,r3D25);
      real r3E58#1 = RMul(r3C81,r3D37);
      real r3E59#1 = RMul(r3C9B,r3D12);
      real r3E5A#1 = RAdd(r3E57,r3E58);
      real r3E5B#1 = RAdd(r3E5A,r3E59);
      tensor[3] probe_l_143F17#1 = <tensor[3]>[r3C51,r3C73,r3C8D];
      tensor[3] probe_l_153F64#3 = <tensor[3]>[r3C5C,r3C7A,r3C94];
      tensor[3] tensor400F#1 = <tensor[3]>[r3D12,r3D2D,r3D42];
      tensor[3] tensor4015#1 = <tensor[3]>[r3D1A,r3D12,r3D4C];
      tensor[3] tensor401C#1 = <tensor[3]>[r3D25,r3D37,r3D12];
      real vdot403F#1 = VDot<3>(probe_l_153F64,tensor400F);
      real vdot4041#1 = VDot<3>(probe_l_153F64,tensor4015);
      real vdot4043#1 = VDot<3>(probe_l_153F64,tensor401C);
      tensor[3] op1_e3_l_18403D#1 = <tensor[3]>[vdot403F,vdot4041,vdot4043];
      real op1_e3_l_19404C#1 = VDot<3>(probe_l_143F17,op1_e3_l_18403D);
      real r4052#2 = RMul(basisEval3C2E,r3DB1);
      real r4054#1 = RMul(basisEval3C2E,r3DB9);
      real r4056#2 = RMul(basisEval3C2E,r3DC1);
      real r4058#2 = RMul(basisEval3C2E,r3DFD);
      real r405A#3 = RMul(basisEval3C2E,r3E02);
      real r405D#1 = RMul(one3C29,r3E07);
      real r405F#2 = RMul(basisEval3C2E,r3E31);
      real r4062#1 = RMul(coeff3C28,r3E36);
      real r4064#3 = RMul(basisEval3C2E,r3E3B);
      real r4065#2 = RAdd(r4052,r4054);
      real r4066#1 = RAdd(r4065,r4056);
      real r4067#1 = RAdd(r4066,r4058);
      real r4068#1 = RAdd(r4067,r405A);
      real r4069#1 = RAdd(r4068,r405D);
      real r406A#1 = RAdd(r4069,r405F);
      real r406B#1 = RAdd(r406A,r4062);
      real r406C#1 = RAdd(r406B,r4064);
      real r406E#2 = RMul(basisEval3C2E,r3DCA);
      real r4070#1 = RMul(basisEval3C2E,r3DD2);
      real r4072#2 = RMul(basisEval3C2E,r3DDA);
      real r4074#2 = RMul(basisEval3C2E,r3E0D);
      real r4076#3 = RMul(basisEval3C2E,r3E12);
      real r4078#1 = RMul(one3C29,r3E17);
      real r407A#2 = RMul(basisEval3C2E,r3E41);
      real r407C#1 = RMul(coeff3C28,r3E46);
      real r407E#3 = RMul(basisEval3C2E,r3E4B);
      real r407F#2 = RAdd(r406E,r4070);
      real r4080#1 = RAdd(r407F,r4072);
      real r4081#1 = RAdd(r4080,r4074);
      real r4082#1 = RAdd(r4081,r4076);
      real r4083#1 = RAdd(r4082,r4078);
      real r4084#1 = RAdd(r4083,r407A);
      real r4085#1 = RAdd(r4084,r407C);
      real r4086#1 = RAdd(r4085,r407E);
      real r4088#2 = RMul(basisEval3C2E,r3DE3);
      real r408A#1 = RMul(basisEval3C2E,r3DEB);
      real r408C#2 = RMul(basisEval3C2E,r3DF3);
      real r408E#2 = RMul(basisEval3C2E,r3E1D);
      real r4090#3 = RMul(basisEval3C2E,r3E22);
      real r4092#1 = RMul(one3C29,r3E27);
      real r4094#2 = RMul(basisEval3C2E,r3E51);
      real r4096#1 = RMul(coeff3C28,r3E56);
      real r4098#3 = RMul(basisEval3C2E,r3E5B);
      real r4099#2 = RAdd(r4088,r408A);
      real r409A#1 = RAdd(r4099,r408C);
      real r409B#1 = RAdd(r409A,r408E);
      real r409C#1 = RAdd(r409B,r4090);
      real r409D#1 = RAdd(r409C,r4092);
      real r409E#1 = RAdd(r409D,r4094);
      real r409F#1 = RAdd(r409E,r4096);
      real r40A0#1 = RAdd(r409F,r4098);
      real r40A2#1 = RMul(coeff3C28,r3DC1);
      real r40A3#2 = RMul(basisEval3C2E,r3E07);
      real r40A4#1 = RMul(one3C29,r3E31);
      real r40A5#2 = RMul(basisEval3C2E,r3E36);
      real r40A6#1 = RAdd(r4065,r40A2);
      real r40A7#1 = RAdd(r40A6,r4058);
      real r40A8#1 = RAdd(r40A7,r405A);
      real r40A9#1 = RAdd(r40A8,r40A3);
      real r40AA#1 = RAdd(r40A9,r40A4);
      real r40AB#1 = RAdd(r40AA,r40A5);
      real r40AC#1 = RAdd(r40AB,r4064);
      real r40AD#1 = RMul(coeff3C28,r3DDA);
      real r40AE#2 = RMul(basisEval3C2E,r3E17);
      real r40AF#1 = RMul(one3C29,r3E41);
      real r40B0#2 = RMul(basisEval3C2E,r3E46);
      real r40B1#1 = RAdd(r407F,r40AD);
      real r40B2#1 = RAdd(r40B1,r4074);
      real r40B3#1 = RAdd(r40B2,r4076);
      real r40B4#1 = RAdd(r40B3,r40AE);
      real r40B5#1 = RAdd(r40B4,r40AF);
      real r40B6#1 = RAdd(r40B5,r40B0);
      real r40B7#1 = RAdd(r40B6,r407E);
      real r40B8#1 = RMul(coeff3C28,r3DF3);
      real r40B9#2 = RMul(basisEval3C2E,r3E27);
      real r40BA#1 = RMul(one3C29,r3E51);
      real r40BB#2 = RMul(basisEval3C2E,r3E56);
      real r40BC#1 = RAdd(r4099,r40B8);
      real r40BD#1 = RAdd(r40BC,r408E);
      real r40BE#1 = RAdd(r40BD,r4090);
      real r40BF#1 = RAdd(r40BE,r40B9);
      real r40C0#1 = RAdd(r40BF,r40BA);
      real r40C1#1 = RAdd(r40C0,r40BB);
      real r40C2#1 = RAdd(r40C1,r4098);
      real r40C4#1 = RMul(one3C29,r3DB9);
      real r40C5#1 = RMul(coeff3C28,r3DFD);
      real r40C6#1 = RAdd(r4052,r40C4);
      real r40C7#1 = RAdd(r40C6,r4056);
      real r40C8#1 = RAdd(r40C7,r40C5);
      real r40C9#1 = RAdd(r40C8,r405A);
      real r40CA#1 = RAdd(r40C9,r40A3);
      real r40CB#1 = RAdd(r40CA,r405F);
      real r40CC#1 = RAdd(r40CB,r40A5);
      real r40CD#1 = RAdd(r40CC,r4064);
      real r40CE#1 = RMul(one3C29,r3DD2);
      real r40CF#1 = RMul(coeff3C28,r3E0D);
      real r40D0#1 = RAdd(r406E,r40CE);
      real r40D1#1 = RAdd(r40D0,r4072);
      real r40D2#1 = RAdd(r40D1,r40CF);
      real r40D3#1 = RAdd(r40D2,r4076);
      real r40D4#1 = RAdd(r40D3,r40AE);
      real r40D5#1 = RAdd(r40D4,r407A);
      real r40D6#1 = RAdd(r40D5,r40B0);
      real r40D7#1 = RAdd(r40D6,r407E);
      real r40D8#1 = RMul(one3C29,r3DEB);
      real r40D9#1 = RMul(coeff3C28,r3E1D);
      real r40DA#1 = RAdd(r4088,r40D8);
      real r40DB#1 = RAdd(r40DA,r408C);
      real r40DC#1 = RAdd(r40DB,r40D9);
      real r40DD#1 = RAdd(r40DC,r4090);
      real r40DE#1 = RAdd(r40DD,r40B9);
      real r40DF#1 = RAdd(r40DE,r4094);
      real r40E0#1 = RAdd(r40DF,r40BB);
      real r40E1#1 = RAdd(r40E0,r4098);
      real realLit4179#1 = 0.2e1;
      real op1_e3_l_214178#9 = RMul(realLit4179,op1_e3_l_19404C);
      real varAcc417F#1 = VIndex<3,0>(xn417E);
      real varAcc4180#1 = VIndex<3,1>(xn417E);
      real varAcc4181#1 = VIndex<3,2>(xn417E);
      real prod4186#2 = RMul(varAcc417F,prod3C2A);
      real prod4188#1 = RMul(varAcc4180,one3C29);
      real prod4189#2 = RMul(one3C29,prod4188);
      real prod418B#1 = RMul(one3C29,varAcc4181);
      real prod418C#2 = RMul(one3C29,prod418B);
      real mult418F#1 = RMul(coeff3C28,prod418C);
      real mult4190#1 = RMul(coeff3C28,prod4189);
      real mult4191#1 = RMul(coeff3C28,prod4186);
      real sum4192#1 = RAdd(mult4190,mult4191);
      real sum4193#1 = RAdd(mult418F,sum4192);
      real sum4194#3 = RAdd(basisEval3C2D,sum4193);
      real basisEval4196#3 = RMul(one3C29,prod4186);
      real basisEval4197#3 = RMul(one3C29,prod4189);
      real basisEval4198#3 = RMul(one3C29,prod418C);
      real r41B9#1 = RMul(dof_load3BDA,sum4194);
      real r41BC#1 = RMul(dof_load3BE3,basisEval4196);
      real r41BF#1 = RMul(dof_load3BEC,basisEval4197);
      real r41C2#1 = RMul(dof_load3BF5,basisEval4198);
      real r41C3#1 = RAdd(r41B9,r41BC);
      real r41C4#1 = RAdd(r41C3,r41BF);
      real r41C5#1 = RAdd(r41C4,r41C2);
      real r41C7#1 = RMul(dof_load3BDB,sum4194);
      real r41C9#1 = RMul(dof_load3BE4,basisEval4196);
      real r41CB#1 = RMul(dof_load3BED,basisEval4197);
      real r41CD#1 = RMul(dof_load3BF6,basisEval4198);
      real r41CE#1 = RAdd(r41C7,r41C9);
      real r41CF#1 = RAdd(r41CE,r41CB);
      real r41D0#1 = RAdd(r41CF,r41CD);
      real r41D2#1 = RMul(dof_load3BDC,sum4194);
      real r41D4#1 = RMul(dof_load3BE5,basisEval4196);
      real r41D6#1 = RMul(dof_load3BEE,basisEval4197);
      real r41D8#1 = RMul(dof_load3BF7,basisEval4198);
      real r41D9#1 = RAdd(r41D2,r41D4);
      real r41DA#1 = RAdd(r41D9,r41D6);
      real r41DB#1 = RAdd(r41DA,r41D8);
      tensor[3] probe_l_2241B6#1 = <tensor[3]>[r41C5,r41D0,r41DB];
      real r4205#1 = RDiv(r406C,op1_e3_l_214178);
      real r4207#1 = RDiv(r4086,op1_e3_l_214178);
      real r4209#1 = RDiv(r40A0,op1_e3_l_214178);
      tensor[3] tensor420A#1 = <tensor[3]>[r4205,r4207,r4209];
      real r420C#1 = RDiv(r40AC,op1_e3_l_214178);
      real r420E#1 = RDiv(r40B7,op1_e3_l_214178);
      real r4210#1 = RDiv(r40C2,op1_e3_l_214178);
      tensor[3] tensor4211#1 = <tensor[3]>[r420C,r420E,r4210];
      real r4213#1 = RDiv(r40CD,op1_e3_l_214178);
      real r4215#1 = RDiv(r40D7,op1_e3_l_214178);
      real r4217#1 = RDiv(r40E1,op1_e3_l_214178);
      tensor[3] tensor4218#1 = <tensor[3]>[r4213,r4215,r4217];
      tensor[3] op1_e3_l_244230#3 = VSub<3>(probe_l_2241B6,pos3B9E);
      real vdot4235#1 = VDot<3>(tensor420A,op1_e3_l_244230);
      real vdot4237#1 = VDot<3>(tensor4211,op1_e3_l_244230);
      real vdot4239#1 = VDot<3>(tensor4218,op1_e3_l_244230);
      tensor[3] op1_e3_l_254233#3 = <tensor[3]>[vdot4235,vdot4237,vdot4239];
      tensor[3] xn4242#4 = VSub<3>(xn417E,op1_e3_l_254233);
      real _t4245#6 = 0.1e-7;
      real _t4247#1 = RMul(_t4245,_t4245);
      real _t42A9#1 = VDot<3>(op1_e3_l_254233,op1_e3_l_254233);
      bool _t42AC#1 = GTE<real>(_t4247,_t42A9);
      if _t42AC then goto ASSIGN59A3 else goto JOIN42D9
    ASSIGN59A3:  preds = [COND42AE]
      real _t42B1#1 = RAdd(one3C29,_t4245);
      tensor[3] _t42B4#1 = <tensor[3]>[one3C29,one3C29,one3C29];
      real _t42B6#1 = VDot<3>(_t42B4,xn4242);
      bool _t42B9#1 = GT<real>(_t42B1,_t42B6);
      tensor[3] _t42BB#1 = <tensor[3]>[_t4245,_t4245,_t4245];
      tensor[3] _t42BD#3 = VAdd<3>(_t42BB,xn4242);
      real _t42C0#1 = VIndex<3,0>(_t42BD);
      real _t42C2#3 = -0.e0;
      bool _t42C4#1 = GT<real>(_t42C0,_t42C2);
      real _t42C6#1 = VIndex<3,1>(_t42BD);
      bool _t42C8#1 = GT<real>(_t42C6,_t42C2);
      real _t42CA#1 = VIndex<3,2>(_t42BD);
      bool _t42CC#1 = GT<real>(_t42CA,_t42C2);
      bool _t42CE#1 = BAnd(_t42C8,_t42CC);
      bool _t42D0#1 = BAnd(_t42C4,_t42CE);
      bool _t42D2#1 = BAnd(_t42B9,_t42D0);
      if _t42D2 then goto ASSIGN42D6 else goto JOIN42D8
    ASSIGN42D6:  preds = [COND42D4]
      femData:MeshPos _t42D5#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3B9D,cellItter3BA8,xn4242,pos3B9E);
      return _t42D5
      goto JOIN42D8
    JOIN42D8:  preds = [*RETURN(_t42D5)42D7,COND42D4]
      goto JOIN42D9
    JOIN42D9:  preds = [JOIN42D8,COND42AE]
      goto FOREACH3BAF
    NEXT42DB:  preds = [FOREACH3BAF]
      goto FOREACH3BA9
    ASSIGN42DD:  preds = [FOREACH3BA9]
      femData:MeshPos _t42DC#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3B9D);
      return _t42DC
}
  function femData:MeshPos fn_2FB47F0 (femData:MeshPos x47F1#5, tensor[3] dPos47F2#1) {
    ENTRY47F3:  preds = []
      femData:Mesh meshData47F4#1 = globals.meshData3B45;
      int timeSteps47F6#1 = globals.timeSteps3B48;
      bool _t47F8#1 = ExtractFemItem<bool,Valid(MeshPos)>(x47F1);
      bool _t47FA#1 = BNot(_t47F8);
      if _t47FA then goto RETURN(x47F1)47FD else goto JOIN47FE
    RETURN(x47F1)47FD:  preds = [COND47FC]
      return x47F1
      goto JOIN47FE
    JOIN47FE:  preds = [*RETURN(x47F1)47FD,COND47FC]
      int _t47FF#1 = 0;
      int[] _t4801#1 = Range(_t47FF,timeSteps47F6);
    FOREACH4804:  preds = [ASSIGN4802,*NEXT4806]
      foreach (i4803 in _t4801) on exit goto ASSIGN4808
      return
      goto FOREACH4804
    ASSIGN4808:  preds = [FOREACH4804]
      string _t4807#1 = "Took stupid way out!\n";
      Print<[string]>(_t4807);
      tensor[3] _t480A#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x47F1);
      int _t480C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x47F1);
      femData:Mesh _t480E#16 = ExtractFem<femData:Mesh,femData:MeshPos>(x47F1);
      int ilit4811#1 = 4;
      int mulRes4812#4 = IMul(_t480C,ilit4811);
      int idx4815#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,mulRes4812);
      int ilit4816#5 = 1;
      int addRes4817#1 = IAdd(mulRes4812,ilit4816);
      int idx4818#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes4817);
      int ilit4819#5 = 2;
      int addRes481A#1 = IAdd(mulRes4812,ilit4819);
      int idx481B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes481A);
      int ilit481C#5 = 3;
      int addRes481D#1 = IAdd(mulRes4812,ilit481C);
      int idx481E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t480E,addRes481D);
      int mulRes4834#3 = IMul(ilit481C,idx4815);
      int addRes4837#1 = IAdd(ilit4816,mulRes4834);
      int addRes4839#1 = IAdd(ilit4819,mulRes4834);
      real dof_load483A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes4834);
      real dof_load483B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4837);
      real dof_load483C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4839);
      int mulRes483F#3 = IMul(ilit481C,idx4818);
      int addRes4841#1 = IAdd(ilit4816,mulRes483F);
      int addRes4842#1 = IAdd(ilit4819,mulRes483F);
      real dof_load4843#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes483F);
      real dof_load4844#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4841);
      real dof_load4845#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4842);
      int mulRes4848#3 = IMul(ilit481C,idx481B);
      int addRes484A#1 = IAdd(ilit4816,mulRes4848);
      int addRes484B#1 = IAdd(ilit4819,mulRes4848);
      real dof_load484C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes4848);
      real dof_load484D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes484A);
      real dof_load484E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes484B);
      int mulRes4851#3 = IMul(ilit481C,idx481E);
      int addRes4853#1 = IAdd(ilit4816,mulRes4851);
      int addRes4854#1 = IAdd(ilit4819,mulRes4851);
      real dof_load4855#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,mulRes4851);
      real dof_load4856#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4853);
      real dof_load4857#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t480E,addRes4854);
      real varAcc4885#1 = VIndex<3,0>(_t480A);
      real varAcc4886#1 = VIndex<3,1>(_t480A);
      real varAcc4887#1 = VIndex<3,2>(_t480A);
      real coeff4888#3 = -0.1e1;
      real one488A#11 = 0.1e1;
      real prod488B#2 = RMul(one488A,one488A);
      real prod488C#2 = RMul(varAcc4885,prod488B);
      real prod488E#1 = RMul(varAcc4886,one488A);
      real prod488F#2 = RMul(one488A,prod488E);
      real prod4891#1 = RMul(one488A,varAcc4887);
      real prod4892#2 = RMul(one488A,prod4891);
      real prod4893#1 = RMul(one488A,prod488B);
      real mult4894#1 = RMul(one488A,prod4893);
      real mult4895#1 = RMul(coeff4888,prod4892);
      real mult4896#1 = RMul(coeff4888,prod488F);
      real mult4897#1 = RMul(coeff4888,prod488C);
      real sum4898#1 = RAdd(mult4896,mult4897);
      real sum4899#1 = RAdd(mult4895,sum4898);
      real sum489A#3 = RAdd(mult4894,sum4899);
      real basisEval489C#3 = RMul(one488A,prod488C);
      real basisEval489D#3 = RMul(one488A,prod488F);
      real basisEval489E#3 = RMul(one488A,prod4892);
      real r48BF#1 = RMul(dof_load483A,sum489A);
      real r48C2#1 = RMul(dof_load4843,basisEval489C);
      real r48C5#1 = RMul(dof_load484C,basisEval489D);
      real r48C8#1 = RMul(dof_load4855,basisEval489E);
      real r48C9#1 = RAdd(r48BF,r48C2);
      real r48CA#1 = RAdd(r48C9,r48C5);
      real r48CB#1 = RAdd(r48CA,r48C8);
      real r48CD#1 = RMul(dof_load483B,sum489A);
      real r48CF#1 = RMul(dof_load4844,basisEval489C);
      real r48D1#1 = RMul(dof_load484D,basisEval489D);
      real r48D3#1 = RMul(dof_load4856,basisEval489E);
      real r48D4#1 = RAdd(r48CD,r48CF);
      real r48D5#1 = RAdd(r48D4,r48D1);
      real r48D6#1 = RAdd(r48D5,r48D3);
      real r48D8#1 = RMul(dof_load483C,sum489A);
      real r48DA#1 = RMul(dof_load4845,basisEval489C);
      real r48DC#1 = RMul(dof_load484E,basisEval489D);
      real r48DE#1 = RMul(dof_load4857,basisEval489E);
      real r48DF#1 = RAdd(r48D8,r48DA);
      real r48E0#1 = RAdd(r48DF,r48DC);
      real r48E1#1 = RAdd(r48E0,r48DE);
      tensor[3] probe_l_548BC#1 = <tensor[3]>[r48CB,r48D6,r48E1];
      tensor[3] _t4909#1 = VAdd<3>(probe_l_548BC,dPos47F2);
      femData:MeshPos cmp490C#1 = findPos3B9C (meshData47F4,_t4909);
      return cmp490C
}
## input initialization
  ENTRY3B52:  preds = []
    int timeSteps3B53#1 = 32;
    globals.timeSteps3B48 = timeSteps3B53;
    real timeEps3B56#1 = 0.1e-6;
    globals.timeEps3B49 = timeEps3B56;
    real stepSize3B59#1 = 0.1e-1;
    globals.stepSize3B4B = stepSize3B59;
    int stepMax3B5C#1 = 300;
    globals.stepMax3B4C = stepMax3B5C;
    return
## global-variable initialization
  ENTRY3B60:  preds = []
    femData:Mesh meshData3B61#3 = globals.meshData3B45;
    femData:Space 0space0409_intermedateGlobal3B63#1 = globals.0space0409_intermedateGlobal3B46;
    femData:FemFunc 0data040B_intermedateGlobal3B65#1 = globals.0data040B_intermedateGlobal3B47;
    int _t3B67#1 = 0;
    int _t3B69#1 = 1;
    int _t3B6B#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3B61);
    int _t3B6D#1 = ISub(_t3B6B,_t3B69);
    int[] _t3B6F#1 = Range(_t3B67,_t3B6D);
    femData:MeshCell[] _t3B71#1 = <femData:MeshCell[]>{};
  FOREACH3B74:  preds = [ASSIGN3B72,NEXT3B7A]
    foreach (_t3B73 in _t3B6F) on exit goto ASSIGN3B7C
      femData:MeshCell[] _t3B78#1 = phi(_t3B71,_t3B77)
    femData:MeshCell _t3B75#1 = LoadFem<femData:MeshCell>(meshData3B61,_t3B73);
    femData:MeshCell[] _t3B77#1 = Append<femData:MeshCell>(_t3B78,_t3B75);
    goto FOREACH3B74
  ASSIGN3B7C:  preds = [FOREACH3B74]
    femData:Space space3B7B#1 = LoadFem<femData:Space>(0space0409_intermedateGlobal3B63,meshData3B61);
    femData:FemFunc data3B7D#2 = LoadFem<femData:FemFunc>(0data040B_intermedateGlobal3B65,space3B7B);
    globals.data3B4F = data3B7D;
    femData:Space _t3B80#2 = ExtractFem<femData:Space,femData:FemFunc>(data3B7D);
    femData:Mesh _t3B82#1 = ExtractFem<femData:Mesh,femData:Space>(_t3B80);
    globals._t3B50 = _t3B82;
    globals._tX3B51 = _t3B80;
    return
## strand
  strand gg (tensor[3] startPos3B87#3)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3B8E:  preds = []
        femData:Mesh meshData3B8F#1 = globals.meshData3B45;
        tensor[3][0] _t3B91#1 = <tensor[3][0]>{};
        tensor[3][] _t3B93#1 = MkDynamic<tensor[3],0>(_t3B91);
        tensor[3][0] _t3B95#1 = <tensor[3][0]>{};
        tensor[3][] _t3B97#1 = MkDynamic<tensor[3],0>(_t3B95);
        int step3B99#1 = 0;
        femData:MeshPos cPos3B9B#1 = findPos3B9C (meshData3B8F,startPos3B87);
        self.stream = _t3B93;
        self.newStream = _t3B97;
        self.step = step3B99;
        self.cPos = cPos3B9B;
        self.altCPos = startPos3B87;
        self.startPos = startPos3B87;
        return
    end state init
    method update
        ENTRY42E7:  preds = []
          femData:Mesh _t42E8#3 = globals._t3B50;
          femData:Space _t42EA#30 = globals._tX3B51;
          femData:FemFunc data42EC#92 = globals.data3B4F;
          femData:Mesh meshData42EE#2 = globals.meshData3B45;
          real stepSize42F0#4 = globals.stepSize3B4B;
          int stepMax42F2#1 = globals.stepMax3B4C;
          tensor[3,3] M42F4#3 = globals.M3B4D;
          tensor[3] center42F6#2 = globals.center3B4E;
          tensor[3][] stream42F8#2 = self.stream;
          tensor[3][] newStream42FA#2 = self.newStream;
          int step42FC#5 = self.step;
          femData:MeshPos cPos42FE#9 = self.cPos;
          tensor[3] altCPos4300#10 = self.altCPos;
          tensor[3] startPos4302#6 = self.startPos;
          int _t4304#1 = 0;
          bool _t4306#1 = EQ<int>(step42FC,_t4304);
          if _t4306 then goto ASSIGN430A else goto JOIN4334
        ASSIGN430A:  preds = [COND4308]
          bool _t4309#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos42FE);
          if _t4309 then goto ASSIGN430D else goto JOIN4333
        ASSIGN430D:  preds = [COND430B]
          tensor[3] rp430C#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          real _t430E#1 = VIndex<3,0>(rp430C);
          real _t4310#3 = 0.1e-5;
          bool _t4312#1 = LTE<real>(_t430E,_t4310);
          if _t4312 then goto STABILIZE4315 else goto JOIN4316
        STABILIZE4315:  preds = [COND4314]
          stabilize
          goto JOIN4316
        JOIN4316:  preds = [*STABILIZE4315,COND4314]
          real _t4317#1 = VIndex<3,1>(rp430C);
          bool _t4319#1 = LTE<real>(_t4317,_t4310);
          if _t4319 then goto STABILIZE431C else goto JOIN431D
        STABILIZE431C:  preds = [COND431B]
          stabilize
          goto JOIN431D
        JOIN431D:  preds = [*STABILIZE431C,COND431B]
          real _t431E#1 = VIndex<3,2>(rp430C);
          bool _t4320#1 = LTE<real>(_t431E,_t4310);
          if _t4320 then goto STABILIZE4323 else goto JOIN4324
        STABILIZE4323:  preds = [COND4322]
          stabilize
          goto JOIN4324
        JOIN4324:  preds = [*STABILIZE4323,COND4322]
          real _t4325#3 = 0.1e1;
          tensor[3] _t4327#1 = <tensor[3]>[_t4325,_t4325,_t4325];
          real r4329#1 = VDot<3>(_t4327,rp430C);
          real _t432C#1 = 0.9999999e0;
          bool _t432E#1 = LTE<real>(_t432C,r4329);
          if _t432E then goto STABILIZE4331 else goto JOIN4332
        STABILIZE4331:  preds = [COND4330]
          stabilize
          goto JOIN4332
        JOIN4332:  preds = [*STABILIZE4331,COND4330]
          goto JOIN4333
        JOIN4333:  preds = [JOIN4332,COND430B]
          goto JOIN4334
        JOIN4334:  preds = [JOIN4333,COND4308]
          bool _t4335#3 = ExtractFemItem<bool,Valid(MeshPos)>(cPos42FE);
          femData:MeshPos _t4337#6 = findPos3B9C (meshData42EE,altCPos4300);
          bool _t4339#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t4337);
          bool _t433B#1 = NEQ<bool>(_t4335,_t4339);
          if _t433B then goto ASSIGN433F else goto JOIN4343
        ASSIGN433F:  preds = [COND433D]
          string _t433E#1 = "ERG:Warning of validity startPos:";
          string _t4340#1 = "\n";
          Print<[string,tensor[3],string]>(_t433E,startPos4302,_t4340);
          goto JOIN4343
        JOIN4343:  preds = [MASSIGN4342,COND433D]
          bool _t4344#2 = BNot(_t4335);
          if _t4344 then goto ASSIGN4348 else goto ASSIGN5617
        ASSIGN4348:  preds = [COND4346]
          bool _t4347#1 = true;
          goto JOIN434B
        JOIN434B:  preds = [ASSIGN4348,JOIN561C]
          bool _t4349#1 = phi(_t4347,_t434A)
          if _t4349 then goto ASSIGN434E else goto JOIN435D
        ASSIGN434E:  preds = [COND434C]
          string _t434D#1 = "Went off the mesh\?";
          string _t434F#2 = " and ";
          bool _t4351#1 = BNot(_t4339);
          string _t4353#4 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t434D,_t4344,_t434F,altCPos4300,_t434F,_t4351,_t4353);
          string _t4356#1 = "Pos is:";
          tensor[3] _t4358#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          Print<[string,tensor[3],string]>(_t4356,_t4358,_t4353);
          Print<[tensor[3][],string,tensor[3][],string]>(stream42F8,_t4353,newStream42FA,_t4353);
          stabilize
          goto JOIN435D
        JOIN435D:  preds = [*STABILIZE435C,COND434C]
          tensor[3] _t435E#4 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos42FE);
          int _t4360#5 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos42FE);
          femData:Mesh _t4362#20 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos42FE);
          int ilit4365#7 = 4;
          int mulRes4366#4 = IMul(_t4360,ilit4365);
          int idx4369#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,mulRes4366);
          int ilit436A#66 = 1;
          int addRes436B#1 = IAdd(mulRes4366,ilit436A);
          int idx436C#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes436B);
          int ilit436D#65 = 2;
          int addRes436E#1 = IAdd(mulRes4366,ilit436D);
          int idx436F#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes436E);
          int ilit4370#65 = 3;
          int addRes4371#1 = IAdd(mulRes4366,ilit4370);
          int idx4372#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4362,addRes4371);
          int mulRes4388#3 = IMul(ilit4370,idx4369);
          int addRes438B#1 = IAdd(ilit436A,mulRes4388);
          int addRes438D#1 = IAdd(ilit436D,mulRes4388);
          real dof_load438E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes4388);
          real dof_load438F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes438B);
          real dof_load4390#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes438D);
          int mulRes4393#3 = IMul(ilit4370,idx436C);
          int addRes4395#1 = IAdd(ilit436A,mulRes4393);
          int addRes4396#1 = IAdd(ilit436D,mulRes4393);
          real dof_load4397#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes4393);
          real dof_load4398#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4395);
          real dof_load4399#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes4396);
          int mulRes439C#3 = IMul(ilit4370,idx436F);
          int addRes439E#1 = IAdd(ilit436A,mulRes439C);
          int addRes439F#1 = IAdd(ilit436D,mulRes439C);
          real dof_load43A0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes439C);
          real dof_load43A1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439E);
          real dof_load43A2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes439F);
          int mulRes43A5#3 = IMul(ilit4370,idx4372);
          int addRes43A7#1 = IAdd(ilit436A,mulRes43A5);
          int addRes43A8#1 = IAdd(ilit436D,mulRes43A5);
          real dof_load43A9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,mulRes43A5);
          real dof_load43AA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A7);
          real dof_load43AB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4362,addRes43A8);
          real varAcc43D9#5 = VIndex<3,0>(_t435E);
          real varAcc43DA#4 = VIndex<3,1>(_t435E);
          real varAcc43DB#4 = VIndex<3,2>(_t435E);
          real coeff43DC#15 = -0.1e1;
          real one43DE#62 = 0.1e1;
          real prod43DF#11 = RMul(one43DE,one43DE);
          real prod43E0#4 = RMul(varAcc43D9,prod43DF);
          real prod43E2#2 = RMul(varAcc43DA,one43DE);
          real prod43E3#4 = RMul(one43DE,prod43E2);
          real prod43E5#2 = RMul(one43DE,varAcc43DB);
          real prod43E6#4 = RMul(one43DE,prod43E5);
          real prod43E7#1 = RMul(one43DE,prod43DF);
          real mult43E8#7 = RMul(one43DE,prod43E7);
          real mult43E9#2 = RMul(coeff43DC,prod43E6);
          real mult43EA#2 = RMul(coeff43DC,prod43E3);
          real mult43EB#2 = RMul(coeff43DC,prod43E0);
          real sum43EC#1 = RAdd(mult43EA,mult43EB);
          real sum43ED#1 = RAdd(mult43E9,sum43EC);
          real sum43EE#3 = RAdd(mult43E8,sum43ED);
          real basisEval43F0#3 = RMul(one43DE,prod43E0);
          real basisEval43F1#3 = RMul(one43DE,prod43E3);
          real basisEval43F2#3 = RMul(one43DE,prod43E6);
          real r4413#1 = RMul(dof_load438E,sum43EE);
          real r4416#1 = RMul(dof_load4397,basisEval43F0);
          real r4419#1 = RMul(dof_load43A0,basisEval43F1);
          real r441C#1 = RMul(dof_load43A9,basisEval43F2);
          real r441D#1 = RAdd(r4413,r4416);
          real r441E#1 = RAdd(r441D,r4419);
          real r441F#1 = RAdd(r441E,r441C);
          real r4421#1 = RMul(dof_load438F,sum43EE);
          real r4423#1 = RMul(dof_load4398,basisEval43F0);
          real r4425#1 = RMul(dof_load43A1,basisEval43F1);
          real r4427#1 = RMul(dof_load43AA,basisEval43F2);
          real r4428#1 = RAdd(r4421,r4423);
          real r4429#1 = RAdd(r4428,r4425);
          real r442A#1 = RAdd(r4429,r4427);
          real r442C#1 = RMul(dof_load4390,sum43EE);
          real r442E#1 = RMul(dof_load4399,basisEval43F0);
          real r4430#1 = RMul(dof_load43A2,basisEval43F1);
          real r4432#1 = RMul(dof_load43AB,basisEval43F2);
          real r4433#1 = RAdd(r442C,r442E);
          real r4434#1 = RAdd(r4433,r4430);
          real r4435#1 = RAdd(r4434,r4432);
          tensor[3] _t4410#3 = <tensor[3]>[r441F,r442A,r4435];
          tensor[3][1] _t445D#1 = <tensor[3][1]>{_t4410};
          tensor[3][] _t445F#1 = MkDynamic<tensor[3],1>(_t445D);
          tensor[3][] stream4461#4 = Concat<tensor[3]>(stream42F8,_t445F);
          tensor[3][1] _t4463#1 = <tensor[3][1]>{altCPos4300};
          tensor[3][] _t4465#1 = MkDynamic<tensor[3],1>(_t4463);
          tensor[3][] newStream4467#4 = Concat<tensor[3]>(newStream42FA,_t4465);
          tensor[3] op1_e3_l_744B6#2 = VSub<3>(_t4410,altCPos4300);
          real op1_e3_l_944B9#1 = VDot<3>(op1_e3_l_744B6,op1_e3_l_744B6);
          real _t44BC#1 = Sqrt(op1_e3_l_944B9);
          real _t44BF#5 = 0.1e-5;
          bool _t44C1#1 = GT<real>(_t44BC,_t44BF);
          if _t44C1 then goto ASSIGN44C5 else goto ASSIGN5610
        ASSIGN44C5:  preds = [COND44C3]
          string _t44C4#1 = "ERG:Error in tracing 1: At step:";
          string _t44C6#1 = " with particle:";
          string _t44C8#4 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t44C4,step42FC,_t44C6,startPos4302,_t44C8);
          string _t44CB#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t44CB,_t4410,altCPos4300,_t44C8);
          string _t44CE#1 = "Cells are:";
          femData:MeshCell _t44D0#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t44D2#2 = " and ";
          femData:Mesh _t44D4#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4337);
          int _t44D6#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4337);
          femData:MeshCell _t44D8#1 = LoadFem<femData:MeshCell>(_t44D4,_t44D6);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t44CE,_t44D0,_t44D2,_t44D8,_t44C8);
          string _t44DB#1 = "Ref poses are:";
          tensor[3] _t44DD#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(_t4337);
          Print<[string,tensor[3],string,tensor[3],string]>(_t44DB,_t435E,_t44D2,_t44DD,_t44C8);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN44E3
        JOIN44E3:  preds = [*STABILIZE44E2,MASSIGN5615]
          real _t44E4#1 = 0.5e0;
          if _t4335 then goto ASSIGN44E8 else goto ASSIGN5609
        ASSIGN44E8:  preds = [COND44E6]
          femData:MeshCell c44E7#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          int _t44E9#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c44E7);
          femData:FuncCell _t44EB#2 = LoadFem<femData:FuncCell>(data42EC,_t44E9);
          femData:FemFunc _t44ED#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t44EB);
          femData:Space _t44EF#10 = ExtractFem<femData:Space,femData:FemFunc>(_t44ED);
          int _t44F1#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t44EB);
          int ilit44F4#1 = 10;
          int mulRes44F5#10 = IMul(_t44F1,ilit44F4);
          int idx44F8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,mulRes44F5);
          int addRes44FA#1 = IAdd(mulRes44F5,ilit436A);
          int idx44FB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44FA);
          int addRes44FD#1 = IAdd(mulRes44F5,ilit436D);
          int idx44FE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes44FD);
          int addRes4500#1 = IAdd(mulRes44F5,ilit4370);
          int idx4501#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4500);
          int addRes4503#1 = IAdd(mulRes44F5,ilit4365);
          int idx4504#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4503);
          int ilit4505#1 = 5;
          int addRes4506#1 = IAdd(mulRes44F5,ilit4505);
          int idx4507#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4506);
          int ilit4508#1 = 6;
          int addRes4509#1 = IAdd(mulRes44F5,ilit4508);
          int idx450A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4509);
          int ilit450B#1 = 7;
          int addRes450C#1 = IAdd(mulRes44F5,ilit450B);
          int idx450D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes450C);
          int ilit450E#1 = 8;
          int addRes450F#1 = IAdd(mulRes44F5,ilit450E);
          int idx4510#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes450F);
          int ilit4511#1 = 9;
          int addRes4512#1 = IAdd(mulRes44F5,ilit4511);
          int idx4513#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t44EF,addRes4512);
          int mulRes453B#3 = IMul(ilit4370,idx44F8);
          int addRes453E#1 = IAdd(ilit436A,mulRes453B);
          int addRes4540#1 = IAdd(ilit436D,mulRes453B);
          real dof_load4541#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes453B);
          real dof_load4542#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes453E);
          real dof_load4543#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4540);
          int mulRes4546#3 = IMul(ilit4370,idx44FB);
          int addRes4548#1 = IAdd(ilit436A,mulRes4546);
          int addRes4549#1 = IAdd(ilit436D,mulRes4546);
          real dof_load454A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4546);
          real dof_load454B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4548);
          real dof_load454C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4549);
          int mulRes454F#3 = IMul(ilit4370,idx44FE);
          int addRes4551#1 = IAdd(ilit436A,mulRes454F);
          int addRes4552#1 = IAdd(ilit436D,mulRes454F);
          real dof_load4553#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes454F);
          real dof_load4554#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4551);
          real dof_load4555#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4552);
          int mulRes4558#3 = IMul(ilit4370,idx4501);
          int addRes455A#1 = IAdd(ilit436A,mulRes4558);
          int addRes455B#1 = IAdd(ilit436D,mulRes4558);
          real dof_load455C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4558);
          real dof_load455D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes455A);
          real dof_load455E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes455B);
          int mulRes4562#3 = IMul(ilit4370,idx4504);
          int addRes4564#1 = IAdd(ilit436A,mulRes4562);
          int addRes4565#1 = IAdd(ilit436D,mulRes4562);
          real dof_load4566#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4562);
          real dof_load4567#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4564);
          real dof_load4568#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4565);
          int mulRes456C#3 = IMul(ilit4370,idx4507);
          int addRes456E#1 = IAdd(ilit436A,mulRes456C);
          int addRes456F#1 = IAdd(ilit436D,mulRes456C);
          real dof_load4570#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes456C);
          real dof_load4571#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456E);
          real dof_load4572#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes456F);
          int mulRes4576#3 = IMul(ilit4370,idx450A);
          int addRes4578#1 = IAdd(ilit436A,mulRes4576);
          int addRes4579#1 = IAdd(ilit436D,mulRes4576);
          real dof_load457A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4576);
          real dof_load457B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4578);
          real dof_load457C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4579);
          int mulRes4580#3 = IMul(ilit4370,idx450D);
          int addRes4582#1 = IAdd(ilit436A,mulRes4580);
          int addRes4583#1 = IAdd(ilit436D,mulRes4580);
          real dof_load4584#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4580);
          real dof_load4585#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4582);
          real dof_load4586#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4583);
          int mulRes458A#3 = IMul(ilit4370,idx4510);
          int addRes458C#1 = IAdd(ilit436A,mulRes458A);
          int addRes458D#1 = IAdd(ilit436D,mulRes458A);
          real dof_load458E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes458A);
          real dof_load458F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458C);
          real dof_load4590#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes458D);
          int mulRes4594#3 = IMul(ilit4370,idx4513);
          int addRes4596#1 = IAdd(ilit436A,mulRes4594);
          int addRes4597#1 = IAdd(ilit436D,mulRes4594);
          real dof_load4598#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,mulRes4594);
          real dof_load4599#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4596);
          real dof_load459A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t44ED,addRes4597);
          real coeff4607#3 = 0.2e1;
          real prod24609#1 = RMul(varAcc43D9,varAcc43D9);
          real prod460C#2 = RMul(prod24609,prod43DF);
          real coeff460D#6 = 0.4e1;
          real prod4610#2 = RMul(varAcc43D9,prod43E2);
          real prod4613#2 = RMul(varAcc43D9,prod43E5);
          real coeff4614#3 = -0.3e1;
          real prod24616#1 = RMul(varAcc43DA,varAcc43DA);
          real prod4617#1 = RMul(prod24616,one43DE);
          real prod4618#2 = RMul(one43DE,prod4617);
          real prod4619#1 = RMul(varAcc43DA,varAcc43DB);
          real prod461A#2 = RMul(one43DE,prod4619);
          real prod2461C#1 = RMul(varAcc43DB,varAcc43DB);
          real prod461D#1 = RMul(one43DE,prod2461C);
          real prod461E#2 = RMul(one43DE,prod461D);
          real mult4622#1 = RMul(coeff4614,prod43E6);
          real mult4623#2 = RMul(coeff4607,prod461E);
          real mult4624#1 = RMul(coeff4614,prod43E3);
          real mult4625#4 = RMul(coeff460D,prod461A);
          real mult4626#2 = RMul(coeff4607,prod4618);
          real mult4627#1 = RMul(coeff4614,prod43E0);
          real mult4628#4 = RMul(coeff460D,prod4613);
          real mult4629#4 = RMul(coeff460D,prod4610);
          real mult462A#2 = RMul(coeff4607,prod460C);
          real sum462B#1 = RAdd(mult4629,mult462A);
          real sum462C#1 = RAdd(mult4628,sum462B);
          real sum462D#1 = RAdd(mult4627,sum462C);
          real sum462E#1 = RAdd(mult4626,sum462D);
          real sum462F#1 = RAdd(mult4625,sum462E);
          real sum4630#1 = RAdd(mult4624,sum462F);
          real sum4631#1 = RAdd(mult4623,sum4630);
          real sum4632#1 = RAdd(mult4622,sum4631);
          real sum4633#3 = RAdd(mult43E8,sum4632);
          real sum4637#3 = RAdd(mult43EB,mult462A);
          real sum463A#3 = RAdd(mult43EA,mult4626);
          real sum463D#3 = RAdd(mult43E9,mult4623);
          real coeff463F#6 = -0.4e1;
          real mult4640#1 = RMul(coeff460D,prod43E6);
          real mult4641#1 = RMul(coeff463F,prod461E);
          real mult4642#2 = RMul(coeff463F,prod461A);
          real mult4643#2 = RMul(coeff463F,prod4613);
          real sum4644#1 = RAdd(mult4642,mult4643);
          real sum4645#1 = RAdd(mult4641,sum4644);
          real sum4646#3 = RAdd(mult4640,sum4645);
          real mult4648#1 = RMul(coeff460D,prod43E3);
          real mult4649#1 = RMul(coeff463F,prod4618);
          real mult464A#2 = RMul(coeff463F,prod4610);
          real sum464B#1 = RAdd(mult4649,mult464A);
          real sum464C#1 = RAdd(mult4642,sum464B);
          real sum464D#3 = RAdd(mult4648,sum464C);
          real mult464F#1 = RMul(coeff460D,prod43E0);
          real mult4650#1 = RMul(coeff463F,prod460C);
          real sum4651#1 = RAdd(mult464A,mult4650);
          real sum4652#1 = RAdd(mult4643,sum4651);
          real sum4653#3 = RAdd(mult464F,sum4652);
          real r46AC#1 = RMul(dof_load4541,sum4633);
          real r46AF#1 = RMul(dof_load454A,sum4637);
          real r46B2#1 = RMul(dof_load4553,sum463A);
          real r46B5#1 = RMul(dof_load455C,sum463D);
          real r46B8#1 = RMul(dof_load4566,mult4625);
          real r46BB#1 = RMul(dof_load4570,mult4628);
          real r46BE#1 = RMul(dof_load457A,mult4629);
          real r46C1#1 = RMul(dof_load4584,sum4646);
          real r46C4#1 = RMul(dof_load458E,sum464D);
          real r46C7#1 = RMul(dof_load4598,sum4653);
          real r46C8#1 = RAdd(r46AC,r46AF);
          real r46C9#1 = RAdd(r46C8,r46B2);
          real r46CA#1 = RAdd(r46C9,r46B5);
          real r46CB#1 = RAdd(r46CA,r46B8);
          real r46CC#1 = RAdd(r46CB,r46BB);
          real r46CD#1 = RAdd(r46CC,r46BE);
          real r46CE#1 = RAdd(r46CD,r46C1);
          real r46CF#1 = RAdd(r46CE,r46C4);
          real r46D0#2 = RAdd(r46CF,r46C7);
          real r46D2#1 = RMul(dof_load4542,sum4633);
          real r46D4#1 = RMul(dof_load454B,sum4637);
          real r46D6#1 = RMul(dof_load4554,sum463A);
          real r46D8#1 = RMul(dof_load455D,sum463D);
          real r46DA#1 = RMul(dof_load4567,mult4625);
          real r46DC#1 = RMul(dof_load4571,mult4628);
          real r46DE#1 = RMul(dof_load457B,mult4629);
          real r46E0#1 = RMul(dof_load4585,sum4646);
          real r46E2#1 = RMul(dof_load458F,sum464D);
          real r46E4#1 = RMul(dof_load4599,sum4653);
          real r46E5#1 = RAdd(r46D2,r46D4);
          real r46E6#1 = RAdd(r46E5,r46D6);
          real r46E7#1 = RAdd(r46E6,r46D8);
          real r46E8#1 = RAdd(r46E7,r46DA);
          real r46E9#1 = RAdd(r46E8,r46DC);
          real r46EA#1 = RAdd(r46E9,r46DE);
          real r46EB#1 = RAdd(r46EA,r46E0);
          real r46EC#1 = RAdd(r46EB,r46E2);
          real r46ED#2 = RAdd(r46EC,r46E4);
          real r46EF#1 = RMul(dof_load4543,sum4633);
          real r46F1#1 = RMul(dof_load454C,sum4637);
          real r46F3#1 = RMul(dof_load4555,sum463A);
          real r46F5#1 = RMul(dof_load455E,sum463D);
          real r46F7#1 = RMul(dof_load4568,mult4625);
          real r46F9#1 = RMul(dof_load4572,mult4628);
          real r46FB#1 = RMul(dof_load457C,mult4629);
          real r46FD#1 = RMul(dof_load4586,sum4646);
          real r46FF#1 = RMul(dof_load4590,sum464D);
          real r4701#1 = RMul(dof_load459A,sum4653);
          real r4702#1 = RAdd(r46EF,r46F1);
          real r4703#1 = RAdd(r4702,r46F3);
          real r4704#1 = RAdd(r4703,r46F5);
          real r4705#1 = RAdd(r4704,r46F7);
          real r4706#1 = RAdd(r4705,r46F9);
          real r4707#1 = RAdd(r4706,r46FB);
          real r4708#1 = RAdd(r4707,r46FD);
          real r4709#1 = RAdd(r4708,r46FF);
          real r470A#2 = RAdd(r4709,r4701);
          tensor[3] probe_l_846A9#2 = <tensor[3]>[r46D0,r46ED,r470A];
          real op1_e3_l_11476E#1 = VDot<3>(probe_l_846A9,probe_l_846A9);
          real op1_e3_l_124771#1 = Sqrt(op1_e3_l_11476E);
          real r4776#3 = RDiv(one43DE,op1_e3_l_124771);
          real r4778#1 = RMul(r4776,r46D0);
          real r477A#1 = RMul(r4776,r46ED);
          real r477C#1 = RMul(r4776,r470A);
          tensor[3] _t4774#1 = <tensor[3]>[r4778,r477A,r477C];
          goto JOIN4789
        JOIN4789:  preds = [ASSIGN4786,ASSIGN560E]
          tensor[3] _t4787#3 = phi(_t4774,_t4788)
          real r478B#1 = TensorIndex<tensor[3],[0]>(_t4787);
          real r478C#12 = RMul(_t44E4,stepSize42F0);
          real r478D#1 = RMul(r478C,r478B);
          real r478E#1 = TensorIndex<tensor[3],[1]>(_t4787);
          real r478F#1 = RMul(r478C,r478E);
          real r4790#1 = TensorIndex<tensor[3],[2]>(_t4787);
          real r4791#1 = RMul(r478C,r4790);
          tensor[3] up1478A#3 = <tensor[3]>[r478D,r478F,r4791];
          tensor[3] op1_e3_l_11479B#3 = VSub<3>(altCPos4300,center42F6);
          tensor[3] projParam479F#2 = ProjectLast<tensor[3,3],[0]>(M42F4);
          real vdot47A0#2 = VDot<3>(projParam479F,op1_e3_l_11479B);
          tensor[3] projParam47A1#2 = ProjectLast<tensor[3,3],[1]>(M42F4);
          real vdot47A2#2 = VDot<3>(projParam47A1,op1_e3_l_11479B);
          tensor[3] projParam47A3#2 = ProjectLast<tensor[3,3],[2]>(M42F4);
          real vdot47A4#2 = VDot<3>(projParam47A3,op1_e3_l_11479B);
          tensor[3] op1_e3_l_12479E#2 = <tensor[3]>[vdot47A0,vdot47A2,vdot47A4];
          real op1_e3_l_1747AD#1 = VDot<3>(op1_e3_l_12479E,op1_e3_l_12479E);
          real r47B3#1 = RMul(r478C,vdot47A0);
          real r47B5#1 = RMul(r478C,vdot47A2);
          real r47B7#1 = RMul(r478C,vdot47A4);
          real op1_e3_l_1947C1#1 = Sqrt(op1_e3_l_1747AD);
          real r47C6#3 = RDiv(one43DE,op1_e3_l_1947C1);
          real r47C8#1 = RMul(r47C6,r47B3);
          real r47CA#1 = RMul(r47C6,r47B5);
          real r47CC#1 = RMul(r47C6,r47B7);
          tensor[3] op1_e3_l_2147C4#1 = <tensor[3]>[r47C8,r47CA,r47CC];
          tensor[3] op1_e3_l_3347D7#2 = VSub<3>(up1478A,op1_e3_l_2147C4);
          real op1_e3_l_3547DA#1 = VDot<3>(op1_e3_l_3347D7,op1_e3_l_3347D7);
          real _t47DD#1 = Sqrt(op1_e3_l_3547DA);
          bool _t47E0#1 = GT<real>(_t47DD,_t44BF);
          if _t47E0 then goto ASSIGN47E4 else goto ASSIGN5354
        ASSIGN47E4:  preds = [COND47E2]
          bool _t47E3#1 = true;
          goto JOIN47E7
        JOIN47E7:  preds = [ASSIGN47E4,ASSIGN5607]
          bool _t47E5#1 = phi(_t47E3,_t47E6)
          if _t47E5 then goto ASSIGN47EA else goto JOIN47EE
        ASSIGN47EA:  preds = [COND47E8]
          string _t47E9#1 = "ERG:Error in evaluation on pos 1:";
          string _t47EB#1 = "\n";
          Print<[string,tensor[3],string]>(_t47E9,startPos4302,_t47EB);
          goto JOIN47EE
        JOIN47EE:  preds = [MASSIGN47ED,COND47E8]
          femData:MeshPos intermed47EF#4 = fn_2FB47F0 (cPos42FE,up1478A);
          femData:MeshPos callFindPos4910#2 = findPos3B9C (_t42E8,altCPos4300);
          int intPos4912#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos4910);
          tensor[3] refPos4914#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos4910);
          int ilit4917#3 = 10;
          int mulRes4918#10 = IMul(intPos4912,ilit4917);
          int idx491B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,mulRes4918);
          int addRes491D#1 = IAdd(mulRes4918,ilit436A);
          int idx491E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes491D);
          int addRes4920#1 = IAdd(mulRes4918,ilit436D);
          int idx4921#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4920);
          int addRes4923#1 = IAdd(mulRes4918,ilit4370);
          int idx4924#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4923);
          int addRes4926#1 = IAdd(mulRes4918,ilit4365);
          int idx4927#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4926);
          int ilit4928#3 = 5;
          int addRes4929#1 = IAdd(mulRes4918,ilit4928);
          int idx492A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4929);
          int ilit492B#3 = 6;
          int addRes492C#1 = IAdd(mulRes4918,ilit492B);
          int idx492D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes492C);
          int ilit492E#3 = 7;
          int addRes492F#1 = IAdd(mulRes4918,ilit492E);
          int idx4930#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes492F);
          int ilit4931#3 = 8;
          int addRes4932#1 = IAdd(mulRes4918,ilit4931);
          int idx4933#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4932);
          int ilit4934#3 = 9;
          int addRes4935#1 = IAdd(mulRes4918,ilit4934);
          int idx4936#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes4935);
          int mulRes495E#3 = IMul(ilit4370,idx491B);
          int addRes4961#1 = IAdd(ilit436A,mulRes495E);
          int addRes4963#1 = IAdd(ilit436D,mulRes495E);
          real dof_load4964#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes495E);
          real dof_load4965#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4961);
          real dof_load4966#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4963);
          int mulRes4969#3 = IMul(ilit4370,idx491E);
          int addRes496B#1 = IAdd(ilit436A,mulRes4969);
          int addRes496C#1 = IAdd(ilit436D,mulRes4969);
          real dof_load496D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4969);
          real dof_load496E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496B);
          real dof_load496F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes496C);
          int mulRes4972#3 = IMul(ilit4370,idx4921);
          int addRes4974#1 = IAdd(ilit436A,mulRes4972);
          int addRes4975#1 = IAdd(ilit436D,mulRes4972);
          real dof_load4976#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4972);
          real dof_load4977#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4974);
          real dof_load4978#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4975);
          int mulRes497B#3 = IMul(ilit4370,idx4924);
          int addRes497D#1 = IAdd(ilit436A,mulRes497B);
          int addRes497E#1 = IAdd(ilit436D,mulRes497B);
          real dof_load497F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes497B);
          real dof_load4980#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497D);
          real dof_load4981#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes497E);
          int mulRes4985#3 = IMul(ilit4370,idx4927);
          int addRes4987#1 = IAdd(ilit436A,mulRes4985);
          int addRes4988#1 = IAdd(ilit436D,mulRes4985);
          real dof_load4989#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4985);
          real dof_load498A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4987);
          real dof_load498B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4988);
          int mulRes498F#3 = IMul(ilit4370,idx492A);
          int addRes4991#1 = IAdd(ilit436A,mulRes498F);
          int addRes4992#1 = IAdd(ilit436D,mulRes498F);
          real dof_load4993#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes498F);
          real dof_load4994#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4991);
          real dof_load4995#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes4992);
          int mulRes4999#3 = IMul(ilit4370,idx492D);
          int addRes499B#1 = IAdd(ilit436A,mulRes4999);
          int addRes499C#1 = IAdd(ilit436D,mulRes4999);
          real dof_load499D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes4999);
          real dof_load499E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499B);
          real dof_load499F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes499C);
          int mulRes49A3#3 = IMul(ilit4370,idx4930);
          int addRes49A5#1 = IAdd(ilit436A,mulRes49A3);
          int addRes49A6#1 = IAdd(ilit436D,mulRes49A3);
          real dof_load49A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes49A3);
          real dof_load49A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A5);
          real dof_load49A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49A6);
          int mulRes49AD#3 = IMul(ilit4370,idx4933);
          int addRes49AF#1 = IAdd(ilit436A,mulRes49AD);
          int addRes49B0#1 = IAdd(ilit436D,mulRes49AD);
          real dof_load49B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes49AD);
          real dof_load49B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49AF);
          real dof_load49B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B0);
          int mulRes49B7#3 = IMul(ilit4370,idx4936);
          int addRes49B9#1 = IAdd(ilit436A,mulRes49B7);
          int addRes49BA#1 = IAdd(ilit436D,mulRes49B7);
          real dof_load49BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes49B7);
          real dof_load49BC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49B9);
          real dof_load49BD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes49BA);
          real varAcc4A27#5 = VIndex<3,0>(refPos4914);
          real varAcc4A28#4 = VIndex<3,1>(refPos4914);
          real varAcc4A29#4 = VIndex<3,2>(refPos4914);
          real coeff4A2A#9 = 0.2e1;
          real prod24A2C#1 = RMul(varAcc4A27,varAcc4A27);
          real prod4A2F#2 = RMul(prod24A2C,prod43DF);
          real coeff4A30#18 = 0.4e1;
          real prod4A32#2 = RMul(varAcc4A28,one43DE);
          real prod4A33#2 = RMul(varAcc4A27,prod4A32);
          real prod4A35#2 = RMul(one43DE,varAcc4A29);
          real prod4A36#2 = RMul(varAcc4A27,prod4A35);
          real coeff4A37#9 = -0.3e1;
          real prod4A38#3 = RMul(varAcc4A27,prod43DF);
          real prod24A39#1 = RMul(varAcc4A28,varAcc4A28);
          real prod4A3A#1 = RMul(prod24A39,one43DE);
          real prod4A3B#2 = RMul(one43DE,prod4A3A);
          real prod4A3C#1 = RMul(varAcc4A28,varAcc4A29);
          real prod4A3D#2 = RMul(one43DE,prod4A3C);
          real prod4A3E#3 = RMul(one43DE,prod4A32);
          real prod24A3F#1 = RMul(varAcc4A29,varAcc4A29);
          real prod4A40#1 = RMul(one43DE,prod24A3F);
          real prod4A41#2 = RMul(one43DE,prod4A40);
          real prod4A42#3 = RMul(one43DE,prod4A35);
          real mult4A45#1 = RMul(coeff4A37,prod4A42);
          real mult4A46#2 = RMul(coeff4A2A,prod4A41);
          real mult4A47#1 = RMul(coeff4A37,prod4A3E);
          real mult4A48#4 = RMul(coeff4A30,prod4A3D);
          real mult4A49#2 = RMul(coeff4A2A,prod4A3B);
          real mult4A4A#1 = RMul(coeff4A37,prod4A38);
          real mult4A4B#4 = RMul(coeff4A30,prod4A36);
          real mult4A4C#4 = RMul(coeff4A30,prod4A33);
          real mult4A4D#2 = RMul(coeff4A2A,prod4A2F);
          real sum4A4E#1 = RAdd(mult4A4C,mult4A4D);
          real sum4A4F#1 = RAdd(mult4A4B,sum4A4E);
          real sum4A50#1 = RAdd(mult4A4A,sum4A4F);
          real sum4A51#1 = RAdd(mult4A49,sum4A50);
          real sum4A52#1 = RAdd(mult4A48,sum4A51);
          real sum4A53#1 = RAdd(mult4A47,sum4A52);
          real sum4A54#1 = RAdd(mult4A46,sum4A53);
          real sum4A55#1 = RAdd(mult4A45,sum4A54);
          real sum4A56#3 = RAdd(mult43E8,sum4A55);
          real mult4A59#1 = RMul(coeff43DC,prod4A38);
          real sum4A5A#3 = RAdd(mult4A59,mult4A4D);
          real mult4A5C#1 = RMul(coeff43DC,prod4A3E);
          real sum4A5D#3 = RAdd(mult4A5C,mult4A49);
          real mult4A5F#1 = RMul(coeff43DC,prod4A42);
          real sum4A60#3 = RAdd(mult4A5F,mult4A46);
          real coeff4A62#18 = -0.4e1;
          real mult4A63#1 = RMul(coeff4A30,prod4A42);
          real mult4A64#1 = RMul(coeff4A62,prod4A41);
          real mult4A65#2 = RMul(coeff4A62,prod4A3D);
          real mult4A66#2 = RMul(coeff4A62,prod4A36);
          real sum4A67#1 = RAdd(mult4A65,mult4A66);
          real sum4A68#1 = RAdd(mult4A64,sum4A67);
          real sum4A69#3 = RAdd(mult4A63,sum4A68);
          real mult4A6B#1 = RMul(coeff4A30,prod4A3E);
          real mult4A6C#1 = RMul(coeff4A62,prod4A3B);
          real mult4A6D#2 = RMul(coeff4A62,prod4A33);
          real sum4A6E#1 = RAdd(mult4A6C,mult4A6D);
          real sum4A6F#1 = RAdd(mult4A65,sum4A6E);
          real sum4A70#3 = RAdd(mult4A6B,sum4A6F);
          real mult4A72#1 = RMul(coeff4A30,prod4A38);
          real mult4A73#1 = RMul(coeff4A62,prod4A2F);
          real sum4A74#1 = RAdd(mult4A6D,mult4A73);
          real sum4A75#1 = RAdd(mult4A66,sum4A74);
          real sum4A76#3 = RAdd(mult4A72,sum4A75);
          real r4ACF#1 = RMul(dof_load4964,sum4A56);
          real r4AD2#1 = RMul(dof_load496D,sum4A5A);
          real r4AD5#1 = RMul(dof_load4976,sum4A5D);
          real r4AD8#1 = RMul(dof_load497F,sum4A60);
          real r4ADB#1 = RMul(dof_load4989,mult4A48);
          real r4ADE#1 = RMul(dof_load4993,mult4A4B);
          real r4AE1#1 = RMul(dof_load499D,mult4A4C);
          real r4AE4#1 = RMul(dof_load49A7,sum4A69);
          real r4AE7#1 = RMul(dof_load49B1,sum4A70);
          real r4AEA#1 = RMul(dof_load49BB,sum4A76);
          real r4AEB#1 = RAdd(r4ACF,r4AD2);
          real r4AEC#1 = RAdd(r4AEB,r4AD5);
          real r4AED#1 = RAdd(r4AEC,r4AD8);
          real r4AEE#1 = RAdd(r4AED,r4ADB);
          real r4AEF#1 = RAdd(r4AEE,r4ADE);
          real r4AF0#1 = RAdd(r4AEF,r4AE1);
          real r4AF1#1 = RAdd(r4AF0,r4AE4);
          real r4AF2#1 = RAdd(r4AF1,r4AE7);
          real r4AF3#2 = RAdd(r4AF2,r4AEA);
          real r4AF5#1 = RMul(dof_load4965,sum4A56);
          real r4AF7#1 = RMul(dof_load496E,sum4A5A);
          real r4AF9#1 = RMul(dof_load4977,sum4A5D);
          real r4AFB#1 = RMul(dof_load4980,sum4A60);
          real r4AFD#1 = RMul(dof_load498A,mult4A48);
          real r4AFF#1 = RMul(dof_load4994,mult4A4B);
          real r4B01#1 = RMul(dof_load499E,mult4A4C);
          real r4B03#1 = RMul(dof_load49A8,sum4A69);
          real r4B05#1 = RMul(dof_load49B2,sum4A70);
          real r4B07#1 = RMul(dof_load49BC,sum4A76);
          real r4B08#1 = RAdd(r4AF5,r4AF7);
          real r4B09#1 = RAdd(r4B08,r4AF9);
          real r4B0A#1 = RAdd(r4B09,r4AFB);
          real r4B0B#1 = RAdd(r4B0A,r4AFD);
          real r4B0C#1 = RAdd(r4B0B,r4AFF);
          real r4B0D#1 = RAdd(r4B0C,r4B01);
          real r4B0E#1 = RAdd(r4B0D,r4B03);
          real r4B0F#1 = RAdd(r4B0E,r4B05);
          real r4B10#2 = RAdd(r4B0F,r4B07);
          real r4B12#1 = RMul(dof_load4966,sum4A56);
          real r4B14#1 = RMul(dof_load496F,sum4A5A);
          real r4B16#1 = RMul(dof_load4978,sum4A5D);
          real r4B18#1 = RMul(dof_load4981,sum4A60);
          real r4B1A#1 = RMul(dof_load498B,mult4A48);
          real r4B1C#1 = RMul(dof_load4995,mult4A4B);
          real r4B1E#1 = RMul(dof_load499F,mult4A4C);
          real r4B20#1 = RMul(dof_load49A9,sum4A69);
          real r4B22#1 = RMul(dof_load49B3,sum4A70);
          real r4B24#1 = RMul(dof_load49BD,sum4A76);
          real r4B25#1 = RAdd(r4B12,r4B14);
          real r4B26#1 = RAdd(r4B25,r4B16);
          real r4B27#1 = RAdd(r4B26,r4B18);
          real r4B28#1 = RAdd(r4B27,r4B1A);
          real r4B29#1 = RAdd(r4B28,r4B1C);
          real r4B2A#1 = RAdd(r4B29,r4B1E);
          real r4B2B#1 = RAdd(r4B2A,r4B20);
          real r4B2C#1 = RAdd(r4B2B,r4B22);
          real r4B2D#2 = RAdd(r4B2C,r4B24);
          tensor[3] compositionl4ACC#2 = <tensor[3]>[r4AF3,r4B10,r4B2D];
          real op1_e3_l_204B91#1 = VDot<3>(compositionl4ACC,compositionl4ACC);
          real r4B97#1 = RMul(r478C,r4AF3);
          real r4B99#1 = RMul(r478C,r4B10);
          real r4B9B#1 = RMul(r478C,r4B2D);
          real op1_e3_l_224BA5#1 = Sqrt(op1_e3_l_204B91);
          real r4BAA#3 = RDiv(one43DE,op1_e3_l_224BA5);
          real r4BAC#1 = RMul(r4BAA,r4B97);
          real r4BAE#1 = RMul(r4BAA,r4B99);
          real r4BB0#1 = RMul(r4BAA,r4B9B);
          tensor[3] op1_e3_l_234BA8#1 = <tensor[3]>[r4BAC,r4BAE,r4BB0];
          tensor[3] altIntermed4BBB#7 = VAdd<3>(altCPos4300,op1_e3_l_234BA8);
          bool _t4BBE#3 = ExtractFemItem<bool,Valid(MeshPos)>(intermed47EF);
          femData:MeshPos _t4BC0#5 = findPos3B9C (meshData42EE,altIntermed4BBB);
          bool _t4BC2#3 = ExtractFemItem<bool,Valid(MeshPos)>(_t4BC0);
          bool _t4BC4#1 = NEQ<bool>(_t4BBE,_t4BC2);
          if _t4BC4 then goto ASSIGN4BC8 else goto JOIN4BE0
        ASSIGN4BC8:  preds = [COND4BC6]
          string _t4BC7#1 = "ERG:Warning of validity intermed";
          string _t4BC9#3 = "\n";
          Print<[string,tensor[3],string]>(_t4BC7,startPos4302,_t4BC9);
          string _t4BCC#1 = "Real location:";
          Print<[string,tensor[3],string]>(_t4BCC,altIntermed4BBB,_t4BC9);
          string _t4BCF#1 = "Cell change: ";
          femData:Mesh _t4BD1#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4337);
          int _t4BD3#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4337);
          femData:MeshCell _t4BD5#1 = LoadFem<femData:MeshCell>(_t4BD1,_t4BD3);
          string _t4BD7#1 = " to ";
          femData:Mesh _t4BD9#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4BC0);
          int _t4BDB#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4BC0);
          femData:MeshCell _t4BDD#1 = LoadFem<femData:MeshCell>(_t4BD9,_t4BDB);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t4BCF,_t4BD5,_t4BD7,_t4BDD,_t4BC9);
          goto JOIN4BE0
        JOIN4BE0:  preds = [MASSIGN4BDF,COND4BC6]
          bool _t4BE1#2 = BNot(_t4BBE);
          if _t4BE1 then goto ASSIGN4BE5 else goto ASSIGN5352
        ASSIGN4BE5:  preds = [COND4BE3]
          bool _t4BE4#1 = true;
          goto JOIN4BE8
        JOIN4BE8:  preds = [ASSIGN4BE5,ASSIGN5352]
          bool _t4BE6#1 = phi(_t4BE4,_t4BE7)
          if _t4BE6 then goto ASSIGN4BEB else goto JOIN4BF6
        ASSIGN4BEB:  preds = [COND4BE9]
          string _t4BEA#1 = "Went off the mesh\?";
          string _t4BEC#2 = " and ";
          bool _t4BEE#1 = BNot(_t4BC2);
          string _t4BF0#1 = "\n";
          Print<[string,bool,string,tensor[3],string,bool,string]>(_t4BEA,_t4BE1,_t4BEC,altIntermed4BBB,_t4BEC,_t4BEE,_t4BF0);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN4BF6
        JOIN4BF6:  preds = [*STABILIZE4BF5,COND4BE9]
          tensor[3] _t4BF7#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed47EF);
          int _t4BF9#3 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed47EF);
          femData:Mesh _t4BFB#18 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed47EF);
          int mulRes4BFF#4 = IMul(_t4BF9,ilit4365);
          int idx4C02#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,mulRes4BFF);
          int addRes4C04#1 = IAdd(mulRes4BFF,ilit436A);
          int idx4C05#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C04);
          int addRes4C07#1 = IAdd(mulRes4BFF,ilit436D);
          int idx4C08#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C07);
          int addRes4C0A#1 = IAdd(mulRes4BFF,ilit4370);
          int idx4C0B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4BFB,addRes4C0A);
          int mulRes4C21#3 = IMul(ilit4370,idx4C02);
          int addRes4C24#1 = IAdd(ilit436A,mulRes4C21);
          int addRes4C26#1 = IAdd(ilit436D,mulRes4C21);
          real dof_load4C27#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C21);
          real dof_load4C28#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C24);
          real dof_load4C29#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C26);
          int mulRes4C2C#3 = IMul(ilit4370,idx4C05);
          int addRes4C2E#1 = IAdd(ilit436A,mulRes4C2C);
          int addRes4C2F#1 = IAdd(ilit436D,mulRes4C2C);
          real dof_load4C30#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C2C);
          real dof_load4C31#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2E);
          real dof_load4C32#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C2F);
          int mulRes4C35#3 = IMul(ilit4370,idx4C08);
          int addRes4C37#1 = IAdd(ilit436A,mulRes4C35);
          int addRes4C38#1 = IAdd(ilit436D,mulRes4C35);
          real dof_load4C39#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C35);
          real dof_load4C3A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C37);
          real dof_load4C3B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C38);
          int mulRes4C3E#3 = IMul(ilit4370,idx4C0B);
          int addRes4C40#1 = IAdd(ilit436A,mulRes4C3E);
          int addRes4C41#1 = IAdd(ilit436D,mulRes4C3E);
          real dof_load4C42#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,mulRes4C3E);
          real dof_load4C43#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C40);
          real dof_load4C44#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4BFB,addRes4C41);
          real varAcc4C72#5 = VIndex<3,0>(_t4BF7);
          real varAcc4C73#4 = VIndex<3,1>(_t4BF7);
          real varAcc4C74#4 = VIndex<3,2>(_t4BF7);
          real prod4C79#4 = RMul(varAcc4C72,prod43DF);
          real prod4C7B#2 = RMul(varAcc4C73,one43DE);
          real prod4C7C#4 = RMul(one43DE,prod4C7B);
          real prod4C7E#2 = RMul(one43DE,varAcc4C74);
          real prod4C7F#4 = RMul(one43DE,prod4C7E);
          real mult4C82#2 = RMul(coeff43DC,prod4C7F);
          real mult4C83#2 = RMul(coeff43DC,prod4C7C);
          real mult4C84#2 = RMul(coeff43DC,prod4C79);
          real sum4C85#1 = RAdd(mult4C83,mult4C84);
          real sum4C86#1 = RAdd(mult4C82,sum4C85);
          real sum4C87#3 = RAdd(mult43E8,sum4C86);
          real basisEval4C89#3 = RMul(one43DE,prod4C79);
          real basisEval4C8A#3 = RMul(one43DE,prod4C7C);
          real basisEval4C8B#3 = RMul(one43DE,prod4C7F);
          real r4CAC#1 = RMul(dof_load4C27,sum4C87);
          real r4CAF#1 = RMul(dof_load4C30,basisEval4C89);
          real r4CB2#1 = RMul(dof_load4C39,basisEval4C8A);
          real r4CB5#1 = RMul(dof_load4C42,basisEval4C8B);
          real r4CB6#1 = RAdd(r4CAC,r4CAF);
          real r4CB7#1 = RAdd(r4CB6,r4CB2);
          real r4CB8#1 = RAdd(r4CB7,r4CB5);
          real r4CBA#1 = RMul(dof_load4C28,sum4C87);
          real r4CBC#1 = RMul(dof_load4C31,basisEval4C89);
          real r4CBE#1 = RMul(dof_load4C3A,basisEval4C8A);
          real r4CC0#1 = RMul(dof_load4C43,basisEval4C8B);
          real r4CC1#1 = RAdd(r4CBA,r4CBC);
          real r4CC2#1 = RAdd(r4CC1,r4CBE);
          real r4CC3#1 = RAdd(r4CC2,r4CC0);
          real r4CC5#1 = RMul(dof_load4C29,sum4C87);
          real r4CC7#1 = RMul(dof_load4C32,basisEval4C89);
          real r4CC9#1 = RMul(dof_load4C3B,basisEval4C8A);
          real r4CCB#1 = RMul(dof_load4C44,basisEval4C8B);
          real r4CCC#1 = RAdd(r4CC5,r4CC7);
          real r4CCD#1 = RAdd(r4CCC,r4CC9);
          real r4CCE#1 = RAdd(r4CCD,r4CCB);
          tensor[3] _t4CA9#2 = <tensor[3]>[r4CB8,r4CC3,r4CCE];
          tensor[3] op1_e3_l_394D43#2 = VSub<3>(_t4CA9,altIntermed4BBB);
          real op1_e3_l_414D46#1 = VDot<3>(op1_e3_l_394D43,op1_e3_l_394D43);
          real _t4D49#1 = Sqrt(op1_e3_l_414D46);
          bool _t4D4C#1 = GT<real>(_t4D49,_t44BF);
          if _t4D4C then goto ASSIGN4D50 else goto ASSIGN534C
        ASSIGN4D50:  preds = [COND4D4E]
          string _t4D4F#1 = "ERG:Error in tracing 2: At step:";
          string _t4D51#1 = " with particle:";
          string _t4D53#2 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t4D4F,step42FC,_t4D51,startPos4302,_t4D53);
          string _t4D56#1 = "Poses are:";
          Print<[string,tensor[3],tensor[3],string]>(_t4D56,_t4CA9,altIntermed4BBB,_t4D53);
          self.stream = stream4461;
          self.newStream = newStream4467;
          stabilize
          goto JOIN4D5C
        JOIN4D5C:  preds = [*STABILIZE4D5B,MASSIGN5351]
          if _t4BBE then goto ASSIGN4D5F else goto ASSIGN5345
        ASSIGN4D5F:  preds = [COND4D5D]
          femData:MeshCell c4D5E#1 = LoadFem<femData:MeshCell>(_t4BFB,_t4BF9);
          int _t4D60#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c4D5E);
          femData:FuncCell _t4D62#2 = LoadFem<femData:FuncCell>(data42EC,_t4D60);
          femData:FemFunc _t4D64#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t4D62);
          femData:Space _t4D66#10 = ExtractFem<femData:Space,femData:FemFunc>(_t4D64);
          int _t4D68#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t4D62);
          int mulRes4D6C#10 = IMul(_t4D68,ilit4917);
          int idx4D6F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,mulRes4D6C);
          int addRes4D71#1 = IAdd(mulRes4D6C,ilit436A);
          int idx4D72#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D71);
          int addRes4D74#1 = IAdd(mulRes4D6C,ilit436D);
          int idx4D75#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D74);
          int addRes4D77#1 = IAdd(mulRes4D6C,ilit4370);
          int idx4D78#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D77);
          int addRes4D7A#1 = IAdd(mulRes4D6C,ilit4365);
          int idx4D7B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D7A);
          int addRes4D7D#1 = IAdd(mulRes4D6C,ilit4928);
          int idx4D7E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D7D);
          int addRes4D80#1 = IAdd(mulRes4D6C,ilit492B);
          int idx4D81#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D80);
          int addRes4D83#1 = IAdd(mulRes4D6C,ilit492E);
          int idx4D84#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D83);
          int addRes4D86#1 = IAdd(mulRes4D6C,ilit4931);
          int idx4D87#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D86);
          int addRes4D89#1 = IAdd(mulRes4D6C,ilit4934);
          int idx4D8A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t4D66,addRes4D89);
          int mulRes4DB2#3 = IMul(ilit4370,idx4D6F);
          int addRes4DB5#1 = IAdd(ilit436A,mulRes4DB2);
          int addRes4DB7#1 = IAdd(ilit436D,mulRes4DB2);
          real dof_load4DB8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DB2);
          real dof_load4DB9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB5);
          real dof_load4DBA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DB7);
          int mulRes4DBD#3 = IMul(ilit4370,idx4D72);
          int addRes4DBF#1 = IAdd(ilit436A,mulRes4DBD);
          int addRes4DC0#1 = IAdd(ilit436D,mulRes4DBD);
          real dof_load4DC1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DBD);
          real dof_load4DC2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DBF);
          real dof_load4DC3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC0);
          int mulRes4DC6#3 = IMul(ilit4370,idx4D75);
          int addRes4DC8#1 = IAdd(ilit436A,mulRes4DC6);
          int addRes4DC9#1 = IAdd(ilit436D,mulRes4DC6);
          real dof_load4DCA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DC6);
          real dof_load4DCB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC8);
          real dof_load4DCC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DC9);
          int mulRes4DCF#3 = IMul(ilit4370,idx4D78);
          int addRes4DD1#1 = IAdd(ilit436A,mulRes4DCF);
          int addRes4DD2#1 = IAdd(ilit436D,mulRes4DCF);
          real dof_load4DD3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DCF);
          real dof_load4DD4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD1);
          real dof_load4DD5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DD2);
          int mulRes4DD9#3 = IMul(ilit4370,idx4D7B);
          int addRes4DDB#1 = IAdd(ilit436A,mulRes4DD9);
          int addRes4DDC#1 = IAdd(ilit436D,mulRes4DD9);
          real dof_load4DDD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DD9);
          real dof_load4DDE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDB);
          real dof_load4DDF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DDC);
          int mulRes4DE3#3 = IMul(ilit4370,idx4D7E);
          int addRes4DE5#1 = IAdd(ilit436A,mulRes4DE3);
          int addRes4DE6#1 = IAdd(ilit436D,mulRes4DE3);
          real dof_load4DE7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DE3);
          real dof_load4DE8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE5);
          real dof_load4DE9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DE6);
          int mulRes4DED#3 = IMul(ilit4370,idx4D81);
          int addRes4DEF#1 = IAdd(ilit436A,mulRes4DED);
          int addRes4DF0#1 = IAdd(ilit436D,mulRes4DED);
          real dof_load4DF1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DED);
          real dof_load4DF2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DEF);
          real dof_load4DF3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF0);
          int mulRes4DF7#3 = IMul(ilit4370,idx4D84);
          int addRes4DF9#1 = IAdd(ilit436A,mulRes4DF7);
          int addRes4DFA#1 = IAdd(ilit436D,mulRes4DF7);
          real dof_load4DFB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4DF7);
          real dof_load4DFC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DF9);
          real dof_load4DFD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4DFA);
          int mulRes4E01#3 = IMul(ilit4370,idx4D87);
          int addRes4E03#1 = IAdd(ilit436A,mulRes4E01);
          int addRes4E04#1 = IAdd(ilit436D,mulRes4E01);
          real dof_load4E05#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4E01);
          real dof_load4E06#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E03);
          real dof_load4E07#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E04);
          int mulRes4E0B#3 = IMul(ilit4370,idx4D8A);
          int addRes4E0D#1 = IAdd(ilit436A,mulRes4E0B);
          int addRes4E0E#1 = IAdd(ilit436D,mulRes4E0B);
          real dof_load4E0F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,mulRes4E0B);
          real dof_load4E10#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0D);
          real dof_load4E11#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t4D64,addRes4E0E);
          real prod24E80#1 = RMul(varAcc4C72,varAcc4C72);
          real prod4E83#2 = RMul(prod24E80,prod43DF);
          real prod4E87#2 = RMul(varAcc4C72,prod4C7B);
          real prod4E8A#2 = RMul(varAcc4C72,prod4C7E);
          real prod24E8D#1 = RMul(varAcc4C73,varAcc4C73);
          real prod4E8E#1 = RMul(prod24E8D,one43DE);
          real prod4E8F#2 = RMul(one43DE,prod4E8E);
          real prod4E90#1 = RMul(varAcc4C73,varAcc4C74);
          real prod4E91#2 = RMul(one43DE,prod4E90);
          real prod24E93#1 = RMul(varAcc4C74,varAcc4C74);
          real prod4E94#1 = RMul(one43DE,prod24E93);
          real prod4E95#2 = RMul(one43DE,prod4E94);
          real mult4E99#1 = RMul(coeff4A37,prod4C7F);
          real mult4E9A#2 = RMul(coeff4A2A,prod4E95);
          real mult4E9B#1 = RMul(coeff4A37,prod4C7C);
          real mult4E9C#4 = RMul(coeff4A30,prod4E91);
          real mult4E9D#2 = RMul(coeff4A2A,prod4E8F);
          real mult4E9E#1 = RMul(coeff4A37,prod4C79);
          real mult4E9F#4 = RMul(coeff4A30,prod4E8A);
          real mult4EA0#4 = RMul(coeff4A30,prod4E87);
          real mult4EA1#2 = RMul(coeff4A2A,prod4E83);
          real sum4EA2#1 = RAdd(mult4EA0,mult4EA1);
          real sum4EA3#1 = RAdd(mult4E9F,sum4EA2);
          real sum4EA4#1 = RAdd(mult4E9E,sum4EA3);
          real sum4EA5#1 = RAdd(mult4E9D,sum4EA4);
          real sum4EA6#1 = RAdd(mult4E9C,sum4EA5);
          real sum4EA7#1 = RAdd(mult4E9B,sum4EA6);
          real sum4EA8#1 = RAdd(mult4E9A,sum4EA7);
          real sum4EA9#1 = RAdd(mult4E99,sum4EA8);
          real sum4EAA#3 = RAdd(mult43E8,sum4EA9);
          real sum4EAE#3 = RAdd(mult4C84,mult4EA1);
          real sum4EB1#3 = RAdd(mult4C83,mult4E9D);
          real sum4EB4#3 = RAdd(mult4C82,mult4E9A);
          real mult4EB7#1 = RMul(coeff4A30,prod4C7F);
          real mult4EB8#1 = RMul(coeff4A62,prod4E95);
          real mult4EB9#2 = RMul(coeff4A62,prod4E91);
          real mult4EBA#2 = RMul(coeff4A62,prod4E8A);
          real sum4EBB#1 = RAdd(mult4EB9,mult4EBA);
          real sum4EBC#1 = RAdd(mult4EB8,sum4EBB);
          real sum4EBD#3 = RAdd(mult4EB7,sum4EBC);
          real mult4EBF#1 = RMul(coeff4A30,prod4C7C);
          real mult4EC0#1 = RMul(coeff4A62,prod4E8F);
          real mult4EC1#2 = RMul(coeff4A62,prod4E87);
          real sum4EC2#1 = RAdd(mult4EC0,mult4EC1);
          real sum4EC3#1 = RAdd(mult4EB9,sum4EC2);
          real sum4EC4#3 = RAdd(mult4EBF,sum4EC3);
          real mult4EC6#1 = RMul(coeff4A30,prod4C79);
          real mult4EC7#1 = RMul(coeff4A62,prod4E83);
          real sum4EC8#1 = RAdd(mult4EC1,mult4EC7);
          real sum4EC9#1 = RAdd(mult4EBA,sum4EC8);
          real sum4ECA#3 = RAdd(mult4EC6,sum4EC9);
          real r4F23#1 = RMul(dof_load4DB8,sum4EAA);
          real r4F26#1 = RMul(dof_load4DC1,sum4EAE);
          real r4F29#1 = RMul(dof_load4DCA,sum4EB1);
          real r4F2C#1 = RMul(dof_load4DD3,sum4EB4);
          real r4F2F#1 = RMul(dof_load4DDD,mult4E9C);
          real r4F32#1 = RMul(dof_load4DE7,mult4E9F);
          real r4F35#1 = RMul(dof_load4DF1,mult4EA0);
          real r4F38#1 = RMul(dof_load4DFB,sum4EBD);
          real r4F3B#1 = RMul(dof_load4E05,sum4EC4);
          real r4F3E#1 = RMul(dof_load4E0F,sum4ECA);
          real r4F3F#1 = RAdd(r4F23,r4F26);
          real r4F40#1 = RAdd(r4F3F,r4F29);
          real r4F41#1 = RAdd(r4F40,r4F2C);
          real r4F42#1 = RAdd(r4F41,r4F2F);
          real r4F43#1 = RAdd(r4F42,r4F32);
          real r4F44#1 = RAdd(r4F43,r4F35);
          real r4F45#1 = RAdd(r4F44,r4F38);
          real r4F46#1 = RAdd(r4F45,r4F3B);
          real r4F47#2 = RAdd(r4F46,r4F3E);
          real r4F49#1 = RMul(dof_load4DB9,sum4EAA);
          real r4F4B#1 = RMul(dof_load4DC2,sum4EAE);
          real r4F4D#1 = RMul(dof_load4DCB,sum4EB1);
          real r4F4F#1 = RMul(dof_load4DD4,sum4EB4);
          real r4F51#1 = RMul(dof_load4DDE,mult4E9C);
          real r4F53#1 = RMul(dof_load4DE8,mult4E9F);
          real r4F55#1 = RMul(dof_load4DF2,mult4EA0);
          real r4F57#1 = RMul(dof_load4DFC,sum4EBD);
          real r4F59#1 = RMul(dof_load4E06,sum4EC4);
          real r4F5B#1 = RMul(dof_load4E10,sum4ECA);
          real r4F5C#1 = RAdd(r4F49,r4F4B);
          real r4F5D#1 = RAdd(r4F5C,r4F4D);
          real r4F5E#1 = RAdd(r4F5D,r4F4F);
          real r4F5F#1 = RAdd(r4F5E,r4F51);
          real r4F60#1 = RAdd(r4F5F,r4F53);
          real r4F61#1 = RAdd(r4F60,r4F55);
          real r4F62#1 = RAdd(r4F61,r4F57);
          real r4F63#1 = RAdd(r4F62,r4F59);
          real r4F64#2 = RAdd(r4F63,r4F5B);
          real r4F66#1 = RMul(dof_load4DBA,sum4EAA);
          real r4F68#1 = RMul(dof_load4DC3,sum4EAE);
          real r4F6A#1 = RMul(dof_load4DCC,sum4EB1);
          real r4F6C#1 = RMul(dof_load4DD5,sum4EB4);
          real r4F6E#1 = RMul(dof_load4DDF,mult4E9C);
          real r4F70#1 = RMul(dof_load4DE9,mult4E9F);
          real r4F72#1 = RMul(dof_load4DF3,mult4EA0);
          real r4F74#1 = RMul(dof_load4DFD,sum4EBD);
          real r4F76#1 = RMul(dof_load4E07,sum4EC4);
          real r4F78#1 = RMul(dof_load4E11,sum4ECA);
          real r4F79#1 = RAdd(r4F66,r4F68);
          real r4F7A#1 = RAdd(r4F79,r4F6A);
          real r4F7B#1 = RAdd(r4F7A,r4F6C);
          real r4F7C#1 = RAdd(r4F7B,r4F6E);
          real r4F7D#1 = RAdd(r4F7C,r4F70);
          real r4F7E#1 = RAdd(r4F7D,r4F72);
          real r4F7F#1 = RAdd(r4F7E,r4F74);
          real r4F80#1 = RAdd(r4F7F,r4F76);
          real r4F81#2 = RAdd(r4F80,r4F78);
          tensor[3] probe_l_84F20#2 = <tensor[3]>[r4F47,r4F64,r4F81];
          real op1_e3_l_114FE5#1 = VDot<3>(probe_l_84F20,probe_l_84F20);
          real op1_e3_l_124FE8#1 = Sqrt(op1_e3_l_114FE5);
          real r4FED#3 = RDiv(one43DE,op1_e3_l_124FE8);
          real r4FEF#1 = RMul(r4FED,r4F47);
          real r4FF1#1 = RMul(r4FED,r4F64);
          real r4FF3#1 = RMul(r4FED,r4F81);
          tensor[3] _t4FEB#1 = <tensor[3]>[r4FEF,r4FF1,r4FF3];
          goto JOIN5000
        JOIN5000:  preds = [ASSIGN4FFD,ASSIGN534A]
          tensor[3] _t4FFE#1 = phi(_t4FEB,_t4FFF)
          tensor[3] up25001#4 = VScale<3>(stepSize42F0,_t4FFE);
          femData:MeshPos cPos5004#1 = fn_2FB47F0 (cPos42FE,up25001);
          femData:MeshPos callFindPos5006#2 = findPos3B9C (_t42E8,altIntermed4BBB);
          int intPos5008#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5006);
          tensor[3] refPos500A#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5006);
          int mulRes500E#10 = IMul(intPos5008,ilit4917);
          int idx5011#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,mulRes500E);
          int addRes5013#1 = IAdd(mulRes500E,ilit436A);
          int idx5014#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5013);
          int addRes5016#1 = IAdd(mulRes500E,ilit436D);
          int idx5017#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5016);
          int addRes5019#1 = IAdd(mulRes500E,ilit4370);
          int idx501A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5019);
          int addRes501C#1 = IAdd(mulRes500E,ilit4365);
          int idx501D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes501C);
          int addRes501F#1 = IAdd(mulRes500E,ilit4928);
          int idx5020#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes501F);
          int addRes5022#1 = IAdd(mulRes500E,ilit492B);
          int idx5023#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5022);
          int addRes5025#1 = IAdd(mulRes500E,ilit492E);
          int idx5026#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5025);
          int addRes5028#1 = IAdd(mulRes500E,ilit4931);
          int idx5029#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5028);
          int addRes502B#1 = IAdd(mulRes500E,ilit4934);
          int idx502C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes502B);
          int mulRes5054#3 = IMul(ilit4370,idx5011);
          int addRes5057#1 = IAdd(ilit436A,mulRes5054);
          int addRes5059#1 = IAdd(ilit436D,mulRes5054);
          real dof_load505A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5054);
          real dof_load505B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5057);
          real dof_load505C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5059);
          int mulRes505F#3 = IMul(ilit4370,idx5014);
          int addRes5061#1 = IAdd(ilit436A,mulRes505F);
          int addRes5062#1 = IAdd(ilit436D,mulRes505F);
          real dof_load5063#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes505F);
          real dof_load5064#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5061);
          real dof_load5065#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5062);
          int mulRes5068#3 = IMul(ilit4370,idx5017);
          int addRes506A#1 = IAdd(ilit436A,mulRes5068);
          int addRes506B#1 = IAdd(ilit436D,mulRes5068);
          real dof_load506C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5068);
          real dof_load506D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes506A);
          real dof_load506E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes506B);
          int mulRes5071#3 = IMul(ilit4370,idx501A);
          int addRes5073#1 = IAdd(ilit436A,mulRes5071);
          int addRes5074#1 = IAdd(ilit436D,mulRes5071);
          real dof_load5075#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5071);
          real dof_load5076#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5073);
          real dof_load5077#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5074);
          int mulRes507B#3 = IMul(ilit4370,idx501D);
          int addRes507D#1 = IAdd(ilit436A,mulRes507B);
          int addRes507E#1 = IAdd(ilit436D,mulRes507B);
          real dof_load507F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes507B);
          real dof_load5080#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507D);
          real dof_load5081#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes507E);
          int mulRes5085#3 = IMul(ilit4370,idx5020);
          int addRes5087#1 = IAdd(ilit436A,mulRes5085);
          int addRes5088#1 = IAdd(ilit436D,mulRes5085);
          real dof_load5089#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5085);
          real dof_load508A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5087);
          real dof_load508B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5088);
          int mulRes508F#3 = IMul(ilit4370,idx5023);
          int addRes5091#1 = IAdd(ilit436A,mulRes508F);
          int addRes5092#1 = IAdd(ilit436D,mulRes508F);
          real dof_load5093#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes508F);
          real dof_load5094#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5091);
          real dof_load5095#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes5092);
          int mulRes5099#3 = IMul(ilit4370,idx5026);
          int addRes509B#1 = IAdd(ilit436A,mulRes5099);
          int addRes509C#1 = IAdd(ilit436D,mulRes5099);
          real dof_load509D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes5099);
          real dof_load509E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509B);
          real dof_load509F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes509C);
          int mulRes50A3#3 = IMul(ilit4370,idx5029);
          int addRes50A5#1 = IAdd(ilit436A,mulRes50A3);
          int addRes50A6#1 = IAdd(ilit436D,mulRes50A3);
          real dof_load50A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes50A3);
          real dof_load50A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A5);
          real dof_load50A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50A6);
          int mulRes50AD#3 = IMul(ilit4370,idx502C);
          int addRes50AF#1 = IAdd(ilit436A,mulRes50AD);
          int addRes50B0#1 = IAdd(ilit436D,mulRes50AD);
          real dof_load50B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes50AD);
          real dof_load50B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50AF);
          real dof_load50B3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes50B0);
          real varAcc511D#5 = VIndex<3,0>(refPos500A);
          real varAcc511E#4 = VIndex<3,1>(refPos500A);
          real varAcc511F#4 = VIndex<3,2>(refPos500A);
          real prod25122#1 = RMul(varAcc511D,varAcc511D);
          real prod5125#2 = RMul(prod25122,prod43DF);
          real prod5128#2 = RMul(varAcc511E,one43DE);
          real prod5129#2 = RMul(varAcc511D,prod5128);
          real prod512B#2 = RMul(one43DE,varAcc511F);
          real prod512C#2 = RMul(varAcc511D,prod512B);
          real prod512E#3 = RMul(varAcc511D,prod43DF);
          real prod2512F#1 = RMul(varAcc511E,varAcc511E);
          real prod5130#1 = RMul(prod2512F,one43DE);
          real prod5131#2 = RMul(one43DE,prod5130);
          real prod5132#1 = RMul(varAcc511E,varAcc511F);
          real prod5133#2 = RMul(one43DE,prod5132);
          real prod5134#3 = RMul(one43DE,prod5128);
          real prod25135#1 = RMul(varAcc511F,varAcc511F);
          real prod5136#1 = RMul(one43DE,prod25135);
          real prod5137#2 = RMul(one43DE,prod5136);
          real prod5138#3 = RMul(one43DE,prod512B);
          real mult513B#1 = RMul(coeff4A37,prod5138);
          real mult513C#2 = RMul(coeff4A2A,prod5137);
          real mult513D#1 = RMul(coeff4A37,prod5134);
          real mult513E#4 = RMul(coeff4A30,prod5133);
          real mult513F#2 = RMul(coeff4A2A,prod5131);
          real mult5140#1 = RMul(coeff4A37,prod512E);
          real mult5141#4 = RMul(coeff4A30,prod512C);
          real mult5142#4 = RMul(coeff4A30,prod5129);
          real mult5143#2 = RMul(coeff4A2A,prod5125);
          real sum5144#1 = RAdd(mult5142,mult5143);
          real sum5145#1 = RAdd(mult5141,sum5144);
          real sum5146#1 = RAdd(mult5140,sum5145);
          real sum5147#1 = RAdd(mult513F,sum5146);
          real sum5148#1 = RAdd(mult513E,sum5147);
          real sum5149#1 = RAdd(mult513D,sum5148);
          real sum514A#1 = RAdd(mult513C,sum5149);
          real sum514B#1 = RAdd(mult513B,sum514A);
          real sum514C#3 = RAdd(mult43E8,sum514B);
          real mult514F#1 = RMul(coeff43DC,prod512E);
          real sum5150#3 = RAdd(mult514F,mult5143);
          real mult5152#1 = RMul(coeff43DC,prod5134);
          real sum5153#3 = RAdd(mult5152,mult513F);
          real mult5155#1 = RMul(coeff43DC,prod5138);
          real sum5156#3 = RAdd(mult5155,mult513C);
          real mult5159#1 = RMul(coeff4A30,prod5138);
          real mult515A#1 = RMul(coeff4A62,prod5137);
          real mult515B#2 = RMul(coeff4A62,prod5133);
          real mult515C#2 = RMul(coeff4A62,prod512C);
          real sum515D#1 = RAdd(mult515B,mult515C);
          real sum515E#1 = RAdd(mult515A,sum515D);
          real sum515F#3 = RAdd(mult5159,sum515E);
          real mult5161#1 = RMul(coeff4A30,prod5134);
          real mult5162#1 = RMul(coeff4A62,prod5131);
          real mult5163#2 = RMul(coeff4A62,prod5129);
          real sum5164#1 = RAdd(mult5162,mult5163);
          real sum5165#1 = RAdd(mult515B,sum5164);
          real sum5166#3 = RAdd(mult5161,sum5165);
          real mult5168#1 = RMul(coeff4A30,prod512E);
          real mult5169#1 = RMul(coeff4A62,prod5125);
          real sum516A#1 = RAdd(mult5163,mult5169);
          real sum516B#1 = RAdd(mult515C,sum516A);
          real sum516C#3 = RAdd(mult5168,sum516B);
          real r51C5#1 = RMul(dof_load505A,sum514C);
          real r51C8#1 = RMul(dof_load5063,sum5150);
          real r51CB#1 = RMul(dof_load506C,sum5153);
          real r51CE#1 = RMul(dof_load5075,sum5156);
          real r51D1#1 = RMul(dof_load507F,mult513E);
          real r51D4#1 = RMul(dof_load5089,mult5141);
          real r51D7#1 = RMul(dof_load5093,mult5142);
          real r51DA#1 = RMul(dof_load509D,sum515F);
          real r51DD#1 = RMul(dof_load50A7,sum5166);
          real r51E0#1 = RMul(dof_load50B1,sum516C);
          real r51E1#1 = RAdd(r51C5,r51C8);
          real r51E2#1 = RAdd(r51E1,r51CB);
          real r51E3#1 = RAdd(r51E2,r51CE);
          real r51E4#1 = RAdd(r51E3,r51D1);
          real r51E5#1 = RAdd(r51E4,r51D4);
          real r51E6#1 = RAdd(r51E5,r51D7);
          real r51E7#1 = RAdd(r51E6,r51DA);
          real r51E8#1 = RAdd(r51E7,r51DD);
          real r51E9#1 = RAdd(r51E8,r51E0);
          real r51EB#1 = RMul(dof_load505B,sum514C);
          real r51ED#1 = RMul(dof_load5064,sum5150);
          real r51EF#1 = RMul(dof_load506D,sum5153);
          real r51F1#1 = RMul(dof_load5076,sum5156);
          real r51F3#1 = RMul(dof_load5080,mult513E);
          real r51F5#1 = RMul(dof_load508A,mult5141);
          real r51F7#1 = RMul(dof_load5094,mult5142);
          real r51F9#1 = RMul(dof_load509E,sum515F);
          real r51FB#1 = RMul(dof_load50A8,sum5166);
          real r51FD#1 = RMul(dof_load50B2,sum516C);
          real r51FE#1 = RAdd(r51EB,r51ED);
          real r51FF#1 = RAdd(r51FE,r51EF);
          real r5200#1 = RAdd(r51FF,r51F1);
          real r5201#1 = RAdd(r5200,r51F3);
          real r5202#1 = RAdd(r5201,r51F5);
          real r5203#1 = RAdd(r5202,r51F7);
          real r5204#1 = RAdd(r5203,r51F9);
          real r5205#1 = RAdd(r5204,r51FB);
          real r5206#1 = RAdd(r5205,r51FD);
          real r5208#1 = RMul(dof_load505C,sum514C);
          real r520A#1 = RMul(dof_load5065,sum5150);
          real r520C#1 = RMul(dof_load506E,sum5153);
          real r520E#1 = RMul(dof_load5077,sum5156);
          real r5210#1 = RMul(dof_load5081,mult513E);
          real r5212#1 = RMul(dof_load508B,mult5141);
          real r5214#1 = RMul(dof_load5095,mult5142);
          real r5216#1 = RMul(dof_load509F,sum515F);
          real r5218#1 = RMul(dof_load50A9,sum5166);
          real r521A#1 = RMul(dof_load50B3,sum516C);
          real r521B#1 = RAdd(r5208,r520A);
          real r521C#1 = RAdd(r521B,r520C);
          real r521D#1 = RAdd(r521C,r520E);
          real r521E#1 = RAdd(r521D,r5210);
          real r521F#1 = RAdd(r521E,r5212);
          real r5220#1 = RAdd(r521F,r5214);
          real r5221#1 = RAdd(r5220,r5216);
          real r5222#1 = RAdd(r5221,r5218);
          real r5223#1 = RAdd(r5222,r521A);
          tensor[3] compositionl51C2#3 = <tensor[3]>[r51E9,r5206,r5223];
          real op1_e3_l_195287#1 = VDot<3>(compositionl51C2,compositionl51C2);
          tensor[3] op1_e3_l_20528A#3 = VScale<3>(stepSize42F0,compositionl51C2);
          real op1_e3_l_21528D#1 = Sqrt(op1_e3_l_195287);
          real r5292#3 = RDiv(one43DE,op1_e3_l_21528D);
          real r5293#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_20528A);
          real r5294#1 = RMul(r5292,r5293);
          real r5295#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_20528A);
          real r5296#1 = RMul(r5292,r5295);
          real r5297#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_20528A);
          real r5298#1 = RMul(r5292,r5297);
          tensor[3] op1_e3_l_225290#3 = <tensor[3]>[r5294,r5296,r5298];
          tensor[3] altCPos52A3#1 = VAdd<3>(altCPos4300,op1_e3_l_225290);
          int step52A8#1 = IAdd(step42FC,ilit436A);
          tensor[3] op1_e3_l_4952D1#3 = VSub<3>(altIntermed4BBB,center42F6);
          real vdot52D6#1 = VDot<3>(projParam479F,op1_e3_l_4952D1);
          real vdot52D8#1 = VDot<3>(projParam47A1,op1_e3_l_4952D1);
          real vdot52DA#1 = VDot<3>(projParam47A3,op1_e3_l_4952D1);
          tensor[3] op1_e3_l_5052D4#3 = <tensor[3]>[vdot52D6,vdot52D8,vdot52DA];
          real op1_e3_l_7152E3#1 = VDot<3>(op1_e3_l_5052D4,op1_e3_l_5052D4);
          tensor[3] op1_e3_l_7252E6#3 = VScale<3>(stepSize42F0,op1_e3_l_5052D4);
          real op1_e3_l_7352E9#1 = Sqrt(op1_e3_l_7152E3);
          real r52EE#3 = RDiv(one43DE,op1_e3_l_7352E9);
          real r52EF#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_7252E6);
          real r52F0#1 = RMul(r52EE,r52EF);
          real r52F1#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_7252E6);
          real r52F2#1 = RMul(r52EE,r52F1);
          real r52F3#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_7252E6);
          real r52F4#1 = RMul(r52EE,r52F3);
          tensor[3] op1_e3_l_7552EC#1 = <tensor[3]>[r52F0,r52F2,r52F4];
          tensor[3] op1_e3_l_11152FF#2 = VSub<3>(up25001,op1_e3_l_7552EC);
          real op1_e3_l_1135302#1 = VDot<3>(op1_e3_l_11152FF,op1_e3_l_11152FF);
          real _t5305#2 = Sqrt(op1_e3_l_1135302);
          bool _t5308#1 = GT<real>(_t5305,_t44BF);
          if _t5308 then goto ASSIGN530C else goto ASSIGN533A
        ASSIGN530C:  preds = [COND530A]
          bool _t530B#1 = true;
          goto JOIN530F
        JOIN530F:  preds = [ASSIGN530C,ASSIGN5343]
          bool _t530D#1 = phi(_t530B,_t530E)
          if _t530D then goto ASSIGN5312 else goto JOIN5331
        ASSIGN5312:  preds = [COND5310]
          string _t5311#1 = "ERG:Error in evaluation on pos 2:";
          string _t5313#3 = "\n";
          Print<[string,tensor[3],string]>(_t5311,startPos4302,_t5313);
          string _t5316#1 = "The errors are:";
          string _t5318#1 = " and ";
          tensor[3] op1_e3_l_33531A#2 = VSub<3>(up25001,op1_e3_l_225290);
          real op1_e3_l_35531D#1 = VDot<3>(op1_e3_l_33531A,op1_e3_l_33531A);
          real _t5320#1 = Sqrt(op1_e3_l_35531D);
          Print<[string,real,string,real,string]>(_t5316,_t5305,_t5318,_t5320,_t5313);
          string _t5324#1 = "The cells are:";
          femData:MeshCell _t5326#1 = LoadFem<femData:MeshCell>(_t4BFB,_t4BF9);
          string _t5328#1 = " vs ";
          femData:Mesh _t532A#1 = ExtractFem<femData:Mesh,femData:MeshPos>(_t4BC0);
          int _t532C#1 = ExtractFemItem<int,CellIndex(MeshPos)>(_t4BC0);
          femData:MeshCell _t532E#1 = LoadFem<femData:MeshCell>(_t532A,_t532C);
          Print<[string,femData:MeshCell,string,femData:MeshCell,string]>(_t5324,_t5326,_t5328,_t532E,_t5313);
          goto JOIN5331
        JOIN5331:  preds = [MASSIGN5330,COND5310]
          self.stream = stream4461;
          self.newStream = newStream4467;
          self.step = step52A8;
          self.cPos = cPos5004;
          self.altCPos = altCPos52A3;
          active
        ASSIGN533A:  preds = [COND530A]
          tensor[3] op1_e3_l_335338#2 = VSub<3>(up25001,op1_e3_l_225290);
          real op1_e3_l_35533B#1 = VDot<3>(op1_e3_l_335338,op1_e3_l_335338);
          real _t533E#1 = Sqrt(op1_e3_l_35533B);
          real _t5341#1 = 0.1e-4;
          bool _t530E#1 = GT<real>(_t533E,_t5341);
          goto JOIN530F
        ASSIGN5345:  preds = [COND4D5D]
          string _t5344#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t5344);
          real realLit5347#3 = 0.e0;
          tensor[3] _t4FFF#1 = <tensor[3]>[realLit5347,realLit5347,realLit5347];
          goto JOIN5000
        ASSIGN534C:  preds = [COND4D4E]
          string _t534B#1 = "fine in cell 2:";
          femData:MeshCell _t534D#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t534F#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t534B,_t534D,_t534F);
          goto JOIN4D5C
        ASSIGN5352:  preds = [COND4BE3]
          bool _t4BE7#1 = BNot(_t4BC2);
          goto JOIN4BE8
        ASSIGN5354:  preds = [COND47E2]
          femData:MeshPos callFindPos5353#2 = findPos3B9C (_t42E8,altCPos4300);
          int intPos5355#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5353);
          tensor[3] refPos5357#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5353);
          int ilit535A#1 = 10;
          int mulRes535B#10 = IMul(intPos5355,ilit535A);
          int idx535E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,mulRes535B);
          int addRes5360#1 = IAdd(mulRes535B,ilit436A);
          int idx5361#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5360);
          int addRes5363#1 = IAdd(mulRes535B,ilit436D);
          int idx5364#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5363);
          int addRes5366#1 = IAdd(mulRes535B,ilit4370);
          int idx5367#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5366);
          int addRes5369#1 = IAdd(mulRes535B,ilit4365);
          int idx536A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5369);
          int ilit536B#1 = 5;
          int addRes536C#1 = IAdd(mulRes535B,ilit536B);
          int idx536D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes536C);
          int ilit536E#1 = 6;
          int addRes536F#1 = IAdd(mulRes535B,ilit536E);
          int idx5370#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes536F);
          int ilit5371#1 = 7;
          int addRes5372#1 = IAdd(mulRes535B,ilit5371);
          int idx5373#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5372);
          int ilit5374#1 = 8;
          int addRes5375#1 = IAdd(mulRes535B,ilit5374);
          int idx5376#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5375);
          int ilit5377#1 = 9;
          int addRes5378#1 = IAdd(mulRes535B,ilit5377);
          int idx5379#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t42EA,addRes5378);
          int mulRes53A1#3 = IMul(ilit4370,idx535E);
          int addRes53A4#1 = IAdd(ilit436A,mulRes53A1);
          int addRes53A6#1 = IAdd(ilit436D,mulRes53A1);
          real dof_load53A7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53A1);
          real dof_load53A8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A4);
          real dof_load53A9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53A6);
          int mulRes53AC#3 = IMul(ilit4370,idx5361);
          int addRes53AE#1 = IAdd(ilit436A,mulRes53AC);
          int addRes53AF#1 = IAdd(ilit436D,mulRes53AC);
          real dof_load53B0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53AC);
          real dof_load53B1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AE);
          real dof_load53B2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53AF);
          int mulRes53B5#3 = IMul(ilit4370,idx5364);
          int addRes53B7#1 = IAdd(ilit436A,mulRes53B5);
          int addRes53B8#1 = IAdd(ilit436D,mulRes53B5);
          real dof_load53B9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53B5);
          real dof_load53BA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B7);
          real dof_load53BB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53B8);
          int mulRes53BE#3 = IMul(ilit4370,idx5367);
          int addRes53C0#1 = IAdd(ilit436A,mulRes53BE);
          int addRes53C1#1 = IAdd(ilit436D,mulRes53BE);
          real dof_load53C2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53BE);
          real dof_load53C3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C0);
          real dof_load53C4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53C1);
          int mulRes53C8#3 = IMul(ilit4370,idx536A);
          int addRes53CA#1 = IAdd(ilit436A,mulRes53C8);
          int addRes53CB#1 = IAdd(ilit436D,mulRes53C8);
          real dof_load53CC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53C8);
          real dof_load53CD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53CA);
          real dof_load53CE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53CB);
          int mulRes53D2#3 = IMul(ilit4370,idx536D);
          int addRes53D4#1 = IAdd(ilit436A,mulRes53D2);
          int addRes53D5#1 = IAdd(ilit436D,mulRes53D2);
          real dof_load53D6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53D2);
          real dof_load53D7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D4);
          real dof_load53D8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53D5);
          int mulRes53DC#3 = IMul(ilit4370,idx5370);
          int addRes53DE#1 = IAdd(ilit436A,mulRes53DC);
          int addRes53DF#1 = IAdd(ilit436D,mulRes53DC);
          real dof_load53E0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53DC);
          real dof_load53E1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DE);
          real dof_load53E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53DF);
          int mulRes53E6#3 = IMul(ilit4370,idx5373);
          int addRes53E8#1 = IAdd(ilit436A,mulRes53E6);
          int addRes53E9#1 = IAdd(ilit436D,mulRes53E6);
          real dof_load53EA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53E6);
          real dof_load53EB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E8);
          real dof_load53EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53E9);
          int mulRes53F0#3 = IMul(ilit4370,idx5376);
          int addRes53F2#1 = IAdd(ilit436A,mulRes53F0);
          int addRes53F3#1 = IAdd(ilit436D,mulRes53F0);
          real dof_load53F4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53F0);
          real dof_load53F5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F2);
          real dof_load53F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53F3);
          int mulRes53FA#3 = IMul(ilit4370,idx5379);
          int addRes53FC#1 = IAdd(ilit436A,mulRes53FA);
          int addRes53FD#1 = IAdd(ilit436D,mulRes53FA);
          real dof_load53FE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,mulRes53FA);
          real dof_load53FF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FC);
          real dof_load5400#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data42EC,addRes53FD);
          real varAcc546A#5 = VIndex<3,0>(refPos5357);
          real varAcc546B#4 = VIndex<3,1>(refPos5357);
          real varAcc546C#4 = VIndex<3,2>(refPos5357);
          real coeff546D#3 = 0.2e1;
          real prod2546F#1 = RMul(varAcc546A,varAcc546A);
          real prod5472#2 = RMul(prod2546F,prod43DF);
          real coeff5473#6 = 0.4e1;
          real prod5475#2 = RMul(varAcc546B,one43DE);
          real prod5476#2 = RMul(varAcc546A,prod5475);
          real prod5478#2 = RMul(one43DE,varAcc546C);
          real prod5479#2 = RMul(varAcc546A,prod5478);
          real coeff547A#3 = -0.3e1;
          real prod547B#3 = RMul(varAcc546A,prod43DF);
          real prod2547C#1 = RMul(varAcc546B,varAcc546B);
          real prod547D#1 = RMul(prod2547C,one43DE);
          real prod547E#2 = RMul(one43DE,prod547D);
          real prod547F#1 = RMul(varAcc546B,varAcc546C);
          real prod5480#2 = RMul(one43DE,prod547F);
          real prod5481#3 = RMul(one43DE,prod5475);
          real prod25482#1 = RMul(varAcc546C,varAcc546C);
          real prod5483#1 = RMul(one43DE,prod25482);
          real prod5484#2 = RMul(one43DE,prod5483);
          real prod5485#3 = RMul(one43DE,prod5478);
          real mult5488#1 = RMul(coeff547A,prod5485);
          real mult5489#2 = RMul(coeff546D,prod5484);
          real mult548A#1 = RMul(coeff547A,prod5481);
          real mult548B#4 = RMul(coeff5473,prod5480);
          real mult548C#2 = RMul(coeff546D,prod547E);
          real mult548D#1 = RMul(coeff547A,prod547B);
          real mult548E#4 = RMul(coeff5473,prod5479);
          real mult548F#4 = RMul(coeff5473,prod5476);
          real mult5490#2 = RMul(coeff546D,prod5472);
          real sum5491#1 = RAdd(mult548F,mult5490);
          real sum5492#1 = RAdd(mult548E,sum5491);
          real sum5493#1 = RAdd(mult548D,sum5492);
          real sum5494#1 = RAdd(mult548C,sum5493);
          real sum5495#1 = RAdd(mult548B,sum5494);
          real sum5496#1 = RAdd(mult548A,sum5495);
          real sum5497#1 = RAdd(mult5489,sum5496);
          real sum5498#1 = RAdd(mult5488,sum5497);
          real sum5499#3 = RAdd(mult43E8,sum5498);
          real mult549C#1 = RMul(coeff43DC,prod547B);
          real sum549D#3 = RAdd(mult549C,mult5490);
          real mult549F#1 = RMul(coeff43DC,prod5481);
          real sum54A0#3 = RAdd(mult549F,mult548C);
          real mult54A2#1 = RMul(coeff43DC,prod5485);
          real sum54A3#3 = RAdd(mult54A2,mult5489);
          real coeff54A5#6 = -0.4e1;
          real mult54A6#1 = RMul(coeff5473,prod5485);
          real mult54A7#1 = RMul(coeff54A5,prod5484);
          real mult54A8#2 = RMul(coeff54A5,prod5480);
          real mult54A9#2 = RMul(coeff54A5,prod5479);
          real sum54AA#1 = RAdd(mult54A8,mult54A9);
          real sum54AB#1 = RAdd(mult54A7,sum54AA);
          real sum54AC#3 = RAdd(mult54A6,sum54AB);
          real mult54AE#1 = RMul(coeff5473,prod5481);
          real mult54AF#1 = RMul(coeff54A5,prod547E);
          real mult54B0#2 = RMul(coeff54A5,prod5476);
          real sum54B1#1 = RAdd(mult54AF,mult54B0);
          real sum54B2#1 = RAdd(mult54A8,sum54B1);
          real sum54B3#3 = RAdd(mult54AE,sum54B2);
          real mult54B5#1 = RMul(coeff5473,prod547B);
          real mult54B6#1 = RMul(coeff54A5,prod5472);
          real sum54B7#1 = RAdd(mult54B0,mult54B6);
          real sum54B8#1 = RAdd(mult54A9,sum54B7);
          real sum54B9#3 = RAdd(mult54B5,sum54B8);
          real r5512#1 = RMul(dof_load53A7,sum5499);
          real r5515#1 = RMul(dof_load53B0,sum549D);
          real r5518#1 = RMul(dof_load53B9,sum54A0);
          real r551B#1 = RMul(dof_load53C2,sum54A3);
          real r551E#1 = RMul(dof_load53CC,mult548B);
          real r5521#1 = RMul(dof_load53D6,mult548E);
          real r5524#1 = RMul(dof_load53E0,mult548F);
          real r5527#1 = RMul(dof_load53EA,sum54AC);
          real r552A#1 = RMul(dof_load53F4,sum54B3);
          real r552D#1 = RMul(dof_load53FE,sum54B9);
          real r552E#1 = RAdd(r5512,r5515);
          real r552F#1 = RAdd(r552E,r5518);
          real r5530#1 = RAdd(r552F,r551B);
          real r5531#1 = RAdd(r5530,r551E);
          real r5532#1 = RAdd(r5531,r5521);
          real r5533#1 = RAdd(r5532,r5524);
          real r5534#1 = RAdd(r5533,r5527);
          real r5535#1 = RAdd(r5534,r552A);
          real r5536#2 = RAdd(r5535,r552D);
          real r5538#1 = RMul(dof_load53A8,sum5499);
          real r553A#1 = RMul(dof_load53B1,sum549D);
          real r553C#1 = RMul(dof_load53BA,sum54A0);
          real r553E#1 = RMul(dof_load53C3,sum54A3);
          real r5540#1 = RMul(dof_load53CD,mult548B);
          real r5542#1 = RMul(dof_load53D7,mult548E);
          real r5544#1 = RMul(dof_load53E1,mult548F);
          real r5546#1 = RMul(dof_load53EB,sum54AC);
          real r5548#1 = RMul(dof_load53F5,sum54B3);
          real r554A#1 = RMul(dof_load53FF,sum54B9);
          real r554B#1 = RAdd(r5538,r553A);
          real r554C#1 = RAdd(r554B,r553C);
          real r554D#1 = RAdd(r554C,r553E);
          real r554E#1 = RAdd(r554D,r5540);
          real r554F#1 = RAdd(r554E,r5542);
          real r5550#1 = RAdd(r554F,r5544);
          real r5551#1 = RAdd(r5550,r5546);
          real r5552#1 = RAdd(r5551,r5548);
          real r5553#2 = RAdd(r5552,r554A);
          real r5555#1 = RMul(dof_load53A9,sum5499);
          real r5557#1 = RMul(dof_load53B2,sum549D);
          real r5559#1 = RMul(dof_load53BB,sum54A0);
          real r555B#1 = RMul(dof_load53C4,sum54A3);
          real r555D#1 = RMul(dof_load53CE,mult548B);
          real r555F#1 = RMul(dof_load53D8,mult548E);
          real r5561#1 = RMul(dof_load53E2,mult548F);
          real r5563#1 = RMul(dof_load53EC,sum54AC);
          real r5565#1 = RMul(dof_load53F6,sum54B3);
          real r5567#1 = RMul(dof_load5400,sum54B9);
          real r5568#1 = RAdd(r5555,r5557);
          real r5569#1 = RAdd(r5568,r5559);
          real r556A#1 = RAdd(r5569,r555B);
          real r556B#1 = RAdd(r556A,r555D);
          real r556C#1 = RAdd(r556B,r555F);
          real r556D#1 = RAdd(r556C,r5561);
          real r556E#1 = RAdd(r556D,r5563);
          real r556F#1 = RAdd(r556E,r5565);
          real r5570#2 = RAdd(r556F,r5567);
          tensor[3] compositionl550F#2 = <tensor[3]>[r5536,r5553,r5570];
          real op1_e3_l_2255D4#1 = VDot<3>(compositionl550F,compositionl550F);
          real r55DA#1 = RMul(r478C,r5536);
          real r55DC#1 = RMul(r478C,r5553);
          real r55DE#1 = RMul(r478C,r5570);
          real op1_e3_l_2455E8#1 = Sqrt(op1_e3_l_2255D4);
          real r55ED#3 = RDiv(one43DE,op1_e3_l_2455E8);
          real r55EF#1 = RMul(r55ED,r55DA);
          real r55F1#1 = RMul(r55ED,r55DC);
          real r55F3#1 = RMul(r55ED,r55DE);
          tensor[3] op1_e3_l_2655EB#1 = <tensor[3]>[r55EF,r55F1,r55F3];
          tensor[3] op1_e3_l_3555FE#2 = VSub<3>(up1478A,op1_e3_l_2655EB);
          real op1_e3_l_375601#1 = VDot<3>(op1_e3_l_3555FE,op1_e3_l_3555FE);
          real _t5604#1 = Sqrt(op1_e3_l_375601);
          bool _t47E6#1 = GT<real>(_t5604,_t44BF);
          goto JOIN47E7
        ASSIGN5609:  preds = [COND44E6]
          string _t5608#1 = "QWE:Eval at 0\n";
          Print<[string]>(_t5608);
          real realLit560B#3 = 0.e0;
          tensor[3] _t4788#1 = <tensor[3]>[realLit560B,realLit560B,realLit560B];
          goto JOIN4789
        ASSIGN5610:  preds = [COND44C3]
          string _t560F#1 = "fine in cell 1:";
          femData:MeshCell _t5611#1 = LoadFem<femData:MeshCell>(_t4362,_t4360);
          string _t5613#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t560F,_t5611,_t5613);
          goto JOIN44E3
        ASSIGN5617:  preds = [COND4346]
          bool _t5616#1 = BNot(_t4339);
          if _t5616 then goto ASSIGN561A else goto ASSIGN561D
        ASSIGN561A:  preds = [COND5618]
          bool _t5619#1 = true;
          goto JOIN561C
        JOIN561C:  preds = [ASSIGN561A,ASSIGN561D]
          bool _t434A#1 = phi(_t5619,_t561B)
          goto JOIN434B
        ASSIGN561D:  preds = [COND5618]
          bool _t561B#1 = EQ<int>(step42FC,stepMax42F2);
          goto JOIN561C
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY561E:  preds = []
      tensor[3][] startPoints561F#1 = globals.startPoints3B4A;
    FOREACH5622:  preds = [ASSIGN5620,NEXT5624]
      foreach (x5621 in startPoints561F) on exit goto RETURN5625
      new gg(x5621);
      goto FOREACH5622
    RETURN5625:  preds = [FOREACH5622]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) meshData;
input femData(Space) 0space0409_intermedateGlobal;
input femData(FemFunc) 0data040B_intermedateGlobal;
input int timeSteps;
input real timeEps;
input tensor[3][] startPoints;
input real stepSize;
input int stepMax;
input tensor[3,3] M;
input tensor[3] center;
//***** CONST INIT *****
  {
    globals.timeSteps = 32;
    globals.timeEps = 0.1e-6;
    globals.stepSize = 0.1e-1;
    globals.stepMax = 300;
  }
//***** GLOBALS *****
global femData(FemFunc) data;
global femData(Mesh) _t;
global femData(Space) _tX;
//***** FUNCTIONS *****
  function femData(MeshPos) findPos (femData(Mesh) p_mesh_0,&tensor[3] p_pos_1) {
    int[] t_3 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(p_mesh_0,p_pos_1);
    vec3{4} v_4 = VEC3{4}(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    foreach int i_cellItter_2 in t_3 {
      vec3{4} v_5;
      v_5 = v_4;
      for i_newtonItter_6 = 0 to 16 {
        int l_mulRes_7 = IMul(i_cellItter_2,4);
        int t_8 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,l_mulRes_7);
        int l_mulRes_9 = IMul(3,t_8);
        real l_dof_load_10 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_9);
        real l_dof_load_11 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_9));
        real l_dof_load_12 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_9));
        int t_13 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,1));
        int l_mulRes_14 = IMul(3,t_13);
        real l_dof_load_15 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_14);
        real l_dof_load_16 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_14));
        real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_14));
        int t_18 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,2));
        int l_mulRes_19 = IMul(3,t_18);
        real l_dof_load_20 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_19);
        real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_19));
        real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_19));
        int t_23 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,3));
        int l_mulRes_24 = IMul(3,t_23);
        real l_dof_load_25 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_24);
        real l_dof_load_26 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_24));
        real l_dof_load_27 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_24));
        real l_prod_28 = RMul(0.1e1,0.1e1);
        real l_prod_29 = RMul(0.1e1,l_prod_28);
        real l_basisEval_30 = RMul(-0.1e1,l_prod_29);
        real l_basisEval_31 = RMul(0.1e1,l_prod_29);
        real l_r_32 = RMul(l_dof_load_10,l_basisEval_30);
        real l_r_33 = RMul(l_dof_load_20,0.e0);
        real l_r_34 = RMul(l_dof_load_25,0.e0);
        real l_r_35 = RAdd(RAdd(RAdd(l_r_32,RMul(l_dof_load_15,l_basisEval_31)),l_r_33),l_r_34);
        real l_r_36 = RAdd(l_r_32,RMul(l_dof_load_15,0.e0));
        real l_r_37 = RAdd(RAdd(l_r_36,RMul(l_dof_load_20,l_basisEval_31)),l_r_34);
        real l_r_38 = RAdd(RAdd(l_r_36,l_r_33),RMul(l_dof_load_25,l_basisEval_31));
        real l_r_39 = RMul(l_dof_load_11,l_basisEval_30);
        real l_r_40 = RMul(l_dof_load_21,0.e0);
        real l_r_41 = RMul(l_dof_load_26,0.e0);
        real l_r_42 = RAdd(RAdd(RAdd(l_r_39,RMul(l_dof_load_16,l_basisEval_31)),l_r_40),l_r_41);
        real l_r_43 = RAdd(l_r_39,RMul(l_dof_load_16,0.e0));
        real l_r_44 = RAdd(RAdd(l_r_43,RMul(l_dof_load_21,l_basisEval_31)),l_r_41);
        real l_r_45 = RAdd(RAdd(l_r_43,l_r_40),RMul(l_dof_load_26,l_basisEval_31));
        real l_r_46 = RMul(l_dof_load_12,l_basisEval_30);
        real l_r_47 = RMul(l_dof_load_22,0.e0);
        real l_r_48 = RMul(l_dof_load_27,0.e0);
        real l_r_49 = RAdd(RAdd(RAdd(l_r_46,RMul(l_dof_load_17,l_basisEval_31)),l_r_47),l_r_48);
        real l_r_50 = RAdd(l_r_46,RMul(l_dof_load_17,0.e0));
        real l_r_51 = RAdd(RAdd(l_r_50,RMul(l_dof_load_22,l_basisEval_31)),l_r_48);
        real l_r_52 = RAdd(RAdd(l_r_50,l_r_47),RMul(l_dof_load_27,l_basisEval_31));
        real l_r_53 = RMul(0.e0,l_r_35);
        real l_r_54 = RMul(0.e0,l_r_42);
        real l_r_55 = RMul(0.e0,l_r_49);
        real l_r_56 = RAdd(l_r_53,l_r_54);
        real l_r_57 = RAdd(l_r_56,l_r_55);
        real l_r_58 = RMul(0.e0,l_r_37);
        real l_r_59 = RMul(0.e0,l_r_44);
        real l_r_60 = RMul(0.e0,l_r_51);
        real l_r_61 = RAdd(l_r_58,l_r_59);
        real l_r_62 = RAdd(l_r_61,l_r_60);
        real l_r_63 = RMul(0.e0,l_r_38);
        real l_r_64 = RMul(0.e0,l_r_45);
        real l_r_65 = RMul(0.e0,l_r_52);
        real l_r_66 = RAdd(l_r_63,l_r_64);
        real l_r_67 = RAdd(l_r_66,l_r_65);
        real l_r_68 = RAdd(l_r_56,RMul(-0.1e1,l_r_49));
        real l_r_69 = RAdd(l_r_61,RMul(-0.1e1,l_r_51));
        real l_r_70 = RAdd(l_r_66,RMul(-0.1e1,l_r_52));
        real l_r_71 = RAdd(RAdd(l_r_53,RMul(0.1e1,l_r_42)),l_r_55);
        real l_r_72 = RAdd(RAdd(l_r_58,RMul(0.1e1,l_r_44)),l_r_60);
        real l_r_73 = RAdd(RAdd(l_r_63,RMul(0.1e1,l_r_45)),l_r_65);
        real l_r_74 = RAdd(l_r_56,RMul(0.1e1,l_r_49));
        real l_r_75 = RAdd(l_r_61,RMul(0.1e1,l_r_51));
        real l_r_76 = RAdd(l_r_66,RMul(0.1e1,l_r_52));
        real l_r_77 = RAdd(RAdd(RMul(-0.1e1,l_r_35),l_r_54),l_r_55);
        real l_r_78 = RAdd(RAdd(RMul(-0.1e1,l_r_37),l_r_59),l_r_60);
        real l_r_79 = RAdd(RAdd(RMul(-0.1e1,l_r_38),l_r_64),l_r_65);
        real l_r_80 = RAdd(RAdd(l_r_53,RMul(-0.1e1,l_r_42)),l_r_55);
        real l_r_81 = RAdd(RAdd(l_r_58,RMul(-0.1e1,l_r_44)),l_r_60);
        real l_r_82 = RAdd(RAdd(l_r_63,RMul(-0.1e1,l_r_45)),l_r_65);
        real l_r_83 = RAdd(RAdd(RMul(0.1e1,l_r_35),l_r_54),l_r_55);
        real l_r_84 = RAdd(RAdd(RMul(0.1e1,l_r_37),l_r_59),l_r_60);
        real l_r_85 = RAdd(RAdd(RMul(0.1e1,l_r_38),l_r_64),l_r_65);
        real l_r_86 = RAdd(RAdd(RMul(l_r_35,l_r_62),RMul(l_r_42,l_r_75)),RMul(l_r_49,l_r_81));
        real l_r_87 = RAdd(RAdd(RMul(l_r_35,l_r_67),RMul(l_r_42,l_r_76)),RMul(l_r_49,l_r_82));
        real l_r_88 = RAdd(RAdd(RMul(l_r_35,l_r_69),RMul(l_r_42,l_r_62)),RMul(l_r_49,l_r_84));
        real l_r_89 = RAdd(RAdd(RMul(l_r_35,l_r_70),RMul(l_r_42,l_r_67)),RMul(l_r_49,l_r_85));
        real l_r_90 = RAdd(RAdd(RMul(l_r_35,l_r_72),RMul(l_r_42,l_r_78)),RMul(l_r_49,l_r_62));
        real l_r_91 = RAdd(RAdd(RMul(l_r_35,l_r_73),RMul(l_r_42,l_r_79)),RMul(l_r_49,l_r_67));
        real l_r_92 = RAdd(RAdd(RMul(l_r_37,l_r_57),RMul(l_r_44,l_r_74)),RMul(l_r_51,l_r_80));
        real l_r_93 = RAdd(RAdd(RMul(l_r_37,l_r_67),RMul(l_r_44,l_r_76)),RMul(l_r_51,l_r_82));
        real l_r_94 = RAdd(RAdd(RMul(l_r_37,l_r_68),RMul(l_r_44,l_r_57)),RMul(l_r_51,l_r_83));
        real l_r_95 = RAdd(RAdd(RMul(l_r_37,l_r_70),RMul(l_r_44,l_r_67)),RMul(l_r_51,l_r_85));
        real l_r_96 = RAdd(RAdd(RMul(l_r_37,l_r_71),RMul(l_r_44,l_r_77)),RMul(l_r_51,l_r_57));
        real l_r_97 = RAdd(RAdd(RMul(l_r_37,l_r_73),RMul(l_r_44,l_r_79)),RMul(l_r_51,l_r_67));
        real l_r_98 = RAdd(RAdd(RMul(l_r_38,l_r_57),RMul(l_r_45,l_r_74)),RMul(l_r_52,l_r_80));
        real l_r_99 = RAdd(RAdd(RMul(l_r_38,l_r_62),RMul(l_r_45,l_r_75)),RMul(l_r_52,l_r_81));
        real l_r_100 = RAdd(RAdd(RMul(l_r_38,l_r_68),RMul(l_r_45,l_r_57)),RMul(l_r_52,l_r_83));
        real l_r_101 = RAdd(RAdd(RMul(l_r_38,l_r_69),RMul(l_r_45,l_r_62)),RMul(l_r_52,l_r_84));
        real l_r_102 = RAdd(RAdd(RMul(l_r_38,l_r_71),RMul(l_r_45,l_r_77)),RMul(l_r_52,l_r_57));
        real l_r_103 = RAdd(RAdd(RMul(l_r_38,l_r_72),RMul(l_r_45,l_r_78)),RMul(l_r_52,l_r_62));
        vec3{4} v_104 = VEC3{4}(l_r_37,l_r_44,l_r_51);
        real l_r_105 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_57),RMul(l_r_42,l_r_74)),RMul(l_r_49,l_r_80)));
        real l_r_106 = RMul(0.e0,l_r_87);
        real l_r_107 = RMul(0.e0,l_r_92);
        real l_r_108 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_62),RMul(l_r_44,l_r_75)),RMul(l_r_51,l_r_81)));
        real l_r_109 = RMul(0.e0,l_r_98);
        real l_r_110 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_67),RMul(l_r_45,l_r_76)),RMul(l_r_52,l_r_82)));
        real l_r_111 = RAdd(l_r_105,RMul(0.e0,l_r_86));
        real l_r_112 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_68),RMul(l_r_42,l_r_57)),RMul(l_r_49,l_r_83)));
        real l_r_113 = RMul(0.e0,l_r_89);
        real l_r_114 = RMul(0.e0,l_r_94);
        real l_r_115 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_69),RMul(l_r_44,l_r_62)),RMul(l_r_51,l_r_84)));
        real l_r_116 = RMul(0.e0,l_r_100);
        real l_r_117 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_70),RMul(l_r_45,l_r_67)),RMul(l_r_52,l_r_85)));
        real l_r_118 = RAdd(l_r_112,RMul(0.e0,l_r_88));
        real l_r_119 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_71),RMul(l_r_42,l_r_77)),RMul(l_r_49,l_r_57)));
        real l_r_120 = RMul(0.e0,l_r_91);
        real l_r_121 = RMul(0.e0,l_r_96);
        real l_r_122 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_72),RMul(l_r_44,l_r_78)),RMul(l_r_51,l_r_62)));
        real l_r_123 = RMul(0.e0,l_r_102);
        real l_r_124 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_73),RMul(l_r_45,l_r_79)),RMul(l_r_52,l_r_67)));
        real l_r_125 = RAdd(l_r_119,RMul(0.e0,l_r_90));
        real l_r_126 = RMul(0.e0,l_r_93);
        real l_r_127 = RMul(0.e0,l_r_99);
        real l_r_128 = RMul(0.e0,l_r_95);
        real l_r_129 = RMul(0.e0,l_r_101);
        real l_r_130 = RMul(0.e0,l_r_97);
        real l_r_131 = RMul(0.e0,l_r_103);
        real l_op1_e3_l_21_132 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_35,l_r_42,l_r_49),VEC3{4}(VDot<3,4>(v_104,VEC3{4}(l_r_67,l_r_76,l_r_82)),VDot<3,4>(v_104,VEC3{4}(l_r_70,l_r_67,l_r_85)),VDot<3,4>(v_104,VEC3{4}(l_r_73,l_r_79,l_r_67)))));
        real l_prod_133 = RMul(VIndex<3,4,0>(v_5),l_prod_28);
        real l_prod_134 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_5),0.1e1));
        real l_prod_135 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_5)));
        real l_sum_136 = RAdd(l_basisEval_31,RAdd(RMul(-0.1e1,l_prod_135),RAdd(RMul(-0.1e1,l_prod_134),RMul(-0.1e1,l_prod_133))));
        real l_basisEval_137 = RMul(0.1e1,l_prod_133);
        real l_basisEval_138 = RMul(0.1e1,l_prod_134);
        real l_basisEval_139 = RMul(0.1e1,l_prod_135);
        vec3{4} v_140 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_10,l_sum_136),RMul(l_dof_load_15,l_basisEval_137)),RMul(l_dof_load_20,l_basisEval_138)),RMul(l_dof_load_25,l_basisEval_139)),RAdd(RAdd(RAdd(RMul(l_dof_load_11,l_sum_136),RMul(l_dof_load_16,l_basisEval_137)),RMul(l_dof_load_21,l_basisEval_138)),RMul(l_dof_load_26,l_basisEval_139)),RAdd(RAdd(RAdd(RMul(l_dof_load_12,l_sum_136),RMul(l_dof_load_17,l_basisEval_137)),RMul(l_dof_load_22,l_basisEval_138)),RMul(l_dof_load_27,l_basisEval_139))),LOAD_0(p_pos_1));
        vec3{4} v_141 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_111,l_r_106),l_r_107),l_r_108),RMul(0.1e1,l_r_93)),l_r_109),RMul(-0.1e1,l_r_99)),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,l_r_113),l_r_114),l_r_115),RMul(0.1e1,l_r_95)),l_r_116),RMul(-0.1e1,l_r_101)),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,l_r_120),l_r_121),l_r_122),RMul(0.1e1,l_r_97)),l_r_123),RMul(-0.1e1,l_r_103)),l_r_124),l_op1_e3_l_21_132)),v_140),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_111,RMul(-0.1e1,l_r_87)),l_r_107),l_r_108),l_r_126),RMul(0.1e1,l_r_98)),l_r_127),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,RMul(-0.1e1,l_r_89)),l_r_114),l_r_115),l_r_128),RMul(0.1e1,l_r_100)),l_r_129),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,RMul(-0.1e1,l_r_91)),l_r_121),l_r_122),l_r_130),RMul(0.1e1,l_r_102)),l_r_131),l_r_124),l_op1_e3_l_21_132)),v_140),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_105,RMul(0.1e1,l_r_86)),l_r_106),RMul(-0.1e1,l_r_92)),l_r_108),l_r_126),l_r_109),l_r_127),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_112,RMul(0.1e1,l_r_88)),l_r_113),RMul(-0.1e1,l_r_94)),l_r_115),l_r_128),l_r_116),l_r_129),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_119,RMul(0.1e1,l_r_90)),l_r_120),RMul(-0.1e1,l_r_96)),l_r_122),l_r_130),l_r_123),l_r_131),l_r_124),l_op1_e3_l_21_132)),v_140));
        vec3{4} v_142 = VSub<3,4>(v_5,v_141);
        vec3{4} v_143 = v_142;
        if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<3,4>(v_141,v_141))) {
          vec3{4} v_144 = VAdd<3,4>(VEC3{4}(0.1e-7,0.1e-7,0.1e-7),v_143);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-7),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_143)),BAnd(GT<real>(VIndex<3,4,0>(v_144),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_144),-0.e0),GT<real>(VIndex<3,4,2>(v_144),-0.e0))))) {
            tensor[3] _arg_145 = PACK(v_143);
            return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_0,i_cellItter_2,_arg_145,p_pos_1)
          }
        }
        v_5 = v_143;
      }
    }
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_0)
  }
  function femData(MeshPos) fn_2FB (world, globals, femData(MeshPos) p_x_146,&tensor[3] p_dPos_147) {
    if (BNot(ExtractFemItem<bool,Valid(MeshPos)>(p_x_146))) {
      return p_x_146
    }
    for i_i_148 = 0 to globals.timeSteps {
    }
    print("Took stupid way out!\n");
    &tensor[3] l__t_149 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(p_x_146);
    femData(Mesh) l__t_150 = ExtractFem<femData(Mesh),femData(MeshPos)>(p_x_146);
    int l_mulRes_151 = IMul(ExtractFemItem<int,CellIndex(MeshPos)>(p_x_146),4);
    int t_152 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_150,l_mulRes_151);
    int l_mulRes_153 = IMul(3,t_152);
    int t_154 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_150,IAdd(l_mulRes_151,1));
    int l_mulRes_155 = IMul(3,t_154);
    int t_156 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_150,IAdd(l_mulRes_151,2));
    int l_mulRes_157 = IMul(3,t_156);
    int t_158 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_150,IAdd(l_mulRes_151,3));
    int l_mulRes_159 = IMul(3,t_158);
    real l_prod_160 = RMul(0.1e1,0.1e1);
    real l_prod_161 = RMul(VIndex<3,4,0>(LOAD_0(l__t_149)),l_prod_160);
    real l_prod_162 = RMul(0.1e1,RMul(VIndex<3,4,1>(LOAD_0(l__t_149)),0.1e1));
    real l_prod_163 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(LOAD_0(l__t_149))));
    real l_sum_164 = RAdd(RMul(0.1e1,RMul(0.1e1,l_prod_160)),RAdd(RMul(-0.1e1,l_prod_163),RAdd(RMul(-0.1e1,l_prod_162),RMul(-0.1e1,l_prod_161))));
    real l_basisEval_165 = RMul(0.1e1,l_prod_161);
    real l_basisEval_166 = RMul(0.1e1,l_prod_162);
    real l_basisEval_167 = RMul(0.1e1,l_prod_163);
    real t_168 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,l_mulRes_153);
    real t_169 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,l_mulRes_155);
    real t_170 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,l_mulRes_157);
    real t_171 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,l_mulRes_159);
    real t_172 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(1,l_mulRes_153));
    real t_173 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(1,l_mulRes_155));
    real t_174 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(1,l_mulRes_157));
    real t_175 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(1,l_mulRes_159));
    real t_176 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(2,l_mulRes_153));
    real t_177 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(2,l_mulRes_155));
    real t_178 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(2,l_mulRes_157));
    real t_179 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(2,l_mulRes_159));
    tensor[3] _arg_180 = PACK(VAdd<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(t_168,l_sum_164),RMul(t_169,l_basisEval_165)),RMul(t_170,l_basisEval_166)),RMul(t_171,l_basisEval_167)),RAdd(RAdd(RAdd(RMul(t_172,l_sum_164),RMul(t_173,l_basisEval_165)),RMul(t_174,l_basisEval_166)),RMul(t_175,l_basisEval_167)),RAdd(RAdd(RAdd(RMul(t_176,l_sum_164),RMul(t_177,l_basisEval_165)),RMul(t_178,l_basisEval_166)),RMul(t_179,l_basisEval_167))),LOAD_0(p_dPos_147)));
    femData(MeshPos) l_cmp_181 = findPos$5CDA(globals.meshData,_arg_180);
    return l_cmp_181
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_182;
    l__t_182 = <femData(MeshCell)[]>{};
    for i__t_183 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.meshData),1) {
      l__t_182 = Append<femData(MeshCell),femData(MeshCell)>(l__t_182,LoadFem<femData(MeshCell)>(globals.meshData,i__t_183));
    }
    femData(FemFunc) l_data_184 = LoadFem<femData(FemFunc)>(globals.0data040B_intermedateGlobal,LoadFem<femData(Space)>(globals.0space0409_intermedateGlobal,globals.meshData));
    globals.data = l_data_184;
    femData(Space) l__t_185 = ExtractFem<femData(Space),femData(FemFunc)>(l_data_184);
    globals._t = ExtractFem<femData(Mesh),femData(Space)>(l__t_185);
    globals._tX = l__t_185;
  }
//***** STRAND *****
strand gg (&tensor[3] p_startPos_186) {
  varying output tensor[3][] stream;
  varying output tensor[3][] newStream;
  varying int step;
  varying femData(MeshPos) cPos;
  varying tensor[3] altCPos;
  tensor[3] startPos;
  initialize (globals) {
    tensor[3][0] t_188 = <tensor[3][0]>{};
    tensor[3][] l__t_187 = MkDynamic<tensor[3],0>(t_188);
    tensor[3][0] t_190 = <tensor[3][0]>{};
    tensor[3][] l__t_189 = MkDynamic<tensor[3],0>(t_190);
    femData(MeshPos) l_cPos_191 = findPos$5CDA(globals.meshData,p_startPos_186);
    self.stream = l__t_187;
    self.newStream = l__t_189;
    self.step = 0;
    self.cPos = l_cPos_191;
    self.altCPos = TensorCopy<[3]>(p_startPos_186);
    self.startPos = TensorCopy<[3]>(p_startPos_186);
  }
  update (world, globals) {
    bool l__t_763;
    vec3{4} v_661;
    bool l__t_534;
    bool l__t_346;
    vec3{4} v_332;
    bool l__t_197;
    if (EQ<int>(self.step,0)) {
      if (ExtractFemItem<bool,Valid(MeshPos)>(self.cPos)) {
        &tensor[3] l_rp_192 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(self.cPos);
        if (LTE<real>(VIndex<3,4,0>(LOAD_0(l_rp_192)),0.1e-5)) {
          stabilize;
        }
        if (LTE<real>(VIndex<3,4,1>(LOAD_0(l_rp_192)),0.1e-5)) {
          stabilize;
        }
        if (LTE<real>(VIndex<3,4,2>(LOAD_0(l_rp_192)),0.1e-5)) {
          stabilize;
        }
        if (LTE<real>(0.9999999e0,VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),LOAD_0(l_rp_192)))) {
          stabilize;
        }
      }
    }
    bool l__t_193 = ExtractFemItem<bool,Valid(MeshPos)>(self.cPos);
    femData(MeshPos) l__t_194 = findPos$5CDA(globals.meshData,TensorRef<[3]>(self.altCPos));
    bool l__t_195 = ExtractFemItem<bool,Valid(MeshPos)>(l__t_194);
    if (NEQ<bool>(l__t_193,l__t_195)) {
      print("ERG:Warning of validity startPos:",TensorRef<[3]>(self.startPos),"\n");
    }
    bool l__t_196 = BNot(l__t_193);
    if (l__t_196) {
      l__t_197 = true;
    } else {
      bool l__t_198;
      if (BNot(l__t_195)) {
        l__t_198 = true;
      } else {
        l__t_198 = EQ<int>(self.step,globals.stepMax);
      }
      l__t_197 = l__t_198;
    }
    if (l__t_197) {
      print("Went off the mesh\?",l__t_196," and ",TensorRef<[3]>(self.altCPos)," and ",BNot(l__t_195),"\n");
      print("Pos is:",TensorRef<[3]>(ExtractFemItem<tensor[3],RefPos(MeshPos)>(self.cPos)),"\n");
      print(self.stream,"\n",self.newStream,"\n");
      stabilize;
    }
    &tensor[3] l__t_199 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(self.cPos);
    int l__t_200 = ExtractFemItem<int,CellIndex(MeshPos)>(self.cPos);
    femData(Mesh) l__t_201 = ExtractFem<femData(Mesh),femData(MeshPos)>(self.cPos);
    int l_mulRes_202 = IMul(l__t_200,4);
    int t_203 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_201,l_mulRes_202);
    int l_mulRes_204 = IMul(3,t_203);
    int t_205 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_201,IAdd(l_mulRes_202,1));
    int l_mulRes_206 = IMul(3,t_205);
    int t_207 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_201,IAdd(l_mulRes_202,2));
    int l_mulRes_208 = IMul(3,t_207);
    int t_209 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_201,IAdd(l_mulRes_202,3));
    int l_mulRes_210 = IMul(3,t_209);
    real l_varAcc_211 = VIndex<3,4,0>(LOAD_0(l__t_199));
    real l_varAcc_212 = VIndex<3,4,1>(LOAD_0(l__t_199));
    real l_varAcc_213 = VIndex<3,4,2>(LOAD_0(l__t_199));
    real l_prod_214 = RMul(0.1e1,0.1e1);
    real l_prod_215 = RMul(l_varAcc_211,l_prod_214);
    real l_prod_216 = RMul(l_varAcc_212,0.1e1);
    real l_prod_217 = RMul(0.1e1,l_prod_216);
    real l_prod_218 = RMul(0.1e1,l_varAcc_213);
    real l_prod_219 = RMul(0.1e1,l_prod_218);
    real l_mult_220 = RMul(0.1e1,RMul(0.1e1,l_prod_214));
    real l_mult_221 = RMul(-0.1e1,l_prod_219);
    real l_mult_222 = RMul(-0.1e1,l_prod_217);
    real l_mult_223 = RMul(-0.1e1,l_prod_215);
    real l_sum_224 = RAdd(l_mult_220,RAdd(l_mult_221,RAdd(l_mult_222,l_mult_223)));
    real l_basisEval_225 = RMul(0.1e1,l_prod_215);
    real l_basisEval_226 = RMul(0.1e1,l_prod_217);
    real l_basisEval_227 = RMul(0.1e1,l_prod_219);
    real t_228 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,l_mulRes_204);
    real t_229 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,l_mulRes_206);
    real t_230 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,l_mulRes_208);
    real t_231 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,l_mulRes_210);
    real t_232 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(1,l_mulRes_204));
    real t_233 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(1,l_mulRes_206));
    real t_234 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(1,l_mulRes_208));
    real t_235 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(1,l_mulRes_210));
    real t_236 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(2,l_mulRes_204));
    real t_237 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(2,l_mulRes_206));
    real t_238 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(2,l_mulRes_208));
    real t_239 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(2,l_mulRes_210));
    vec3{4} v_240 = VEC3{4}(RAdd(RAdd(RAdd(RMul(t_228,l_sum_224),RMul(t_229,l_basisEval_225)),RMul(t_230,l_basisEval_226)),RMul(t_231,l_basisEval_227)),RAdd(RAdd(RAdd(RMul(t_232,l_sum_224),RMul(t_233,l_basisEval_225)),RMul(t_234,l_basisEval_226)),RMul(t_235,l_basisEval_227)),RAdd(RAdd(RAdd(RMul(t_236,l_sum_224),RMul(t_237,l_basisEval_225)),RMul(t_238,l_basisEval_226)),RMul(t_239,l_basisEval_227)));
    tensor[3] _arg_241 = PACK(v_240);
    tensor[3][1] t_243 = <tensor[3][1]>{_arg_241};
    tensor[3][] l__t_242 = MkDynamic<tensor[3],1>(t_243);
    tensor[3][] l_stream_244 = Concat<tensor[3]>(self.stream,l__t_242);
    tensor[3][1] t_246 = <tensor[3][1]>{TensorCopy<[3]>(TensorRef<[3]>(self.altCPos))};
    tensor[3][] l__t_245 = MkDynamic<tensor[3],1>(t_246);
    tensor[3][] l_newStream_247 = Concat<tensor[3]>(self.newStream,l__t_245);
    vec3{4} v_248 = VSub<3,4>(v_240,LOAD_0(TensorRef<[3]>(self.altCPos)));
    vec3{4} v_249 = v_240;
    if (GT<real>(Sqrt(VDot<3,4>(v_248,v_248)),0.1e-5)) {
      print("ERG:Error in tracing 1: At step:",self.step," with particle:",TensorRef<[3]>(self.startPos),"\n");
      tensor[3] _arg_250 = PACK(v_249);
      print("Poses are:",TensorRef<[3]>(_arg_250),TensorRef<[3]>(self.altCPos),"\n");
      print("Cells are:",LoadFem<femData(MeshCell)>(l__t_201,l__t_200)," and ",LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l__t_194),ExtractFemItem<int,CellIndex(MeshPos)>(l__t_194)),"\n");
      print("Ref poses are:",l__t_199," and ",TensorRef<[3]>(ExtractFemItem<tensor[3],RefPos(MeshPos)>(l__t_194)),"\n");
      self.stream = l_stream_244;
      self.newStream = l_newStream_247;
      stabilize;
    } else {
      print("fine in cell 1:",LoadFem<femData(MeshCell)>(l__t_201,l__t_200),"\n");
    }
    if (l__t_193) {
      femData(FuncCell) l__t_251 = LoadFem<femData(FuncCell)>(globals.data,ExtractFemItem<int,CellIndex(MeshCell)>(LoadFem<femData(MeshCell)>(l__t_201,l__t_200)));
      femData(FemFunc) l__t_252 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_251);
      femData(Space) l__t_253 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_252);
      int l_mulRes_254 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(l__t_251),10);
      int t_255 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,l_mulRes_254);
      int l_mulRes_256 = IMul(3,t_255);
      int t_257 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,1));
      int l_mulRes_258 = IMul(3,t_257);
      int t_259 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,2));
      int l_mulRes_260 = IMul(3,t_259);
      int t_261 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,3));
      int l_mulRes_262 = IMul(3,t_261);
      int t_263 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,4));
      int l_mulRes_264 = IMul(3,t_263);
      int t_265 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,5));
      int l_mulRes_266 = IMul(3,t_265);
      int t_267 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,6));
      int l_mulRes_268 = IMul(3,t_267);
      int t_269 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,7));
      int l_mulRes_270 = IMul(3,t_269);
      int t_271 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,8));
      int l_mulRes_272 = IMul(3,t_271);
      int t_273 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,9));
      int l_mulRes_274 = IMul(3,t_273);
      real l_prod_275 = RMul(RMul(l_varAcc_211,l_varAcc_211),l_prod_214);
      real l_prod_276 = RMul(l_varAcc_211,l_prod_216);
      real l_prod_277 = RMul(l_varAcc_211,l_prod_218);
      real l_prod_278 = RMul(0.1e1,RMul(RMul(l_varAcc_212,l_varAcc_212),0.1e1));
      real l_prod_279 = RMul(0.1e1,RMul(l_varAcc_212,l_varAcc_213));
      real l_prod_280 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_213,l_varAcc_213)));
      real l_mult_281 = RMul(0.2e1,l_prod_280);
      real l_mult_282 = RMul(0.4e1,l_prod_279);
      real l_mult_283 = RMul(0.2e1,l_prod_278);
      real l_mult_284 = RMul(0.4e1,l_prod_277);
      real l_mult_285 = RMul(0.4e1,l_prod_276);
      real l_mult_286 = RMul(0.2e1,l_prod_275);
      real l_sum_287 = RAdd(l_mult_220,RAdd(RMul(-0.3e1,l_prod_219),RAdd(l_mult_281,RAdd(RMul(-0.3e1,l_prod_217),RAdd(l_mult_282,RAdd(l_mult_283,RAdd(RMul(-0.3e1,l_prod_215),RAdd(l_mult_284,RAdd(l_mult_285,l_mult_286)))))))));
      real l_sum_288 = RAdd(l_mult_223,l_mult_286);
      real l_sum_289 = RAdd(l_mult_222,l_mult_283);
      real l_sum_290 = RAdd(l_mult_221,l_mult_281);
      real l_mult_291 = RMul(-0.4e1,l_prod_279);
      real l_mult_292 = RMul(-0.4e1,l_prod_277);
      real l_sum_293 = RAdd(RMul(0.4e1,l_prod_219),RAdd(RMul(-0.4e1,l_prod_280),RAdd(l_mult_291,l_mult_292)));
      real l_mult_294 = RMul(-0.4e1,l_prod_276);
      real l_sum_295 = RAdd(RMul(0.4e1,l_prod_217),RAdd(l_mult_291,RAdd(RMul(-0.4e1,l_prod_278),l_mult_294)));
      real l_sum_296 = RAdd(RMul(0.4e1,l_prod_215),RAdd(l_mult_292,RAdd(l_mult_294,RMul(-0.4e1,l_prod_275))));
      real t_297 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_256);
      real t_298 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_258);
      real t_299 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_260);
      real t_300 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_262);
      real t_301 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_264);
      real t_302 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_266);
      real t_303 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_268);
      real t_304 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_270);
      real t_305 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_272);
      real t_306 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_274);
      real l_r_307 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_297,l_sum_287),RMul(t_298,l_sum_288)),RMul(t_299,l_sum_289)),RMul(t_300,l_sum_290)),RMul(t_301,l_mult_282)),RMul(t_302,l_mult_284)),RMul(t_303,l_mult_285)),RMul(t_304,l_sum_293)),RMul(t_305,l_sum_295)),RMul(t_306,l_sum_296));
      real t_308 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_256));
      real t_309 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_258));
      real t_310 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_260));
      real t_311 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_262));
      real t_312 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_264));
      real t_313 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_266));
      real t_314 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_268));
      real t_315 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_270));
      real t_316 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_272));
      real t_317 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_274));
      real l_r_318 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_308,l_sum_287),RMul(t_309,l_sum_288)),RMul(t_310,l_sum_289)),RMul(t_311,l_sum_290)),RMul(t_312,l_mult_282)),RMul(t_313,l_mult_284)),RMul(t_314,l_mult_285)),RMul(t_315,l_sum_293)),RMul(t_316,l_sum_295)),RMul(t_317,l_sum_296));
      real t_319 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_256));
      real t_320 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_258));
      real t_321 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_260));
      real t_322 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_262));
      real t_323 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_264));
      real t_324 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_266));
      real t_325 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_268));
      real t_326 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_270));
      real t_327 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_272));
      real t_328 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_274));
      real l_r_329 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_319,l_sum_287),RMul(t_320,l_sum_288)),RMul(t_321,l_sum_289)),RMul(t_322,l_sum_290)),RMul(t_323,l_mult_282)),RMul(t_324,l_mult_284)),RMul(t_325,l_mult_285)),RMul(t_326,l_sum_293)),RMul(t_327,l_sum_295)),RMul(t_328,l_sum_296));
      vec3{4} v_330 = VEC3{4}(l_r_307,l_r_318,l_r_329);
      real l_r_331 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_330,v_330)));
      v_332 = VEC3{4}(RMul(l_r_331,l_r_307),RMul(l_r_331,l_r_318),RMul(l_r_331,l_r_329));
    } else {
      print("QWE:Eval at 0\n");
      v_332 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    real l_r_333 = RMul(0.5e0,globals.stepSize);
    vec3{4} v_334 = VEC3{4}(RMul(l_r_333,VIndex<3,4,0>(v_332)),RMul(l_r_333,VIndex<3,4,1>(v_332)),RMul(l_r_333,VIndex<3,4,2>(v_332)));
    vec3{4} v_335 = VSub<3,4>(LOAD_0(TensorRef<[3]>(self.altCPos)),LOAD_0(TensorRef<[3]>(globals.center)));
    &tensor[3] l_projParam_336 = ProjectLast<&tensor[3,3],[0]>(TensorRef<[3,3]>(globals.M));
    real l_vdot_337 = VDot<3,4>(LOAD_0(l_projParam_336),v_335);
    &tensor[3] l_projParam_338 = ProjectLast<&tensor[3,3],[1]>(TensorRef<[3,3]>(globals.M));
    real l_vdot_339 = VDot<3,4>(LOAD_0(l_projParam_338),v_335);
    &tensor[3] l_projParam_340 = ProjectLast<&tensor[3,3],[2]>(TensorRef<[3,3]>(globals.M));
    real l_vdot_341 = VDot<3,4>(LOAD_0(l_projParam_340),v_335);
    vec3{4} v_342 = VEC3{4}(l_vdot_337,l_vdot_339,l_vdot_341);
    real l_r_343 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_342,v_342)));
    vec3{4} v_344 = VSub<3,4>(v_334,VEC3{4}(RMul(l_r_343,RMul(l_r_333,l_vdot_337)),RMul(l_r_343,RMul(l_r_333,l_vdot_339)),RMul(l_r_343,RMul(l_r_333,l_vdot_341))));
    vec3{4} v_345 = v_334;
    if (GT<real>(Sqrt(VDot<3,4>(v_344,v_344)),0.1e-5)) {
      l__t_346 = true;
    } else {
      femData(MeshPos) l_callFindPos_347 = findPos$5CDA(globals._t,TensorRef<[3]>(self.altCPos));
      &tensor[3] l_refPos_348 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_347);
      int l_mulRes_349 = IMul(ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_347),10);
      int t_350 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_349);
      int l_mulRes_351 = IMul(3,t_350);
      int t_352 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,1));
      int l_mulRes_353 = IMul(3,t_352);
      int t_354 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,2));
      int l_mulRes_355 = IMul(3,t_354);
      int t_356 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,3));
      int l_mulRes_357 = IMul(3,t_356);
      int t_358 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,4));
      int l_mulRes_359 = IMul(3,t_358);
      int t_360 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,5));
      int l_mulRes_361 = IMul(3,t_360);
      int t_362 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,6));
      int l_mulRes_363 = IMul(3,t_362);
      int t_364 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,7));
      int l_mulRes_365 = IMul(3,t_364);
      int t_366 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,8));
      int l_mulRes_367 = IMul(3,t_366);
      int t_368 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,9));
      int l_mulRes_369 = IMul(3,t_368);
      real l_varAcc_370 = VIndex<3,4,0>(LOAD_0(l_refPos_348));
      real l_varAcc_371 = VIndex<3,4,1>(LOAD_0(l_refPos_348));
      real l_varAcc_372 = VIndex<3,4,2>(LOAD_0(l_refPos_348));
      real l_prod_373 = RMul(RMul(l_varAcc_370,l_varAcc_370),l_prod_214);
      real l_prod_374 = RMul(l_varAcc_371,0.1e1);
      real l_prod_375 = RMul(l_varAcc_370,l_prod_374);
      real l_prod_376 = RMul(0.1e1,l_varAcc_372);
      real l_prod_377 = RMul(l_varAcc_370,l_prod_376);
      real l_prod_378 = RMul(l_varAcc_370,l_prod_214);
      real l_prod_379 = RMul(0.1e1,RMul(RMul(l_varAcc_371,l_varAcc_371),0.1e1));
      real l_prod_380 = RMul(0.1e1,RMul(l_varAcc_371,l_varAcc_372));
      real l_prod_381 = RMul(0.1e1,l_prod_374);
      real l_prod_382 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_372,l_varAcc_372)));
      real l_prod_383 = RMul(0.1e1,l_prod_376);
      real l_mult_384 = RMul(0.2e1,l_prod_382);
      real l_mult_385 = RMul(0.4e1,l_prod_380);
      real l_mult_386 = RMul(0.2e1,l_prod_379);
      real l_mult_387 = RMul(0.4e1,l_prod_377);
      real l_mult_388 = RMul(0.4e1,l_prod_375);
      real l_mult_389 = RMul(0.2e1,l_prod_373);
      real l_sum_390 = RAdd(l_mult_220,RAdd(RMul(-0.3e1,l_prod_383),RAdd(l_mult_384,RAdd(RMul(-0.3e1,l_prod_381),RAdd(l_mult_385,RAdd(l_mult_386,RAdd(RMul(-0.3e1,l_prod_378),RAdd(l_mult_387,RAdd(l_mult_388,l_mult_389)))))))));
      real l_sum_391 = RAdd(RMul(-0.1e1,l_prod_378),l_mult_389);
      real l_sum_392 = RAdd(RMul(-0.1e1,l_prod_381),l_mult_386);
      real l_sum_393 = RAdd(RMul(-0.1e1,l_prod_383),l_mult_384);
      real l_mult_394 = RMul(-0.4e1,l_prod_380);
      real l_mult_395 = RMul(-0.4e1,l_prod_377);
      real l_sum_396 = RAdd(RMul(0.4e1,l_prod_383),RAdd(RMul(-0.4e1,l_prod_382),RAdd(l_mult_394,l_mult_395)));
      real l_mult_397 = RMul(-0.4e1,l_prod_375);
      real l_sum_398 = RAdd(RMul(0.4e1,l_prod_381),RAdd(l_mult_394,RAdd(RMul(-0.4e1,l_prod_379),l_mult_397)));
      real l_sum_399 = RAdd(RMul(0.4e1,l_prod_378),RAdd(l_mult_395,RAdd(l_mult_397,RMul(-0.4e1,l_prod_373))));
      real t_400 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_351);
      real t_401 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_353);
      real t_402 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_355);
      real t_403 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_357);
      real t_404 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_359);
      real t_405 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_361);
      real t_406 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_363);
      real t_407 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_365);
      real t_408 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_367);
      real t_409 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_369);
      real l_r_410 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_400,l_sum_390),RMul(t_401,l_sum_391)),RMul(t_402,l_sum_392)),RMul(t_403,l_sum_393)),RMul(t_404,l_mult_385)),RMul(t_405,l_mult_387)),RMul(t_406,l_mult_388)),RMul(t_407,l_sum_396)),RMul(t_408,l_sum_398)),RMul(t_409,l_sum_399));
      real t_411 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_351));
      real t_412 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_353));
      real t_413 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_355));
      real t_414 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_357));
      real t_415 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_359));
      real t_416 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_361));
      real t_417 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_363));
      real t_418 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_365));
      real t_419 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_367));
      real t_420 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_369));
      real l_r_421 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_411,l_sum_390),RMul(t_412,l_sum_391)),RMul(t_413,l_sum_392)),RMul(t_414,l_sum_393)),RMul(t_415,l_mult_385)),RMul(t_416,l_mult_387)),RMul(t_417,l_mult_388)),RMul(t_418,l_sum_396)),RMul(t_419,l_sum_398)),RMul(t_420,l_sum_399));
      real t_422 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_351));
      real t_423 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_353));
      real t_424 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_355));
      real t_425 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_357));
      real t_426 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_359));
      real t_427 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_361));
      real t_428 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_363));
      real t_429 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_365));
      real t_430 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_367));
      real t_431 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_369));
      real l_r_432 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_422,l_sum_390),RMul(t_423,l_sum_391)),RMul(t_424,l_sum_392)),RMul(t_425,l_sum_393)),RMul(t_426,l_mult_385)),RMul(t_427,l_mult_387)),RMul(t_428,l_mult_388)),RMul(t_429,l_sum_396)),RMul(t_430,l_sum_398)),RMul(t_431,l_sum_399));
      vec3{4} v_433 = VEC3{4}(l_r_410,l_r_421,l_r_432);
      real l_r_434 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_433,v_433)));
      vec3{4} v_435 = VSub<3,4>(v_345,VEC3{4}(RMul(l_r_434,RMul(l_r_333,l_r_410)),RMul(l_r_434,RMul(l_r_333,l_r_421)),RMul(l_r_434,RMul(l_r_333,l_r_432))));
      l__t_346 = GT<real>(Sqrt(VDot<3,4>(v_435,v_435)),0.1e-5);
    }
    if (l__t_346) {
      print("ERG:Error in evaluation on pos 1:",TensorRef<[3]>(self.startPos),"\n");
    }
    tensor[3] _arg_436 = PACK(v_345);
    femData(MeshPos) l_intermed_437 = fn_2FB$5CFF(self.cPos,_arg_436);
    femData(MeshPos) l_callFindPos_438 = findPos$5CDA(globals._t,TensorRef<[3]>(self.altCPos));
    &tensor[3] l_refPos_439 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_438);
    int l_mulRes_440 = IMul(ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_438),10);
    int t_441 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_440);
    int l_mulRes_442 = IMul(3,t_441);
    int t_443 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,1));
    int l_mulRes_444 = IMul(3,t_443);
    int t_445 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,2));
    int l_mulRes_446 = IMul(3,t_445);
    int t_447 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,3));
    int l_mulRes_448 = IMul(3,t_447);
    int t_449 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,4));
    int l_mulRes_450 = IMul(3,t_449);
    int t_451 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,5));
    int l_mulRes_452 = IMul(3,t_451);
    int t_453 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,6));
    int l_mulRes_454 = IMul(3,t_453);
    int t_455 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,7));
    int l_mulRes_456 = IMul(3,t_455);
    int t_457 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,8));
    int l_mulRes_458 = IMul(3,t_457);
    int t_459 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,9));
    int l_mulRes_460 = IMul(3,t_459);
    real l_varAcc_461 = VIndex<3,4,0>(LOAD_0(l_refPos_439));
    real l_varAcc_462 = VIndex<3,4,1>(LOAD_0(l_refPos_439));
    real l_varAcc_463 = VIndex<3,4,2>(LOAD_0(l_refPos_439));
    real l_prod_464 = RMul(RMul(l_varAcc_461,l_varAcc_461),l_prod_214);
    real l_prod_465 = RMul(l_varAcc_462,0.1e1);
    real l_prod_466 = RMul(l_varAcc_461,l_prod_465);
    real l_prod_467 = RMul(0.1e1,l_varAcc_463);
    real l_prod_468 = RMul(l_varAcc_461,l_prod_467);
    real l_prod_469 = RMul(l_varAcc_461,l_prod_214);
    real l_prod_470 = RMul(0.1e1,RMul(RMul(l_varAcc_462,l_varAcc_462),0.1e1));
    real l_prod_471 = RMul(0.1e1,RMul(l_varAcc_462,l_varAcc_463));
    real l_prod_472 = RMul(0.1e1,l_prod_465);
    real l_prod_473 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_463,l_varAcc_463)));
    real l_prod_474 = RMul(0.1e1,l_prod_467);
    real l_mult_475 = RMul(0.2e1,l_prod_473);
    real l_mult_476 = RMul(0.4e1,l_prod_471);
    real l_mult_477 = RMul(0.2e1,l_prod_470);
    real l_mult_478 = RMul(0.4e1,l_prod_468);
    real l_mult_479 = RMul(0.4e1,l_prod_466);
    real l_mult_480 = RMul(0.2e1,l_prod_464);
    real l_sum_481 = RAdd(l_mult_220,RAdd(RMul(-0.3e1,l_prod_474),RAdd(l_mult_475,RAdd(RMul(-0.3e1,l_prod_472),RAdd(l_mult_476,RAdd(l_mult_477,RAdd(RMul(-0.3e1,l_prod_469),RAdd(l_mult_478,RAdd(l_mult_479,l_mult_480)))))))));
    real l_sum_482 = RAdd(RMul(-0.1e1,l_prod_469),l_mult_480);
    real l_sum_483 = RAdd(RMul(-0.1e1,l_prod_472),l_mult_477);
    real l_sum_484 = RAdd(RMul(-0.1e1,l_prod_474),l_mult_475);
    real l_mult_485 = RMul(-0.4e1,l_prod_471);
    real l_mult_486 = RMul(-0.4e1,l_prod_468);
    real l_sum_487 = RAdd(RMul(0.4e1,l_prod_474),RAdd(RMul(-0.4e1,l_prod_473),RAdd(l_mult_485,l_mult_486)));
    real l_mult_488 = RMul(-0.4e1,l_prod_466);
    real l_sum_489 = RAdd(RMul(0.4e1,l_prod_472),RAdd(l_mult_485,RAdd(RMul(-0.4e1,l_prod_470),l_mult_488)));
    real l_sum_490 = RAdd(RMul(0.4e1,l_prod_469),RAdd(l_mult_486,RAdd(l_mult_488,RMul(-0.4e1,l_prod_464))));
    real t_491 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_442);
    real t_492 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_444);
    real t_493 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_446);
    real t_494 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_448);
    real t_495 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_450);
    real t_496 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_452);
    real t_497 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_454);
    real t_498 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_456);
    real t_499 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_458);
    real t_500 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_460);
    real l_r_501 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_491,l_sum_481),RMul(t_492,l_sum_482)),RMul(t_493,l_sum_483)),RMul(t_494,l_sum_484)),RMul(t_495,l_mult_476)),RMul(t_496,l_mult_478)),RMul(t_497,l_mult_479)),RMul(t_498,l_sum_487)),RMul(t_499,l_sum_489)),RMul(t_500,l_sum_490));
    real t_502 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_442));
    real t_503 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_444));
    real t_504 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_446));
    real t_505 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_448));
    real t_506 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_450));
    real t_507 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_452));
    real t_508 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_454));
    real t_509 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_456));
    real t_510 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_458));
    real t_511 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_460));
    real l_r_512 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_502,l_sum_481),RMul(t_503,l_sum_482)),RMul(t_504,l_sum_483)),RMul(t_505,l_sum_484)),RMul(t_506,l_mult_476)),RMul(t_507,l_mult_478)),RMul(t_508,l_mult_479)),RMul(t_509,l_sum_487)),RMul(t_510,l_sum_489)),RMul(t_511,l_sum_490));
    real t_513 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_442));
    real t_514 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_444));
    real t_515 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_446));
    real t_516 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_448));
    real t_517 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_450));
    real t_518 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_452));
    real t_519 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_454));
    real t_520 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_456));
    real t_521 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_458));
    real t_522 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_460));
    real l_r_523 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_513,l_sum_481),RMul(t_514,l_sum_482)),RMul(t_515,l_sum_483)),RMul(t_516,l_sum_484)),RMul(t_517,l_mult_476)),RMul(t_518,l_mult_478)),RMul(t_519,l_mult_479)),RMul(t_520,l_sum_487)),RMul(t_521,l_sum_489)),RMul(t_522,l_sum_490));
    vec3{4} v_524 = VEC3{4}(l_r_501,l_r_512,l_r_523);
    real l_r_525 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_524,v_524)));
    vec3{4} v_526 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.altCPos)),VEC3{4}(RMul(l_r_525,RMul(l_r_333,l_r_501)),RMul(l_r_525,RMul(l_r_333,l_r_512)),RMul(l_r_525,RMul(l_r_333,l_r_523))));
    bool l__t_527 = ExtractFemItem<bool,Valid(MeshPos)>(l_intermed_437);
    tensor[3] _arg_528 = PACK(v_526);
    femData(MeshPos) l__t_529 = findPos$5CDA(globals.meshData,_arg_528);
    bool l__t_530 = ExtractFemItem<bool,Valid(MeshPos)>(l__t_529);
    vec3{4} v_531 = v_526;
    if (NEQ<bool>(l__t_527,l__t_530)) {
      print("ERG:Warning of validity intermed",TensorRef<[3]>(self.startPos),"\n");
      tensor[3] _arg_532 = PACK(v_531);
      print("Real location:",TensorRef<[3]>(_arg_532),"\n");
      print("Cell change: ",LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l__t_194),ExtractFemItem<int,CellIndex(MeshPos)>(l__t_194))," to ",LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l__t_529),ExtractFemItem<int,CellIndex(MeshPos)>(l__t_529)),"\n");
    }
    bool l__t_533 = BNot(l__t_527);
    if (l__t_533) {
      l__t_534 = true;
    } else {
      l__t_534 = BNot(l__t_530);
    }
    if (l__t_534) {
      tensor[3] _arg_535 = PACK(v_531);
      print("Went off the mesh\?",l__t_533," and ",TensorRef<[3]>(_arg_535)," and ",BNot(l__t_530),"\n");
      self.stream = l_stream_244;
      self.newStream = l_newStream_247;
      stabilize;
    }
    &tensor[3] l__t_536 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(l_intermed_437);
    int l__t_537 = ExtractFemItem<int,CellIndex(MeshPos)>(l_intermed_437);
    femData(Mesh) l__t_538 = ExtractFem<femData(Mesh),femData(MeshPos)>(l_intermed_437);
    int l_mulRes_539 = IMul(l__t_537,4);
    int t_540 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_538,l_mulRes_539);
    int l_mulRes_541 = IMul(3,t_540);
    int t_542 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_538,IAdd(l_mulRes_539,1));
    int l_mulRes_543 = IMul(3,t_542);
    int t_544 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_538,IAdd(l_mulRes_539,2));
    int l_mulRes_545 = IMul(3,t_544);
    int t_546 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_538,IAdd(l_mulRes_539,3));
    int l_mulRes_547 = IMul(3,t_546);
    real l_varAcc_548 = VIndex<3,4,0>(LOAD_0(l__t_536));
    real l_varAcc_549 = VIndex<3,4,1>(LOAD_0(l__t_536));
    real l_varAcc_550 = VIndex<3,4,2>(LOAD_0(l__t_536));
    real l_prod_551 = RMul(l_varAcc_548,l_prod_214);
    real l_prod_552 = RMul(l_varAcc_549,0.1e1);
    real l_prod_553 = RMul(0.1e1,l_prod_552);
    real l_prod_554 = RMul(0.1e1,l_varAcc_550);
    real l_prod_555 = RMul(0.1e1,l_prod_554);
    real l_mult_556 = RMul(-0.1e1,l_prod_555);
    real l_mult_557 = RMul(-0.1e1,l_prod_553);
    real l_mult_558 = RMul(-0.1e1,l_prod_551);
    real l_sum_559 = RAdd(l_mult_220,RAdd(l_mult_556,RAdd(l_mult_557,l_mult_558)));
    real l_basisEval_560 = RMul(0.1e1,l_prod_551);
    real l_basisEval_561 = RMul(0.1e1,l_prod_553);
    real l_basisEval_562 = RMul(0.1e1,l_prod_555);
    real t_563 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,l_mulRes_541);
    real t_564 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,l_mulRes_543);
    real t_565 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,l_mulRes_545);
    real t_566 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,l_mulRes_547);
    real t_567 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(1,l_mulRes_541));
    real t_568 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(1,l_mulRes_543));
    real t_569 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(1,l_mulRes_545));
    real t_570 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(1,l_mulRes_547));
    real t_571 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(2,l_mulRes_541));
    real t_572 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(2,l_mulRes_543));
    real t_573 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(2,l_mulRes_545));
    real t_574 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(2,l_mulRes_547));
    vec3{4} v_575 = VEC3{4}(RAdd(RAdd(RAdd(RMul(t_563,l_sum_559),RMul(t_564,l_basisEval_560)),RMul(t_565,l_basisEval_561)),RMul(t_566,l_basisEval_562)),RAdd(RAdd(RAdd(RMul(t_567,l_sum_559),RMul(t_568,l_basisEval_560)),RMul(t_569,l_basisEval_561)),RMul(t_570,l_basisEval_562)),RAdd(RAdd(RAdd(RMul(t_571,l_sum_559),RMul(t_572,l_basisEval_560)),RMul(t_573,l_basisEval_561)),RMul(t_574,l_basisEval_562)));
    vec3{4} v_576 = VSub<3,4>(v_575,v_531);
    vec3{4} v_577 = v_575;
    if (GT<real>(Sqrt(VDot<3,4>(v_576,v_576)),0.1e-5)) {
      print("ERG:Error in tracing 2: At step:",self.step," with particle:",TensorRef<[3]>(self.startPos),"\n");
      tensor[3] _arg_579 = PACK(v_577);
      tensor[3] _arg_578 = PACK(v_531);
      print("Poses are:",TensorRef<[3]>(_arg_579),TensorRef<[3]>(_arg_578),"\n");
      self.stream = l_stream_244;
      self.newStream = l_newStream_247;
      stabilize;
    } else {
      print("fine in cell 2:",LoadFem<femData(MeshCell)>(l__t_201,l__t_200),"\n");
    }
    if (l__t_527) {
      femData(FuncCell) l__t_580 = LoadFem<femData(FuncCell)>(globals.data,ExtractFemItem<int,CellIndex(MeshCell)>(LoadFem<femData(MeshCell)>(l__t_538,l__t_537)));
      femData(FemFunc) l__t_581 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_580);
      femData(Space) l__t_582 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_581);
      int l_mulRes_583 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(l__t_580),10);
      int t_584 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,l_mulRes_583);
      int l_mulRes_585 = IMul(3,t_584);
      int t_586 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,1));
      int l_mulRes_587 = IMul(3,t_586);
      int t_588 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,2));
      int l_mulRes_589 = IMul(3,t_588);
      int t_590 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,3));
      int l_mulRes_591 = IMul(3,t_590);
      int t_592 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,4));
      int l_mulRes_593 = IMul(3,t_592);
      int t_594 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,5));
      int l_mulRes_595 = IMul(3,t_594);
      int t_596 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,6));
      int l_mulRes_597 = IMul(3,t_596);
      int t_598 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,7));
      int l_mulRes_599 = IMul(3,t_598);
      int t_600 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,8));
      int l_mulRes_601 = IMul(3,t_600);
      int t_602 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,9));
      int l_mulRes_603 = IMul(3,t_602);
      real l_prod_604 = RMul(RMul(l_varAcc_548,l_varAcc_548),l_prod_214);
      real l_prod_605 = RMul(l_varAcc_548,l_prod_552);
      real l_prod_606 = RMul(l_varAcc_548,l_prod_554);
      real l_prod_607 = RMul(0.1e1,RMul(RMul(l_varAcc_549,l_varAcc_549),0.1e1));
      real l_prod_608 = RMul(0.1e1,RMul(l_varAcc_549,l_varAcc_550));
      real l_prod_609 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_550,l_varAcc_550)));
      real l_mult_610 = RMul(0.2e1,l_prod_609);
      real l_mult_611 = RMul(0.4e1,l_prod_608);
      real l_mult_612 = RMul(0.2e1,l_prod_607);
      real l_mult_613 = RMul(0.4e1,l_prod_606);
      real l_mult_614 = RMul(0.4e1,l_prod_605);
      real l_mult_615 = RMul(0.2e1,l_prod_604);
      real l_sum_616 = RAdd(l_mult_220,RAdd(RMul(-0.3e1,l_prod_555),RAdd(l_mult_610,RAdd(RMul(-0.3e1,l_prod_553),RAdd(l_mult_611,RAdd(l_mult_612,RAdd(RMul(-0.3e1,l_prod_551),RAdd(l_mult_613,RAdd(l_mult_614,l_mult_615)))))))));
      real l_sum_617 = RAdd(l_mult_558,l_mult_615);
      real l_sum_618 = RAdd(l_mult_557,l_mult_612);
      real l_sum_619 = RAdd(l_mult_556,l_mult_610);
      real l_mult_620 = RMul(-0.4e1,l_prod_608);
      real l_mult_621 = RMul(-0.4e1,l_prod_606);
      real l_sum_622 = RAdd(RMul(0.4e1,l_prod_555),RAdd(RMul(-0.4e1,l_prod_609),RAdd(l_mult_620,l_mult_621)));
      real l_mult_623 = RMul(-0.4e1,l_prod_605);
      real l_sum_624 = RAdd(RMul(0.4e1,l_prod_553),RAdd(l_mult_620,RAdd(RMul(-0.4e1,l_prod_607),l_mult_623)));
      real l_sum_625 = RAdd(RMul(0.4e1,l_prod_551),RAdd(l_mult_621,RAdd(l_mult_623,RMul(-0.4e1,l_prod_604))));
      real t_626 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_585);
      real t_627 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_587);
      real t_628 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_589);
      real t_629 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_591);
      real t_630 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_593);
      real t_631 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_595);
      real t_632 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_597);
      real t_633 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_599);
      real t_634 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_601);
      real t_635 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_603);
      real l_r_636 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_626,l_sum_616),RMul(t_627,l_sum_617)),RMul(t_628,l_sum_618)),RMul(t_629,l_sum_619)),RMul(t_630,l_mult_611)),RMul(t_631,l_mult_613)),RMul(t_632,l_mult_614)),RMul(t_633,l_sum_622)),RMul(t_634,l_sum_624)),RMul(t_635,l_sum_625));
      real t_637 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_585));
      real t_638 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_587));
      real t_639 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_589));
      real t_640 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_591));
      real t_641 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_593));
      real t_642 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_595));
      real t_643 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_597));
      real t_644 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_599));
      real t_645 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_601));
      real t_646 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_603));
      real l_r_647 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_637,l_sum_616),RMul(t_638,l_sum_617)),RMul(t_639,l_sum_618)),RMul(t_640,l_sum_619)),RMul(t_641,l_mult_611)),RMul(t_642,l_mult_613)),RMul(t_643,l_mult_614)),RMul(t_644,l_sum_622)),RMul(t_645,l_sum_624)),RMul(t_646,l_sum_625));
      real t_648 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_585));
      real t_649 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_587));
      real t_650 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_589));
      real t_651 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_591));
      real t_652 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_593));
      real t_653 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_595));
      real t_654 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_597));
      real t_655 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_599));
      real t_656 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_601));
      real t_657 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_603));
      real l_r_658 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_648,l_sum_616),RMul(t_649,l_sum_617)),RMul(t_650,l_sum_618)),RMul(t_651,l_sum_619)),RMul(t_652,l_mult_611)),RMul(t_653,l_mult_613)),RMul(t_654,l_mult_614)),RMul(t_655,l_sum_622)),RMul(t_656,l_sum_624)),RMul(t_657,l_sum_625));
      vec3{4} v_659 = VEC3{4}(l_r_636,l_r_647,l_r_658);
      real l_r_660 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_659,v_659)));
      v_661 = VEC3{4}(RMul(l_r_660,l_r_636),RMul(l_r_660,l_r_647),RMul(l_r_660,l_r_658));
    } else {
      print("QWE:Eval at 0\n");
      v_661 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    vec3{4} v_662 = VScale<3,4>(globals.stepSize,v_661);
    tensor[3] _arg_663 = PACK(v_662);
    femData(MeshPos) l_cPos_664 = fn_2FB$5CFF(self.cPos,_arg_663);
    tensor[3] _arg_665 = PACK(v_531);
    femData(MeshPos) l_callFindPos_666 = findPos$5CDA(globals._t,_arg_665);
    &tensor[3] l_refPos_667 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_666);
    int l_mulRes_668 = IMul(ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_666),10);
    int t_669 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_668);
    int l_mulRes_670 = IMul(3,t_669);
    int t_671 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,1));
    int l_mulRes_672 = IMul(3,t_671);
    int t_673 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,2));
    int l_mulRes_674 = IMul(3,t_673);
    int t_675 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,3));
    int l_mulRes_676 = IMul(3,t_675);
    int t_677 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,4));
    int l_mulRes_678 = IMul(3,t_677);
    int t_679 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,5));
    int l_mulRes_680 = IMul(3,t_679);
    int t_681 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,6));
    int l_mulRes_682 = IMul(3,t_681);
    int t_683 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,7));
    int l_mulRes_684 = IMul(3,t_683);
    int t_685 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,8));
    int l_mulRes_686 = IMul(3,t_685);
    int t_687 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,9));
    int l_mulRes_688 = IMul(3,t_687);
    real l_varAcc_689 = VIndex<3,4,0>(LOAD_0(l_refPos_667));
    real l_varAcc_690 = VIndex<3,4,1>(LOAD_0(l_refPos_667));
    real l_varAcc_691 = VIndex<3,4,2>(LOAD_0(l_refPos_667));
    real l_prod_692 = RMul(RMul(l_varAcc_689,l_varAcc_689),l_prod_214);
    real l_prod_693 = RMul(l_varAcc_690,0.1e1);
    real l_prod_694 = RMul(l_varAcc_689,l_prod_693);
    real l_prod_695 = RMul(0.1e1,l_varAcc_691);
    real l_prod_696 = RMul(l_varAcc_689,l_prod_695);
    real l_prod_697 = RMul(l_varAcc_689,l_prod_214);
    real l_prod_698 = RMul(0.1e1,RMul(RMul(l_varAcc_690,l_varAcc_690),0.1e1));
    real l_prod_699 = RMul(0.1e1,RMul(l_varAcc_690,l_varAcc_691));
    real l_prod_700 = RMul(0.1e1,l_prod_693);
    real l_prod_701 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_691,l_varAcc_691)));
    real l_prod_702 = RMul(0.1e1,l_prod_695);
    real l_mult_703 = RMul(0.2e1,l_prod_701);
    real l_mult_704 = RMul(0.4e1,l_prod_699);
    real l_mult_705 = RMul(0.2e1,l_prod_698);
    real l_mult_706 = RMul(0.4e1,l_prod_696);
    real l_mult_707 = RMul(0.4e1,l_prod_694);
    real l_mult_708 = RMul(0.2e1,l_prod_692);
    real l_sum_709 = RAdd(l_mult_220,RAdd(RMul(-0.3e1,l_prod_702),RAdd(l_mult_703,RAdd(RMul(-0.3e1,l_prod_700),RAdd(l_mult_704,RAdd(l_mult_705,RAdd(RMul(-0.3e1,l_prod_697),RAdd(l_mult_706,RAdd(l_mult_707,l_mult_708)))))))));
    real l_sum_710 = RAdd(RMul(-0.1e1,l_prod_697),l_mult_708);
    real l_sum_711 = RAdd(RMul(-0.1e1,l_prod_700),l_mult_705);
    real l_sum_712 = RAdd(RMul(-0.1e1,l_prod_702),l_mult_703);
    real l_mult_713 = RMul(-0.4e1,l_prod_699);
    real l_mult_714 = RMul(-0.4e1,l_prod_696);
    real l_sum_715 = RAdd(RMul(0.4e1,l_prod_702),RAdd(RMul(-0.4e1,l_prod_701),RAdd(l_mult_713,l_mult_714)));
    real l_mult_716 = RMul(-0.4e1,l_prod_694);
    real l_sum_717 = RAdd(RMul(0.4e1,l_prod_700),RAdd(l_mult_713,RAdd(RMul(-0.4e1,l_prod_698),l_mult_716)));
    real l_sum_718 = RAdd(RMul(0.4e1,l_prod_697),RAdd(l_mult_714,RAdd(l_mult_716,RMul(-0.4e1,l_prod_692))));
    real t_719 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_670);
    real t_720 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_672);
    real t_721 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_674);
    real t_722 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_676);
    real t_723 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_678);
    real t_724 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_680);
    real t_725 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_682);
    real t_726 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_684);
    real t_727 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_686);
    real t_728 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_688);
    real t_729 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_670));
    real t_730 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_672));
    real t_731 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_674));
    real t_732 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_676));
    real t_733 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_678));
    real t_734 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_680));
    real t_735 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_682));
    real t_736 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_684));
    real t_737 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_686));
    real t_738 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_688));
    real t_739 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_670));
    real t_740 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_672));
    real t_741 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_674));
    real t_742 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_676));
    real t_743 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_678));
    real t_744 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_680));
    real t_745 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_682));
    real t_746 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_684));
    real t_747 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_686));
    real t_748 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_688));
    vec3{4} v_749 = VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_719,l_sum_709),RMul(t_720,l_sum_710)),RMul(t_721,l_sum_711)),RMul(t_722,l_sum_712)),RMul(t_723,l_mult_704)),RMul(t_724,l_mult_706)),RMul(t_725,l_mult_707)),RMul(t_726,l_sum_715)),RMul(t_727,l_sum_717)),RMul(t_728,l_sum_718)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_729,l_sum_709),RMul(t_730,l_sum_710)),RMul(t_731,l_sum_711)),RMul(t_732,l_sum_712)),RMul(t_733,l_mult_704)),RMul(t_734,l_mult_706)),RMul(t_735,l_mult_707)),RMul(t_736,l_sum_715)),RMul(t_737,l_sum_717)),RMul(t_738,l_sum_718)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_739,l_sum_709),RMul(t_740,l_sum_710)),RMul(t_741,l_sum_711)),RMul(t_742,l_sum_712)),RMul(t_743,l_mult_704)),RMul(t_744,l_mult_706)),RMul(t_745,l_mult_707)),RMul(t_746,l_sum_715)),RMul(t_747,l_sum_717)),RMul(t_748,l_sum_718)));
    vec3{4} v_750 = VScale<3,4>(globals.stepSize,v_749);
    real l_r_751 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_749,v_749)));
    vec3{4} v_752 = VEC3{4}(RMul(l_r_751,VIndex<3,4,0>(v_750)),RMul(l_r_751,VIndex<3,4,1>(v_750)),RMul(l_r_751,VIndex<3,4,2>(v_750)));
    vec3{4} v_753 = VSub<3,4>(v_531,LOAD_0(TensorRef<[3]>(globals.center)));
    vec3{4} v_754 = VEC3{4}(VDot<3,4>(LOAD_0(l_projParam_336),v_753),VDot<3,4>(LOAD_0(l_projParam_338),v_753),VDot<3,4>(LOAD_0(l_projParam_340),v_753));
    vec3{4} v_755 = VScale<3,4>(globals.stepSize,v_754);
    real l_r_756 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_754,v_754)));
    vec3{4} v_757 = VSub<3,4>(v_662,VEC3{4}(RMul(l_r_756,VIndex<3,4,0>(v_755)),RMul(l_r_756,VIndex<3,4,1>(v_755)),RMul(l_r_756,VIndex<3,4,2>(v_755))));
    real l__t_758 = Sqrt(VDot<3,4>(v_757,v_757));
    vec3{4} v_759 = v_662;
    vec3{4} v_760 = v_752;
    vec3{4} v_761 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.altCPos)),v_752);
    int l_step_762 = IAdd(self.step,1);
    if (GT<real>(l__t_758,0.1e-5)) {
      l__t_763 = true;
    } else {
      vec3{4} v_764 = VSub<3,4>(v_759,v_760);
      l__t_763 = GT<real>(Sqrt(VDot<3,4>(v_764,v_764)),0.1e-4);
    }
    if (l__t_763) {
      print("ERG:Error in evaluation on pos 2:",TensorRef<[3]>(self.startPos),"\n");
      vec3{4} v_765 = VSub<3,4>(v_759,v_760);
      print("The errors are:",l__t_758," and ",Sqrt(VDot<3,4>(v_765,v_765)),"\n");
      print("The cells are:",LoadFem<femData(MeshCell)>(l__t_538,l__t_537)," vs ",LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l__t_529),ExtractFemItem<int,CellIndex(MeshPos)>(l__t_529)),"\n");
    }
    self.stream = l_stream_244;
    self.newStream = l_newStream_247;
    self.step = l_step_762;
    self.cPos = l_cPos_664;
    self.altCPos = PACK(v_761);
    active;
  }
}
//***** CREATE COLLECTION *****
  {
    foreach &tensor[3] i_x_767 in globals.startPoints {
      new gg(i_x_767);
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) meshData;
input femData(Space) 0space0409_intermedateGlobal;
input femData(FemFunc) 0data040B_intermedateGlobal;
input int timeSteps;
input real timeEps;
input tensor[3][] startPoints;
input real stepSize;
input int stepMax;
input tensor[3,3] M;
input tensor[3] center;
//***** CONST INIT *****
  {
    globals.timeSteps = 32;
    globals.timeEps = 0.1e-6;
    globals.stepSize = 0.1e-1;
    globals.stepMax = 300;
  }
//***** GLOBALS *****
global femData(FemFunc) data;
global femData(Mesh) _t;
global femData(Space) _tX;
//***** FUNCTIONS *****
  function femData(MeshPos) findPos (femData(Mesh) p_mesh_0,&tensor[3] p_pos_1) {
    int[] t_3 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(p_mesh_0,p_pos_1);
    vec3{4} v_4 = VEC3{4}(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    foreach int i_cellItter_2 in t_3 {
      vec3{4} v_5;
      v_5 = v_4;
      for i_newtonItter_6 = 0 to 16 {
        int l_mulRes_7 = IMul(i_cellItter_2,4);
        int t_8 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,l_mulRes_7);
        int l_mulRes_9 = IMul(3,t_8);
        real l_dof_load_10 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_9);
        real l_dof_load_11 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_9));
        real l_dof_load_12 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_9));
        int t_13 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,1));
        int l_mulRes_14 = IMul(3,t_13);
        real l_dof_load_15 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_14);
        real l_dof_load_16 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_14));
        real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_14));
        int t_18 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,2));
        int l_mulRes_19 = IMul(3,t_18);
        real l_dof_load_20 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_19);
        real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_19));
        real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_19));
        int t_23 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,3));
        int l_mulRes_24 = IMul(3,t_23);
        real l_dof_load_25 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_24);
        real l_dof_load_26 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_24));
        real l_dof_load_27 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_24));
        real l_prod_28 = RMul(0.1e1,0.1e1);
        real l_prod_29 = RMul(0.1e1,l_prod_28);
        real l_basisEval_30 = RMul(-0.1e1,l_prod_29);
        real l_basisEval_31 = RMul(0.1e1,l_prod_29);
        real l_r_32 = RMul(l_dof_load_10,l_basisEval_30);
        real l_r_33 = RMul(l_dof_load_20,0.e0);
        real l_r_34 = RMul(l_dof_load_25,0.e0);
        real l_r_35 = RAdd(RAdd(RAdd(l_r_32,RMul(l_dof_load_15,l_basisEval_31)),l_r_33),l_r_34);
        real l_r_36 = RAdd(l_r_32,RMul(l_dof_load_15,0.e0));
        real l_r_37 = RAdd(RAdd(l_r_36,RMul(l_dof_load_20,l_basisEval_31)),l_r_34);
        real l_r_38 = RAdd(RAdd(l_r_36,l_r_33),RMul(l_dof_load_25,l_basisEval_31));
        real l_r_39 = RMul(l_dof_load_11,l_basisEval_30);
        real l_r_40 = RMul(l_dof_load_21,0.e0);
        real l_r_41 = RMul(l_dof_load_26,0.e0);
        real l_r_42 = RAdd(RAdd(RAdd(l_r_39,RMul(l_dof_load_16,l_basisEval_31)),l_r_40),l_r_41);
        real l_r_43 = RAdd(l_r_39,RMul(l_dof_load_16,0.e0));
        real l_r_44 = RAdd(RAdd(l_r_43,RMul(l_dof_load_21,l_basisEval_31)),l_r_41);
        real l_r_45 = RAdd(RAdd(l_r_43,l_r_40),RMul(l_dof_load_26,l_basisEval_31));
        real l_r_46 = RMul(l_dof_load_12,l_basisEval_30);
        real l_r_47 = RMul(l_dof_load_22,0.e0);
        real l_r_48 = RMul(l_dof_load_27,0.e0);
        real l_r_49 = RAdd(RAdd(RAdd(l_r_46,RMul(l_dof_load_17,l_basisEval_31)),l_r_47),l_r_48);
        real l_r_50 = RAdd(l_r_46,RMul(l_dof_load_17,0.e0));
        real l_r_51 = RAdd(RAdd(l_r_50,RMul(l_dof_load_22,l_basisEval_31)),l_r_48);
        real l_r_52 = RAdd(RAdd(l_r_50,l_r_47),RMul(l_dof_load_27,l_basisEval_31));
        real l_r_53 = RMul(0.e0,l_r_35);
        real l_r_54 = RMul(0.e0,l_r_42);
        real l_r_55 = RMul(0.e0,l_r_49);
        real l_r_56 = RAdd(l_r_53,l_r_54);
        real l_r_57 = RAdd(l_r_56,l_r_55);
        real l_r_58 = RMul(0.e0,l_r_37);
        real l_r_59 = RMul(0.e0,l_r_44);
        real l_r_60 = RMul(0.e0,l_r_51);
        real l_r_61 = RAdd(l_r_58,l_r_59);
        real l_r_62 = RAdd(l_r_61,l_r_60);
        real l_r_63 = RMul(0.e0,l_r_38);
        real l_r_64 = RMul(0.e0,l_r_45);
        real l_r_65 = RMul(0.e0,l_r_52);
        real l_r_66 = RAdd(l_r_63,l_r_64);
        real l_r_67 = RAdd(l_r_66,l_r_65);
        real l_r_68 = RAdd(l_r_56,RMul(-0.1e1,l_r_49));
        real l_r_69 = RAdd(l_r_61,RMul(-0.1e1,l_r_51));
        real l_r_70 = RAdd(l_r_66,RMul(-0.1e1,l_r_52));
        real l_r_71 = RAdd(RAdd(l_r_53,RMul(0.1e1,l_r_42)),l_r_55);
        real l_r_72 = RAdd(RAdd(l_r_58,RMul(0.1e1,l_r_44)),l_r_60);
        real l_r_73 = RAdd(RAdd(l_r_63,RMul(0.1e1,l_r_45)),l_r_65);
        real l_r_74 = RAdd(l_r_56,RMul(0.1e1,l_r_49));
        real l_r_75 = RAdd(l_r_61,RMul(0.1e1,l_r_51));
        real l_r_76 = RAdd(l_r_66,RMul(0.1e1,l_r_52));
        real l_r_77 = RAdd(RAdd(RMul(-0.1e1,l_r_35),l_r_54),l_r_55);
        real l_r_78 = RAdd(RAdd(RMul(-0.1e1,l_r_37),l_r_59),l_r_60);
        real l_r_79 = RAdd(RAdd(RMul(-0.1e1,l_r_38),l_r_64),l_r_65);
        real l_r_80 = RAdd(RAdd(l_r_53,RMul(-0.1e1,l_r_42)),l_r_55);
        real l_r_81 = RAdd(RAdd(l_r_58,RMul(-0.1e1,l_r_44)),l_r_60);
        real l_r_82 = RAdd(RAdd(l_r_63,RMul(-0.1e1,l_r_45)),l_r_65);
        real l_r_83 = RAdd(RAdd(RMul(0.1e1,l_r_35),l_r_54),l_r_55);
        real l_r_84 = RAdd(RAdd(RMul(0.1e1,l_r_37),l_r_59),l_r_60);
        real l_r_85 = RAdd(RAdd(RMul(0.1e1,l_r_38),l_r_64),l_r_65);
        real l_r_86 = RAdd(RAdd(RMul(l_r_35,l_r_62),RMul(l_r_42,l_r_75)),RMul(l_r_49,l_r_81));
        real l_r_87 = RAdd(RAdd(RMul(l_r_35,l_r_67),RMul(l_r_42,l_r_76)),RMul(l_r_49,l_r_82));
        real l_r_88 = RAdd(RAdd(RMul(l_r_35,l_r_69),RMul(l_r_42,l_r_62)),RMul(l_r_49,l_r_84));
        real l_r_89 = RAdd(RAdd(RMul(l_r_35,l_r_70),RMul(l_r_42,l_r_67)),RMul(l_r_49,l_r_85));
        real l_r_90 = RAdd(RAdd(RMul(l_r_35,l_r_72),RMul(l_r_42,l_r_78)),RMul(l_r_49,l_r_62));
        real l_r_91 = RAdd(RAdd(RMul(l_r_35,l_r_73),RMul(l_r_42,l_r_79)),RMul(l_r_49,l_r_67));
        real l_r_92 = RAdd(RAdd(RMul(l_r_37,l_r_57),RMul(l_r_44,l_r_74)),RMul(l_r_51,l_r_80));
        real l_r_93 = RAdd(RAdd(RMul(l_r_37,l_r_67),RMul(l_r_44,l_r_76)),RMul(l_r_51,l_r_82));
        real l_r_94 = RAdd(RAdd(RMul(l_r_37,l_r_68),RMul(l_r_44,l_r_57)),RMul(l_r_51,l_r_83));
        real l_r_95 = RAdd(RAdd(RMul(l_r_37,l_r_70),RMul(l_r_44,l_r_67)),RMul(l_r_51,l_r_85));
        real l_r_96 = RAdd(RAdd(RMul(l_r_37,l_r_71),RMul(l_r_44,l_r_77)),RMul(l_r_51,l_r_57));
        real l_r_97 = RAdd(RAdd(RMul(l_r_37,l_r_73),RMul(l_r_44,l_r_79)),RMul(l_r_51,l_r_67));
        real l_r_98 = RAdd(RAdd(RMul(l_r_38,l_r_57),RMul(l_r_45,l_r_74)),RMul(l_r_52,l_r_80));
        real l_r_99 = RAdd(RAdd(RMul(l_r_38,l_r_62),RMul(l_r_45,l_r_75)),RMul(l_r_52,l_r_81));
        real l_r_100 = RAdd(RAdd(RMul(l_r_38,l_r_68),RMul(l_r_45,l_r_57)),RMul(l_r_52,l_r_83));
        real l_r_101 = RAdd(RAdd(RMul(l_r_38,l_r_69),RMul(l_r_45,l_r_62)),RMul(l_r_52,l_r_84));
        real l_r_102 = RAdd(RAdd(RMul(l_r_38,l_r_71),RMul(l_r_45,l_r_77)),RMul(l_r_52,l_r_57));
        real l_r_103 = RAdd(RAdd(RMul(l_r_38,l_r_72),RMul(l_r_45,l_r_78)),RMul(l_r_52,l_r_62));
        vec3{4} v_104 = VEC3{4}(l_r_37,l_r_44,l_r_51);
        real l_r_105 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_57),RMul(l_r_42,l_r_74)),RMul(l_r_49,l_r_80)));
        real l_r_106 = RMul(0.e0,l_r_87);
        real l_r_107 = RMul(0.e0,l_r_92);
        real l_r_108 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_62),RMul(l_r_44,l_r_75)),RMul(l_r_51,l_r_81)));
        real l_r_109 = RMul(0.e0,l_r_98);
        real l_r_110 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_67),RMul(l_r_45,l_r_76)),RMul(l_r_52,l_r_82)));
        real l_r_111 = RAdd(l_r_105,RMul(0.e0,l_r_86));
        real l_r_112 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_68),RMul(l_r_42,l_r_57)),RMul(l_r_49,l_r_83)));
        real l_r_113 = RMul(0.e0,l_r_89);
        real l_r_114 = RMul(0.e0,l_r_94);
        real l_r_115 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_69),RMul(l_r_44,l_r_62)),RMul(l_r_51,l_r_84)));
        real l_r_116 = RMul(0.e0,l_r_100);
        real l_r_117 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_70),RMul(l_r_45,l_r_67)),RMul(l_r_52,l_r_85)));
        real l_r_118 = RAdd(l_r_112,RMul(0.e0,l_r_88));
        real l_r_119 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_71),RMul(l_r_42,l_r_77)),RMul(l_r_49,l_r_57)));
        real l_r_120 = RMul(0.e0,l_r_91);
        real l_r_121 = RMul(0.e0,l_r_96);
        real l_r_122 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_72),RMul(l_r_44,l_r_78)),RMul(l_r_51,l_r_62)));
        real l_r_123 = RMul(0.e0,l_r_102);
        real l_r_124 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_73),RMul(l_r_45,l_r_79)),RMul(l_r_52,l_r_67)));
        real l_r_125 = RAdd(l_r_119,RMul(0.e0,l_r_90));
        real l_r_126 = RMul(0.e0,l_r_93);
        real l_r_127 = RMul(0.e0,l_r_99);
        real l_r_128 = RMul(0.e0,l_r_95);
        real l_r_129 = RMul(0.e0,l_r_101);
        real l_r_130 = RMul(0.e0,l_r_97);
        real l_r_131 = RMul(0.e0,l_r_103);
        real l_op1_e3_l_21_132 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_35,l_r_42,l_r_49),VEC3{4}(VDot<3,4>(v_104,VEC3{4}(l_r_67,l_r_76,l_r_82)),VDot<3,4>(v_104,VEC3{4}(l_r_70,l_r_67,l_r_85)),VDot<3,4>(v_104,VEC3{4}(l_r_73,l_r_79,l_r_67)))));
        real l_prod_133 = RMul(VIndex<3,4,0>(v_5),l_prod_28);
        real l_prod_134 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_5),0.1e1));
        real l_prod_135 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_5)));
        real l_sum_136 = RAdd(l_basisEval_31,RAdd(RMul(-0.1e1,l_prod_135),RAdd(RMul(-0.1e1,l_prod_134),RMul(-0.1e1,l_prod_133))));
        real l_basisEval_137 = RMul(0.1e1,l_prod_133);
        real l_basisEval_138 = RMul(0.1e1,l_prod_134);
        real l_basisEval_139 = RMul(0.1e1,l_prod_135);
        vec3{4} v_140 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_10,l_sum_136),RMul(l_dof_load_15,l_basisEval_137)),RMul(l_dof_load_20,l_basisEval_138)),RMul(l_dof_load_25,l_basisEval_139)),RAdd(RAdd(RAdd(RMul(l_dof_load_11,l_sum_136),RMul(l_dof_load_16,l_basisEval_137)),RMul(l_dof_load_21,l_basisEval_138)),RMul(l_dof_load_26,l_basisEval_139)),RAdd(RAdd(RAdd(RMul(l_dof_load_12,l_sum_136),RMul(l_dof_load_17,l_basisEval_137)),RMul(l_dof_load_22,l_basisEval_138)),RMul(l_dof_load_27,l_basisEval_139))),LOAD_0(p_pos_1));
        vec3{4} v_141 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_111,l_r_106),l_r_107),l_r_108),RMul(0.1e1,l_r_93)),l_r_109),RMul(-0.1e1,l_r_99)),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,l_r_113),l_r_114),l_r_115),RMul(0.1e1,l_r_95)),l_r_116),RMul(-0.1e1,l_r_101)),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,l_r_120),l_r_121),l_r_122),RMul(0.1e1,l_r_97)),l_r_123),RMul(-0.1e1,l_r_103)),l_r_124),l_op1_e3_l_21_132)),v_140),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_111,RMul(-0.1e1,l_r_87)),l_r_107),l_r_108),l_r_126),RMul(0.1e1,l_r_98)),l_r_127),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,RMul(-0.1e1,l_r_89)),l_r_114),l_r_115),l_r_128),RMul(0.1e1,l_r_100)),l_r_129),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,RMul(-0.1e1,l_r_91)),l_r_121),l_r_122),l_r_130),RMul(0.1e1,l_r_102)),l_r_131),l_r_124),l_op1_e3_l_21_132)),v_140),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_105,RMul(0.1e1,l_r_86)),l_r_106),RMul(-0.1e1,l_r_92)),l_r_108),l_r_126),l_r_109),l_r_127),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_112,RMul(0.1e1,l_r_88)),l_r_113),RMul(-0.1e1,l_r_94)),l_r_115),l_r_128),l_r_116),l_r_129),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_119,RMul(0.1e1,l_r_90)),l_r_120),RMul(-0.1e1,l_r_96)),l_r_122),l_r_130),l_r_123),l_r_131),l_r_124),l_op1_e3_l_21_132)),v_140));
        vec3{4} v_142 = VSub<3,4>(v_5,v_141);
        vec3{4} v_143 = v_142;
        if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<3,4>(v_141,v_141))) {
          vec3{4} v_144 = VAdd<3,4>(VEC3{4}(0.1e-7,0.1e-7,0.1e-7),v_143);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-7),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_143)),BAnd(GT<real>(VIndex<3,4,0>(v_144),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_144),-0.e0),GT<real>(VIndex<3,4,2>(v_144),-0.e0))))) {
            tensor[3] _arg_145 = PACK(v_143);
            return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_0,i_cellItter_2,_arg_145,p_pos_1)
          }
        }
        v_5 = v_143;
      }
    }
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_0)
  }
  function femData(MeshPos) fn_2FB (world, globals, femData(MeshPos) p_x_146,&tensor[3] p_dPos_147) {
    if (BNot(ExtractFemItem<bool,Valid(MeshPos)>(p_x_146))) {
      return p_x_146
    }
    for i_i_148 = 0 to globals.timeSteps {
    }
    print("Took stupid way out!\n");
    &tensor[3] l__t_149 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(p_x_146);
    femData(Mesh) l__t_150 = ExtractFem<femData(Mesh),femData(MeshPos)>(p_x_146);
    int l_mulRes_151 = IMul(ExtractFemItem<int,CellIndex(MeshPos)>(p_x_146),4);
    int t_152 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_150,l_mulRes_151);
    int l_mulRes_153 = IMul(3,t_152);
    int t_154 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_150,IAdd(l_mulRes_151,1));
    int l_mulRes_155 = IMul(3,t_154);
    int t_156 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_150,IAdd(l_mulRes_151,2));
    int l_mulRes_157 = IMul(3,t_156);
    int t_158 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_150,IAdd(l_mulRes_151,3));
    int l_mulRes_159 = IMul(3,t_158);
    real l_prod_160 = RMul(0.1e1,0.1e1);
    real l_prod_161 = RMul(TensorIndex<&tensor[3],[0]>(l__t_149),l_prod_160);
    real l_prod_162 = RMul(0.1e1,RMul(TensorIndex<&tensor[3],[1]>(l__t_149),0.1e1));
    real l_prod_163 = RMul(0.1e1,RMul(0.1e1,TensorIndex<&tensor[3],[2]>(l__t_149)));
    real l_sum_164 = RAdd(RMul(0.1e1,RMul(0.1e1,l_prod_160)),RAdd(RMul(-0.1e1,l_prod_163),RAdd(RMul(-0.1e1,l_prod_162),RMul(-0.1e1,l_prod_161))));
    real l_basisEval_165 = RMul(0.1e1,l_prod_161);
    real l_basisEval_166 = RMul(0.1e1,l_prod_162);
    real l_basisEval_167 = RMul(0.1e1,l_prod_163);
    real t_168 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,l_mulRes_153);
    real t_169 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,l_mulRes_155);
    real t_170 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,l_mulRes_157);
    real t_171 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,l_mulRes_159);
    real t_172 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(1,l_mulRes_153));
    real t_173 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(1,l_mulRes_155));
    real t_174 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(1,l_mulRes_157));
    real t_175 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(1,l_mulRes_159));
    real t_176 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(2,l_mulRes_153));
    real t_177 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(2,l_mulRes_155));
    real t_178 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(2,l_mulRes_157));
    real t_179 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_150,IAdd(2,l_mulRes_159));
    tensor[3] _arg_180 = PACK(VAdd<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(t_168,l_sum_164),RMul(t_169,l_basisEval_165)),RMul(t_170,l_basisEval_166)),RMul(t_171,l_basisEval_167)),RAdd(RAdd(RAdd(RMul(t_172,l_sum_164),RMul(t_173,l_basisEval_165)),RMul(t_174,l_basisEval_166)),RMul(t_175,l_basisEval_167)),RAdd(RAdd(RAdd(RMul(t_176,l_sum_164),RMul(t_177,l_basisEval_165)),RMul(t_178,l_basisEval_166)),RMul(t_179,l_basisEval_167))),LOAD_0(p_dPos_147)));
    femData(MeshPos) l_cmp_181 = findPos$5CDA(globals.meshData,_arg_180);
    return l_cmp_181
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_182;
    l__t_182 = <femData(MeshCell)[]>{};
    for i__t_183 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.meshData),1) {
      l__t_182 = Append<femData(MeshCell),femData(MeshCell)>(l__t_182,LoadFem<femData(MeshCell)>(globals.meshData,i__t_183));
    }
    femData(FemFunc) l_data_184 = LoadFem<femData(FemFunc)>(globals.0data040B_intermedateGlobal,LoadFem<femData(Space)>(globals.0space0409_intermedateGlobal,globals.meshData));
    globals.data = l_data_184;
    femData(Space) l__t_185 = ExtractFem<femData(Space),femData(FemFunc)>(l_data_184);
    globals._t = ExtractFem<femData(Mesh),femData(Space)>(l__t_185);
    globals._tX = l__t_185;
  }
//***** STRAND *****
strand gg (&tensor[3] p_startPos_186) {
  varying output tensor[3][] stream;
  varying output tensor[3][] newStream;
  varying int step;
  varying femData(MeshPos) cPos;
  varying tensor[3] altCPos;
  tensor[3] startPos;
  initialize (globals) {
    tensor[3][0] t_188 = <tensor[3][0]>{};
    tensor[3][] l__t_187 = MkDynamic<tensor[3],0>(t_188);
    tensor[3][0] t_190 = <tensor[3][0]>{};
    tensor[3][] l__t_189 = MkDynamic<tensor[3],0>(t_190);
    femData(MeshPos) l_cPos_191 = findPos$5CDA(globals.meshData,p_startPos_186);
    self.stream = l__t_187;
    self.newStream = l__t_189;
    self.step = 0;
    self.cPos = l_cPos_191;
    self.altCPos = TensorCopy<[3]>(p_startPos_186);
    self.startPos = TensorCopy<[3]>(p_startPos_186);
  }
  update (world, globals) {
    bool l__t_763;
    vec3{4} v_661;
    bool l__t_534;
    bool l__t_346;
    vec3{4} v_332;
    bool l__t_197;
    if (EQ<int>(self.step,0)) {
      if (ExtractFemItem<bool,Valid(MeshPos)>(self.cPos)) {
        &tensor[3] l_rp_192 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(self.cPos);
        if (LTE<real>(TensorIndex<&tensor[3],[0]>(l_rp_192),0.1e-5)) {
          stabilize;
        }
        if (LTE<real>(TensorIndex<&tensor[3],[1]>(l_rp_192),0.1e-5)) {
          stabilize;
        }
        if (LTE<real>(TensorIndex<&tensor[3],[2]>(l_rp_192),0.1e-5)) {
          stabilize;
        }
        if (LTE<real>(0.9999999e0,VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),LOAD_0(l_rp_192)))) {
          stabilize;
        }
      }
    }
    bool l__t_193 = ExtractFemItem<bool,Valid(MeshPos)>(self.cPos);
    femData(MeshPos) l__t_194 = findPos$5CDA(globals.meshData,TensorRef<[3]>(self.altCPos));
    bool l__t_195 = ExtractFemItem<bool,Valid(MeshPos)>(l__t_194);
    if (NEQ<bool>(l__t_193,l__t_195)) {
      print("ERG:Warning of validity startPos:",TensorRef<[3]>(self.startPos),"\n");
    }
    bool l__t_196 = BNot(l__t_193);
    if (l__t_196) {
      l__t_197 = true;
    } else {
      bool l__t_198;
      if (BNot(l__t_195)) {
        l__t_198 = true;
      } else {
        l__t_198 = EQ<int>(self.step,globals.stepMax);
      }
      l__t_197 = l__t_198;
    }
    if (l__t_197) {
      print("Went off the mesh\?",l__t_196," and ",TensorRef<[3]>(self.altCPos)," and ",BNot(l__t_195),"\n");
      print("Pos is:",TensorRef<[3]>(ExtractFemItem<tensor[3],RefPos(MeshPos)>(self.cPos)),"\n");
      print(self.stream,"\n",self.newStream,"\n");
      stabilize;
    }
    &tensor[3] l__t_199 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(self.cPos);
    int l__t_200 = ExtractFemItem<int,CellIndex(MeshPos)>(self.cPos);
    femData(Mesh) l__t_201 = ExtractFem<femData(Mesh),femData(MeshPos)>(self.cPos);
    int l_mulRes_202 = IMul(l__t_200,4);
    int t_203 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_201,l_mulRes_202);
    int l_mulRes_204 = IMul(3,t_203);
    int t_205 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_201,IAdd(l_mulRes_202,1));
    int l_mulRes_206 = IMul(3,t_205);
    int t_207 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_201,IAdd(l_mulRes_202,2));
    int l_mulRes_208 = IMul(3,t_207);
    int t_209 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_201,IAdd(l_mulRes_202,3));
    int l_mulRes_210 = IMul(3,t_209);
    real l_varAcc_211 = TensorIndex<&tensor[3],[0]>(l__t_199);
    real l_varAcc_212 = TensorIndex<&tensor[3],[1]>(l__t_199);
    real l_varAcc_213 = TensorIndex<&tensor[3],[2]>(l__t_199);
    real l_prod_214 = RMul(0.1e1,0.1e1);
    real l_prod_215 = RMul(l_varAcc_211,l_prod_214);
    real l_prod_216 = RMul(l_varAcc_212,0.1e1);
    real l_prod_217 = RMul(0.1e1,l_prod_216);
    real l_prod_218 = RMul(0.1e1,l_varAcc_213);
    real l_prod_219 = RMul(0.1e1,l_prod_218);
    real l_mult_220 = RMul(0.1e1,RMul(0.1e1,l_prod_214));
    real l_mult_221 = RMul(-0.1e1,l_prod_219);
    real l_mult_222 = RMul(-0.1e1,l_prod_217);
    real l_mult_223 = RMul(-0.1e1,l_prod_215);
    real l_sum_224 = RAdd(l_mult_220,RAdd(l_mult_221,RAdd(l_mult_222,l_mult_223)));
    real l_basisEval_225 = RMul(0.1e1,l_prod_215);
    real l_basisEval_226 = RMul(0.1e1,l_prod_217);
    real l_basisEval_227 = RMul(0.1e1,l_prod_219);
    real t_228 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,l_mulRes_204);
    real t_229 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,l_mulRes_206);
    real t_230 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,l_mulRes_208);
    real t_231 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,l_mulRes_210);
    real t_232 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(1,l_mulRes_204));
    real t_233 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(1,l_mulRes_206));
    real t_234 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(1,l_mulRes_208));
    real t_235 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(1,l_mulRes_210));
    real t_236 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(2,l_mulRes_204));
    real t_237 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(2,l_mulRes_206));
    real t_238 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(2,l_mulRes_208));
    real t_239 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_201,IAdd(2,l_mulRes_210));
    vec3{4} v_240 = VEC3{4}(RAdd(RAdd(RAdd(RMul(t_228,l_sum_224),RMul(t_229,l_basisEval_225)),RMul(t_230,l_basisEval_226)),RMul(t_231,l_basisEval_227)),RAdd(RAdd(RAdd(RMul(t_232,l_sum_224),RMul(t_233,l_basisEval_225)),RMul(t_234,l_basisEval_226)),RMul(t_235,l_basisEval_227)),RAdd(RAdd(RAdd(RMul(t_236,l_sum_224),RMul(t_237,l_basisEval_225)),RMul(t_238,l_basisEval_226)),RMul(t_239,l_basisEval_227)));
    tensor[3] _arg_241 = PACK(v_240);
    tensor[3][1] t_243 = <tensor[3][1]>{_arg_241};
    tensor[3][] l__t_242 = MkDynamic<tensor[3],1>(t_243);
    tensor[3][] l_stream_244 = Concat<tensor[3]>(self.stream,l__t_242);
    tensor[3][1] t_246 = <tensor[3][1]>{TensorCopy<[3]>(TensorRef<[3]>(self.altCPos))};
    tensor[3][] l__t_245 = MkDynamic<tensor[3],1>(t_246);
    tensor[3][] l_newStream_247 = Concat<tensor[3]>(self.newStream,l__t_245);
    vec3{4} v_248 = VSub<3,4>(v_240,LOAD_0(TensorRef<[3]>(self.altCPos)));
    vec3{4} v_249 = v_240;
    if (GT<real>(Sqrt(VDot<3,4>(v_248,v_248)),0.1e-5)) {
      print("ERG:Error in tracing 1: At step:",self.step," with particle:",TensorRef<[3]>(self.startPos),"\n");
      tensor[3] _arg_250 = PACK(v_249);
      print("Poses are:",TensorRef<[3]>(_arg_250),TensorRef<[3]>(self.altCPos),"\n");
      print("Cells are:",LoadFem<femData(MeshCell)>(l__t_201,l__t_200)," and ",LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l__t_194),ExtractFemItem<int,CellIndex(MeshPos)>(l__t_194)),"\n");
      print("Ref poses are:",l__t_199," and ",TensorRef<[3]>(ExtractFemItem<tensor[3],RefPos(MeshPos)>(l__t_194)),"\n");
      self.stream = l_stream_244;
      self.newStream = l_newStream_247;
      stabilize;
    } else {
      print("fine in cell 1:",LoadFem<femData(MeshCell)>(l__t_201,l__t_200),"\n");
    }
    if (l__t_193) {
      femData(FuncCell) l__t_251 = LoadFem<femData(FuncCell)>(globals.data,ExtractFemItem<int,CellIndex(MeshCell)>(LoadFem<femData(MeshCell)>(l__t_201,l__t_200)));
      femData(FemFunc) l__t_252 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_251);
      femData(Space) l__t_253 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_252);
      int l_mulRes_254 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(l__t_251),10);
      int t_255 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,l_mulRes_254);
      int l_mulRes_256 = IMul(3,t_255);
      int t_257 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,1));
      int l_mulRes_258 = IMul(3,t_257);
      int t_259 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,2));
      int l_mulRes_260 = IMul(3,t_259);
      int t_261 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,3));
      int l_mulRes_262 = IMul(3,t_261);
      int t_263 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,4));
      int l_mulRes_264 = IMul(3,t_263);
      int t_265 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,5));
      int l_mulRes_266 = IMul(3,t_265);
      int t_267 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,6));
      int l_mulRes_268 = IMul(3,t_267);
      int t_269 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,7));
      int l_mulRes_270 = IMul(3,t_269);
      int t_271 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,8));
      int l_mulRes_272 = IMul(3,t_271);
      int t_273 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_253,IAdd(l_mulRes_254,9));
      int l_mulRes_274 = IMul(3,t_273);
      real l_prod_275 = RMul(RMul(l_varAcc_211,l_varAcc_211),l_prod_214);
      real l_prod_276 = RMul(l_varAcc_211,l_prod_216);
      real l_prod_277 = RMul(l_varAcc_211,l_prod_218);
      real l_prod_278 = RMul(0.1e1,RMul(RMul(l_varAcc_212,l_varAcc_212),0.1e1));
      real l_prod_279 = RMul(0.1e1,RMul(l_varAcc_212,l_varAcc_213));
      real l_prod_280 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_213,l_varAcc_213)));
      real l_mult_281 = RMul(0.2e1,l_prod_280);
      real l_mult_282 = RMul(0.4e1,l_prod_279);
      real l_mult_283 = RMul(0.2e1,l_prod_278);
      real l_mult_284 = RMul(0.4e1,l_prod_277);
      real l_mult_285 = RMul(0.4e1,l_prod_276);
      real l_mult_286 = RMul(0.2e1,l_prod_275);
      real l_sum_287 = RAdd(l_mult_220,RAdd(RMul(-0.3e1,l_prod_219),RAdd(l_mult_281,RAdd(RMul(-0.3e1,l_prod_217),RAdd(l_mult_282,RAdd(l_mult_283,RAdd(RMul(-0.3e1,l_prod_215),RAdd(l_mult_284,RAdd(l_mult_285,l_mult_286)))))))));
      real l_sum_288 = RAdd(l_mult_223,l_mult_286);
      real l_sum_289 = RAdd(l_mult_222,l_mult_283);
      real l_sum_290 = RAdd(l_mult_221,l_mult_281);
      real l_mult_291 = RMul(-0.4e1,l_prod_279);
      real l_mult_292 = RMul(-0.4e1,l_prod_277);
      real l_sum_293 = RAdd(RMul(0.4e1,l_prod_219),RAdd(RMul(-0.4e1,l_prod_280),RAdd(l_mult_291,l_mult_292)));
      real l_mult_294 = RMul(-0.4e1,l_prod_276);
      real l_sum_295 = RAdd(RMul(0.4e1,l_prod_217),RAdd(l_mult_291,RAdd(RMul(-0.4e1,l_prod_278),l_mult_294)));
      real l_sum_296 = RAdd(RMul(0.4e1,l_prod_215),RAdd(l_mult_292,RAdd(l_mult_294,RMul(-0.4e1,l_prod_275))));
      real t_297 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_256);
      real t_298 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_258);
      real t_299 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_260);
      real t_300 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_262);
      real t_301 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_264);
      real t_302 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_266);
      real t_303 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_268);
      real t_304 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_270);
      real t_305 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_272);
      real t_306 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,l_mulRes_274);
      real l_r_307 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_297,l_sum_287),RMul(t_298,l_sum_288)),RMul(t_299,l_sum_289)),RMul(t_300,l_sum_290)),RMul(t_301,l_mult_282)),RMul(t_302,l_mult_284)),RMul(t_303,l_mult_285)),RMul(t_304,l_sum_293)),RMul(t_305,l_sum_295)),RMul(t_306,l_sum_296));
      real t_308 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_256));
      real t_309 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_258));
      real t_310 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_260));
      real t_311 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_262));
      real t_312 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_264));
      real t_313 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_266));
      real t_314 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_268));
      real t_315 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_270));
      real t_316 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_272));
      real t_317 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(1,l_mulRes_274));
      real l_r_318 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_308,l_sum_287),RMul(t_309,l_sum_288)),RMul(t_310,l_sum_289)),RMul(t_311,l_sum_290)),RMul(t_312,l_mult_282)),RMul(t_313,l_mult_284)),RMul(t_314,l_mult_285)),RMul(t_315,l_sum_293)),RMul(t_316,l_sum_295)),RMul(t_317,l_sum_296));
      real t_319 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_256));
      real t_320 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_258));
      real t_321 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_260));
      real t_322 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_262));
      real t_323 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_264));
      real t_324 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_266));
      real t_325 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_268));
      real t_326 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_270));
      real t_327 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_272));
      real t_328 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_252,IAdd(2,l_mulRes_274));
      real l_r_329 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_319,l_sum_287),RMul(t_320,l_sum_288)),RMul(t_321,l_sum_289)),RMul(t_322,l_sum_290)),RMul(t_323,l_mult_282)),RMul(t_324,l_mult_284)),RMul(t_325,l_mult_285)),RMul(t_326,l_sum_293)),RMul(t_327,l_sum_295)),RMul(t_328,l_sum_296));
      vec3{4} v_330 = VEC3{4}(l_r_307,l_r_318,l_r_329);
      real l_r_331 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_330,v_330)));
      v_332 = VEC3{4}(RMul(l_r_331,l_r_307),RMul(l_r_331,l_r_318),RMul(l_r_331,l_r_329));
    } else {
      print("QWE:Eval at 0\n");
      v_332 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    real l_r_333 = RMul(0.5e0,globals.stepSize);
    vec3{4} v_334 = VEC3{4}(RMul(l_r_333,VIndex<3,4,0>(v_332)),RMul(l_r_333,VIndex<3,4,1>(v_332)),RMul(l_r_333,VIndex<3,4,2>(v_332)));
    vec3{4} v_335 = VSub<3,4>(LOAD_0(TensorRef<[3]>(self.altCPos)),LOAD_0(TensorRef<[3]>(globals.center)));
    &tensor[3] l_projParam_336 = ProjectLast<&tensor[3,3],[0]>(TensorRef<[3,3]>(globals.M));
    real l_vdot_337 = VDot<3,4>(LOAD_0(l_projParam_336),v_335);
    &tensor[3] l_projParam_338 = ProjectLast<&tensor[3,3],[1]>(TensorRef<[3,3]>(globals.M));
    real l_vdot_339 = VDot<3,4>(LOAD_0(l_projParam_338),v_335);
    &tensor[3] l_projParam_340 = ProjectLast<&tensor[3,3],[2]>(TensorRef<[3,3]>(globals.M));
    real l_vdot_341 = VDot<3,4>(LOAD_0(l_projParam_340),v_335);
    vec3{4} v_342 = VEC3{4}(l_vdot_337,l_vdot_339,l_vdot_341);
    real l_r_343 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_342,v_342)));
    vec3{4} v_344 = VSub<3,4>(v_334,VEC3{4}(RMul(l_r_343,RMul(l_r_333,l_vdot_337)),RMul(l_r_343,RMul(l_r_333,l_vdot_339)),RMul(l_r_343,RMul(l_r_333,l_vdot_341))));
    vec3{4} v_345 = v_334;
    if (GT<real>(Sqrt(VDot<3,4>(v_344,v_344)),0.1e-5)) {
      l__t_346 = true;
    } else {
      femData(MeshPos) l_callFindPos_347 = findPos$5CDA(globals._t,TensorRef<[3]>(self.altCPos));
      &tensor[3] l_refPos_348 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_347);
      int l_mulRes_349 = IMul(ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_347),10);
      int t_350 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_349);
      int l_mulRes_351 = IMul(3,t_350);
      int t_352 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,1));
      int l_mulRes_353 = IMul(3,t_352);
      int t_354 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,2));
      int l_mulRes_355 = IMul(3,t_354);
      int t_356 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,3));
      int l_mulRes_357 = IMul(3,t_356);
      int t_358 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,4));
      int l_mulRes_359 = IMul(3,t_358);
      int t_360 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,5));
      int l_mulRes_361 = IMul(3,t_360);
      int t_362 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,6));
      int l_mulRes_363 = IMul(3,t_362);
      int t_364 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,7));
      int l_mulRes_365 = IMul(3,t_364);
      int t_366 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,8));
      int l_mulRes_367 = IMul(3,t_366);
      int t_368 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_349,9));
      int l_mulRes_369 = IMul(3,t_368);
      real l_varAcc_370 = TensorIndex<&tensor[3],[0]>(l_refPos_348);
      real l_varAcc_371 = TensorIndex<&tensor[3],[1]>(l_refPos_348);
      real l_varAcc_372 = TensorIndex<&tensor[3],[2]>(l_refPos_348);
      real l_prod_373 = RMul(RMul(l_varAcc_370,l_varAcc_370),l_prod_214);
      real l_prod_374 = RMul(l_varAcc_371,0.1e1);
      real l_prod_375 = RMul(l_varAcc_370,l_prod_374);
      real l_prod_376 = RMul(0.1e1,l_varAcc_372);
      real l_prod_377 = RMul(l_varAcc_370,l_prod_376);
      real l_prod_378 = RMul(l_varAcc_370,l_prod_214);
      real l_prod_379 = RMul(0.1e1,RMul(RMul(l_varAcc_371,l_varAcc_371),0.1e1));
      real l_prod_380 = RMul(0.1e1,RMul(l_varAcc_371,l_varAcc_372));
      real l_prod_381 = RMul(0.1e1,l_prod_374);
      real l_prod_382 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_372,l_varAcc_372)));
      real l_prod_383 = RMul(0.1e1,l_prod_376);
      real l_mult_384 = RMul(0.2e1,l_prod_382);
      real l_mult_385 = RMul(0.4e1,l_prod_380);
      real l_mult_386 = RMul(0.2e1,l_prod_379);
      real l_mult_387 = RMul(0.4e1,l_prod_377);
      real l_mult_388 = RMul(0.4e1,l_prod_375);
      real l_mult_389 = RMul(0.2e1,l_prod_373);
      real l_sum_390 = RAdd(l_mult_220,RAdd(RMul(-0.3e1,l_prod_383),RAdd(l_mult_384,RAdd(RMul(-0.3e1,l_prod_381),RAdd(l_mult_385,RAdd(l_mult_386,RAdd(RMul(-0.3e1,l_prod_378),RAdd(l_mult_387,RAdd(l_mult_388,l_mult_389)))))))));
      real l_sum_391 = RAdd(RMul(-0.1e1,l_prod_378),l_mult_389);
      real l_sum_392 = RAdd(RMul(-0.1e1,l_prod_381),l_mult_386);
      real l_sum_393 = RAdd(RMul(-0.1e1,l_prod_383),l_mult_384);
      real l_mult_394 = RMul(-0.4e1,l_prod_380);
      real l_mult_395 = RMul(-0.4e1,l_prod_377);
      real l_sum_396 = RAdd(RMul(0.4e1,l_prod_383),RAdd(RMul(-0.4e1,l_prod_382),RAdd(l_mult_394,l_mult_395)));
      real l_mult_397 = RMul(-0.4e1,l_prod_375);
      real l_sum_398 = RAdd(RMul(0.4e1,l_prod_381),RAdd(l_mult_394,RAdd(RMul(-0.4e1,l_prod_379),l_mult_397)));
      real l_sum_399 = RAdd(RMul(0.4e1,l_prod_378),RAdd(l_mult_395,RAdd(l_mult_397,RMul(-0.4e1,l_prod_373))));
      real t_400 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_351);
      real t_401 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_353);
      real t_402 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_355);
      real t_403 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_357);
      real t_404 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_359);
      real t_405 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_361);
      real t_406 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_363);
      real t_407 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_365);
      real t_408 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_367);
      real t_409 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_369);
      real l_r_410 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_400,l_sum_390),RMul(t_401,l_sum_391)),RMul(t_402,l_sum_392)),RMul(t_403,l_sum_393)),RMul(t_404,l_mult_385)),RMul(t_405,l_mult_387)),RMul(t_406,l_mult_388)),RMul(t_407,l_sum_396)),RMul(t_408,l_sum_398)),RMul(t_409,l_sum_399));
      real t_411 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_351));
      real t_412 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_353));
      real t_413 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_355));
      real t_414 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_357));
      real t_415 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_359));
      real t_416 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_361));
      real t_417 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_363));
      real t_418 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_365));
      real t_419 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_367));
      real t_420 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_369));
      real l_r_421 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_411,l_sum_390),RMul(t_412,l_sum_391)),RMul(t_413,l_sum_392)),RMul(t_414,l_sum_393)),RMul(t_415,l_mult_385)),RMul(t_416,l_mult_387)),RMul(t_417,l_mult_388)),RMul(t_418,l_sum_396)),RMul(t_419,l_sum_398)),RMul(t_420,l_sum_399));
      real t_422 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_351));
      real t_423 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_353));
      real t_424 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_355));
      real t_425 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_357));
      real t_426 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_359));
      real t_427 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_361));
      real t_428 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_363));
      real t_429 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_365));
      real t_430 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_367));
      real t_431 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_369));
      real l_r_432 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_422,l_sum_390),RMul(t_423,l_sum_391)),RMul(t_424,l_sum_392)),RMul(t_425,l_sum_393)),RMul(t_426,l_mult_385)),RMul(t_427,l_mult_387)),RMul(t_428,l_mult_388)),RMul(t_429,l_sum_396)),RMul(t_430,l_sum_398)),RMul(t_431,l_sum_399));
      vec3{4} v_433 = VEC3{4}(l_r_410,l_r_421,l_r_432);
      real l_r_434 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_433,v_433)));
      vec3{4} v_435 = VSub<3,4>(v_345,VEC3{4}(RMul(l_r_434,RMul(l_r_333,l_r_410)),RMul(l_r_434,RMul(l_r_333,l_r_421)),RMul(l_r_434,RMul(l_r_333,l_r_432))));
      l__t_346 = GT<real>(Sqrt(VDot<3,4>(v_435,v_435)),0.1e-5);
    }
    if (l__t_346) {
      print("ERG:Error in evaluation on pos 1:",TensorRef<[3]>(self.startPos),"\n");
    }
    tensor[3] _arg_436 = PACK(v_345);
    femData(MeshPos) l_intermed_437 = fn_2FB$5CFF(self.cPos,_arg_436);
    femData(MeshPos) l_callFindPos_438 = findPos$5CDA(globals._t,TensorRef<[3]>(self.altCPos));
    &tensor[3] l_refPos_439 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_438);
    int l_mulRes_440 = IMul(ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_438),10);
    int t_441 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_440);
    int l_mulRes_442 = IMul(3,t_441);
    int t_443 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,1));
    int l_mulRes_444 = IMul(3,t_443);
    int t_445 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,2));
    int l_mulRes_446 = IMul(3,t_445);
    int t_447 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,3));
    int l_mulRes_448 = IMul(3,t_447);
    int t_449 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,4));
    int l_mulRes_450 = IMul(3,t_449);
    int t_451 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,5));
    int l_mulRes_452 = IMul(3,t_451);
    int t_453 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,6));
    int l_mulRes_454 = IMul(3,t_453);
    int t_455 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,7));
    int l_mulRes_456 = IMul(3,t_455);
    int t_457 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,8));
    int l_mulRes_458 = IMul(3,t_457);
    int t_459 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_440,9));
    int l_mulRes_460 = IMul(3,t_459);
    real l_varAcc_461 = TensorIndex<&tensor[3],[0]>(l_refPos_439);
    real l_varAcc_462 = TensorIndex<&tensor[3],[1]>(l_refPos_439);
    real l_varAcc_463 = TensorIndex<&tensor[3],[2]>(l_refPos_439);
    real l_prod_464 = RMul(RMul(l_varAcc_461,l_varAcc_461),l_prod_214);
    real l_prod_465 = RMul(l_varAcc_462,0.1e1);
    real l_prod_466 = RMul(l_varAcc_461,l_prod_465);
    real l_prod_467 = RMul(0.1e1,l_varAcc_463);
    real l_prod_468 = RMul(l_varAcc_461,l_prod_467);
    real l_prod_469 = RMul(l_varAcc_461,l_prod_214);
    real l_prod_470 = RMul(0.1e1,RMul(RMul(l_varAcc_462,l_varAcc_462),0.1e1));
    real l_prod_471 = RMul(0.1e1,RMul(l_varAcc_462,l_varAcc_463));
    real l_prod_472 = RMul(0.1e1,l_prod_465);
    real l_prod_473 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_463,l_varAcc_463)));
    real l_prod_474 = RMul(0.1e1,l_prod_467);
    real l_mult_475 = RMul(0.2e1,l_prod_473);
    real l_mult_476 = RMul(0.4e1,l_prod_471);
    real l_mult_477 = RMul(0.2e1,l_prod_470);
    real l_mult_478 = RMul(0.4e1,l_prod_468);
    real l_mult_479 = RMul(0.4e1,l_prod_466);
    real l_mult_480 = RMul(0.2e1,l_prod_464);
    real l_sum_481 = RAdd(l_mult_220,RAdd(RMul(-0.3e1,l_prod_474),RAdd(l_mult_475,RAdd(RMul(-0.3e1,l_prod_472),RAdd(l_mult_476,RAdd(l_mult_477,RAdd(RMul(-0.3e1,l_prod_469),RAdd(l_mult_478,RAdd(l_mult_479,l_mult_480)))))))));
    real l_sum_482 = RAdd(RMul(-0.1e1,l_prod_469),l_mult_480);
    real l_sum_483 = RAdd(RMul(-0.1e1,l_prod_472),l_mult_477);
    real l_sum_484 = RAdd(RMul(-0.1e1,l_prod_474),l_mult_475);
    real l_mult_485 = RMul(-0.4e1,l_prod_471);
    real l_mult_486 = RMul(-0.4e1,l_prod_468);
    real l_sum_487 = RAdd(RMul(0.4e1,l_prod_474),RAdd(RMul(-0.4e1,l_prod_473),RAdd(l_mult_485,l_mult_486)));
    real l_mult_488 = RMul(-0.4e1,l_prod_466);
    real l_sum_489 = RAdd(RMul(0.4e1,l_prod_472),RAdd(l_mult_485,RAdd(RMul(-0.4e1,l_prod_470),l_mult_488)));
    real l_sum_490 = RAdd(RMul(0.4e1,l_prod_469),RAdd(l_mult_486,RAdd(l_mult_488,RMul(-0.4e1,l_prod_464))));
    real t_491 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_442);
    real t_492 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_444);
    real t_493 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_446);
    real t_494 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_448);
    real t_495 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_450);
    real t_496 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_452);
    real t_497 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_454);
    real t_498 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_456);
    real t_499 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_458);
    real t_500 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_460);
    real l_r_501 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_491,l_sum_481),RMul(t_492,l_sum_482)),RMul(t_493,l_sum_483)),RMul(t_494,l_sum_484)),RMul(t_495,l_mult_476)),RMul(t_496,l_mult_478)),RMul(t_497,l_mult_479)),RMul(t_498,l_sum_487)),RMul(t_499,l_sum_489)),RMul(t_500,l_sum_490));
    real t_502 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_442));
    real t_503 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_444));
    real t_504 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_446));
    real t_505 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_448));
    real t_506 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_450));
    real t_507 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_452));
    real t_508 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_454));
    real t_509 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_456));
    real t_510 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_458));
    real t_511 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_460));
    real l_r_512 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_502,l_sum_481),RMul(t_503,l_sum_482)),RMul(t_504,l_sum_483)),RMul(t_505,l_sum_484)),RMul(t_506,l_mult_476)),RMul(t_507,l_mult_478)),RMul(t_508,l_mult_479)),RMul(t_509,l_sum_487)),RMul(t_510,l_sum_489)),RMul(t_511,l_sum_490));
    real t_513 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_442));
    real t_514 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_444));
    real t_515 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_446));
    real t_516 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_448));
    real t_517 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_450));
    real t_518 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_452));
    real t_519 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_454));
    real t_520 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_456));
    real t_521 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_458));
    real t_522 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_460));
    real l_r_523 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_513,l_sum_481),RMul(t_514,l_sum_482)),RMul(t_515,l_sum_483)),RMul(t_516,l_sum_484)),RMul(t_517,l_mult_476)),RMul(t_518,l_mult_478)),RMul(t_519,l_mult_479)),RMul(t_520,l_sum_487)),RMul(t_521,l_sum_489)),RMul(t_522,l_sum_490));
    vec3{4} v_524 = VEC3{4}(l_r_501,l_r_512,l_r_523);
    real l_r_525 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_524,v_524)));
    vec3{4} v_526 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.altCPos)),VEC3{4}(RMul(l_r_525,RMul(l_r_333,l_r_501)),RMul(l_r_525,RMul(l_r_333,l_r_512)),RMul(l_r_525,RMul(l_r_333,l_r_523))));
    bool l__t_527 = ExtractFemItem<bool,Valid(MeshPos)>(l_intermed_437);
    tensor[3] _arg_528 = PACK(v_526);
    femData(MeshPos) l__t_529 = findPos$5CDA(globals.meshData,_arg_528);
    bool l__t_530 = ExtractFemItem<bool,Valid(MeshPos)>(l__t_529);
    vec3{4} v_531 = v_526;
    if (NEQ<bool>(l__t_527,l__t_530)) {
      print("ERG:Warning of validity intermed",TensorRef<[3]>(self.startPos),"\n");
      tensor[3] _arg_532 = PACK(v_531);
      print("Real location:",TensorRef<[3]>(_arg_532),"\n");
      print("Cell change: ",LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l__t_194),ExtractFemItem<int,CellIndex(MeshPos)>(l__t_194))," to ",LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l__t_529),ExtractFemItem<int,CellIndex(MeshPos)>(l__t_529)),"\n");
    }
    bool l__t_533 = BNot(l__t_527);
    if (l__t_533) {
      l__t_534 = true;
    } else {
      l__t_534 = BNot(l__t_530);
    }
    if (l__t_534) {
      tensor[3] _arg_535 = PACK(v_531);
      print("Went off the mesh\?",l__t_533," and ",TensorRef<[3]>(_arg_535)," and ",BNot(l__t_530),"\n");
      self.stream = l_stream_244;
      self.newStream = l_newStream_247;
      stabilize;
    }
    &tensor[3] l__t_536 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(l_intermed_437);
    int l__t_537 = ExtractFemItem<int,CellIndex(MeshPos)>(l_intermed_437);
    femData(Mesh) l__t_538 = ExtractFem<femData(Mesh),femData(MeshPos)>(l_intermed_437);
    int l_mulRes_539 = IMul(l__t_537,4);
    int t_540 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_538,l_mulRes_539);
    int l_mulRes_541 = IMul(3,t_540);
    int t_542 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_538,IAdd(l_mulRes_539,1));
    int l_mulRes_543 = IMul(3,t_542);
    int t_544 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_538,IAdd(l_mulRes_539,2));
    int l_mulRes_545 = IMul(3,t_544);
    int t_546 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_538,IAdd(l_mulRes_539,3));
    int l_mulRes_547 = IMul(3,t_546);
    real l_varAcc_548 = TensorIndex<&tensor[3],[0]>(l__t_536);
    real l_varAcc_549 = TensorIndex<&tensor[3],[1]>(l__t_536);
    real l_varAcc_550 = TensorIndex<&tensor[3],[2]>(l__t_536);
    real l_prod_551 = RMul(l_varAcc_548,l_prod_214);
    real l_prod_552 = RMul(l_varAcc_549,0.1e1);
    real l_prod_553 = RMul(0.1e1,l_prod_552);
    real l_prod_554 = RMul(0.1e1,l_varAcc_550);
    real l_prod_555 = RMul(0.1e1,l_prod_554);
    real l_mult_556 = RMul(-0.1e1,l_prod_555);
    real l_mult_557 = RMul(-0.1e1,l_prod_553);
    real l_mult_558 = RMul(-0.1e1,l_prod_551);
    real l_sum_559 = RAdd(l_mult_220,RAdd(l_mult_556,RAdd(l_mult_557,l_mult_558)));
    real l_basisEval_560 = RMul(0.1e1,l_prod_551);
    real l_basisEval_561 = RMul(0.1e1,l_prod_553);
    real l_basisEval_562 = RMul(0.1e1,l_prod_555);
    real t_563 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,l_mulRes_541);
    real t_564 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,l_mulRes_543);
    real t_565 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,l_mulRes_545);
    real t_566 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,l_mulRes_547);
    real t_567 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(1,l_mulRes_541));
    real t_568 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(1,l_mulRes_543));
    real t_569 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(1,l_mulRes_545));
    real t_570 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(1,l_mulRes_547));
    real t_571 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(2,l_mulRes_541));
    real t_572 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(2,l_mulRes_543));
    real t_573 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(2,l_mulRes_545));
    real t_574 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_538,IAdd(2,l_mulRes_547));
    vec3{4} v_575 = VEC3{4}(RAdd(RAdd(RAdd(RMul(t_563,l_sum_559),RMul(t_564,l_basisEval_560)),RMul(t_565,l_basisEval_561)),RMul(t_566,l_basisEval_562)),RAdd(RAdd(RAdd(RMul(t_567,l_sum_559),RMul(t_568,l_basisEval_560)),RMul(t_569,l_basisEval_561)),RMul(t_570,l_basisEval_562)),RAdd(RAdd(RAdd(RMul(t_571,l_sum_559),RMul(t_572,l_basisEval_560)),RMul(t_573,l_basisEval_561)),RMul(t_574,l_basisEval_562)));
    vec3{4} v_576 = VSub<3,4>(v_575,v_531);
    vec3{4} v_577 = v_575;
    if (GT<real>(Sqrt(VDot<3,4>(v_576,v_576)),0.1e-5)) {
      print("ERG:Error in tracing 2: At step:",self.step," with particle:",TensorRef<[3]>(self.startPos),"\n");
      tensor[3] _arg_579 = PACK(v_577);
      tensor[3] _arg_578 = PACK(v_531);
      print("Poses are:",TensorRef<[3]>(_arg_579),TensorRef<[3]>(_arg_578),"\n");
      self.stream = l_stream_244;
      self.newStream = l_newStream_247;
      stabilize;
    } else {
      print("fine in cell 2:",LoadFem<femData(MeshCell)>(l__t_201,l__t_200),"\n");
    }
    if (l__t_527) {
      femData(FuncCell) l__t_580 = LoadFem<femData(FuncCell)>(globals.data,ExtractFemItem<int,CellIndex(MeshCell)>(LoadFem<femData(MeshCell)>(l__t_538,l__t_537)));
      femData(FemFunc) l__t_581 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_580);
      femData(Space) l__t_582 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_581);
      int l_mulRes_583 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(l__t_580),10);
      int t_584 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,l_mulRes_583);
      int l_mulRes_585 = IMul(3,t_584);
      int t_586 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,1));
      int l_mulRes_587 = IMul(3,t_586);
      int t_588 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,2));
      int l_mulRes_589 = IMul(3,t_588);
      int t_590 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,3));
      int l_mulRes_591 = IMul(3,t_590);
      int t_592 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,4));
      int l_mulRes_593 = IMul(3,t_592);
      int t_594 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,5));
      int l_mulRes_595 = IMul(3,t_594);
      int t_596 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,6));
      int l_mulRes_597 = IMul(3,t_596);
      int t_598 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,7));
      int l_mulRes_599 = IMul(3,t_598);
      int t_600 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,8));
      int l_mulRes_601 = IMul(3,t_600);
      int t_602 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_582,IAdd(l_mulRes_583,9));
      int l_mulRes_603 = IMul(3,t_602);
      real l_prod_604 = RMul(RMul(l_varAcc_548,l_varAcc_548),l_prod_214);
      real l_prod_605 = RMul(l_varAcc_548,l_prod_552);
      real l_prod_606 = RMul(l_varAcc_548,l_prod_554);
      real l_prod_607 = RMul(0.1e1,RMul(RMul(l_varAcc_549,l_varAcc_549),0.1e1));
      real l_prod_608 = RMul(0.1e1,RMul(l_varAcc_549,l_varAcc_550));
      real l_prod_609 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_550,l_varAcc_550)));
      real l_mult_610 = RMul(0.2e1,l_prod_609);
      real l_mult_611 = RMul(0.4e1,l_prod_608);
      real l_mult_612 = RMul(0.2e1,l_prod_607);
      real l_mult_613 = RMul(0.4e1,l_prod_606);
      real l_mult_614 = RMul(0.4e1,l_prod_605);
      real l_mult_615 = RMul(0.2e1,l_prod_604);
      real l_sum_616 = RAdd(l_mult_220,RAdd(RMul(-0.3e1,l_prod_555),RAdd(l_mult_610,RAdd(RMul(-0.3e1,l_prod_553),RAdd(l_mult_611,RAdd(l_mult_612,RAdd(RMul(-0.3e1,l_prod_551),RAdd(l_mult_613,RAdd(l_mult_614,l_mult_615)))))))));
      real l_sum_617 = RAdd(l_mult_558,l_mult_615);
      real l_sum_618 = RAdd(l_mult_557,l_mult_612);
      real l_sum_619 = RAdd(l_mult_556,l_mult_610);
      real l_mult_620 = RMul(-0.4e1,l_prod_608);
      real l_mult_621 = RMul(-0.4e1,l_prod_606);
      real l_sum_622 = RAdd(RMul(0.4e1,l_prod_555),RAdd(RMul(-0.4e1,l_prod_609),RAdd(l_mult_620,l_mult_621)));
      real l_mult_623 = RMul(-0.4e1,l_prod_605);
      real l_sum_624 = RAdd(RMul(0.4e1,l_prod_553),RAdd(l_mult_620,RAdd(RMul(-0.4e1,l_prod_607),l_mult_623)));
      real l_sum_625 = RAdd(RMul(0.4e1,l_prod_551),RAdd(l_mult_621,RAdd(l_mult_623,RMul(-0.4e1,l_prod_604))));
      real t_626 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_585);
      real t_627 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_587);
      real t_628 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_589);
      real t_629 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_591);
      real t_630 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_593);
      real t_631 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_595);
      real t_632 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_597);
      real t_633 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_599);
      real t_634 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_601);
      real t_635 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,l_mulRes_603);
      real l_r_636 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_626,l_sum_616),RMul(t_627,l_sum_617)),RMul(t_628,l_sum_618)),RMul(t_629,l_sum_619)),RMul(t_630,l_mult_611)),RMul(t_631,l_mult_613)),RMul(t_632,l_mult_614)),RMul(t_633,l_sum_622)),RMul(t_634,l_sum_624)),RMul(t_635,l_sum_625));
      real t_637 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_585));
      real t_638 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_587));
      real t_639 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_589));
      real t_640 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_591));
      real t_641 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_593));
      real t_642 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_595));
      real t_643 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_597));
      real t_644 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_599));
      real t_645 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_601));
      real t_646 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(1,l_mulRes_603));
      real l_r_647 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_637,l_sum_616),RMul(t_638,l_sum_617)),RMul(t_639,l_sum_618)),RMul(t_640,l_sum_619)),RMul(t_641,l_mult_611)),RMul(t_642,l_mult_613)),RMul(t_643,l_mult_614)),RMul(t_644,l_sum_622)),RMul(t_645,l_sum_624)),RMul(t_646,l_sum_625));
      real t_648 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_585));
      real t_649 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_587));
      real t_650 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_589));
      real t_651 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_591));
      real t_652 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_593));
      real t_653 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_595));
      real t_654 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_597));
      real t_655 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_599));
      real t_656 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_601));
      real t_657 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_581,IAdd(2,l_mulRes_603));
      real l_r_658 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_648,l_sum_616),RMul(t_649,l_sum_617)),RMul(t_650,l_sum_618)),RMul(t_651,l_sum_619)),RMul(t_652,l_mult_611)),RMul(t_653,l_mult_613)),RMul(t_654,l_mult_614)),RMul(t_655,l_sum_622)),RMul(t_656,l_sum_624)),RMul(t_657,l_sum_625));
      vec3{4} v_659 = VEC3{4}(l_r_636,l_r_647,l_r_658);
      real l_r_660 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_659,v_659)));
      v_661 = VEC3{4}(RMul(l_r_660,l_r_636),RMul(l_r_660,l_r_647),RMul(l_r_660,l_r_658));
    } else {
      print("QWE:Eval at 0\n");
      v_661 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    vec3{4} v_662 = VScale<3,4>(globals.stepSize,v_661);
    tensor[3] _arg_663 = PACK(v_662);
    femData(MeshPos) l_cPos_664 = fn_2FB$5CFF(self.cPos,_arg_663);
    tensor[3] _arg_665 = PACK(v_531);
    femData(MeshPos) l_callFindPos_666 = findPos$5CDA(globals._t,_arg_665);
    &tensor[3] l_refPos_667 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_666);
    int l_mulRes_668 = IMul(ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_666),10);
    int t_669 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_668);
    int l_mulRes_670 = IMul(3,t_669);
    int t_671 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,1));
    int l_mulRes_672 = IMul(3,t_671);
    int t_673 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,2));
    int l_mulRes_674 = IMul(3,t_673);
    int t_675 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,3));
    int l_mulRes_676 = IMul(3,t_675);
    int t_677 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,4));
    int l_mulRes_678 = IMul(3,t_677);
    int t_679 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,5));
    int l_mulRes_680 = IMul(3,t_679);
    int t_681 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,6));
    int l_mulRes_682 = IMul(3,t_681);
    int t_683 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,7));
    int l_mulRes_684 = IMul(3,t_683);
    int t_685 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,8));
    int l_mulRes_686 = IMul(3,t_685);
    int t_687 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_668,9));
    int l_mulRes_688 = IMul(3,t_687);
    real l_varAcc_689 = TensorIndex<&tensor[3],[0]>(l_refPos_667);
    real l_varAcc_690 = TensorIndex<&tensor[3],[1]>(l_refPos_667);
    real l_varAcc_691 = TensorIndex<&tensor[3],[2]>(l_refPos_667);
    real l_prod_692 = RMul(RMul(l_varAcc_689,l_varAcc_689),l_prod_214);
    real l_prod_693 = RMul(l_varAcc_690,0.1e1);
    real l_prod_694 = RMul(l_varAcc_689,l_prod_693);
    real l_prod_695 = RMul(0.1e1,l_varAcc_691);
    real l_prod_696 = RMul(l_varAcc_689,l_prod_695);
    real l_prod_697 = RMul(l_varAcc_689,l_prod_214);
    real l_prod_698 = RMul(0.1e1,RMul(RMul(l_varAcc_690,l_varAcc_690),0.1e1));
    real l_prod_699 = RMul(0.1e1,RMul(l_varAcc_690,l_varAcc_691));
    real l_prod_700 = RMul(0.1e1,l_prod_693);
    real l_prod_701 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_691,l_varAcc_691)));
    real l_prod_702 = RMul(0.1e1,l_prod_695);
    real l_mult_703 = RMul(0.2e1,l_prod_701);
    real l_mult_704 = RMul(0.4e1,l_prod_699);
    real l_mult_705 = RMul(0.2e1,l_prod_698);
    real l_mult_706 = RMul(0.4e1,l_prod_696);
    real l_mult_707 = RMul(0.4e1,l_prod_694);
    real l_mult_708 = RMul(0.2e1,l_prod_692);
    real l_sum_709 = RAdd(l_mult_220,RAdd(RMul(-0.3e1,l_prod_702),RAdd(l_mult_703,RAdd(RMul(-0.3e1,l_prod_700),RAdd(l_mult_704,RAdd(l_mult_705,RAdd(RMul(-0.3e1,l_prod_697),RAdd(l_mult_706,RAdd(l_mult_707,l_mult_708)))))))));
    real l_sum_710 = RAdd(RMul(-0.1e1,l_prod_697),l_mult_708);
    real l_sum_711 = RAdd(RMul(-0.1e1,l_prod_700),l_mult_705);
    real l_sum_712 = RAdd(RMul(-0.1e1,l_prod_702),l_mult_703);
    real l_mult_713 = RMul(-0.4e1,l_prod_699);
    real l_mult_714 = RMul(-0.4e1,l_prod_696);
    real l_sum_715 = RAdd(RMul(0.4e1,l_prod_702),RAdd(RMul(-0.4e1,l_prod_701),RAdd(l_mult_713,l_mult_714)));
    real l_mult_716 = RMul(-0.4e1,l_prod_694);
    real l_sum_717 = RAdd(RMul(0.4e1,l_prod_700),RAdd(l_mult_713,RAdd(RMul(-0.4e1,l_prod_698),l_mult_716)));
    real l_sum_718 = RAdd(RMul(0.4e1,l_prod_697),RAdd(l_mult_714,RAdd(l_mult_716,RMul(-0.4e1,l_prod_692))));
    real t_719 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_670);
    real t_720 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_672);
    real t_721 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_674);
    real t_722 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_676);
    real t_723 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_678);
    real t_724 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_680);
    real t_725 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_682);
    real t_726 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_684);
    real t_727 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_686);
    real t_728 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_688);
    real t_729 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_670));
    real t_730 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_672));
    real t_731 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_674));
    real t_732 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_676));
    real t_733 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_678));
    real t_734 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_680));
    real t_735 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_682));
    real t_736 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_684));
    real t_737 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_686));
    real t_738 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_688));
    real t_739 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_670));
    real t_740 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_672));
    real t_741 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_674));
    real t_742 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_676));
    real t_743 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_678));
    real t_744 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_680));
    real t_745 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_682));
    real t_746 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_684));
    real t_747 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_686));
    real t_748 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_688));
    vec3{4} v_749 = VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_719,l_sum_709),RMul(t_720,l_sum_710)),RMul(t_721,l_sum_711)),RMul(t_722,l_sum_712)),RMul(t_723,l_mult_704)),RMul(t_724,l_mult_706)),RMul(t_725,l_mult_707)),RMul(t_726,l_sum_715)),RMul(t_727,l_sum_717)),RMul(t_728,l_sum_718)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_729,l_sum_709),RMul(t_730,l_sum_710)),RMul(t_731,l_sum_711)),RMul(t_732,l_sum_712)),RMul(t_733,l_mult_704)),RMul(t_734,l_mult_706)),RMul(t_735,l_mult_707)),RMul(t_736,l_sum_715)),RMul(t_737,l_sum_717)),RMul(t_738,l_sum_718)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_739,l_sum_709),RMul(t_740,l_sum_710)),RMul(t_741,l_sum_711)),RMul(t_742,l_sum_712)),RMul(t_743,l_mult_704)),RMul(t_744,l_mult_706)),RMul(t_745,l_mult_707)),RMul(t_746,l_sum_715)),RMul(t_747,l_sum_717)),RMul(t_748,l_sum_718)));
    vec3{4} v_750 = VScale<3,4>(globals.stepSize,v_749);
    real l_r_751 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_749,v_749)));
    vec3{4} v_752 = VEC3{4}(RMul(l_r_751,VIndex<3,4,0>(v_750)),RMul(l_r_751,VIndex<3,4,1>(v_750)),RMul(l_r_751,VIndex<3,4,2>(v_750)));
    vec3{4} v_753 = VSub<3,4>(v_531,LOAD_0(TensorRef<[3]>(globals.center)));
    vec3{4} v_754 = VEC3{4}(VDot<3,4>(LOAD_0(l_projParam_336),v_753),VDot<3,4>(LOAD_0(l_projParam_338),v_753),VDot<3,4>(LOAD_0(l_projParam_340),v_753));
    vec3{4} v_755 = VScale<3,4>(globals.stepSize,v_754);
    real l_r_756 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_754,v_754)));
    vec3{4} v_757 = VSub<3,4>(v_662,VEC3{4}(RMul(l_r_756,VIndex<3,4,0>(v_755)),RMul(l_r_756,VIndex<3,4,1>(v_755)),RMul(l_r_756,VIndex<3,4,2>(v_755))));
    real l__t_758 = Sqrt(VDot<3,4>(v_757,v_757));
    vec3{4} v_759 = v_662;
    vec3{4} v_760 = v_752;
    vec3{4} v_761 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.altCPos)),v_752);
    int l_step_762 = IAdd(self.step,1);
    if (GT<real>(l__t_758,0.1e-5)) {
      l__t_763 = true;
    } else {
      vec3{4} v_764 = VSub<3,4>(v_759,v_760);
      l__t_763 = GT<real>(Sqrt(VDot<3,4>(v_764,v_764)),0.1e-4);
    }
    if (l__t_763) {
      print("ERG:Error in evaluation on pos 2:",TensorRef<[3]>(self.startPos),"\n");
      vec3{4} v_765 = VSub<3,4>(v_759,v_760);
      print("The errors are:",l__t_758," and ",Sqrt(VDot<3,4>(v_765,v_765)),"\n");
      print("The cells are:",LoadFem<femData(MeshCell)>(l__t_538,l__t_537)," vs ",LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l__t_529),ExtractFemItem<int,CellIndex(MeshPos)>(l__t_529)),"\n");
    }
    self.stream = l_stream_244;
    self.newStream = l_newStream_247;
    self.step = l_step_762;
    self.cPos = l_cPos_664;
    self.altCPos = PACK(v_761);
    active;
  }
}
//***** CREATE COLLECTION *****
  {
    foreach &tensor[3] i_x_767 in globals.startPoints {
      new gg(i_x_767);
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include evalProg.cxx
/usr/bin/clang++ -shared -o evalProg.so evalProg.o /home/teocollin/gitcode/diderot/lib/diderot-rt-seq-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem  -lspatialindex_c   -lspatialindex 
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.102     2.686
    front end .......................................................................   0.940     1.008
      parser ........................................................................   0.039     0.039
      typechecker ...................................................................   0.028     0.028
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.063     0.063
    High IR optimization ............................................................   0.028     0.086
      High IR value numbering .......................................................   0.035     0.035
      High IR normalization .........................................................   0.023     0.023
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.038     0.038
    Mid IR optimization .............................................................   0.015     0.038
      Mid IR contraction ............................................................   0.001     0.001
      Mid IR value numbering ........................................................   0.021     0.021
      Mid IR border control .........................................................   0.001     0.001
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.053     0.053
    Low IR optimization .............................................................   0.068     0.161
      Low IR contraction ............................................................   0.042     0.042
      Low IR value numbering ........................................................   0.051     0.051
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.048     0.048
    Tree IR optimization ............................................................   0.007     0.007
      Tree IR contraction ...........................................................   0.001     0.001
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.029     1.081
      C compiler ....................................................................   1.052     1.052
