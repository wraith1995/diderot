/* ParseTree: After parsing */
  Program @ [evalProg.diderot:4.1-119.0] 
    [
      Type: mesh_t= @ [evalProg.diderot:4.1-5.0] 
        Mesh @ [evalProg.diderot:4.6-10] 
        From File : evalProg.json @ [evalProg.diderot:4.1-5.0] 
      Const: dim= @ [evalProg.diderot:5.1-6.0] 
        Select @ [evalProg.diderot:5.17-27] 
          Var: mesh_t @ [evalProg.diderot:5.17-23] 
          dim
      Type: fns_t= @ [evalProg.diderot:6.1-7.0] 
        FunctionSpace(mesh_t) @ [evalProg.diderot:6.6-32] 
          [
            Var: dim @ [evalProg.diderot:6.28-31] 
          ]
        From File : evalProg.json @ [evalProg.diderot:6.1-7.0] 
      Type: func_t= @ [evalProg.diderot:7.1-8.0] 
        FemFunction(fns_t) @ [evalProg.diderot:7.6-24] 
        From File : evalProg.json @ [evalProg.diderot:7.1-8.0] 
      Input: meshData @ [evalProg.diderot:9.1-10.0] 
      Input: space= @ [evalProg.diderot:10.1-11.0] 
        Apply @ [evalProg.diderot:10.21-36] 
          Var: fns_t @ [evalProg.diderot:10.21-26] 
          [
            Var: meshData @ [evalProg.diderot:10.27-35] 
          ]
      Input: data= @ [evalProg.diderot:11.1-12.0] 
        Apply @ [evalProg.diderot:11.21-34] 
          Var: func_t @ [evalProg.diderot:11.21-27] 
          [
            Var: space @ [evalProg.diderot:11.28-33] 
          ]
      Var @ [evalProg.diderot:13.1-14.0] 
        Decl: F= @ [evalProg.diderot:13.1-14.0] 
          Select @ [evalProg.diderot:13.21-27] 
            Var: data @ [evalProg.diderot:13.21-25] 
            F
      Var @ [evalProg.diderot:15.1-16.0] 
        Decl: simplex= @ [evalProg.diderot:15.1-16.0] 
          Apply @ [evalProg.diderot:15.27-45] 
            Select @ [evalProg.diderot:15.27-45] 
              Var: meshData @ [evalProg.diderot:15.27-35] 
              refcell
            [ ]
      Input: timeSteps= @ [evalProg.diderot:16.1-17.0] 
        Lit: 32 @ [evalProg.diderot:16.21-23] 
      Input: timeEps= @ [evalProg.diderot:17.1-18.0] 
        Lit: 0.1e-6 @ [evalProg.diderot:17.22-31] 
      Func: posMove @ [evalProg.diderot:20.1-63.1] 
        MeshPos(mesh_t) @ [evalProg.diderot:20.10-26] 
        [
          Param: x @ [evalProg.diderot:20.36-54] 
            MeshPos(mesh_t) @ [evalProg.diderot:20.36-52] 
          Param: dPos @ [evalProg.diderot:20.56-72] 
            Tensor @ [evalProg.diderot:20.56-67] 
              [
                Var: dim @ [evalProg.diderot:20.63-66] 
              ]
        ]
        Stmt @ [evalProg.diderot:20.1-63.1] 
          Block @ [evalProg.diderot:21.1-61.0] 
            [
              IfThen @ [evalProg.diderot:22.3-29.3] 
                UnaryOp: ! @ [evalProg.diderot:22.7-19] 
                  Apply @ [evalProg.diderot:22.8-19] 
                    Select @ [evalProg.diderot:22.8-19] 
                      Var: x @ [evalProg.diderot:22.8-9] 
                      isValid
                    [ ]
                Return @ [evalProg.diderot:27.5-28.0] 
                  Var: x @ [evalProg.diderot:27.12-13] 
              Decl @ [evalProg.diderot:21.1-61.0] 
                Decl: time= @ [evalProg.diderot:29.3-17] 
                  Lit: 1 @ [evalProg.diderot:29.15-16] 
              Decl @ [evalProg.diderot:21.1-61.0] 
                Decl: cmp= @ [evalProg.diderot:30.3-28] 
                  Var: x @ [evalProg.diderot:30.26-27] 
              Foreach @ [evalProg.diderot:33.3-54.0] 
                Int @ [evalProg.diderot:33.12-16] 
                Iterator: i @ [evalProg.diderot:33.16-34] 
                  Range @ [evalProg.diderot:33.21-34] 
                    Lit: 0 @ [evalProg.diderot:33.21-22] 
                    Var: timeSteps @ [evalProg.diderot:33.24-33] 
                Block @ [evalProg.diderot:33.35-54.0] 
                  [
                    Decl @ [evalProg.diderot:33.35-54.0] 
                      Decl: deltaP= @ [evalProg.diderot:34.5-84] 
                        BinOp: • @ [evalProg.diderot:34.26-83] 
                          BinOp: * @ [evalProg.diderot:34.26-75] 
                            Var: time @ [evalProg.diderot:34.26-30] 
                            Apply @ [evalProg.diderot:34.33-74] 
                              Var: inv @ [evalProg.diderot:34.33-36] 
                              [
                                Apply @ [evalProg.diderot:34.37-73] 
                                  UnaryOp: ∇⊗ @ [evalProg.diderot:34.37-61] 
                                    Select @ [evalProg.diderot:34.44-60] 
                                      Select @ [evalProg.diderot:34.44-60] 
                                        Var: cmp @ [evalProg.diderot:34.44-47] 
                                        mc
                                      transform
                                  [
                                    Select @ [evalProg.diderot:34.62-72] 
                                      Var: cmp @ [evalProg.diderot:34.62-65] 
                                      refPos
                                  ]
                              ]
                          Var: dPos @ [evalProg.diderot:34.79-83] 
                    Decl @ [evalProg.diderot:33.35-54.0] 
                      Decl: newPos= @ [evalProg.diderot:36.5-37.0] 
                        BinOp: + @ [evalProg.diderot:36.26-45] 
                          Select @ [evalProg.diderot:36.26-36] 
                            Var: cmp @ [evalProg.diderot:36.26-29] 
                            refPos
                          Var: deltaP @ [evalProg.diderot:36.39-45] 
                    IfThenElse @ [evalProg.diderot:37.5-53.0] 
                      Apply @ [evalProg.diderot:37.9-33] 
                        Select @ [evalProg.diderot:37.9-33] 
                          Var: simplex @ [evalProg.diderot:37.9-16] 
                          isInside
                        [
                          Var: newPos @ [evalProg.diderot:37.26-32] 
                        ]
                      Block @ [evalProg.diderot:37.35-41.0] 
                        [
                          Decl @ [evalProg.diderot:37.35-41.0] 
                            Decl: nmp= @ [evalProg.diderot:38.7-53] 
                              Apply @ [evalProg.diderot:38.30-52] 
                                Select @ [evalProg.diderot:38.30-52] 
                                  Select @ [evalProg.diderot:38.30-52] 
                                    Var: cmp @ [evalProg.diderot:38.30-33] 
                                    mc
                                  meshPos
                                [
                                  Var: newPos @ [evalProg.diderot:38.45-51] 
                                ]
                          Return @ [evalProg.diderot:39.7-40.0] 
                            Var: nmp @ [evalProg.diderot:39.14-17] 
                        ]
                      Block @ [evalProg.diderot:41.10-53.0] 
                        [
                          Decl @ [evalProg.diderot:41.10-53.0] 
                            Decl: eTime= @ [evalProg.diderot:42.7-46] 
                              Apply @ [evalProg.diderot:42.20-45] 
                                Select @ [evalProg.diderot:42.20-45] 
                                  Var: simplex @ [evalProg.diderot:42.20-27] 
                                  exit
                                [
                                  Var: cmp @ [evalProg.diderot:42.33-36] 
                                  Var: deltaP @ [evalProg.diderot:42.38-44] 
                                ]
                          Assign: time-= @ [evalProg.diderot:43.7-24] 
                            BinOp: * @ [evalProg.diderot:43.13-23] 
                              Var: time @ [evalProg.diderot:43.13-17] 
                              Var: eTime @ [evalProg.diderot:43.18-23] 
                          Decl @ [evalProg.diderot:41.10-53.0] 
                            Decl: nmp= @ [evalProg.diderot:44.7-59] 
                              Apply @ [evalProg.diderot:44.30-58] 
                                Select @ [evalProg.diderot:44.30-58] 
                                  Var: simplex @ [evalProg.diderot:44.30-37] 
                                  exitPos
                                [
                                  Var: cmp @ [evalProg.diderot:44.46-49] 
                                  Var: deltaP @ [evalProg.diderot:44.51-57] 
                                ]
                          IfThen @ [evalProg.diderot:45.7-51.7] 
                            OrElse @ [evalProg.diderot:45.12-69] 
                              UnaryOp: ! @ [evalProg.diderot:45.12-25] 
                                Select @ [evalProg.diderot:45.13-24] 
                                  Var: nmp @ [evalProg.diderot:45.13-16] 
                                  isValid
                              OrElse @ [evalProg.diderot:45.25-69] 
                                BinOp: < @ [evalProg.diderot:45.28-38] 
                                  Var: eTime @ [evalProg.diderot:45.28-33] 
                                  Lit: 0 @ [evalProg.diderot:45.36-37] 
                                OrElse @ [evalProg.diderot:45.38-69] 
                                  BinOp: > @ [evalProg.diderot:45.41-51] 
                                    Var: eTime @ [evalProg.diderot:45.41-46] 
                                    Lit: 1 @ [evalProg.diderot:45.49-50] 
                                  BinOp: < @ [evalProg.diderot:45.55-69] 
                                    Var: time @ [evalProg.diderot:45.55-59] 
                                    Var: timeEps @ [evalProg.diderot:45.62-69] 
                            Return @ [evalProg.diderot:49.2-50.0] 
                              Var: nmp @ [evalProg.diderot:49.9-12] 
                          Assign: cmp= @ [evalProg.diderot:51.7-52.0] 
                            Var: nmp @ [evalProg.diderot:51.13-16] 
                        ]
                  ]
              Print @ [evalProg.diderot:57.3-58.0] 
                [
                  Lit: "Took stupid way out!\n" @ [evalProg.diderot:57.9-33] 
                ]
              Assign: cmp= @ [evalProg.diderot:58.3-59.0] 
                Apply @ [evalProg.diderot:58.9-46] 
                  Select @ [evalProg.diderot:58.9-46] 
                    Var: meshData @ [evalProg.diderot:58.9-17] 
                    findPos
                  [
                    BinOp: + @ [evalProg.diderot:58.26-45] 
                      Apply @ [evalProg.diderot:58.26-38] 
                        Select @ [evalProg.diderot:58.26-38] 
                          Var: x @ [evalProg.diderot:58.26-27] 
                          worldPos
                        [ ]
                      Var: dPos @ [evalProg.diderot:58.41-45] 
                  ]
              Return @ [evalProg.diderot:59.3-60.0] 
                Var: cmp @ [evalProg.diderot:59.10-13] 
            ]
      Input: startPoints @ [evalProg.diderot:63.1-64.0] 
      Input: stepSize= @ [evalProg.diderot:64.1-65.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:64.23-27] 
      Input: stepMax= @ [evalProg.diderot:65.1-66.0] 
        Lit: 100 @ [evalProg.diderot:65.21-24] 
      Func: nV @ [evalProg.diderot:67.1-81.1] 
        Tensor @ [evalProg.diderot:67.10-21] 
          [
            Var: dim @ [evalProg.diderot:67.17-20] 
          ]
        [
          Param: x @ [evalProg.diderot:67.25-43] 
            MeshPos(mesh_t) @ [evalProg.diderot:67.25-41] 
        ]
        Stmt @ [evalProg.diderot:67.1-81.1] 
          IfThenElse @ [evalProg.diderot:68.3-78.0] 
            Apply @ [evalProg.diderot:68.6-17] 
              Select @ [evalProg.diderot:68.6-17] 
                Var: x @ [evalProg.diderot:68.6-7] 
                isValid
              [ ]
            Block @ [evalProg.diderot:68.18-74.0] 
              [
                Decl @ [evalProg.diderot:68.18-74.0] 
                  Decl: c= @ [evalProg.diderot:69.5-70.0] 
                    Select @ [evalProg.diderot:69.22-26] 
                      Var: x @ [evalProg.diderot:69.22-23] 
                      mc
                Decl @ [evalProg.diderot:68.18-74.0] 
                  Decl: ref= @ [evalProg.diderot:70.5-71.0] 
                    Apply @ [evalProg.diderot:70.23-33] 
                      Select @ [evalProg.diderot:70.23-33] 
                        Var: x @ [evalProg.diderot:70.23-24] 
                        refPos
                      [ ]
                Decl @ [evalProg.diderot:68.18-74.0] 
                  Decl: val= @ [evalProg.diderot:71.5-72.0] 
                    Apply @ [evalProg.diderot:71.23-53] 
                      Select @ [evalProg.diderot:71.23-53] 
                        Apply @ [evalProg.diderot:71.23-53] 
                          Select @ [evalProg.diderot:71.23-53] 
                            Var: data @ [evalProg.diderot:71.23-27] 
                            funcCell
                          [
                            Var: c @ [evalProg.diderot:71.37-38] 
                          ]
                        refField
                      [
                        Var: ref @ [evalProg.diderot:71.49-52] 
                      ]
                Return @ [evalProg.diderot:72.5-73.0] 
                  BinOp: / @ [evalProg.diderot:72.12-21] 
                    Var: val @ [evalProg.diderot:72.12-15] 
                    UnaryOp: |()| @ [evalProg.diderot:72.16-21] 
                      Var: val @ [evalProg.diderot:72.17-20] 
              ]
            Return @ [evalProg.diderot:76.7-77.0] 
              Zero @ [evalProg.diderot:76.14-24] 
                [
                  Var: dim @ [evalProg.diderot:76.20-23] 
                ]
    ]
    Strand: gg @ [evalProg.diderot:81.1-118.3] 
      [
        Param: startPos @ [evalProg.diderot:81.11-31] 
          Tensor @ [evalProg.diderot:81.11-22] 
            [
              Var: dim @ [evalProg.diderot:81.18-21] 
            ]
      ]
      [
        VarDcl: output @ [evalProg.diderot:82.3-83.0] 
        VarDcl: output @ [evalProg.diderot:83.3-84.0] 
        VarDcl @ [evalProg.diderot:84.3-85.0] 
        VarDcl @ [evalProg.diderot:85.3-86.0] 
        VarDcl @ [evalProg.diderot:86.3-87.0] 
      ]
      [
        Method: Update @ [evalProg.diderot:87.3-118.1] 
          Block @ [evalProg.diderot:87.10-118.0] 
            [
              IfThen @ [evalProg.diderot:88.5-91.5] 
                OrElse @ [evalProg.diderot:88.9-82] 
                  UnaryOp: ! @ [evalProg.diderot:88.9-25] 
                    Apply @ [evalProg.diderot:88.10-24] 
                      Select @ [evalProg.diderot:88.10-24] 
                        Var: cPos @ [evalProg.diderot:88.10-14] 
                        isValid
                      [ ]
                  OrElse @ [evalProg.diderot:88.25-82] 
                    UnaryOp: ! @ [evalProg.diderot:88.28-64] 
                      Apply @ [evalProg.diderot:88.29-64] 
                        Select @ [evalProg.diderot:88.29-64] 
                          Apply @ [evalProg.diderot:88.29-64] 
                            Select @ [evalProg.diderot:88.29-64] 
                              Var: meshData @ [evalProg.diderot:88.29-37] 
                              findPos
                            [
                              Var: altCPos @ [evalProg.diderot:88.46-53] 
                            ]
                          isValid
                        [ ]
                    BinOp: == @ [evalProg.diderot:88.67-82] 
                      Var: step @ [evalProg.diderot:88.67-71] 
                      Var: stepMax @ [evalProg.diderot:88.75-82] 
                Stabilize @ [evalProg.diderot:89.5-15] 
              IfThenElse @ [evalProg.diderot:91.5-95.0] 
                BinOp: > @ [evalProg.diderot:91.8-46] 
                  UnaryOp: |()| @ [evalProg.diderot:91.8-35] 
                    BinOp: - @ [evalProg.diderot:91.9-34] 
                      Apply @ [evalProg.diderot:91.9-24] 
                        Select @ [evalProg.diderot:91.9-24] 
                          Var: cPos @ [evalProg.diderot:91.9-13] 
                          worldPos
                        [ ]
                      Var: altCPos @ [evalProg.diderot:91.27-34] 
                  Lit: 0.1e-5 @ [evalProg.diderot:91.38-46] 
                Print @ [evalProg.diderot:92.7-93.0] 
                  [
                    Lit: "Error in tracing: At step:" @ [evalProg.diderot:92.13-41] 
                    Var: step @ [evalProg.diderot:92.43-47] 
                    Lit: " with particle:" @ [evalProg.diderot:92.49-66] 
                    Var: startPos @ [evalProg.diderot:92.68-76] 
                    Lit: "\n" @ [evalProg.diderot:92.78-82] 
                  ]
                Print @ [evalProg.diderot:94.11-50] 
                  [
                    Lit: "fine in cell:" @ [evalProg.diderot:94.17-32] 
                    Apply @ [evalProg.diderot:94.34-43] 
                      Select @ [evalProg.diderot:94.34-43] 
                        Var: cPos @ [evalProg.diderot:94.34-38] 
                        mc
                      [ ]
                    Lit: "\n" @ [evalProg.diderot:94.44-48] 
                  ]
              Decl @ [evalProg.diderot:87.10-118.0] 
                Decl: altUp1= @ [evalProg.diderot:96.5-97.0] 
                  BinOp: / @ [evalProg.diderot:96.26-62] 
                    BinOp: * @ [evalProg.diderot:96.26-49] 
                      BinOp: * @ [evalProg.diderot:96.26-38] 
                        Lit: 0.5e0 @ [evalProg.diderot:96.26-29] 
                        Var: stepSize @ [evalProg.diderot:96.30-38] 
                      Apply @ [evalProg.diderot:96.39-49] 
                        Var: F @ [evalProg.diderot:96.39-40] 
                        [
                          Var: altCPos @ [evalProg.diderot:96.41-48] 
                        ]
                    UnaryOp: |()| @ [evalProg.diderot:96.50-62] 
                      Apply @ [evalProg.diderot:96.51-61] 
                        Var: F @ [evalProg.diderot:96.51-52] 
                        [
                          Var: altCPos @ [evalProg.diderot:96.53-60] 
                        ]
              Decl @ [evalProg.diderot:87.10-118.0] 
                Decl: up1= @ [evalProg.diderot:97.5-98.0] 
                  BinOp: * @ [evalProg.diderot:97.23-48] 
                    BinOp: * @ [evalProg.diderot:97.23-38] 
                      Lit: 0.5e0 @ [evalProg.diderot:97.23-26] 
                      Var: stepSize @ [evalProg.diderot:97.29-37] 
                    Apply @ [evalProg.diderot:97.40-48] 
                      Var: nV @ [evalProg.diderot:97.40-42] 
                      [
                        Var: cPos @ [evalProg.diderot:97.43-47] 
                      ]
              Decl @ [evalProg.diderot:87.10-118.0] 
                Decl: intermed= @ [evalProg.diderot:98.5-99.0] 
                  Apply @ [evalProg.diderot:98.33-51] 
                    Var: posMove @ [evalProg.diderot:98.33-40] 
                    [
                      Var: cPos @ [evalProg.diderot:98.41-45] 
                      Var: up1 @ [evalProg.diderot:98.47-50] 
                    ]
              Decl @ [evalProg.diderot:87.10-118.0] 
                Decl: altIntermed= @ [evalProg.diderot:99.5-100.0] 
                  BinOp: + @ [evalProg.diderot:99.31-47] 
                    Var: altCPos @ [evalProg.diderot:99.31-38] 
                    Var: altUp1 @ [evalProg.diderot:99.41-47] 
              IfThen @ [evalProg.diderot:100.5-103.5] 
                OrElse @ [evalProg.diderot:100.8-71] 
                  UnaryOp: ! @ [evalProg.diderot:100.8-28] 
                    Apply @ [evalProg.diderot:100.9-27] 
                      Select @ [evalProg.diderot:100.9-27] 
                        Var: intermed @ [evalProg.diderot:100.9-17] 
                        isValid
                      [ ]
                  UnaryOp: ! @ [evalProg.diderot:100.31-71] 
                    Apply @ [evalProg.diderot:100.32-71] 
                      Select @ [evalProg.diderot:100.32-71] 
                        Apply @ [evalProg.diderot:100.32-71] 
                          Select @ [evalProg.diderot:100.32-71] 
                            Var: meshData @ [evalProg.diderot:100.32-40] 
                            findPos
                          [
                            Var: altIntermed @ [evalProg.diderot:100.49-60] 
                          ]
                        isValid
                      [ ]
                Stabilize @ [evalProg.diderot:101.7-102.0] 
              Decl @ [evalProg.diderot:87.10-118.0] 
                Decl: altUp2= @ [evalProg.diderot:103.5-104.0] 
                  BinOp: / @ [evalProg.diderot:103.26-66] 
                    BinOp: * @ [evalProg.diderot:103.26-49] 
                      Var: stepSize @ [evalProg.diderot:103.26-34] 
                      Apply @ [evalProg.diderot:103.35-49] 
                        Var: F @ [evalProg.diderot:103.35-36] 
                        [
                          Var: altIntermed @ [evalProg.diderot:103.37-48] 
                        ]
                    UnaryOp: |()| @ [evalProg.diderot:103.50-66] 
                      Apply @ [evalProg.diderot:103.51-65] 
                        Var: F @ [evalProg.diderot:103.51-52] 
                        [
                          Var: altIntermed @ [evalProg.diderot:103.53-64] 
                        ]
              Decl @ [evalProg.diderot:87.10-118.0] 
                Decl: up2= @ [evalProg.diderot:104.5-105.0] 
                  BinOp: * @ [evalProg.diderot:104.23-46] 
                    Var: stepSize @ [evalProg.diderot:104.23-31] 
                    Apply @ [evalProg.diderot:104.34-46] 
                      Var: nV @ [evalProg.diderot:104.34-36] 
                      [
                        Var: intermed @ [evalProg.diderot:104.37-45] 
                      ]
              Assign: cPos= @ [evalProg.diderot:105.5-106.0] 
                Apply @ [evalProg.diderot:105.12-30] 
                  Var: posMove @ [evalProg.diderot:105.12-19] 
                  [
                    Var: cPos @ [evalProg.diderot:105.20-24] 
                    Var: up2 @ [evalProg.diderot:105.26-29] 
                  ]
              Assign: altCPos= @ [evalProg.diderot:106.5-107.0] 
                BinOp: + @ [evalProg.diderot:106.15-31] 
                  Var: altCPos @ [evalProg.diderot:106.15-22] 
                  Var: altUp2 @ [evalProg.diderot:106.25-31] 
              IfThen @ [evalProg.diderot:107.5-113.5] 
                UnaryOp: ! @ [evalProg.diderot:107.9-24] 
                  Apply @ [evalProg.diderot:107.10-24] 
                    Select @ [evalProg.diderot:107.10-24] 
                      Var: cPos @ [evalProg.diderot:107.10-14] 
                      isValid
                    [ ]
                Block @ [evalProg.diderot:107.25-113.0] 
                  [
                    Print @ [evalProg.diderot:108.7-109.0] 
                      [
                        Var: stream @ [evalProg.diderot:108.13-19] 
                      ]
                    Stabilize @ [evalProg.diderot:111.7-17] 
                  ]
              Assign: stream= @ [evalProg.diderot:113.5-114.0] 
                BinOp: @ @ [evalProg.diderot:113.14-38] 
                  Var: stream @ [evalProg.diderot:113.14-20] 
                  Sequence @ [evalProg.diderot:113.21-38] 
                    [
                      Apply @ [evalProg.diderot:113.22-37] 
                        Select @ [evalProg.diderot:113.22-37] 
                          Var: cPos @ [evalProg.diderot:113.22-26] 
                          worldPos
                        [ ]
                    ]
              Assign: newStream= @ [evalProg.diderot:114.5-115.0] 
                BinOp: @ @ [evalProg.diderot:114.17-36] 
                  Var: newStream @ [evalProg.diderot:114.17-26] 
                  Sequence @ [evalProg.diderot:114.27-36] 
                    [
                      Var: altCPos @ [evalProg.diderot:114.28-35] 
                    ]
              Assign: step+= @ [evalProg.diderot:116.5-117.0] 
                Lit: 1 @ [evalProg.diderot:116.11-12] 
            ]
      ]
    Collection @ [evalProg.diderot:118.3-119.0] 
      Comprehension @ [evalProg.diderot:118.21-47] 
        Apply @ [evalProg.diderot:118.22-27] 
          Var: gg @ [evalProg.diderot:118.22-24] 
          [
            Var: x @ [evalProg.diderot:118.25-26] 
          ]
        [
          Iterator: x @ [evalProg.diderot:118.30-46] 
            Var: startPoints @ [evalProg.diderot:118.35-46] 
        ]
/* end program */
/* AST: After typechecking */
properties: HasInputs,HasGlobals,HasConsts,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
const int dim = 3;
input FemType: Mesh with type var:NONE meshData = loadFem(Mesh);
input FemType: Space with type var:mesh_t space = loadFem(Space);
input FemType: FemFunc with type var:fns_t data = loadFem(FemFunc);
input int timeSteps = 32;
input real timeEps = 0.1e-6;
input vec3[] startPoints;
input real stepSize = 0.1e-1;
input int stepMax = 100;
function bool != (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:mesh_t findPos (FemType: Mesh with type var:mesh_t mesh, vec3 pos)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  yayCells = extractFemItem(mesh, pos : vec3, int[], NearbyCell(File=spat.in)(Mesh));
  foreach (int cellItter in yayCells) {
    xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
    cellInt = cellItter;
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
    foreach (int newtonItter in $range (0, 16)) {
      delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
      xn = -<$[3]> (xn, delta);
      if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
        if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[2], -0.e0)))) {
          return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
          }
        }
      }
    }
  print ("Bad end 2", "\n");
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: RefCell with type var:mesh_t refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:mesh_t, RefCell(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:mesh_t[], Cells(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[3,3,3,3] mesh_t_transform_3 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3,3]> (∇⊗<#; %3; $[3,3]; %3> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )))), pos);
  }
function tensor[3,3,3] mesh_t_transform_2 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3]> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, ))), pos);
  }
function mat3 mesh_t_transform_1 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )), pos);
  }
function vec3 mesh_t_transform_0 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3]> (femField(mesh,cell,field(3)[3], Transform, ), pos);
  }
function FemType: MeshPos with type var:mesh_t _mesh_t_newtonInverse (vec3 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
  foreach (int itter in $range (0, 16)) {
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], xn)[2], -0.e0)))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: MeshPos with type var:mesh_t _mesh_pos_mesh_t_build_world_pos (FemType: MeshPos with type var:mesh_t pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:mesh_t,vec3 (pos, mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return pos;
    }
  }
function vec3 worldPos (FemType: MeshPos with type var:mesh_t pos)
{
  return mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:mesh_t $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec3 refPos, vec3 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    print ("face ", $r2i (time[1]), " to ", $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1), "\n", "got: ", $sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), "\n");
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3,int (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), [•<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[0], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[1], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[2]], $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec3 (mesh, +<$[3]> (*<$[3]> (time[0], dPos), refPos))):FemType: MeshPos with type var:mesh_t;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 8), * (faceIdx, 2)))):int[2];
    }
  }
function vec2 _enter (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[2], -0.e0)))) {
      time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos));
      face = 0;
      }
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)))))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos));
      face = 1;
      }
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      face = 2;
      }
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))))), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)))))[2], -0.e0)))) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 3;
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec3 refPos, vec3 dPos, int i)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  if $and (>= (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), 0.1e-20)))
    if != (i, 0) {
      time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos));
      face = 0;
      }
    else {
      faceTime = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos));
      }
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos)), 0.1e-20)))
    if != (i, 1) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos));
      face = 1;
      }
    else {
      faceTime = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.1e1, 0.e0, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-20)))
    if != (i, 2) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      face = 2;
      }
    else {
      faceTime = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
      }
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), -0.1e-15), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos)), 0.1e-20)))
    if != (i, 3) {
      time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      face = 3;
      }
    else {
      faceTime = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, 0.1e1], dPos));
      }
    if != (face, -1) {
    return [max (time, 0.e0), (real)face];
    }
  else {
    if == (-inf, faceTime) {
      return [(real)-1, (real)-1];
      }
    else {
      return [faceTime, (real)i];
      }
    }
  }
function FemType: Mesh with type var:mesh_t domain (FemType: Space with type var:mesh_t arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:mesh_t space (FemType: FemFunc with type var:fns_t arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:func_t funcCell (FemType: FemFunc with type var:fns_t arg0, FemType: MeshCell with type var:mesh_t arg1)
{
  return loadFem(FuncCell);
  }
field(3)[3] F = ∘<#; %3; $[3]; %3; $[3]> (femField(data,extractFem(Mesh,extractFem(Space,data ) ),field(3)[3], refField, findPos), femField(extractFem(Mesh,extractFem(Space,data ) ),extractFem(Mesh,extractFem(Space,data ) ),field(3)[3], InvTransform, findPos));
FemType: RefCell with type var:mesh_t simplex = refcell (meshData);
function FemType: MeshPos with type var:mesh_t posMove (FemType: MeshPos with type var:mesh_t x, vec3 dPos)
{
  if ! (extractFemItem(x, bool, Valid(MeshPos)))
    return x;
    real time = 0.1e1;
  FemType: MeshPos with type var:mesh_t cmp = x;
  foreach (int i in $range (0, timeSteps)) {
    vec3 deltaP = •<$[3,3]; $[3]; $[3]> (*<$[3,3]> (time, inv (@<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(extractFem(Mesh,loadFem(MeshCell) ),extractFemItem(loadFem(MeshCell), int, CellIndex(MeshCell)),field(3)[3], Transform, )), extractFemItem(cmp, vec3, RefPos(MeshPos))))), dPos);
    vec3 newPos = +<$[3]> (extractFemItem(cmp, vec3, RefPos(MeshPos)), deltaP);
    if $and (> (+<$[]> (0.1e1, 0.1e-8), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], newPos)), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], newPos)[0], -0.e0), $and (> (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], newPos)[1], -0.e0), > (+<$[3]> ([0.1e-8, 0.1e-8, 0.1e-8], newPos)[2], -0.e0)))) {
      FemType: MeshPos with type var:mesh_t nmp = extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3 (extractFem(Mesh,loadFem(MeshCell) ), extractFemItem(loadFem(MeshCell), int, CellIndex(MeshCell)), newPos)):FemType: MeshPos with type var:mesh_t;
      return nmp;
      }
    else {
      real eTime = _exit (extractFemItem(cmp, vec3, RefPos(MeshPos)), deltaP, extractFemItem(cmp, int, PosEntryFacet(MeshPos)))[0];
      time = -<$[]> (time, * (time, eTime));
      FemType: MeshPos with type var:mesh_t nmp = $exitPos (extractFem(Mesh,cmp ), extractFemItem(cmp, int, CellIndex(Mesh)), extractFemItem(cmp, vec3, RefPos(Mesh)), deltaP, _exit (extractFemItem(cmp, vec3, RefPos(Mesh)), deltaP, extractFemItem(cmp, int, PosEntryFacet(MeshPos))));
      if (! (extractFemItem(nmp, bool, Valid(MeshPos))) || (< (eTime, (real)0) || (> (eTime, (real)1) || < (time, timeEps))))
        return nmp;
        cmp = nmp;
      }
    }
  print ("Took stupid way out!\n");
  cmp = findPos (meshData, +<$[3]> (worldPos (x), dPos));
  return cmp;
  }
function vec3 nV (FemType: MeshPos with type var:mesh_t x)
{
  if extractFemItem(x, bool, Valid(MeshPos)) {
    FemType: MeshCell with type var:mesh_t c = loadFem(MeshCell);
    vec3 ref = extractFemItem(x, vec3, RefPos(MeshPos));
    vec3 val = @<#; %3; $[3]> (femField(extractFem(FemFunc,funcCell (data, c) ),extractFemItem(funcCell (data, c), int, CellIndex(FuncCell)),field(3)[3], refField, ), ref);
    return /<$[3]> (val, |()|<$[3]> (val));
    }
  else {
    return $zero<$[3]> ();
    }
  }
strand gg (vec3 startPos)
{
  output vec3[] stream = (vec3[]){startPos};
  output vec3[] newStream = (vec3[]){startPos};
  int step = 0;
  FemType: MeshPos with type var:mesh_t cPos = findPos (meshData, startPos);
  vec3 altCPos = startPos;
  update {
    if (! (extractFemItem(cPos, bool, Valid(MeshPos))) || (! (extractFemItem(findPos (meshData, altCPos), bool, Valid(MeshPos))) || == (step, stepMax)))
      stabilize;
      if > (|()|<$[3]> (-<$[3]> (worldPos (cPos), altCPos)), 0.1e-5) {
      print ("Error in tracing: At step:", step, " with particle:", startPos, "\n");
      }
    else {
      print ("fine in cell:", loadFem(MeshCell), "\n");
      }
    vec3 altUp1 = /<$[3]> (*<$[3]> (* (0.5e0, stepSize), @<#; %3; $[3]> (F, altCPos)), |()|<$[3]> (@<#; %3; $[3]> (F, altCPos)));
    vec3 up1 = *<$[3]> (* (0.5e0, stepSize), nV (cPos));
    FemType: MeshPos with type var:mesh_t intermed = posMove (cPos, up1);
    vec3 altIntermed = +<$[3]> (altCPos, altUp1);
    if (! (extractFemItem(intermed, bool, Valid(MeshPos))) || ! (extractFemItem(findPos (meshData, altIntermed), bool, Valid(MeshPos))))
      stabilize;
      vec3 altUp2 = /<$[3]> (*<$[3]> (stepSize, @<#; %3; $[3]> (F, altIntermed)), |()|<$[3]> (@<#; %3; $[3]> (F, altIntermed)));
    vec3 up2 = *<$[3]> (stepSize, nV (intermed));
    cPos = posMove (cPos, up2);
    altCPos = +<$[3]> (altCPos, altUp2);
    if ! (extractFemItem(cPos, bool, Valid(MeshPos))) {
      print (stream);
      stabilize;
      }
    stream = @<vec3> (stream, (vec3[]){worldPos (cPos)});
    newStream = @<vec3> (newStream, (vec3[]){altCPos});
    step = + (step, 1);
    }
  
}
collection {
    foreach (vec3 x in startPoints) {
      new gg (x);
      }
    }
  
/* Program end */
/* Simplified Program (after after simplify) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData039F;
input FemData:Space 0space03AB_intermedateGlobal03AC;
input FemData:FemFunc 0data03AD_intermedateGlobal03AE;
input int timeSteps03AF = <default>;
input real timeEps03B0 = <default>;
input vec3[] startPoints03B1;
input real stepSize03B2 = <default>;
input int stepMax03B3 = <default>;
constants {
  timeSteps03AF = 32;
  timeEps03B0 = 0.1e-6;
  stepSize03B2 = 0.1e-1;
  stepMax03B3 = 100;
}
global Femdata: MeshCell[] 0cell_meshData03A0;
global Femdata: Space space03AB;
global Femdata: FemFunc data03AD;
global field(3)[3] F0DE3;
global Femdata: RefCell simplex0DE4;
function bool#0 !=03B4 (Femdata: MeshCell cell103B5, Femdata: MeshCell cell103B6)
{
  int _t03B7 = extractFemItem(CellIndex(Mesh), int, cell103B5);
  int _t03B8 = extractFemItem(CellIndex(Mesh), int, cell103B6);
  bool _t03B9 = prim !=0086 (_t03B7, _t03B8);
  return _t03B9;
}
function bool#0 ==03BA (Femdata: MeshCell cell103B5, Femdata: MeshCell cell103B6)
{
  int _t03BB = extractFemItem(CellIndex(Mesh), int, cell103B5);
  int _t03BC = extractFemItem(CellIndex(Mesh), int, cell103B6);
  bool _t03BD = prim ==0082 (_t03BB, _t03BC);
  return _t03BD;
}
function Femdata: MeshPos#6 findPos03BE (Femdata: Mesh mesh03BF, vec3 pos03C0)
{
  real _t03C1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn03C4 = [_t03C1, _t03C2, _t03C3];
  newtonInt03C5 = 0;
  cellInt03C6 = extractFemItem(StartCell(Mesh), int, mesh03BF);
  int _t03C7 = extractFemItem(NumCell(Mesh), int, mesh03BF);
  int _t03C8 = 1;
  numCell03C9 = prim -0024 (_t03C7, _t03C8);
  yayCells03CA = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh03BF, pos03C0 : vec3);
  foreach cellItter03CE in yayCells03CA {
    real _t03CB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn03C4 = [_t03CB, _t03CC, _t03CD];
    cellInt03C6 = cellItter03CE;
    field(3)[3] _t03CF = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
    field(3)[3,3] _t03D0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t03CF);
    field(3)[3,3] _t03D1 = prim inv015E<#∞; %3> (_t03D0);
    real _t03D2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t03D5 = [_t03D2, _t03D3, _t03D4];
    A03D6 = prim @00A5<#∞; %3; $[3,3]> (_t03D1, _t03D5);
    int _t03D7 = 0;
    int _t03D8 = 16;
    int[] _t03D9 = prim $range01C3 (_t03D7, _t03D8);
    foreach newtonItter0408 in _t03D9 {
      field(3)[3] _t03DA = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
      field(3)[3] _t03DB = prim -002E<#∞; %3; $[3]> (_t03DA, pos03C0);
      field(3)[3] _t03DC = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A03D6, _t03DB);
      delta03DD = prim @00A5<#∞; %3; $[3]> (_t03DC, xn03C4);
      xn03C4 = prim -0026<$[3]> (xn03C4, delta03DD);
      real _t03DE = 0.1e-7;
      real _t03DF = 0.1e-7;
      real _t03E0 = prim *0034 (_t03DE, _t03DF);
      real _t03E1 = prim •00CE<$[3]; $[3]; $[]> (delta03DD, delta03DD);
      bool _t03E2 = prim >=007E (_t03E0, _t03E1);
      if _t03E2 {
        real _t03E3 = 0.1e1;
        real _t03E4 = 0.1e-8;
        real _t03E5 = prim +0017<$[]> (_t03E3, _t03E4);
        real _t03E6 = 0.1e1;
        real _t03E7 = 0.1e1;
        real _t03E8 = 0.1e1;
        vec3 _t03E9 = [_t03E6, _t03E7, _t03E8];
        real _t03EA = prim •00CE<$[3]; $[3]; $[]> (_t03E9, xn03C4);
        bool _t03EB = prim >0080 (_t03E5, _t03EA);
        real _t03EC = 0.1e-8;
        real _t03ED = 0.1e-8;
        real _t03EE = 0.1e-8;
        vec3 _t03EF = [_t03EC, _t03ED, _t03EE];
        vec3 _t03F0 = prim +0017<$[3]> (_t03EF, xn03C4);
        real _t03F1 = _t03F0[0];
        real _t03F2 = -0.e0;
        bool _t03F3 = prim >0080 (_t03F1, _t03F2);
        real _t03F4 = 0.1e-8;
        real _t03F5 = 0.1e-8;
        real _t03F6 = 0.1e-8;
        vec3 _t03F7 = [_t03F4, _t03F5, _t03F6];
        vec3 _t03F8 = prim +0017<$[3]> (_t03F7, xn03C4);
        real _t03F9 = _t03F8[1];
        real _t03FA = -0.e0;
        bool _t03FB = prim >0080 (_t03F9, _t03FA);
        real _t03FC = 0.1e-8;
        real _t03FD = 0.1e-8;
        real _t03FE = 0.1e-8;
        vec3 _t03FF = [_t03FC, _t03FD, _t03FE];
        vec3 _t0400 = prim +0017<$[3]> (_t03FF, xn03C4);
        real _t0401 = _t0400[2];
        real _t0402 = -0.e0;
        bool _t0403 = prim >0080 (_t0401, _t0402);
        bool _t0404 = prim $and01C4 (_t03FB, _t0403);
        bool _t0405 = prim $and01C4 (_t03F3, _t0404);
        bool _t0406 = prim $and01C4 (_t03EB, _t0405);
        if _t0406 {
          Femdata: MeshPos _t0407 = extractFemItemN((mesh03BF, cellInt03C6, xn03C4, pos03C0),AllBuild(MeshPos),);
          return _t0407;
        }
      }
    }
  }
  string _t0409 = "Bad end 2";
  string _t040A = "\n";
  print (_t0409, _t040A);
  Femdata: MeshPos _t040B = extractFemItemN((mesh03BF),InvalidBuild(MeshPos),);
  return _t040B;
}
function Femdata: RefCell#1 refcell040C (Femdata: Mesh arg0040D)
{
  Femdata: RefCell _t040E = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0040D);
  return _t040E;
}
function Femdata: MeshCell[]#0 cells040F (Femdata: Mesh arg00410)
{
  Femdata: MeshCell[] _t0411 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00410);
  return _t0411;
}
function Femdata: MeshCell[]#0 cells0412 (Femdata: Mesh arg00410)
{
  int _t0413 = 0;
  int _t0414 = extractFemItem(NumCell(Mesh), int, arg00410);
  int[] _t0415 = prim $range01C3 (_t0413, _t0414);
  Femdata: MeshCell[] accum0418 = {};
  foreach i0416 in _t0415 {
    Femdata: MeshCell _t0417 = loadFem(MeshCell, arg00410, i0416);
    accum0418 = prim @0010<Femdata: MeshCell> (accum0418, _t0417);
  }
  return accum0418;
}
function int#0 numCell0419 (Femdata: Mesh arg0040D)
{
  int _t041A = extractFemItem(NumCell(Mesh), int, arg0040D);
  return _t041A;
}
function tensor[3,3,3,3]#0 mesh_t_transform_3041B (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t041F = femField(mesh041E,cell041D,field(3)[3],Transform,);
  field(3)[3,3] _t0420 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t041F);
  field(3)[3,3,3] _t0421 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0420);
  field(3)[3,3,3,3] _t0422 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0421);
  tensor[3,3,3,3] _t0423 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0422, pos041C);
  return _t0423;
}
function tensor[3,3,3]#0 mesh_t_transform_20424 (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t0425 = femField(mesh041E,cell041D,field(3)[3],Transform,);
  field(3)[3,3] _t0426 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0425);
  field(3)[3,3,3] _t0427 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0426);
  tensor[3,3,3] _t0428 = prim @00A5<#∞; %3; $[3,3,3]> (_t0427, pos041C);
  return _t0428;
}
function tensor[3,3]#0 mesh_t_transform_10429 (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t042A = femField(mesh041E,cell041D,field(3)[3],Transform,);
  field(3)[3,3] _t042B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042A);
  tensor[3,3] _t042C = prim @00A5<#∞; %3; $[3,3]> (_t042B, pos041C);
  return _t042C;
}
function vec3#2 mesh_t_transform_0042D (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t042E = femField(mesh041E,cell041D,field(3)[3],Transform,);
  vec3 _t042F = prim @00A5<#∞; %3; $[3]> (_t042E, pos041C);
  return _t042F;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse0430 (vec3 pos0431, int cellInt0432, Femdata: Mesh mesh0433)
{
  real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0435 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0436 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0437 = [_t0434, _t0435, _t0436];
  field(3)[3] _t0438 = femField(mesh0433,cellInt0432,field(3)[3],Transform,);
  field(3)[3,3] _t0439 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0438);
  field(3)[3,3] _t043A = prim inv015E<#∞; %3> (_t0439);
  real _t043B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t043C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t043D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t043E = [_t043B, _t043C, _t043D];
  A043F = prim @00A5<#∞; %3; $[3,3]> (_t043A, _t043E);
  int _t0440 = 0;
  int _t0441 = 16;
  int[] _t0442 = prim $range01C3 (_t0440, _t0441);
  foreach itter0472 in _t0442 {
    field(3)[3] _t0443 = femField(mesh0433,cellInt0432,field(3)[3],Transform,);
    field(3)[3] _t0444 = prim -002E<#∞; %3; $[3]> (_t0443, pos0431);
    field(3)[3] _t0445 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A043F, _t0444);
    delta0446 = prim @00A5<#∞; %3; $[3]> (_t0445, xn0437);
    xn0437 = prim -0026<$[3]> (xn0437, delta0446);
    real _t0447 = 0.1e-7;
    real _t0448 = 0.1e-7;
    real _t0449 = prim *0034 (_t0447, _t0448);
    real _t044A = prim •00CE<$[3]; $[3]; $[]> (delta0446, delta0446);
    bool _t044B = prim >=007E (_t0449, _t044A);
    if _t044B {
      real _t044C = 0.1e1;
      real _t044D = 0.1e-8;
      real _t044E = prim +0017<$[]> (_t044C, _t044D);
      real _t044F = 0.1e1;
      real _t0450 = 0.1e1;
      real _t0451 = 0.1e1;
      vec3 _t0452 = [_t044F, _t0450, _t0451];
      real _t0453 = prim •00CE<$[3]; $[3]; $[]> (_t0452, xn0437);
      bool _t0454 = prim >0080 (_t044E, _t0453);
      real _t0455 = 0.1e-8;
      real _t0456 = 0.1e-8;
      real _t0457 = 0.1e-8;
      vec3 _t0458 = [_t0455, _t0456, _t0457];
      vec3 _t0459 = prim +0017<$[3]> (_t0458, xn0437);
      real _t045A = _t0459[0];
      real _t045B = -0.e0;
      bool _t045C = prim >0080 (_t045A, _t045B);
      real _t045D = 0.1e-8;
      real _t045E = 0.1e-8;
      real _t045F = 0.1e-8;
      vec3 _t0460 = [_t045D, _t045E, _t045F];
      vec3 _t0461 = prim +0017<$[3]> (_t0460, xn0437);
      real _t0462 = _t0461[1];
      real _t0463 = -0.e0;
      bool _t0464 = prim >0080 (_t0462, _t0463);
      real _t0465 = 0.1e-8;
      real _t0466 = 0.1e-8;
      real _t0467 = 0.1e-8;
      vec3 _t0468 = [_t0465, _t0466, _t0467];
      vec3 _t0469 = prim +0017<$[3]> (_t0468, xn0437);
      real _t046A = _t0469[2];
      real _t046B = -0.e0;
      bool _t046C = prim >0080 (_t046A, _t046B);
      bool _t046D = prim $and01C4 (_t0464, _t046C);
      bool _t046E = prim $and01C4 (_t045C, _t046D);
      bool _t046F = prim $and01C4 (_t0454, _t046E);
      if _t046F {
        Femdata: MeshPos _t0470 = extractFemItemN((mesh0433, cellInt0432, xn0437, pos0431),AllBuild(MeshPos),);
        return _t0470;
      } else {
        Femdata: MeshPos _t0471 = extractFemItemN((mesh0433),InvalidBuild(MeshPos),);
        return _t0471;
      }
    }
  }
  Femdata: MeshPos _t0473 = extractFemItemN((mesh0433),InvalidBuild(MeshPos),);
  return _t0473;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos0474 (Femdata: MeshPos pos0475)
{
  bool _t0476 = extractFemItem(WorldTest(MeshPos), bool, pos0475);
  if _t0476 {
    vec3 _t0477 = extractFemItem(RefPos(MeshPos), vec3, pos0475);
    int _t0478 = extractFemItem(CellIndex(MeshPos), int, pos0475);
    Femdata: Mesh _t0479 = extractFem(pos0475, Mesh);
    vec3 _t047A = func mesh_t_transform_0042D (_t0477, _t0478, _t0479);
    Femdata: MeshPos _t047B = extractFemItemN((pos0475, _t047A),NewWorld(MeshPos),);
    return _t047B;
  } else {
    return pos0475;
  }
}
function vec3#3 worldPos047C (Femdata: MeshPos pos0475)
{
  vec3 _t047D = extractFemItem(RefPos(MeshPos), vec3, pos0475);
  int _t047E = extractFemItem(CellIndex(MeshPos), int, pos0475);
  Femdata: Mesh _t047F = extractFem(pos0475, Mesh);
  vec3 _t0480 = func mesh_t_transform_0042D (_t047D, _t047E, _t047F);
  return _t0480;
}
function Femdata: MeshPos#1 $exitPos0481 (Femdata: Mesh mesh0482, int cellId0483, vec3 refPos0484, vec3 dPos0485, real[2] time0486)
{
  int _t0487 = -1;
  real _t0488 = time0486[1];
  int _t0489 = prim $r2i01B7 (_t0488);
  int[2] _t048B = func nextCell4048A (_t0489, cellId0483, mesh0482);
  int _t048C = 0;
  int _t048D = prim $sub01C0<int; %2> (_t048B, _t048C);
  bool _t048E = prim !=0086 (_t0487, _t048D);
  if _t048E {
    string _t048F = "face ";
    real _t0490 = time0486[1];
    int _t0491 = prim $r2i01B7 (_t0490);
    string _t0492 = " to ";
    real _t0493 = time0486[1];
    int _t0494 = prim $r2i01B7 (_t0493);
    int[2] _t0495 = func nextCell4048A (_t0494, cellId0483, mesh0482);
    int _t0496 = 1;
    int _t0497 = prim $sub01C0<int; %2> (_t0495, _t0496);
    string _t0498 = "\n";
    string _t0499 = "got: ";
    real _t049A = 0.1e1;
    real _t049B = 0.e0;
    real _t049C = 0.e0;
    real _t049D = 0.e0;
    vec4 _t049E = [_t049A, _t049B, _t049C, _t049D];
    real _t049F = 0.e0;
    real _t04A0 = 0.1e1;
    real _t04A1 = 0.e0;
    real _t04A2 = 0.e0;
    vec4 _t04A3 = [_t049F, _t04A0, _t04A1, _t04A2];
    real _t04A4 = 0.e0;
    real _t04A5 = 0.e0;
    real _t04A6 = 0.1e1;
    real _t04A7 = 0.e0;
    vec4 _t04A8 = [_t04A4, _t04A5, _t04A6, _t04A7];
    real _t04A9 = 0.971445146547e-16;
    real _t04AA = 0.e0;
    real _t04AB = 0.e0;
    real _t04AC = 0.1e1;
    vec4 _t04AD = [_t04A9, _t04AA, _t04AB, _t04AC];
    tensor[4,4] _t04AE = [_t049E, _t04A3, _t04A8, _t04AD];
    real _t04AF = 0.57735026919e0;
    real _t04B0 = 0.57735026919e0;
    real _t04B1 = 0.57735026919e0;
    real _t04B2 = -0.57735026919e0;
    vec4 _t04B3 = [_t04AF, _t04B0, _t04B1, _t04B2];
    real _t04B4 = -0.333333333333e0;
    real _t04B5 = 0.666666666667e0;
    real _t04B6 = -0.333333333333e0;
    real _t04B7 = 0.333333333333e0;
    vec4 _t04B8 = [_t04B4, _t04B5, _t04B6, _t04B7];
    real _t04B9 = -0.333333333333e0;
    real _t04BA = -0.333333333333e0;
    real _t04BB = 0.666666666667e0;
    real _t04BC = 0.333333333333e0;
    vec4 _t04BD = [_t04B9, _t04BA, _t04BB, _t04BC];
    real _t04BE = 0.971445146547e-16;
    real _t04BF = 0.e0;
    real _t04C0 = 0.e0;
    real _t04C1 = 0.1e1;
    vec4 _t04C2 = [_t04BE, _t04BF, _t04C0, _t04C1];
    tensor[4,4] _t04C3 = [_t04B3, _t04B8, _t04BD, _t04C2];
    real _t04C4 = -0.333333333333e0;
    real _t04C5 = 0.666666666667e0;
    real _t04C6 = -0.333333333333e0;
    real _t04C7 = 0.333333333333e0;
    vec4 _t04C8 = [_t04C4, _t04C5, _t04C6, _t04C7];
    real _t04C9 = -0.57735026919e0;
    real _t04CA = -0.57735026919e0;
    real _t04CB = -0.57735026919e0;
    real _t04CC = 0.57735026919e0;
    vec4 _t04CD = [_t04C9, _t04CA, _t04CB, _t04CC];
    real _t04CE = -0.333333333333e0;
    real _t04CF = -0.333333333333e0;
    real _t04D0 = 0.666666666667e0;
    real _t04D1 = 0.333333333333e0;
    vec4 _t04D2 = [_t04CE, _t04CF, _t04D0, _t04D1];
    real _t04D3 = 0.971445146547e-16;
    real _t04D4 = 0.e0;
    real _t04D5 = 0.e0;
    real _t04D6 = 0.1e1;
    vec4 _t04D7 = [_t04D3, _t04D4, _t04D5, _t04D6];
    tensor[4,4] _t04D8 = [_t04C8, _t04CD, _t04D2, _t04D7];
    real _t04D9 = -0.333333333333e0;
    real _t04DA = 0.666666666667e0;
    real _t04DB = -0.333333333333e0;
    real _t04DC = 0.333333333333e0;
    vec4 _t04DD = [_t04D9, _t04DA, _t04DB, _t04DC];
    real _t04DE = -0.333333333333e0;
    real _t04DF = -0.333333333333e0;
    real _t04E0 = 0.666666666667e0;
    real _t04E1 = 0.333333333333e0;
    vec4 _t04E2 = [_t04DE, _t04DF, _t04E0, _t04E1];
    real _t04E3 = 0.57735026919e0;
    real _t04E4 = 0.57735026919e0;
    real _t04E5 = 0.57735026919e0;
    real _t04E6 = -0.57735026919e0;
    vec4 _t04E7 = [_t04E3, _t04E4, _t04E5, _t04E6];
    real _t04E8 = 0.971445146547e-16;
    real _t04E9 = 0.e0;
    real _t04EA = 0.e0;
    real _t04EB = 0.1e1;
    vec4 _t04EC = [_t04E8, _t04E9, _t04EA, _t04EB];
    tensor[4,4] _t04ED = [_t04DD, _t04E2, _t04E7, _t04EC];
    tensor[4,4][4] _t04EE = {_t04AE, _t04C3, _t04D8, _t04ED};
    real _t04EF = 0.57735026919e0;
    real _t04F0 = -0.1e1;
    real _t04F1 = -0.1e1;
    real _t04F2 = 0.1e1;
    vec4 _t04F3 = [_t04EF, _t04F0, _t04F1, _t04F2];
    real _t04F4 = 0.57735026919e0;
    real _t04F5 = 0.1e1;
    real _t04F6 = 0.e0;
    real _t04F7 = 0.e0;
    vec4 _t04F8 = [_t04F4, _t04F5, _t04F6, _t04F7];
    real _t04F9 = 0.57735026919e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.1e1;
    real _t04FC = 0.e0;
    vec4 _t04FD = [_t04F9, _t04FA, _t04FB, _t04FC];
    real _t04FE = 0.e0;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    real _t0501 = 0.1e1;
    vec4 _t0502 = [_t04FE, _t04FF, _t0500, _t0501];
    tensor[4,4] _t0503 = [_t04F3, _t04F8, _t04FD, _t0502];
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    real _t0506 = 0.e0;
    real _t0507 = 0.e0;
    vec4 _t0508 = [_t0504, _t0505, _t0506, _t0507];
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    real _t050B = 0.e0;
    real _t050C = 0.e0;
    vec4 _t050D = [_t0509, _t050A, _t050B, _t050C];
    real _t050E = 0.e0;
    real _t050F = 0.e0;
    real _t0510 = 0.1e1;
    real _t0511 = 0.e0;
    vec4 _t0512 = [_t050E, _t050F, _t0510, _t0511];
    real _t0513 = 0.e0;
    real _t0514 = 0.e0;
    real _t0515 = 0.e0;
    real _t0516 = 0.1e1;
    vec4 _t0517 = [_t0513, _t0514, _t0515, _t0516];
    tensor[4,4] _t0518 = [_t0508, _t050D, _t0512, _t0517];
    real _t0519 = 0.e0;
    real _t051A = 0.1e1;
    real _t051B = 0.e0;
    real _t051C = 0.e0;
    vec4 _t051D = [_t0519, _t051A, _t051B, _t051C];
    real _t051E = -0.1e1;
    real _t051F = 0.e0;
    real _t0520 = 0.e0;
    real _t0521 = 0.e0;
    vec4 _t0522 = [_t051E, _t051F, _t0520, _t0521];
    real _t0523 = 0.e0;
    real _t0524 = 0.e0;
    real _t0525 = 0.1e1;
    real _t0526 = 0.e0;
    vec4 _t0527 = [_t0523, _t0524, _t0525, _t0526];
    real _t0528 = 0.e0;
    real _t0529 = 0.e0;
    real _t052A = 0.e0;
    real _t052B = 0.1e1;
    vec4 _t052C = [_t0528, _t0529, _t052A, _t052B];
    tensor[4,4] _t052D = [_t051D, _t0522, _t0527, _t052C];
    real _t052E = 0.e0;
    real _t052F = 0.1e1;
    real _t0530 = 0.e0;
    real _t0531 = 0.e0;
    vec4 _t0532 = [_t052E, _t052F, _t0530, _t0531];
    real _t0533 = 0.e0;
    real _t0534 = 0.e0;
    real _t0535 = 0.1e1;
    real _t0536 = 0.e0;
    vec4 _t0537 = [_t0533, _t0534, _t0535, _t0536];
    real _t0538 = 0.1e1;
    real _t0539 = 0.e0;
    real _t053A = 0.e0;
    real _t053B = 0.e0;
    vec4 _t053C = [_t0538, _t0539, _t053A, _t053B];
    real _t053D = 0.e0;
    real _t053E = 0.e0;
    real _t053F = 0.e0;
    real _t0540 = 0.1e1;
    vec4 _t0541 = [_t053D, _t053E, _t053F, _t0540];
    tensor[4,4] _t0542 = [_t0532, _t0537, _t053C, _t0541];
    tensor[4,4][4] _t0543 = {_t0503, _t0518, _t052D, _t0542};
    real _t0544 = -0.1e1;
    real _t0545 = -0.57735026919e0;
    real _t0546 = -0.1e1;
    real _t0547 = 0.1e1;
    vec4 _t0548 = [_t0544, _t0545, _t0546, _t0547];
    real _t0549 = 0.1e1;
    real _t054A = -0.57735026919e0;
    real _t054B = 0.e0;
    real _t054C = 0.e0;
    vec4 _t054D = [_t0549, _t054A, _t054B, _t054C];
    real _t054E = 0.e0;
    real _t054F = -0.57735026919e0;
    real _t0550 = 0.1e1;
    real _t0551 = 0.e0;
    vec4 _t0552 = [_t054E, _t054F, _t0550, _t0551];
    real _t0553 = 0.e0;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    real _t0556 = 0.1e1;
    vec4 _t0557 = [_t0553, _t0554, _t0555, _t0556];
    tensor[4,4] _t0558 = [_t0548, _t054D, _t0552, _t0557];
    real _t0559 = 0.e0;
    real _t055A = -0.1e1;
    real _t055B = 0.e0;
    real _t055C = 0.e0;
    vec4 _t055D = [_t0559, _t055A, _t055B, _t055C];
    real _t055E = 0.1e1;
    real _t055F = 0.e0;
    real _t0560 = 0.e0;
    real _t0561 = 0.e0;
    vec4 _t0562 = [_t055E, _t055F, _t0560, _t0561];
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.1e1;
    real _t0566 = 0.e0;
    vec4 _t0567 = [_t0563, _t0564, _t0565, _t0566];
    real _t0568 = 0.e0;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    real _t056B = 0.1e1;
    vec4 _t056C = [_t0568, _t0569, _t056A, _t056B];
    tensor[4,4] _t056D = [_t055D, _t0562, _t0567, _t056C];
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    real _t0570 = 0.e0;
    real _t0571 = 0.e0;
    vec4 _t0572 = [_t056E, _t056F, _t0570, _t0571];
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    real _t0575 = 0.e0;
    real _t0576 = 0.e0;
    vec4 _t0577 = [_t0573, _t0574, _t0575, _t0576];
    real _t0578 = 0.e0;
    real _t0579 = 0.e0;
    real _t057A = 0.1e1;
    real _t057B = 0.e0;
    vec4 _t057C = [_t0578, _t0579, _t057A, _t057B];
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    real _t0580 = 0.1e1;
    vec4 _t0581 = [_t057D, _t057E, _t057F, _t0580];
    tensor[4,4] _t0582 = [_t0572, _t0577, _t057C, _t0581];
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    real _t0585 = 0.e0;
    real _t0586 = 0.e0;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    real _t0588 = 0.e0;
    real _t0589 = 0.e0;
    real _t058A = 0.1e1;
    real _t058B = 0.e0;
    vec4 _t058C = [_t0588, _t0589, _t058A, _t058B];
    real _t058D = 0.e0;
    real _t058E = -0.1e1;
    real _t058F = 0.e0;
    real _t0590 = 0.e0;
    vec4 _t0591 = [_t058D, _t058E, _t058F, _t0590];
    real _t0592 = 0.e0;
    real _t0593 = 0.e0;
    real _t0594 = 0.e0;
    real _t0595 = 0.1e1;
    vec4 _t0596 = [_t0592, _t0593, _t0594, _t0595];
    tensor[4,4] _t0597 = [_t0587, _t058C, _t0591, _t0596];
    tensor[4,4][4] _t0598 = {_t0558, _t056D, _t0582, _t0597};
    real _t0599 = -0.1e1;
    real _t059A = -0.1e1;
    real _t059B = 0.57735026919e0;
    real _t059C = 0.1e1;
    vec4 _t059D = [_t0599, _t059A, _t059B, _t059C];
    real _t059E = 0.1e1;
    real _t059F = 0.e0;
    real _t05A0 = 0.57735026919e0;
    real _t05A1 = 0.e0;
    vec4 _t05A2 = [_t059E, _t059F, _t05A0, _t05A1];
    real _t05A3 = 0.e0;
    real _t05A4 = 0.1e1;
    real _t05A5 = 0.57735026919e0;
    real _t05A6 = 0.e0;
    vec4 _t05A7 = [_t05A3, _t05A4, _t05A5, _t05A6];
    real _t05A8 = 0.e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    real _t05AB = 0.1e1;
    vec4 _t05AC = [_t05A8, _t05A9, _t05AA, _t05AB];
    tensor[4,4] _t05AD = [_t059D, _t05A2, _t05A7, _t05AC];
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.1e1;
    real _t05B1 = 0.e0;
    vec4 _t05B2 = [_t05AE, _t05AF, _t05B0, _t05B1];
    real _t05B3 = 0.1e1;
    real _t05B4 = 0.e0;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.e0;
    vec4 _t05B7 = [_t05B3, _t05B4, _t05B5, _t05B6];
    real _t05B8 = 0.e0;
    real _t05B9 = 0.1e1;
    real _t05BA = 0.e0;
    real _t05BB = 0.e0;
    vec4 _t05BC = [_t05B8, _t05B9, _t05BA, _t05BB];
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    real _t05C0 = 0.1e1;
    vec4 _t05C1 = [_t05BD, _t05BE, _t05BF, _t05C0];
    tensor[4,4] _t05C2 = [_t05B2, _t05B7, _t05BC, _t05C1];
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.e0;
    real _t05C6 = 0.e0;
    vec4 _t05C7 = [_t05C3, _t05C4, _t05C5, _t05C6];
    real _t05C8 = 0.e0;
    real _t05C9 = 0.e0;
    real _t05CA = -0.1e1;
    real _t05CB = 0.e0;
    vec4 _t05CC = [_t05C8, _t05C9, _t05CA, _t05CB];
    real _t05CD = 0.e0;
    real _t05CE = 0.1e1;
    real _t05CF = 0.e0;
    real _t05D0 = 0.e0;
    vec4 _t05D1 = [_t05CD, _t05CE, _t05CF, _t05D0];
    real _t05D2 = 0.e0;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    real _t05D5 = 0.1e1;
    vec4 _t05D6 = [_t05D2, _t05D3, _t05D4, _t05D5];
    tensor[4,4] _t05D7 = [_t05C7, _t05CC, _t05D1, _t05D6];
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    real _t05DF = 0.e0;
    real _t05E0 = 0.e0;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.1e1;
    real _t05E5 = 0.e0;
    vec4 _t05E6 = [_t05E2, _t05E3, _t05E4, _t05E5];
    real _t05E7 = 0.e0;
    real _t05E8 = 0.e0;
    real _t05E9 = 0.e0;
    real _t05EA = 0.1e1;
    vec4 _t05EB = [_t05E7, _t05E8, _t05E9, _t05EA];
    tensor[4,4] _t05EC = [_t05DC, _t05E1, _t05E6, _t05EB];
    tensor[4,4][4] _t05ED = {_t05AD, _t05C2, _t05D7, _t05EC};
    tensor[4,4][4][4] _t05EE = {_t04EE, _t0543, _t0598, _t05ED};
    real _t05EF = time0486[1];
    int _t05F0 = prim $r2i01B7 (_t05EF);
    tensor[4,4][4] _t05F1 = prim $sub01C0<tensor[4,4][4]; %4> (_t05EE, _t05F0);
    real _t05F2 = time0486[1];
    int _t05F3 = prim $r2i01B7 (_t05F2);
    int[2] _t05F4 = func nextCell4048A (_t05F3, cellId0483, mesh0482);
    int _t05F5 = 1;
    int _t05F6 = prim $sub01C0<int; %2> (_t05F4, _t05F5);
    tensor[4,4] _t05F7 = prim $sub01C0<tensor[4,4]; %4> (_t05F1, _t05F6);
    string _t05F8 = "\n";
    print (_t048F, _t0491, _t0492, _t0497, _t0498, _t0499, _t05F7, _t05F8);
    real _t05F9 = time0486[1];
    int _t05FA = prim $r2i01B7 (_t05F9);
    int[2] _t05FB = func nextCell4048A (_t05FA, cellId0483, mesh0482);
    int _t05FC = 0;
    int _t05FD = prim $sub01C0<int; %2> (_t05FB, _t05FC);
    real _t05FE = 0.1e1;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    real _t0601 = 0.e0;
    vec4 _t0602 = [_t05FE, _t05FF, _t0600, _t0601];
    real _t0603 = 0.e0;
    real _t0604 = 0.1e1;
    real _t0605 = 0.e0;
    real _t0606 = 0.e0;
    vec4 _t0607 = [_t0603, _t0604, _t0605, _t0606];
    real _t0608 = 0.e0;
    real _t0609 = 0.e0;
    real _t060A = 0.1e1;
    real _t060B = 0.e0;
    vec4 _t060C = [_t0608, _t0609, _t060A, _t060B];
    real _t060D = 0.971445146547e-16;
    real _t060E = 0.e0;
    real _t060F = 0.e0;
    real _t0610 = 0.1e1;
    vec4 _t0611 = [_t060D, _t060E, _t060F, _t0610];
    tensor[4,4] _t0612 = [_t0602, _t0607, _t060C, _t0611];
    real _t0613 = 0.57735026919e0;
    real _t0614 = 0.57735026919e0;
    real _t0615 = 0.57735026919e0;
    real _t0616 = -0.57735026919e0;
    vec4 _t0617 = [_t0613, _t0614, _t0615, _t0616];
    real _t0618 = -0.333333333333e0;
    real _t0619 = 0.666666666667e0;
    real _t061A = -0.333333333333e0;
    real _t061B = 0.333333333333e0;
    vec4 _t061C = [_t0618, _t0619, _t061A, _t061B];
    real _t061D = -0.333333333333e0;
    real _t061E = -0.333333333333e0;
    real _t061F = 0.666666666667e0;
    real _t0620 = 0.333333333333e0;
    vec4 _t0621 = [_t061D, _t061E, _t061F, _t0620];
    real _t0622 = 0.971445146547e-16;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    real _t0625 = 0.1e1;
    vec4 _t0626 = [_t0622, _t0623, _t0624, _t0625];
    tensor[4,4] _t0627 = [_t0617, _t061C, _t0621, _t0626];
    real _t0628 = -0.333333333333e0;
    real _t0629 = 0.666666666667e0;
    real _t062A = -0.333333333333e0;
    real _t062B = 0.333333333333e0;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = -0.57735026919e0;
    real _t062E = -0.57735026919e0;
    real _t062F = -0.57735026919e0;
    real _t0630 = 0.57735026919e0;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    real _t0632 = -0.333333333333e0;
    real _t0633 = -0.333333333333e0;
    real _t0634 = 0.666666666667e0;
    real _t0635 = 0.333333333333e0;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    real _t0637 = 0.971445146547e-16;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    real _t063A = 0.1e1;
    vec4 _t063B = [_t0637, _t0638, _t0639, _t063A];
    tensor[4,4] _t063C = [_t062C, _t0631, _t0636, _t063B];
    real _t063D = -0.333333333333e0;
    real _t063E = 0.666666666667e0;
    real _t063F = -0.333333333333e0;
    real _t0640 = 0.333333333333e0;
    vec4 _t0641 = [_t063D, _t063E, _t063F, _t0640];
    real _t0642 = -0.333333333333e0;
    real _t0643 = -0.333333333333e0;
    real _t0644 = 0.666666666667e0;
    real _t0645 = 0.333333333333e0;
    vec4 _t0646 = [_t0642, _t0643, _t0644, _t0645];
    real _t0647 = 0.57735026919e0;
    real _t0648 = 0.57735026919e0;
    real _t0649 = 0.57735026919e0;
    real _t064A = -0.57735026919e0;
    vec4 _t064B = [_t0647, _t0648, _t0649, _t064A];
    real _t064C = 0.971445146547e-16;
    real _t064D = 0.e0;
    real _t064E = 0.e0;
    real _t064F = 0.1e1;
    vec4 _t0650 = [_t064C, _t064D, _t064E, _t064F];
    tensor[4,4] _t0651 = [_t0641, _t0646, _t064B, _t0650];
    tensor[4,4][4] _t0652 = {_t0612, _t0627, _t063C, _t0651};
    real _t0653 = 0.57735026919e0;
    real _t0654 = -0.1e1;
    real _t0655 = -0.1e1;
    real _t0656 = 0.1e1;
    vec4 _t0657 = [_t0653, _t0654, _t0655, _t0656];
    real _t0658 = 0.57735026919e0;
    real _t0659 = 0.1e1;
    real _t065A = 0.e0;
    real _t065B = 0.e0;
    vec4 _t065C = [_t0658, _t0659, _t065A, _t065B];
    real _t065D = 0.57735026919e0;
    real _t065E = 0.e0;
    real _t065F = 0.1e1;
    real _t0660 = 0.e0;
    vec4 _t0661 = [_t065D, _t065E, _t065F, _t0660];
    real _t0662 = 0.e0;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    real _t0665 = 0.1e1;
    vec4 _t0666 = [_t0662, _t0663, _t0664, _t0665];
    tensor[4,4] _t0667 = [_t0657, _t065C, _t0661, _t0666];
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    real _t066B = 0.e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    real _t066F = 0.e0;
    real _t0670 = 0.e0;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    real _t0672 = 0.e0;
    real _t0673 = 0.e0;
    real _t0674 = 0.1e1;
    real _t0675 = 0.e0;
    vec4 _t0676 = [_t0672, _t0673, _t0674, _t0675];
    real _t0677 = 0.e0;
    real _t0678 = 0.e0;
    real _t0679 = 0.e0;
    real _t067A = 0.1e1;
    vec4 _t067B = [_t0677, _t0678, _t0679, _t067A];
    tensor[4,4] _t067C = [_t066C, _t0671, _t0676, _t067B];
    real _t067D = 0.e0;
    real _t067E = 0.1e1;
    real _t067F = 0.e0;
    real _t0680 = 0.e0;
    vec4 _t0681 = [_t067D, _t067E, _t067F, _t0680];
    real _t0682 = -0.1e1;
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = 0.e0;
    vec4 _t0686 = [_t0682, _t0683, _t0684, _t0685];
    real _t0687 = 0.e0;
    real _t0688 = 0.e0;
    real _t0689 = 0.1e1;
    real _t068A = 0.e0;
    vec4 _t068B = [_t0687, _t0688, _t0689, _t068A];
    real _t068C = 0.e0;
    real _t068D = 0.e0;
    real _t068E = 0.e0;
    real _t068F = 0.1e1;
    vec4 _t0690 = [_t068C, _t068D, _t068E, _t068F];
    tensor[4,4] _t0691 = [_t0681, _t0686, _t068B, _t0690];
    real _t0692 = 0.e0;
    real _t0693 = 0.1e1;
    real _t0694 = 0.e0;
    real _t0695 = 0.e0;
    vec4 _t0696 = [_t0692, _t0693, _t0694, _t0695];
    real _t0697 = 0.e0;
    real _t0698 = 0.e0;
    real _t0699 = 0.1e1;
    real _t069A = 0.e0;
    vec4 _t069B = [_t0697, _t0698, _t0699, _t069A];
    real _t069C = 0.1e1;
    real _t069D = 0.e0;
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    vec4 _t06A0 = [_t069C, _t069D, _t069E, _t069F];
    real _t06A1 = 0.e0;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.e0;
    real _t06A4 = 0.1e1;
    vec4 _t06A5 = [_t06A1, _t06A2, _t06A3, _t06A4];
    tensor[4,4] _t06A6 = [_t0696, _t069B, _t06A0, _t06A5];
    tensor[4,4][4] _t06A7 = {_t0667, _t067C, _t0691, _t06A6};
    real _t06A8 = -0.1e1;
    real _t06A9 = -0.57735026919e0;
    real _t06AA = -0.1e1;
    real _t06AB = 0.1e1;
    vec4 _t06AC = [_t06A8, _t06A9, _t06AA, _t06AB];
    real _t06AD = 0.1e1;
    real _t06AE = -0.57735026919e0;
    real _t06AF = 0.e0;
    real _t06B0 = 0.e0;
    vec4 _t06B1 = [_t06AD, _t06AE, _t06AF, _t06B0];
    real _t06B2 = 0.e0;
    real _t06B3 = -0.57735026919e0;
    real _t06B4 = 0.1e1;
    real _t06B5 = 0.e0;
    vec4 _t06B6 = [_t06B2, _t06B3, _t06B4, _t06B5];
    real _t06B7 = 0.e0;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    real _t06BA = 0.1e1;
    vec4 _t06BB = [_t06B7, _t06B8, _t06B9, _t06BA];
    tensor[4,4] _t06BC = [_t06AC, _t06B1, _t06B6, _t06BB];
    real _t06BD = 0.e0;
    real _t06BE = -0.1e1;
    real _t06BF = 0.e0;
    real _t06C0 = 0.e0;
    vec4 _t06C1 = [_t06BD, _t06BE, _t06BF, _t06C0];
    real _t06C2 = 0.1e1;
    real _t06C3 = 0.e0;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.e0;
    vec4 _t06C6 = [_t06C2, _t06C3, _t06C4, _t06C5];
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.1e1;
    real _t06CA = 0.e0;
    vec4 _t06CB = [_t06C7, _t06C8, _t06C9, _t06CA];
    real _t06CC = 0.e0;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = 0.1e1;
    vec4 _t06D0 = [_t06CC, _t06CD, _t06CE, _t06CF];
    tensor[4,4] _t06D1 = [_t06C1, _t06C6, _t06CB, _t06D0];
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    real _t06D4 = 0.e0;
    real _t06D5 = 0.e0;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    real _t06D9 = 0.e0;
    real _t06DA = 0.e0;
    vec4 _t06DB = [_t06D7, _t06D8, _t06D9, _t06DA];
    real _t06DC = 0.e0;
    real _t06DD = 0.e0;
    real _t06DE = 0.1e1;
    real _t06DF = 0.e0;
    vec4 _t06E0 = [_t06DC, _t06DD, _t06DE, _t06DF];
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    real _t06E4 = 0.1e1;
    vec4 _t06E5 = [_t06E1, _t06E2, _t06E3, _t06E4];
    tensor[4,4] _t06E6 = [_t06D6, _t06DB, _t06E0, _t06E5];
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    real _t06E9 = 0.e0;
    real _t06EA = 0.e0;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    real _t06EC = 0.e0;
    real _t06ED = 0.e0;
    real _t06EE = 0.1e1;
    real _t06EF = 0.e0;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    real _t06F1 = 0.e0;
    real _t06F2 = -0.1e1;
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    vec4 _t06F5 = [_t06F1, _t06F2, _t06F3, _t06F4];
    real _t06F6 = 0.e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.e0;
    real _t06F9 = 0.1e1;
    vec4 _t06FA = [_t06F6, _t06F7, _t06F8, _t06F9];
    tensor[4,4] _t06FB = [_t06EB, _t06F0, _t06F5, _t06FA];
    tensor[4,4][4] _t06FC = {_t06BC, _t06D1, _t06E6, _t06FB};
    real _t06FD = -0.1e1;
    real _t06FE = -0.1e1;
    real _t06FF = 0.57735026919e0;
    real _t0700 = 0.1e1;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = 0.1e1;
    real _t0703 = 0.e0;
    real _t0704 = 0.57735026919e0;
    real _t0705 = 0.e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = 0.e0;
    real _t0708 = 0.1e1;
    real _t0709 = 0.57735026919e0;
    real _t070A = 0.e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    real _t070F = 0.1e1;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    tensor[4,4] _t0711 = [_t0701, _t0706, _t070B, _t0710];
    real _t0712 = 0.e0;
    real _t0713 = 0.e0;
    real _t0714 = 0.1e1;
    real _t0715 = 0.e0;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = 0.1e1;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    real _t071A = 0.e0;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    real _t071C = 0.e0;
    real _t071D = 0.1e1;
    real _t071E = 0.e0;
    real _t071F = 0.e0;
    vec4 _t0720 = [_t071C, _t071D, _t071E, _t071F];
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    vec4 _t0725 = [_t0721, _t0722, _t0723, _t0724];
    tensor[4,4] _t0726 = [_t0716, _t071B, _t0720, _t0725];
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    real _t0729 = 0.e0;
    real _t072A = 0.e0;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    real _t072C = 0.e0;
    real _t072D = 0.e0;
    real _t072E = -0.1e1;
    real _t072F = 0.e0;
    vec4 _t0730 = [_t072C, _t072D, _t072E, _t072F];
    real _t0731 = 0.e0;
    real _t0732 = 0.1e1;
    real _t0733 = 0.e0;
    real _t0734 = 0.e0;
    vec4 _t0735 = [_t0731, _t0732, _t0733, _t0734];
    real _t0736 = 0.e0;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.1e1;
    vec4 _t073A = [_t0736, _t0737, _t0738, _t0739];
    tensor[4,4] _t073B = [_t072B, _t0730, _t0735, _t073A];
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    real _t073E = 0.e0;
    real _t073F = 0.e0;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    real _t0743 = 0.e0;
    real _t0744 = 0.e0;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.1e1;
    real _t0749 = 0.e0;
    vec4 _t074A = [_t0746, _t0747, _t0748, _t0749];
    real _t074B = 0.e0;
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.1e1;
    vec4 _t074F = [_t074B, _t074C, _t074D, _t074E];
    tensor[4,4] _t0750 = [_t0740, _t0745, _t074A, _t074F];
    tensor[4,4][4] _t0751 = {_t0711, _t0726, _t073B, _t0750};
    tensor[4,4][4][4] _t0752 = {_t0652, _t06A7, _t06FC, _t0751};
    real _t0753 = time0486[1];
    int _t0754 = prim $r2i01B7 (_t0753);
    tensor[4,4][4] _t0755 = prim $sub01C0<tensor[4,4][4]; %4> (_t0752, _t0754);
    real _t0756 = time0486[1];
    int _t0757 = prim $r2i01B7 (_t0756);
    int[2] _t0758 = func nextCell4048A (_t0757, cellId0483, mesh0482);
    int _t0759 = 1;
    int _t075A = prim $sub01C0<int; %2> (_t0758, _t0759);
    tensor[4,4] _t075B = prim $sub01C0<tensor[4,4]; %4> (_t0755, _t075A);
    real _t075C = time0486[0];
    vec3 _t075D = prim *0036<$[3]> (_t075C, dPos0485);
    vec3 _t075E = prim +0017<$[3]> (_t075D, refPos0484);
    real _t075F = _t075E[0];
    real _t0760 = time0486[0];
    vec3 _t0761 = prim *0036<$[3]> (_t0760, dPos0485);
    vec3 _t0762 = prim +0017<$[3]> (_t0761, refPos0484);
    real _t0763 = _t0762[1];
    real _t0764 = time0486[0];
    vec3 _t0765 = prim *0036<$[3]> (_t0764, dPos0485);
    vec3 _t0766 = prim +0017<$[3]> (_t0765, refPos0484);
    real _t0767 = _t0766[2];
    real _t0768 = 0.1e1;
    vec4 _t0769 = [_t075F, _t0763, _t0767, _t0768];
    vec4 _t076A = prim •00CE<$[4,4]; $[4]; $[4]> (_t075B, _t0769);
    real _t076B = _t076A[0];
    real _t076C = 0.1e1;
    real _t076D = 0.e0;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    vec4 _t0770 = [_t076C, _t076D, _t076E, _t076F];
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    real _t0774 = 0.e0;
    vec4 _t0775 = [_t0771, _t0772, _t0773, _t0774];
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.1e1;
    real _t0779 = 0.e0;
    vec4 _t077A = [_t0776, _t0777, _t0778, _t0779];
    real _t077B = 0.971445146547e-16;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    real _t077E = 0.1e1;
    vec4 _t077F = [_t077B, _t077C, _t077D, _t077E];
    tensor[4,4] _t0780 = [_t0770, _t0775, _t077A, _t077F];
    real _t0781 = 0.57735026919e0;
    real _t0782 = 0.57735026919e0;
    real _t0783 = 0.57735026919e0;
    real _t0784 = -0.57735026919e0;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    real _t0786 = -0.333333333333e0;
    real _t0787 = 0.666666666667e0;
    real _t0788 = -0.333333333333e0;
    real _t0789 = 0.333333333333e0;
    vec4 _t078A = [_t0786, _t0787, _t0788, _t0789];
    real _t078B = -0.333333333333e0;
    real _t078C = -0.333333333333e0;
    real _t078D = 0.666666666667e0;
    real _t078E = 0.333333333333e0;
    vec4 _t078F = [_t078B, _t078C, _t078D, _t078E];
    real _t0790 = 0.971445146547e-16;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    real _t0793 = 0.1e1;
    vec4 _t0794 = [_t0790, _t0791, _t0792, _t0793];
    tensor[4,4] _t0795 = [_t0785, _t078A, _t078F, _t0794];
    real _t0796 = -0.333333333333e0;
    real _t0797 = 0.666666666667e0;
    real _t0798 = -0.333333333333e0;
    real _t0799 = 0.333333333333e0;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = -0.57735026919e0;
    real _t079C = -0.57735026919e0;
    real _t079D = -0.57735026919e0;
    real _t079E = 0.57735026919e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = -0.333333333333e0;
    real _t07A1 = -0.333333333333e0;
    real _t07A2 = 0.666666666667e0;
    real _t07A3 = 0.333333333333e0;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    real _t07A5 = 0.971445146547e-16;
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.1e1;
    vec4 _t07A9 = [_t07A5, _t07A6, _t07A7, _t07A8];
    tensor[4,4] _t07AA = [_t079A, _t079F, _t07A4, _t07A9];
    real _t07AB = -0.333333333333e0;
    real _t07AC = 0.666666666667e0;
    real _t07AD = -0.333333333333e0;
    real _t07AE = 0.333333333333e0;
    vec4 _t07AF = [_t07AB, _t07AC, _t07AD, _t07AE];
    real _t07B0 = -0.333333333333e0;
    real _t07B1 = -0.333333333333e0;
    real _t07B2 = 0.666666666667e0;
    real _t07B3 = 0.333333333333e0;
    vec4 _t07B4 = [_t07B0, _t07B1, _t07B2, _t07B3];
    real _t07B5 = 0.57735026919e0;
    real _t07B6 = 0.57735026919e0;
    real _t07B7 = 0.57735026919e0;
    real _t07B8 = -0.57735026919e0;
    vec4 _t07B9 = [_t07B5, _t07B6, _t07B7, _t07B8];
    real _t07BA = 0.971445146547e-16;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.1e1;
    vec4 _t07BE = [_t07BA, _t07BB, _t07BC, _t07BD];
    tensor[4,4] _t07BF = [_t07AF, _t07B4, _t07B9, _t07BE];
    tensor[4,4][4] _t07C0 = {_t0780, _t0795, _t07AA, _t07BF};
    real _t07C1 = 0.57735026919e0;
    real _t07C2 = -0.1e1;
    real _t07C3 = -0.1e1;
    real _t07C4 = 0.1e1;
    vec4 _t07C5 = [_t07C1, _t07C2, _t07C3, _t07C4];
    real _t07C6 = 0.57735026919e0;
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.57735026919e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.1e1;
    real _t07CE = 0.e0;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.1e1;
    vec4 _t07D4 = [_t07D0, _t07D1, _t07D2, _t07D3];
    tensor[4,4] _t07D5 = [_t07C5, _t07CA, _t07CF, _t07D4];
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.e0;
    vec4 _t07DA = [_t07D6, _t07D7, _t07D8, _t07D9];
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    real _t07E2 = 0.1e1;
    real _t07E3 = 0.e0;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    real _t07E5 = 0.e0;
    real _t07E6 = 0.e0;
    real _t07E7 = 0.e0;
    real _t07E8 = 0.1e1;
    vec4 _t07E9 = [_t07E5, _t07E6, _t07E7, _t07E8];
    tensor[4,4] _t07EA = [_t07DA, _t07DF, _t07E4, _t07E9];
    real _t07EB = 0.e0;
    real _t07EC = 0.1e1;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    vec4 _t07EF = [_t07EB, _t07EC, _t07ED, _t07EE];
    real _t07F0 = -0.1e1;
    real _t07F1 = 0.e0;
    real _t07F2 = 0.e0;
    real _t07F3 = 0.e0;
    vec4 _t07F4 = [_t07F0, _t07F1, _t07F2, _t07F3];
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    real _t07F7 = 0.1e1;
    real _t07F8 = 0.e0;
    vec4 _t07F9 = [_t07F5, _t07F6, _t07F7, _t07F8];
    real _t07FA = 0.e0;
    real _t07FB = 0.e0;
    real _t07FC = 0.e0;
    real _t07FD = 0.1e1;
    vec4 _t07FE = [_t07FA, _t07FB, _t07FC, _t07FD];
    tensor[4,4] _t07FF = [_t07EF, _t07F4, _t07F9, _t07FE];
    real _t0800 = 0.e0;
    real _t0801 = 0.1e1;
    real _t0802 = 0.e0;
    real _t0803 = 0.e0;
    vec4 _t0804 = [_t0800, _t0801, _t0802, _t0803];
    real _t0805 = 0.e0;
    real _t0806 = 0.e0;
    real _t0807 = 0.1e1;
    real _t0808 = 0.e0;
    vec4 _t0809 = [_t0805, _t0806, _t0807, _t0808];
    real _t080A = 0.1e1;
    real _t080B = 0.e0;
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    vec4 _t080E = [_t080A, _t080B, _t080C, _t080D];
    real _t080F = 0.e0;
    real _t0810 = 0.e0;
    real _t0811 = 0.e0;
    real _t0812 = 0.1e1;
    vec4 _t0813 = [_t080F, _t0810, _t0811, _t0812];
    tensor[4,4] _t0814 = [_t0804, _t0809, _t080E, _t0813];
    tensor[4,4][4] _t0815 = {_t07D5, _t07EA, _t07FF, _t0814};
    real _t0816 = -0.1e1;
    real _t0817 = -0.57735026919e0;
    real _t0818 = -0.1e1;
    real _t0819 = 0.1e1;
    vec4 _t081A = [_t0816, _t0817, _t0818, _t0819];
    real _t081B = 0.1e1;
    real _t081C = -0.57735026919e0;
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    vec4 _t081F = [_t081B, _t081C, _t081D, _t081E];
    real _t0820 = 0.e0;
    real _t0821 = -0.57735026919e0;
    real _t0822 = 0.1e1;
    real _t0823 = 0.e0;
    vec4 _t0824 = [_t0820, _t0821, _t0822, _t0823];
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    real _t0828 = 0.1e1;
    vec4 _t0829 = [_t0825, _t0826, _t0827, _t0828];
    tensor[4,4] _t082A = [_t081A, _t081F, _t0824, _t0829];
    real _t082B = 0.e0;
    real _t082C = -0.1e1;
    real _t082D = 0.e0;
    real _t082E = 0.e0;
    vec4 _t082F = [_t082B, _t082C, _t082D, _t082E];
    real _t0830 = 0.1e1;
    real _t0831 = 0.e0;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.1e1;
    real _t0838 = 0.e0;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    real _t083D = 0.1e1;
    vec4 _t083E = [_t083A, _t083B, _t083C, _t083D];
    tensor[4,4] _t083F = [_t082F, _t0834, _t0839, _t083E];
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    real _t0842 = 0.e0;
    real _t0843 = 0.e0;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    real _t0847 = 0.e0;
    real _t0848 = 0.e0;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = 0.e0;
    real _t084B = 0.e0;
    real _t084C = 0.1e1;
    real _t084D = 0.e0;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    real _t0852 = 0.1e1;
    vec4 _t0853 = [_t084F, _t0850, _t0851, _t0852];
    tensor[4,4] _t0854 = [_t0844, _t0849, _t084E, _t0853];
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    real _t0857 = 0.e0;
    real _t0858 = 0.e0;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    real _t085A = 0.e0;
    real _t085B = 0.e0;
    real _t085C = 0.1e1;
    real _t085D = 0.e0;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.e0;
    real _t0860 = -0.1e1;
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.e0;
    real _t0865 = 0.e0;
    real _t0866 = 0.e0;
    real _t0867 = 0.1e1;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    tensor[4,4] _t0869 = [_t0859, _t085E, _t0863, _t0868];
    tensor[4,4][4] _t086A = {_t082A, _t083F, _t0854, _t0869};
    real _t086B = -0.1e1;
    real _t086C = -0.1e1;
    real _t086D = 0.57735026919e0;
    real _t086E = 0.1e1;
    vec4 _t086F = [_t086B, _t086C, _t086D, _t086E];
    real _t0870 = 0.1e1;
    real _t0871 = 0.e0;
    real _t0872 = 0.57735026919e0;
    real _t0873 = 0.e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = 0.e0;
    real _t0876 = 0.1e1;
    real _t0877 = 0.57735026919e0;
    real _t0878 = 0.e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    real _t087D = 0.1e1;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    tensor[4,4] _t087F = [_t086F, _t0874, _t0879, _t087E];
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.1e1;
    real _t0883 = 0.e0;
    vec4 _t0884 = [_t0880, _t0881, _t0882, _t0883];
    real _t0885 = 0.1e1;
    real _t0886 = 0.e0;
    real _t0887 = 0.e0;
    real _t0888 = 0.e0;
    vec4 _t0889 = [_t0885, _t0886, _t0887, _t0888];
    real _t088A = 0.e0;
    real _t088B = 0.1e1;
    real _t088C = 0.e0;
    real _t088D = 0.e0;
    vec4 _t088E = [_t088A, _t088B, _t088C, _t088D];
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    tensor[4,4] _t0894 = [_t0884, _t0889, _t088E, _t0893];
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    real _t0897 = 0.e0;
    real _t0898 = 0.e0;
    vec4 _t0899 = [_t0895, _t0896, _t0897, _t0898];
    real _t089A = 0.e0;
    real _t089B = 0.e0;
    real _t089C = -0.1e1;
    real _t089D = 0.e0;
    vec4 _t089E = [_t089A, _t089B, _t089C, _t089D];
    real _t089F = 0.e0;
    real _t08A0 = 0.1e1;
    real _t08A1 = 0.e0;
    real _t08A2 = 0.e0;
    vec4 _t08A3 = [_t089F, _t08A0, _t08A1, _t08A2];
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.1e1;
    vec4 _t08A8 = [_t08A4, _t08A5, _t08A6, _t08A7];
    tensor[4,4] _t08A9 = [_t0899, _t089E, _t08A3, _t08A8];
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    real _t08AC = 0.e0;
    real _t08AD = 0.e0;
    vec4 _t08AE = [_t08AA, _t08AB, _t08AC, _t08AD];
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    real _t08B1 = 0.e0;
    real _t08B2 = 0.e0;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.1e1;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    real _t08BB = 0.e0;
    real _t08BC = 0.1e1;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    tensor[4,4] _t08BE = [_t08AE, _t08B3, _t08B8, _t08BD];
    tensor[4,4][4] _t08BF = {_t087F, _t0894, _t08A9, _t08BE};
    tensor[4,4][4][4] _t08C0 = {_t07C0, _t0815, _t086A, _t08BF};
    real _t08C1 = time0486[1];
    int _t08C2 = prim $r2i01B7 (_t08C1);
    tensor[4,4][4] _t08C3 = prim $sub01C0<tensor[4,4][4]; %4> (_t08C0, _t08C2);
    real _t08C4 = time0486[1];
    int _t08C5 = prim $r2i01B7 (_t08C4);
    int[2] _t08C6 = func nextCell4048A (_t08C5, cellId0483, mesh0482);
    int _t08C7 = 1;
    int _t08C8 = prim $sub01C0<int; %2> (_t08C6, _t08C7);
    tensor[4,4] _t08C9 = prim $sub01C0<tensor[4,4]; %4> (_t08C3, _t08C8);
    real _t08CA = time0486[0];
    vec3 _t08CB = prim *0036<$[3]> (_t08CA, dPos0485);
    vec3 _t08CC = prim +0017<$[3]> (_t08CB, refPos0484);
    real _t08CD = _t08CC[0];
    real _t08CE = time0486[0];
    vec3 _t08CF = prim *0036<$[3]> (_t08CE, dPos0485);
    vec3 _t08D0 = prim +0017<$[3]> (_t08CF, refPos0484);
    real _t08D1 = _t08D0[1];
    real _t08D2 = time0486[0];
    vec3 _t08D3 = prim *0036<$[3]> (_t08D2, dPos0485);
    vec3 _t08D4 = prim +0017<$[3]> (_t08D3, refPos0484);
    real _t08D5 = _t08D4[2];
    real _t08D6 = 0.1e1;
    vec4 _t08D7 = [_t08CD, _t08D1, _t08D5, _t08D6];
    vec4 _t08D8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t08C9, _t08D7);
    real _t08D9 = _t08D8[1];
    real _t08DA = 0.1e1;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    vec4 _t08DE = [_t08DA, _t08DB, _t08DC, _t08DD];
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    real _t08E2 = 0.e0;
    vec4 _t08E3 = [_t08DF, _t08E0, _t08E1, _t08E2];
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.1e1;
    real _t08E7 = 0.e0;
    vec4 _t08E8 = [_t08E4, _t08E5, _t08E6, _t08E7];
    real _t08E9 = 0.971445146547e-16;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    real _t08EC = 0.1e1;
    vec4 _t08ED = [_t08E9, _t08EA, _t08EB, _t08EC];
    tensor[4,4] _t08EE = [_t08DE, _t08E3, _t08E8, _t08ED];
    real _t08EF = 0.57735026919e0;
    real _t08F0 = 0.57735026919e0;
    real _t08F1 = 0.57735026919e0;
    real _t08F2 = -0.57735026919e0;
    vec4 _t08F3 = [_t08EF, _t08F0, _t08F1, _t08F2];
    real _t08F4 = -0.333333333333e0;
    real _t08F5 = 0.666666666667e0;
    real _t08F6 = -0.333333333333e0;
    real _t08F7 = 0.333333333333e0;
    vec4 _t08F8 = [_t08F4, _t08F5, _t08F6, _t08F7];
    real _t08F9 = -0.333333333333e0;
    real _t08FA = -0.333333333333e0;
    real _t08FB = 0.666666666667e0;
    real _t08FC = 0.333333333333e0;
    vec4 _t08FD = [_t08F9, _t08FA, _t08FB, _t08FC];
    real _t08FE = 0.971445146547e-16;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    real _t0901 = 0.1e1;
    vec4 _t0902 = [_t08FE, _t08FF, _t0900, _t0901];
    tensor[4,4] _t0903 = [_t08F3, _t08F8, _t08FD, _t0902];
    real _t0904 = -0.333333333333e0;
    real _t0905 = 0.666666666667e0;
    real _t0906 = -0.333333333333e0;
    real _t0907 = 0.333333333333e0;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = -0.57735026919e0;
    real _t090A = -0.57735026919e0;
    real _t090B = -0.57735026919e0;
    real _t090C = 0.57735026919e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = -0.333333333333e0;
    real _t090F = -0.333333333333e0;
    real _t0910 = 0.666666666667e0;
    real _t0911 = 0.333333333333e0;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    real _t0913 = 0.971445146547e-16;
    real _t0914 = 0.e0;
    real _t0915 = 0.e0;
    real _t0916 = 0.1e1;
    vec4 _t0917 = [_t0913, _t0914, _t0915, _t0916];
    tensor[4,4] _t0918 = [_t0908, _t090D, _t0912, _t0917];
    real _t0919 = -0.333333333333e0;
    real _t091A = 0.666666666667e0;
    real _t091B = -0.333333333333e0;
    real _t091C = 0.333333333333e0;
    vec4 _t091D = [_t0919, _t091A, _t091B, _t091C];
    real _t091E = -0.333333333333e0;
    real _t091F = -0.333333333333e0;
    real _t0920 = 0.666666666667e0;
    real _t0921 = 0.333333333333e0;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.57735026919e0;
    real _t0924 = 0.57735026919e0;
    real _t0925 = 0.57735026919e0;
    real _t0926 = -0.57735026919e0;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    real _t0928 = 0.971445146547e-16;
    real _t0929 = 0.e0;
    real _t092A = 0.e0;
    real _t092B = 0.1e1;
    vec4 _t092C = [_t0928, _t0929, _t092A, _t092B];
    tensor[4,4] _t092D = [_t091D, _t0922, _t0927, _t092C];
    tensor[4,4][4] _t092E = {_t08EE, _t0903, _t0918, _t092D};
    real _t092F = 0.57735026919e0;
    real _t0930 = -0.1e1;
    real _t0931 = -0.1e1;
    real _t0932 = 0.1e1;
    vec4 _t0933 = [_t092F, _t0930, _t0931, _t0932];
    real _t0934 = 0.57735026919e0;
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    vec4 _t0938 = [_t0934, _t0935, _t0936, _t0937];
    real _t0939 = 0.57735026919e0;
    real _t093A = 0.e0;
    real _t093B = 0.1e1;
    real _t093C = 0.e0;
    vec4 _t093D = [_t0939, _t093A, _t093B, _t093C];
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    real _t0941 = 0.1e1;
    vec4 _t0942 = [_t093E, _t093F, _t0940, _t0941];
    tensor[4,4] _t0943 = [_t0933, _t0938, _t093D, _t0942];
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    real _t0947 = 0.e0;
    vec4 _t0948 = [_t0944, _t0945, _t0946, _t0947];
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    vec4 _t094D = [_t0949, _t094A, _t094B, _t094C];
    real _t094E = 0.e0;
    real _t094F = 0.e0;
    real _t0950 = 0.1e1;
    real _t0951 = 0.e0;
    vec4 _t0952 = [_t094E, _t094F, _t0950, _t0951];
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    real _t0955 = 0.e0;
    real _t0956 = 0.1e1;
    vec4 _t0957 = [_t0953, _t0954, _t0955, _t0956];
    tensor[4,4] _t0958 = [_t0948, _t094D, _t0952, _t0957];
    real _t0959 = 0.e0;
    real _t095A = 0.1e1;
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    vec4 _t095D = [_t0959, _t095A, _t095B, _t095C];
    real _t095E = -0.1e1;
    real _t095F = 0.e0;
    real _t0960 = 0.e0;
    real _t0961 = 0.e0;
    vec4 _t0962 = [_t095E, _t095F, _t0960, _t0961];
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    real _t0966 = 0.e0;
    vec4 _t0967 = [_t0963, _t0964, _t0965, _t0966];
    real _t0968 = 0.e0;
    real _t0969 = 0.e0;
    real _t096A = 0.e0;
    real _t096B = 0.1e1;
    vec4 _t096C = [_t0968, _t0969, _t096A, _t096B];
    tensor[4,4] _t096D = [_t095D, _t0962, _t0967, _t096C];
    real _t096E = 0.e0;
    real _t096F = 0.1e1;
    real _t0970 = 0.e0;
    real _t0971 = 0.e0;
    vec4 _t0972 = [_t096E, _t096F, _t0970, _t0971];
    real _t0973 = 0.e0;
    real _t0974 = 0.e0;
    real _t0975 = 0.1e1;
    real _t0976 = 0.e0;
    vec4 _t0977 = [_t0973, _t0974, _t0975, _t0976];
    real _t0978 = 0.1e1;
    real _t0979 = 0.e0;
    real _t097A = 0.e0;
    real _t097B = 0.e0;
    vec4 _t097C = [_t0978, _t0979, _t097A, _t097B];
    real _t097D = 0.e0;
    real _t097E = 0.e0;
    real _t097F = 0.e0;
    real _t0980 = 0.1e1;
    vec4 _t0981 = [_t097D, _t097E, _t097F, _t0980];
    tensor[4,4] _t0982 = [_t0972, _t0977, _t097C, _t0981];
    tensor[4,4][4] _t0983 = {_t0943, _t0958, _t096D, _t0982};
    real _t0984 = -0.1e1;
    real _t0985 = -0.57735026919e0;
    real _t0986 = -0.1e1;
    real _t0987 = 0.1e1;
    vec4 _t0988 = [_t0984, _t0985, _t0986, _t0987];
    real _t0989 = 0.1e1;
    real _t098A = -0.57735026919e0;
    real _t098B = 0.e0;
    real _t098C = 0.e0;
    vec4 _t098D = [_t0989, _t098A, _t098B, _t098C];
    real _t098E = 0.e0;
    real _t098F = -0.57735026919e0;
    real _t0990 = 0.1e1;
    real _t0991 = 0.e0;
    vec4 _t0992 = [_t098E, _t098F, _t0990, _t0991];
    real _t0993 = 0.e0;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    real _t0996 = 0.1e1;
    vec4 _t0997 = [_t0993, _t0994, _t0995, _t0996];
    tensor[4,4] _t0998 = [_t0988, _t098D, _t0992, _t0997];
    real _t0999 = 0.e0;
    real _t099A = -0.1e1;
    real _t099B = 0.e0;
    real _t099C = 0.e0;
    vec4 _t099D = [_t0999, _t099A, _t099B, _t099C];
    real _t099E = 0.1e1;
    real _t099F = 0.e0;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    vec4 _t09A2 = [_t099E, _t099F, _t09A0, _t09A1];
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.1e1;
    real _t09A6 = 0.e0;
    vec4 _t09A7 = [_t09A3, _t09A4, _t09A5, _t09A6];
    real _t09A8 = 0.e0;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    real _t09AB = 0.1e1;
    vec4 _t09AC = [_t09A8, _t09A9, _t09AA, _t09AB];
    tensor[4,4] _t09AD = [_t099D, _t09A2, _t09A7, _t09AC];
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    real _t09B0 = 0.e0;
    real _t09B1 = 0.e0;
    vec4 _t09B2 = [_t09AE, _t09AF, _t09B0, _t09B1];
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    real _t09B5 = 0.e0;
    real _t09B6 = 0.e0;
    vec4 _t09B7 = [_t09B3, _t09B4, _t09B5, _t09B6];
    real _t09B8 = 0.e0;
    real _t09B9 = 0.e0;
    real _t09BA = 0.1e1;
    real _t09BB = 0.e0;
    vec4 _t09BC = [_t09B8, _t09B9, _t09BA, _t09BB];
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    real _t09C0 = 0.1e1;
    vec4 _t09C1 = [_t09BD, _t09BE, _t09BF, _t09C0];
    tensor[4,4] _t09C2 = [_t09B2, _t09B7, _t09BC, _t09C1];
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.e0;
    real _t09C6 = 0.e0;
    vec4 _t09C7 = [_t09C3, _t09C4, _t09C5, _t09C6];
    real _t09C8 = 0.e0;
    real _t09C9 = 0.e0;
    real _t09CA = 0.1e1;
    real _t09CB = 0.e0;
    vec4 _t09CC = [_t09C8, _t09C9, _t09CA, _t09CB];
    real _t09CD = 0.e0;
    real _t09CE = -0.1e1;
    real _t09CF = 0.e0;
    real _t09D0 = 0.e0;
    vec4 _t09D1 = [_t09CD, _t09CE, _t09CF, _t09D0];
    real _t09D2 = 0.e0;
    real _t09D3 = 0.e0;
    real _t09D4 = 0.e0;
    real _t09D5 = 0.1e1;
    vec4 _t09D6 = [_t09D2, _t09D3, _t09D4, _t09D5];
    tensor[4,4] _t09D7 = [_t09C7, _t09CC, _t09D1, _t09D6];
    tensor[4,4][4] _t09D8 = {_t0998, _t09AD, _t09C2, _t09D7};
    real _t09D9 = -0.1e1;
    real _t09DA = -0.1e1;
    real _t09DB = 0.57735026919e0;
    real _t09DC = 0.1e1;
    vec4 _t09DD = [_t09D9, _t09DA, _t09DB, _t09DC];
    real _t09DE = 0.1e1;
    real _t09DF = 0.e0;
    real _t09E0 = 0.57735026919e0;
    real _t09E1 = 0.e0;
    vec4 _t09E2 = [_t09DE, _t09DF, _t09E0, _t09E1];
    real _t09E3 = 0.e0;
    real _t09E4 = 0.1e1;
    real _t09E5 = 0.57735026919e0;
    real _t09E6 = 0.e0;
    vec4 _t09E7 = [_t09E3, _t09E4, _t09E5, _t09E6];
    real _t09E8 = 0.e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    real _t09EB = 0.1e1;
    vec4 _t09EC = [_t09E8, _t09E9, _t09EA, _t09EB];
    tensor[4,4] _t09ED = [_t09DD, _t09E2, _t09E7, _t09EC];
    real _t09EE = 0.e0;
    real _t09EF = 0.e0;
    real _t09F0 = 0.1e1;
    real _t09F1 = 0.e0;
    vec4 _t09F2 = [_t09EE, _t09EF, _t09F0, _t09F1];
    real _t09F3 = 0.1e1;
    real _t09F4 = 0.e0;
    real _t09F5 = 0.e0;
    real _t09F6 = 0.e0;
    vec4 _t09F7 = [_t09F3, _t09F4, _t09F5, _t09F6];
    real _t09F8 = 0.e0;
    real _t09F9 = 0.1e1;
    real _t09FA = 0.e0;
    real _t09FB = 0.e0;
    vec4 _t09FC = [_t09F8, _t09F9, _t09FA, _t09FB];
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    real _t0A00 = 0.1e1;
    vec4 _t0A01 = [_t09FD, _t09FE, _t09FF, _t0A00];
    tensor[4,4] _t0A02 = [_t09F2, _t09F7, _t09FC, _t0A01];
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    real _t0A06 = 0.e0;
    vec4 _t0A07 = [_t0A03, _t0A04, _t0A05, _t0A06];
    real _t0A08 = 0.e0;
    real _t0A09 = 0.e0;
    real _t0A0A = -0.1e1;
    real _t0A0B = 0.e0;
    vec4 _t0A0C = [_t0A08, _t0A09, _t0A0A, _t0A0B];
    real _t0A0D = 0.e0;
    real _t0A0E = 0.1e1;
    real _t0A0F = 0.e0;
    real _t0A10 = 0.e0;
    vec4 _t0A11 = [_t0A0D, _t0A0E, _t0A0F, _t0A10];
    real _t0A12 = 0.e0;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    real _t0A15 = 0.1e1;
    vec4 _t0A16 = [_t0A12, _t0A13, _t0A14, _t0A15];
    tensor[4,4] _t0A17 = [_t0A07, _t0A0C, _t0A11, _t0A16];
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    real _t0A1B = 0.e0;
    vec4 _t0A1C = [_t0A18, _t0A19, _t0A1A, _t0A1B];
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    real _t0A1F = 0.e0;
    real _t0A20 = 0.e0;
    vec4 _t0A21 = [_t0A1D, _t0A1E, _t0A1F, _t0A20];
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.1e1;
    real _t0A25 = 0.e0;
    vec4 _t0A26 = [_t0A22, _t0A23, _t0A24, _t0A25];
    real _t0A27 = 0.e0;
    real _t0A28 = 0.e0;
    real _t0A29 = 0.e0;
    real _t0A2A = 0.1e1;
    vec4 _t0A2B = [_t0A27, _t0A28, _t0A29, _t0A2A];
    tensor[4,4] _t0A2C = [_t0A1C, _t0A21, _t0A26, _t0A2B];
    tensor[4,4][4] _t0A2D = {_t09ED, _t0A02, _t0A17, _t0A2C};
    tensor[4,4][4][4] _t0A2E = {_t092E, _t0983, _t09D8, _t0A2D};
    real _t0A2F = time0486[1];
    int _t0A30 = prim $r2i01B7 (_t0A2F);
    tensor[4,4][4] _t0A31 = prim $sub01C0<tensor[4,4][4]; %4> (_t0A2E, _t0A30);
    real _t0A32 = time0486[1];
    int _t0A33 = prim $r2i01B7 (_t0A32);
    int[2] _t0A34 = func nextCell4048A (_t0A33, cellId0483, mesh0482);
    int _t0A35 = 1;
    int _t0A36 = prim $sub01C0<int; %2> (_t0A34, _t0A35);
    tensor[4,4] _t0A37 = prim $sub01C0<tensor[4,4]; %4> (_t0A31, _t0A36);
    real _t0A38 = time0486[0];
    vec3 _t0A39 = prim *0036<$[3]> (_t0A38, dPos0485);
    vec3 _t0A3A = prim +0017<$[3]> (_t0A39, refPos0484);
    real _t0A3B = _t0A3A[0];
    real _t0A3C = time0486[0];
    vec3 _t0A3D = prim *0036<$[3]> (_t0A3C, dPos0485);
    vec3 _t0A3E = prim +0017<$[3]> (_t0A3D, refPos0484);
    real _t0A3F = _t0A3E[1];
    real _t0A40 = time0486[0];
    vec3 _t0A41 = prim *0036<$[3]> (_t0A40, dPos0485);
    vec3 _t0A42 = prim +0017<$[3]> (_t0A41, refPos0484);
    real _t0A43 = _t0A42[2];
    real _t0A44 = 0.1e1;
    vec4 _t0A45 = [_t0A3B, _t0A3F, _t0A43, _t0A44];
    vec4 _t0A46 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A37, _t0A45);
    real _t0A47 = _t0A46[2];
    vec3 _t0A48 = [_t076B, _t08D9, _t0A47];
    real _t0A49 = time0486[1];
    int _t0A4A = prim $r2i01B7 (_t0A49);
    int[2] _t0A4B = func nextCell4048A (_t0A4A, cellId0483, mesh0482);
    int _t0A4C = 1;
    int _t0A4D = prim $sub01C0<int; %2> (_t0A4B, _t0A4C);
    Femdata: MeshPos _t0A4E = extractFemItemN((mesh0482, _t05FD, _t0A48, _t0A4D),RefBuild(Mesh),);
    return _t0A4E;
  } else {
    real _t0A4F = time0486[0];
    vec3 _t0A50 = prim *0036<$[3]> (_t0A4F, dPos0485);
    vec3 _t0A51 = prim +0017<$[3]> (_t0A50, refPos0484);
    Femdata: MeshPos _t0A52 = extractFemItemN((mesh0482, _t0A51),InvalidBuildBoundary(MeshPos),);
    return _t0A52;
  }
}
function int[2]#8 nextCell4048A (int faceIdx0A53, int cell0A54, Femdata: Mesh mesh0A55)
{
  int _t0A56 = 8;
  int _t0A57 = prim *0033 (cell0A54, _t0A56);
  int _t0A58 = 2;
  int _t0A59 = prim *0033 (faceIdx0A53, _t0A58);
  int _t0A5A = prim +0015 (_t0A57, _t0A59);
  int[2] _t0A5B = extractFemItemN((mesh0A55, _t0A5A),CellFaceCell(Mesh),);
  return _t0A5B;
}
function vec2#0 _enter0A5C (vec3 refPos0A5D, vec3 dPos0A5E)
{
  real time0A5F = +inf;
  int face0A60 = -1;
  real faceTime0A61 = -inf;
  real _t0A62 = 0.57735026919e0;
  real _t0A63 = 0.57735026919e0;
  real _t0A64 = 0.57735026919e0;
  real _t0A65 = 0.57735026919e0;
  vec3 _t0A66 = [_t0A63, _t0A64, _t0A65];
  real _t0A67 = prim •00CE<$[3]; $[3]; $[]> (_t0A66, refPos0A5D);
  real _t0A68 = prim -0026<$[]> (_t0A62, _t0A67);
  real _t0A69 = 0.57735026919e0;
  real _t0A6A = 0.57735026919e0;
  real _t0A6B = 0.57735026919e0;
  vec3 _t0A6C = [_t0A69, _t0A6A, _t0A6B];
  real _t0A6D = prim •00CE<$[3]; $[3]; $[]> (_t0A6C, dPos0A5E);
  real _t0A6E = prim /0055 (_t0A68, _t0A6D);
  real _t0A6F = -0.1e-15;
  bool _t0A70 = prim >=007E (_t0A6E, _t0A6F);
  real _t0A71 = 0.57735026919e0;
  real _t0A72 = 0.57735026919e0;
  real _t0A73 = 0.57735026919e0;
  real _t0A74 = 0.57735026919e0;
  vec3 _t0A75 = [_t0A72, _t0A73, _t0A74];
  real _t0A76 = prim •00CE<$[3]; $[3]; $[]> (_t0A75, refPos0A5D);
  real _t0A77 = prim -0026<$[]> (_t0A71, _t0A76);
  real _t0A78 = 0.57735026919e0;
  real _t0A79 = 0.57735026919e0;
  real _t0A7A = 0.57735026919e0;
  vec3 _t0A7B = [_t0A78, _t0A79, _t0A7A];
  real _t0A7C = prim •00CE<$[3]; $[3]; $[]> (_t0A7B, dPos0A5E);
  real _t0A7D = prim /0055 (_t0A77, _t0A7C);
  bool _t0A7E = prim >0080 (time0A5F, _t0A7D);
  real _t0A7F = 0.57735026919e0;
  real _t0A80 = 0.57735026919e0;
  real _t0A81 = 0.57735026919e0;
  vec3 _t0A82 = [_t0A7F, _t0A80, _t0A81];
  real _t0A83 = prim •00CE<$[3]; $[3]; $[]> (_t0A82, dPos0A5E);
  real _t0A84 = prim |()|00B5<$[]> (_t0A83);
  real _t0A85 = 0.1e-20;
  bool _t0A86 = prim >=007E (_t0A84, _t0A85);
  bool _t0A87 = prim $and01C4 (_t0A7E, _t0A86);
  bool _t0A88 = prim $and01C4 (_t0A70, _t0A87);
  if _t0A88 {
    real _t0A89 = 0.1e1;
    real _t0A8A = 0.1e-8;
    real _t0A8B = prim +0017<$[]> (_t0A89, _t0A8A);
    real _t0A8C = 0.1e1;
    real _t0A8D = 0.1e1;
    real _t0A8E = 0.1e1;
    vec3 _t0A8F = [_t0A8C, _t0A8D, _t0A8E];
    real _t0A90 = 0.57735026919e0;
    real _t0A91 = 0.57735026919e0;
    real _t0A92 = 0.57735026919e0;
    real _t0A93 = 0.57735026919e0;
    vec3 _t0A94 = [_t0A91, _t0A92, _t0A93];
    real _t0A95 = prim •00CE<$[3]; $[3]; $[]> (_t0A94, refPos0A5D);
    real _t0A96 = prim -0026<$[]> (_t0A90, _t0A95);
    real _t0A97 = 0.57735026919e0;
    real _t0A98 = 0.57735026919e0;
    real _t0A99 = 0.57735026919e0;
    vec3 _t0A9A = [_t0A97, _t0A98, _t0A99];
    real _t0A9B = prim •00CE<$[3]; $[3]; $[]> (_t0A9A, dPos0A5E);
    real _t0A9C = prim /0055 (_t0A96, _t0A9B);
    vec3 _t0A9D = prim *0038<$[3]> (dPos0A5E, _t0A9C);
    vec3 _t0A9E = prim +0017<$[3]> (refPos0A5D, _t0A9D);
    real _t0A9F = prim •00CE<$[3]; $[3]; $[]> (_t0A8F, _t0A9E);
    bool _t0AA0 = prim >0080 (_t0A8B, _t0A9F);
    real _t0AA1 = 0.1e-8;
    real _t0AA2 = 0.1e-8;
    real _t0AA3 = 0.1e-8;
    vec3 _t0AA4 = [_t0AA1, _t0AA2, _t0AA3];
    real _t0AA5 = 0.57735026919e0;
    real _t0AA6 = 0.57735026919e0;
    real _t0AA7 = 0.57735026919e0;
    real _t0AA8 = 0.57735026919e0;
    vec3 _t0AA9 = [_t0AA6, _t0AA7, _t0AA8];
    real _t0AAA = prim •00CE<$[3]; $[3]; $[]> (_t0AA9, refPos0A5D);
    real _t0AAB = prim -0026<$[]> (_t0AA5, _t0AAA);
    real _t0AAC = 0.57735026919e0;
    real _t0AAD = 0.57735026919e0;
    real _t0AAE = 0.57735026919e0;
    vec3 _t0AAF = [_t0AAC, _t0AAD, _t0AAE];
    real _t0AB0 = prim •00CE<$[3]; $[3]; $[]> (_t0AAF, dPos0A5E);
    real _t0AB1 = prim /0055 (_t0AAB, _t0AB0);
    vec3 _t0AB2 = prim *0038<$[3]> (dPos0A5E, _t0AB1);
    vec3 _t0AB3 = prim +0017<$[3]> (refPos0A5D, _t0AB2);
    vec3 _t0AB4 = prim +0017<$[3]> (_t0AA4, _t0AB3);
    real _t0AB5 = _t0AB4[0];
    real _t0AB6 = -0.e0;
    bool _t0AB7 = prim >0080 (_t0AB5, _t0AB6);
    real _t0AB8 = 0.1e-8;
    real _t0AB9 = 0.1e-8;
    real _t0ABA = 0.1e-8;
    vec3 _t0ABB = [_t0AB8, _t0AB9, _t0ABA];
    real _t0ABC = 0.57735026919e0;
    real _t0ABD = 0.57735026919e0;
    real _t0ABE = 0.57735026919e0;
    real _t0ABF = 0.57735026919e0;
    vec3 _t0AC0 = [_t0ABD, _t0ABE, _t0ABF];
    real _t0AC1 = prim •00CE<$[3]; $[3]; $[]> (_t0AC0, refPos0A5D);
    real _t0AC2 = prim -0026<$[]> (_t0ABC, _t0AC1);
    real _t0AC3 = 0.57735026919e0;
    real _t0AC4 = 0.57735026919e0;
    real _t0AC5 = 0.57735026919e0;
    vec3 _t0AC6 = [_t0AC3, _t0AC4, _t0AC5];
    real _t0AC7 = prim •00CE<$[3]; $[3]; $[]> (_t0AC6, dPos0A5E);
    real _t0AC8 = prim /0055 (_t0AC2, _t0AC7);
    vec3 _t0AC9 = prim *0038<$[3]> (dPos0A5E, _t0AC8);
    vec3 _t0ACA = prim +0017<$[3]> (refPos0A5D, _t0AC9);
    vec3 _t0ACB = prim +0017<$[3]> (_t0ABB, _t0ACA);
    real _t0ACC = _t0ACB[1];
    real _t0ACD = -0.e0;
    bool _t0ACE = prim >0080 (_t0ACC, _t0ACD);
    real _t0ACF = 0.1e-8;
    real _t0AD0 = 0.1e-8;
    real _t0AD1 = 0.1e-8;
    vec3 _t0AD2 = [_t0ACF, _t0AD0, _t0AD1];
    real _t0AD3 = 0.57735026919e0;
    real _t0AD4 = 0.57735026919e0;
    real _t0AD5 = 0.57735026919e0;
    real _t0AD6 = 0.57735026919e0;
    vec3 _t0AD7 = [_t0AD4, _t0AD5, _t0AD6];
    real _t0AD8 = prim •00CE<$[3]; $[3]; $[]> (_t0AD7, refPos0A5D);
    real _t0AD9 = prim -0026<$[]> (_t0AD3, _t0AD8);
    real _t0ADA = 0.57735026919e0;
    real _t0ADB = 0.57735026919e0;
    real _t0ADC = 0.57735026919e0;
    vec3 _t0ADD = [_t0ADA, _t0ADB, _t0ADC];
    real _t0ADE = prim •00CE<$[3]; $[3]; $[]> (_t0ADD, dPos0A5E);
    real _t0ADF = prim /0055 (_t0AD9, _t0ADE);
    vec3 _t0AE0 = prim *0038<$[3]> (dPos0A5E, _t0ADF);
    vec3 _t0AE1 = prim +0017<$[3]> (refPos0A5D, _t0AE0);
    vec3 _t0AE2 = prim +0017<$[3]> (_t0AD2, _t0AE1);
    real _t0AE3 = _t0AE2[2];
    real _t0AE4 = -0.e0;
    bool _t0AE5 = prim >0080 (_t0AE3, _t0AE4);
    bool _t0AE6 = prim $and01C4 (_t0ACE, _t0AE5);
    bool _t0AE7 = prim $and01C4 (_t0AB7, _t0AE6);
    bool _t0AE8 = prim $and01C4 (_t0AA0, _t0AE7);
    if _t0AE8 {
      real _t0AE9 = 0.57735026919e0;
      real _t0AEA = 0.57735026919e0;
      real _t0AEB = 0.57735026919e0;
      real _t0AEC = 0.57735026919e0;
      vec3 _t0AED = [_t0AEA, _t0AEB, _t0AEC];
      real _t0AEE = prim •00CE<$[3]; $[3]; $[]> (_t0AED, refPos0A5D);
      real _t0AEF = prim -0026<$[]> (_t0AE9, _t0AEE);
      real _t0AF0 = 0.57735026919e0;
      real _t0AF1 = 0.57735026919e0;
      real _t0AF2 = 0.57735026919e0;
      vec3 _t0AF3 = [_t0AF0, _t0AF1, _t0AF2];
      real _t0AF4 = prim •00CE<$[3]; $[3]; $[]> (_t0AF3, dPos0A5E);
      time0A5F = prim /0055 (_t0AEF, _t0AF4);
      face0A60 = 0;
    }
  }
  real _t0AF5 = 0.e0;
  real _t0AF6 = 0.1e1;
  real _t0AF7 = 0.e0;
  real _t0AF8 = 0.e0;
  vec3 _t0AF9 = [_t0AF6, _t0AF7, _t0AF8];
  real _t0AFA = prim •00CE<$[3]; $[3]; $[]> (_t0AF9, refPos0A5D);
  real _t0AFB = prim -0026<$[]> (_t0AF5, _t0AFA);
  real _t0AFC = 0.1e1;
  real _t0AFD = 0.e0;
  real _t0AFE = 0.e0;
  vec3 _t0AFF = [_t0AFC, _t0AFD, _t0AFE];
  real _t0B00 = prim •00CE<$[3]; $[3]; $[]> (_t0AFF, dPos0A5E);
  real _t0B01 = prim /0055 (_t0AFB, _t0B00);
  real _t0B02 = -0.1e-15;
  bool _t0B03 = prim >=007E (_t0B01, _t0B02);
  real _t0B04 = 0.e0;
  real _t0B05 = 0.1e1;
  real _t0B06 = 0.e0;
  real _t0B07 = 0.e0;
  vec3 _t0B08 = [_t0B05, _t0B06, _t0B07];
  real _t0B09 = prim •00CE<$[3]; $[3]; $[]> (_t0B08, refPos0A5D);
  real _t0B0A = prim -0026<$[]> (_t0B04, _t0B09);
  real _t0B0B = 0.1e1;
  real _t0B0C = 0.e0;
  real _t0B0D = 0.e0;
  vec3 _t0B0E = [_t0B0B, _t0B0C, _t0B0D];
  real _t0B0F = prim •00CE<$[3]; $[3]; $[]> (_t0B0E, dPos0A5E);
  real _t0B10 = prim /0055 (_t0B0A, _t0B0F);
  bool _t0B11 = prim >0080 (time0A5F, _t0B10);
  real _t0B12 = 0.1e1;
  real _t0B13 = 0.e0;
  real _t0B14 = 0.e0;
  vec3 _t0B15 = [_t0B12, _t0B13, _t0B14];
  real _t0B16 = prim •00CE<$[3]; $[3]; $[]> (_t0B15, dPos0A5E);
  real _t0B17 = prim |()|00B5<$[]> (_t0B16);
  real _t0B18 = 0.1e-20;
  bool _t0B19 = prim >=007E (_t0B17, _t0B18);
  bool _t0B1A = prim $and01C4 (_t0B11, _t0B19);
  bool _t0B1B = prim $and01C4 (_t0B03, _t0B1A);
  if _t0B1B {
    real _t0B1C = 0.1e1;
    real _t0B1D = 0.1e-8;
    real _t0B1E = prim +0017<$[]> (_t0B1C, _t0B1D);
    real _t0B1F = 0.1e1;
    real _t0B20 = 0.1e1;
    real _t0B21 = 0.1e1;
    vec3 _t0B22 = [_t0B1F, _t0B20, _t0B21];
    real _t0B23 = 0.e0;
    real _t0B24 = 0.1e1;
    real _t0B25 = 0.e0;
    real _t0B26 = 0.e0;
    vec3 _t0B27 = [_t0B24, _t0B25, _t0B26];
    real _t0B28 = prim •00CE<$[3]; $[3]; $[]> (_t0B27, refPos0A5D);
    real _t0B29 = prim -0026<$[]> (_t0B23, _t0B28);
    real _t0B2A = 0.1e1;
    real _t0B2B = 0.e0;
    real _t0B2C = 0.e0;
    vec3 _t0B2D = [_t0B2A, _t0B2B, _t0B2C];
    real _t0B2E = prim •00CE<$[3]; $[3]; $[]> (_t0B2D, dPos0A5E);
    real _t0B2F = prim /0055 (_t0B29, _t0B2E);
    vec3 _t0B30 = prim *0038<$[3]> (dPos0A5E, _t0B2F);
    vec3 _t0B31 = prim +0017<$[3]> (refPos0A5D, _t0B30);
    real _t0B32 = prim •00CE<$[3]; $[3]; $[]> (_t0B22, _t0B31);
    bool _t0B33 = prim >0080 (_t0B1E, _t0B32);
    real _t0B34 = 0.1e-8;
    real _t0B35 = 0.1e-8;
    real _t0B36 = 0.1e-8;
    vec3 _t0B37 = [_t0B34, _t0B35, _t0B36];
    real _t0B38 = 0.e0;
    real _t0B39 = 0.1e1;
    real _t0B3A = 0.e0;
    real _t0B3B = 0.e0;
    vec3 _t0B3C = [_t0B39, _t0B3A, _t0B3B];
    real _t0B3D = prim •00CE<$[3]; $[3]; $[]> (_t0B3C, refPos0A5D);
    real _t0B3E = prim -0026<$[]> (_t0B38, _t0B3D);
    real _t0B3F = 0.1e1;
    real _t0B40 = 0.e0;
    real _t0B41 = 0.e0;
    vec3 _t0B42 = [_t0B3F, _t0B40, _t0B41];
    real _t0B43 = prim •00CE<$[3]; $[3]; $[]> (_t0B42, dPos0A5E);
    real _t0B44 = prim /0055 (_t0B3E, _t0B43);
    vec3 _t0B45 = prim *0038<$[3]> (dPos0A5E, _t0B44);
    vec3 _t0B46 = prim +0017<$[3]> (refPos0A5D, _t0B45);
    vec3 _t0B47 = prim +0017<$[3]> (_t0B37, _t0B46);
    real _t0B48 = _t0B47[0];
    real _t0B49 = -0.e0;
    bool _t0B4A = prim >0080 (_t0B48, _t0B49);
    real _t0B4B = 0.1e-8;
    real _t0B4C = 0.1e-8;
    real _t0B4D = 0.1e-8;
    vec3 _t0B4E = [_t0B4B, _t0B4C, _t0B4D];
    real _t0B4F = 0.e0;
    real _t0B50 = 0.1e1;
    real _t0B51 = 0.e0;
    real _t0B52 = 0.e0;
    vec3 _t0B53 = [_t0B50, _t0B51, _t0B52];
    real _t0B54 = prim •00CE<$[3]; $[3]; $[]> (_t0B53, refPos0A5D);
    real _t0B55 = prim -0026<$[]> (_t0B4F, _t0B54);
    real _t0B56 = 0.1e1;
    real _t0B57 = 0.e0;
    real _t0B58 = 0.e0;
    vec3 _t0B59 = [_t0B56, _t0B57, _t0B58];
    real _t0B5A = prim •00CE<$[3]; $[3]; $[]> (_t0B59, dPos0A5E);
    real _t0B5B = prim /0055 (_t0B55, _t0B5A);
    vec3 _t0B5C = prim *0038<$[3]> (dPos0A5E, _t0B5B);
    vec3 _t0B5D = prim +0017<$[3]> (refPos0A5D, _t0B5C);
    vec3 _t0B5E = prim +0017<$[3]> (_t0B4E, _t0B5D);
    real _t0B5F = _t0B5E[1];
    real _t0B60 = -0.e0;
    bool _t0B61 = prim >0080 (_t0B5F, _t0B60);
    real _t0B62 = 0.1e-8;
    real _t0B63 = 0.1e-8;
    real _t0B64 = 0.1e-8;
    vec3 _t0B65 = [_t0B62, _t0B63, _t0B64];
    real _t0B66 = 0.e0;
    real _t0B67 = 0.1e1;
    real _t0B68 = 0.e0;
    real _t0B69 = 0.e0;
    vec3 _t0B6A = [_t0B67, _t0B68, _t0B69];
    real _t0B6B = prim •00CE<$[3]; $[3]; $[]> (_t0B6A, refPos0A5D);
    real _t0B6C = prim -0026<$[]> (_t0B66, _t0B6B);
    real _t0B6D = 0.1e1;
    real _t0B6E = 0.e0;
    real _t0B6F = 0.e0;
    vec3 _t0B70 = [_t0B6D, _t0B6E, _t0B6F];
    real _t0B71 = prim •00CE<$[3]; $[3]; $[]> (_t0B70, dPos0A5E);
    real _t0B72 = prim /0055 (_t0B6C, _t0B71);
    vec3 _t0B73 = prim *0038<$[3]> (dPos0A5E, _t0B72);
    vec3 _t0B74 = prim +0017<$[3]> (refPos0A5D, _t0B73);
    vec3 _t0B75 = prim +0017<$[3]> (_t0B65, _t0B74);
    real _t0B76 = _t0B75[2];
    real _t0B77 = -0.e0;
    bool _t0B78 = prim >0080 (_t0B76, _t0B77);
    bool _t0B79 = prim $and01C4 (_t0B61, _t0B78);
    bool _t0B7A = prim $and01C4 (_t0B4A, _t0B79);
    bool _t0B7B = prim $and01C4 (_t0B33, _t0B7A);
    if _t0B7B {
      real _t0B7C = 0.e0;
      real _t0B7D = 0.1e1;
      real _t0B7E = 0.e0;
      real _t0B7F = 0.e0;
      vec3 _t0B80 = [_t0B7D, _t0B7E, _t0B7F];
      real _t0B81 = prim •00CE<$[3]; $[3]; $[]> (_t0B80, refPos0A5D);
      real _t0B82 = prim -0026<$[]> (_t0B7C, _t0B81);
      real _t0B83 = 0.1e1;
      real _t0B84 = 0.e0;
      real _t0B85 = 0.e0;
      vec3 _t0B86 = [_t0B83, _t0B84, _t0B85];
      real _t0B87 = prim •00CE<$[3]; $[3]; $[]> (_t0B86, dPos0A5E);
      time0A5F = prim /0055 (_t0B82, _t0B87);
      face0A60 = 1;
    }
  }
  real _t0B88 = 0.e0;
  real _t0B89 = 0.e0;
  real _t0B8A = -0.1e1;
  real _t0B8B = 0.e0;
  vec3 _t0B8C = [_t0B89, _t0B8A, _t0B8B];
  real _t0B8D = prim •00CE<$[3]; $[3]; $[]> (_t0B8C, refPos0A5D);
  real _t0B8E = prim -0026<$[]> (_t0B88, _t0B8D);
  real _t0B8F = 0.e0;
  real _t0B90 = -0.1e1;
  real _t0B91 = 0.e0;
  vec3 _t0B92 = [_t0B8F, _t0B90, _t0B91];
  real _t0B93 = prim •00CE<$[3]; $[3]; $[]> (_t0B92, dPos0A5E);
  real _t0B94 = prim /0055 (_t0B8E, _t0B93);
  real _t0B95 = -0.1e-15;
  bool _t0B96 = prim >=007E (_t0B94, _t0B95);
  real _t0B97 = 0.e0;
  real _t0B98 = 0.e0;
  real _t0B99 = -0.1e1;
  real _t0B9A = 0.e0;
  vec3 _t0B9B = [_t0B98, _t0B99, _t0B9A];
  real _t0B9C = prim •00CE<$[3]; $[3]; $[]> (_t0B9B, refPos0A5D);
  real _t0B9D = prim -0026<$[]> (_t0B97, _t0B9C);
  real _t0B9E = 0.e0;
  real _t0B9F = -0.1e1;
  real _t0BA0 = 0.e0;
  vec3 _t0BA1 = [_t0B9E, _t0B9F, _t0BA0];
  real _t0BA2 = prim •00CE<$[3]; $[3]; $[]> (_t0BA1, dPos0A5E);
  real _t0BA3 = prim /0055 (_t0B9D, _t0BA2);
  bool _t0BA4 = prim >0080 (time0A5F, _t0BA3);
  real _t0BA5 = 0.e0;
  real _t0BA6 = -0.1e1;
  real _t0BA7 = 0.e0;
  vec3 _t0BA8 = [_t0BA5, _t0BA6, _t0BA7];
  real _t0BA9 = prim •00CE<$[3]; $[3]; $[]> (_t0BA8, dPos0A5E);
  real _t0BAA = prim |()|00B5<$[]> (_t0BA9);
  real _t0BAB = 0.1e-20;
  bool _t0BAC = prim >=007E (_t0BAA, _t0BAB);
  bool _t0BAD = prim $and01C4 (_t0BA4, _t0BAC);
  bool _t0BAE = prim $and01C4 (_t0B96, _t0BAD);
  if _t0BAE {
    real _t0BAF = 0.1e1;
    real _t0BB0 = 0.1e-8;
    real _t0BB1 = prim +0017<$[]> (_t0BAF, _t0BB0);
    real _t0BB2 = 0.1e1;
    real _t0BB3 = 0.1e1;
    real _t0BB4 = 0.1e1;
    vec3 _t0BB5 = [_t0BB2, _t0BB3, _t0BB4];
    real _t0BB6 = 0.e0;
    real _t0BB7 = 0.e0;
    real _t0BB8 = -0.1e1;
    real _t0BB9 = 0.e0;
    vec3 _t0BBA = [_t0BB7, _t0BB8, _t0BB9];
    real _t0BBB = prim •00CE<$[3]; $[3]; $[]> (_t0BBA, refPos0A5D);
    real _t0BBC = prim -0026<$[]> (_t0BB6, _t0BBB);
    real _t0BBD = 0.e0;
    real _t0BBE = -0.1e1;
    real _t0BBF = 0.e0;
    vec3 _t0BC0 = [_t0BBD, _t0BBE, _t0BBF];
    real _t0BC1 = prim •00CE<$[3]; $[3]; $[]> (_t0BC0, dPos0A5E);
    real _t0BC2 = prim /0055 (_t0BBC, _t0BC1);
    vec3 _t0BC3 = prim *0038<$[3]> (dPos0A5E, _t0BC2);
    vec3 _t0BC4 = prim +0017<$[3]> (refPos0A5D, _t0BC3);
    real _t0BC5 = prim •00CE<$[3]; $[3]; $[]> (_t0BB5, _t0BC4);
    bool _t0BC6 = prim >0080 (_t0BB1, _t0BC5);
    real _t0BC7 = 0.1e-8;
    real _t0BC8 = 0.1e-8;
    real _t0BC9 = 0.1e-8;
    vec3 _t0BCA = [_t0BC7, _t0BC8, _t0BC9];
    real _t0BCB = 0.e0;
    real _t0BCC = 0.e0;
    real _t0BCD = -0.1e1;
    real _t0BCE = 0.e0;
    vec3 _t0BCF = [_t0BCC, _t0BCD, _t0BCE];
    real _t0BD0 = prim •00CE<$[3]; $[3]; $[]> (_t0BCF, refPos0A5D);
    real _t0BD1 = prim -0026<$[]> (_t0BCB, _t0BD0);
    real _t0BD2 = 0.e0;
    real _t0BD3 = -0.1e1;
    real _t0BD4 = 0.e0;
    vec3 _t0BD5 = [_t0BD2, _t0BD3, _t0BD4];
    real _t0BD6 = prim •00CE<$[3]; $[3]; $[]> (_t0BD5, dPos0A5E);
    real _t0BD7 = prim /0055 (_t0BD1, _t0BD6);
    vec3 _t0BD8 = prim *0038<$[3]> (dPos0A5E, _t0BD7);
    vec3 _t0BD9 = prim +0017<$[3]> (refPos0A5D, _t0BD8);
    vec3 _t0BDA = prim +0017<$[3]> (_t0BCA, _t0BD9);
    real _t0BDB = _t0BDA[0];
    real _t0BDC = -0.e0;
    bool _t0BDD = prim >0080 (_t0BDB, _t0BDC);
    real _t0BDE = 0.1e-8;
    real _t0BDF = 0.1e-8;
    real _t0BE0 = 0.1e-8;
    vec3 _t0BE1 = [_t0BDE, _t0BDF, _t0BE0];
    real _t0BE2 = 0.e0;
    real _t0BE3 = 0.e0;
    real _t0BE4 = -0.1e1;
    real _t0BE5 = 0.e0;
    vec3 _t0BE6 = [_t0BE3, _t0BE4, _t0BE5];
    real _t0BE7 = prim •00CE<$[3]; $[3]; $[]> (_t0BE6, refPos0A5D);
    real _t0BE8 = prim -0026<$[]> (_t0BE2, _t0BE7);
    real _t0BE9 = 0.e0;
    real _t0BEA = -0.1e1;
    real _t0BEB = 0.e0;
    vec3 _t0BEC = [_t0BE9, _t0BEA, _t0BEB];
    real _t0BED = prim •00CE<$[3]; $[3]; $[]> (_t0BEC, dPos0A5E);
    real _t0BEE = prim /0055 (_t0BE8, _t0BED);
    vec3 _t0BEF = prim *0038<$[3]> (dPos0A5E, _t0BEE);
    vec3 _t0BF0 = prim +0017<$[3]> (refPos0A5D, _t0BEF);
    vec3 _t0BF1 = prim +0017<$[3]> (_t0BE1, _t0BF0);
    real _t0BF2 = _t0BF1[1];
    real _t0BF3 = -0.e0;
    bool _t0BF4 = prim >0080 (_t0BF2, _t0BF3);
    real _t0BF5 = 0.1e-8;
    real _t0BF6 = 0.1e-8;
    real _t0BF7 = 0.1e-8;
    vec3 _t0BF8 = [_t0BF5, _t0BF6, _t0BF7];
    real _t0BF9 = 0.e0;
    real _t0BFA = 0.e0;
    real _t0BFB = -0.1e1;
    real _t0BFC = 0.e0;
    vec3 _t0BFD = [_t0BFA, _t0BFB, _t0BFC];
    real _t0BFE = prim •00CE<$[3]; $[3]; $[]> (_t0BFD, refPos0A5D);
    real _t0BFF = prim -0026<$[]> (_t0BF9, _t0BFE);
    real _t0C00 = 0.e0;
    real _t0C01 = -0.1e1;
    real _t0C02 = 0.e0;
    vec3 _t0C03 = [_t0C00, _t0C01, _t0C02];
    real _t0C04 = prim •00CE<$[3]; $[3]; $[]> (_t0C03, dPos0A5E);
    real _t0C05 = prim /0055 (_t0BFF, _t0C04);
    vec3 _t0C06 = prim *0038<$[3]> (dPos0A5E, _t0C05);
    vec3 _t0C07 = prim +0017<$[3]> (refPos0A5D, _t0C06);
    vec3 _t0C08 = prim +0017<$[3]> (_t0BF8, _t0C07);
    real _t0C09 = _t0C08[2];
    real _t0C0A = -0.e0;
    bool _t0C0B = prim >0080 (_t0C09, _t0C0A);
    bool _t0C0C = prim $and01C4 (_t0BF4, _t0C0B);
    bool _t0C0D = prim $and01C4 (_t0BDD, _t0C0C);
    bool _t0C0E = prim $and01C4 (_t0BC6, _t0C0D);
    if _t0C0E {
      real _t0C0F = 0.e0;
      real _t0C10 = 0.e0;
      real _t0C11 = -0.1e1;
      real _t0C12 = 0.e0;
      vec3 _t0C13 = [_t0C10, _t0C11, _t0C12];
      real _t0C14 = prim •00CE<$[3]; $[3]; $[]> (_t0C13, refPos0A5D);
      real _t0C15 = prim -0026<$[]> (_t0C0F, _t0C14);
      real _t0C16 = 0.e0;
      real _t0C17 = -0.1e1;
      real _t0C18 = 0.e0;
      vec3 _t0C19 = [_t0C16, _t0C17, _t0C18];
      real _t0C1A = prim •00CE<$[3]; $[3]; $[]> (_t0C19, dPos0A5E);
      time0A5F = prim /0055 (_t0C15, _t0C1A);
      face0A60 = 2;
    }
  }
  real _t0C1B = 0.e0;
  real _t0C1C = 0.e0;
  real _t0C1D = 0.e0;
  real _t0C1E = 0.1e1;
  vec3 _t0C1F = [_t0C1C, _t0C1D, _t0C1E];
  real _t0C20 = prim •00CE<$[3]; $[3]; $[]> (_t0C1F, refPos0A5D);
  real _t0C21 = prim -0026<$[]> (_t0C1B, _t0C20);
  real _t0C22 = 0.e0;
  real _t0C23 = 0.e0;
  real _t0C24 = 0.1e1;
  vec3 _t0C25 = [_t0C22, _t0C23, _t0C24];
  real _t0C26 = prim •00CE<$[3]; $[3]; $[]> (_t0C25, dPos0A5E);
  real _t0C27 = prim /0055 (_t0C21, _t0C26);
  real _t0C28 = -0.1e-15;
  bool _t0C29 = prim >=007E (_t0C27, _t0C28);
  real _t0C2A = 0.e0;
  real _t0C2B = 0.e0;
  real _t0C2C = 0.e0;
  real _t0C2D = 0.1e1;
  vec3 _t0C2E = [_t0C2B, _t0C2C, _t0C2D];
  real _t0C2F = prim •00CE<$[3]; $[3]; $[]> (_t0C2E, refPos0A5D);
  real _t0C30 = prim -0026<$[]> (_t0C2A, _t0C2F);
  real _t0C31 = 0.e0;
  real _t0C32 = 0.e0;
  real _t0C33 = 0.1e1;
  vec3 _t0C34 = [_t0C31, _t0C32, _t0C33];
  real _t0C35 = prim •00CE<$[3]; $[3]; $[]> (_t0C34, dPos0A5E);
  real _t0C36 = prim /0055 (_t0C30, _t0C35);
  bool _t0C37 = prim >0080 (time0A5F, _t0C36);
  real _t0C38 = 0.e0;
  real _t0C39 = 0.e0;
  real _t0C3A = 0.1e1;
  vec3 _t0C3B = [_t0C38, _t0C39, _t0C3A];
  real _t0C3C = prim •00CE<$[3]; $[3]; $[]> (_t0C3B, dPos0A5E);
  real _t0C3D = prim |()|00B5<$[]> (_t0C3C);
  real _t0C3E = 0.1e-20;
  bool _t0C3F = prim >=007E (_t0C3D, _t0C3E);
  bool _t0C40 = prim $and01C4 (_t0C37, _t0C3F);
  bool _t0C41 = prim $and01C4 (_t0C29, _t0C40);
  if _t0C41 {
    real _t0C42 = 0.1e1;
    real _t0C43 = 0.1e-8;
    real _t0C44 = prim +0017<$[]> (_t0C42, _t0C43);
    real _t0C45 = 0.1e1;
    real _t0C46 = 0.1e1;
    real _t0C47 = 0.1e1;
    vec3 _t0C48 = [_t0C45, _t0C46, _t0C47];
    real _t0C49 = 0.e0;
    real _t0C4A = 0.e0;
    real _t0C4B = 0.e0;
    real _t0C4C = 0.1e1;
    vec3 _t0C4D = [_t0C4A, _t0C4B, _t0C4C];
    real _t0C4E = prim •00CE<$[3]; $[3]; $[]> (_t0C4D, refPos0A5D);
    real _t0C4F = prim -0026<$[]> (_t0C49, _t0C4E);
    real _t0C50 = 0.e0;
    real _t0C51 = 0.e0;
    real _t0C52 = 0.1e1;
    vec3 _t0C53 = [_t0C50, _t0C51, _t0C52];
    real _t0C54 = prim •00CE<$[3]; $[3]; $[]> (_t0C53, dPos0A5E);
    real _t0C55 = prim /0055 (_t0C4F, _t0C54);
    vec3 _t0C56 = prim *0038<$[3]> (dPos0A5E, _t0C55);
    vec3 _t0C57 = prim +0017<$[3]> (refPos0A5D, _t0C56);
    real _t0C58 = prim •00CE<$[3]; $[3]; $[]> (_t0C48, _t0C57);
    bool _t0C59 = prim >0080 (_t0C44, _t0C58);
    real _t0C5A = 0.1e-8;
    real _t0C5B = 0.1e-8;
    real _t0C5C = 0.1e-8;
    vec3 _t0C5D = [_t0C5A, _t0C5B, _t0C5C];
    real _t0C5E = 0.e0;
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    real _t0C61 = 0.1e1;
    vec3 _t0C62 = [_t0C5F, _t0C60, _t0C61];
    real _t0C63 = prim •00CE<$[3]; $[3]; $[]> (_t0C62, refPos0A5D);
    real _t0C64 = prim -0026<$[]> (_t0C5E, _t0C63);
    real _t0C65 = 0.e0;
    real _t0C66 = 0.e0;
    real _t0C67 = 0.1e1;
    vec3 _t0C68 = [_t0C65, _t0C66, _t0C67];
    real _t0C69 = prim •00CE<$[3]; $[3]; $[]> (_t0C68, dPos0A5E);
    real _t0C6A = prim /0055 (_t0C64, _t0C69);
    vec3 _t0C6B = prim *0038<$[3]> (dPos0A5E, _t0C6A);
    vec3 _t0C6C = prim +0017<$[3]> (refPos0A5D, _t0C6B);
    vec3 _t0C6D = prim +0017<$[3]> (_t0C5D, _t0C6C);
    real _t0C6E = _t0C6D[0];
    real _t0C6F = -0.e0;
    bool _t0C70 = prim >0080 (_t0C6E, _t0C6F);
    real _t0C71 = 0.1e-8;
    real _t0C72 = 0.1e-8;
    real _t0C73 = 0.1e-8;
    vec3 _t0C74 = [_t0C71, _t0C72, _t0C73];
    real _t0C75 = 0.e0;
    real _t0C76 = 0.e0;
    real _t0C77 = 0.e0;
    real _t0C78 = 0.1e1;
    vec3 _t0C79 = [_t0C76, _t0C77, _t0C78];
    real _t0C7A = prim •00CE<$[3]; $[3]; $[]> (_t0C79, refPos0A5D);
    real _t0C7B = prim -0026<$[]> (_t0C75, _t0C7A);
    real _t0C7C = 0.e0;
    real _t0C7D = 0.e0;
    real _t0C7E = 0.1e1;
    vec3 _t0C7F = [_t0C7C, _t0C7D, _t0C7E];
    real _t0C80 = prim •00CE<$[3]; $[3]; $[]> (_t0C7F, dPos0A5E);
    real _t0C81 = prim /0055 (_t0C7B, _t0C80);
    vec3 _t0C82 = prim *0038<$[3]> (dPos0A5E, _t0C81);
    vec3 _t0C83 = prim +0017<$[3]> (refPos0A5D, _t0C82);
    vec3 _t0C84 = prim +0017<$[3]> (_t0C74, _t0C83);
    real _t0C85 = _t0C84[1];
    real _t0C86 = -0.e0;
    bool _t0C87 = prim >0080 (_t0C85, _t0C86);
    real _t0C88 = 0.1e-8;
    real _t0C89 = 0.1e-8;
    real _t0C8A = 0.1e-8;
    vec3 _t0C8B = [_t0C88, _t0C89, _t0C8A];
    real _t0C8C = 0.e0;
    real _t0C8D = 0.e0;
    real _t0C8E = 0.e0;
    real _t0C8F = 0.1e1;
    vec3 _t0C90 = [_t0C8D, _t0C8E, _t0C8F];
    real _t0C91 = prim •00CE<$[3]; $[3]; $[]> (_t0C90, refPos0A5D);
    real _t0C92 = prim -0026<$[]> (_t0C8C, _t0C91);
    real _t0C93 = 0.e0;
    real _t0C94 = 0.e0;
    real _t0C95 = 0.1e1;
    vec3 _t0C96 = [_t0C93, _t0C94, _t0C95];
    real _t0C97 = prim •00CE<$[3]; $[3]; $[]> (_t0C96, dPos0A5E);
    real _t0C98 = prim /0055 (_t0C92, _t0C97);
    vec3 _t0C99 = prim *0038<$[3]> (dPos0A5E, _t0C98);
    vec3 _t0C9A = prim +0017<$[3]> (refPos0A5D, _t0C99);
    vec3 _t0C9B = prim +0017<$[3]> (_t0C8B, _t0C9A);
    real _t0C9C = _t0C9B[2];
    real _t0C9D = -0.e0;
    bool _t0C9E = prim >0080 (_t0C9C, _t0C9D);
    bool _t0C9F = prim $and01C4 (_t0C87, _t0C9E);
    bool _t0CA0 = prim $and01C4 (_t0C70, _t0C9F);
    bool _t0CA1 = prim $and01C4 (_t0C59, _t0CA0);
    if _t0CA1 {
      real _t0CA2 = 0.e0;
      real _t0CA3 = 0.e0;
      real _t0CA4 = 0.e0;
      real _t0CA5 = 0.1e1;
      vec3 _t0CA6 = [_t0CA3, _t0CA4, _t0CA5];
      real _t0CA7 = prim •00CE<$[3]; $[3]; $[]> (_t0CA6, refPos0A5D);
      real _t0CA8 = prim -0026<$[]> (_t0CA2, _t0CA7);
      real _t0CA9 = 0.e0;
      real _t0CAA = 0.e0;
      real _t0CAB = 0.1e1;
      vec3 _t0CAC = [_t0CA9, _t0CAA, _t0CAB];
      real _t0CAD = prim •00CE<$[3]; $[3]; $[]> (_t0CAC, dPos0A5E);
      time0A5F = prim /0055 (_t0CA8, _t0CAD);
      face0A60 = 3;
    }
  }
  int _t0CAE = -1;
  bool _t0CAF = prim !=0086 (face0A60, _t0CAE);
  if _t0CAF {
    real _t0CB0 = 0.e0;
    real _t0CB1 = prim max0125 (time0A5F, _t0CB0);
    real _t0CB2 = (real)face0A60;
    vec2 _t0CB3 = [_t0CB1, _t0CB2];
    return _t0CB3;
  } else {
    real _t0CB4 = -0.1e1;
    real _t0CB5 = -0.1e1;
    vec2 _t0CB6 = [_t0CB4, _t0CB5];
    return _t0CB6;
  }
}
function vec2#2 _exit0CB7 (vec3 refPos0A5D, vec3 dPos0A5E, int i0CB8)
{
  real time0CB9 = +inf;
  int face0CBA = -1;
  real faceTime0CBB = -inf;
  real _t0CBC = 0.57735026919e0;
  real _t0CBD = 0.57735026919e0;
  real _t0CBE = 0.57735026919e0;
  real _t0CBF = 0.57735026919e0;
  vec3 _t0CC0 = [_t0CBD, _t0CBE, _t0CBF];
  real _t0CC1 = prim •00CE<$[3]; $[3]; $[]> (_t0CC0, refPos0A5D);
  real _t0CC2 = prim -0026<$[]> (_t0CBC, _t0CC1);
  real _t0CC3 = 0.57735026919e0;
  real _t0CC4 = 0.57735026919e0;
  real _t0CC5 = 0.57735026919e0;
  vec3 _t0CC6 = [_t0CC3, _t0CC4, _t0CC5];
  real _t0CC7 = prim •00CE<$[3]; $[3]; $[]> (_t0CC6, dPos0A5E);
  real _t0CC8 = prim /0055 (_t0CC2, _t0CC7);
  real _t0CC9 = -0.1e-15;
  bool _t0CCA = prim >=007E (_t0CC8, _t0CC9);
  real _t0CCB = 0.57735026919e0;
  real _t0CCC = 0.57735026919e0;
  real _t0CCD = 0.57735026919e0;
  real _t0CCE = 0.57735026919e0;
  vec3 _t0CCF = [_t0CCC, _t0CCD, _t0CCE];
  real _t0CD0 = prim •00CE<$[3]; $[3]; $[]> (_t0CCF, refPos0A5D);
  real _t0CD1 = prim -0026<$[]> (_t0CCB, _t0CD0);
  real _t0CD2 = 0.57735026919e0;
  real _t0CD3 = 0.57735026919e0;
  real _t0CD4 = 0.57735026919e0;
  vec3 _t0CD5 = [_t0CD2, _t0CD3, _t0CD4];
  real _t0CD6 = prim •00CE<$[3]; $[3]; $[]> (_t0CD5, dPos0A5E);
  real _t0CD7 = prim /0055 (_t0CD1, _t0CD6);
  bool _t0CD8 = prim >0080 (time0CB9, _t0CD7);
  real _t0CD9 = 0.57735026919e0;
  real _t0CDA = 0.57735026919e0;
  real _t0CDB = 0.57735026919e0;
  vec3 _t0CDC = [_t0CD9, _t0CDA, _t0CDB];
  real _t0CDD = prim •00CE<$[3]; $[3]; $[]> (_t0CDC, dPos0A5E);
  real _t0CDE = prim |()|00B5<$[]> (_t0CDD);
  real _t0CDF = 0.1e-20;
  bool _t0CE0 = prim >=007E (_t0CDE, _t0CDF);
  bool _t0CE1 = prim $and01C4 (_t0CD8, _t0CE0);
  bool _t0CE2 = prim $and01C4 (_t0CCA, _t0CE1);
  if _t0CE2 {
    int _t0CE3 = 0;
    bool _t0CE4 = prim !=0086 (i0CB8, _t0CE3);
    if _t0CE4 {
      real _t0CE5 = 0.57735026919e0;
      real _t0CE6 = 0.57735026919e0;
      real _t0CE7 = 0.57735026919e0;
      real _t0CE8 = 0.57735026919e0;
      vec3 _t0CE9 = [_t0CE6, _t0CE7, _t0CE8];
      real _t0CEA = prim •00CE<$[3]; $[3]; $[]> (_t0CE9, refPos0A5D);
      real _t0CEB = prim -0026<$[]> (_t0CE5, _t0CEA);
      real _t0CEC = 0.57735026919e0;
      real _t0CED = 0.57735026919e0;
      real _t0CEE = 0.57735026919e0;
      vec3 _t0CEF = [_t0CEC, _t0CED, _t0CEE];
      real _t0CF0 = prim •00CE<$[3]; $[3]; $[]> (_t0CEF, dPos0A5E);
      time0CB9 = prim /0055 (_t0CEB, _t0CF0);
      face0CBA = 0;
    } else {
      real _t0CF1 = 0.57735026919e0;
      real _t0CF2 = 0.57735026919e0;
      real _t0CF3 = 0.57735026919e0;
      real _t0CF4 = 0.57735026919e0;
      vec3 _t0CF5 = [_t0CF2, _t0CF3, _t0CF4];
      real _t0CF6 = prim •00CE<$[3]; $[3]; $[]> (_t0CF5, refPos0A5D);
      real _t0CF7 = prim -0026<$[]> (_t0CF1, _t0CF6);
      real _t0CF8 = 0.57735026919e0;
      real _t0CF9 = 0.57735026919e0;
      real _t0CFA = 0.57735026919e0;
      vec3 _t0CFB = [_t0CF8, _t0CF9, _t0CFA];
      real _t0CFC = prim •00CE<$[3]; $[3]; $[]> (_t0CFB, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0CF7, _t0CFC);
    }
  }
  real _t0CFD = 0.e0;
  real _t0CFE = 0.1e1;
  real _t0CFF = 0.e0;
  real _t0D00 = 0.e0;
  vec3 _t0D01 = [_t0CFE, _t0CFF, _t0D00];
  real _t0D02 = prim •00CE<$[3]; $[3]; $[]> (_t0D01, refPos0A5D);
  real _t0D03 = prim -0026<$[]> (_t0CFD, _t0D02);
  real _t0D04 = 0.1e1;
  real _t0D05 = 0.e0;
  real _t0D06 = 0.e0;
  vec3 _t0D07 = [_t0D04, _t0D05, _t0D06];
  real _t0D08 = prim •00CE<$[3]; $[3]; $[]> (_t0D07, dPos0A5E);
  real _t0D09 = prim /0055 (_t0D03, _t0D08);
  real _t0D0A = -0.1e-15;
  bool _t0D0B = prim >=007E (_t0D09, _t0D0A);
  real _t0D0C = 0.e0;
  real _t0D0D = 0.1e1;
  real _t0D0E = 0.e0;
  real _t0D0F = 0.e0;
  vec3 _t0D10 = [_t0D0D, _t0D0E, _t0D0F];
  real _t0D11 = prim •00CE<$[3]; $[3]; $[]> (_t0D10, refPos0A5D);
  real _t0D12 = prim -0026<$[]> (_t0D0C, _t0D11);
  real _t0D13 = 0.1e1;
  real _t0D14 = 0.e0;
  real _t0D15 = 0.e0;
  vec3 _t0D16 = [_t0D13, _t0D14, _t0D15];
  real _t0D17 = prim •00CE<$[3]; $[3]; $[]> (_t0D16, dPos0A5E);
  real _t0D18 = prim /0055 (_t0D12, _t0D17);
  bool _t0D19 = prim >0080 (time0CB9, _t0D18);
  real _t0D1A = 0.1e1;
  real _t0D1B = 0.e0;
  real _t0D1C = 0.e0;
  vec3 _t0D1D = [_t0D1A, _t0D1B, _t0D1C];
  real _t0D1E = prim •00CE<$[3]; $[3]; $[]> (_t0D1D, dPos0A5E);
  real _t0D1F = prim |()|00B5<$[]> (_t0D1E);
  real _t0D20 = 0.1e-20;
  bool _t0D21 = prim >=007E (_t0D1F, _t0D20);
  bool _t0D22 = prim $and01C4 (_t0D19, _t0D21);
  bool _t0D23 = prim $and01C4 (_t0D0B, _t0D22);
  if _t0D23 {
    int _t0D24 = 1;
    bool _t0D25 = prim !=0086 (i0CB8, _t0D24);
    if _t0D25 {
      real _t0D26 = 0.e0;
      real _t0D27 = 0.1e1;
      real _t0D28 = 0.e0;
      real _t0D29 = 0.e0;
      vec3 _t0D2A = [_t0D27, _t0D28, _t0D29];
      real _t0D2B = prim •00CE<$[3]; $[3]; $[]> (_t0D2A, refPos0A5D);
      real _t0D2C = prim -0026<$[]> (_t0D26, _t0D2B);
      real _t0D2D = 0.1e1;
      real _t0D2E = 0.e0;
      real _t0D2F = 0.e0;
      vec3 _t0D30 = [_t0D2D, _t0D2E, _t0D2F];
      real _t0D31 = prim •00CE<$[3]; $[3]; $[]> (_t0D30, dPos0A5E);
      time0CB9 = prim /0055 (_t0D2C, _t0D31);
      face0CBA = 1;
    } else {
      real _t0D32 = 0.e0;
      real _t0D33 = 0.1e1;
      real _t0D34 = 0.e0;
      real _t0D35 = 0.e0;
      vec3 _t0D36 = [_t0D33, _t0D34, _t0D35];
      real _t0D37 = prim •00CE<$[3]; $[3]; $[]> (_t0D36, refPos0A5D);
      real _t0D38 = prim -0026<$[]> (_t0D32, _t0D37);
      real _t0D39 = 0.1e1;
      real _t0D3A = 0.e0;
      real _t0D3B = 0.e0;
      vec3 _t0D3C = [_t0D39, _t0D3A, _t0D3B];
      real _t0D3D = prim •00CE<$[3]; $[3]; $[]> (_t0D3C, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0D38, _t0D3D);
    }
  }
  real _t0D3E = 0.e0;
  real _t0D3F = 0.e0;
  real _t0D40 = -0.1e1;
  real _t0D41 = 0.e0;
  vec3 _t0D42 = [_t0D3F, _t0D40, _t0D41];
  real _t0D43 = prim •00CE<$[3]; $[3]; $[]> (_t0D42, refPos0A5D);
  real _t0D44 = prim -0026<$[]> (_t0D3E, _t0D43);
  real _t0D45 = 0.e0;
  real _t0D46 = -0.1e1;
  real _t0D47 = 0.e0;
  vec3 _t0D48 = [_t0D45, _t0D46, _t0D47];
  real _t0D49 = prim •00CE<$[3]; $[3]; $[]> (_t0D48, dPos0A5E);
  real _t0D4A = prim /0055 (_t0D44, _t0D49);
  real _t0D4B = -0.1e-15;
  bool _t0D4C = prim >=007E (_t0D4A, _t0D4B);
  real _t0D4D = 0.e0;
  real _t0D4E = 0.e0;
  real _t0D4F = -0.1e1;
  real _t0D50 = 0.e0;
  vec3 _t0D51 = [_t0D4E, _t0D4F, _t0D50];
  real _t0D52 = prim •00CE<$[3]; $[3]; $[]> (_t0D51, refPos0A5D);
  real _t0D53 = prim -0026<$[]> (_t0D4D, _t0D52);
  real _t0D54 = 0.e0;
  real _t0D55 = -0.1e1;
  real _t0D56 = 0.e0;
  vec3 _t0D57 = [_t0D54, _t0D55, _t0D56];
  real _t0D58 = prim •00CE<$[3]; $[3]; $[]> (_t0D57, dPos0A5E);
  real _t0D59 = prim /0055 (_t0D53, _t0D58);
  bool _t0D5A = prim >0080 (time0CB9, _t0D59);
  real _t0D5B = 0.e0;
  real _t0D5C = -0.1e1;
  real _t0D5D = 0.e0;
  vec3 _t0D5E = [_t0D5B, _t0D5C, _t0D5D];
  real _t0D5F = prim •00CE<$[3]; $[3]; $[]> (_t0D5E, dPos0A5E);
  real _t0D60 = prim |()|00B5<$[]> (_t0D5F);
  real _t0D61 = 0.1e-20;
  bool _t0D62 = prim >=007E (_t0D60, _t0D61);
  bool _t0D63 = prim $and01C4 (_t0D5A, _t0D62);
  bool _t0D64 = prim $and01C4 (_t0D4C, _t0D63);
  if _t0D64 {
    int _t0D65 = 2;
    bool _t0D66 = prim !=0086 (i0CB8, _t0D65);
    if _t0D66 {
      real _t0D67 = 0.e0;
      real _t0D68 = 0.e0;
      real _t0D69 = -0.1e1;
      real _t0D6A = 0.e0;
      vec3 _t0D6B = [_t0D68, _t0D69, _t0D6A];
      real _t0D6C = prim •00CE<$[3]; $[3]; $[]> (_t0D6B, refPos0A5D);
      real _t0D6D = prim -0026<$[]> (_t0D67, _t0D6C);
      real _t0D6E = 0.e0;
      real _t0D6F = -0.1e1;
      real _t0D70 = 0.e0;
      vec3 _t0D71 = [_t0D6E, _t0D6F, _t0D70];
      real _t0D72 = prim •00CE<$[3]; $[3]; $[]> (_t0D71, dPos0A5E);
      time0CB9 = prim /0055 (_t0D6D, _t0D72);
      face0CBA = 2;
    } else {
      real _t0D73 = 0.e0;
      real _t0D74 = 0.e0;
      real _t0D75 = -0.1e1;
      real _t0D76 = 0.e0;
      vec3 _t0D77 = [_t0D74, _t0D75, _t0D76];
      real _t0D78 = prim •00CE<$[3]; $[3]; $[]> (_t0D77, refPos0A5D);
      real _t0D79 = prim -0026<$[]> (_t0D73, _t0D78);
      real _t0D7A = 0.e0;
      real _t0D7B = -0.1e1;
      real _t0D7C = 0.e0;
      vec3 _t0D7D = [_t0D7A, _t0D7B, _t0D7C];
      real _t0D7E = prim •00CE<$[3]; $[3]; $[]> (_t0D7D, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0D79, _t0D7E);
    }
  }
  real _t0D7F = 0.e0;
  real _t0D80 = 0.e0;
  real _t0D81 = 0.e0;
  real _t0D82 = 0.1e1;
  vec3 _t0D83 = [_t0D80, _t0D81, _t0D82];
  real _t0D84 = prim •00CE<$[3]; $[3]; $[]> (_t0D83, refPos0A5D);
  real _t0D85 = prim -0026<$[]> (_t0D7F, _t0D84);
  real _t0D86 = 0.e0;
  real _t0D87 = 0.e0;
  real _t0D88 = 0.1e1;
  vec3 _t0D89 = [_t0D86, _t0D87, _t0D88];
  real _t0D8A = prim •00CE<$[3]; $[3]; $[]> (_t0D89, dPos0A5E);
  real _t0D8B = prim /0055 (_t0D85, _t0D8A);
  real _t0D8C = -0.1e-15;
  bool _t0D8D = prim >=007E (_t0D8B, _t0D8C);
  real _t0D8E = 0.e0;
  real _t0D8F = 0.e0;
  real _t0D90 = 0.e0;
  real _t0D91 = 0.1e1;
  vec3 _t0D92 = [_t0D8F, _t0D90, _t0D91];
  real _t0D93 = prim •00CE<$[3]; $[3]; $[]> (_t0D92, refPos0A5D);
  real _t0D94 = prim -0026<$[]> (_t0D8E, _t0D93);
  real _t0D95 = 0.e0;
  real _t0D96 = 0.e0;
  real _t0D97 = 0.1e1;
  vec3 _t0D98 = [_t0D95, _t0D96, _t0D97];
  real _t0D99 = prim •00CE<$[3]; $[3]; $[]> (_t0D98, dPos0A5E);
  real _t0D9A = prim /0055 (_t0D94, _t0D99);
  bool _t0D9B = prim >0080 (time0CB9, _t0D9A);
  real _t0D9C = 0.e0;
  real _t0D9D = 0.e0;
  real _t0D9E = 0.1e1;
  vec3 _t0D9F = [_t0D9C, _t0D9D, _t0D9E];
  real _t0DA0 = prim •00CE<$[3]; $[3]; $[]> (_t0D9F, dPos0A5E);
  real _t0DA1 = prim |()|00B5<$[]> (_t0DA0);
  real _t0DA2 = 0.1e-20;
  bool _t0DA3 = prim >=007E (_t0DA1, _t0DA2);
  bool _t0DA4 = prim $and01C4 (_t0D9B, _t0DA3);
  bool _t0DA5 = prim $and01C4 (_t0D8D, _t0DA4);
  if _t0DA5 {
    int _t0DA6 = 3;
    bool _t0DA7 = prim !=0086 (i0CB8, _t0DA6);
    if _t0DA7 {
      real _t0DA8 = 0.e0;
      real _t0DA9 = 0.e0;
      real _t0DAA = 0.e0;
      real _t0DAB = 0.1e1;
      vec3 _t0DAC = [_t0DA9, _t0DAA, _t0DAB];
      real _t0DAD = prim •00CE<$[3]; $[3]; $[]> (_t0DAC, refPos0A5D);
      real _t0DAE = prim -0026<$[]> (_t0DA8, _t0DAD);
      real _t0DAF = 0.e0;
      real _t0DB0 = 0.e0;
      real _t0DB1 = 0.1e1;
      vec3 _t0DB2 = [_t0DAF, _t0DB0, _t0DB1];
      real _t0DB3 = prim •00CE<$[3]; $[3]; $[]> (_t0DB2, dPos0A5E);
      time0CB9 = prim /0055 (_t0DAE, _t0DB3);
      face0CBA = 3;
    } else {
      real _t0DB4 = 0.e0;
      real _t0DB5 = 0.e0;
      real _t0DB6 = 0.e0;
      real _t0DB7 = 0.1e1;
      vec3 _t0DB8 = [_t0DB5, _t0DB6, _t0DB7];
      real _t0DB9 = prim •00CE<$[3]; $[3]; $[]> (_t0DB8, refPos0A5D);
      real _t0DBA = prim -0026<$[]> (_t0DB4, _t0DB9);
      real _t0DBB = 0.e0;
      real _t0DBC = 0.e0;
      real _t0DBD = 0.1e1;
      vec3 _t0DBE = [_t0DBB, _t0DBC, _t0DBD];
      real _t0DBF = prim •00CE<$[3]; $[3]; $[]> (_t0DBE, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0DBA, _t0DBF);
    }
  }
  int _t0DC0 = -1;
  bool _t0DC1 = prim !=0086 (face0CBA, _t0DC0);
  if _t0DC1 {
    real _t0DC2 = 0.e0;
    real _t0DC3 = prim max0125 (time0CB9, _t0DC2);
    real _t0DC4 = (real)face0CBA;
    vec2 _t0DC5 = [_t0DC3, _t0DC4];
    return _t0DC5;
  } else {
    real _t0DC6 = -inf;
    bool _t0DC7 = prim ==0084 (_t0DC6, faceTime0CBB);
    if _t0DC7 {
      real _t0DC8 = -0.1e1;
      real _t0DC9 = -0.1e1;
      vec2 _t0DCA = [_t0DC8, _t0DC9];
      return _t0DCA;
    } else {
      real _t0DCB = (real)i0CB8;
      vec2 _t0DCC = [faceTime0CBB, _t0DCB];
      return _t0DCC;
    }
  }
}
function Femdata: Mesh#0 domain0DCD (Femdata: Space arg00DCE)
{
  Femdata: Mesh _t0DCF = extractFem(arg00DCE, Mesh);
  return _t0DCF;
}
function Femdata: Space#0 space0DD0 (Femdata: FemFunc arg00DD1)
{
  Femdata: Space _t0DD2 = extractFem(arg00DD1, Space);
  return _t0DD2;
}
function Femdata: FuncCell#3 funcCell0DD3 (Femdata: FemFunc arg00DD4, Femdata: MeshCell arg10DD5)
{
  int _t0DD6 = extractFemItem(CellIndex(MeshCell), int, arg10DD5);
  Femdata: FuncCell _t0DD7 = loadFem(FuncCell, arg00DD4, _t0DD6);
  return _t0DD7;
}
function Femdata: MeshPos#2 posMove0DE5 (Femdata: MeshPos x0DE6, vec3 dPos0DE7)
{
  bool _t0DE8 = extractFemItem(Valid(MeshPos), bool, x0DE6);
  bool _t0DE9 = prim !00BC (_t0DE8);
  if _t0DE9 {
    return x0DE6;
  }
  real time0DEA = 0.1e1;
  Femdata: MeshPos cmp0DEB = x0DE6;
  int _t0DEC = 0;
  int[] _t0DED = prim $range01C3 (_t0DEC, timeSteps03AF);
  foreach i0E45 in _t0DED {
    Femdata: Mesh _t0DEE = extractFem(cmp0DEB, Mesh);
    int _t0DEF = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF0 = loadFem(MeshCell, _t0DEE, _t0DEF);
    Femdata: Mesh _t0DF1 = extractFem(_t0DF0, Mesh);
    Femdata: Mesh _t0DF2 = extractFem(cmp0DEB, Mesh);
    int _t0DF3 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF4 = loadFem(MeshCell, _t0DF2, _t0DF3);
    Femdata: Mesh _t0DF5 = extractFem(_t0DF4, Mesh);
    Femdata: Mesh _t0DF6 = extractFem(cmp0DEB, Mesh);
    int _t0DF7 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF8 = loadFem(MeshCell, _t0DF6, _t0DF7);
    int _t0DF9 = extractFemItem(CellIndex(MeshCell), int, _t0DF8);
    field(3)[3] _t0DFA = femField(_t0DF1,_t0DF9,field(3)[3],Transform,);
    field(3)[3,3] _t0DFB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0DFA);
    vec3 _t0DFC = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    tensor[3,3] _t0DFD = prim @00A5<#∞; %3; $[3,3]> (_t0DFB, _t0DFC);
    tensor[3,3] _t0DFE = prim inv0155 (_t0DFD);
    tensor[3,3] _t0DFF = prim *0036<$[3,3]> (time0DEA, _t0DFE);
    vec3 deltaP0E00 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0DFF, dPos0DE7);
    vec3 _t0E01 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    vec3 newPos0E02 = prim +0017<$[3]> (_t0E01, deltaP0E00);
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.1e-8;
    real _t0E05 = prim +0017<$[]> (_t0E03, _t0E04);
    real _t0E06 = 0.1e1;
    real _t0E07 = 0.1e1;
    real _t0E08 = 0.1e1;
    vec3 _t0E09 = [_t0E06, _t0E07, _t0E08];
    real _t0E0A = prim •00CE<$[3]; $[3]; $[]> (_t0E09, newPos0E02);
    bool _t0E0B = prim >0080 (_t0E05, _t0E0A);
    real _t0E0C = 0.1e-8;
    real _t0E0D = 0.1e-8;
    real _t0E0E = 0.1e-8;
    vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
    vec3 _t0E10 = prim +0017<$[3]> (_t0E0F, newPos0E02);
    real _t0E11 = _t0E10[0];
    real _t0E12 = -0.e0;
    bool _t0E13 = prim >0080 (_t0E11, _t0E12);
    real _t0E14 = 0.1e-8;
    real _t0E15 = 0.1e-8;
    real _t0E16 = 0.1e-8;
    vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
    vec3 _t0E18 = prim +0017<$[3]> (_t0E17, newPos0E02);
    real _t0E19 = _t0E18[1];
    real _t0E1A = -0.e0;
    bool _t0E1B = prim >0080 (_t0E19, _t0E1A);
    real _t0E1C = 0.1e-8;
    real _t0E1D = 0.1e-8;
    real _t0E1E = 0.1e-8;
    vec3 _t0E1F = [_t0E1C, _t0E1D, _t0E1E];
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, newPos0E02);
    real _t0E21 = _t0E20[2];
    real _t0E22 = -0.e0;
    bool _t0E23 = prim >0080 (_t0E21, _t0E22);
    bool _t0E24 = prim $and01C4 (_t0E1B, _t0E23);
    bool _t0E25 = prim $and01C4 (_t0E13, _t0E24);
    bool _t0E26 = prim $and01C4 (_t0E0B, _t0E25);
    if _t0E26 {
      Femdata: Mesh _t0E27 = extractFem(cmp0DEB, Mesh);
      int _t0E28 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E29 = loadFem(MeshCell, _t0E27, _t0E28);
      Femdata: Mesh _t0E2A = extractFem(_t0E29, Mesh);
      Femdata: Mesh _t0E2B = extractFem(cmp0DEB, Mesh);
      int _t0E2C = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E2D = loadFem(MeshCell, _t0E2B, _t0E2C);
      int _t0E2E = extractFemItem(CellIndex(MeshCell), int, _t0E2D);
      Femdata: MeshPos nmp0E2F = extractFemItemN((_t0E2A, _t0E2E, newPos0E02),RefBuild(Mesh),);
      return nmp0E2F;
    } else {
      vec3 _t0E30 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
      int _t0E31 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E32 = func _exit0CB7 (_t0E30, deltaP0E00, _t0E31);
      real eTime0E33 = _t0E32[0];
      real _t0E34 = prim *0034 (time0DEA, eTime0E33);
      time0DEA = prim -0026<$[]> (time0DEA, _t0E34);
      Femdata: Mesh _t0E35 = extractFem(cmp0DEB, Mesh);
      int _t0E36 = extractFemItem(CellIndex(Mesh), int, cmp0DEB);
      vec3 _t0E37 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      vec3 _t0E38 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      int _t0E39 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E3A = func _exit0CB7 (_t0E38, deltaP0E00, _t0E39);
      Femdata: MeshPos nmp0E3B = func $exitPos0481 (_t0E35, _t0E36, _t0E37, deltaP0E00, _t0E3A);
      bool _t0E3C;
      bool _t0E3D = extractFemItem(Valid(MeshPos), bool, nmp0E3B);
      bool _t0E3E = prim !00BC (_t0E3D);
      if _t0E3E {
        _t0E3C = true;
      } else {
        bool _t0E3F;
        real _t0E40 = 0.e0;
        bool _t0E41 = prim <007A (eTime0E33, _t0E40);
        if _t0E41 {
          _t0E3F = true;
        } else {
          bool _t0E42;
          real _t0E43 = 0.1e1;
          bool _t0E44 = prim >0080 (eTime0E33, _t0E43);
          if _t0E44 {
            _t0E42 = true;
          } else {
            _t0E42 = prim <007A (time0DEA, timeEps03B0);
          }
          _t0E3F = _t0E42;
        }
        _t0E3C = _t0E3F;
      }
      if _t0E3C {
        return nmp0E3B;
      }
      cmp0DEB = nmp0E3B;
    }
  }
  string _t0E46 = "Took stupid way out!\n";
  print (_t0E46);
  vec3 _t0E47 = func worldPos047C (x0DE6);
  vec3 _t0E48 = prim +0017<$[3]> (_t0E47, dPos0DE7);
  cmp0DEB = func findPos03BE (meshData039F, _t0E48);
  return cmp0DEB;
}
function vec3#2 nV0E49 (Femdata: MeshPos x0E4A)
{
  bool _t0E4B = extractFemItem(Valid(MeshPos), bool, x0E4A);
  if _t0E4B {
    Femdata: Mesh _t0E4C = extractFem(x0E4A, Mesh);
    int _t0E4D = extractFemItem(CellIndex(MeshPos), int, x0E4A);
    Femdata: MeshCell c0E4E = loadFem(MeshCell, _t0E4C, _t0E4D);
    vec3 ref0E4F = extractFemItem(RefPos(MeshPos), vec3, x0E4A);
    Femdata: FuncCell _t0E50 = func funcCell0DD3 (data03AD, c0E4E);
    Femdata: FemFunc _t0E51 = extractFem(_t0E50, FemFunc);
    Femdata: FuncCell _t0E52 = func funcCell0DD3 (data03AD, c0E4E);
    Femdata: FemFunc _t0E53 = extractFem(_t0E52, FemFunc);
    Femdata: Space _t0E54 = extractFem(_t0E53, Space);
    Femdata: FuncCell _t0E55 = func funcCell0DD3 (data03AD, c0E4E);
    int _t0E56 = extractFemItem(CellIndex(FuncCell), int, _t0E55);
    field(3)[3] _t0E57 = femField(_t0E51,_t0E56,field(3)[3],refField,);
    vec3 val0E58 = prim @00A5<#∞; %3; $[3]> (_t0E57, ref0E4F);
    real _t0E59 = prim |()|00B5<$[3]> (val0E58);
    vec3 _t0E5A = prim /0057<$[3]> (val0E58, _t0E59);
    return _t0E5A;
  } else {
    vec3 _t0E5B = prim $zero01BB<$[3]> ();
    return _t0E5B;
  }
}
globalInit {
  int _t03A3 = 0;
  int _t03A1 = 1;
  int _t03A5 = extractFemItem(NumCell(Mesh), int, meshData039F);
  int _t03A4 = prim -0024 (_t03A5, _t03A1);
  int[] _t03A8 = prim $range01C3 (_t03A3, _t03A4);
  Femdata: MeshCell[] _t03A9 = {};
  foreach _t03A7 in _t03A8 {
    Femdata: MeshCell _t03AA = loadFem(MeshCell, meshData039F, _t03A7);
    _t03A9 = prim @0010<Femdata: MeshCell> (_t03A9, _t03AA);
  }
  0cell_meshData03A0 = _t03A9;
  space03AB = loadFem(Space, 0space03AB_intermedateGlobal03AC, meshData039F);
  data03AD = loadFem(FemFunc, 0data03AD_intermedateGlobal03AE, space03AB);
  Femdata: Space _t0DD8 = extractFem(data03AD, Space);
  Femdata: Space _t0DD9 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDA = extractFem(_t0DD9, Mesh);
  field(3)[3] _t0DDB = femField(data03AD,_t0DDA,field(3)[3],refField,findPos03BE );
  Femdata: Space _t0DDC = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDD = extractFem(_t0DDC, Mesh);
  Femdata: Space _t0DDE = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDF = extractFem(_t0DDE, Mesh);
  Femdata: Space _t0DE0 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DE1 = extractFem(_t0DE0, Mesh);
  field(3)[3] _t0DE2 = femField(_t0DDD,_t0DE1,field(3)[3],InvTransform,findPos03BE );
  F0DE3 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t0DDB, _t0DE2);
  simplex0DE4 = func refcell040C (meshData039F);
}
strand gg (vec3 startPos0E5C) {
  output vec3[] stream0E5D;
  output vec3[] newStream0E60;
  int step0E63;
  Femdata: MeshPos cPos0E64;
  vec3 altCPos0E65;
  {
    vec3[1] _t0E5E = {startPos0E5C};
    vec3[] _t0E5F = (vec3[])_t0E5E;
    stream0E5D = _t0E5F;
    vec3[1] _t0E61 = {startPos0E5C};
    vec3[] _t0E62 = (vec3[])_t0E61;
    newStream0E60 = _t0E62;
    step0E63 = 0;
    cPos0E64 = func findPos03BE (meshData039F, startPos0E5C);
    altCPos0E65 = startPos0E5C;
  }
  update
  {
    bool _t0E66;
    bool _t0E67 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E68 = prim !00BC (_t0E67);
    if _t0E68 {
      _t0E66 = true;
    } else {
      bool _t0E69;
      Femdata: MeshPos _t0E6A = func findPos03BE (meshData039F, altCPos0E65);
      bool _t0E6B = extractFemItem(Valid(MeshPos), bool, _t0E6A);
      bool _t0E6C = prim !00BC (_t0E6B);
      if _t0E6C {
        _t0E69 = true;
      } else {
        _t0E69 = prim ==0082 (step0E63, stepMax03B3);
      }
      _t0E66 = _t0E69;
    }
    if _t0E66 {
      stabilize;
    }
    vec3 _t0E6D = func worldPos047C (cPos0E64);
    vec3 _t0E6E = prim -0026<$[3]> (_t0E6D, altCPos0E65);
    real _t0E6F = prim |()|00B5<$[3]> (_t0E6E);
    real _t0E70 = 0.1e-5;
    bool _t0E71 = prim >0080 (_t0E6F, _t0E70);
    if _t0E71 {
      string _t0E72 = "Error in tracing: At step:";
      string _t0E73 = " with particle:";
      string _t0E74 = "\n";
      print (_t0E72, step0E63, _t0E73, startPos0E5C, _t0E74);
    } else {
      string _t0E75 = "fine in cell:";
      Femdata: Mesh _t0E76 = extractFem(cPos0E64, Mesh);
      int _t0E77 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell _t0E78 = loadFem(MeshCell, _t0E76, _t0E77);
      string _t0E79 = "\n";
      print (_t0E75, _t0E78, _t0E79);
    }
    real _t0E7A = 0.5e0;
    real _t0E7B = prim *0034 (_t0E7A, stepSize03B2);
    vec3 _t0E7C = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    vec3 _t0E7D = prim *0036<$[3]> (_t0E7B, _t0E7C);
    vec3 _t0E7E = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    real _t0E7F = prim |()|00B5<$[3]> (_t0E7E);
    vec3 altUp10E80 = prim /0057<$[3]> (_t0E7D, _t0E7F);
    real _t0E81 = 0.5e0;
    real _t0E82 = prim *0034 (_t0E81, stepSize03B2);
    vec3 _t0E83 = func nV0E49 (cPos0E64);
    vec3 up10E84 = prim *0036<$[3]> (_t0E82, _t0E83);
    Femdata: MeshPos intermed0E85 = func posMove0DE5 (cPos0E64, up10E84);
    vec3 altIntermed0E86 = prim +0017<$[3]> (altCPos0E65, altUp10E80);
    bool _t0E87;
    bool _t0E88 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    bool _t0E89 = prim !00BC (_t0E88);
    if _t0E89 {
      _t0E87 = true;
    } else {
      Femdata: MeshPos _t0E8A = func findPos03BE (meshData039F, altIntermed0E86);
      bool _t0E8B = extractFemItem(Valid(MeshPos), bool, _t0E8A);
      _t0E87 = prim !00BC (_t0E8B);
    }
    if _t0E87 {
      stabilize;
    }
    vec3 _t0E8C = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    vec3 _t0E8D = prim *0036<$[3]> (stepSize03B2, _t0E8C);
    vec3 _t0E8E = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    real _t0E8F = prim |()|00B5<$[3]> (_t0E8E);
    vec3 altUp20E90 = prim /0057<$[3]> (_t0E8D, _t0E8F);
    vec3 _t0E91 = func nV0E49 (intermed0E85);
    vec3 up20E92 = prim *0036<$[3]> (stepSize03B2, _t0E91);
    cPos0E64 = func posMove0DE5 (cPos0E64, up20E92);
    altCPos0E65 = prim +0017<$[3]> (altCPos0E65, altUp20E90);
    bool _t0E93 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E94 = prim !00BC (_t0E93);
    if _t0E94 {
      print (stream0E5D);
      stabilize;
    }
    vec3 _t0E95 = func worldPos047C (cPos0E64);
    vec3[1] _t0E96 = {_t0E95};
    vec3[] _t0E97 = (vec3[])_t0E96;
    stream0E5D = prim @0014<vec3> (stream0E5D, _t0E97);
    vec3[1] _t0E98 = {altCPos0E65};
    vec3[] _t0E99 = (vec3[])_t0E98;
    newStream0E60 = prim @0014<vec3> (newStream0E60, _t0E99);
    int _t0E9A = 1;
    step0E63 = prim +0015 (step0E63, _t0E9A);
  }
}
collection {
  foreach x0E9B in startPoints03B1 {
    new gg (x0E9B);
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData039F;
input FemData:Space 0space03AB_intermedateGlobal03AC;
input FemData:FemFunc 0data03AD_intermedateGlobal03AE;
input int timeSteps03AF = <default>;
input real timeEps03B0 = <default>;
input vec3[] startPoints03B1;
input real stepSize03B2 = <default>;
input int stepMax03B3 = <default>;
constants {
  timeSteps03AF = 32;
  timeEps03B0 = 0.1e-6;
  stepSize03B2 = 0.1e-1;
  stepMax03B3 = 100;
}
global Femdata: Space space03AB;
global Femdata: FemFunc data03AD;
global field(3)[3] F0DE3;
function bool#0 !=03B4 (Femdata: MeshCell cell103B5, Femdata: MeshCell cell103B6)
{
  int _t03B7 = extractFemItem(CellIndex(Mesh), int, cell103B5);
  int _t03B8 = extractFemItem(CellIndex(Mesh), int, cell103B6);
  bool _t03B9 = prim !=0086 (_t03B7, _t03B8);
  return _t03B9;
}
function bool#0 ==03BA (Femdata: MeshCell cell103B5, Femdata: MeshCell cell103B6)
{
  int _t03BB = extractFemItem(CellIndex(Mesh), int, cell103B5);
  int _t03BC = extractFemItem(CellIndex(Mesh), int, cell103B6);
  bool _t03BD = prim ==0082 (_t03BB, _t03BC);
  return _t03BD;
}
function Femdata: MeshPos#6 findPos03BE (Femdata: Mesh mesh03BF, vec3 pos03C0)
{
  real _t03C1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn03C4 = [_t03C1, _t03C2, _t03C3];
  newtonInt03C5 = 0;
  cellInt03C6 = extractFemItem(StartCell(Mesh), int, mesh03BF);
  int _t03C7 = extractFemItem(NumCell(Mesh), int, mesh03BF);
  int _t03C8 = 1;
  numCell03C9 = prim -0024 (_t03C7, _t03C8);
  yayCells03CA = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh03BF, pos03C0 : vec3);
  foreach cellItter03CE in yayCells03CA {
    real _t03CB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn03C4 = [_t03CB, _t03CC, _t03CD];
    cellInt03C6 = cellItter03CE;
    field(3)[3] _t03CF = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
    field(3)[3,3] _t03D0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t03CF);
    field(3)[3,3] _t03D1 = prim inv015E<#∞; %3> (_t03D0);
    real _t03D2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t03D5 = [_t03D2, _t03D3, _t03D4];
    A03D6 = prim @00A5<#∞; %3; $[3,3]> (_t03D1, _t03D5);
    int _t03D7 = 0;
    int _t03D8 = 16;
    int[] _t03D9 = prim $range01C3 (_t03D7, _t03D8);
    foreach newtonItter0408 in _t03D9 {
      field(3)[3] _t03DA = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
      field(3)[3] _t03DB = prim -002E<#∞; %3; $[3]> (_t03DA, pos03C0);
      field(3)[3] _t03DC = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A03D6, _t03DB);
      delta03DD = prim @00A5<#∞; %3; $[3]> (_t03DC, xn03C4);
      xn03C4 = prim -0026<$[3]> (xn03C4, delta03DD);
      real _t03DE = 0.1e-7;
      real _t03DF = 0.1e-7;
      real _t03E0 = prim *0034 (_t03DE, _t03DF);
      real _t03E1 = prim •00CE<$[3]; $[3]; $[]> (delta03DD, delta03DD);
      bool _t03E2 = prim >=007E (_t03E0, _t03E1);
      if _t03E2 {
        real _t03E3 = 0.1e1;
        real _t03E4 = 0.1e-8;
        real _t03E5 = prim +0017<$[]> (_t03E3, _t03E4);
        real _t03E6 = 0.1e1;
        real _t03E7 = 0.1e1;
        real _t03E8 = 0.1e1;
        vec3 _t03E9 = [_t03E6, _t03E7, _t03E8];
        real _t03EA = prim •00CE<$[3]; $[3]; $[]> (_t03E9, xn03C4);
        bool _t03EB = prim >0080 (_t03E5, _t03EA);
        real _t03EC = 0.1e-8;
        real _t03ED = 0.1e-8;
        real _t03EE = 0.1e-8;
        vec3 _t03EF = [_t03EC, _t03ED, _t03EE];
        vec3 _t03F0 = prim +0017<$[3]> (_t03EF, xn03C4);
        real _t03F1 = _t03F0[0];
        real _t03F2 = -0.e0;
        bool _t03F3 = prim >0080 (_t03F1, _t03F2);
        real _t03F4 = 0.1e-8;
        real _t03F5 = 0.1e-8;
        real _t03F6 = 0.1e-8;
        vec3 _t03F7 = [_t03F4, _t03F5, _t03F6];
        vec3 _t03F8 = prim +0017<$[3]> (_t03F7, xn03C4);
        real _t03F9 = _t03F8[1];
        real _t03FA = -0.e0;
        bool _t03FB = prim >0080 (_t03F9, _t03FA);
        real _t03FC = 0.1e-8;
        real _t03FD = 0.1e-8;
        real _t03FE = 0.1e-8;
        vec3 _t03FF = [_t03FC, _t03FD, _t03FE];
        vec3 _t0400 = prim +0017<$[3]> (_t03FF, xn03C4);
        real _t0401 = _t0400[2];
        real _t0402 = -0.e0;
        bool _t0403 = prim >0080 (_t0401, _t0402);
        bool _t0404 = prim $and01C4 (_t03FB, _t0403);
        bool _t0405 = prim $and01C4 (_t03F3, _t0404);
        bool _t0406 = prim $and01C4 (_t03EB, _t0405);
        if _t0406 {
          Femdata: MeshPos _t0407 = extractFemItemN((mesh03BF, cellInt03C6, xn03C4, pos03C0),AllBuild(MeshPos),);
          return _t0407;
        }
      }
    }
  }
  string _t0409 = "Bad end 2";
  string _t040A = "\n";
  print (_t0409, _t040A);
  Femdata: MeshPos _t040B = extractFemItemN((mesh03BF),InvalidBuild(MeshPos),);
  return _t040B;
}
function Femdata: RefCell#1 refcell040C (Femdata: Mesh arg0040D)
{
  Femdata: RefCell _t040E = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0040D);
  return _t040E;
}
function Femdata: MeshCell[]#0 cells040F (Femdata: Mesh arg00410)
{
  Femdata: MeshCell[] _t0411 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00410);
  return _t0411;
}
function Femdata: MeshCell[]#0 cells0412 (Femdata: Mesh arg00410)
{
  int _t0413 = 0;
  int _t0414 = extractFemItem(NumCell(Mesh), int, arg00410);
  int[] _t0415 = prim $range01C3 (_t0413, _t0414);
  Femdata: MeshCell[] accum0418 = {};
  foreach i0416 in _t0415 {
    Femdata: MeshCell _t0417 = loadFem(MeshCell, arg00410, i0416);
    accum0418 = prim @0010<Femdata: MeshCell> (accum0418, _t0417);
  }
  return accum0418;
}
function int#0 numCell0419 (Femdata: Mesh arg0040D)
{
  int _t041A = extractFemItem(NumCell(Mesh), int, arg0040D);
  return _t041A;
}
function tensor[3,3,3,3]#0 mesh_t_transform_3041B (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t041F = femField(mesh041E,cell041D,field(3)[3],Transform,);
  field(3)[3,3] _t0420 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t041F);
  field(3)[3,3,3] _t0421 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0420);
  field(3)[3,3,3,3] _t0422 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0421);
  tensor[3,3,3,3] _t0423 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0422, pos041C);
  return _t0423;
}
function tensor[3,3,3]#0 mesh_t_transform_20424 (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t0425 = femField(mesh041E,cell041D,field(3)[3],Transform,);
  field(3)[3,3] _t0426 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0425);
  field(3)[3,3,3] _t0427 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0426);
  tensor[3,3,3] _t0428 = prim @00A5<#∞; %3; $[3,3,3]> (_t0427, pos041C);
  return _t0428;
}
function tensor[3,3]#0 mesh_t_transform_10429 (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t042A = femField(mesh041E,cell041D,field(3)[3],Transform,);
  field(3)[3,3] _t042B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042A);
  tensor[3,3] _t042C = prim @00A5<#∞; %3; $[3,3]> (_t042B, pos041C);
  return _t042C;
}
function vec3#2 mesh_t_transform_0042D (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t042E = femField(mesh041E,cell041D,field(3)[3],Transform,);
  vec3 _t042F = prim @00A5<#∞; %3; $[3]> (_t042E, pos041C);
  return _t042F;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse0430 (vec3 pos0431, int cellInt0432, Femdata: Mesh mesh0433)
{
  real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0435 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0436 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0437 = [_t0434, _t0435, _t0436];
  field(3)[3] _t0438 = femField(mesh0433,cellInt0432,field(3)[3],Transform,);
  field(3)[3,3] _t0439 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0438);
  field(3)[3,3] _t043A = prim inv015E<#∞; %3> (_t0439);
  real _t043B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t043C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t043D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t043E = [_t043B, _t043C, _t043D];
  A043F = prim @00A5<#∞; %3; $[3,3]> (_t043A, _t043E);
  int _t0440 = 0;
  int _t0441 = 16;
  int[] _t0442 = prim $range01C3 (_t0440, _t0441);
  foreach itter0472 in _t0442 {
    field(3)[3] _t0443 = femField(mesh0433,cellInt0432,field(3)[3],Transform,);
    field(3)[3] _t0444 = prim -002E<#∞; %3; $[3]> (_t0443, pos0431);
    field(3)[3] _t0445 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A043F, _t0444);
    delta0446 = prim @00A5<#∞; %3; $[3]> (_t0445, xn0437);
    xn0437 = prim -0026<$[3]> (xn0437, delta0446);
    real _t0447 = 0.1e-7;
    real _t0448 = 0.1e-7;
    real _t0449 = prim *0034 (_t0447, _t0448);
    real _t044A = prim •00CE<$[3]; $[3]; $[]> (delta0446, delta0446);
    bool _t044B = prim >=007E (_t0449, _t044A);
    if _t044B {
      real _t044C = 0.1e1;
      real _t044D = 0.1e-8;
      real _t044E = prim +0017<$[]> (_t044C, _t044D);
      real _t044F = 0.1e1;
      real _t0450 = 0.1e1;
      real _t0451 = 0.1e1;
      vec3 _t0452 = [_t044F, _t0450, _t0451];
      real _t0453 = prim •00CE<$[3]; $[3]; $[]> (_t0452, xn0437);
      bool _t0454 = prim >0080 (_t044E, _t0453);
      real _t0455 = 0.1e-8;
      real _t0456 = 0.1e-8;
      real _t0457 = 0.1e-8;
      vec3 _t0458 = [_t0455, _t0456, _t0457];
      vec3 _t0459 = prim +0017<$[3]> (_t0458, xn0437);
      real _t045A = _t0459[0];
      real _t045B = -0.e0;
      bool _t045C = prim >0080 (_t045A, _t045B);
      real _t045D = 0.1e-8;
      real _t045E = 0.1e-8;
      real _t045F = 0.1e-8;
      vec3 _t0460 = [_t045D, _t045E, _t045F];
      vec3 _t0461 = prim +0017<$[3]> (_t0460, xn0437);
      real _t0462 = _t0461[1];
      real _t0463 = -0.e0;
      bool _t0464 = prim >0080 (_t0462, _t0463);
      real _t0465 = 0.1e-8;
      real _t0466 = 0.1e-8;
      real _t0467 = 0.1e-8;
      vec3 _t0468 = [_t0465, _t0466, _t0467];
      vec3 _t0469 = prim +0017<$[3]> (_t0468, xn0437);
      real _t046A = _t0469[2];
      real _t046B = -0.e0;
      bool _t046C = prim >0080 (_t046A, _t046B);
      bool _t046D = prim $and01C4 (_t0464, _t046C);
      bool _t046E = prim $and01C4 (_t045C, _t046D);
      bool _t046F = prim $and01C4 (_t0454, _t046E);
      if _t046F {
        Femdata: MeshPos _t0470 = extractFemItemN((mesh0433, cellInt0432, xn0437, pos0431),AllBuild(MeshPos),);
        return _t0470;
      } else {
        Femdata: MeshPos _t0471 = extractFemItemN((mesh0433),InvalidBuild(MeshPos),);
        return _t0471;
      }
    }
  }
  Femdata: MeshPos _t0473 = extractFemItemN((mesh0433),InvalidBuild(MeshPos),);
  return _t0473;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos0474 (Femdata: MeshPos pos0475)
{
  bool _t0476 = extractFemItem(WorldTest(MeshPos), bool, pos0475);
  if _t0476 {
    vec3 _t0477 = extractFemItem(RefPos(MeshPos), vec3, pos0475);
    int _t0478 = extractFemItem(CellIndex(MeshPos), int, pos0475);
    Femdata: Mesh _t0479 = extractFem(pos0475, Mesh);
    vec3 _t047A = func mesh_t_transform_0042D (_t0477, _t0478, _t0479);
    Femdata: MeshPos _t047B = extractFemItemN((pos0475, _t047A),NewWorld(MeshPos),);
    return _t047B;
  } else {
    return pos0475;
  }
}
function vec3#3 worldPos047C (Femdata: MeshPos pos0475)
{
  vec3 _t047D = extractFemItem(RefPos(MeshPos), vec3, pos0475);
  int _t047E = extractFemItem(CellIndex(MeshPos), int, pos0475);
  Femdata: Mesh _t047F = extractFem(pos0475, Mesh);
  vec3 _t0480 = func mesh_t_transform_0042D (_t047D, _t047E, _t047F);
  return _t0480;
}
function Femdata: MeshPos#1 $exitPos0481 (Femdata: Mesh mesh0482, int cellId0483, vec3 refPos0484, vec3 dPos0485, real[2] time0486)
{
  int _t0487 = -1;
  real _t0488 = time0486[1];
  int _t0489 = prim $r2i01B7 (_t0488);
  int[2] _t048B = func nextCell4048A (_t0489, cellId0483, mesh0482);
  int _t048C = 0;
  int _t048D = prim $sub01C0<int; %2> (_t048B, _t048C);
  bool _t048E = prim !=0086 (_t0487, _t048D);
  if _t048E {
    string _t048F = "face ";
    real _t0490 = time0486[1];
    int _t0491 = prim $r2i01B7 (_t0490);
    string _t0492 = " to ";
    real _t0493 = time0486[1];
    int _t0494 = prim $r2i01B7 (_t0493);
    int[2] _t0495 = func nextCell4048A (_t0494, cellId0483, mesh0482);
    int _t0496 = 1;
    int _t0497 = prim $sub01C0<int; %2> (_t0495, _t0496);
    string _t0498 = "\n";
    string _t0499 = "got: ";
    real _t049A = 0.1e1;
    real _t049B = 0.e0;
    real _t049C = 0.e0;
    real _t049D = 0.e0;
    vec4 _t049E = [_t049A, _t049B, _t049C, _t049D];
    real _t049F = 0.e0;
    real _t04A0 = 0.1e1;
    real _t04A1 = 0.e0;
    real _t04A2 = 0.e0;
    vec4 _t04A3 = [_t049F, _t04A0, _t04A1, _t04A2];
    real _t04A4 = 0.e0;
    real _t04A5 = 0.e0;
    real _t04A6 = 0.1e1;
    real _t04A7 = 0.e0;
    vec4 _t04A8 = [_t04A4, _t04A5, _t04A6, _t04A7];
    real _t04A9 = 0.971445146547e-16;
    real _t04AA = 0.e0;
    real _t04AB = 0.e0;
    real _t04AC = 0.1e1;
    vec4 _t04AD = [_t04A9, _t04AA, _t04AB, _t04AC];
    tensor[4,4] _t04AE = [_t049E, _t04A3, _t04A8, _t04AD];
    real _t04AF = 0.57735026919e0;
    real _t04B0 = 0.57735026919e0;
    real _t04B1 = 0.57735026919e0;
    real _t04B2 = -0.57735026919e0;
    vec4 _t04B3 = [_t04AF, _t04B0, _t04B1, _t04B2];
    real _t04B4 = -0.333333333333e0;
    real _t04B5 = 0.666666666667e0;
    real _t04B6 = -0.333333333333e0;
    real _t04B7 = 0.333333333333e0;
    vec4 _t04B8 = [_t04B4, _t04B5, _t04B6, _t04B7];
    real _t04B9 = -0.333333333333e0;
    real _t04BA = -0.333333333333e0;
    real _t04BB = 0.666666666667e0;
    real _t04BC = 0.333333333333e0;
    vec4 _t04BD = [_t04B9, _t04BA, _t04BB, _t04BC];
    real _t04BE = 0.971445146547e-16;
    real _t04BF = 0.e0;
    real _t04C0 = 0.e0;
    real _t04C1 = 0.1e1;
    vec4 _t04C2 = [_t04BE, _t04BF, _t04C0, _t04C1];
    tensor[4,4] _t04C3 = [_t04B3, _t04B8, _t04BD, _t04C2];
    real _t04C4 = -0.333333333333e0;
    real _t04C5 = 0.666666666667e0;
    real _t04C6 = -0.333333333333e0;
    real _t04C7 = 0.333333333333e0;
    vec4 _t04C8 = [_t04C4, _t04C5, _t04C6, _t04C7];
    real _t04C9 = -0.57735026919e0;
    real _t04CA = -0.57735026919e0;
    real _t04CB = -0.57735026919e0;
    real _t04CC = 0.57735026919e0;
    vec4 _t04CD = [_t04C9, _t04CA, _t04CB, _t04CC];
    real _t04CE = -0.333333333333e0;
    real _t04CF = -0.333333333333e0;
    real _t04D0 = 0.666666666667e0;
    real _t04D1 = 0.333333333333e0;
    vec4 _t04D2 = [_t04CE, _t04CF, _t04D0, _t04D1];
    real _t04D3 = 0.971445146547e-16;
    real _t04D4 = 0.e0;
    real _t04D5 = 0.e0;
    real _t04D6 = 0.1e1;
    vec4 _t04D7 = [_t04D3, _t04D4, _t04D5, _t04D6];
    tensor[4,4] _t04D8 = [_t04C8, _t04CD, _t04D2, _t04D7];
    real _t04D9 = -0.333333333333e0;
    real _t04DA = 0.666666666667e0;
    real _t04DB = -0.333333333333e0;
    real _t04DC = 0.333333333333e0;
    vec4 _t04DD = [_t04D9, _t04DA, _t04DB, _t04DC];
    real _t04DE = -0.333333333333e0;
    real _t04DF = -0.333333333333e0;
    real _t04E0 = 0.666666666667e0;
    real _t04E1 = 0.333333333333e0;
    vec4 _t04E2 = [_t04DE, _t04DF, _t04E0, _t04E1];
    real _t04E3 = 0.57735026919e0;
    real _t04E4 = 0.57735026919e0;
    real _t04E5 = 0.57735026919e0;
    real _t04E6 = -0.57735026919e0;
    vec4 _t04E7 = [_t04E3, _t04E4, _t04E5, _t04E6];
    real _t04E8 = 0.971445146547e-16;
    real _t04E9 = 0.e0;
    real _t04EA = 0.e0;
    real _t04EB = 0.1e1;
    vec4 _t04EC = [_t04E8, _t04E9, _t04EA, _t04EB];
    tensor[4,4] _t04ED = [_t04DD, _t04E2, _t04E7, _t04EC];
    tensor[4,4][4] _t04EE = {_t04AE, _t04C3, _t04D8, _t04ED};
    real _t04EF = 0.57735026919e0;
    real _t04F0 = -0.1e1;
    real _t04F1 = -0.1e1;
    real _t04F2 = 0.1e1;
    vec4 _t04F3 = [_t04EF, _t04F0, _t04F1, _t04F2];
    real _t04F4 = 0.57735026919e0;
    real _t04F5 = 0.1e1;
    real _t04F6 = 0.e0;
    real _t04F7 = 0.e0;
    vec4 _t04F8 = [_t04F4, _t04F5, _t04F6, _t04F7];
    real _t04F9 = 0.57735026919e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.1e1;
    real _t04FC = 0.e0;
    vec4 _t04FD = [_t04F9, _t04FA, _t04FB, _t04FC];
    real _t04FE = 0.e0;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    real _t0501 = 0.1e1;
    vec4 _t0502 = [_t04FE, _t04FF, _t0500, _t0501];
    tensor[4,4] _t0503 = [_t04F3, _t04F8, _t04FD, _t0502];
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    real _t0506 = 0.e0;
    real _t0507 = 0.e0;
    vec4 _t0508 = [_t0504, _t0505, _t0506, _t0507];
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    real _t050B = 0.e0;
    real _t050C = 0.e0;
    vec4 _t050D = [_t0509, _t050A, _t050B, _t050C];
    real _t050E = 0.e0;
    real _t050F = 0.e0;
    real _t0510 = 0.1e1;
    real _t0511 = 0.e0;
    vec4 _t0512 = [_t050E, _t050F, _t0510, _t0511];
    real _t0513 = 0.e0;
    real _t0514 = 0.e0;
    real _t0515 = 0.e0;
    real _t0516 = 0.1e1;
    vec4 _t0517 = [_t0513, _t0514, _t0515, _t0516];
    tensor[4,4] _t0518 = [_t0508, _t050D, _t0512, _t0517];
    real _t0519 = 0.e0;
    real _t051A = 0.1e1;
    real _t051B = 0.e0;
    real _t051C = 0.e0;
    vec4 _t051D = [_t0519, _t051A, _t051B, _t051C];
    real _t051E = -0.1e1;
    real _t051F = 0.e0;
    real _t0520 = 0.e0;
    real _t0521 = 0.e0;
    vec4 _t0522 = [_t051E, _t051F, _t0520, _t0521];
    real _t0523 = 0.e0;
    real _t0524 = 0.e0;
    real _t0525 = 0.1e1;
    real _t0526 = 0.e0;
    vec4 _t0527 = [_t0523, _t0524, _t0525, _t0526];
    real _t0528 = 0.e0;
    real _t0529 = 0.e0;
    real _t052A = 0.e0;
    real _t052B = 0.1e1;
    vec4 _t052C = [_t0528, _t0529, _t052A, _t052B];
    tensor[4,4] _t052D = [_t051D, _t0522, _t0527, _t052C];
    real _t052E = 0.e0;
    real _t052F = 0.1e1;
    real _t0530 = 0.e0;
    real _t0531 = 0.e0;
    vec4 _t0532 = [_t052E, _t052F, _t0530, _t0531];
    real _t0533 = 0.e0;
    real _t0534 = 0.e0;
    real _t0535 = 0.1e1;
    real _t0536 = 0.e0;
    vec4 _t0537 = [_t0533, _t0534, _t0535, _t0536];
    real _t0538 = 0.1e1;
    real _t0539 = 0.e0;
    real _t053A = 0.e0;
    real _t053B = 0.e0;
    vec4 _t053C = [_t0538, _t0539, _t053A, _t053B];
    real _t053D = 0.e0;
    real _t053E = 0.e0;
    real _t053F = 0.e0;
    real _t0540 = 0.1e1;
    vec4 _t0541 = [_t053D, _t053E, _t053F, _t0540];
    tensor[4,4] _t0542 = [_t0532, _t0537, _t053C, _t0541];
    tensor[4,4][4] _t0543 = {_t0503, _t0518, _t052D, _t0542};
    real _t0544 = -0.1e1;
    real _t0545 = -0.57735026919e0;
    real _t0546 = -0.1e1;
    real _t0547 = 0.1e1;
    vec4 _t0548 = [_t0544, _t0545, _t0546, _t0547];
    real _t0549 = 0.1e1;
    real _t054A = -0.57735026919e0;
    real _t054B = 0.e0;
    real _t054C = 0.e0;
    vec4 _t054D = [_t0549, _t054A, _t054B, _t054C];
    real _t054E = 0.e0;
    real _t054F = -0.57735026919e0;
    real _t0550 = 0.1e1;
    real _t0551 = 0.e0;
    vec4 _t0552 = [_t054E, _t054F, _t0550, _t0551];
    real _t0553 = 0.e0;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    real _t0556 = 0.1e1;
    vec4 _t0557 = [_t0553, _t0554, _t0555, _t0556];
    tensor[4,4] _t0558 = [_t0548, _t054D, _t0552, _t0557];
    real _t0559 = 0.e0;
    real _t055A = -0.1e1;
    real _t055B = 0.e0;
    real _t055C = 0.e0;
    vec4 _t055D = [_t0559, _t055A, _t055B, _t055C];
    real _t055E = 0.1e1;
    real _t055F = 0.e0;
    real _t0560 = 0.e0;
    real _t0561 = 0.e0;
    vec4 _t0562 = [_t055E, _t055F, _t0560, _t0561];
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.1e1;
    real _t0566 = 0.e0;
    vec4 _t0567 = [_t0563, _t0564, _t0565, _t0566];
    real _t0568 = 0.e0;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    real _t056B = 0.1e1;
    vec4 _t056C = [_t0568, _t0569, _t056A, _t056B];
    tensor[4,4] _t056D = [_t055D, _t0562, _t0567, _t056C];
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    real _t0570 = 0.e0;
    real _t0571 = 0.e0;
    vec4 _t0572 = [_t056E, _t056F, _t0570, _t0571];
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    real _t0575 = 0.e0;
    real _t0576 = 0.e0;
    vec4 _t0577 = [_t0573, _t0574, _t0575, _t0576];
    real _t0578 = 0.e0;
    real _t0579 = 0.e0;
    real _t057A = 0.1e1;
    real _t057B = 0.e0;
    vec4 _t057C = [_t0578, _t0579, _t057A, _t057B];
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    real _t0580 = 0.1e1;
    vec4 _t0581 = [_t057D, _t057E, _t057F, _t0580];
    tensor[4,4] _t0582 = [_t0572, _t0577, _t057C, _t0581];
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    real _t0585 = 0.e0;
    real _t0586 = 0.e0;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    real _t0588 = 0.e0;
    real _t0589 = 0.e0;
    real _t058A = 0.1e1;
    real _t058B = 0.e0;
    vec4 _t058C = [_t0588, _t0589, _t058A, _t058B];
    real _t058D = 0.e0;
    real _t058E = -0.1e1;
    real _t058F = 0.e0;
    real _t0590 = 0.e0;
    vec4 _t0591 = [_t058D, _t058E, _t058F, _t0590];
    real _t0592 = 0.e0;
    real _t0593 = 0.e0;
    real _t0594 = 0.e0;
    real _t0595 = 0.1e1;
    vec4 _t0596 = [_t0592, _t0593, _t0594, _t0595];
    tensor[4,4] _t0597 = [_t0587, _t058C, _t0591, _t0596];
    tensor[4,4][4] _t0598 = {_t0558, _t056D, _t0582, _t0597};
    real _t0599 = -0.1e1;
    real _t059A = -0.1e1;
    real _t059B = 0.57735026919e0;
    real _t059C = 0.1e1;
    vec4 _t059D = [_t0599, _t059A, _t059B, _t059C];
    real _t059E = 0.1e1;
    real _t059F = 0.e0;
    real _t05A0 = 0.57735026919e0;
    real _t05A1 = 0.e0;
    vec4 _t05A2 = [_t059E, _t059F, _t05A0, _t05A1];
    real _t05A3 = 0.e0;
    real _t05A4 = 0.1e1;
    real _t05A5 = 0.57735026919e0;
    real _t05A6 = 0.e0;
    vec4 _t05A7 = [_t05A3, _t05A4, _t05A5, _t05A6];
    real _t05A8 = 0.e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    real _t05AB = 0.1e1;
    vec4 _t05AC = [_t05A8, _t05A9, _t05AA, _t05AB];
    tensor[4,4] _t05AD = [_t059D, _t05A2, _t05A7, _t05AC];
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.1e1;
    real _t05B1 = 0.e0;
    vec4 _t05B2 = [_t05AE, _t05AF, _t05B0, _t05B1];
    real _t05B3 = 0.1e1;
    real _t05B4 = 0.e0;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.e0;
    vec4 _t05B7 = [_t05B3, _t05B4, _t05B5, _t05B6];
    real _t05B8 = 0.e0;
    real _t05B9 = 0.1e1;
    real _t05BA = 0.e0;
    real _t05BB = 0.e0;
    vec4 _t05BC = [_t05B8, _t05B9, _t05BA, _t05BB];
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    real _t05C0 = 0.1e1;
    vec4 _t05C1 = [_t05BD, _t05BE, _t05BF, _t05C0];
    tensor[4,4] _t05C2 = [_t05B2, _t05B7, _t05BC, _t05C1];
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.e0;
    real _t05C6 = 0.e0;
    vec4 _t05C7 = [_t05C3, _t05C4, _t05C5, _t05C6];
    real _t05C8 = 0.e0;
    real _t05C9 = 0.e0;
    real _t05CA = -0.1e1;
    real _t05CB = 0.e0;
    vec4 _t05CC = [_t05C8, _t05C9, _t05CA, _t05CB];
    real _t05CD = 0.e0;
    real _t05CE = 0.1e1;
    real _t05CF = 0.e0;
    real _t05D0 = 0.e0;
    vec4 _t05D1 = [_t05CD, _t05CE, _t05CF, _t05D0];
    real _t05D2 = 0.e0;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    real _t05D5 = 0.1e1;
    vec4 _t05D6 = [_t05D2, _t05D3, _t05D4, _t05D5];
    tensor[4,4] _t05D7 = [_t05C7, _t05CC, _t05D1, _t05D6];
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    real _t05DF = 0.e0;
    real _t05E0 = 0.e0;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.1e1;
    real _t05E5 = 0.e0;
    vec4 _t05E6 = [_t05E2, _t05E3, _t05E4, _t05E5];
    real _t05E7 = 0.e0;
    real _t05E8 = 0.e0;
    real _t05E9 = 0.e0;
    real _t05EA = 0.1e1;
    vec4 _t05EB = [_t05E7, _t05E8, _t05E9, _t05EA];
    tensor[4,4] _t05EC = [_t05DC, _t05E1, _t05E6, _t05EB];
    tensor[4,4][4] _t05ED = {_t05AD, _t05C2, _t05D7, _t05EC};
    tensor[4,4][4][4] _t05EE = {_t04EE, _t0543, _t0598, _t05ED};
    real _t05EF = time0486[1];
    int _t05F0 = prim $r2i01B7 (_t05EF);
    tensor[4,4][4] _t05F1 = prim $sub01C0<tensor[4,4][4]; %4> (_t05EE, _t05F0);
    real _t05F2 = time0486[1];
    int _t05F3 = prim $r2i01B7 (_t05F2);
    int[2] _t05F4 = func nextCell4048A (_t05F3, cellId0483, mesh0482);
    int _t05F5 = 1;
    int _t05F6 = prim $sub01C0<int; %2> (_t05F4, _t05F5);
    tensor[4,4] _t05F7 = prim $sub01C0<tensor[4,4]; %4> (_t05F1, _t05F6);
    string _t05F8 = "\n";
    print (_t048F, _t0491, _t0492, _t0497, _t0498, _t0499, _t05F7, _t05F8);
    real _t05F9 = time0486[1];
    int _t05FA = prim $r2i01B7 (_t05F9);
    int[2] _t05FB = func nextCell4048A (_t05FA, cellId0483, mesh0482);
    int _t05FC = 0;
    int _t05FD = prim $sub01C0<int; %2> (_t05FB, _t05FC);
    real _t05FE = 0.1e1;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    real _t0601 = 0.e0;
    vec4 _t0602 = [_t05FE, _t05FF, _t0600, _t0601];
    real _t0603 = 0.e0;
    real _t0604 = 0.1e1;
    real _t0605 = 0.e0;
    real _t0606 = 0.e0;
    vec4 _t0607 = [_t0603, _t0604, _t0605, _t0606];
    real _t0608 = 0.e0;
    real _t0609 = 0.e0;
    real _t060A = 0.1e1;
    real _t060B = 0.e0;
    vec4 _t060C = [_t0608, _t0609, _t060A, _t060B];
    real _t060D = 0.971445146547e-16;
    real _t060E = 0.e0;
    real _t060F = 0.e0;
    real _t0610 = 0.1e1;
    vec4 _t0611 = [_t060D, _t060E, _t060F, _t0610];
    tensor[4,4] _t0612 = [_t0602, _t0607, _t060C, _t0611];
    real _t0613 = 0.57735026919e0;
    real _t0614 = 0.57735026919e0;
    real _t0615 = 0.57735026919e0;
    real _t0616 = -0.57735026919e0;
    vec4 _t0617 = [_t0613, _t0614, _t0615, _t0616];
    real _t0618 = -0.333333333333e0;
    real _t0619 = 0.666666666667e0;
    real _t061A = -0.333333333333e0;
    real _t061B = 0.333333333333e0;
    vec4 _t061C = [_t0618, _t0619, _t061A, _t061B];
    real _t061D = -0.333333333333e0;
    real _t061E = -0.333333333333e0;
    real _t061F = 0.666666666667e0;
    real _t0620 = 0.333333333333e0;
    vec4 _t0621 = [_t061D, _t061E, _t061F, _t0620];
    real _t0622 = 0.971445146547e-16;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    real _t0625 = 0.1e1;
    vec4 _t0626 = [_t0622, _t0623, _t0624, _t0625];
    tensor[4,4] _t0627 = [_t0617, _t061C, _t0621, _t0626];
    real _t0628 = -0.333333333333e0;
    real _t0629 = 0.666666666667e0;
    real _t062A = -0.333333333333e0;
    real _t062B = 0.333333333333e0;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = -0.57735026919e0;
    real _t062E = -0.57735026919e0;
    real _t062F = -0.57735026919e0;
    real _t0630 = 0.57735026919e0;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    real _t0632 = -0.333333333333e0;
    real _t0633 = -0.333333333333e0;
    real _t0634 = 0.666666666667e0;
    real _t0635 = 0.333333333333e0;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    real _t0637 = 0.971445146547e-16;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    real _t063A = 0.1e1;
    vec4 _t063B = [_t0637, _t0638, _t0639, _t063A];
    tensor[4,4] _t063C = [_t062C, _t0631, _t0636, _t063B];
    real _t063D = -0.333333333333e0;
    real _t063E = 0.666666666667e0;
    real _t063F = -0.333333333333e0;
    real _t0640 = 0.333333333333e0;
    vec4 _t0641 = [_t063D, _t063E, _t063F, _t0640];
    real _t0642 = -0.333333333333e0;
    real _t0643 = -0.333333333333e0;
    real _t0644 = 0.666666666667e0;
    real _t0645 = 0.333333333333e0;
    vec4 _t0646 = [_t0642, _t0643, _t0644, _t0645];
    real _t0647 = 0.57735026919e0;
    real _t0648 = 0.57735026919e0;
    real _t0649 = 0.57735026919e0;
    real _t064A = -0.57735026919e0;
    vec4 _t064B = [_t0647, _t0648, _t0649, _t064A];
    real _t064C = 0.971445146547e-16;
    real _t064D = 0.e0;
    real _t064E = 0.e0;
    real _t064F = 0.1e1;
    vec4 _t0650 = [_t064C, _t064D, _t064E, _t064F];
    tensor[4,4] _t0651 = [_t0641, _t0646, _t064B, _t0650];
    tensor[4,4][4] _t0652 = {_t0612, _t0627, _t063C, _t0651};
    real _t0653 = 0.57735026919e0;
    real _t0654 = -0.1e1;
    real _t0655 = -0.1e1;
    real _t0656 = 0.1e1;
    vec4 _t0657 = [_t0653, _t0654, _t0655, _t0656];
    real _t0658 = 0.57735026919e0;
    real _t0659 = 0.1e1;
    real _t065A = 0.e0;
    real _t065B = 0.e0;
    vec4 _t065C = [_t0658, _t0659, _t065A, _t065B];
    real _t065D = 0.57735026919e0;
    real _t065E = 0.e0;
    real _t065F = 0.1e1;
    real _t0660 = 0.e0;
    vec4 _t0661 = [_t065D, _t065E, _t065F, _t0660];
    real _t0662 = 0.e0;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    real _t0665 = 0.1e1;
    vec4 _t0666 = [_t0662, _t0663, _t0664, _t0665];
    tensor[4,4] _t0667 = [_t0657, _t065C, _t0661, _t0666];
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    real _t066B = 0.e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    real _t066F = 0.e0;
    real _t0670 = 0.e0;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    real _t0672 = 0.e0;
    real _t0673 = 0.e0;
    real _t0674 = 0.1e1;
    real _t0675 = 0.e0;
    vec4 _t0676 = [_t0672, _t0673, _t0674, _t0675];
    real _t0677 = 0.e0;
    real _t0678 = 0.e0;
    real _t0679 = 0.e0;
    real _t067A = 0.1e1;
    vec4 _t067B = [_t0677, _t0678, _t0679, _t067A];
    tensor[4,4] _t067C = [_t066C, _t0671, _t0676, _t067B];
    real _t067D = 0.e0;
    real _t067E = 0.1e1;
    real _t067F = 0.e0;
    real _t0680 = 0.e0;
    vec4 _t0681 = [_t067D, _t067E, _t067F, _t0680];
    real _t0682 = -0.1e1;
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = 0.e0;
    vec4 _t0686 = [_t0682, _t0683, _t0684, _t0685];
    real _t0687 = 0.e0;
    real _t0688 = 0.e0;
    real _t0689 = 0.1e1;
    real _t068A = 0.e0;
    vec4 _t068B = [_t0687, _t0688, _t0689, _t068A];
    real _t068C = 0.e0;
    real _t068D = 0.e0;
    real _t068E = 0.e0;
    real _t068F = 0.1e1;
    vec4 _t0690 = [_t068C, _t068D, _t068E, _t068F];
    tensor[4,4] _t0691 = [_t0681, _t0686, _t068B, _t0690];
    real _t0692 = 0.e0;
    real _t0693 = 0.1e1;
    real _t0694 = 0.e0;
    real _t0695 = 0.e0;
    vec4 _t0696 = [_t0692, _t0693, _t0694, _t0695];
    real _t0697 = 0.e0;
    real _t0698 = 0.e0;
    real _t0699 = 0.1e1;
    real _t069A = 0.e0;
    vec4 _t069B = [_t0697, _t0698, _t0699, _t069A];
    real _t069C = 0.1e1;
    real _t069D = 0.e0;
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    vec4 _t06A0 = [_t069C, _t069D, _t069E, _t069F];
    real _t06A1 = 0.e0;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.e0;
    real _t06A4 = 0.1e1;
    vec4 _t06A5 = [_t06A1, _t06A2, _t06A3, _t06A4];
    tensor[4,4] _t06A6 = [_t0696, _t069B, _t06A0, _t06A5];
    tensor[4,4][4] _t06A7 = {_t0667, _t067C, _t0691, _t06A6};
    real _t06A8 = -0.1e1;
    real _t06A9 = -0.57735026919e0;
    real _t06AA = -0.1e1;
    real _t06AB = 0.1e1;
    vec4 _t06AC = [_t06A8, _t06A9, _t06AA, _t06AB];
    real _t06AD = 0.1e1;
    real _t06AE = -0.57735026919e0;
    real _t06AF = 0.e0;
    real _t06B0 = 0.e0;
    vec4 _t06B1 = [_t06AD, _t06AE, _t06AF, _t06B0];
    real _t06B2 = 0.e0;
    real _t06B3 = -0.57735026919e0;
    real _t06B4 = 0.1e1;
    real _t06B5 = 0.e0;
    vec4 _t06B6 = [_t06B2, _t06B3, _t06B4, _t06B5];
    real _t06B7 = 0.e0;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    real _t06BA = 0.1e1;
    vec4 _t06BB = [_t06B7, _t06B8, _t06B9, _t06BA];
    tensor[4,4] _t06BC = [_t06AC, _t06B1, _t06B6, _t06BB];
    real _t06BD = 0.e0;
    real _t06BE = -0.1e1;
    real _t06BF = 0.e0;
    real _t06C0 = 0.e0;
    vec4 _t06C1 = [_t06BD, _t06BE, _t06BF, _t06C0];
    real _t06C2 = 0.1e1;
    real _t06C3 = 0.e0;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.e0;
    vec4 _t06C6 = [_t06C2, _t06C3, _t06C4, _t06C5];
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.1e1;
    real _t06CA = 0.e0;
    vec4 _t06CB = [_t06C7, _t06C8, _t06C9, _t06CA];
    real _t06CC = 0.e0;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = 0.1e1;
    vec4 _t06D0 = [_t06CC, _t06CD, _t06CE, _t06CF];
    tensor[4,4] _t06D1 = [_t06C1, _t06C6, _t06CB, _t06D0];
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    real _t06D4 = 0.e0;
    real _t06D5 = 0.e0;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    real _t06D9 = 0.e0;
    real _t06DA = 0.e0;
    vec4 _t06DB = [_t06D7, _t06D8, _t06D9, _t06DA];
    real _t06DC = 0.e0;
    real _t06DD = 0.e0;
    real _t06DE = 0.1e1;
    real _t06DF = 0.e0;
    vec4 _t06E0 = [_t06DC, _t06DD, _t06DE, _t06DF];
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    real _t06E4 = 0.1e1;
    vec4 _t06E5 = [_t06E1, _t06E2, _t06E3, _t06E4];
    tensor[4,4] _t06E6 = [_t06D6, _t06DB, _t06E0, _t06E5];
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    real _t06E9 = 0.e0;
    real _t06EA = 0.e0;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    real _t06EC = 0.e0;
    real _t06ED = 0.e0;
    real _t06EE = 0.1e1;
    real _t06EF = 0.e0;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    real _t06F1 = 0.e0;
    real _t06F2 = -0.1e1;
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    vec4 _t06F5 = [_t06F1, _t06F2, _t06F3, _t06F4];
    real _t06F6 = 0.e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.e0;
    real _t06F9 = 0.1e1;
    vec4 _t06FA = [_t06F6, _t06F7, _t06F8, _t06F9];
    tensor[4,4] _t06FB = [_t06EB, _t06F0, _t06F5, _t06FA];
    tensor[4,4][4] _t06FC = {_t06BC, _t06D1, _t06E6, _t06FB};
    real _t06FD = -0.1e1;
    real _t06FE = -0.1e1;
    real _t06FF = 0.57735026919e0;
    real _t0700 = 0.1e1;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = 0.1e1;
    real _t0703 = 0.e0;
    real _t0704 = 0.57735026919e0;
    real _t0705 = 0.e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = 0.e0;
    real _t0708 = 0.1e1;
    real _t0709 = 0.57735026919e0;
    real _t070A = 0.e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    real _t070F = 0.1e1;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    tensor[4,4] _t0711 = [_t0701, _t0706, _t070B, _t0710];
    real _t0712 = 0.e0;
    real _t0713 = 0.e0;
    real _t0714 = 0.1e1;
    real _t0715 = 0.e0;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = 0.1e1;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    real _t071A = 0.e0;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    real _t071C = 0.e0;
    real _t071D = 0.1e1;
    real _t071E = 0.e0;
    real _t071F = 0.e0;
    vec4 _t0720 = [_t071C, _t071D, _t071E, _t071F];
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    vec4 _t0725 = [_t0721, _t0722, _t0723, _t0724];
    tensor[4,4] _t0726 = [_t0716, _t071B, _t0720, _t0725];
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    real _t0729 = 0.e0;
    real _t072A = 0.e0;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    real _t072C = 0.e0;
    real _t072D = 0.e0;
    real _t072E = -0.1e1;
    real _t072F = 0.e0;
    vec4 _t0730 = [_t072C, _t072D, _t072E, _t072F];
    real _t0731 = 0.e0;
    real _t0732 = 0.1e1;
    real _t0733 = 0.e0;
    real _t0734 = 0.e0;
    vec4 _t0735 = [_t0731, _t0732, _t0733, _t0734];
    real _t0736 = 0.e0;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.1e1;
    vec4 _t073A = [_t0736, _t0737, _t0738, _t0739];
    tensor[4,4] _t073B = [_t072B, _t0730, _t0735, _t073A];
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    real _t073E = 0.e0;
    real _t073F = 0.e0;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    real _t0743 = 0.e0;
    real _t0744 = 0.e0;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.1e1;
    real _t0749 = 0.e0;
    vec4 _t074A = [_t0746, _t0747, _t0748, _t0749];
    real _t074B = 0.e0;
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.1e1;
    vec4 _t074F = [_t074B, _t074C, _t074D, _t074E];
    tensor[4,4] _t0750 = [_t0740, _t0745, _t074A, _t074F];
    tensor[4,4][4] _t0751 = {_t0711, _t0726, _t073B, _t0750};
    tensor[4,4][4][4] _t0752 = {_t0652, _t06A7, _t06FC, _t0751};
    real _t0753 = time0486[1];
    int _t0754 = prim $r2i01B7 (_t0753);
    tensor[4,4][4] _t0755 = prim $sub01C0<tensor[4,4][4]; %4> (_t0752, _t0754);
    real _t0756 = time0486[1];
    int _t0757 = prim $r2i01B7 (_t0756);
    int[2] _t0758 = func nextCell4048A (_t0757, cellId0483, mesh0482);
    int _t0759 = 1;
    int _t075A = prim $sub01C0<int; %2> (_t0758, _t0759);
    tensor[4,4] _t075B = prim $sub01C0<tensor[4,4]; %4> (_t0755, _t075A);
    real _t075C = time0486[0];
    vec3 _t075D = prim *0036<$[3]> (_t075C, dPos0485);
    vec3 _t075E = prim +0017<$[3]> (_t075D, refPos0484);
    real _t075F = _t075E[0];
    real _t0760 = time0486[0];
    vec3 _t0761 = prim *0036<$[3]> (_t0760, dPos0485);
    vec3 _t0762 = prim +0017<$[3]> (_t0761, refPos0484);
    real _t0763 = _t0762[1];
    real _t0764 = time0486[0];
    vec3 _t0765 = prim *0036<$[3]> (_t0764, dPos0485);
    vec3 _t0766 = prim +0017<$[3]> (_t0765, refPos0484);
    real _t0767 = _t0766[2];
    real _t0768 = 0.1e1;
    vec4 _t0769 = [_t075F, _t0763, _t0767, _t0768];
    vec4 _t076A = prim •00CE<$[4,4]; $[4]; $[4]> (_t075B, _t0769);
    real _t076B = _t076A[0];
    real _t076C = 0.1e1;
    real _t076D = 0.e0;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    vec4 _t0770 = [_t076C, _t076D, _t076E, _t076F];
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    real _t0774 = 0.e0;
    vec4 _t0775 = [_t0771, _t0772, _t0773, _t0774];
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.1e1;
    real _t0779 = 0.e0;
    vec4 _t077A = [_t0776, _t0777, _t0778, _t0779];
    real _t077B = 0.971445146547e-16;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    real _t077E = 0.1e1;
    vec4 _t077F = [_t077B, _t077C, _t077D, _t077E];
    tensor[4,4] _t0780 = [_t0770, _t0775, _t077A, _t077F];
    real _t0781 = 0.57735026919e0;
    real _t0782 = 0.57735026919e0;
    real _t0783 = 0.57735026919e0;
    real _t0784 = -0.57735026919e0;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    real _t0786 = -0.333333333333e0;
    real _t0787 = 0.666666666667e0;
    real _t0788 = -0.333333333333e0;
    real _t0789 = 0.333333333333e0;
    vec4 _t078A = [_t0786, _t0787, _t0788, _t0789];
    real _t078B = -0.333333333333e0;
    real _t078C = -0.333333333333e0;
    real _t078D = 0.666666666667e0;
    real _t078E = 0.333333333333e0;
    vec4 _t078F = [_t078B, _t078C, _t078D, _t078E];
    real _t0790 = 0.971445146547e-16;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    real _t0793 = 0.1e1;
    vec4 _t0794 = [_t0790, _t0791, _t0792, _t0793];
    tensor[4,4] _t0795 = [_t0785, _t078A, _t078F, _t0794];
    real _t0796 = -0.333333333333e0;
    real _t0797 = 0.666666666667e0;
    real _t0798 = -0.333333333333e0;
    real _t0799 = 0.333333333333e0;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = -0.57735026919e0;
    real _t079C = -0.57735026919e0;
    real _t079D = -0.57735026919e0;
    real _t079E = 0.57735026919e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = -0.333333333333e0;
    real _t07A1 = -0.333333333333e0;
    real _t07A2 = 0.666666666667e0;
    real _t07A3 = 0.333333333333e0;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    real _t07A5 = 0.971445146547e-16;
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.1e1;
    vec4 _t07A9 = [_t07A5, _t07A6, _t07A7, _t07A8];
    tensor[4,4] _t07AA = [_t079A, _t079F, _t07A4, _t07A9];
    real _t07AB = -0.333333333333e0;
    real _t07AC = 0.666666666667e0;
    real _t07AD = -0.333333333333e0;
    real _t07AE = 0.333333333333e0;
    vec4 _t07AF = [_t07AB, _t07AC, _t07AD, _t07AE];
    real _t07B0 = -0.333333333333e0;
    real _t07B1 = -0.333333333333e0;
    real _t07B2 = 0.666666666667e0;
    real _t07B3 = 0.333333333333e0;
    vec4 _t07B4 = [_t07B0, _t07B1, _t07B2, _t07B3];
    real _t07B5 = 0.57735026919e0;
    real _t07B6 = 0.57735026919e0;
    real _t07B7 = 0.57735026919e0;
    real _t07B8 = -0.57735026919e0;
    vec4 _t07B9 = [_t07B5, _t07B6, _t07B7, _t07B8];
    real _t07BA = 0.971445146547e-16;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.1e1;
    vec4 _t07BE = [_t07BA, _t07BB, _t07BC, _t07BD];
    tensor[4,4] _t07BF = [_t07AF, _t07B4, _t07B9, _t07BE];
    tensor[4,4][4] _t07C0 = {_t0780, _t0795, _t07AA, _t07BF};
    real _t07C1 = 0.57735026919e0;
    real _t07C2 = -0.1e1;
    real _t07C3 = -0.1e1;
    real _t07C4 = 0.1e1;
    vec4 _t07C5 = [_t07C1, _t07C2, _t07C3, _t07C4];
    real _t07C6 = 0.57735026919e0;
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.57735026919e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.1e1;
    real _t07CE = 0.e0;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.1e1;
    vec4 _t07D4 = [_t07D0, _t07D1, _t07D2, _t07D3];
    tensor[4,4] _t07D5 = [_t07C5, _t07CA, _t07CF, _t07D4];
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.e0;
    vec4 _t07DA = [_t07D6, _t07D7, _t07D8, _t07D9];
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    real _t07E2 = 0.1e1;
    real _t07E3 = 0.e0;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    real _t07E5 = 0.e0;
    real _t07E6 = 0.e0;
    real _t07E7 = 0.e0;
    real _t07E8 = 0.1e1;
    vec4 _t07E9 = [_t07E5, _t07E6, _t07E7, _t07E8];
    tensor[4,4] _t07EA = [_t07DA, _t07DF, _t07E4, _t07E9];
    real _t07EB = 0.e0;
    real _t07EC = 0.1e1;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    vec4 _t07EF = [_t07EB, _t07EC, _t07ED, _t07EE];
    real _t07F0 = -0.1e1;
    real _t07F1 = 0.e0;
    real _t07F2 = 0.e0;
    real _t07F3 = 0.e0;
    vec4 _t07F4 = [_t07F0, _t07F1, _t07F2, _t07F3];
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    real _t07F7 = 0.1e1;
    real _t07F8 = 0.e0;
    vec4 _t07F9 = [_t07F5, _t07F6, _t07F7, _t07F8];
    real _t07FA = 0.e0;
    real _t07FB = 0.e0;
    real _t07FC = 0.e0;
    real _t07FD = 0.1e1;
    vec4 _t07FE = [_t07FA, _t07FB, _t07FC, _t07FD];
    tensor[4,4] _t07FF = [_t07EF, _t07F4, _t07F9, _t07FE];
    real _t0800 = 0.e0;
    real _t0801 = 0.1e1;
    real _t0802 = 0.e0;
    real _t0803 = 0.e0;
    vec4 _t0804 = [_t0800, _t0801, _t0802, _t0803];
    real _t0805 = 0.e0;
    real _t0806 = 0.e0;
    real _t0807 = 0.1e1;
    real _t0808 = 0.e0;
    vec4 _t0809 = [_t0805, _t0806, _t0807, _t0808];
    real _t080A = 0.1e1;
    real _t080B = 0.e0;
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    vec4 _t080E = [_t080A, _t080B, _t080C, _t080D];
    real _t080F = 0.e0;
    real _t0810 = 0.e0;
    real _t0811 = 0.e0;
    real _t0812 = 0.1e1;
    vec4 _t0813 = [_t080F, _t0810, _t0811, _t0812];
    tensor[4,4] _t0814 = [_t0804, _t0809, _t080E, _t0813];
    tensor[4,4][4] _t0815 = {_t07D5, _t07EA, _t07FF, _t0814};
    real _t0816 = -0.1e1;
    real _t0817 = -0.57735026919e0;
    real _t0818 = -0.1e1;
    real _t0819 = 0.1e1;
    vec4 _t081A = [_t0816, _t0817, _t0818, _t0819];
    real _t081B = 0.1e1;
    real _t081C = -0.57735026919e0;
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    vec4 _t081F = [_t081B, _t081C, _t081D, _t081E];
    real _t0820 = 0.e0;
    real _t0821 = -0.57735026919e0;
    real _t0822 = 0.1e1;
    real _t0823 = 0.e0;
    vec4 _t0824 = [_t0820, _t0821, _t0822, _t0823];
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    real _t0828 = 0.1e1;
    vec4 _t0829 = [_t0825, _t0826, _t0827, _t0828];
    tensor[4,4] _t082A = [_t081A, _t081F, _t0824, _t0829];
    real _t082B = 0.e0;
    real _t082C = -0.1e1;
    real _t082D = 0.e0;
    real _t082E = 0.e0;
    vec4 _t082F = [_t082B, _t082C, _t082D, _t082E];
    real _t0830 = 0.1e1;
    real _t0831 = 0.e0;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.1e1;
    real _t0838 = 0.e0;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    real _t083D = 0.1e1;
    vec4 _t083E = [_t083A, _t083B, _t083C, _t083D];
    tensor[4,4] _t083F = [_t082F, _t0834, _t0839, _t083E];
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    real _t0842 = 0.e0;
    real _t0843 = 0.e0;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    real _t0847 = 0.e0;
    real _t0848 = 0.e0;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = 0.e0;
    real _t084B = 0.e0;
    real _t084C = 0.1e1;
    real _t084D = 0.e0;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    real _t0852 = 0.1e1;
    vec4 _t0853 = [_t084F, _t0850, _t0851, _t0852];
    tensor[4,4] _t0854 = [_t0844, _t0849, _t084E, _t0853];
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    real _t0857 = 0.e0;
    real _t0858 = 0.e0;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    real _t085A = 0.e0;
    real _t085B = 0.e0;
    real _t085C = 0.1e1;
    real _t085D = 0.e0;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.e0;
    real _t0860 = -0.1e1;
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.e0;
    real _t0865 = 0.e0;
    real _t0866 = 0.e0;
    real _t0867 = 0.1e1;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    tensor[4,4] _t0869 = [_t0859, _t085E, _t0863, _t0868];
    tensor[4,4][4] _t086A = {_t082A, _t083F, _t0854, _t0869};
    real _t086B = -0.1e1;
    real _t086C = -0.1e1;
    real _t086D = 0.57735026919e0;
    real _t086E = 0.1e1;
    vec4 _t086F = [_t086B, _t086C, _t086D, _t086E];
    real _t0870 = 0.1e1;
    real _t0871 = 0.e0;
    real _t0872 = 0.57735026919e0;
    real _t0873 = 0.e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = 0.e0;
    real _t0876 = 0.1e1;
    real _t0877 = 0.57735026919e0;
    real _t0878 = 0.e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    real _t087D = 0.1e1;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    tensor[4,4] _t087F = [_t086F, _t0874, _t0879, _t087E];
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.1e1;
    real _t0883 = 0.e0;
    vec4 _t0884 = [_t0880, _t0881, _t0882, _t0883];
    real _t0885 = 0.1e1;
    real _t0886 = 0.e0;
    real _t0887 = 0.e0;
    real _t0888 = 0.e0;
    vec4 _t0889 = [_t0885, _t0886, _t0887, _t0888];
    real _t088A = 0.e0;
    real _t088B = 0.1e1;
    real _t088C = 0.e0;
    real _t088D = 0.e0;
    vec4 _t088E = [_t088A, _t088B, _t088C, _t088D];
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    tensor[4,4] _t0894 = [_t0884, _t0889, _t088E, _t0893];
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    real _t0897 = 0.e0;
    real _t0898 = 0.e0;
    vec4 _t0899 = [_t0895, _t0896, _t0897, _t0898];
    real _t089A = 0.e0;
    real _t089B = 0.e0;
    real _t089C = -0.1e1;
    real _t089D = 0.e0;
    vec4 _t089E = [_t089A, _t089B, _t089C, _t089D];
    real _t089F = 0.e0;
    real _t08A0 = 0.1e1;
    real _t08A1 = 0.e0;
    real _t08A2 = 0.e0;
    vec4 _t08A3 = [_t089F, _t08A0, _t08A1, _t08A2];
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.1e1;
    vec4 _t08A8 = [_t08A4, _t08A5, _t08A6, _t08A7];
    tensor[4,4] _t08A9 = [_t0899, _t089E, _t08A3, _t08A8];
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    real _t08AC = 0.e0;
    real _t08AD = 0.e0;
    vec4 _t08AE = [_t08AA, _t08AB, _t08AC, _t08AD];
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    real _t08B1 = 0.e0;
    real _t08B2 = 0.e0;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.1e1;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    real _t08BB = 0.e0;
    real _t08BC = 0.1e1;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    tensor[4,4] _t08BE = [_t08AE, _t08B3, _t08B8, _t08BD];
    tensor[4,4][4] _t08BF = {_t087F, _t0894, _t08A9, _t08BE};
    tensor[4,4][4][4] _t08C0 = {_t07C0, _t0815, _t086A, _t08BF};
    real _t08C1 = time0486[1];
    int _t08C2 = prim $r2i01B7 (_t08C1);
    tensor[4,4][4] _t08C3 = prim $sub01C0<tensor[4,4][4]; %4> (_t08C0, _t08C2);
    real _t08C4 = time0486[1];
    int _t08C5 = prim $r2i01B7 (_t08C4);
    int[2] _t08C6 = func nextCell4048A (_t08C5, cellId0483, mesh0482);
    int _t08C7 = 1;
    int _t08C8 = prim $sub01C0<int; %2> (_t08C6, _t08C7);
    tensor[4,4] _t08C9 = prim $sub01C0<tensor[4,4]; %4> (_t08C3, _t08C8);
    real _t08CA = time0486[0];
    vec3 _t08CB = prim *0036<$[3]> (_t08CA, dPos0485);
    vec3 _t08CC = prim +0017<$[3]> (_t08CB, refPos0484);
    real _t08CD = _t08CC[0];
    real _t08CE = time0486[0];
    vec3 _t08CF = prim *0036<$[3]> (_t08CE, dPos0485);
    vec3 _t08D0 = prim +0017<$[3]> (_t08CF, refPos0484);
    real _t08D1 = _t08D0[1];
    real _t08D2 = time0486[0];
    vec3 _t08D3 = prim *0036<$[3]> (_t08D2, dPos0485);
    vec3 _t08D4 = prim +0017<$[3]> (_t08D3, refPos0484);
    real _t08D5 = _t08D4[2];
    real _t08D6 = 0.1e1;
    vec4 _t08D7 = [_t08CD, _t08D1, _t08D5, _t08D6];
    vec4 _t08D8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t08C9, _t08D7);
    real _t08D9 = _t08D8[1];
    real _t08DA = 0.1e1;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    vec4 _t08DE = [_t08DA, _t08DB, _t08DC, _t08DD];
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    real _t08E2 = 0.e0;
    vec4 _t08E3 = [_t08DF, _t08E0, _t08E1, _t08E2];
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.1e1;
    real _t08E7 = 0.e0;
    vec4 _t08E8 = [_t08E4, _t08E5, _t08E6, _t08E7];
    real _t08E9 = 0.971445146547e-16;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    real _t08EC = 0.1e1;
    vec4 _t08ED = [_t08E9, _t08EA, _t08EB, _t08EC];
    tensor[4,4] _t08EE = [_t08DE, _t08E3, _t08E8, _t08ED];
    real _t08EF = 0.57735026919e0;
    real _t08F0 = 0.57735026919e0;
    real _t08F1 = 0.57735026919e0;
    real _t08F2 = -0.57735026919e0;
    vec4 _t08F3 = [_t08EF, _t08F0, _t08F1, _t08F2];
    real _t08F4 = -0.333333333333e0;
    real _t08F5 = 0.666666666667e0;
    real _t08F6 = -0.333333333333e0;
    real _t08F7 = 0.333333333333e0;
    vec4 _t08F8 = [_t08F4, _t08F5, _t08F6, _t08F7];
    real _t08F9 = -0.333333333333e0;
    real _t08FA = -0.333333333333e0;
    real _t08FB = 0.666666666667e0;
    real _t08FC = 0.333333333333e0;
    vec4 _t08FD = [_t08F9, _t08FA, _t08FB, _t08FC];
    real _t08FE = 0.971445146547e-16;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    real _t0901 = 0.1e1;
    vec4 _t0902 = [_t08FE, _t08FF, _t0900, _t0901];
    tensor[4,4] _t0903 = [_t08F3, _t08F8, _t08FD, _t0902];
    real _t0904 = -0.333333333333e0;
    real _t0905 = 0.666666666667e0;
    real _t0906 = -0.333333333333e0;
    real _t0907 = 0.333333333333e0;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = -0.57735026919e0;
    real _t090A = -0.57735026919e0;
    real _t090B = -0.57735026919e0;
    real _t090C = 0.57735026919e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = -0.333333333333e0;
    real _t090F = -0.333333333333e0;
    real _t0910 = 0.666666666667e0;
    real _t0911 = 0.333333333333e0;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    real _t0913 = 0.971445146547e-16;
    real _t0914 = 0.e0;
    real _t0915 = 0.e0;
    real _t0916 = 0.1e1;
    vec4 _t0917 = [_t0913, _t0914, _t0915, _t0916];
    tensor[4,4] _t0918 = [_t0908, _t090D, _t0912, _t0917];
    real _t0919 = -0.333333333333e0;
    real _t091A = 0.666666666667e0;
    real _t091B = -0.333333333333e0;
    real _t091C = 0.333333333333e0;
    vec4 _t091D = [_t0919, _t091A, _t091B, _t091C];
    real _t091E = -0.333333333333e0;
    real _t091F = -0.333333333333e0;
    real _t0920 = 0.666666666667e0;
    real _t0921 = 0.333333333333e0;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.57735026919e0;
    real _t0924 = 0.57735026919e0;
    real _t0925 = 0.57735026919e0;
    real _t0926 = -0.57735026919e0;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    real _t0928 = 0.971445146547e-16;
    real _t0929 = 0.e0;
    real _t092A = 0.e0;
    real _t092B = 0.1e1;
    vec4 _t092C = [_t0928, _t0929, _t092A, _t092B];
    tensor[4,4] _t092D = [_t091D, _t0922, _t0927, _t092C];
    tensor[4,4][4] _t092E = {_t08EE, _t0903, _t0918, _t092D};
    real _t092F = 0.57735026919e0;
    real _t0930 = -0.1e1;
    real _t0931 = -0.1e1;
    real _t0932 = 0.1e1;
    vec4 _t0933 = [_t092F, _t0930, _t0931, _t0932];
    real _t0934 = 0.57735026919e0;
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    vec4 _t0938 = [_t0934, _t0935, _t0936, _t0937];
    real _t0939 = 0.57735026919e0;
    real _t093A = 0.e0;
    real _t093B = 0.1e1;
    real _t093C = 0.e0;
    vec4 _t093D = [_t0939, _t093A, _t093B, _t093C];
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    real _t0941 = 0.1e1;
    vec4 _t0942 = [_t093E, _t093F, _t0940, _t0941];
    tensor[4,4] _t0943 = [_t0933, _t0938, _t093D, _t0942];
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    real _t0947 = 0.e0;
    vec4 _t0948 = [_t0944, _t0945, _t0946, _t0947];
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    vec4 _t094D = [_t0949, _t094A, _t094B, _t094C];
    real _t094E = 0.e0;
    real _t094F = 0.e0;
    real _t0950 = 0.1e1;
    real _t0951 = 0.e0;
    vec4 _t0952 = [_t094E, _t094F, _t0950, _t0951];
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    real _t0955 = 0.e0;
    real _t0956 = 0.1e1;
    vec4 _t0957 = [_t0953, _t0954, _t0955, _t0956];
    tensor[4,4] _t0958 = [_t0948, _t094D, _t0952, _t0957];
    real _t0959 = 0.e0;
    real _t095A = 0.1e1;
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    vec4 _t095D = [_t0959, _t095A, _t095B, _t095C];
    real _t095E = -0.1e1;
    real _t095F = 0.e0;
    real _t0960 = 0.e0;
    real _t0961 = 0.e0;
    vec4 _t0962 = [_t095E, _t095F, _t0960, _t0961];
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    real _t0966 = 0.e0;
    vec4 _t0967 = [_t0963, _t0964, _t0965, _t0966];
    real _t0968 = 0.e0;
    real _t0969 = 0.e0;
    real _t096A = 0.e0;
    real _t096B = 0.1e1;
    vec4 _t096C = [_t0968, _t0969, _t096A, _t096B];
    tensor[4,4] _t096D = [_t095D, _t0962, _t0967, _t096C];
    real _t096E = 0.e0;
    real _t096F = 0.1e1;
    real _t0970 = 0.e0;
    real _t0971 = 0.e0;
    vec4 _t0972 = [_t096E, _t096F, _t0970, _t0971];
    real _t0973 = 0.e0;
    real _t0974 = 0.e0;
    real _t0975 = 0.1e1;
    real _t0976 = 0.e0;
    vec4 _t0977 = [_t0973, _t0974, _t0975, _t0976];
    real _t0978 = 0.1e1;
    real _t0979 = 0.e0;
    real _t097A = 0.e0;
    real _t097B = 0.e0;
    vec4 _t097C = [_t0978, _t0979, _t097A, _t097B];
    real _t097D = 0.e0;
    real _t097E = 0.e0;
    real _t097F = 0.e0;
    real _t0980 = 0.1e1;
    vec4 _t0981 = [_t097D, _t097E, _t097F, _t0980];
    tensor[4,4] _t0982 = [_t0972, _t0977, _t097C, _t0981];
    tensor[4,4][4] _t0983 = {_t0943, _t0958, _t096D, _t0982};
    real _t0984 = -0.1e1;
    real _t0985 = -0.57735026919e0;
    real _t0986 = -0.1e1;
    real _t0987 = 0.1e1;
    vec4 _t0988 = [_t0984, _t0985, _t0986, _t0987];
    real _t0989 = 0.1e1;
    real _t098A = -0.57735026919e0;
    real _t098B = 0.e0;
    real _t098C = 0.e0;
    vec4 _t098D = [_t0989, _t098A, _t098B, _t098C];
    real _t098E = 0.e0;
    real _t098F = -0.57735026919e0;
    real _t0990 = 0.1e1;
    real _t0991 = 0.e0;
    vec4 _t0992 = [_t098E, _t098F, _t0990, _t0991];
    real _t0993 = 0.e0;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    real _t0996 = 0.1e1;
    vec4 _t0997 = [_t0993, _t0994, _t0995, _t0996];
    tensor[4,4] _t0998 = [_t0988, _t098D, _t0992, _t0997];
    real _t0999 = 0.e0;
    real _t099A = -0.1e1;
    real _t099B = 0.e0;
    real _t099C = 0.e0;
    vec4 _t099D = [_t0999, _t099A, _t099B, _t099C];
    real _t099E = 0.1e1;
    real _t099F = 0.e0;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    vec4 _t09A2 = [_t099E, _t099F, _t09A0, _t09A1];
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.1e1;
    real _t09A6 = 0.e0;
    vec4 _t09A7 = [_t09A3, _t09A4, _t09A5, _t09A6];
    real _t09A8 = 0.e0;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    real _t09AB = 0.1e1;
    vec4 _t09AC = [_t09A8, _t09A9, _t09AA, _t09AB];
    tensor[4,4] _t09AD = [_t099D, _t09A2, _t09A7, _t09AC];
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    real _t09B0 = 0.e0;
    real _t09B1 = 0.e0;
    vec4 _t09B2 = [_t09AE, _t09AF, _t09B0, _t09B1];
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    real _t09B5 = 0.e0;
    real _t09B6 = 0.e0;
    vec4 _t09B7 = [_t09B3, _t09B4, _t09B5, _t09B6];
    real _t09B8 = 0.e0;
    real _t09B9 = 0.e0;
    real _t09BA = 0.1e1;
    real _t09BB = 0.e0;
    vec4 _t09BC = [_t09B8, _t09B9, _t09BA, _t09BB];
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    real _t09C0 = 0.1e1;
    vec4 _t09C1 = [_t09BD, _t09BE, _t09BF, _t09C0];
    tensor[4,4] _t09C2 = [_t09B2, _t09B7, _t09BC, _t09C1];
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.e0;
    real _t09C6 = 0.e0;
    vec4 _t09C7 = [_t09C3, _t09C4, _t09C5, _t09C6];
    real _t09C8 = 0.e0;
    real _t09C9 = 0.e0;
    real _t09CA = 0.1e1;
    real _t09CB = 0.e0;
    vec4 _t09CC = [_t09C8, _t09C9, _t09CA, _t09CB];
    real _t09CD = 0.e0;
    real _t09CE = -0.1e1;
    real _t09CF = 0.e0;
    real _t09D0 = 0.e0;
    vec4 _t09D1 = [_t09CD, _t09CE, _t09CF, _t09D0];
    real _t09D2 = 0.e0;
    real _t09D3 = 0.e0;
    real _t09D4 = 0.e0;
    real _t09D5 = 0.1e1;
    vec4 _t09D6 = [_t09D2, _t09D3, _t09D4, _t09D5];
    tensor[4,4] _t09D7 = [_t09C7, _t09CC, _t09D1, _t09D6];
    tensor[4,4][4] _t09D8 = {_t0998, _t09AD, _t09C2, _t09D7};
    real _t09D9 = -0.1e1;
    real _t09DA = -0.1e1;
    real _t09DB = 0.57735026919e0;
    real _t09DC = 0.1e1;
    vec4 _t09DD = [_t09D9, _t09DA, _t09DB, _t09DC];
    real _t09DE = 0.1e1;
    real _t09DF = 0.e0;
    real _t09E0 = 0.57735026919e0;
    real _t09E1 = 0.e0;
    vec4 _t09E2 = [_t09DE, _t09DF, _t09E0, _t09E1];
    real _t09E3 = 0.e0;
    real _t09E4 = 0.1e1;
    real _t09E5 = 0.57735026919e0;
    real _t09E6 = 0.e0;
    vec4 _t09E7 = [_t09E3, _t09E4, _t09E5, _t09E6];
    real _t09E8 = 0.e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    real _t09EB = 0.1e1;
    vec4 _t09EC = [_t09E8, _t09E9, _t09EA, _t09EB];
    tensor[4,4] _t09ED = [_t09DD, _t09E2, _t09E7, _t09EC];
    real _t09EE = 0.e0;
    real _t09EF = 0.e0;
    real _t09F0 = 0.1e1;
    real _t09F1 = 0.e0;
    vec4 _t09F2 = [_t09EE, _t09EF, _t09F0, _t09F1];
    real _t09F3 = 0.1e1;
    real _t09F4 = 0.e0;
    real _t09F5 = 0.e0;
    real _t09F6 = 0.e0;
    vec4 _t09F7 = [_t09F3, _t09F4, _t09F5, _t09F6];
    real _t09F8 = 0.e0;
    real _t09F9 = 0.1e1;
    real _t09FA = 0.e0;
    real _t09FB = 0.e0;
    vec4 _t09FC = [_t09F8, _t09F9, _t09FA, _t09FB];
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    real _t0A00 = 0.1e1;
    vec4 _t0A01 = [_t09FD, _t09FE, _t09FF, _t0A00];
    tensor[4,4] _t0A02 = [_t09F2, _t09F7, _t09FC, _t0A01];
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    real _t0A06 = 0.e0;
    vec4 _t0A07 = [_t0A03, _t0A04, _t0A05, _t0A06];
    real _t0A08 = 0.e0;
    real _t0A09 = 0.e0;
    real _t0A0A = -0.1e1;
    real _t0A0B = 0.e0;
    vec4 _t0A0C = [_t0A08, _t0A09, _t0A0A, _t0A0B];
    real _t0A0D = 0.e0;
    real _t0A0E = 0.1e1;
    real _t0A0F = 0.e0;
    real _t0A10 = 0.e0;
    vec4 _t0A11 = [_t0A0D, _t0A0E, _t0A0F, _t0A10];
    real _t0A12 = 0.e0;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    real _t0A15 = 0.1e1;
    vec4 _t0A16 = [_t0A12, _t0A13, _t0A14, _t0A15];
    tensor[4,4] _t0A17 = [_t0A07, _t0A0C, _t0A11, _t0A16];
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    real _t0A1B = 0.e0;
    vec4 _t0A1C = [_t0A18, _t0A19, _t0A1A, _t0A1B];
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    real _t0A1F = 0.e0;
    real _t0A20 = 0.e0;
    vec4 _t0A21 = [_t0A1D, _t0A1E, _t0A1F, _t0A20];
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.1e1;
    real _t0A25 = 0.e0;
    vec4 _t0A26 = [_t0A22, _t0A23, _t0A24, _t0A25];
    real _t0A27 = 0.e0;
    real _t0A28 = 0.e0;
    real _t0A29 = 0.e0;
    real _t0A2A = 0.1e1;
    vec4 _t0A2B = [_t0A27, _t0A28, _t0A29, _t0A2A];
    tensor[4,4] _t0A2C = [_t0A1C, _t0A21, _t0A26, _t0A2B];
    tensor[4,4][4] _t0A2D = {_t09ED, _t0A02, _t0A17, _t0A2C};
    tensor[4,4][4][4] _t0A2E = {_t092E, _t0983, _t09D8, _t0A2D};
    real _t0A2F = time0486[1];
    int _t0A30 = prim $r2i01B7 (_t0A2F);
    tensor[4,4][4] _t0A31 = prim $sub01C0<tensor[4,4][4]; %4> (_t0A2E, _t0A30);
    real _t0A32 = time0486[1];
    int _t0A33 = prim $r2i01B7 (_t0A32);
    int[2] _t0A34 = func nextCell4048A (_t0A33, cellId0483, mesh0482);
    int _t0A35 = 1;
    int _t0A36 = prim $sub01C0<int; %2> (_t0A34, _t0A35);
    tensor[4,4] _t0A37 = prim $sub01C0<tensor[4,4]; %4> (_t0A31, _t0A36);
    real _t0A38 = time0486[0];
    vec3 _t0A39 = prim *0036<$[3]> (_t0A38, dPos0485);
    vec3 _t0A3A = prim +0017<$[3]> (_t0A39, refPos0484);
    real _t0A3B = _t0A3A[0];
    real _t0A3C = time0486[0];
    vec3 _t0A3D = prim *0036<$[3]> (_t0A3C, dPos0485);
    vec3 _t0A3E = prim +0017<$[3]> (_t0A3D, refPos0484);
    real _t0A3F = _t0A3E[1];
    real _t0A40 = time0486[0];
    vec3 _t0A41 = prim *0036<$[3]> (_t0A40, dPos0485);
    vec3 _t0A42 = prim +0017<$[3]> (_t0A41, refPos0484);
    real _t0A43 = _t0A42[2];
    real _t0A44 = 0.1e1;
    vec4 _t0A45 = [_t0A3B, _t0A3F, _t0A43, _t0A44];
    vec4 _t0A46 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A37, _t0A45);
    real _t0A47 = _t0A46[2];
    vec3 _t0A48 = [_t076B, _t08D9, _t0A47];
    real _t0A49 = time0486[1];
    int _t0A4A = prim $r2i01B7 (_t0A49);
    int[2] _t0A4B = func nextCell4048A (_t0A4A, cellId0483, mesh0482);
    int _t0A4C = 1;
    int _t0A4D = prim $sub01C0<int; %2> (_t0A4B, _t0A4C);
    Femdata: MeshPos _t0A4E = extractFemItemN((mesh0482, _t05FD, _t0A48, _t0A4D),RefBuild(Mesh),);
    return _t0A4E;
  } else {
    real _t0A4F = time0486[0];
    vec3 _t0A50 = prim *0036<$[3]> (_t0A4F, dPos0485);
    vec3 _t0A51 = prim +0017<$[3]> (_t0A50, refPos0484);
    Femdata: MeshPos _t0A52 = extractFemItemN((mesh0482, _t0A51),InvalidBuildBoundary(MeshPos),);
    return _t0A52;
  }
}
function int[2]#8 nextCell4048A (int faceIdx0A53, int cell0A54, Femdata: Mesh mesh0A55)
{
  int _t0A56 = 8;
  int _t0A57 = prim *0033 (cell0A54, _t0A56);
  int _t0A58 = 2;
  int _t0A59 = prim *0033 (faceIdx0A53, _t0A58);
  int _t0A5A = prim +0015 (_t0A57, _t0A59);
  int[2] _t0A5B = extractFemItemN((mesh0A55, _t0A5A),CellFaceCell(Mesh),);
  return _t0A5B;
}
function vec2#0 _enter0A5C (vec3 refPos0A5D, vec3 dPos0A5E)
{
  real time0A5F = +inf;
  int face0A60 = -1;
  real faceTime0A61 = -inf;
  real _t0A62 = 0.57735026919e0;
  real _t0A63 = 0.57735026919e0;
  real _t0A64 = 0.57735026919e0;
  real _t0A65 = 0.57735026919e0;
  vec3 _t0A66 = [_t0A63, _t0A64, _t0A65];
  real _t0A67 = prim •00CE<$[3]; $[3]; $[]> (_t0A66, refPos0A5D);
  real _t0A68 = prim -0026<$[]> (_t0A62, _t0A67);
  real _t0A69 = 0.57735026919e0;
  real _t0A6A = 0.57735026919e0;
  real _t0A6B = 0.57735026919e0;
  vec3 _t0A6C = [_t0A69, _t0A6A, _t0A6B];
  real _t0A6D = prim •00CE<$[3]; $[3]; $[]> (_t0A6C, dPos0A5E);
  real _t0A6E = prim /0055 (_t0A68, _t0A6D);
  real _t0A6F = -0.1e-15;
  bool _t0A70 = prim >=007E (_t0A6E, _t0A6F);
  real _t0A71 = 0.57735026919e0;
  real _t0A72 = 0.57735026919e0;
  real _t0A73 = 0.57735026919e0;
  real _t0A74 = 0.57735026919e0;
  vec3 _t0A75 = [_t0A72, _t0A73, _t0A74];
  real _t0A76 = prim •00CE<$[3]; $[3]; $[]> (_t0A75, refPos0A5D);
  real _t0A77 = prim -0026<$[]> (_t0A71, _t0A76);
  real _t0A78 = 0.57735026919e0;
  real _t0A79 = 0.57735026919e0;
  real _t0A7A = 0.57735026919e0;
  vec3 _t0A7B = [_t0A78, _t0A79, _t0A7A];
  real _t0A7C = prim •00CE<$[3]; $[3]; $[]> (_t0A7B, dPos0A5E);
  real _t0A7D = prim /0055 (_t0A77, _t0A7C);
  bool _t0A7E = prim >0080 (time0A5F, _t0A7D);
  real _t0A7F = 0.57735026919e0;
  real _t0A80 = 0.57735026919e0;
  real _t0A81 = 0.57735026919e0;
  vec3 _t0A82 = [_t0A7F, _t0A80, _t0A81];
  real _t0A83 = prim •00CE<$[3]; $[3]; $[]> (_t0A82, dPos0A5E);
  real _t0A84 = prim |()|00B5<$[]> (_t0A83);
  real _t0A85 = 0.1e-20;
  bool _t0A86 = prim >=007E (_t0A84, _t0A85);
  bool _t0A87 = prim $and01C4 (_t0A7E, _t0A86);
  bool _t0A88 = prim $and01C4 (_t0A70, _t0A87);
  if _t0A88 {
    real _t0A89 = 0.1e1;
    real _t0A8A = 0.1e-8;
    real _t0A8B = prim +0017<$[]> (_t0A89, _t0A8A);
    real _t0A8C = 0.1e1;
    real _t0A8D = 0.1e1;
    real _t0A8E = 0.1e1;
    vec3 _t0A8F = [_t0A8C, _t0A8D, _t0A8E];
    real _t0A90 = 0.57735026919e0;
    real _t0A91 = 0.57735026919e0;
    real _t0A92 = 0.57735026919e0;
    real _t0A93 = 0.57735026919e0;
    vec3 _t0A94 = [_t0A91, _t0A92, _t0A93];
    real _t0A95 = prim •00CE<$[3]; $[3]; $[]> (_t0A94, refPos0A5D);
    real _t0A96 = prim -0026<$[]> (_t0A90, _t0A95);
    real _t0A97 = 0.57735026919e0;
    real _t0A98 = 0.57735026919e0;
    real _t0A99 = 0.57735026919e0;
    vec3 _t0A9A = [_t0A97, _t0A98, _t0A99];
    real _t0A9B = prim •00CE<$[3]; $[3]; $[]> (_t0A9A, dPos0A5E);
    real _t0A9C = prim /0055 (_t0A96, _t0A9B);
    vec3 _t0A9D = prim *0038<$[3]> (dPos0A5E, _t0A9C);
    vec3 _t0A9E = prim +0017<$[3]> (refPos0A5D, _t0A9D);
    real _t0A9F = prim •00CE<$[3]; $[3]; $[]> (_t0A8F, _t0A9E);
    bool _t0AA0 = prim >0080 (_t0A8B, _t0A9F);
    real _t0AA1 = 0.1e-8;
    real _t0AA2 = 0.1e-8;
    real _t0AA3 = 0.1e-8;
    vec3 _t0AA4 = [_t0AA1, _t0AA2, _t0AA3];
    real _t0AA5 = 0.57735026919e0;
    real _t0AA6 = 0.57735026919e0;
    real _t0AA7 = 0.57735026919e0;
    real _t0AA8 = 0.57735026919e0;
    vec3 _t0AA9 = [_t0AA6, _t0AA7, _t0AA8];
    real _t0AAA = prim •00CE<$[3]; $[3]; $[]> (_t0AA9, refPos0A5D);
    real _t0AAB = prim -0026<$[]> (_t0AA5, _t0AAA);
    real _t0AAC = 0.57735026919e0;
    real _t0AAD = 0.57735026919e0;
    real _t0AAE = 0.57735026919e0;
    vec3 _t0AAF = [_t0AAC, _t0AAD, _t0AAE];
    real _t0AB0 = prim •00CE<$[3]; $[3]; $[]> (_t0AAF, dPos0A5E);
    real _t0AB1 = prim /0055 (_t0AAB, _t0AB0);
    vec3 _t0AB2 = prim *0038<$[3]> (dPos0A5E, _t0AB1);
    vec3 _t0AB3 = prim +0017<$[3]> (refPos0A5D, _t0AB2);
    vec3 _t0AB4 = prim +0017<$[3]> (_t0AA4, _t0AB3);
    real _t0AB5 = _t0AB4[0];
    real _t0AB6 = -0.e0;
    bool _t0AB7 = prim >0080 (_t0AB5, _t0AB6);
    real _t0AB8 = 0.1e-8;
    real _t0AB9 = 0.1e-8;
    real _t0ABA = 0.1e-8;
    vec3 _t0ABB = [_t0AB8, _t0AB9, _t0ABA];
    real _t0ABC = 0.57735026919e0;
    real _t0ABD = 0.57735026919e0;
    real _t0ABE = 0.57735026919e0;
    real _t0ABF = 0.57735026919e0;
    vec3 _t0AC0 = [_t0ABD, _t0ABE, _t0ABF];
    real _t0AC1 = prim •00CE<$[3]; $[3]; $[]> (_t0AC0, refPos0A5D);
    real _t0AC2 = prim -0026<$[]> (_t0ABC, _t0AC1);
    real _t0AC3 = 0.57735026919e0;
    real _t0AC4 = 0.57735026919e0;
    real _t0AC5 = 0.57735026919e0;
    vec3 _t0AC6 = [_t0AC3, _t0AC4, _t0AC5];
    real _t0AC7 = prim •00CE<$[3]; $[3]; $[]> (_t0AC6, dPos0A5E);
    real _t0AC8 = prim /0055 (_t0AC2, _t0AC7);
    vec3 _t0AC9 = prim *0038<$[3]> (dPos0A5E, _t0AC8);
    vec3 _t0ACA = prim +0017<$[3]> (refPos0A5D, _t0AC9);
    vec3 _t0ACB = prim +0017<$[3]> (_t0ABB, _t0ACA);
    real _t0ACC = _t0ACB[1];
    real _t0ACD = -0.e0;
    bool _t0ACE = prim >0080 (_t0ACC, _t0ACD);
    real _t0ACF = 0.1e-8;
    real _t0AD0 = 0.1e-8;
    real _t0AD1 = 0.1e-8;
    vec3 _t0AD2 = [_t0ACF, _t0AD0, _t0AD1];
    real _t0AD3 = 0.57735026919e0;
    real _t0AD4 = 0.57735026919e0;
    real _t0AD5 = 0.57735026919e0;
    real _t0AD6 = 0.57735026919e0;
    vec3 _t0AD7 = [_t0AD4, _t0AD5, _t0AD6];
    real _t0AD8 = prim •00CE<$[3]; $[3]; $[]> (_t0AD7, refPos0A5D);
    real _t0AD9 = prim -0026<$[]> (_t0AD3, _t0AD8);
    real _t0ADA = 0.57735026919e0;
    real _t0ADB = 0.57735026919e0;
    real _t0ADC = 0.57735026919e0;
    vec3 _t0ADD = [_t0ADA, _t0ADB, _t0ADC];
    real _t0ADE = prim •00CE<$[3]; $[3]; $[]> (_t0ADD, dPos0A5E);
    real _t0ADF = prim /0055 (_t0AD9, _t0ADE);
    vec3 _t0AE0 = prim *0038<$[3]> (dPos0A5E, _t0ADF);
    vec3 _t0AE1 = prim +0017<$[3]> (refPos0A5D, _t0AE0);
    vec3 _t0AE2 = prim +0017<$[3]> (_t0AD2, _t0AE1);
    real _t0AE3 = _t0AE2[2];
    real _t0AE4 = -0.e0;
    bool _t0AE5 = prim >0080 (_t0AE3, _t0AE4);
    bool _t0AE6 = prim $and01C4 (_t0ACE, _t0AE5);
    bool _t0AE7 = prim $and01C4 (_t0AB7, _t0AE6);
    bool _t0AE8 = prim $and01C4 (_t0AA0, _t0AE7);
    if _t0AE8 {
      real _t0AE9 = 0.57735026919e0;
      real _t0AEA = 0.57735026919e0;
      real _t0AEB = 0.57735026919e0;
      real _t0AEC = 0.57735026919e0;
      vec3 _t0AED = [_t0AEA, _t0AEB, _t0AEC];
      real _t0AEE = prim •00CE<$[3]; $[3]; $[]> (_t0AED, refPos0A5D);
      real _t0AEF = prim -0026<$[]> (_t0AE9, _t0AEE);
      real _t0AF0 = 0.57735026919e0;
      real _t0AF1 = 0.57735026919e0;
      real _t0AF2 = 0.57735026919e0;
      vec3 _t0AF3 = [_t0AF0, _t0AF1, _t0AF2];
      real _t0AF4 = prim •00CE<$[3]; $[3]; $[]> (_t0AF3, dPos0A5E);
      time0A5F = prim /0055 (_t0AEF, _t0AF4);
      face0A60 = 0;
    }
  }
  real _t0AF5 = 0.e0;
  real _t0AF6 = 0.1e1;
  real _t0AF7 = 0.e0;
  real _t0AF8 = 0.e0;
  vec3 _t0AF9 = [_t0AF6, _t0AF7, _t0AF8];
  real _t0AFA = prim •00CE<$[3]; $[3]; $[]> (_t0AF9, refPos0A5D);
  real _t0AFB = prim -0026<$[]> (_t0AF5, _t0AFA);
  real _t0AFC = 0.1e1;
  real _t0AFD = 0.e0;
  real _t0AFE = 0.e0;
  vec3 _t0AFF = [_t0AFC, _t0AFD, _t0AFE];
  real _t0B00 = prim •00CE<$[3]; $[3]; $[]> (_t0AFF, dPos0A5E);
  real _t0B01 = prim /0055 (_t0AFB, _t0B00);
  real _t0B02 = -0.1e-15;
  bool _t0B03 = prim >=007E (_t0B01, _t0B02);
  real _t0B04 = 0.e0;
  real _t0B05 = 0.1e1;
  real _t0B06 = 0.e0;
  real _t0B07 = 0.e0;
  vec3 _t0B08 = [_t0B05, _t0B06, _t0B07];
  real _t0B09 = prim •00CE<$[3]; $[3]; $[]> (_t0B08, refPos0A5D);
  real _t0B0A = prim -0026<$[]> (_t0B04, _t0B09);
  real _t0B0B = 0.1e1;
  real _t0B0C = 0.e0;
  real _t0B0D = 0.e0;
  vec3 _t0B0E = [_t0B0B, _t0B0C, _t0B0D];
  real _t0B0F = prim •00CE<$[3]; $[3]; $[]> (_t0B0E, dPos0A5E);
  real _t0B10 = prim /0055 (_t0B0A, _t0B0F);
  bool _t0B11 = prim >0080 (time0A5F, _t0B10);
  real _t0B12 = 0.1e1;
  real _t0B13 = 0.e0;
  real _t0B14 = 0.e0;
  vec3 _t0B15 = [_t0B12, _t0B13, _t0B14];
  real _t0B16 = prim •00CE<$[3]; $[3]; $[]> (_t0B15, dPos0A5E);
  real _t0B17 = prim |()|00B5<$[]> (_t0B16);
  real _t0B18 = 0.1e-20;
  bool _t0B19 = prim >=007E (_t0B17, _t0B18);
  bool _t0B1A = prim $and01C4 (_t0B11, _t0B19);
  bool _t0B1B = prim $and01C4 (_t0B03, _t0B1A);
  if _t0B1B {
    real _t0B1C = 0.1e1;
    real _t0B1D = 0.1e-8;
    real _t0B1E = prim +0017<$[]> (_t0B1C, _t0B1D);
    real _t0B1F = 0.1e1;
    real _t0B20 = 0.1e1;
    real _t0B21 = 0.1e1;
    vec3 _t0B22 = [_t0B1F, _t0B20, _t0B21];
    real _t0B23 = 0.e0;
    real _t0B24 = 0.1e1;
    real _t0B25 = 0.e0;
    real _t0B26 = 0.e0;
    vec3 _t0B27 = [_t0B24, _t0B25, _t0B26];
    real _t0B28 = prim •00CE<$[3]; $[3]; $[]> (_t0B27, refPos0A5D);
    real _t0B29 = prim -0026<$[]> (_t0B23, _t0B28);
    real _t0B2A = 0.1e1;
    real _t0B2B = 0.e0;
    real _t0B2C = 0.e0;
    vec3 _t0B2D = [_t0B2A, _t0B2B, _t0B2C];
    real _t0B2E = prim •00CE<$[3]; $[3]; $[]> (_t0B2D, dPos0A5E);
    real _t0B2F = prim /0055 (_t0B29, _t0B2E);
    vec3 _t0B30 = prim *0038<$[3]> (dPos0A5E, _t0B2F);
    vec3 _t0B31 = prim +0017<$[3]> (refPos0A5D, _t0B30);
    real _t0B32 = prim •00CE<$[3]; $[3]; $[]> (_t0B22, _t0B31);
    bool _t0B33 = prim >0080 (_t0B1E, _t0B32);
    real _t0B34 = 0.1e-8;
    real _t0B35 = 0.1e-8;
    real _t0B36 = 0.1e-8;
    vec3 _t0B37 = [_t0B34, _t0B35, _t0B36];
    real _t0B38 = 0.e0;
    real _t0B39 = 0.1e1;
    real _t0B3A = 0.e0;
    real _t0B3B = 0.e0;
    vec3 _t0B3C = [_t0B39, _t0B3A, _t0B3B];
    real _t0B3D = prim •00CE<$[3]; $[3]; $[]> (_t0B3C, refPos0A5D);
    real _t0B3E = prim -0026<$[]> (_t0B38, _t0B3D);
    real _t0B3F = 0.1e1;
    real _t0B40 = 0.e0;
    real _t0B41 = 0.e0;
    vec3 _t0B42 = [_t0B3F, _t0B40, _t0B41];
    real _t0B43 = prim •00CE<$[3]; $[3]; $[]> (_t0B42, dPos0A5E);
    real _t0B44 = prim /0055 (_t0B3E, _t0B43);
    vec3 _t0B45 = prim *0038<$[3]> (dPos0A5E, _t0B44);
    vec3 _t0B46 = prim +0017<$[3]> (refPos0A5D, _t0B45);
    vec3 _t0B47 = prim +0017<$[3]> (_t0B37, _t0B46);
    real _t0B48 = _t0B47[0];
    real _t0B49 = -0.e0;
    bool _t0B4A = prim >0080 (_t0B48, _t0B49);
    real _t0B4B = 0.1e-8;
    real _t0B4C = 0.1e-8;
    real _t0B4D = 0.1e-8;
    vec3 _t0B4E = [_t0B4B, _t0B4C, _t0B4D];
    real _t0B4F = 0.e0;
    real _t0B50 = 0.1e1;
    real _t0B51 = 0.e0;
    real _t0B52 = 0.e0;
    vec3 _t0B53 = [_t0B50, _t0B51, _t0B52];
    real _t0B54 = prim •00CE<$[3]; $[3]; $[]> (_t0B53, refPos0A5D);
    real _t0B55 = prim -0026<$[]> (_t0B4F, _t0B54);
    real _t0B56 = 0.1e1;
    real _t0B57 = 0.e0;
    real _t0B58 = 0.e0;
    vec3 _t0B59 = [_t0B56, _t0B57, _t0B58];
    real _t0B5A = prim •00CE<$[3]; $[3]; $[]> (_t0B59, dPos0A5E);
    real _t0B5B = prim /0055 (_t0B55, _t0B5A);
    vec3 _t0B5C = prim *0038<$[3]> (dPos0A5E, _t0B5B);
    vec3 _t0B5D = prim +0017<$[3]> (refPos0A5D, _t0B5C);
    vec3 _t0B5E = prim +0017<$[3]> (_t0B4E, _t0B5D);
    real _t0B5F = _t0B5E[1];
    real _t0B60 = -0.e0;
    bool _t0B61 = prim >0080 (_t0B5F, _t0B60);
    real _t0B62 = 0.1e-8;
    real _t0B63 = 0.1e-8;
    real _t0B64 = 0.1e-8;
    vec3 _t0B65 = [_t0B62, _t0B63, _t0B64];
    real _t0B66 = 0.e0;
    real _t0B67 = 0.1e1;
    real _t0B68 = 0.e0;
    real _t0B69 = 0.e0;
    vec3 _t0B6A = [_t0B67, _t0B68, _t0B69];
    real _t0B6B = prim •00CE<$[3]; $[3]; $[]> (_t0B6A, refPos0A5D);
    real _t0B6C = prim -0026<$[]> (_t0B66, _t0B6B);
    real _t0B6D = 0.1e1;
    real _t0B6E = 0.e0;
    real _t0B6F = 0.e0;
    vec3 _t0B70 = [_t0B6D, _t0B6E, _t0B6F];
    real _t0B71 = prim •00CE<$[3]; $[3]; $[]> (_t0B70, dPos0A5E);
    real _t0B72 = prim /0055 (_t0B6C, _t0B71);
    vec3 _t0B73 = prim *0038<$[3]> (dPos0A5E, _t0B72);
    vec3 _t0B74 = prim +0017<$[3]> (refPos0A5D, _t0B73);
    vec3 _t0B75 = prim +0017<$[3]> (_t0B65, _t0B74);
    real _t0B76 = _t0B75[2];
    real _t0B77 = -0.e0;
    bool _t0B78 = prim >0080 (_t0B76, _t0B77);
    bool _t0B79 = prim $and01C4 (_t0B61, _t0B78);
    bool _t0B7A = prim $and01C4 (_t0B4A, _t0B79);
    bool _t0B7B = prim $and01C4 (_t0B33, _t0B7A);
    if _t0B7B {
      real _t0B7C = 0.e0;
      real _t0B7D = 0.1e1;
      real _t0B7E = 0.e0;
      real _t0B7F = 0.e0;
      vec3 _t0B80 = [_t0B7D, _t0B7E, _t0B7F];
      real _t0B81 = prim •00CE<$[3]; $[3]; $[]> (_t0B80, refPos0A5D);
      real _t0B82 = prim -0026<$[]> (_t0B7C, _t0B81);
      real _t0B83 = 0.1e1;
      real _t0B84 = 0.e0;
      real _t0B85 = 0.e0;
      vec3 _t0B86 = [_t0B83, _t0B84, _t0B85];
      real _t0B87 = prim •00CE<$[3]; $[3]; $[]> (_t0B86, dPos0A5E);
      time0A5F = prim /0055 (_t0B82, _t0B87);
      face0A60 = 1;
    }
  }
  real _t0B88 = 0.e0;
  real _t0B89 = 0.e0;
  real _t0B8A = -0.1e1;
  real _t0B8B = 0.e0;
  vec3 _t0B8C = [_t0B89, _t0B8A, _t0B8B];
  real _t0B8D = prim •00CE<$[3]; $[3]; $[]> (_t0B8C, refPos0A5D);
  real _t0B8E = prim -0026<$[]> (_t0B88, _t0B8D);
  real _t0B8F = 0.e0;
  real _t0B90 = -0.1e1;
  real _t0B91 = 0.e0;
  vec3 _t0B92 = [_t0B8F, _t0B90, _t0B91];
  real _t0B93 = prim •00CE<$[3]; $[3]; $[]> (_t0B92, dPos0A5E);
  real _t0B94 = prim /0055 (_t0B8E, _t0B93);
  real _t0B95 = -0.1e-15;
  bool _t0B96 = prim >=007E (_t0B94, _t0B95);
  real _t0B97 = 0.e0;
  real _t0B98 = 0.e0;
  real _t0B99 = -0.1e1;
  real _t0B9A = 0.e0;
  vec3 _t0B9B = [_t0B98, _t0B99, _t0B9A];
  real _t0B9C = prim •00CE<$[3]; $[3]; $[]> (_t0B9B, refPos0A5D);
  real _t0B9D = prim -0026<$[]> (_t0B97, _t0B9C);
  real _t0B9E = 0.e0;
  real _t0B9F = -0.1e1;
  real _t0BA0 = 0.e0;
  vec3 _t0BA1 = [_t0B9E, _t0B9F, _t0BA0];
  real _t0BA2 = prim •00CE<$[3]; $[3]; $[]> (_t0BA1, dPos0A5E);
  real _t0BA3 = prim /0055 (_t0B9D, _t0BA2);
  bool _t0BA4 = prim >0080 (time0A5F, _t0BA3);
  real _t0BA5 = 0.e0;
  real _t0BA6 = -0.1e1;
  real _t0BA7 = 0.e0;
  vec3 _t0BA8 = [_t0BA5, _t0BA6, _t0BA7];
  real _t0BA9 = prim •00CE<$[3]; $[3]; $[]> (_t0BA8, dPos0A5E);
  real _t0BAA = prim |()|00B5<$[]> (_t0BA9);
  real _t0BAB = 0.1e-20;
  bool _t0BAC = prim >=007E (_t0BAA, _t0BAB);
  bool _t0BAD = prim $and01C4 (_t0BA4, _t0BAC);
  bool _t0BAE = prim $and01C4 (_t0B96, _t0BAD);
  if _t0BAE {
    real _t0BAF = 0.1e1;
    real _t0BB0 = 0.1e-8;
    real _t0BB1 = prim +0017<$[]> (_t0BAF, _t0BB0);
    real _t0BB2 = 0.1e1;
    real _t0BB3 = 0.1e1;
    real _t0BB4 = 0.1e1;
    vec3 _t0BB5 = [_t0BB2, _t0BB3, _t0BB4];
    real _t0BB6 = 0.e0;
    real _t0BB7 = 0.e0;
    real _t0BB8 = -0.1e1;
    real _t0BB9 = 0.e0;
    vec3 _t0BBA = [_t0BB7, _t0BB8, _t0BB9];
    real _t0BBB = prim •00CE<$[3]; $[3]; $[]> (_t0BBA, refPos0A5D);
    real _t0BBC = prim -0026<$[]> (_t0BB6, _t0BBB);
    real _t0BBD = 0.e0;
    real _t0BBE = -0.1e1;
    real _t0BBF = 0.e0;
    vec3 _t0BC0 = [_t0BBD, _t0BBE, _t0BBF];
    real _t0BC1 = prim •00CE<$[3]; $[3]; $[]> (_t0BC0, dPos0A5E);
    real _t0BC2 = prim /0055 (_t0BBC, _t0BC1);
    vec3 _t0BC3 = prim *0038<$[3]> (dPos0A5E, _t0BC2);
    vec3 _t0BC4 = prim +0017<$[3]> (refPos0A5D, _t0BC3);
    real _t0BC5 = prim •00CE<$[3]; $[3]; $[]> (_t0BB5, _t0BC4);
    bool _t0BC6 = prim >0080 (_t0BB1, _t0BC5);
    real _t0BC7 = 0.1e-8;
    real _t0BC8 = 0.1e-8;
    real _t0BC9 = 0.1e-8;
    vec3 _t0BCA = [_t0BC7, _t0BC8, _t0BC9];
    real _t0BCB = 0.e0;
    real _t0BCC = 0.e0;
    real _t0BCD = -0.1e1;
    real _t0BCE = 0.e0;
    vec3 _t0BCF = [_t0BCC, _t0BCD, _t0BCE];
    real _t0BD0 = prim •00CE<$[3]; $[3]; $[]> (_t0BCF, refPos0A5D);
    real _t0BD1 = prim -0026<$[]> (_t0BCB, _t0BD0);
    real _t0BD2 = 0.e0;
    real _t0BD3 = -0.1e1;
    real _t0BD4 = 0.e0;
    vec3 _t0BD5 = [_t0BD2, _t0BD3, _t0BD4];
    real _t0BD6 = prim •00CE<$[3]; $[3]; $[]> (_t0BD5, dPos0A5E);
    real _t0BD7 = prim /0055 (_t0BD1, _t0BD6);
    vec3 _t0BD8 = prim *0038<$[3]> (dPos0A5E, _t0BD7);
    vec3 _t0BD9 = prim +0017<$[3]> (refPos0A5D, _t0BD8);
    vec3 _t0BDA = prim +0017<$[3]> (_t0BCA, _t0BD9);
    real _t0BDB = _t0BDA[0];
    real _t0BDC = -0.e0;
    bool _t0BDD = prim >0080 (_t0BDB, _t0BDC);
    real _t0BDE = 0.1e-8;
    real _t0BDF = 0.1e-8;
    real _t0BE0 = 0.1e-8;
    vec3 _t0BE1 = [_t0BDE, _t0BDF, _t0BE0];
    real _t0BE2 = 0.e0;
    real _t0BE3 = 0.e0;
    real _t0BE4 = -0.1e1;
    real _t0BE5 = 0.e0;
    vec3 _t0BE6 = [_t0BE3, _t0BE4, _t0BE5];
    real _t0BE7 = prim •00CE<$[3]; $[3]; $[]> (_t0BE6, refPos0A5D);
    real _t0BE8 = prim -0026<$[]> (_t0BE2, _t0BE7);
    real _t0BE9 = 0.e0;
    real _t0BEA = -0.1e1;
    real _t0BEB = 0.e0;
    vec3 _t0BEC = [_t0BE9, _t0BEA, _t0BEB];
    real _t0BED = prim •00CE<$[3]; $[3]; $[]> (_t0BEC, dPos0A5E);
    real _t0BEE = prim /0055 (_t0BE8, _t0BED);
    vec3 _t0BEF = prim *0038<$[3]> (dPos0A5E, _t0BEE);
    vec3 _t0BF0 = prim +0017<$[3]> (refPos0A5D, _t0BEF);
    vec3 _t0BF1 = prim +0017<$[3]> (_t0BE1, _t0BF0);
    real _t0BF2 = _t0BF1[1];
    real _t0BF3 = -0.e0;
    bool _t0BF4 = prim >0080 (_t0BF2, _t0BF3);
    real _t0BF5 = 0.1e-8;
    real _t0BF6 = 0.1e-8;
    real _t0BF7 = 0.1e-8;
    vec3 _t0BF8 = [_t0BF5, _t0BF6, _t0BF7];
    real _t0BF9 = 0.e0;
    real _t0BFA = 0.e0;
    real _t0BFB = -0.1e1;
    real _t0BFC = 0.e0;
    vec3 _t0BFD = [_t0BFA, _t0BFB, _t0BFC];
    real _t0BFE = prim •00CE<$[3]; $[3]; $[]> (_t0BFD, refPos0A5D);
    real _t0BFF = prim -0026<$[]> (_t0BF9, _t0BFE);
    real _t0C00 = 0.e0;
    real _t0C01 = -0.1e1;
    real _t0C02 = 0.e0;
    vec3 _t0C03 = [_t0C00, _t0C01, _t0C02];
    real _t0C04 = prim •00CE<$[3]; $[3]; $[]> (_t0C03, dPos0A5E);
    real _t0C05 = prim /0055 (_t0BFF, _t0C04);
    vec3 _t0C06 = prim *0038<$[3]> (dPos0A5E, _t0C05);
    vec3 _t0C07 = prim +0017<$[3]> (refPos0A5D, _t0C06);
    vec3 _t0C08 = prim +0017<$[3]> (_t0BF8, _t0C07);
    real _t0C09 = _t0C08[2];
    real _t0C0A = -0.e0;
    bool _t0C0B = prim >0080 (_t0C09, _t0C0A);
    bool _t0C0C = prim $and01C4 (_t0BF4, _t0C0B);
    bool _t0C0D = prim $and01C4 (_t0BDD, _t0C0C);
    bool _t0C0E = prim $and01C4 (_t0BC6, _t0C0D);
    if _t0C0E {
      real _t0C0F = 0.e0;
      real _t0C10 = 0.e0;
      real _t0C11 = -0.1e1;
      real _t0C12 = 0.e0;
      vec3 _t0C13 = [_t0C10, _t0C11, _t0C12];
      real _t0C14 = prim •00CE<$[3]; $[3]; $[]> (_t0C13, refPos0A5D);
      real _t0C15 = prim -0026<$[]> (_t0C0F, _t0C14);
      real _t0C16 = 0.e0;
      real _t0C17 = -0.1e1;
      real _t0C18 = 0.e0;
      vec3 _t0C19 = [_t0C16, _t0C17, _t0C18];
      real _t0C1A = prim •00CE<$[3]; $[3]; $[]> (_t0C19, dPos0A5E);
      time0A5F = prim /0055 (_t0C15, _t0C1A);
      face0A60 = 2;
    }
  }
  real _t0C1B = 0.e0;
  real _t0C1C = 0.e0;
  real _t0C1D = 0.e0;
  real _t0C1E = 0.1e1;
  vec3 _t0C1F = [_t0C1C, _t0C1D, _t0C1E];
  real _t0C20 = prim •00CE<$[3]; $[3]; $[]> (_t0C1F, refPos0A5D);
  real _t0C21 = prim -0026<$[]> (_t0C1B, _t0C20);
  real _t0C22 = 0.e0;
  real _t0C23 = 0.e0;
  real _t0C24 = 0.1e1;
  vec3 _t0C25 = [_t0C22, _t0C23, _t0C24];
  real _t0C26 = prim •00CE<$[3]; $[3]; $[]> (_t0C25, dPos0A5E);
  real _t0C27 = prim /0055 (_t0C21, _t0C26);
  real _t0C28 = -0.1e-15;
  bool _t0C29 = prim >=007E (_t0C27, _t0C28);
  real _t0C2A = 0.e0;
  real _t0C2B = 0.e0;
  real _t0C2C = 0.e0;
  real _t0C2D = 0.1e1;
  vec3 _t0C2E = [_t0C2B, _t0C2C, _t0C2D];
  real _t0C2F = prim •00CE<$[3]; $[3]; $[]> (_t0C2E, refPos0A5D);
  real _t0C30 = prim -0026<$[]> (_t0C2A, _t0C2F);
  real _t0C31 = 0.e0;
  real _t0C32 = 0.e0;
  real _t0C33 = 0.1e1;
  vec3 _t0C34 = [_t0C31, _t0C32, _t0C33];
  real _t0C35 = prim •00CE<$[3]; $[3]; $[]> (_t0C34, dPos0A5E);
  real _t0C36 = prim /0055 (_t0C30, _t0C35);
  bool _t0C37 = prim >0080 (time0A5F, _t0C36);
  real _t0C38 = 0.e0;
  real _t0C39 = 0.e0;
  real _t0C3A = 0.1e1;
  vec3 _t0C3B = [_t0C38, _t0C39, _t0C3A];
  real _t0C3C = prim •00CE<$[3]; $[3]; $[]> (_t0C3B, dPos0A5E);
  real _t0C3D = prim |()|00B5<$[]> (_t0C3C);
  real _t0C3E = 0.1e-20;
  bool _t0C3F = prim >=007E (_t0C3D, _t0C3E);
  bool _t0C40 = prim $and01C4 (_t0C37, _t0C3F);
  bool _t0C41 = prim $and01C4 (_t0C29, _t0C40);
  if _t0C41 {
    real _t0C42 = 0.1e1;
    real _t0C43 = 0.1e-8;
    real _t0C44 = prim +0017<$[]> (_t0C42, _t0C43);
    real _t0C45 = 0.1e1;
    real _t0C46 = 0.1e1;
    real _t0C47 = 0.1e1;
    vec3 _t0C48 = [_t0C45, _t0C46, _t0C47];
    real _t0C49 = 0.e0;
    real _t0C4A = 0.e0;
    real _t0C4B = 0.e0;
    real _t0C4C = 0.1e1;
    vec3 _t0C4D = [_t0C4A, _t0C4B, _t0C4C];
    real _t0C4E = prim •00CE<$[3]; $[3]; $[]> (_t0C4D, refPos0A5D);
    real _t0C4F = prim -0026<$[]> (_t0C49, _t0C4E);
    real _t0C50 = 0.e0;
    real _t0C51 = 0.e0;
    real _t0C52 = 0.1e1;
    vec3 _t0C53 = [_t0C50, _t0C51, _t0C52];
    real _t0C54 = prim •00CE<$[3]; $[3]; $[]> (_t0C53, dPos0A5E);
    real _t0C55 = prim /0055 (_t0C4F, _t0C54);
    vec3 _t0C56 = prim *0038<$[3]> (dPos0A5E, _t0C55);
    vec3 _t0C57 = prim +0017<$[3]> (refPos0A5D, _t0C56);
    real _t0C58 = prim •00CE<$[3]; $[3]; $[]> (_t0C48, _t0C57);
    bool _t0C59 = prim >0080 (_t0C44, _t0C58);
    real _t0C5A = 0.1e-8;
    real _t0C5B = 0.1e-8;
    real _t0C5C = 0.1e-8;
    vec3 _t0C5D = [_t0C5A, _t0C5B, _t0C5C];
    real _t0C5E = 0.e0;
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    real _t0C61 = 0.1e1;
    vec3 _t0C62 = [_t0C5F, _t0C60, _t0C61];
    real _t0C63 = prim •00CE<$[3]; $[3]; $[]> (_t0C62, refPos0A5D);
    real _t0C64 = prim -0026<$[]> (_t0C5E, _t0C63);
    real _t0C65 = 0.e0;
    real _t0C66 = 0.e0;
    real _t0C67 = 0.1e1;
    vec3 _t0C68 = [_t0C65, _t0C66, _t0C67];
    real _t0C69 = prim •00CE<$[3]; $[3]; $[]> (_t0C68, dPos0A5E);
    real _t0C6A = prim /0055 (_t0C64, _t0C69);
    vec3 _t0C6B = prim *0038<$[3]> (dPos0A5E, _t0C6A);
    vec3 _t0C6C = prim +0017<$[3]> (refPos0A5D, _t0C6B);
    vec3 _t0C6D = prim +0017<$[3]> (_t0C5D, _t0C6C);
    real _t0C6E = _t0C6D[0];
    real _t0C6F = -0.e0;
    bool _t0C70 = prim >0080 (_t0C6E, _t0C6F);
    real _t0C71 = 0.1e-8;
    real _t0C72 = 0.1e-8;
    real _t0C73 = 0.1e-8;
    vec3 _t0C74 = [_t0C71, _t0C72, _t0C73];
    real _t0C75 = 0.e0;
    real _t0C76 = 0.e0;
    real _t0C77 = 0.e0;
    real _t0C78 = 0.1e1;
    vec3 _t0C79 = [_t0C76, _t0C77, _t0C78];
    real _t0C7A = prim •00CE<$[3]; $[3]; $[]> (_t0C79, refPos0A5D);
    real _t0C7B = prim -0026<$[]> (_t0C75, _t0C7A);
    real _t0C7C = 0.e0;
    real _t0C7D = 0.e0;
    real _t0C7E = 0.1e1;
    vec3 _t0C7F = [_t0C7C, _t0C7D, _t0C7E];
    real _t0C80 = prim •00CE<$[3]; $[3]; $[]> (_t0C7F, dPos0A5E);
    real _t0C81 = prim /0055 (_t0C7B, _t0C80);
    vec3 _t0C82 = prim *0038<$[3]> (dPos0A5E, _t0C81);
    vec3 _t0C83 = prim +0017<$[3]> (refPos0A5D, _t0C82);
    vec3 _t0C84 = prim +0017<$[3]> (_t0C74, _t0C83);
    real _t0C85 = _t0C84[1];
    real _t0C86 = -0.e0;
    bool _t0C87 = prim >0080 (_t0C85, _t0C86);
    real _t0C88 = 0.1e-8;
    real _t0C89 = 0.1e-8;
    real _t0C8A = 0.1e-8;
    vec3 _t0C8B = [_t0C88, _t0C89, _t0C8A];
    real _t0C8C = 0.e0;
    real _t0C8D = 0.e0;
    real _t0C8E = 0.e0;
    real _t0C8F = 0.1e1;
    vec3 _t0C90 = [_t0C8D, _t0C8E, _t0C8F];
    real _t0C91 = prim •00CE<$[3]; $[3]; $[]> (_t0C90, refPos0A5D);
    real _t0C92 = prim -0026<$[]> (_t0C8C, _t0C91);
    real _t0C93 = 0.e0;
    real _t0C94 = 0.e0;
    real _t0C95 = 0.1e1;
    vec3 _t0C96 = [_t0C93, _t0C94, _t0C95];
    real _t0C97 = prim •00CE<$[3]; $[3]; $[]> (_t0C96, dPos0A5E);
    real _t0C98 = prim /0055 (_t0C92, _t0C97);
    vec3 _t0C99 = prim *0038<$[3]> (dPos0A5E, _t0C98);
    vec3 _t0C9A = prim +0017<$[3]> (refPos0A5D, _t0C99);
    vec3 _t0C9B = prim +0017<$[3]> (_t0C8B, _t0C9A);
    real _t0C9C = _t0C9B[2];
    real _t0C9D = -0.e0;
    bool _t0C9E = prim >0080 (_t0C9C, _t0C9D);
    bool _t0C9F = prim $and01C4 (_t0C87, _t0C9E);
    bool _t0CA0 = prim $and01C4 (_t0C70, _t0C9F);
    bool _t0CA1 = prim $and01C4 (_t0C59, _t0CA0);
    if _t0CA1 {
      real _t0CA2 = 0.e0;
      real _t0CA3 = 0.e0;
      real _t0CA4 = 0.e0;
      real _t0CA5 = 0.1e1;
      vec3 _t0CA6 = [_t0CA3, _t0CA4, _t0CA5];
      real _t0CA7 = prim •00CE<$[3]; $[3]; $[]> (_t0CA6, refPos0A5D);
      real _t0CA8 = prim -0026<$[]> (_t0CA2, _t0CA7);
      real _t0CA9 = 0.e0;
      real _t0CAA = 0.e0;
      real _t0CAB = 0.1e1;
      vec3 _t0CAC = [_t0CA9, _t0CAA, _t0CAB];
      real _t0CAD = prim •00CE<$[3]; $[3]; $[]> (_t0CAC, dPos0A5E);
      time0A5F = prim /0055 (_t0CA8, _t0CAD);
      face0A60 = 3;
    }
  }
  int _t0CAE = -1;
  bool _t0CAF = prim !=0086 (face0A60, _t0CAE);
  if _t0CAF {
    real _t0CB0 = 0.e0;
    real _t0CB1 = prim max0125 (time0A5F, _t0CB0);
    real _t0CB2 = (real)face0A60;
    vec2 _t0CB3 = [_t0CB1, _t0CB2];
    return _t0CB3;
  } else {
    real _t0CB4 = -0.1e1;
    real _t0CB5 = -0.1e1;
    vec2 _t0CB6 = [_t0CB4, _t0CB5];
    return _t0CB6;
  }
}
function vec2#2 _exit0CB7 (vec3 refPos0A5D, vec3 dPos0A5E, int i0CB8)
{
  real time0CB9 = +inf;
  int face0CBA = -1;
  real faceTime0CBB = -inf;
  real _t0CBC = 0.57735026919e0;
  real _t0CBD = 0.57735026919e0;
  real _t0CBE = 0.57735026919e0;
  real _t0CBF = 0.57735026919e0;
  vec3 _t0CC0 = [_t0CBD, _t0CBE, _t0CBF];
  real _t0CC1 = prim •00CE<$[3]; $[3]; $[]> (_t0CC0, refPos0A5D);
  real _t0CC2 = prim -0026<$[]> (_t0CBC, _t0CC1);
  real _t0CC3 = 0.57735026919e0;
  real _t0CC4 = 0.57735026919e0;
  real _t0CC5 = 0.57735026919e0;
  vec3 _t0CC6 = [_t0CC3, _t0CC4, _t0CC5];
  real _t0CC7 = prim •00CE<$[3]; $[3]; $[]> (_t0CC6, dPos0A5E);
  real _t0CC8 = prim /0055 (_t0CC2, _t0CC7);
  real _t0CC9 = -0.1e-15;
  bool _t0CCA = prim >=007E (_t0CC8, _t0CC9);
  real _t0CCB = 0.57735026919e0;
  real _t0CCC = 0.57735026919e0;
  real _t0CCD = 0.57735026919e0;
  real _t0CCE = 0.57735026919e0;
  vec3 _t0CCF = [_t0CCC, _t0CCD, _t0CCE];
  real _t0CD0 = prim •00CE<$[3]; $[3]; $[]> (_t0CCF, refPos0A5D);
  real _t0CD1 = prim -0026<$[]> (_t0CCB, _t0CD0);
  real _t0CD2 = 0.57735026919e0;
  real _t0CD3 = 0.57735026919e0;
  real _t0CD4 = 0.57735026919e0;
  vec3 _t0CD5 = [_t0CD2, _t0CD3, _t0CD4];
  real _t0CD6 = prim •00CE<$[3]; $[3]; $[]> (_t0CD5, dPos0A5E);
  real _t0CD7 = prim /0055 (_t0CD1, _t0CD6);
  bool _t0CD8 = prim >0080 (time0CB9, _t0CD7);
  real _t0CD9 = 0.57735026919e0;
  real _t0CDA = 0.57735026919e0;
  real _t0CDB = 0.57735026919e0;
  vec3 _t0CDC = [_t0CD9, _t0CDA, _t0CDB];
  real _t0CDD = prim •00CE<$[3]; $[3]; $[]> (_t0CDC, dPos0A5E);
  real _t0CDE = prim |()|00B5<$[]> (_t0CDD);
  real _t0CDF = 0.1e-20;
  bool _t0CE0 = prim >=007E (_t0CDE, _t0CDF);
  bool _t0CE1 = prim $and01C4 (_t0CD8, _t0CE0);
  bool _t0CE2 = prim $and01C4 (_t0CCA, _t0CE1);
  if _t0CE2 {
    int _t0CE3 = 0;
    bool _t0CE4 = prim !=0086 (i0CB8, _t0CE3);
    if _t0CE4 {
      real _t0CE5 = 0.57735026919e0;
      real _t0CE6 = 0.57735026919e0;
      real _t0CE7 = 0.57735026919e0;
      real _t0CE8 = 0.57735026919e0;
      vec3 _t0CE9 = [_t0CE6, _t0CE7, _t0CE8];
      real _t0CEA = prim •00CE<$[3]; $[3]; $[]> (_t0CE9, refPos0A5D);
      real _t0CEB = prim -0026<$[]> (_t0CE5, _t0CEA);
      real _t0CEC = 0.57735026919e0;
      real _t0CED = 0.57735026919e0;
      real _t0CEE = 0.57735026919e0;
      vec3 _t0CEF = [_t0CEC, _t0CED, _t0CEE];
      real _t0CF0 = prim •00CE<$[3]; $[3]; $[]> (_t0CEF, dPos0A5E);
      time0CB9 = prim /0055 (_t0CEB, _t0CF0);
      face0CBA = 0;
    } else {
      real _t0CF1 = 0.57735026919e0;
      real _t0CF2 = 0.57735026919e0;
      real _t0CF3 = 0.57735026919e0;
      real _t0CF4 = 0.57735026919e0;
      vec3 _t0CF5 = [_t0CF2, _t0CF3, _t0CF4];
      real _t0CF6 = prim •00CE<$[3]; $[3]; $[]> (_t0CF5, refPos0A5D);
      real _t0CF7 = prim -0026<$[]> (_t0CF1, _t0CF6);
      real _t0CF8 = 0.57735026919e0;
      real _t0CF9 = 0.57735026919e0;
      real _t0CFA = 0.57735026919e0;
      vec3 _t0CFB = [_t0CF8, _t0CF9, _t0CFA];
      real _t0CFC = prim •00CE<$[3]; $[3]; $[]> (_t0CFB, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0CF7, _t0CFC);
    }
  }
  real _t0CFD = 0.e0;
  real _t0CFE = 0.1e1;
  real _t0CFF = 0.e0;
  real _t0D00 = 0.e0;
  vec3 _t0D01 = [_t0CFE, _t0CFF, _t0D00];
  real _t0D02 = prim •00CE<$[3]; $[3]; $[]> (_t0D01, refPos0A5D);
  real _t0D03 = prim -0026<$[]> (_t0CFD, _t0D02);
  real _t0D04 = 0.1e1;
  real _t0D05 = 0.e0;
  real _t0D06 = 0.e0;
  vec3 _t0D07 = [_t0D04, _t0D05, _t0D06];
  real _t0D08 = prim •00CE<$[3]; $[3]; $[]> (_t0D07, dPos0A5E);
  real _t0D09 = prim /0055 (_t0D03, _t0D08);
  real _t0D0A = -0.1e-15;
  bool _t0D0B = prim >=007E (_t0D09, _t0D0A);
  real _t0D0C = 0.e0;
  real _t0D0D = 0.1e1;
  real _t0D0E = 0.e0;
  real _t0D0F = 0.e0;
  vec3 _t0D10 = [_t0D0D, _t0D0E, _t0D0F];
  real _t0D11 = prim •00CE<$[3]; $[3]; $[]> (_t0D10, refPos0A5D);
  real _t0D12 = prim -0026<$[]> (_t0D0C, _t0D11);
  real _t0D13 = 0.1e1;
  real _t0D14 = 0.e0;
  real _t0D15 = 0.e0;
  vec3 _t0D16 = [_t0D13, _t0D14, _t0D15];
  real _t0D17 = prim •00CE<$[3]; $[3]; $[]> (_t0D16, dPos0A5E);
  real _t0D18 = prim /0055 (_t0D12, _t0D17);
  bool _t0D19 = prim >0080 (time0CB9, _t0D18);
  real _t0D1A = 0.1e1;
  real _t0D1B = 0.e0;
  real _t0D1C = 0.e0;
  vec3 _t0D1D = [_t0D1A, _t0D1B, _t0D1C];
  real _t0D1E = prim •00CE<$[3]; $[3]; $[]> (_t0D1D, dPos0A5E);
  real _t0D1F = prim |()|00B5<$[]> (_t0D1E);
  real _t0D20 = 0.1e-20;
  bool _t0D21 = prim >=007E (_t0D1F, _t0D20);
  bool _t0D22 = prim $and01C4 (_t0D19, _t0D21);
  bool _t0D23 = prim $and01C4 (_t0D0B, _t0D22);
  if _t0D23 {
    int _t0D24 = 1;
    bool _t0D25 = prim !=0086 (i0CB8, _t0D24);
    if _t0D25 {
      real _t0D26 = 0.e0;
      real _t0D27 = 0.1e1;
      real _t0D28 = 0.e0;
      real _t0D29 = 0.e0;
      vec3 _t0D2A = [_t0D27, _t0D28, _t0D29];
      real _t0D2B = prim •00CE<$[3]; $[3]; $[]> (_t0D2A, refPos0A5D);
      real _t0D2C = prim -0026<$[]> (_t0D26, _t0D2B);
      real _t0D2D = 0.1e1;
      real _t0D2E = 0.e0;
      real _t0D2F = 0.e0;
      vec3 _t0D30 = [_t0D2D, _t0D2E, _t0D2F];
      real _t0D31 = prim •00CE<$[3]; $[3]; $[]> (_t0D30, dPos0A5E);
      time0CB9 = prim /0055 (_t0D2C, _t0D31);
      face0CBA = 1;
    } else {
      real _t0D32 = 0.e0;
      real _t0D33 = 0.1e1;
      real _t0D34 = 0.e0;
      real _t0D35 = 0.e0;
      vec3 _t0D36 = [_t0D33, _t0D34, _t0D35];
      real _t0D37 = prim •00CE<$[3]; $[3]; $[]> (_t0D36, refPos0A5D);
      real _t0D38 = prim -0026<$[]> (_t0D32, _t0D37);
      real _t0D39 = 0.1e1;
      real _t0D3A = 0.e0;
      real _t0D3B = 0.e0;
      vec3 _t0D3C = [_t0D39, _t0D3A, _t0D3B];
      real _t0D3D = prim •00CE<$[3]; $[3]; $[]> (_t0D3C, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0D38, _t0D3D);
    }
  }
  real _t0D3E = 0.e0;
  real _t0D3F = 0.e0;
  real _t0D40 = -0.1e1;
  real _t0D41 = 0.e0;
  vec3 _t0D42 = [_t0D3F, _t0D40, _t0D41];
  real _t0D43 = prim •00CE<$[3]; $[3]; $[]> (_t0D42, refPos0A5D);
  real _t0D44 = prim -0026<$[]> (_t0D3E, _t0D43);
  real _t0D45 = 0.e0;
  real _t0D46 = -0.1e1;
  real _t0D47 = 0.e0;
  vec3 _t0D48 = [_t0D45, _t0D46, _t0D47];
  real _t0D49 = prim •00CE<$[3]; $[3]; $[]> (_t0D48, dPos0A5E);
  real _t0D4A = prim /0055 (_t0D44, _t0D49);
  real _t0D4B = -0.1e-15;
  bool _t0D4C = prim >=007E (_t0D4A, _t0D4B);
  real _t0D4D = 0.e0;
  real _t0D4E = 0.e0;
  real _t0D4F = -0.1e1;
  real _t0D50 = 0.e0;
  vec3 _t0D51 = [_t0D4E, _t0D4F, _t0D50];
  real _t0D52 = prim •00CE<$[3]; $[3]; $[]> (_t0D51, refPos0A5D);
  real _t0D53 = prim -0026<$[]> (_t0D4D, _t0D52);
  real _t0D54 = 0.e0;
  real _t0D55 = -0.1e1;
  real _t0D56 = 0.e0;
  vec3 _t0D57 = [_t0D54, _t0D55, _t0D56];
  real _t0D58 = prim •00CE<$[3]; $[3]; $[]> (_t0D57, dPos0A5E);
  real _t0D59 = prim /0055 (_t0D53, _t0D58);
  bool _t0D5A = prim >0080 (time0CB9, _t0D59);
  real _t0D5B = 0.e0;
  real _t0D5C = -0.1e1;
  real _t0D5D = 0.e0;
  vec3 _t0D5E = [_t0D5B, _t0D5C, _t0D5D];
  real _t0D5F = prim •00CE<$[3]; $[3]; $[]> (_t0D5E, dPos0A5E);
  real _t0D60 = prim |()|00B5<$[]> (_t0D5F);
  real _t0D61 = 0.1e-20;
  bool _t0D62 = prim >=007E (_t0D60, _t0D61);
  bool _t0D63 = prim $and01C4 (_t0D5A, _t0D62);
  bool _t0D64 = prim $and01C4 (_t0D4C, _t0D63);
  if _t0D64 {
    int _t0D65 = 2;
    bool _t0D66 = prim !=0086 (i0CB8, _t0D65);
    if _t0D66 {
      real _t0D67 = 0.e0;
      real _t0D68 = 0.e0;
      real _t0D69 = -0.1e1;
      real _t0D6A = 0.e0;
      vec3 _t0D6B = [_t0D68, _t0D69, _t0D6A];
      real _t0D6C = prim •00CE<$[3]; $[3]; $[]> (_t0D6B, refPos0A5D);
      real _t0D6D = prim -0026<$[]> (_t0D67, _t0D6C);
      real _t0D6E = 0.e0;
      real _t0D6F = -0.1e1;
      real _t0D70 = 0.e0;
      vec3 _t0D71 = [_t0D6E, _t0D6F, _t0D70];
      real _t0D72 = prim •00CE<$[3]; $[3]; $[]> (_t0D71, dPos0A5E);
      time0CB9 = prim /0055 (_t0D6D, _t0D72);
      face0CBA = 2;
    } else {
      real _t0D73 = 0.e0;
      real _t0D74 = 0.e0;
      real _t0D75 = -0.1e1;
      real _t0D76 = 0.e0;
      vec3 _t0D77 = [_t0D74, _t0D75, _t0D76];
      real _t0D78 = prim •00CE<$[3]; $[3]; $[]> (_t0D77, refPos0A5D);
      real _t0D79 = prim -0026<$[]> (_t0D73, _t0D78);
      real _t0D7A = 0.e0;
      real _t0D7B = -0.1e1;
      real _t0D7C = 0.e0;
      vec3 _t0D7D = [_t0D7A, _t0D7B, _t0D7C];
      real _t0D7E = prim •00CE<$[3]; $[3]; $[]> (_t0D7D, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0D79, _t0D7E);
    }
  }
  real _t0D7F = 0.e0;
  real _t0D80 = 0.e0;
  real _t0D81 = 0.e0;
  real _t0D82 = 0.1e1;
  vec3 _t0D83 = [_t0D80, _t0D81, _t0D82];
  real _t0D84 = prim •00CE<$[3]; $[3]; $[]> (_t0D83, refPos0A5D);
  real _t0D85 = prim -0026<$[]> (_t0D7F, _t0D84);
  real _t0D86 = 0.e0;
  real _t0D87 = 0.e0;
  real _t0D88 = 0.1e1;
  vec3 _t0D89 = [_t0D86, _t0D87, _t0D88];
  real _t0D8A = prim •00CE<$[3]; $[3]; $[]> (_t0D89, dPos0A5E);
  real _t0D8B = prim /0055 (_t0D85, _t0D8A);
  real _t0D8C = -0.1e-15;
  bool _t0D8D = prim >=007E (_t0D8B, _t0D8C);
  real _t0D8E = 0.e0;
  real _t0D8F = 0.e0;
  real _t0D90 = 0.e0;
  real _t0D91 = 0.1e1;
  vec3 _t0D92 = [_t0D8F, _t0D90, _t0D91];
  real _t0D93 = prim •00CE<$[3]; $[3]; $[]> (_t0D92, refPos0A5D);
  real _t0D94 = prim -0026<$[]> (_t0D8E, _t0D93);
  real _t0D95 = 0.e0;
  real _t0D96 = 0.e0;
  real _t0D97 = 0.1e1;
  vec3 _t0D98 = [_t0D95, _t0D96, _t0D97];
  real _t0D99 = prim •00CE<$[3]; $[3]; $[]> (_t0D98, dPos0A5E);
  real _t0D9A = prim /0055 (_t0D94, _t0D99);
  bool _t0D9B = prim >0080 (time0CB9, _t0D9A);
  real _t0D9C = 0.e0;
  real _t0D9D = 0.e0;
  real _t0D9E = 0.1e1;
  vec3 _t0D9F = [_t0D9C, _t0D9D, _t0D9E];
  real _t0DA0 = prim •00CE<$[3]; $[3]; $[]> (_t0D9F, dPos0A5E);
  real _t0DA1 = prim |()|00B5<$[]> (_t0DA0);
  real _t0DA2 = 0.1e-20;
  bool _t0DA3 = prim >=007E (_t0DA1, _t0DA2);
  bool _t0DA4 = prim $and01C4 (_t0D9B, _t0DA3);
  bool _t0DA5 = prim $and01C4 (_t0D8D, _t0DA4);
  if _t0DA5 {
    int _t0DA6 = 3;
    bool _t0DA7 = prim !=0086 (i0CB8, _t0DA6);
    if _t0DA7 {
      real _t0DA8 = 0.e0;
      real _t0DA9 = 0.e0;
      real _t0DAA = 0.e0;
      real _t0DAB = 0.1e1;
      vec3 _t0DAC = [_t0DA9, _t0DAA, _t0DAB];
      real _t0DAD = prim •00CE<$[3]; $[3]; $[]> (_t0DAC, refPos0A5D);
      real _t0DAE = prim -0026<$[]> (_t0DA8, _t0DAD);
      real _t0DAF = 0.e0;
      real _t0DB0 = 0.e0;
      real _t0DB1 = 0.1e1;
      vec3 _t0DB2 = [_t0DAF, _t0DB0, _t0DB1];
      real _t0DB3 = prim •00CE<$[3]; $[3]; $[]> (_t0DB2, dPos0A5E);
      time0CB9 = prim /0055 (_t0DAE, _t0DB3);
      face0CBA = 3;
    } else {
      real _t0DB4 = 0.e0;
      real _t0DB5 = 0.e0;
      real _t0DB6 = 0.e0;
      real _t0DB7 = 0.1e1;
      vec3 _t0DB8 = [_t0DB5, _t0DB6, _t0DB7];
      real _t0DB9 = prim •00CE<$[3]; $[3]; $[]> (_t0DB8, refPos0A5D);
      real _t0DBA = prim -0026<$[]> (_t0DB4, _t0DB9);
      real _t0DBB = 0.e0;
      real _t0DBC = 0.e0;
      real _t0DBD = 0.1e1;
      vec3 _t0DBE = [_t0DBB, _t0DBC, _t0DBD];
      real _t0DBF = prim •00CE<$[3]; $[3]; $[]> (_t0DBE, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0DBA, _t0DBF);
    }
  }
  int _t0DC0 = -1;
  bool _t0DC1 = prim !=0086 (face0CBA, _t0DC0);
  if _t0DC1 {
    real _t0DC2 = 0.e0;
    real _t0DC3 = prim max0125 (time0CB9, _t0DC2);
    real _t0DC4 = (real)face0CBA;
    vec2 _t0DC5 = [_t0DC3, _t0DC4];
    return _t0DC5;
  } else {
    real _t0DC6 = -inf;
    bool _t0DC7 = prim ==0084 (_t0DC6, faceTime0CBB);
    if _t0DC7 {
      real _t0DC8 = -0.1e1;
      real _t0DC9 = -0.1e1;
      vec2 _t0DCA = [_t0DC8, _t0DC9];
      return _t0DCA;
    } else {
      real _t0DCB = (real)i0CB8;
      vec2 _t0DCC = [faceTime0CBB, _t0DCB];
      return _t0DCC;
    }
  }
}
function Femdata: Mesh#0 domain0DCD (Femdata: Space arg00DCE)
{
  Femdata: Mesh _t0DCF = extractFem(arg00DCE, Mesh);
  return _t0DCF;
}
function Femdata: Space#0 space0DD0 (Femdata: FemFunc arg00DD1)
{
  Femdata: Space _t0DD2 = extractFem(arg00DD1, Space);
  return _t0DD2;
}
function Femdata: FuncCell#3 funcCell0DD3 (Femdata: FemFunc arg00DD4, Femdata: MeshCell arg10DD5)
{
  int _t0DD6 = extractFemItem(CellIndex(MeshCell), int, arg10DD5);
  Femdata: FuncCell _t0DD7 = loadFem(FuncCell, arg00DD4, _t0DD6);
  return _t0DD7;
}
function Femdata: MeshPos#2 posMove0DE5 (Femdata: MeshPos x0DE6, vec3 dPos0DE7)
{
  bool _t0DE8 = extractFemItem(Valid(MeshPos), bool, x0DE6);
  bool _t0DE9 = prim !00BC (_t0DE8);
  if _t0DE9 {
    return x0DE6;
  }
  real time0DEA = 0.1e1;
  Femdata: MeshPos cmp0DEB = x0DE6;
  int _t0DEC = 0;
  int[] _t0DED = prim $range01C3 (_t0DEC, timeSteps03AF);
  foreach i0E45 in _t0DED {
    Femdata: Mesh _t0DEE = extractFem(cmp0DEB, Mesh);
    int _t0DEF = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF0 = loadFem(MeshCell, _t0DEE, _t0DEF);
    Femdata: Mesh _t0DF1 = extractFem(_t0DF0, Mesh);
    Femdata: Mesh _t0DF2 = extractFem(cmp0DEB, Mesh);
    int _t0DF3 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF4 = loadFem(MeshCell, _t0DF2, _t0DF3);
    Femdata: Mesh _t0DF5 = extractFem(_t0DF4, Mesh);
    Femdata: Mesh _t0DF6 = extractFem(cmp0DEB, Mesh);
    int _t0DF7 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF8 = loadFem(MeshCell, _t0DF6, _t0DF7);
    int _t0DF9 = extractFemItem(CellIndex(MeshCell), int, _t0DF8);
    field(3)[3] _t0DFA = femField(_t0DF1,_t0DF9,field(3)[3],Transform,);
    field(3)[3,3] _t0DFB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0DFA);
    vec3 _t0DFC = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    tensor[3,3] _t0DFD = prim @00A5<#∞; %3; $[3,3]> (_t0DFB, _t0DFC);
    tensor[3,3] _t0DFE = prim inv0155 (_t0DFD);
    tensor[3,3] _t0DFF = prim *0036<$[3,3]> (time0DEA, _t0DFE);
    vec3 deltaP0E00 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0DFF, dPos0DE7);
    vec3 _t0E01 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    vec3 newPos0E02 = prim +0017<$[3]> (_t0E01, deltaP0E00);
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.1e-8;
    real _t0E05 = prim +0017<$[]> (_t0E03, _t0E04);
    real _t0E06 = 0.1e1;
    real _t0E07 = 0.1e1;
    real _t0E08 = 0.1e1;
    vec3 _t0E09 = [_t0E06, _t0E07, _t0E08];
    real _t0E0A = prim •00CE<$[3]; $[3]; $[]> (_t0E09, newPos0E02);
    bool _t0E0B = prim >0080 (_t0E05, _t0E0A);
    real _t0E0C = 0.1e-8;
    real _t0E0D = 0.1e-8;
    real _t0E0E = 0.1e-8;
    vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
    vec3 _t0E10 = prim +0017<$[3]> (_t0E0F, newPos0E02);
    real _t0E11 = _t0E10[0];
    real _t0E12 = -0.e0;
    bool _t0E13 = prim >0080 (_t0E11, _t0E12);
    real _t0E14 = 0.1e-8;
    real _t0E15 = 0.1e-8;
    real _t0E16 = 0.1e-8;
    vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
    vec3 _t0E18 = prim +0017<$[3]> (_t0E17, newPos0E02);
    real _t0E19 = _t0E18[1];
    real _t0E1A = -0.e0;
    bool _t0E1B = prim >0080 (_t0E19, _t0E1A);
    real _t0E1C = 0.1e-8;
    real _t0E1D = 0.1e-8;
    real _t0E1E = 0.1e-8;
    vec3 _t0E1F = [_t0E1C, _t0E1D, _t0E1E];
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, newPos0E02);
    real _t0E21 = _t0E20[2];
    real _t0E22 = -0.e0;
    bool _t0E23 = prim >0080 (_t0E21, _t0E22);
    bool _t0E24 = prim $and01C4 (_t0E1B, _t0E23);
    bool _t0E25 = prim $and01C4 (_t0E13, _t0E24);
    bool _t0E26 = prim $and01C4 (_t0E0B, _t0E25);
    if _t0E26 {
      Femdata: Mesh _t0E27 = extractFem(cmp0DEB, Mesh);
      int _t0E28 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E29 = loadFem(MeshCell, _t0E27, _t0E28);
      Femdata: Mesh _t0E2A = extractFem(_t0E29, Mesh);
      Femdata: Mesh _t0E2B = extractFem(cmp0DEB, Mesh);
      int _t0E2C = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E2D = loadFem(MeshCell, _t0E2B, _t0E2C);
      int _t0E2E = extractFemItem(CellIndex(MeshCell), int, _t0E2D);
      Femdata: MeshPos nmp0E2F = extractFemItemN((_t0E2A, _t0E2E, newPos0E02),RefBuild(Mesh),);
      return nmp0E2F;
    } else {
      vec3 _t0E30 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
      int _t0E31 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E32 = func _exit0CB7 (_t0E30, deltaP0E00, _t0E31);
      real eTime0E33 = _t0E32[0];
      real _t0E34 = prim *0034 (time0DEA, eTime0E33);
      time0DEA = prim -0026<$[]> (time0DEA, _t0E34);
      Femdata: Mesh _t0E35 = extractFem(cmp0DEB, Mesh);
      int _t0E36 = extractFemItem(CellIndex(Mesh), int, cmp0DEB);
      vec3 _t0E37 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      vec3 _t0E38 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      int _t0E39 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E3A = func _exit0CB7 (_t0E38, deltaP0E00, _t0E39);
      Femdata: MeshPos nmp0E3B = func $exitPos0481 (_t0E35, _t0E36, _t0E37, deltaP0E00, _t0E3A);
      bool _t0E3C;
      bool _t0E3D = extractFemItem(Valid(MeshPos), bool, nmp0E3B);
      bool _t0E3E = prim !00BC (_t0E3D);
      if _t0E3E {
        _t0E3C = true;
      } else {
        bool _t0E3F;
        real _t0E40 = 0.e0;
        bool _t0E41 = prim <007A (eTime0E33, _t0E40);
        if _t0E41 {
          _t0E3F = true;
        } else {
          bool _t0E42;
          real _t0E43 = 0.1e1;
          bool _t0E44 = prim >0080 (eTime0E33, _t0E43);
          if _t0E44 {
            _t0E42 = true;
          } else {
            _t0E42 = prim <007A (time0DEA, timeEps03B0);
          }
          _t0E3F = _t0E42;
        }
        _t0E3C = _t0E3F;
      }
      if _t0E3C {
        return nmp0E3B;
      }
      cmp0DEB = nmp0E3B;
    }
  }
  string _t0E46 = "Took stupid way out!\n";
  print (_t0E46);
  vec3 _t0E47 = func worldPos047C (x0DE6);
  vec3 _t0E48 = prim +0017<$[3]> (_t0E47, dPos0DE7);
  cmp0DEB = func findPos03BE (meshData039F, _t0E48);
  return cmp0DEB;
}
function vec3#2 nV0E49 (Femdata: MeshPos x0E4A)
{
  bool _t0E4B = extractFemItem(Valid(MeshPos), bool, x0E4A);
  if _t0E4B {
    Femdata: Mesh _t0E4C = extractFem(x0E4A, Mesh);
    int _t0E4D = extractFemItem(CellIndex(MeshPos), int, x0E4A);
    Femdata: MeshCell c0E4E = loadFem(MeshCell, _t0E4C, _t0E4D);
    vec3 ref0E4F = extractFemItem(RefPos(MeshPos), vec3, x0E4A);
    Femdata: FuncCell _t0E50 = func funcCell0DD3 (data03AD, c0E4E);
    Femdata: FemFunc _t0E51 = extractFem(_t0E50, FemFunc);
    Femdata: FuncCell _t0E52 = func funcCell0DD3 (data03AD, c0E4E);
    Femdata: FemFunc _t0E53 = extractFem(_t0E52, FemFunc);
    Femdata: Space _t0E54 = extractFem(_t0E53, Space);
    Femdata: FuncCell _t0E55 = func funcCell0DD3 (data03AD, c0E4E);
    int _t0E56 = extractFemItem(CellIndex(FuncCell), int, _t0E55);
    field(3)[3] _t0E57 = femField(_t0E51,_t0E56,field(3)[3],refField,);
    vec3 val0E58 = prim @00A5<#∞; %3; $[3]> (_t0E57, ref0E4F);
    real _t0E59 = prim |()|00B5<$[3]> (val0E58);
    vec3 _t0E5A = prim /0057<$[3]> (val0E58, _t0E59);
    return _t0E5A;
  } else {
    vec3 _t0E5B = prim $zero01BB<$[3]> ();
    return _t0E5B;
  }
}
globalInit {
  int _t03A3 = 0;
  int _t03A1 = 1;
  int _t03A5 = extractFemItem(NumCell(Mesh), int, meshData039F);
  int _t03A4 = prim -0024 (_t03A5, _t03A1);
  int[] _t03A8 = prim $range01C3 (_t03A3, _t03A4);
  Femdata: MeshCell[] _t03A9 = {};
  foreach _t03A7 in _t03A8 {
    Femdata: MeshCell _t03AA = loadFem(MeshCell, meshData039F, _t03A7);
    _t03A9 = prim @0010<Femdata: MeshCell> (_t03A9, _t03AA);
  }
  space03AB = loadFem(Space, 0space03AB_intermedateGlobal03AC, meshData039F);
  data03AD = loadFem(FemFunc, 0data03AD_intermedateGlobal03AE, space03AB);
  Femdata: Space _t0DD8 = extractFem(data03AD, Space);
  Femdata: Space _t0DD9 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDA = extractFem(_t0DD9, Mesh);
  field(3)[3] _t0DDB = femField(data03AD,_t0DDA,field(3)[3],refField,findPos03BE );
  Femdata: Space _t0DDC = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDD = extractFem(_t0DDC, Mesh);
  Femdata: Space _t0DDE = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDF = extractFem(_t0DDE, Mesh);
  Femdata: Space _t0DE0 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DE1 = extractFem(_t0DE0, Mesh);
  field(3)[3] _t0DE2 = femField(_t0DDD,_t0DE1,field(3)[3],InvTransform,findPos03BE );
  F0DE3 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t0DDB, _t0DE2);
  simplex0DE4 = func refcell040C (meshData039F);
}
strand gg (vec3 startPos0E5C) {
  output vec3[] stream0E5D;
  output vec3[] newStream0E60;
  int step0E63;
  Femdata: MeshPos cPos0E64;
  vec3 altCPos0E65;
  {
    vec3[1] _t0E5E = {startPos0E5C};
    vec3[] _t0E5F = (vec3[])_t0E5E;
    stream0E5D = _t0E5F;
    vec3[1] _t0E61 = {startPos0E5C};
    vec3[] _t0E62 = (vec3[])_t0E61;
    newStream0E60 = _t0E62;
    step0E63 = 0;
    cPos0E64 = func findPos03BE (meshData039F, startPos0E5C);
    altCPos0E65 = startPos0E5C;
  }
  update
  {
    bool _t0E66;
    bool _t0E67 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E68 = prim !00BC (_t0E67);
    if _t0E68 {
      _t0E66 = true;
    } else {
      bool _t0E69;
      Femdata: MeshPos _t0E6A = func findPos03BE (meshData039F, altCPos0E65);
      bool _t0E6B = extractFemItem(Valid(MeshPos), bool, _t0E6A);
      bool _t0E6C = prim !00BC (_t0E6B);
      if _t0E6C {
        _t0E69 = true;
      } else {
        _t0E69 = prim ==0082 (step0E63, stepMax03B3);
      }
      _t0E66 = _t0E69;
    }
    if _t0E66 {
      stabilize;
    }
    vec3 _t0E6D = func worldPos047C (cPos0E64);
    vec3 _t0E6E = prim -0026<$[3]> (_t0E6D, altCPos0E65);
    real _t0E6F = prim |()|00B5<$[3]> (_t0E6E);
    real _t0E70 = 0.1e-5;
    bool _t0E71 = prim >0080 (_t0E6F, _t0E70);
    if _t0E71 {
      string _t0E72 = "Error in tracing: At step:";
      string _t0E73 = " with particle:";
      string _t0E74 = "\n";
      print (_t0E72, step0E63, _t0E73, startPos0E5C, _t0E74);
    } else {
      string _t0E75 = "fine in cell:";
      Femdata: Mesh _t0E76 = extractFem(cPos0E64, Mesh);
      int _t0E77 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell _t0E78 = loadFem(MeshCell, _t0E76, _t0E77);
      string _t0E79 = "\n";
      print (_t0E75, _t0E78, _t0E79);
    }
    real _t0E7A = 0.5e0;
    real _t0E7B = prim *0034 (_t0E7A, stepSize03B2);
    vec3 _t0E7C = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    vec3 _t0E7D = prim *0036<$[3]> (_t0E7B, _t0E7C);
    vec3 _t0E7E = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    real _t0E7F = prim |()|00B5<$[3]> (_t0E7E);
    vec3 altUp10E80 = prim /0057<$[3]> (_t0E7D, _t0E7F);
    real _t0E81 = 0.5e0;
    real _t0E82 = prim *0034 (_t0E81, stepSize03B2);
    vec3 _t0E83 = func nV0E49 (cPos0E64);
    vec3 up10E84 = prim *0036<$[3]> (_t0E82, _t0E83);
    Femdata: MeshPos intermed0E85 = func posMove0DE5 (cPos0E64, up10E84);
    vec3 altIntermed0E86 = prim +0017<$[3]> (altCPos0E65, altUp10E80);
    bool _t0E87;
    bool _t0E88 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    bool _t0E89 = prim !00BC (_t0E88);
    if _t0E89 {
      _t0E87 = true;
    } else {
      Femdata: MeshPos _t0E8A = func findPos03BE (meshData039F, altIntermed0E86);
      bool _t0E8B = extractFemItem(Valid(MeshPos), bool, _t0E8A);
      _t0E87 = prim !00BC (_t0E8B);
    }
    if _t0E87 {
      stabilize;
    }
    vec3 _t0E8C = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    vec3 _t0E8D = prim *0036<$[3]> (stepSize03B2, _t0E8C);
    vec3 _t0E8E = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    real _t0E8F = prim |()|00B5<$[3]> (_t0E8E);
    vec3 altUp20E90 = prim /0057<$[3]> (_t0E8D, _t0E8F);
    vec3 _t0E91 = func nV0E49 (intermed0E85);
    vec3 up20E92 = prim *0036<$[3]> (stepSize03B2, _t0E91);
    cPos0E64 = func posMove0DE5 (cPos0E64, up20E92);
    altCPos0E65 = prim +0017<$[3]> (altCPos0E65, altUp20E90);
    bool _t0E93 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E94 = prim !00BC (_t0E93);
    if _t0E94 {
      print (stream0E5D);
      stabilize;
    }
    vec3 _t0E95 = func worldPos047C (cPos0E64);
    vec3[1] _t0E96 = {_t0E95};
    vec3[] _t0E97 = (vec3[])_t0E96;
    stream0E5D = prim @0014<vec3> (stream0E5D, _t0E97);
    vec3[1] _t0E98 = {altCPos0E65};
    vec3[] _t0E99 = (vec3[])_t0E98;
    newStream0E60 = prim @0014<vec3> (newStream0E60, _t0E99);
    int _t0E9A = 1;
    step0E63 = prim +0015 (step0E63, _t0E9A);
  }
}
collection {
  foreach x0E9B in startPoints03B1 {
    new gg (x0E9B);
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData039F;
input FemData:Space 0space03AB_intermedateGlobal03AC;
input FemData:FemFunc 0data03AD_intermedateGlobal03AE;
input int timeSteps03AF = <default>;
input real timeEps03B0 = <default>;
input vec3[] startPoints03B1;
input real stepSize03B2 = <default>;
input int stepMax03B3 = <default>;
constants {
  timeSteps03AF = 32;
  timeEps03B0 = 0.1e-6;
  stepSize03B2 = 0.1e-1;
  stepMax03B3 = 100;
}
global Femdata: Space space03AB;
global Femdata: FemFunc data03AD;
global field(3)[3] F0DE3;
function bool#0 !=03B4 (Femdata: MeshCell cell103B5, Femdata: MeshCell cell103B6)
{
  int _t03B7 = extractFemItem(CellIndex(Mesh), int, cell103B5);
  int _t03B8 = extractFemItem(CellIndex(Mesh), int, cell103B6);
  bool _t03B9 = prim !=0086 (_t03B7, _t03B8);
  return _t03B9;
}
function bool#0 ==03BA (Femdata: MeshCell cell103B5, Femdata: MeshCell cell103B6)
{
  int _t03BB = extractFemItem(CellIndex(Mesh), int, cell103B5);
  int _t03BC = extractFemItem(CellIndex(Mesh), int, cell103B6);
  bool _t03BD = prim ==0082 (_t03BB, _t03BC);
  return _t03BD;
}
function Femdata: MeshPos#6 findPos03BE (Femdata: Mesh mesh03BF, vec3 pos03C0)
{
  real _t03C1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn03C4 = [_t03C1, _t03C2, _t03C3];
  newtonInt03C5 = 0;
  cellInt03C6 = extractFemItem(StartCell(Mesh), int, mesh03BF);
  int _t03C7 = extractFemItem(NumCell(Mesh), int, mesh03BF);
  int _t03C8 = 1;
  numCell03C9 = prim -0024 (_t03C7, _t03C8);
  yayCells03CA = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh03BF, pos03C0 : vec3);
  foreach cellItter03CE in yayCells03CA {
    real _t03CB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn03C4 = [_t03CB, _t03CC, _t03CD];
    cellInt03C6 = cellItter03CE;
    field(3)[3] _t03CF = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
    field(3)[3,3] _t03D0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t03CF);
    field(3)[3,3] _t03D1 = prim inv015E<#∞; %3> (_t03D0);
    real _t03D2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t03D5 = [_t03D2, _t03D3, _t03D4];
    A03D6 = prim @00A5<#∞; %3; $[3,3]> (_t03D1, _t03D5);
    int _t03D7 = 0;
    int _t03D8 = 16;
    int[] _t03D9 = prim $range01C3 (_t03D7, _t03D8);
    foreach newtonItter0408 in _t03D9 {
      field(3)[3] _t03DA = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
      field(3)[3] _t03DB = prim -002E<#∞; %3; $[3]> (_t03DA, pos03C0);
      field(3)[3] _t03DC = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A03D6, _t03DB);
      delta03DD = prim @00A5<#∞; %3; $[3]> (_t03DC, xn03C4);
      xn03C4 = prim -0026<$[3]> (xn03C4, delta03DD);
      real _t03DE = 0.1e-7;
      real _t03DF = 0.1e-7;
      real _t03E0 = prim *0034 (_t03DE, _t03DF);
      real _t03E1 = prim •00CE<$[3]; $[3]; $[]> (delta03DD, delta03DD);
      bool _t03E2 = prim >=007E (_t03E0, _t03E1);
      if _t03E2 {
        real _t03E3 = 0.1e1;
        real _t03E4 = 0.1e-8;
        real _t03E5 = prim +0017<$[]> (_t03E3, _t03E4);
        real _t03E6 = 0.1e1;
        real _t03E7 = 0.1e1;
        real _t03E8 = 0.1e1;
        vec3 _t03E9 = [_t03E6, _t03E7, _t03E8];
        real _t03EA = prim •00CE<$[3]; $[3]; $[]> (_t03E9, xn03C4);
        bool _t03EB = prim >0080 (_t03E5, _t03EA);
        real _t03EC = 0.1e-8;
        real _t03ED = 0.1e-8;
        real _t03EE = 0.1e-8;
        vec3 _t03EF = [_t03EC, _t03ED, _t03EE];
        vec3 _t03F0 = prim +0017<$[3]> (_t03EF, xn03C4);
        real _t03F1 = _t03F0[0];
        real _t03F2 = -0.e0;
        bool _t03F3 = prim >0080 (_t03F1, _t03F2);
        real _t03F4 = 0.1e-8;
        real _t03F5 = 0.1e-8;
        real _t03F6 = 0.1e-8;
        vec3 _t03F7 = [_t03F4, _t03F5, _t03F6];
        vec3 _t03F8 = prim +0017<$[3]> (_t03F7, xn03C4);
        real _t03F9 = _t03F8[1];
        real _t03FA = -0.e0;
        bool _t03FB = prim >0080 (_t03F9, _t03FA);
        real _t03FC = 0.1e-8;
        real _t03FD = 0.1e-8;
        real _t03FE = 0.1e-8;
        vec3 _t03FF = [_t03FC, _t03FD, _t03FE];
        vec3 _t0400 = prim +0017<$[3]> (_t03FF, xn03C4);
        real _t0401 = _t0400[2];
        real _t0402 = -0.e0;
        bool _t0403 = prim >0080 (_t0401, _t0402);
        bool _t0404 = prim $and01C4 (_t03FB, _t0403);
        bool _t0405 = prim $and01C4 (_t03F3, _t0404);
        bool _t0406 = prim $and01C4 (_t03EB, _t0405);
        if _t0406 {
          Femdata: MeshPos _t0407 = extractFemItemN((mesh03BF, cellInt03C6, xn03C4, pos03C0),AllBuild(MeshPos),);
          return _t0407;
        }
      }
    }
  }
  string _t0409 = "Bad end 2";
  string _t040A = "\n";
  print (_t0409, _t040A);
  Femdata: MeshPos _t040B = extractFemItemN((mesh03BF),InvalidBuild(MeshPos),);
  return _t040B;
}
function Femdata: RefCell#1 refcell040C (Femdata: Mesh arg0040D)
{
  Femdata: RefCell _t040E = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg0040D);
  return _t040E;
}
function Femdata: MeshCell[]#0 cells040F (Femdata: Mesh arg00410)
{
  Femdata: MeshCell[] _t0411 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg00410);
  return _t0411;
}
function Femdata: MeshCell[]#0 cells0412 (Femdata: Mesh arg00410)
{
  int _t0413 = 0;
  int _t0414 = extractFemItem(NumCell(Mesh), int, arg00410);
  int[] _t0415 = prim $range01C3 (_t0413, _t0414);
  Femdata: MeshCell[] accum0418 = {};
  foreach i0416 in _t0415 {
    Femdata: MeshCell _t0417 = loadFem(MeshCell, arg00410, i0416);
    accum0418 = prim @0010<Femdata: MeshCell> (accum0418, _t0417);
  }
  return accum0418;
}
function int#0 numCell0419 (Femdata: Mesh arg0040D)
{
  int _t041A = extractFemItem(NumCell(Mesh), int, arg0040D);
  return _t041A;
}
function tensor[3,3,3,3]#0 mesh_t_transform_3041B (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t041F = femField(mesh041E,cell041D,field(3)[3],Transform,);
  field(3)[3,3] _t0420 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t041F);
  field(3)[3,3,3] _t0421 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0420);
  field(3)[3,3,3,3] _t0422 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t0421);
  tensor[3,3,3,3] _t0423 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t0422, pos041C);
  return _t0423;
}
function tensor[3,3,3]#0 mesh_t_transform_20424 (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t0425 = femField(mesh041E,cell041D,field(3)[3],Transform,);
  field(3)[3,3] _t0426 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0425);
  field(3)[3,3,3] _t0427 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t0426);
  tensor[3,3,3] _t0428 = prim @00A5<#∞; %3; $[3,3,3]> (_t0427, pos041C);
  return _t0428;
}
function tensor[3,3]#0 mesh_t_transform_10429 (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t042A = femField(mesh041E,cell041D,field(3)[3],Transform,);
  field(3)[3,3] _t042B = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t042A);
  tensor[3,3] _t042C = prim @00A5<#∞; %3; $[3,3]> (_t042B, pos041C);
  return _t042C;
}
function vec3#2 mesh_t_transform_0042D (vec3 pos041C, int cell041D, Femdata: Mesh mesh041E)
{
  field(3)[3] _t042E = femField(mesh041E,cell041D,field(3)[3],Transform,);
  vec3 _t042F = prim @00A5<#∞; %3; $[3]> (_t042E, pos041C);
  return _t042F;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse0430 (vec3 pos0431, int cellInt0432, Femdata: Mesh mesh0433)
{
  real _t0434 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0435 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0436 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn0437 = [_t0434, _t0435, _t0436];
  field(3)[3] _t0438 = femField(mesh0433,cellInt0432,field(3)[3],Transform,);
  field(3)[3,3] _t0439 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0438);
  field(3)[3,3] _t043A = prim inv015E<#∞; %3> (_t0439);
  real _t043B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t043C = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t043D = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t043E = [_t043B, _t043C, _t043D];
  A043F = prim @00A5<#∞; %3; $[3,3]> (_t043A, _t043E);
  int _t0440 = 0;
  int _t0441 = 16;
  int[] _t0442 = prim $range01C3 (_t0440, _t0441);
  foreach itter0472 in _t0442 {
    field(3)[3] _t0443 = femField(mesh0433,cellInt0432,field(3)[3],Transform,);
    field(3)[3] _t0444 = prim -002E<#∞; %3; $[3]> (_t0443, pos0431);
    field(3)[3] _t0445 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A043F, _t0444);
    delta0446 = prim @00A5<#∞; %3; $[3]> (_t0445, xn0437);
    xn0437 = prim -0026<$[3]> (xn0437, delta0446);
    real _t0447 = 0.1e-7;
    real _t0448 = 0.1e-7;
    real _t0449 = prim *0034 (_t0447, _t0448);
    real _t044A = prim •00CE<$[3]; $[3]; $[]> (delta0446, delta0446);
    bool _t044B = prim >=007E (_t0449, _t044A);
    if _t044B {
      real _t044C = 0.1e1;
      real _t044D = 0.1e-8;
      real _t044E = prim +0017<$[]> (_t044C, _t044D);
      real _t044F = 0.1e1;
      real _t0450 = 0.1e1;
      real _t0451 = 0.1e1;
      vec3 _t0452 = [_t044F, _t0450, _t0451];
      real _t0453 = prim •00CE<$[3]; $[3]; $[]> (_t0452, xn0437);
      bool _t0454 = prim >0080 (_t044E, _t0453);
      real _t0455 = 0.1e-8;
      real _t0456 = 0.1e-8;
      real _t0457 = 0.1e-8;
      vec3 _t0458 = [_t0455, _t0456, _t0457];
      vec3 _t0459 = prim +0017<$[3]> (_t0458, xn0437);
      real _t045A = _t0459[0];
      real _t045B = -0.e0;
      bool _t045C = prim >0080 (_t045A, _t045B);
      real _t045D = 0.1e-8;
      real _t045E = 0.1e-8;
      real _t045F = 0.1e-8;
      vec3 _t0460 = [_t045D, _t045E, _t045F];
      vec3 _t0461 = prim +0017<$[3]> (_t0460, xn0437);
      real _t0462 = _t0461[1];
      real _t0463 = -0.e0;
      bool _t0464 = prim >0080 (_t0462, _t0463);
      real _t0465 = 0.1e-8;
      real _t0466 = 0.1e-8;
      real _t0467 = 0.1e-8;
      vec3 _t0468 = [_t0465, _t0466, _t0467];
      vec3 _t0469 = prim +0017<$[3]> (_t0468, xn0437);
      real _t046A = _t0469[2];
      real _t046B = -0.e0;
      bool _t046C = prim >0080 (_t046A, _t046B);
      bool _t046D = prim $and01C4 (_t0464, _t046C);
      bool _t046E = prim $and01C4 (_t045C, _t046D);
      bool _t046F = prim $and01C4 (_t0454, _t046E);
      if _t046F {
        Femdata: MeshPos _t0470 = extractFemItemN((mesh0433, cellInt0432, xn0437, pos0431),AllBuild(MeshPos),);
        return _t0470;
      } else {
        Femdata: MeshPos _t0471 = extractFemItemN((mesh0433),InvalidBuild(MeshPos),);
        return _t0471;
      }
    }
  }
  Femdata: MeshPos _t0473 = extractFemItemN((mesh0433),InvalidBuild(MeshPos),);
  return _t0473;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos0474 (Femdata: MeshPos pos0475)
{
  bool _t0476 = extractFemItem(WorldTest(MeshPos), bool, pos0475);
  if _t0476 {
    vec3 _t0477 = extractFemItem(RefPos(MeshPos), vec3, pos0475);
    int _t0478 = extractFemItem(CellIndex(MeshPos), int, pos0475);
    Femdata: Mesh _t0479 = extractFem(pos0475, Mesh);
    vec3 _t047A = func mesh_t_transform_0042D (_t0477, _t0478, _t0479);
    Femdata: MeshPos _t047B = extractFemItemN((pos0475, _t047A),NewWorld(MeshPos),);
    return _t047B;
  } else {
    return pos0475;
  }
}
function vec3#3 worldPos047C (Femdata: MeshPos pos0475)
{
  vec3 _t047D = extractFemItem(RefPos(MeshPos), vec3, pos0475);
  int _t047E = extractFemItem(CellIndex(MeshPos), int, pos0475);
  Femdata: Mesh _t047F = extractFem(pos0475, Mesh);
  vec3 _t0480 = func mesh_t_transform_0042D (_t047D, _t047E, _t047F);
  return _t0480;
}
function Femdata: MeshPos#1 $exitPos0481 (Femdata: Mesh mesh0482, int cellId0483, vec3 refPos0484, vec3 dPos0485, real[2] time0486)
{
  int _t0487 = -1;
  real _t0488 = time0486[1];
  int _t0489 = prim $r2i01B7 (_t0488);
  int[2] _t048B = func nextCell4048A (_t0489, cellId0483, mesh0482);
  int _t048C = 0;
  int _t048D = prim $sub01C0<int; %2> (_t048B, _t048C);
  bool _t048E = prim !=0086 (_t0487, _t048D);
  if _t048E {
    string _t048F = "face ";
    real _t0490 = time0486[1];
    int _t0491 = prim $r2i01B7 (_t0490);
    string _t0492 = " to ";
    real _t0493 = time0486[1];
    int _t0494 = prim $r2i01B7 (_t0493);
    int[2] _t0495 = func nextCell4048A (_t0494, cellId0483, mesh0482);
    int _t0496 = 1;
    int _t0497 = prim $sub01C0<int; %2> (_t0495, _t0496);
    string _t0498 = "\n";
    string _t0499 = "got: ";
    real _t049A = 0.1e1;
    real _t049B = 0.e0;
    real _t049C = 0.e0;
    real _t049D = 0.e0;
    vec4 _t049E = [_t049A, _t049B, _t049C, _t049D];
    real _t049F = 0.e0;
    real _t04A0 = 0.1e1;
    real _t04A1 = 0.e0;
    real _t04A2 = 0.e0;
    vec4 _t04A3 = [_t049F, _t04A0, _t04A1, _t04A2];
    real _t04A4 = 0.e0;
    real _t04A5 = 0.e0;
    real _t04A6 = 0.1e1;
    real _t04A7 = 0.e0;
    vec4 _t04A8 = [_t04A4, _t04A5, _t04A6, _t04A7];
    real _t04A9 = 0.971445146547e-16;
    real _t04AA = 0.e0;
    real _t04AB = 0.e0;
    real _t04AC = 0.1e1;
    vec4 _t04AD = [_t04A9, _t04AA, _t04AB, _t04AC];
    tensor[4,4] _t04AE = [_t049E, _t04A3, _t04A8, _t04AD];
    real _t04AF = 0.57735026919e0;
    real _t04B0 = 0.57735026919e0;
    real _t04B1 = 0.57735026919e0;
    real _t04B2 = -0.57735026919e0;
    vec4 _t04B3 = [_t04AF, _t04B0, _t04B1, _t04B2];
    real _t04B4 = -0.333333333333e0;
    real _t04B5 = 0.666666666667e0;
    real _t04B6 = -0.333333333333e0;
    real _t04B7 = 0.333333333333e0;
    vec4 _t04B8 = [_t04B4, _t04B5, _t04B6, _t04B7];
    real _t04B9 = -0.333333333333e0;
    real _t04BA = -0.333333333333e0;
    real _t04BB = 0.666666666667e0;
    real _t04BC = 0.333333333333e0;
    vec4 _t04BD = [_t04B9, _t04BA, _t04BB, _t04BC];
    real _t04BE = 0.971445146547e-16;
    real _t04BF = 0.e0;
    real _t04C0 = 0.e0;
    real _t04C1 = 0.1e1;
    vec4 _t04C2 = [_t04BE, _t04BF, _t04C0, _t04C1];
    tensor[4,4] _t04C3 = [_t04B3, _t04B8, _t04BD, _t04C2];
    real _t04C4 = -0.333333333333e0;
    real _t04C5 = 0.666666666667e0;
    real _t04C6 = -0.333333333333e0;
    real _t04C7 = 0.333333333333e0;
    vec4 _t04C8 = [_t04C4, _t04C5, _t04C6, _t04C7];
    real _t04C9 = -0.57735026919e0;
    real _t04CA = -0.57735026919e0;
    real _t04CB = -0.57735026919e0;
    real _t04CC = 0.57735026919e0;
    vec4 _t04CD = [_t04C9, _t04CA, _t04CB, _t04CC];
    real _t04CE = -0.333333333333e0;
    real _t04CF = -0.333333333333e0;
    real _t04D0 = 0.666666666667e0;
    real _t04D1 = 0.333333333333e0;
    vec4 _t04D2 = [_t04CE, _t04CF, _t04D0, _t04D1];
    real _t04D3 = 0.971445146547e-16;
    real _t04D4 = 0.e0;
    real _t04D5 = 0.e0;
    real _t04D6 = 0.1e1;
    vec4 _t04D7 = [_t04D3, _t04D4, _t04D5, _t04D6];
    tensor[4,4] _t04D8 = [_t04C8, _t04CD, _t04D2, _t04D7];
    real _t04D9 = -0.333333333333e0;
    real _t04DA = 0.666666666667e0;
    real _t04DB = -0.333333333333e0;
    real _t04DC = 0.333333333333e0;
    vec4 _t04DD = [_t04D9, _t04DA, _t04DB, _t04DC];
    real _t04DE = -0.333333333333e0;
    real _t04DF = -0.333333333333e0;
    real _t04E0 = 0.666666666667e0;
    real _t04E1 = 0.333333333333e0;
    vec4 _t04E2 = [_t04DE, _t04DF, _t04E0, _t04E1];
    real _t04E3 = 0.57735026919e0;
    real _t04E4 = 0.57735026919e0;
    real _t04E5 = 0.57735026919e0;
    real _t04E6 = -0.57735026919e0;
    vec4 _t04E7 = [_t04E3, _t04E4, _t04E5, _t04E6];
    real _t04E8 = 0.971445146547e-16;
    real _t04E9 = 0.e0;
    real _t04EA = 0.e0;
    real _t04EB = 0.1e1;
    vec4 _t04EC = [_t04E8, _t04E9, _t04EA, _t04EB];
    tensor[4,4] _t04ED = [_t04DD, _t04E2, _t04E7, _t04EC];
    tensor[4,4][4] _t04EE = {_t04AE, _t04C3, _t04D8, _t04ED};
    real _t04EF = 0.57735026919e0;
    real _t04F0 = -0.1e1;
    real _t04F1 = -0.1e1;
    real _t04F2 = 0.1e1;
    vec4 _t04F3 = [_t04EF, _t04F0, _t04F1, _t04F2];
    real _t04F4 = 0.57735026919e0;
    real _t04F5 = 0.1e1;
    real _t04F6 = 0.e0;
    real _t04F7 = 0.e0;
    vec4 _t04F8 = [_t04F4, _t04F5, _t04F6, _t04F7];
    real _t04F9 = 0.57735026919e0;
    real _t04FA = 0.e0;
    real _t04FB = 0.1e1;
    real _t04FC = 0.e0;
    vec4 _t04FD = [_t04F9, _t04FA, _t04FB, _t04FC];
    real _t04FE = 0.e0;
    real _t04FF = 0.e0;
    real _t0500 = 0.e0;
    real _t0501 = 0.1e1;
    vec4 _t0502 = [_t04FE, _t04FF, _t0500, _t0501];
    tensor[4,4] _t0503 = [_t04F3, _t04F8, _t04FD, _t0502];
    real _t0504 = 0.1e1;
    real _t0505 = 0.e0;
    real _t0506 = 0.e0;
    real _t0507 = 0.e0;
    vec4 _t0508 = [_t0504, _t0505, _t0506, _t0507];
    real _t0509 = 0.e0;
    real _t050A = 0.1e1;
    real _t050B = 0.e0;
    real _t050C = 0.e0;
    vec4 _t050D = [_t0509, _t050A, _t050B, _t050C];
    real _t050E = 0.e0;
    real _t050F = 0.e0;
    real _t0510 = 0.1e1;
    real _t0511 = 0.e0;
    vec4 _t0512 = [_t050E, _t050F, _t0510, _t0511];
    real _t0513 = 0.e0;
    real _t0514 = 0.e0;
    real _t0515 = 0.e0;
    real _t0516 = 0.1e1;
    vec4 _t0517 = [_t0513, _t0514, _t0515, _t0516];
    tensor[4,4] _t0518 = [_t0508, _t050D, _t0512, _t0517];
    real _t0519 = 0.e0;
    real _t051A = 0.1e1;
    real _t051B = 0.e0;
    real _t051C = 0.e0;
    vec4 _t051D = [_t0519, _t051A, _t051B, _t051C];
    real _t051E = -0.1e1;
    real _t051F = 0.e0;
    real _t0520 = 0.e0;
    real _t0521 = 0.e0;
    vec4 _t0522 = [_t051E, _t051F, _t0520, _t0521];
    real _t0523 = 0.e0;
    real _t0524 = 0.e0;
    real _t0525 = 0.1e1;
    real _t0526 = 0.e0;
    vec4 _t0527 = [_t0523, _t0524, _t0525, _t0526];
    real _t0528 = 0.e0;
    real _t0529 = 0.e0;
    real _t052A = 0.e0;
    real _t052B = 0.1e1;
    vec4 _t052C = [_t0528, _t0529, _t052A, _t052B];
    tensor[4,4] _t052D = [_t051D, _t0522, _t0527, _t052C];
    real _t052E = 0.e0;
    real _t052F = 0.1e1;
    real _t0530 = 0.e0;
    real _t0531 = 0.e0;
    vec4 _t0532 = [_t052E, _t052F, _t0530, _t0531];
    real _t0533 = 0.e0;
    real _t0534 = 0.e0;
    real _t0535 = 0.1e1;
    real _t0536 = 0.e0;
    vec4 _t0537 = [_t0533, _t0534, _t0535, _t0536];
    real _t0538 = 0.1e1;
    real _t0539 = 0.e0;
    real _t053A = 0.e0;
    real _t053B = 0.e0;
    vec4 _t053C = [_t0538, _t0539, _t053A, _t053B];
    real _t053D = 0.e0;
    real _t053E = 0.e0;
    real _t053F = 0.e0;
    real _t0540 = 0.1e1;
    vec4 _t0541 = [_t053D, _t053E, _t053F, _t0540];
    tensor[4,4] _t0542 = [_t0532, _t0537, _t053C, _t0541];
    tensor[4,4][4] _t0543 = {_t0503, _t0518, _t052D, _t0542};
    real _t0544 = -0.1e1;
    real _t0545 = -0.57735026919e0;
    real _t0546 = -0.1e1;
    real _t0547 = 0.1e1;
    vec4 _t0548 = [_t0544, _t0545, _t0546, _t0547];
    real _t0549 = 0.1e1;
    real _t054A = -0.57735026919e0;
    real _t054B = 0.e0;
    real _t054C = 0.e0;
    vec4 _t054D = [_t0549, _t054A, _t054B, _t054C];
    real _t054E = 0.e0;
    real _t054F = -0.57735026919e0;
    real _t0550 = 0.1e1;
    real _t0551 = 0.e0;
    vec4 _t0552 = [_t054E, _t054F, _t0550, _t0551];
    real _t0553 = 0.e0;
    real _t0554 = 0.e0;
    real _t0555 = 0.e0;
    real _t0556 = 0.1e1;
    vec4 _t0557 = [_t0553, _t0554, _t0555, _t0556];
    tensor[4,4] _t0558 = [_t0548, _t054D, _t0552, _t0557];
    real _t0559 = 0.e0;
    real _t055A = -0.1e1;
    real _t055B = 0.e0;
    real _t055C = 0.e0;
    vec4 _t055D = [_t0559, _t055A, _t055B, _t055C];
    real _t055E = 0.1e1;
    real _t055F = 0.e0;
    real _t0560 = 0.e0;
    real _t0561 = 0.e0;
    vec4 _t0562 = [_t055E, _t055F, _t0560, _t0561];
    real _t0563 = 0.e0;
    real _t0564 = 0.e0;
    real _t0565 = 0.1e1;
    real _t0566 = 0.e0;
    vec4 _t0567 = [_t0563, _t0564, _t0565, _t0566];
    real _t0568 = 0.e0;
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    real _t056B = 0.1e1;
    vec4 _t056C = [_t0568, _t0569, _t056A, _t056B];
    tensor[4,4] _t056D = [_t055D, _t0562, _t0567, _t056C];
    real _t056E = 0.1e1;
    real _t056F = 0.e0;
    real _t0570 = 0.e0;
    real _t0571 = 0.e0;
    vec4 _t0572 = [_t056E, _t056F, _t0570, _t0571];
    real _t0573 = 0.e0;
    real _t0574 = 0.1e1;
    real _t0575 = 0.e0;
    real _t0576 = 0.e0;
    vec4 _t0577 = [_t0573, _t0574, _t0575, _t0576];
    real _t0578 = 0.e0;
    real _t0579 = 0.e0;
    real _t057A = 0.1e1;
    real _t057B = 0.e0;
    vec4 _t057C = [_t0578, _t0579, _t057A, _t057B];
    real _t057D = 0.e0;
    real _t057E = 0.e0;
    real _t057F = 0.e0;
    real _t0580 = 0.1e1;
    vec4 _t0581 = [_t057D, _t057E, _t057F, _t0580];
    tensor[4,4] _t0582 = [_t0572, _t0577, _t057C, _t0581];
    real _t0583 = 0.1e1;
    real _t0584 = 0.e0;
    real _t0585 = 0.e0;
    real _t0586 = 0.e0;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    real _t0588 = 0.e0;
    real _t0589 = 0.e0;
    real _t058A = 0.1e1;
    real _t058B = 0.e0;
    vec4 _t058C = [_t0588, _t0589, _t058A, _t058B];
    real _t058D = 0.e0;
    real _t058E = -0.1e1;
    real _t058F = 0.e0;
    real _t0590 = 0.e0;
    vec4 _t0591 = [_t058D, _t058E, _t058F, _t0590];
    real _t0592 = 0.e0;
    real _t0593 = 0.e0;
    real _t0594 = 0.e0;
    real _t0595 = 0.1e1;
    vec4 _t0596 = [_t0592, _t0593, _t0594, _t0595];
    tensor[4,4] _t0597 = [_t0587, _t058C, _t0591, _t0596];
    tensor[4,4][4] _t0598 = {_t0558, _t056D, _t0582, _t0597};
    real _t0599 = -0.1e1;
    real _t059A = -0.1e1;
    real _t059B = 0.57735026919e0;
    real _t059C = 0.1e1;
    vec4 _t059D = [_t0599, _t059A, _t059B, _t059C];
    real _t059E = 0.1e1;
    real _t059F = 0.e0;
    real _t05A0 = 0.57735026919e0;
    real _t05A1 = 0.e0;
    vec4 _t05A2 = [_t059E, _t059F, _t05A0, _t05A1];
    real _t05A3 = 0.e0;
    real _t05A4 = 0.1e1;
    real _t05A5 = 0.57735026919e0;
    real _t05A6 = 0.e0;
    vec4 _t05A7 = [_t05A3, _t05A4, _t05A5, _t05A6];
    real _t05A8 = 0.e0;
    real _t05A9 = 0.e0;
    real _t05AA = 0.e0;
    real _t05AB = 0.1e1;
    vec4 _t05AC = [_t05A8, _t05A9, _t05AA, _t05AB];
    tensor[4,4] _t05AD = [_t059D, _t05A2, _t05A7, _t05AC];
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.1e1;
    real _t05B1 = 0.e0;
    vec4 _t05B2 = [_t05AE, _t05AF, _t05B0, _t05B1];
    real _t05B3 = 0.1e1;
    real _t05B4 = 0.e0;
    real _t05B5 = 0.e0;
    real _t05B6 = 0.e0;
    vec4 _t05B7 = [_t05B3, _t05B4, _t05B5, _t05B6];
    real _t05B8 = 0.e0;
    real _t05B9 = 0.1e1;
    real _t05BA = 0.e0;
    real _t05BB = 0.e0;
    vec4 _t05BC = [_t05B8, _t05B9, _t05BA, _t05BB];
    real _t05BD = 0.e0;
    real _t05BE = 0.e0;
    real _t05BF = 0.e0;
    real _t05C0 = 0.1e1;
    vec4 _t05C1 = [_t05BD, _t05BE, _t05BF, _t05C0];
    tensor[4,4] _t05C2 = [_t05B2, _t05B7, _t05BC, _t05C1];
    real _t05C3 = 0.1e1;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.e0;
    real _t05C6 = 0.e0;
    vec4 _t05C7 = [_t05C3, _t05C4, _t05C5, _t05C6];
    real _t05C8 = 0.e0;
    real _t05C9 = 0.e0;
    real _t05CA = -0.1e1;
    real _t05CB = 0.e0;
    vec4 _t05CC = [_t05C8, _t05C9, _t05CA, _t05CB];
    real _t05CD = 0.e0;
    real _t05CE = 0.1e1;
    real _t05CF = 0.e0;
    real _t05D0 = 0.e0;
    vec4 _t05D1 = [_t05CD, _t05CE, _t05CF, _t05D0];
    real _t05D2 = 0.e0;
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    real _t05D5 = 0.1e1;
    vec4 _t05D6 = [_t05D2, _t05D3, _t05D4, _t05D5];
    tensor[4,4] _t05D7 = [_t05C7, _t05CC, _t05D1, _t05D6];
    real _t05D8 = 0.1e1;
    real _t05D9 = 0.e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.e0;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    real _t05DD = 0.e0;
    real _t05DE = 0.1e1;
    real _t05DF = 0.e0;
    real _t05E0 = 0.e0;
    vec4 _t05E1 = [_t05DD, _t05DE, _t05DF, _t05E0];
    real _t05E2 = 0.e0;
    real _t05E3 = 0.e0;
    real _t05E4 = 0.1e1;
    real _t05E5 = 0.e0;
    vec4 _t05E6 = [_t05E2, _t05E3, _t05E4, _t05E5];
    real _t05E7 = 0.e0;
    real _t05E8 = 0.e0;
    real _t05E9 = 0.e0;
    real _t05EA = 0.1e1;
    vec4 _t05EB = [_t05E7, _t05E8, _t05E9, _t05EA];
    tensor[4,4] _t05EC = [_t05DC, _t05E1, _t05E6, _t05EB];
    tensor[4,4][4] _t05ED = {_t05AD, _t05C2, _t05D7, _t05EC};
    tensor[4,4][4][4] _t05EE = {_t04EE, _t0543, _t0598, _t05ED};
    real _t05EF = time0486[1];
    int _t05F0 = prim $r2i01B7 (_t05EF);
    tensor[4,4][4] _t05F1 = prim $sub01C0<tensor[4,4][4]; %4> (_t05EE, _t05F0);
    real _t05F2 = time0486[1];
    int _t05F3 = prim $r2i01B7 (_t05F2);
    int[2] _t05F4 = func nextCell4048A (_t05F3, cellId0483, mesh0482);
    int _t05F5 = 1;
    int _t05F6 = prim $sub01C0<int; %2> (_t05F4, _t05F5);
    tensor[4,4] _t05F7 = prim $sub01C0<tensor[4,4]; %4> (_t05F1, _t05F6);
    string _t05F8 = "\n";
    print (_t048F, _t0491, _t0492, _t0497, _t0498, _t0499, _t05F7, _t05F8);
    real _t05F9 = time0486[1];
    int _t05FA = prim $r2i01B7 (_t05F9);
    int[2] _t05FB = func nextCell4048A (_t05FA, cellId0483, mesh0482);
    int _t05FC = 0;
    int _t05FD = prim $sub01C0<int; %2> (_t05FB, _t05FC);
    real _t05FE = 0.1e1;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    real _t0601 = 0.e0;
    vec4 _t0602 = [_t05FE, _t05FF, _t0600, _t0601];
    real _t0603 = 0.e0;
    real _t0604 = 0.1e1;
    real _t0605 = 0.e0;
    real _t0606 = 0.e0;
    vec4 _t0607 = [_t0603, _t0604, _t0605, _t0606];
    real _t0608 = 0.e0;
    real _t0609 = 0.e0;
    real _t060A = 0.1e1;
    real _t060B = 0.e0;
    vec4 _t060C = [_t0608, _t0609, _t060A, _t060B];
    real _t060D = 0.971445146547e-16;
    real _t060E = 0.e0;
    real _t060F = 0.e0;
    real _t0610 = 0.1e1;
    vec4 _t0611 = [_t060D, _t060E, _t060F, _t0610];
    tensor[4,4] _t0612 = [_t0602, _t0607, _t060C, _t0611];
    real _t0613 = 0.57735026919e0;
    real _t0614 = 0.57735026919e0;
    real _t0615 = 0.57735026919e0;
    real _t0616 = -0.57735026919e0;
    vec4 _t0617 = [_t0613, _t0614, _t0615, _t0616];
    real _t0618 = -0.333333333333e0;
    real _t0619 = 0.666666666667e0;
    real _t061A = -0.333333333333e0;
    real _t061B = 0.333333333333e0;
    vec4 _t061C = [_t0618, _t0619, _t061A, _t061B];
    real _t061D = -0.333333333333e0;
    real _t061E = -0.333333333333e0;
    real _t061F = 0.666666666667e0;
    real _t0620 = 0.333333333333e0;
    vec4 _t0621 = [_t061D, _t061E, _t061F, _t0620];
    real _t0622 = 0.971445146547e-16;
    real _t0623 = 0.e0;
    real _t0624 = 0.e0;
    real _t0625 = 0.1e1;
    vec4 _t0626 = [_t0622, _t0623, _t0624, _t0625];
    tensor[4,4] _t0627 = [_t0617, _t061C, _t0621, _t0626];
    real _t0628 = -0.333333333333e0;
    real _t0629 = 0.666666666667e0;
    real _t062A = -0.333333333333e0;
    real _t062B = 0.333333333333e0;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = -0.57735026919e0;
    real _t062E = -0.57735026919e0;
    real _t062F = -0.57735026919e0;
    real _t0630 = 0.57735026919e0;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    real _t0632 = -0.333333333333e0;
    real _t0633 = -0.333333333333e0;
    real _t0634 = 0.666666666667e0;
    real _t0635 = 0.333333333333e0;
    vec4 _t0636 = [_t0632, _t0633, _t0634, _t0635];
    real _t0637 = 0.971445146547e-16;
    real _t0638 = 0.e0;
    real _t0639 = 0.e0;
    real _t063A = 0.1e1;
    vec4 _t063B = [_t0637, _t0638, _t0639, _t063A];
    tensor[4,4] _t063C = [_t062C, _t0631, _t0636, _t063B];
    real _t063D = -0.333333333333e0;
    real _t063E = 0.666666666667e0;
    real _t063F = -0.333333333333e0;
    real _t0640 = 0.333333333333e0;
    vec4 _t0641 = [_t063D, _t063E, _t063F, _t0640];
    real _t0642 = -0.333333333333e0;
    real _t0643 = -0.333333333333e0;
    real _t0644 = 0.666666666667e0;
    real _t0645 = 0.333333333333e0;
    vec4 _t0646 = [_t0642, _t0643, _t0644, _t0645];
    real _t0647 = 0.57735026919e0;
    real _t0648 = 0.57735026919e0;
    real _t0649 = 0.57735026919e0;
    real _t064A = -0.57735026919e0;
    vec4 _t064B = [_t0647, _t0648, _t0649, _t064A];
    real _t064C = 0.971445146547e-16;
    real _t064D = 0.e0;
    real _t064E = 0.e0;
    real _t064F = 0.1e1;
    vec4 _t0650 = [_t064C, _t064D, _t064E, _t064F];
    tensor[4,4] _t0651 = [_t0641, _t0646, _t064B, _t0650];
    tensor[4,4][4] _t0652 = {_t0612, _t0627, _t063C, _t0651};
    real _t0653 = 0.57735026919e0;
    real _t0654 = -0.1e1;
    real _t0655 = -0.1e1;
    real _t0656 = 0.1e1;
    vec4 _t0657 = [_t0653, _t0654, _t0655, _t0656];
    real _t0658 = 0.57735026919e0;
    real _t0659 = 0.1e1;
    real _t065A = 0.e0;
    real _t065B = 0.e0;
    vec4 _t065C = [_t0658, _t0659, _t065A, _t065B];
    real _t065D = 0.57735026919e0;
    real _t065E = 0.e0;
    real _t065F = 0.1e1;
    real _t0660 = 0.e0;
    vec4 _t0661 = [_t065D, _t065E, _t065F, _t0660];
    real _t0662 = 0.e0;
    real _t0663 = 0.e0;
    real _t0664 = 0.e0;
    real _t0665 = 0.1e1;
    vec4 _t0666 = [_t0662, _t0663, _t0664, _t0665];
    tensor[4,4] _t0667 = [_t0657, _t065C, _t0661, _t0666];
    real _t0668 = 0.1e1;
    real _t0669 = 0.e0;
    real _t066A = 0.e0;
    real _t066B = 0.e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.1e1;
    real _t066F = 0.e0;
    real _t0670 = 0.e0;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    real _t0672 = 0.e0;
    real _t0673 = 0.e0;
    real _t0674 = 0.1e1;
    real _t0675 = 0.e0;
    vec4 _t0676 = [_t0672, _t0673, _t0674, _t0675];
    real _t0677 = 0.e0;
    real _t0678 = 0.e0;
    real _t0679 = 0.e0;
    real _t067A = 0.1e1;
    vec4 _t067B = [_t0677, _t0678, _t0679, _t067A];
    tensor[4,4] _t067C = [_t066C, _t0671, _t0676, _t067B];
    real _t067D = 0.e0;
    real _t067E = 0.1e1;
    real _t067F = 0.e0;
    real _t0680 = 0.e0;
    vec4 _t0681 = [_t067D, _t067E, _t067F, _t0680];
    real _t0682 = -0.1e1;
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = 0.e0;
    vec4 _t0686 = [_t0682, _t0683, _t0684, _t0685];
    real _t0687 = 0.e0;
    real _t0688 = 0.e0;
    real _t0689 = 0.1e1;
    real _t068A = 0.e0;
    vec4 _t068B = [_t0687, _t0688, _t0689, _t068A];
    real _t068C = 0.e0;
    real _t068D = 0.e0;
    real _t068E = 0.e0;
    real _t068F = 0.1e1;
    vec4 _t0690 = [_t068C, _t068D, _t068E, _t068F];
    tensor[4,4] _t0691 = [_t0681, _t0686, _t068B, _t0690];
    real _t0692 = 0.e0;
    real _t0693 = 0.1e1;
    real _t0694 = 0.e0;
    real _t0695 = 0.e0;
    vec4 _t0696 = [_t0692, _t0693, _t0694, _t0695];
    real _t0697 = 0.e0;
    real _t0698 = 0.e0;
    real _t0699 = 0.1e1;
    real _t069A = 0.e0;
    vec4 _t069B = [_t0697, _t0698, _t0699, _t069A];
    real _t069C = 0.1e1;
    real _t069D = 0.e0;
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    vec4 _t06A0 = [_t069C, _t069D, _t069E, _t069F];
    real _t06A1 = 0.e0;
    real _t06A2 = 0.e0;
    real _t06A3 = 0.e0;
    real _t06A4 = 0.1e1;
    vec4 _t06A5 = [_t06A1, _t06A2, _t06A3, _t06A4];
    tensor[4,4] _t06A6 = [_t0696, _t069B, _t06A0, _t06A5];
    tensor[4,4][4] _t06A7 = {_t0667, _t067C, _t0691, _t06A6};
    real _t06A8 = -0.1e1;
    real _t06A9 = -0.57735026919e0;
    real _t06AA = -0.1e1;
    real _t06AB = 0.1e1;
    vec4 _t06AC = [_t06A8, _t06A9, _t06AA, _t06AB];
    real _t06AD = 0.1e1;
    real _t06AE = -0.57735026919e0;
    real _t06AF = 0.e0;
    real _t06B0 = 0.e0;
    vec4 _t06B1 = [_t06AD, _t06AE, _t06AF, _t06B0];
    real _t06B2 = 0.e0;
    real _t06B3 = -0.57735026919e0;
    real _t06B4 = 0.1e1;
    real _t06B5 = 0.e0;
    vec4 _t06B6 = [_t06B2, _t06B3, _t06B4, _t06B5];
    real _t06B7 = 0.e0;
    real _t06B8 = 0.e0;
    real _t06B9 = 0.e0;
    real _t06BA = 0.1e1;
    vec4 _t06BB = [_t06B7, _t06B8, _t06B9, _t06BA];
    tensor[4,4] _t06BC = [_t06AC, _t06B1, _t06B6, _t06BB];
    real _t06BD = 0.e0;
    real _t06BE = -0.1e1;
    real _t06BF = 0.e0;
    real _t06C0 = 0.e0;
    vec4 _t06C1 = [_t06BD, _t06BE, _t06BF, _t06C0];
    real _t06C2 = 0.1e1;
    real _t06C3 = 0.e0;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.e0;
    vec4 _t06C6 = [_t06C2, _t06C3, _t06C4, _t06C5];
    real _t06C7 = 0.e0;
    real _t06C8 = 0.e0;
    real _t06C9 = 0.1e1;
    real _t06CA = 0.e0;
    vec4 _t06CB = [_t06C7, _t06C8, _t06C9, _t06CA];
    real _t06CC = 0.e0;
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = 0.1e1;
    vec4 _t06D0 = [_t06CC, _t06CD, _t06CE, _t06CF];
    tensor[4,4] _t06D1 = [_t06C1, _t06C6, _t06CB, _t06D0];
    real _t06D2 = 0.1e1;
    real _t06D3 = 0.e0;
    real _t06D4 = 0.e0;
    real _t06D5 = 0.e0;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    real _t06D7 = 0.e0;
    real _t06D8 = 0.1e1;
    real _t06D9 = 0.e0;
    real _t06DA = 0.e0;
    vec4 _t06DB = [_t06D7, _t06D8, _t06D9, _t06DA];
    real _t06DC = 0.e0;
    real _t06DD = 0.e0;
    real _t06DE = 0.1e1;
    real _t06DF = 0.e0;
    vec4 _t06E0 = [_t06DC, _t06DD, _t06DE, _t06DF];
    real _t06E1 = 0.e0;
    real _t06E2 = 0.e0;
    real _t06E3 = 0.e0;
    real _t06E4 = 0.1e1;
    vec4 _t06E5 = [_t06E1, _t06E2, _t06E3, _t06E4];
    tensor[4,4] _t06E6 = [_t06D6, _t06DB, _t06E0, _t06E5];
    real _t06E7 = 0.1e1;
    real _t06E8 = 0.e0;
    real _t06E9 = 0.e0;
    real _t06EA = 0.e0;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    real _t06EC = 0.e0;
    real _t06ED = 0.e0;
    real _t06EE = 0.1e1;
    real _t06EF = 0.e0;
    vec4 _t06F0 = [_t06EC, _t06ED, _t06EE, _t06EF];
    real _t06F1 = 0.e0;
    real _t06F2 = -0.1e1;
    real _t06F3 = 0.e0;
    real _t06F4 = 0.e0;
    vec4 _t06F5 = [_t06F1, _t06F2, _t06F3, _t06F4];
    real _t06F6 = 0.e0;
    real _t06F7 = 0.e0;
    real _t06F8 = 0.e0;
    real _t06F9 = 0.1e1;
    vec4 _t06FA = [_t06F6, _t06F7, _t06F8, _t06F9];
    tensor[4,4] _t06FB = [_t06EB, _t06F0, _t06F5, _t06FA];
    tensor[4,4][4] _t06FC = {_t06BC, _t06D1, _t06E6, _t06FB};
    real _t06FD = -0.1e1;
    real _t06FE = -0.1e1;
    real _t06FF = 0.57735026919e0;
    real _t0700 = 0.1e1;
    vec4 _t0701 = [_t06FD, _t06FE, _t06FF, _t0700];
    real _t0702 = 0.1e1;
    real _t0703 = 0.e0;
    real _t0704 = 0.57735026919e0;
    real _t0705 = 0.e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = 0.e0;
    real _t0708 = 0.1e1;
    real _t0709 = 0.57735026919e0;
    real _t070A = 0.e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.e0;
    real _t070D = 0.e0;
    real _t070E = 0.e0;
    real _t070F = 0.1e1;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    tensor[4,4] _t0711 = [_t0701, _t0706, _t070B, _t0710];
    real _t0712 = 0.e0;
    real _t0713 = 0.e0;
    real _t0714 = 0.1e1;
    real _t0715 = 0.e0;
    vec4 _t0716 = [_t0712, _t0713, _t0714, _t0715];
    real _t0717 = 0.1e1;
    real _t0718 = 0.e0;
    real _t0719 = 0.e0;
    real _t071A = 0.e0;
    vec4 _t071B = [_t0717, _t0718, _t0719, _t071A];
    real _t071C = 0.e0;
    real _t071D = 0.1e1;
    real _t071E = 0.e0;
    real _t071F = 0.e0;
    vec4 _t0720 = [_t071C, _t071D, _t071E, _t071F];
    real _t0721 = 0.e0;
    real _t0722 = 0.e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    vec4 _t0725 = [_t0721, _t0722, _t0723, _t0724];
    tensor[4,4] _t0726 = [_t0716, _t071B, _t0720, _t0725];
    real _t0727 = 0.1e1;
    real _t0728 = 0.e0;
    real _t0729 = 0.e0;
    real _t072A = 0.e0;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    real _t072C = 0.e0;
    real _t072D = 0.e0;
    real _t072E = -0.1e1;
    real _t072F = 0.e0;
    vec4 _t0730 = [_t072C, _t072D, _t072E, _t072F];
    real _t0731 = 0.e0;
    real _t0732 = 0.1e1;
    real _t0733 = 0.e0;
    real _t0734 = 0.e0;
    vec4 _t0735 = [_t0731, _t0732, _t0733, _t0734];
    real _t0736 = 0.e0;
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.1e1;
    vec4 _t073A = [_t0736, _t0737, _t0738, _t0739];
    tensor[4,4] _t073B = [_t072B, _t0730, _t0735, _t073A];
    real _t073C = 0.1e1;
    real _t073D = 0.e0;
    real _t073E = 0.e0;
    real _t073F = 0.e0;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    real _t0741 = 0.e0;
    real _t0742 = 0.1e1;
    real _t0743 = 0.e0;
    real _t0744 = 0.e0;
    vec4 _t0745 = [_t0741, _t0742, _t0743, _t0744];
    real _t0746 = 0.e0;
    real _t0747 = 0.e0;
    real _t0748 = 0.1e1;
    real _t0749 = 0.e0;
    vec4 _t074A = [_t0746, _t0747, _t0748, _t0749];
    real _t074B = 0.e0;
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.1e1;
    vec4 _t074F = [_t074B, _t074C, _t074D, _t074E];
    tensor[4,4] _t0750 = [_t0740, _t0745, _t074A, _t074F];
    tensor[4,4][4] _t0751 = {_t0711, _t0726, _t073B, _t0750};
    tensor[4,4][4][4] _t0752 = {_t0652, _t06A7, _t06FC, _t0751};
    real _t0753 = time0486[1];
    int _t0754 = prim $r2i01B7 (_t0753);
    tensor[4,4][4] _t0755 = prim $sub01C0<tensor[4,4][4]; %4> (_t0752, _t0754);
    real _t0756 = time0486[1];
    int _t0757 = prim $r2i01B7 (_t0756);
    int[2] _t0758 = func nextCell4048A (_t0757, cellId0483, mesh0482);
    int _t0759 = 1;
    int _t075A = prim $sub01C0<int; %2> (_t0758, _t0759);
    tensor[4,4] _t075B = prim $sub01C0<tensor[4,4]; %4> (_t0755, _t075A);
    real _t075C = time0486[0];
    vec3 _t075D = prim *0036<$[3]> (_t075C, dPos0485);
    vec3 _t075E = prim +0017<$[3]> (_t075D, refPos0484);
    real _t075F = _t075E[0];
    real _t0760 = time0486[0];
    vec3 _t0761 = prim *0036<$[3]> (_t0760, dPos0485);
    vec3 _t0762 = prim +0017<$[3]> (_t0761, refPos0484);
    real _t0763 = _t0762[1];
    real _t0764 = time0486[0];
    vec3 _t0765 = prim *0036<$[3]> (_t0764, dPos0485);
    vec3 _t0766 = prim +0017<$[3]> (_t0765, refPos0484);
    real _t0767 = _t0766[2];
    real _t0768 = 0.1e1;
    vec4 _t0769 = [_t075F, _t0763, _t0767, _t0768];
    vec4 _t076A = prim •00CE<$[4,4]; $[4]; $[4]> (_t075B, _t0769);
    real _t076B = _t076A[0];
    real _t076C = 0.1e1;
    real _t076D = 0.e0;
    real _t076E = 0.e0;
    real _t076F = 0.e0;
    vec4 _t0770 = [_t076C, _t076D, _t076E, _t076F];
    real _t0771 = 0.e0;
    real _t0772 = 0.1e1;
    real _t0773 = 0.e0;
    real _t0774 = 0.e0;
    vec4 _t0775 = [_t0771, _t0772, _t0773, _t0774];
    real _t0776 = 0.e0;
    real _t0777 = 0.e0;
    real _t0778 = 0.1e1;
    real _t0779 = 0.e0;
    vec4 _t077A = [_t0776, _t0777, _t0778, _t0779];
    real _t077B = 0.971445146547e-16;
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    real _t077E = 0.1e1;
    vec4 _t077F = [_t077B, _t077C, _t077D, _t077E];
    tensor[4,4] _t0780 = [_t0770, _t0775, _t077A, _t077F];
    real _t0781 = 0.57735026919e0;
    real _t0782 = 0.57735026919e0;
    real _t0783 = 0.57735026919e0;
    real _t0784 = -0.57735026919e0;
    vec4 _t0785 = [_t0781, _t0782, _t0783, _t0784];
    real _t0786 = -0.333333333333e0;
    real _t0787 = 0.666666666667e0;
    real _t0788 = -0.333333333333e0;
    real _t0789 = 0.333333333333e0;
    vec4 _t078A = [_t0786, _t0787, _t0788, _t0789];
    real _t078B = -0.333333333333e0;
    real _t078C = -0.333333333333e0;
    real _t078D = 0.666666666667e0;
    real _t078E = 0.333333333333e0;
    vec4 _t078F = [_t078B, _t078C, _t078D, _t078E];
    real _t0790 = 0.971445146547e-16;
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    real _t0793 = 0.1e1;
    vec4 _t0794 = [_t0790, _t0791, _t0792, _t0793];
    tensor[4,4] _t0795 = [_t0785, _t078A, _t078F, _t0794];
    real _t0796 = -0.333333333333e0;
    real _t0797 = 0.666666666667e0;
    real _t0798 = -0.333333333333e0;
    real _t0799 = 0.333333333333e0;
    vec4 _t079A = [_t0796, _t0797, _t0798, _t0799];
    real _t079B = -0.57735026919e0;
    real _t079C = -0.57735026919e0;
    real _t079D = -0.57735026919e0;
    real _t079E = 0.57735026919e0;
    vec4 _t079F = [_t079B, _t079C, _t079D, _t079E];
    real _t07A0 = -0.333333333333e0;
    real _t07A1 = -0.333333333333e0;
    real _t07A2 = 0.666666666667e0;
    real _t07A3 = 0.333333333333e0;
    vec4 _t07A4 = [_t07A0, _t07A1, _t07A2, _t07A3];
    real _t07A5 = 0.971445146547e-16;
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.1e1;
    vec4 _t07A9 = [_t07A5, _t07A6, _t07A7, _t07A8];
    tensor[4,4] _t07AA = [_t079A, _t079F, _t07A4, _t07A9];
    real _t07AB = -0.333333333333e0;
    real _t07AC = 0.666666666667e0;
    real _t07AD = -0.333333333333e0;
    real _t07AE = 0.333333333333e0;
    vec4 _t07AF = [_t07AB, _t07AC, _t07AD, _t07AE];
    real _t07B0 = -0.333333333333e0;
    real _t07B1 = -0.333333333333e0;
    real _t07B2 = 0.666666666667e0;
    real _t07B3 = 0.333333333333e0;
    vec4 _t07B4 = [_t07B0, _t07B1, _t07B2, _t07B3];
    real _t07B5 = 0.57735026919e0;
    real _t07B6 = 0.57735026919e0;
    real _t07B7 = 0.57735026919e0;
    real _t07B8 = -0.57735026919e0;
    vec4 _t07B9 = [_t07B5, _t07B6, _t07B7, _t07B8];
    real _t07BA = 0.971445146547e-16;
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.1e1;
    vec4 _t07BE = [_t07BA, _t07BB, _t07BC, _t07BD];
    tensor[4,4] _t07BF = [_t07AF, _t07B4, _t07B9, _t07BE];
    tensor[4,4][4] _t07C0 = {_t0780, _t0795, _t07AA, _t07BF};
    real _t07C1 = 0.57735026919e0;
    real _t07C2 = -0.1e1;
    real _t07C3 = -0.1e1;
    real _t07C4 = 0.1e1;
    vec4 _t07C5 = [_t07C1, _t07C2, _t07C3, _t07C4];
    real _t07C6 = 0.57735026919e0;
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.e0;
    vec4 _t07CA = [_t07C6, _t07C7, _t07C8, _t07C9];
    real _t07CB = 0.57735026919e0;
    real _t07CC = 0.e0;
    real _t07CD = 0.1e1;
    real _t07CE = 0.e0;
    vec4 _t07CF = [_t07CB, _t07CC, _t07CD, _t07CE];
    real _t07D0 = 0.e0;
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.1e1;
    vec4 _t07D4 = [_t07D0, _t07D1, _t07D2, _t07D3];
    tensor[4,4] _t07D5 = [_t07C5, _t07CA, _t07CF, _t07D4];
    real _t07D6 = 0.1e1;
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.e0;
    vec4 _t07DA = [_t07D6, _t07D7, _t07D8, _t07D9];
    real _t07DB = 0.e0;
    real _t07DC = 0.1e1;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    vec4 _t07DF = [_t07DB, _t07DC, _t07DD, _t07DE];
    real _t07E0 = 0.e0;
    real _t07E1 = 0.e0;
    real _t07E2 = 0.1e1;
    real _t07E3 = 0.e0;
    vec4 _t07E4 = [_t07E0, _t07E1, _t07E2, _t07E3];
    real _t07E5 = 0.e0;
    real _t07E6 = 0.e0;
    real _t07E7 = 0.e0;
    real _t07E8 = 0.1e1;
    vec4 _t07E9 = [_t07E5, _t07E6, _t07E7, _t07E8];
    tensor[4,4] _t07EA = [_t07DA, _t07DF, _t07E4, _t07E9];
    real _t07EB = 0.e0;
    real _t07EC = 0.1e1;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    vec4 _t07EF = [_t07EB, _t07EC, _t07ED, _t07EE];
    real _t07F0 = -0.1e1;
    real _t07F1 = 0.e0;
    real _t07F2 = 0.e0;
    real _t07F3 = 0.e0;
    vec4 _t07F4 = [_t07F0, _t07F1, _t07F2, _t07F3];
    real _t07F5 = 0.e0;
    real _t07F6 = 0.e0;
    real _t07F7 = 0.1e1;
    real _t07F8 = 0.e0;
    vec4 _t07F9 = [_t07F5, _t07F6, _t07F7, _t07F8];
    real _t07FA = 0.e0;
    real _t07FB = 0.e0;
    real _t07FC = 0.e0;
    real _t07FD = 0.1e1;
    vec4 _t07FE = [_t07FA, _t07FB, _t07FC, _t07FD];
    tensor[4,4] _t07FF = [_t07EF, _t07F4, _t07F9, _t07FE];
    real _t0800 = 0.e0;
    real _t0801 = 0.1e1;
    real _t0802 = 0.e0;
    real _t0803 = 0.e0;
    vec4 _t0804 = [_t0800, _t0801, _t0802, _t0803];
    real _t0805 = 0.e0;
    real _t0806 = 0.e0;
    real _t0807 = 0.1e1;
    real _t0808 = 0.e0;
    vec4 _t0809 = [_t0805, _t0806, _t0807, _t0808];
    real _t080A = 0.1e1;
    real _t080B = 0.e0;
    real _t080C = 0.e0;
    real _t080D = 0.e0;
    vec4 _t080E = [_t080A, _t080B, _t080C, _t080D];
    real _t080F = 0.e0;
    real _t0810 = 0.e0;
    real _t0811 = 0.e0;
    real _t0812 = 0.1e1;
    vec4 _t0813 = [_t080F, _t0810, _t0811, _t0812];
    tensor[4,4] _t0814 = [_t0804, _t0809, _t080E, _t0813];
    tensor[4,4][4] _t0815 = {_t07D5, _t07EA, _t07FF, _t0814};
    real _t0816 = -0.1e1;
    real _t0817 = -0.57735026919e0;
    real _t0818 = -0.1e1;
    real _t0819 = 0.1e1;
    vec4 _t081A = [_t0816, _t0817, _t0818, _t0819];
    real _t081B = 0.1e1;
    real _t081C = -0.57735026919e0;
    real _t081D = 0.e0;
    real _t081E = 0.e0;
    vec4 _t081F = [_t081B, _t081C, _t081D, _t081E];
    real _t0820 = 0.e0;
    real _t0821 = -0.57735026919e0;
    real _t0822 = 0.1e1;
    real _t0823 = 0.e0;
    vec4 _t0824 = [_t0820, _t0821, _t0822, _t0823];
    real _t0825 = 0.e0;
    real _t0826 = 0.e0;
    real _t0827 = 0.e0;
    real _t0828 = 0.1e1;
    vec4 _t0829 = [_t0825, _t0826, _t0827, _t0828];
    tensor[4,4] _t082A = [_t081A, _t081F, _t0824, _t0829];
    real _t082B = 0.e0;
    real _t082C = -0.1e1;
    real _t082D = 0.e0;
    real _t082E = 0.e0;
    vec4 _t082F = [_t082B, _t082C, _t082D, _t082E];
    real _t0830 = 0.1e1;
    real _t0831 = 0.e0;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    vec4 _t0834 = [_t0830, _t0831, _t0832, _t0833];
    real _t0835 = 0.e0;
    real _t0836 = 0.e0;
    real _t0837 = 0.1e1;
    real _t0838 = 0.e0;
    vec4 _t0839 = [_t0835, _t0836, _t0837, _t0838];
    real _t083A = 0.e0;
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    real _t083D = 0.1e1;
    vec4 _t083E = [_t083A, _t083B, _t083C, _t083D];
    tensor[4,4] _t083F = [_t082F, _t0834, _t0839, _t083E];
    real _t0840 = 0.1e1;
    real _t0841 = 0.e0;
    real _t0842 = 0.e0;
    real _t0843 = 0.e0;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    real _t0845 = 0.e0;
    real _t0846 = 0.1e1;
    real _t0847 = 0.e0;
    real _t0848 = 0.e0;
    vec4 _t0849 = [_t0845, _t0846, _t0847, _t0848];
    real _t084A = 0.e0;
    real _t084B = 0.e0;
    real _t084C = 0.1e1;
    real _t084D = 0.e0;
    vec4 _t084E = [_t084A, _t084B, _t084C, _t084D];
    real _t084F = 0.e0;
    real _t0850 = 0.e0;
    real _t0851 = 0.e0;
    real _t0852 = 0.1e1;
    vec4 _t0853 = [_t084F, _t0850, _t0851, _t0852];
    tensor[4,4] _t0854 = [_t0844, _t0849, _t084E, _t0853];
    real _t0855 = 0.1e1;
    real _t0856 = 0.e0;
    real _t0857 = 0.e0;
    real _t0858 = 0.e0;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    real _t085A = 0.e0;
    real _t085B = 0.e0;
    real _t085C = 0.1e1;
    real _t085D = 0.e0;
    vec4 _t085E = [_t085A, _t085B, _t085C, _t085D];
    real _t085F = 0.e0;
    real _t0860 = -0.1e1;
    real _t0861 = 0.e0;
    real _t0862 = 0.e0;
    vec4 _t0863 = [_t085F, _t0860, _t0861, _t0862];
    real _t0864 = 0.e0;
    real _t0865 = 0.e0;
    real _t0866 = 0.e0;
    real _t0867 = 0.1e1;
    vec4 _t0868 = [_t0864, _t0865, _t0866, _t0867];
    tensor[4,4] _t0869 = [_t0859, _t085E, _t0863, _t0868];
    tensor[4,4][4] _t086A = {_t082A, _t083F, _t0854, _t0869};
    real _t086B = -0.1e1;
    real _t086C = -0.1e1;
    real _t086D = 0.57735026919e0;
    real _t086E = 0.1e1;
    vec4 _t086F = [_t086B, _t086C, _t086D, _t086E];
    real _t0870 = 0.1e1;
    real _t0871 = 0.e0;
    real _t0872 = 0.57735026919e0;
    real _t0873 = 0.e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = 0.e0;
    real _t0876 = 0.1e1;
    real _t0877 = 0.57735026919e0;
    real _t0878 = 0.e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.e0;
    real _t087B = 0.e0;
    real _t087C = 0.e0;
    real _t087D = 0.1e1;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    tensor[4,4] _t087F = [_t086F, _t0874, _t0879, _t087E];
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.1e1;
    real _t0883 = 0.e0;
    vec4 _t0884 = [_t0880, _t0881, _t0882, _t0883];
    real _t0885 = 0.1e1;
    real _t0886 = 0.e0;
    real _t0887 = 0.e0;
    real _t0888 = 0.e0;
    vec4 _t0889 = [_t0885, _t0886, _t0887, _t0888];
    real _t088A = 0.e0;
    real _t088B = 0.1e1;
    real _t088C = 0.e0;
    real _t088D = 0.e0;
    vec4 _t088E = [_t088A, _t088B, _t088C, _t088D];
    real _t088F = 0.e0;
    real _t0890 = 0.e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    vec4 _t0893 = [_t088F, _t0890, _t0891, _t0892];
    tensor[4,4] _t0894 = [_t0884, _t0889, _t088E, _t0893];
    real _t0895 = 0.1e1;
    real _t0896 = 0.e0;
    real _t0897 = 0.e0;
    real _t0898 = 0.e0;
    vec4 _t0899 = [_t0895, _t0896, _t0897, _t0898];
    real _t089A = 0.e0;
    real _t089B = 0.e0;
    real _t089C = -0.1e1;
    real _t089D = 0.e0;
    vec4 _t089E = [_t089A, _t089B, _t089C, _t089D];
    real _t089F = 0.e0;
    real _t08A0 = 0.1e1;
    real _t08A1 = 0.e0;
    real _t08A2 = 0.e0;
    vec4 _t08A3 = [_t089F, _t08A0, _t08A1, _t08A2];
    real _t08A4 = 0.e0;
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.1e1;
    vec4 _t08A8 = [_t08A4, _t08A5, _t08A6, _t08A7];
    tensor[4,4] _t08A9 = [_t0899, _t089E, _t08A3, _t08A8];
    real _t08AA = 0.1e1;
    real _t08AB = 0.e0;
    real _t08AC = 0.e0;
    real _t08AD = 0.e0;
    vec4 _t08AE = [_t08AA, _t08AB, _t08AC, _t08AD];
    real _t08AF = 0.e0;
    real _t08B0 = 0.1e1;
    real _t08B1 = 0.e0;
    real _t08B2 = 0.e0;
    vec4 _t08B3 = [_t08AF, _t08B0, _t08B1, _t08B2];
    real _t08B4 = 0.e0;
    real _t08B5 = 0.e0;
    real _t08B6 = 0.1e1;
    real _t08B7 = 0.e0;
    vec4 _t08B8 = [_t08B4, _t08B5, _t08B6, _t08B7];
    real _t08B9 = 0.e0;
    real _t08BA = 0.e0;
    real _t08BB = 0.e0;
    real _t08BC = 0.1e1;
    vec4 _t08BD = [_t08B9, _t08BA, _t08BB, _t08BC];
    tensor[4,4] _t08BE = [_t08AE, _t08B3, _t08B8, _t08BD];
    tensor[4,4][4] _t08BF = {_t087F, _t0894, _t08A9, _t08BE};
    tensor[4,4][4][4] _t08C0 = {_t07C0, _t0815, _t086A, _t08BF};
    real _t08C1 = time0486[1];
    int _t08C2 = prim $r2i01B7 (_t08C1);
    tensor[4,4][4] _t08C3 = prim $sub01C0<tensor[4,4][4]; %4> (_t08C0, _t08C2);
    real _t08C4 = time0486[1];
    int _t08C5 = prim $r2i01B7 (_t08C4);
    int[2] _t08C6 = func nextCell4048A (_t08C5, cellId0483, mesh0482);
    int _t08C7 = 1;
    int _t08C8 = prim $sub01C0<int; %2> (_t08C6, _t08C7);
    tensor[4,4] _t08C9 = prim $sub01C0<tensor[4,4]; %4> (_t08C3, _t08C8);
    real _t08CA = time0486[0];
    vec3 _t08CB = prim *0036<$[3]> (_t08CA, dPos0485);
    vec3 _t08CC = prim +0017<$[3]> (_t08CB, refPos0484);
    real _t08CD = _t08CC[0];
    real _t08CE = time0486[0];
    vec3 _t08CF = prim *0036<$[3]> (_t08CE, dPos0485);
    vec3 _t08D0 = prim +0017<$[3]> (_t08CF, refPos0484);
    real _t08D1 = _t08D0[1];
    real _t08D2 = time0486[0];
    vec3 _t08D3 = prim *0036<$[3]> (_t08D2, dPos0485);
    vec3 _t08D4 = prim +0017<$[3]> (_t08D3, refPos0484);
    real _t08D5 = _t08D4[2];
    real _t08D6 = 0.1e1;
    vec4 _t08D7 = [_t08CD, _t08D1, _t08D5, _t08D6];
    vec4 _t08D8 = prim •00CE<$[4,4]; $[4]; $[4]> (_t08C9, _t08D7);
    real _t08D9 = _t08D8[1];
    real _t08DA = 0.1e1;
    real _t08DB = 0.e0;
    real _t08DC = 0.e0;
    real _t08DD = 0.e0;
    vec4 _t08DE = [_t08DA, _t08DB, _t08DC, _t08DD];
    real _t08DF = 0.e0;
    real _t08E0 = 0.1e1;
    real _t08E1 = 0.e0;
    real _t08E2 = 0.e0;
    vec4 _t08E3 = [_t08DF, _t08E0, _t08E1, _t08E2];
    real _t08E4 = 0.e0;
    real _t08E5 = 0.e0;
    real _t08E6 = 0.1e1;
    real _t08E7 = 0.e0;
    vec4 _t08E8 = [_t08E4, _t08E5, _t08E6, _t08E7];
    real _t08E9 = 0.971445146547e-16;
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    real _t08EC = 0.1e1;
    vec4 _t08ED = [_t08E9, _t08EA, _t08EB, _t08EC];
    tensor[4,4] _t08EE = [_t08DE, _t08E3, _t08E8, _t08ED];
    real _t08EF = 0.57735026919e0;
    real _t08F0 = 0.57735026919e0;
    real _t08F1 = 0.57735026919e0;
    real _t08F2 = -0.57735026919e0;
    vec4 _t08F3 = [_t08EF, _t08F0, _t08F1, _t08F2];
    real _t08F4 = -0.333333333333e0;
    real _t08F5 = 0.666666666667e0;
    real _t08F6 = -0.333333333333e0;
    real _t08F7 = 0.333333333333e0;
    vec4 _t08F8 = [_t08F4, _t08F5, _t08F6, _t08F7];
    real _t08F9 = -0.333333333333e0;
    real _t08FA = -0.333333333333e0;
    real _t08FB = 0.666666666667e0;
    real _t08FC = 0.333333333333e0;
    vec4 _t08FD = [_t08F9, _t08FA, _t08FB, _t08FC];
    real _t08FE = 0.971445146547e-16;
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    real _t0901 = 0.1e1;
    vec4 _t0902 = [_t08FE, _t08FF, _t0900, _t0901];
    tensor[4,4] _t0903 = [_t08F3, _t08F8, _t08FD, _t0902];
    real _t0904 = -0.333333333333e0;
    real _t0905 = 0.666666666667e0;
    real _t0906 = -0.333333333333e0;
    real _t0907 = 0.333333333333e0;
    vec4 _t0908 = [_t0904, _t0905, _t0906, _t0907];
    real _t0909 = -0.57735026919e0;
    real _t090A = -0.57735026919e0;
    real _t090B = -0.57735026919e0;
    real _t090C = 0.57735026919e0;
    vec4 _t090D = [_t0909, _t090A, _t090B, _t090C];
    real _t090E = -0.333333333333e0;
    real _t090F = -0.333333333333e0;
    real _t0910 = 0.666666666667e0;
    real _t0911 = 0.333333333333e0;
    vec4 _t0912 = [_t090E, _t090F, _t0910, _t0911];
    real _t0913 = 0.971445146547e-16;
    real _t0914 = 0.e0;
    real _t0915 = 0.e0;
    real _t0916 = 0.1e1;
    vec4 _t0917 = [_t0913, _t0914, _t0915, _t0916];
    tensor[4,4] _t0918 = [_t0908, _t090D, _t0912, _t0917];
    real _t0919 = -0.333333333333e0;
    real _t091A = 0.666666666667e0;
    real _t091B = -0.333333333333e0;
    real _t091C = 0.333333333333e0;
    vec4 _t091D = [_t0919, _t091A, _t091B, _t091C];
    real _t091E = -0.333333333333e0;
    real _t091F = -0.333333333333e0;
    real _t0920 = 0.666666666667e0;
    real _t0921 = 0.333333333333e0;
    vec4 _t0922 = [_t091E, _t091F, _t0920, _t0921];
    real _t0923 = 0.57735026919e0;
    real _t0924 = 0.57735026919e0;
    real _t0925 = 0.57735026919e0;
    real _t0926 = -0.57735026919e0;
    vec4 _t0927 = [_t0923, _t0924, _t0925, _t0926];
    real _t0928 = 0.971445146547e-16;
    real _t0929 = 0.e0;
    real _t092A = 0.e0;
    real _t092B = 0.1e1;
    vec4 _t092C = [_t0928, _t0929, _t092A, _t092B];
    tensor[4,4] _t092D = [_t091D, _t0922, _t0927, _t092C];
    tensor[4,4][4] _t092E = {_t08EE, _t0903, _t0918, _t092D};
    real _t092F = 0.57735026919e0;
    real _t0930 = -0.1e1;
    real _t0931 = -0.1e1;
    real _t0932 = 0.1e1;
    vec4 _t0933 = [_t092F, _t0930, _t0931, _t0932];
    real _t0934 = 0.57735026919e0;
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    real _t0937 = 0.e0;
    vec4 _t0938 = [_t0934, _t0935, _t0936, _t0937];
    real _t0939 = 0.57735026919e0;
    real _t093A = 0.e0;
    real _t093B = 0.1e1;
    real _t093C = 0.e0;
    vec4 _t093D = [_t0939, _t093A, _t093B, _t093C];
    real _t093E = 0.e0;
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    real _t0941 = 0.1e1;
    vec4 _t0942 = [_t093E, _t093F, _t0940, _t0941];
    tensor[4,4] _t0943 = [_t0933, _t0938, _t093D, _t0942];
    real _t0944 = 0.1e1;
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    real _t0947 = 0.e0;
    vec4 _t0948 = [_t0944, _t0945, _t0946, _t0947];
    real _t0949 = 0.e0;
    real _t094A = 0.1e1;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    vec4 _t094D = [_t0949, _t094A, _t094B, _t094C];
    real _t094E = 0.e0;
    real _t094F = 0.e0;
    real _t0950 = 0.1e1;
    real _t0951 = 0.e0;
    vec4 _t0952 = [_t094E, _t094F, _t0950, _t0951];
    real _t0953 = 0.e0;
    real _t0954 = 0.e0;
    real _t0955 = 0.e0;
    real _t0956 = 0.1e1;
    vec4 _t0957 = [_t0953, _t0954, _t0955, _t0956];
    tensor[4,4] _t0958 = [_t0948, _t094D, _t0952, _t0957];
    real _t0959 = 0.e0;
    real _t095A = 0.1e1;
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    vec4 _t095D = [_t0959, _t095A, _t095B, _t095C];
    real _t095E = -0.1e1;
    real _t095F = 0.e0;
    real _t0960 = 0.e0;
    real _t0961 = 0.e0;
    vec4 _t0962 = [_t095E, _t095F, _t0960, _t0961];
    real _t0963 = 0.e0;
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    real _t0966 = 0.e0;
    vec4 _t0967 = [_t0963, _t0964, _t0965, _t0966];
    real _t0968 = 0.e0;
    real _t0969 = 0.e0;
    real _t096A = 0.e0;
    real _t096B = 0.1e1;
    vec4 _t096C = [_t0968, _t0969, _t096A, _t096B];
    tensor[4,4] _t096D = [_t095D, _t0962, _t0967, _t096C];
    real _t096E = 0.e0;
    real _t096F = 0.1e1;
    real _t0970 = 0.e0;
    real _t0971 = 0.e0;
    vec4 _t0972 = [_t096E, _t096F, _t0970, _t0971];
    real _t0973 = 0.e0;
    real _t0974 = 0.e0;
    real _t0975 = 0.1e1;
    real _t0976 = 0.e0;
    vec4 _t0977 = [_t0973, _t0974, _t0975, _t0976];
    real _t0978 = 0.1e1;
    real _t0979 = 0.e0;
    real _t097A = 0.e0;
    real _t097B = 0.e0;
    vec4 _t097C = [_t0978, _t0979, _t097A, _t097B];
    real _t097D = 0.e0;
    real _t097E = 0.e0;
    real _t097F = 0.e0;
    real _t0980 = 0.1e1;
    vec4 _t0981 = [_t097D, _t097E, _t097F, _t0980];
    tensor[4,4] _t0982 = [_t0972, _t0977, _t097C, _t0981];
    tensor[4,4][4] _t0983 = {_t0943, _t0958, _t096D, _t0982};
    real _t0984 = -0.1e1;
    real _t0985 = -0.57735026919e0;
    real _t0986 = -0.1e1;
    real _t0987 = 0.1e1;
    vec4 _t0988 = [_t0984, _t0985, _t0986, _t0987];
    real _t0989 = 0.1e1;
    real _t098A = -0.57735026919e0;
    real _t098B = 0.e0;
    real _t098C = 0.e0;
    vec4 _t098D = [_t0989, _t098A, _t098B, _t098C];
    real _t098E = 0.e0;
    real _t098F = -0.57735026919e0;
    real _t0990 = 0.1e1;
    real _t0991 = 0.e0;
    vec4 _t0992 = [_t098E, _t098F, _t0990, _t0991];
    real _t0993 = 0.e0;
    real _t0994 = 0.e0;
    real _t0995 = 0.e0;
    real _t0996 = 0.1e1;
    vec4 _t0997 = [_t0993, _t0994, _t0995, _t0996];
    tensor[4,4] _t0998 = [_t0988, _t098D, _t0992, _t0997];
    real _t0999 = 0.e0;
    real _t099A = -0.1e1;
    real _t099B = 0.e0;
    real _t099C = 0.e0;
    vec4 _t099D = [_t0999, _t099A, _t099B, _t099C];
    real _t099E = 0.1e1;
    real _t099F = 0.e0;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    vec4 _t09A2 = [_t099E, _t099F, _t09A0, _t09A1];
    real _t09A3 = 0.e0;
    real _t09A4 = 0.e0;
    real _t09A5 = 0.1e1;
    real _t09A6 = 0.e0;
    vec4 _t09A7 = [_t09A3, _t09A4, _t09A5, _t09A6];
    real _t09A8 = 0.e0;
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    real _t09AB = 0.1e1;
    vec4 _t09AC = [_t09A8, _t09A9, _t09AA, _t09AB];
    tensor[4,4] _t09AD = [_t099D, _t09A2, _t09A7, _t09AC];
    real _t09AE = 0.1e1;
    real _t09AF = 0.e0;
    real _t09B0 = 0.e0;
    real _t09B1 = 0.e0;
    vec4 _t09B2 = [_t09AE, _t09AF, _t09B0, _t09B1];
    real _t09B3 = 0.e0;
    real _t09B4 = 0.1e1;
    real _t09B5 = 0.e0;
    real _t09B6 = 0.e0;
    vec4 _t09B7 = [_t09B3, _t09B4, _t09B5, _t09B6];
    real _t09B8 = 0.e0;
    real _t09B9 = 0.e0;
    real _t09BA = 0.1e1;
    real _t09BB = 0.e0;
    vec4 _t09BC = [_t09B8, _t09B9, _t09BA, _t09BB];
    real _t09BD = 0.e0;
    real _t09BE = 0.e0;
    real _t09BF = 0.e0;
    real _t09C0 = 0.1e1;
    vec4 _t09C1 = [_t09BD, _t09BE, _t09BF, _t09C0];
    tensor[4,4] _t09C2 = [_t09B2, _t09B7, _t09BC, _t09C1];
    real _t09C3 = 0.1e1;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.e0;
    real _t09C6 = 0.e0;
    vec4 _t09C7 = [_t09C3, _t09C4, _t09C5, _t09C6];
    real _t09C8 = 0.e0;
    real _t09C9 = 0.e0;
    real _t09CA = 0.1e1;
    real _t09CB = 0.e0;
    vec4 _t09CC = [_t09C8, _t09C9, _t09CA, _t09CB];
    real _t09CD = 0.e0;
    real _t09CE = -0.1e1;
    real _t09CF = 0.e0;
    real _t09D0 = 0.e0;
    vec4 _t09D1 = [_t09CD, _t09CE, _t09CF, _t09D0];
    real _t09D2 = 0.e0;
    real _t09D3 = 0.e0;
    real _t09D4 = 0.e0;
    real _t09D5 = 0.1e1;
    vec4 _t09D6 = [_t09D2, _t09D3, _t09D4, _t09D5];
    tensor[4,4] _t09D7 = [_t09C7, _t09CC, _t09D1, _t09D6];
    tensor[4,4][4] _t09D8 = {_t0998, _t09AD, _t09C2, _t09D7};
    real _t09D9 = -0.1e1;
    real _t09DA = -0.1e1;
    real _t09DB = 0.57735026919e0;
    real _t09DC = 0.1e1;
    vec4 _t09DD = [_t09D9, _t09DA, _t09DB, _t09DC];
    real _t09DE = 0.1e1;
    real _t09DF = 0.e0;
    real _t09E0 = 0.57735026919e0;
    real _t09E1 = 0.e0;
    vec4 _t09E2 = [_t09DE, _t09DF, _t09E0, _t09E1];
    real _t09E3 = 0.e0;
    real _t09E4 = 0.1e1;
    real _t09E5 = 0.57735026919e0;
    real _t09E6 = 0.e0;
    vec4 _t09E7 = [_t09E3, _t09E4, _t09E5, _t09E6];
    real _t09E8 = 0.e0;
    real _t09E9 = 0.e0;
    real _t09EA = 0.e0;
    real _t09EB = 0.1e1;
    vec4 _t09EC = [_t09E8, _t09E9, _t09EA, _t09EB];
    tensor[4,4] _t09ED = [_t09DD, _t09E2, _t09E7, _t09EC];
    real _t09EE = 0.e0;
    real _t09EF = 0.e0;
    real _t09F0 = 0.1e1;
    real _t09F1 = 0.e0;
    vec4 _t09F2 = [_t09EE, _t09EF, _t09F0, _t09F1];
    real _t09F3 = 0.1e1;
    real _t09F4 = 0.e0;
    real _t09F5 = 0.e0;
    real _t09F6 = 0.e0;
    vec4 _t09F7 = [_t09F3, _t09F4, _t09F5, _t09F6];
    real _t09F8 = 0.e0;
    real _t09F9 = 0.1e1;
    real _t09FA = 0.e0;
    real _t09FB = 0.e0;
    vec4 _t09FC = [_t09F8, _t09F9, _t09FA, _t09FB];
    real _t09FD = 0.e0;
    real _t09FE = 0.e0;
    real _t09FF = 0.e0;
    real _t0A00 = 0.1e1;
    vec4 _t0A01 = [_t09FD, _t09FE, _t09FF, _t0A00];
    tensor[4,4] _t0A02 = [_t09F2, _t09F7, _t09FC, _t0A01];
    real _t0A03 = 0.1e1;
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    real _t0A06 = 0.e0;
    vec4 _t0A07 = [_t0A03, _t0A04, _t0A05, _t0A06];
    real _t0A08 = 0.e0;
    real _t0A09 = 0.e0;
    real _t0A0A = -0.1e1;
    real _t0A0B = 0.e0;
    vec4 _t0A0C = [_t0A08, _t0A09, _t0A0A, _t0A0B];
    real _t0A0D = 0.e0;
    real _t0A0E = 0.1e1;
    real _t0A0F = 0.e0;
    real _t0A10 = 0.e0;
    vec4 _t0A11 = [_t0A0D, _t0A0E, _t0A0F, _t0A10];
    real _t0A12 = 0.e0;
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    real _t0A15 = 0.1e1;
    vec4 _t0A16 = [_t0A12, _t0A13, _t0A14, _t0A15];
    tensor[4,4] _t0A17 = [_t0A07, _t0A0C, _t0A11, _t0A16];
    real _t0A18 = 0.1e1;
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    real _t0A1B = 0.e0;
    vec4 _t0A1C = [_t0A18, _t0A19, _t0A1A, _t0A1B];
    real _t0A1D = 0.e0;
    real _t0A1E = 0.1e1;
    real _t0A1F = 0.e0;
    real _t0A20 = 0.e0;
    vec4 _t0A21 = [_t0A1D, _t0A1E, _t0A1F, _t0A20];
    real _t0A22 = 0.e0;
    real _t0A23 = 0.e0;
    real _t0A24 = 0.1e1;
    real _t0A25 = 0.e0;
    vec4 _t0A26 = [_t0A22, _t0A23, _t0A24, _t0A25];
    real _t0A27 = 0.e0;
    real _t0A28 = 0.e0;
    real _t0A29 = 0.e0;
    real _t0A2A = 0.1e1;
    vec4 _t0A2B = [_t0A27, _t0A28, _t0A29, _t0A2A];
    tensor[4,4] _t0A2C = [_t0A1C, _t0A21, _t0A26, _t0A2B];
    tensor[4,4][4] _t0A2D = {_t09ED, _t0A02, _t0A17, _t0A2C};
    tensor[4,4][4][4] _t0A2E = {_t092E, _t0983, _t09D8, _t0A2D};
    real _t0A2F = time0486[1];
    int _t0A30 = prim $r2i01B7 (_t0A2F);
    tensor[4,4][4] _t0A31 = prim $sub01C0<tensor[4,4][4]; %4> (_t0A2E, _t0A30);
    real _t0A32 = time0486[1];
    int _t0A33 = prim $r2i01B7 (_t0A32);
    int[2] _t0A34 = func nextCell4048A (_t0A33, cellId0483, mesh0482);
    int _t0A35 = 1;
    int _t0A36 = prim $sub01C0<int; %2> (_t0A34, _t0A35);
    tensor[4,4] _t0A37 = prim $sub01C0<tensor[4,4]; %4> (_t0A31, _t0A36);
    real _t0A38 = time0486[0];
    vec3 _t0A39 = prim *0036<$[3]> (_t0A38, dPos0485);
    vec3 _t0A3A = prim +0017<$[3]> (_t0A39, refPos0484);
    real _t0A3B = _t0A3A[0];
    real _t0A3C = time0486[0];
    vec3 _t0A3D = prim *0036<$[3]> (_t0A3C, dPos0485);
    vec3 _t0A3E = prim +0017<$[3]> (_t0A3D, refPos0484);
    real _t0A3F = _t0A3E[1];
    real _t0A40 = time0486[0];
    vec3 _t0A41 = prim *0036<$[3]> (_t0A40, dPos0485);
    vec3 _t0A42 = prim +0017<$[3]> (_t0A41, refPos0484);
    real _t0A43 = _t0A42[2];
    real _t0A44 = 0.1e1;
    vec4 _t0A45 = [_t0A3B, _t0A3F, _t0A43, _t0A44];
    vec4 _t0A46 = prim •00CE<$[4,4]; $[4]; $[4]> (_t0A37, _t0A45);
    real _t0A47 = _t0A46[2];
    vec3 _t0A48 = [_t076B, _t08D9, _t0A47];
    real _t0A49 = time0486[1];
    int _t0A4A = prim $r2i01B7 (_t0A49);
    int[2] _t0A4B = func nextCell4048A (_t0A4A, cellId0483, mesh0482);
    int _t0A4C = 1;
    int _t0A4D = prim $sub01C0<int; %2> (_t0A4B, _t0A4C);
    Femdata: MeshPos _t0A4E = extractFemItemN((mesh0482, _t05FD, _t0A48, _t0A4D),RefBuild(Mesh),);
    return _t0A4E;
  } else {
    real _t0A4F = time0486[0];
    vec3 _t0A50 = prim *0036<$[3]> (_t0A4F, dPos0485);
    vec3 _t0A51 = prim +0017<$[3]> (_t0A50, refPos0484);
    Femdata: MeshPos _t0A52 = extractFemItemN((mesh0482, _t0A51),InvalidBuildBoundary(MeshPos),);
    return _t0A52;
  }
}
function int[2]#8 nextCell4048A (int faceIdx0A53, int cell0A54, Femdata: Mesh mesh0A55)
{
  int _t0A56 = 8;
  int _t0A57 = prim *0033 (cell0A54, _t0A56);
  int _t0A58 = 2;
  int _t0A59 = prim *0033 (faceIdx0A53, _t0A58);
  int _t0A5A = prim +0015 (_t0A57, _t0A59);
  int[2] _t0A5B = extractFemItemN((mesh0A55, _t0A5A),CellFaceCell(Mesh),);
  return _t0A5B;
}
function vec2#0 _enter0A5C (vec3 refPos0A5D, vec3 dPos0A5E)
{
  real time0A5F = +inf;
  int face0A60 = -1;
  real faceTime0A61 = -inf;
  real _t0A62 = 0.57735026919e0;
  real _t0A63 = 0.57735026919e0;
  real _t0A64 = 0.57735026919e0;
  real _t0A65 = 0.57735026919e0;
  vec3 _t0A66 = [_t0A63, _t0A64, _t0A65];
  real _t0A67 = prim •00CE<$[3]; $[3]; $[]> (_t0A66, refPos0A5D);
  real _t0A68 = prim -0026<$[]> (_t0A62, _t0A67);
  real _t0A69 = 0.57735026919e0;
  real _t0A6A = 0.57735026919e0;
  real _t0A6B = 0.57735026919e0;
  vec3 _t0A6C = [_t0A69, _t0A6A, _t0A6B];
  real _t0A6D = prim •00CE<$[3]; $[3]; $[]> (_t0A6C, dPos0A5E);
  real _t0A6E = prim /0055 (_t0A68, _t0A6D);
  real _t0A6F = -0.1e-15;
  bool _t0A70 = prim >=007E (_t0A6E, _t0A6F);
  real _t0A71 = 0.57735026919e0;
  real _t0A72 = 0.57735026919e0;
  real _t0A73 = 0.57735026919e0;
  real _t0A74 = 0.57735026919e0;
  vec3 _t0A75 = [_t0A72, _t0A73, _t0A74];
  real _t0A76 = prim •00CE<$[3]; $[3]; $[]> (_t0A75, refPos0A5D);
  real _t0A77 = prim -0026<$[]> (_t0A71, _t0A76);
  real _t0A78 = 0.57735026919e0;
  real _t0A79 = 0.57735026919e0;
  real _t0A7A = 0.57735026919e0;
  vec3 _t0A7B = [_t0A78, _t0A79, _t0A7A];
  real _t0A7C = prim •00CE<$[3]; $[3]; $[]> (_t0A7B, dPos0A5E);
  real _t0A7D = prim /0055 (_t0A77, _t0A7C);
  bool _t0A7E = prim >0080 (time0A5F, _t0A7D);
  real _t0A7F = 0.57735026919e0;
  real _t0A80 = 0.57735026919e0;
  real _t0A81 = 0.57735026919e0;
  vec3 _t0A82 = [_t0A7F, _t0A80, _t0A81];
  real _t0A83 = prim •00CE<$[3]; $[3]; $[]> (_t0A82, dPos0A5E);
  real _t0A84 = prim |()|00B5<$[]> (_t0A83);
  real _t0A85 = 0.1e-20;
  bool _t0A86 = prim >=007E (_t0A84, _t0A85);
  bool _t0A87 = prim $and01C4 (_t0A7E, _t0A86);
  bool _t0A88 = prim $and01C4 (_t0A70, _t0A87);
  if _t0A88 {
    real _t0A89 = 0.1e1;
    real _t0A8A = 0.1e-8;
    real _t0A8B = prim +0017<$[]> (_t0A89, _t0A8A);
    real _t0A8C = 0.1e1;
    real _t0A8D = 0.1e1;
    real _t0A8E = 0.1e1;
    vec3 _t0A8F = [_t0A8C, _t0A8D, _t0A8E];
    real _t0A90 = 0.57735026919e0;
    real _t0A91 = 0.57735026919e0;
    real _t0A92 = 0.57735026919e0;
    real _t0A93 = 0.57735026919e0;
    vec3 _t0A94 = [_t0A91, _t0A92, _t0A93];
    real _t0A95 = prim •00CE<$[3]; $[3]; $[]> (_t0A94, refPos0A5D);
    real _t0A96 = prim -0026<$[]> (_t0A90, _t0A95);
    real _t0A97 = 0.57735026919e0;
    real _t0A98 = 0.57735026919e0;
    real _t0A99 = 0.57735026919e0;
    vec3 _t0A9A = [_t0A97, _t0A98, _t0A99];
    real _t0A9B = prim •00CE<$[3]; $[3]; $[]> (_t0A9A, dPos0A5E);
    real _t0A9C = prim /0055 (_t0A96, _t0A9B);
    vec3 _t0A9D = prim *0038<$[3]> (dPos0A5E, _t0A9C);
    vec3 _t0A9E = prim +0017<$[3]> (refPos0A5D, _t0A9D);
    real _t0A9F = prim •00CE<$[3]; $[3]; $[]> (_t0A8F, _t0A9E);
    bool _t0AA0 = prim >0080 (_t0A8B, _t0A9F);
    real _t0AA1 = 0.1e-8;
    real _t0AA2 = 0.1e-8;
    real _t0AA3 = 0.1e-8;
    vec3 _t0AA4 = [_t0AA1, _t0AA2, _t0AA3];
    real _t0AA5 = 0.57735026919e0;
    real _t0AA6 = 0.57735026919e0;
    real _t0AA7 = 0.57735026919e0;
    real _t0AA8 = 0.57735026919e0;
    vec3 _t0AA9 = [_t0AA6, _t0AA7, _t0AA8];
    real _t0AAA = prim •00CE<$[3]; $[3]; $[]> (_t0AA9, refPos0A5D);
    real _t0AAB = prim -0026<$[]> (_t0AA5, _t0AAA);
    real _t0AAC = 0.57735026919e0;
    real _t0AAD = 0.57735026919e0;
    real _t0AAE = 0.57735026919e0;
    vec3 _t0AAF = [_t0AAC, _t0AAD, _t0AAE];
    real _t0AB0 = prim •00CE<$[3]; $[3]; $[]> (_t0AAF, dPos0A5E);
    real _t0AB1 = prim /0055 (_t0AAB, _t0AB0);
    vec3 _t0AB2 = prim *0038<$[3]> (dPos0A5E, _t0AB1);
    vec3 _t0AB3 = prim +0017<$[3]> (refPos0A5D, _t0AB2);
    vec3 _t0AB4 = prim +0017<$[3]> (_t0AA4, _t0AB3);
    real _t0AB5 = _t0AB4[0];
    real _t0AB6 = -0.e0;
    bool _t0AB7 = prim >0080 (_t0AB5, _t0AB6);
    real _t0AB8 = 0.1e-8;
    real _t0AB9 = 0.1e-8;
    real _t0ABA = 0.1e-8;
    vec3 _t0ABB = [_t0AB8, _t0AB9, _t0ABA];
    real _t0ABC = 0.57735026919e0;
    real _t0ABD = 0.57735026919e0;
    real _t0ABE = 0.57735026919e0;
    real _t0ABF = 0.57735026919e0;
    vec3 _t0AC0 = [_t0ABD, _t0ABE, _t0ABF];
    real _t0AC1 = prim •00CE<$[3]; $[3]; $[]> (_t0AC0, refPos0A5D);
    real _t0AC2 = prim -0026<$[]> (_t0ABC, _t0AC1);
    real _t0AC3 = 0.57735026919e0;
    real _t0AC4 = 0.57735026919e0;
    real _t0AC5 = 0.57735026919e0;
    vec3 _t0AC6 = [_t0AC3, _t0AC4, _t0AC5];
    real _t0AC7 = prim •00CE<$[3]; $[3]; $[]> (_t0AC6, dPos0A5E);
    real _t0AC8 = prim /0055 (_t0AC2, _t0AC7);
    vec3 _t0AC9 = prim *0038<$[3]> (dPos0A5E, _t0AC8);
    vec3 _t0ACA = prim +0017<$[3]> (refPos0A5D, _t0AC9);
    vec3 _t0ACB = prim +0017<$[3]> (_t0ABB, _t0ACA);
    real _t0ACC = _t0ACB[1];
    real _t0ACD = -0.e0;
    bool _t0ACE = prim >0080 (_t0ACC, _t0ACD);
    real _t0ACF = 0.1e-8;
    real _t0AD0 = 0.1e-8;
    real _t0AD1 = 0.1e-8;
    vec3 _t0AD2 = [_t0ACF, _t0AD0, _t0AD1];
    real _t0AD3 = 0.57735026919e0;
    real _t0AD4 = 0.57735026919e0;
    real _t0AD5 = 0.57735026919e0;
    real _t0AD6 = 0.57735026919e0;
    vec3 _t0AD7 = [_t0AD4, _t0AD5, _t0AD6];
    real _t0AD8 = prim •00CE<$[3]; $[3]; $[]> (_t0AD7, refPos0A5D);
    real _t0AD9 = prim -0026<$[]> (_t0AD3, _t0AD8);
    real _t0ADA = 0.57735026919e0;
    real _t0ADB = 0.57735026919e0;
    real _t0ADC = 0.57735026919e0;
    vec3 _t0ADD = [_t0ADA, _t0ADB, _t0ADC];
    real _t0ADE = prim •00CE<$[3]; $[3]; $[]> (_t0ADD, dPos0A5E);
    real _t0ADF = prim /0055 (_t0AD9, _t0ADE);
    vec3 _t0AE0 = prim *0038<$[3]> (dPos0A5E, _t0ADF);
    vec3 _t0AE1 = prim +0017<$[3]> (refPos0A5D, _t0AE0);
    vec3 _t0AE2 = prim +0017<$[3]> (_t0AD2, _t0AE1);
    real _t0AE3 = _t0AE2[2];
    real _t0AE4 = -0.e0;
    bool _t0AE5 = prim >0080 (_t0AE3, _t0AE4);
    bool _t0AE6 = prim $and01C4 (_t0ACE, _t0AE5);
    bool _t0AE7 = prim $and01C4 (_t0AB7, _t0AE6);
    bool _t0AE8 = prim $and01C4 (_t0AA0, _t0AE7);
    if _t0AE8 {
      real _t0AE9 = 0.57735026919e0;
      real _t0AEA = 0.57735026919e0;
      real _t0AEB = 0.57735026919e0;
      real _t0AEC = 0.57735026919e0;
      vec3 _t0AED = [_t0AEA, _t0AEB, _t0AEC];
      real _t0AEE = prim •00CE<$[3]; $[3]; $[]> (_t0AED, refPos0A5D);
      real _t0AEF = prim -0026<$[]> (_t0AE9, _t0AEE);
      real _t0AF0 = 0.57735026919e0;
      real _t0AF1 = 0.57735026919e0;
      real _t0AF2 = 0.57735026919e0;
      vec3 _t0AF3 = [_t0AF0, _t0AF1, _t0AF2];
      real _t0AF4 = prim •00CE<$[3]; $[3]; $[]> (_t0AF3, dPos0A5E);
      time0A5F = prim /0055 (_t0AEF, _t0AF4);
      face0A60 = 0;
    }
  }
  real _t0AF5 = 0.e0;
  real _t0AF6 = 0.1e1;
  real _t0AF7 = 0.e0;
  real _t0AF8 = 0.e0;
  vec3 _t0AF9 = [_t0AF6, _t0AF7, _t0AF8];
  real _t0AFA = prim •00CE<$[3]; $[3]; $[]> (_t0AF9, refPos0A5D);
  real _t0AFB = prim -0026<$[]> (_t0AF5, _t0AFA);
  real _t0AFC = 0.1e1;
  real _t0AFD = 0.e0;
  real _t0AFE = 0.e0;
  vec3 _t0AFF = [_t0AFC, _t0AFD, _t0AFE];
  real _t0B00 = prim •00CE<$[3]; $[3]; $[]> (_t0AFF, dPos0A5E);
  real _t0B01 = prim /0055 (_t0AFB, _t0B00);
  real _t0B02 = -0.1e-15;
  bool _t0B03 = prim >=007E (_t0B01, _t0B02);
  real _t0B04 = 0.e0;
  real _t0B05 = 0.1e1;
  real _t0B06 = 0.e0;
  real _t0B07 = 0.e0;
  vec3 _t0B08 = [_t0B05, _t0B06, _t0B07];
  real _t0B09 = prim •00CE<$[3]; $[3]; $[]> (_t0B08, refPos0A5D);
  real _t0B0A = prim -0026<$[]> (_t0B04, _t0B09);
  real _t0B0B = 0.1e1;
  real _t0B0C = 0.e0;
  real _t0B0D = 0.e0;
  vec3 _t0B0E = [_t0B0B, _t0B0C, _t0B0D];
  real _t0B0F = prim •00CE<$[3]; $[3]; $[]> (_t0B0E, dPos0A5E);
  real _t0B10 = prim /0055 (_t0B0A, _t0B0F);
  bool _t0B11 = prim >0080 (time0A5F, _t0B10);
  real _t0B12 = 0.1e1;
  real _t0B13 = 0.e0;
  real _t0B14 = 0.e0;
  vec3 _t0B15 = [_t0B12, _t0B13, _t0B14];
  real _t0B16 = prim •00CE<$[3]; $[3]; $[]> (_t0B15, dPos0A5E);
  real _t0B17 = prim |()|00B5<$[]> (_t0B16);
  real _t0B18 = 0.1e-20;
  bool _t0B19 = prim >=007E (_t0B17, _t0B18);
  bool _t0B1A = prim $and01C4 (_t0B11, _t0B19);
  bool _t0B1B = prim $and01C4 (_t0B03, _t0B1A);
  if _t0B1B {
    real _t0B1C = 0.1e1;
    real _t0B1D = 0.1e-8;
    real _t0B1E = prim +0017<$[]> (_t0B1C, _t0B1D);
    real _t0B1F = 0.1e1;
    real _t0B20 = 0.1e1;
    real _t0B21 = 0.1e1;
    vec3 _t0B22 = [_t0B1F, _t0B20, _t0B21];
    real _t0B23 = 0.e0;
    real _t0B24 = 0.1e1;
    real _t0B25 = 0.e0;
    real _t0B26 = 0.e0;
    vec3 _t0B27 = [_t0B24, _t0B25, _t0B26];
    real _t0B28 = prim •00CE<$[3]; $[3]; $[]> (_t0B27, refPos0A5D);
    real _t0B29 = prim -0026<$[]> (_t0B23, _t0B28);
    real _t0B2A = 0.1e1;
    real _t0B2B = 0.e0;
    real _t0B2C = 0.e0;
    vec3 _t0B2D = [_t0B2A, _t0B2B, _t0B2C];
    real _t0B2E = prim •00CE<$[3]; $[3]; $[]> (_t0B2D, dPos0A5E);
    real _t0B2F = prim /0055 (_t0B29, _t0B2E);
    vec3 _t0B30 = prim *0038<$[3]> (dPos0A5E, _t0B2F);
    vec3 _t0B31 = prim +0017<$[3]> (refPos0A5D, _t0B30);
    real _t0B32 = prim •00CE<$[3]; $[3]; $[]> (_t0B22, _t0B31);
    bool _t0B33 = prim >0080 (_t0B1E, _t0B32);
    real _t0B34 = 0.1e-8;
    real _t0B35 = 0.1e-8;
    real _t0B36 = 0.1e-8;
    vec3 _t0B37 = [_t0B34, _t0B35, _t0B36];
    real _t0B38 = 0.e0;
    real _t0B39 = 0.1e1;
    real _t0B3A = 0.e0;
    real _t0B3B = 0.e0;
    vec3 _t0B3C = [_t0B39, _t0B3A, _t0B3B];
    real _t0B3D = prim •00CE<$[3]; $[3]; $[]> (_t0B3C, refPos0A5D);
    real _t0B3E = prim -0026<$[]> (_t0B38, _t0B3D);
    real _t0B3F = 0.1e1;
    real _t0B40 = 0.e0;
    real _t0B41 = 0.e0;
    vec3 _t0B42 = [_t0B3F, _t0B40, _t0B41];
    real _t0B43 = prim •00CE<$[3]; $[3]; $[]> (_t0B42, dPos0A5E);
    real _t0B44 = prim /0055 (_t0B3E, _t0B43);
    vec3 _t0B45 = prim *0038<$[3]> (dPos0A5E, _t0B44);
    vec3 _t0B46 = prim +0017<$[3]> (refPos0A5D, _t0B45);
    vec3 _t0B47 = prim +0017<$[3]> (_t0B37, _t0B46);
    real _t0B48 = _t0B47[0];
    real _t0B49 = -0.e0;
    bool _t0B4A = prim >0080 (_t0B48, _t0B49);
    real _t0B4B = 0.1e-8;
    real _t0B4C = 0.1e-8;
    real _t0B4D = 0.1e-8;
    vec3 _t0B4E = [_t0B4B, _t0B4C, _t0B4D];
    real _t0B4F = 0.e0;
    real _t0B50 = 0.1e1;
    real _t0B51 = 0.e0;
    real _t0B52 = 0.e0;
    vec3 _t0B53 = [_t0B50, _t0B51, _t0B52];
    real _t0B54 = prim •00CE<$[3]; $[3]; $[]> (_t0B53, refPos0A5D);
    real _t0B55 = prim -0026<$[]> (_t0B4F, _t0B54);
    real _t0B56 = 0.1e1;
    real _t0B57 = 0.e0;
    real _t0B58 = 0.e0;
    vec3 _t0B59 = [_t0B56, _t0B57, _t0B58];
    real _t0B5A = prim •00CE<$[3]; $[3]; $[]> (_t0B59, dPos0A5E);
    real _t0B5B = prim /0055 (_t0B55, _t0B5A);
    vec3 _t0B5C = prim *0038<$[3]> (dPos0A5E, _t0B5B);
    vec3 _t0B5D = prim +0017<$[3]> (refPos0A5D, _t0B5C);
    vec3 _t0B5E = prim +0017<$[3]> (_t0B4E, _t0B5D);
    real _t0B5F = _t0B5E[1];
    real _t0B60 = -0.e0;
    bool _t0B61 = prim >0080 (_t0B5F, _t0B60);
    real _t0B62 = 0.1e-8;
    real _t0B63 = 0.1e-8;
    real _t0B64 = 0.1e-8;
    vec3 _t0B65 = [_t0B62, _t0B63, _t0B64];
    real _t0B66 = 0.e0;
    real _t0B67 = 0.1e1;
    real _t0B68 = 0.e0;
    real _t0B69 = 0.e0;
    vec3 _t0B6A = [_t0B67, _t0B68, _t0B69];
    real _t0B6B = prim •00CE<$[3]; $[3]; $[]> (_t0B6A, refPos0A5D);
    real _t0B6C = prim -0026<$[]> (_t0B66, _t0B6B);
    real _t0B6D = 0.1e1;
    real _t0B6E = 0.e0;
    real _t0B6F = 0.e0;
    vec3 _t0B70 = [_t0B6D, _t0B6E, _t0B6F];
    real _t0B71 = prim •00CE<$[3]; $[3]; $[]> (_t0B70, dPos0A5E);
    real _t0B72 = prim /0055 (_t0B6C, _t0B71);
    vec3 _t0B73 = prim *0038<$[3]> (dPos0A5E, _t0B72);
    vec3 _t0B74 = prim +0017<$[3]> (refPos0A5D, _t0B73);
    vec3 _t0B75 = prim +0017<$[3]> (_t0B65, _t0B74);
    real _t0B76 = _t0B75[2];
    real _t0B77 = -0.e0;
    bool _t0B78 = prim >0080 (_t0B76, _t0B77);
    bool _t0B79 = prim $and01C4 (_t0B61, _t0B78);
    bool _t0B7A = prim $and01C4 (_t0B4A, _t0B79);
    bool _t0B7B = prim $and01C4 (_t0B33, _t0B7A);
    if _t0B7B {
      real _t0B7C = 0.e0;
      real _t0B7D = 0.1e1;
      real _t0B7E = 0.e0;
      real _t0B7F = 0.e0;
      vec3 _t0B80 = [_t0B7D, _t0B7E, _t0B7F];
      real _t0B81 = prim •00CE<$[3]; $[3]; $[]> (_t0B80, refPos0A5D);
      real _t0B82 = prim -0026<$[]> (_t0B7C, _t0B81);
      real _t0B83 = 0.1e1;
      real _t0B84 = 0.e0;
      real _t0B85 = 0.e0;
      vec3 _t0B86 = [_t0B83, _t0B84, _t0B85];
      real _t0B87 = prim •00CE<$[3]; $[3]; $[]> (_t0B86, dPos0A5E);
      time0A5F = prim /0055 (_t0B82, _t0B87);
      face0A60 = 1;
    }
  }
  real _t0B88 = 0.e0;
  real _t0B89 = 0.e0;
  real _t0B8A = -0.1e1;
  real _t0B8B = 0.e0;
  vec3 _t0B8C = [_t0B89, _t0B8A, _t0B8B];
  real _t0B8D = prim •00CE<$[3]; $[3]; $[]> (_t0B8C, refPos0A5D);
  real _t0B8E = prim -0026<$[]> (_t0B88, _t0B8D);
  real _t0B8F = 0.e0;
  real _t0B90 = -0.1e1;
  real _t0B91 = 0.e0;
  vec3 _t0B92 = [_t0B8F, _t0B90, _t0B91];
  real _t0B93 = prim •00CE<$[3]; $[3]; $[]> (_t0B92, dPos0A5E);
  real _t0B94 = prim /0055 (_t0B8E, _t0B93);
  real _t0B95 = -0.1e-15;
  bool _t0B96 = prim >=007E (_t0B94, _t0B95);
  real _t0B97 = 0.e0;
  real _t0B98 = 0.e0;
  real _t0B99 = -0.1e1;
  real _t0B9A = 0.e0;
  vec3 _t0B9B = [_t0B98, _t0B99, _t0B9A];
  real _t0B9C = prim •00CE<$[3]; $[3]; $[]> (_t0B9B, refPos0A5D);
  real _t0B9D = prim -0026<$[]> (_t0B97, _t0B9C);
  real _t0B9E = 0.e0;
  real _t0B9F = -0.1e1;
  real _t0BA0 = 0.e0;
  vec3 _t0BA1 = [_t0B9E, _t0B9F, _t0BA0];
  real _t0BA2 = prim •00CE<$[3]; $[3]; $[]> (_t0BA1, dPos0A5E);
  real _t0BA3 = prim /0055 (_t0B9D, _t0BA2);
  bool _t0BA4 = prim >0080 (time0A5F, _t0BA3);
  real _t0BA5 = 0.e0;
  real _t0BA6 = -0.1e1;
  real _t0BA7 = 0.e0;
  vec3 _t0BA8 = [_t0BA5, _t0BA6, _t0BA7];
  real _t0BA9 = prim •00CE<$[3]; $[3]; $[]> (_t0BA8, dPos0A5E);
  real _t0BAA = prim |()|00B5<$[]> (_t0BA9);
  real _t0BAB = 0.1e-20;
  bool _t0BAC = prim >=007E (_t0BAA, _t0BAB);
  bool _t0BAD = prim $and01C4 (_t0BA4, _t0BAC);
  bool _t0BAE = prim $and01C4 (_t0B96, _t0BAD);
  if _t0BAE {
    real _t0BAF = 0.1e1;
    real _t0BB0 = 0.1e-8;
    real _t0BB1 = prim +0017<$[]> (_t0BAF, _t0BB0);
    real _t0BB2 = 0.1e1;
    real _t0BB3 = 0.1e1;
    real _t0BB4 = 0.1e1;
    vec3 _t0BB5 = [_t0BB2, _t0BB3, _t0BB4];
    real _t0BB6 = 0.e0;
    real _t0BB7 = 0.e0;
    real _t0BB8 = -0.1e1;
    real _t0BB9 = 0.e0;
    vec3 _t0BBA = [_t0BB7, _t0BB8, _t0BB9];
    real _t0BBB = prim •00CE<$[3]; $[3]; $[]> (_t0BBA, refPos0A5D);
    real _t0BBC = prim -0026<$[]> (_t0BB6, _t0BBB);
    real _t0BBD = 0.e0;
    real _t0BBE = -0.1e1;
    real _t0BBF = 0.e0;
    vec3 _t0BC0 = [_t0BBD, _t0BBE, _t0BBF];
    real _t0BC1 = prim •00CE<$[3]; $[3]; $[]> (_t0BC0, dPos0A5E);
    real _t0BC2 = prim /0055 (_t0BBC, _t0BC1);
    vec3 _t0BC3 = prim *0038<$[3]> (dPos0A5E, _t0BC2);
    vec3 _t0BC4 = prim +0017<$[3]> (refPos0A5D, _t0BC3);
    real _t0BC5 = prim •00CE<$[3]; $[3]; $[]> (_t0BB5, _t0BC4);
    bool _t0BC6 = prim >0080 (_t0BB1, _t0BC5);
    real _t0BC7 = 0.1e-8;
    real _t0BC8 = 0.1e-8;
    real _t0BC9 = 0.1e-8;
    vec3 _t0BCA = [_t0BC7, _t0BC8, _t0BC9];
    real _t0BCB = 0.e0;
    real _t0BCC = 0.e0;
    real _t0BCD = -0.1e1;
    real _t0BCE = 0.e0;
    vec3 _t0BCF = [_t0BCC, _t0BCD, _t0BCE];
    real _t0BD0 = prim •00CE<$[3]; $[3]; $[]> (_t0BCF, refPos0A5D);
    real _t0BD1 = prim -0026<$[]> (_t0BCB, _t0BD0);
    real _t0BD2 = 0.e0;
    real _t0BD3 = -0.1e1;
    real _t0BD4 = 0.e0;
    vec3 _t0BD5 = [_t0BD2, _t0BD3, _t0BD4];
    real _t0BD6 = prim •00CE<$[3]; $[3]; $[]> (_t0BD5, dPos0A5E);
    real _t0BD7 = prim /0055 (_t0BD1, _t0BD6);
    vec3 _t0BD8 = prim *0038<$[3]> (dPos0A5E, _t0BD7);
    vec3 _t0BD9 = prim +0017<$[3]> (refPos0A5D, _t0BD8);
    vec3 _t0BDA = prim +0017<$[3]> (_t0BCA, _t0BD9);
    real _t0BDB = _t0BDA[0];
    real _t0BDC = -0.e0;
    bool _t0BDD = prim >0080 (_t0BDB, _t0BDC);
    real _t0BDE = 0.1e-8;
    real _t0BDF = 0.1e-8;
    real _t0BE0 = 0.1e-8;
    vec3 _t0BE1 = [_t0BDE, _t0BDF, _t0BE0];
    real _t0BE2 = 0.e0;
    real _t0BE3 = 0.e0;
    real _t0BE4 = -0.1e1;
    real _t0BE5 = 0.e0;
    vec3 _t0BE6 = [_t0BE3, _t0BE4, _t0BE5];
    real _t0BE7 = prim •00CE<$[3]; $[3]; $[]> (_t0BE6, refPos0A5D);
    real _t0BE8 = prim -0026<$[]> (_t0BE2, _t0BE7);
    real _t0BE9 = 0.e0;
    real _t0BEA = -0.1e1;
    real _t0BEB = 0.e0;
    vec3 _t0BEC = [_t0BE9, _t0BEA, _t0BEB];
    real _t0BED = prim •00CE<$[3]; $[3]; $[]> (_t0BEC, dPos0A5E);
    real _t0BEE = prim /0055 (_t0BE8, _t0BED);
    vec3 _t0BEF = prim *0038<$[3]> (dPos0A5E, _t0BEE);
    vec3 _t0BF0 = prim +0017<$[3]> (refPos0A5D, _t0BEF);
    vec3 _t0BF1 = prim +0017<$[3]> (_t0BE1, _t0BF0);
    real _t0BF2 = _t0BF1[1];
    real _t0BF3 = -0.e0;
    bool _t0BF4 = prim >0080 (_t0BF2, _t0BF3);
    real _t0BF5 = 0.1e-8;
    real _t0BF6 = 0.1e-8;
    real _t0BF7 = 0.1e-8;
    vec3 _t0BF8 = [_t0BF5, _t0BF6, _t0BF7];
    real _t0BF9 = 0.e0;
    real _t0BFA = 0.e0;
    real _t0BFB = -0.1e1;
    real _t0BFC = 0.e0;
    vec3 _t0BFD = [_t0BFA, _t0BFB, _t0BFC];
    real _t0BFE = prim •00CE<$[3]; $[3]; $[]> (_t0BFD, refPos0A5D);
    real _t0BFF = prim -0026<$[]> (_t0BF9, _t0BFE);
    real _t0C00 = 0.e0;
    real _t0C01 = -0.1e1;
    real _t0C02 = 0.e0;
    vec3 _t0C03 = [_t0C00, _t0C01, _t0C02];
    real _t0C04 = prim •00CE<$[3]; $[3]; $[]> (_t0C03, dPos0A5E);
    real _t0C05 = prim /0055 (_t0BFF, _t0C04);
    vec3 _t0C06 = prim *0038<$[3]> (dPos0A5E, _t0C05);
    vec3 _t0C07 = prim +0017<$[3]> (refPos0A5D, _t0C06);
    vec3 _t0C08 = prim +0017<$[3]> (_t0BF8, _t0C07);
    real _t0C09 = _t0C08[2];
    real _t0C0A = -0.e0;
    bool _t0C0B = prim >0080 (_t0C09, _t0C0A);
    bool _t0C0C = prim $and01C4 (_t0BF4, _t0C0B);
    bool _t0C0D = prim $and01C4 (_t0BDD, _t0C0C);
    bool _t0C0E = prim $and01C4 (_t0BC6, _t0C0D);
    if _t0C0E {
      real _t0C0F = 0.e0;
      real _t0C10 = 0.e0;
      real _t0C11 = -0.1e1;
      real _t0C12 = 0.e0;
      vec3 _t0C13 = [_t0C10, _t0C11, _t0C12];
      real _t0C14 = prim •00CE<$[3]; $[3]; $[]> (_t0C13, refPos0A5D);
      real _t0C15 = prim -0026<$[]> (_t0C0F, _t0C14);
      real _t0C16 = 0.e0;
      real _t0C17 = -0.1e1;
      real _t0C18 = 0.e0;
      vec3 _t0C19 = [_t0C16, _t0C17, _t0C18];
      real _t0C1A = prim •00CE<$[3]; $[3]; $[]> (_t0C19, dPos0A5E);
      time0A5F = prim /0055 (_t0C15, _t0C1A);
      face0A60 = 2;
    }
  }
  real _t0C1B = 0.e0;
  real _t0C1C = 0.e0;
  real _t0C1D = 0.e0;
  real _t0C1E = 0.1e1;
  vec3 _t0C1F = [_t0C1C, _t0C1D, _t0C1E];
  real _t0C20 = prim •00CE<$[3]; $[3]; $[]> (_t0C1F, refPos0A5D);
  real _t0C21 = prim -0026<$[]> (_t0C1B, _t0C20);
  real _t0C22 = 0.e0;
  real _t0C23 = 0.e0;
  real _t0C24 = 0.1e1;
  vec3 _t0C25 = [_t0C22, _t0C23, _t0C24];
  real _t0C26 = prim •00CE<$[3]; $[3]; $[]> (_t0C25, dPos0A5E);
  real _t0C27 = prim /0055 (_t0C21, _t0C26);
  real _t0C28 = -0.1e-15;
  bool _t0C29 = prim >=007E (_t0C27, _t0C28);
  real _t0C2A = 0.e0;
  real _t0C2B = 0.e0;
  real _t0C2C = 0.e0;
  real _t0C2D = 0.1e1;
  vec3 _t0C2E = [_t0C2B, _t0C2C, _t0C2D];
  real _t0C2F = prim •00CE<$[3]; $[3]; $[]> (_t0C2E, refPos0A5D);
  real _t0C30 = prim -0026<$[]> (_t0C2A, _t0C2F);
  real _t0C31 = 0.e0;
  real _t0C32 = 0.e0;
  real _t0C33 = 0.1e1;
  vec3 _t0C34 = [_t0C31, _t0C32, _t0C33];
  real _t0C35 = prim •00CE<$[3]; $[3]; $[]> (_t0C34, dPos0A5E);
  real _t0C36 = prim /0055 (_t0C30, _t0C35);
  bool _t0C37 = prim >0080 (time0A5F, _t0C36);
  real _t0C38 = 0.e0;
  real _t0C39 = 0.e0;
  real _t0C3A = 0.1e1;
  vec3 _t0C3B = [_t0C38, _t0C39, _t0C3A];
  real _t0C3C = prim •00CE<$[3]; $[3]; $[]> (_t0C3B, dPos0A5E);
  real _t0C3D = prim |()|00B5<$[]> (_t0C3C);
  real _t0C3E = 0.1e-20;
  bool _t0C3F = prim >=007E (_t0C3D, _t0C3E);
  bool _t0C40 = prim $and01C4 (_t0C37, _t0C3F);
  bool _t0C41 = prim $and01C4 (_t0C29, _t0C40);
  if _t0C41 {
    real _t0C42 = 0.1e1;
    real _t0C43 = 0.1e-8;
    real _t0C44 = prim +0017<$[]> (_t0C42, _t0C43);
    real _t0C45 = 0.1e1;
    real _t0C46 = 0.1e1;
    real _t0C47 = 0.1e1;
    vec3 _t0C48 = [_t0C45, _t0C46, _t0C47];
    real _t0C49 = 0.e0;
    real _t0C4A = 0.e0;
    real _t0C4B = 0.e0;
    real _t0C4C = 0.1e1;
    vec3 _t0C4D = [_t0C4A, _t0C4B, _t0C4C];
    real _t0C4E = prim •00CE<$[3]; $[3]; $[]> (_t0C4D, refPos0A5D);
    real _t0C4F = prim -0026<$[]> (_t0C49, _t0C4E);
    real _t0C50 = 0.e0;
    real _t0C51 = 0.e0;
    real _t0C52 = 0.1e1;
    vec3 _t0C53 = [_t0C50, _t0C51, _t0C52];
    real _t0C54 = prim •00CE<$[3]; $[3]; $[]> (_t0C53, dPos0A5E);
    real _t0C55 = prim /0055 (_t0C4F, _t0C54);
    vec3 _t0C56 = prim *0038<$[3]> (dPos0A5E, _t0C55);
    vec3 _t0C57 = prim +0017<$[3]> (refPos0A5D, _t0C56);
    real _t0C58 = prim •00CE<$[3]; $[3]; $[]> (_t0C48, _t0C57);
    bool _t0C59 = prim >0080 (_t0C44, _t0C58);
    real _t0C5A = 0.1e-8;
    real _t0C5B = 0.1e-8;
    real _t0C5C = 0.1e-8;
    vec3 _t0C5D = [_t0C5A, _t0C5B, _t0C5C];
    real _t0C5E = 0.e0;
    real _t0C5F = 0.e0;
    real _t0C60 = 0.e0;
    real _t0C61 = 0.1e1;
    vec3 _t0C62 = [_t0C5F, _t0C60, _t0C61];
    real _t0C63 = prim •00CE<$[3]; $[3]; $[]> (_t0C62, refPos0A5D);
    real _t0C64 = prim -0026<$[]> (_t0C5E, _t0C63);
    real _t0C65 = 0.e0;
    real _t0C66 = 0.e0;
    real _t0C67 = 0.1e1;
    vec3 _t0C68 = [_t0C65, _t0C66, _t0C67];
    real _t0C69 = prim •00CE<$[3]; $[3]; $[]> (_t0C68, dPos0A5E);
    real _t0C6A = prim /0055 (_t0C64, _t0C69);
    vec3 _t0C6B = prim *0038<$[3]> (dPos0A5E, _t0C6A);
    vec3 _t0C6C = prim +0017<$[3]> (refPos0A5D, _t0C6B);
    vec3 _t0C6D = prim +0017<$[3]> (_t0C5D, _t0C6C);
    real _t0C6E = _t0C6D[0];
    real _t0C6F = -0.e0;
    bool _t0C70 = prim >0080 (_t0C6E, _t0C6F);
    real _t0C71 = 0.1e-8;
    real _t0C72 = 0.1e-8;
    real _t0C73 = 0.1e-8;
    vec3 _t0C74 = [_t0C71, _t0C72, _t0C73];
    real _t0C75 = 0.e0;
    real _t0C76 = 0.e0;
    real _t0C77 = 0.e0;
    real _t0C78 = 0.1e1;
    vec3 _t0C79 = [_t0C76, _t0C77, _t0C78];
    real _t0C7A = prim •00CE<$[3]; $[3]; $[]> (_t0C79, refPos0A5D);
    real _t0C7B = prim -0026<$[]> (_t0C75, _t0C7A);
    real _t0C7C = 0.e0;
    real _t0C7D = 0.e0;
    real _t0C7E = 0.1e1;
    vec3 _t0C7F = [_t0C7C, _t0C7D, _t0C7E];
    real _t0C80 = prim •00CE<$[3]; $[3]; $[]> (_t0C7F, dPos0A5E);
    real _t0C81 = prim /0055 (_t0C7B, _t0C80);
    vec3 _t0C82 = prim *0038<$[3]> (dPos0A5E, _t0C81);
    vec3 _t0C83 = prim +0017<$[3]> (refPos0A5D, _t0C82);
    vec3 _t0C84 = prim +0017<$[3]> (_t0C74, _t0C83);
    real _t0C85 = _t0C84[1];
    real _t0C86 = -0.e0;
    bool _t0C87 = prim >0080 (_t0C85, _t0C86);
    real _t0C88 = 0.1e-8;
    real _t0C89 = 0.1e-8;
    real _t0C8A = 0.1e-8;
    vec3 _t0C8B = [_t0C88, _t0C89, _t0C8A];
    real _t0C8C = 0.e0;
    real _t0C8D = 0.e0;
    real _t0C8E = 0.e0;
    real _t0C8F = 0.1e1;
    vec3 _t0C90 = [_t0C8D, _t0C8E, _t0C8F];
    real _t0C91 = prim •00CE<$[3]; $[3]; $[]> (_t0C90, refPos0A5D);
    real _t0C92 = prim -0026<$[]> (_t0C8C, _t0C91);
    real _t0C93 = 0.e0;
    real _t0C94 = 0.e0;
    real _t0C95 = 0.1e1;
    vec3 _t0C96 = [_t0C93, _t0C94, _t0C95];
    real _t0C97 = prim •00CE<$[3]; $[3]; $[]> (_t0C96, dPos0A5E);
    real _t0C98 = prim /0055 (_t0C92, _t0C97);
    vec3 _t0C99 = prim *0038<$[3]> (dPos0A5E, _t0C98);
    vec3 _t0C9A = prim +0017<$[3]> (refPos0A5D, _t0C99);
    vec3 _t0C9B = prim +0017<$[3]> (_t0C8B, _t0C9A);
    real _t0C9C = _t0C9B[2];
    real _t0C9D = -0.e0;
    bool _t0C9E = prim >0080 (_t0C9C, _t0C9D);
    bool _t0C9F = prim $and01C4 (_t0C87, _t0C9E);
    bool _t0CA0 = prim $and01C4 (_t0C70, _t0C9F);
    bool _t0CA1 = prim $and01C4 (_t0C59, _t0CA0);
    if _t0CA1 {
      real _t0CA2 = 0.e0;
      real _t0CA3 = 0.e0;
      real _t0CA4 = 0.e0;
      real _t0CA5 = 0.1e1;
      vec3 _t0CA6 = [_t0CA3, _t0CA4, _t0CA5];
      real _t0CA7 = prim •00CE<$[3]; $[3]; $[]> (_t0CA6, refPos0A5D);
      real _t0CA8 = prim -0026<$[]> (_t0CA2, _t0CA7);
      real _t0CA9 = 0.e0;
      real _t0CAA = 0.e0;
      real _t0CAB = 0.1e1;
      vec3 _t0CAC = [_t0CA9, _t0CAA, _t0CAB];
      real _t0CAD = prim •00CE<$[3]; $[3]; $[]> (_t0CAC, dPos0A5E);
      time0A5F = prim /0055 (_t0CA8, _t0CAD);
      face0A60 = 3;
    }
  }
  int _t0CAE = -1;
  bool _t0CAF = prim !=0086 (face0A60, _t0CAE);
  if _t0CAF {
    real _t0CB0 = 0.e0;
    real _t0CB1 = prim max0125 (time0A5F, _t0CB0);
    real _t0CB2 = (real)face0A60;
    vec2 _t0CB3 = [_t0CB1, _t0CB2];
    return _t0CB3;
  } else {
    real _t0CB4 = -0.1e1;
    real _t0CB5 = -0.1e1;
    vec2 _t0CB6 = [_t0CB4, _t0CB5];
    return _t0CB6;
  }
}
function vec2#2 _exit0CB7 (vec3 refPos0A5D, vec3 dPos0A5E, int i0CB8)
{
  real time0CB9 = +inf;
  int face0CBA = -1;
  real faceTime0CBB = -inf;
  real _t0CBC = 0.57735026919e0;
  real _t0CBD = 0.57735026919e0;
  real _t0CBE = 0.57735026919e0;
  real _t0CBF = 0.57735026919e0;
  vec3 _t0CC0 = [_t0CBD, _t0CBE, _t0CBF];
  real _t0CC1 = prim •00CE<$[3]; $[3]; $[]> (_t0CC0, refPos0A5D);
  real _t0CC2 = prim -0026<$[]> (_t0CBC, _t0CC1);
  real _t0CC3 = 0.57735026919e0;
  real _t0CC4 = 0.57735026919e0;
  real _t0CC5 = 0.57735026919e0;
  vec3 _t0CC6 = [_t0CC3, _t0CC4, _t0CC5];
  real _t0CC7 = prim •00CE<$[3]; $[3]; $[]> (_t0CC6, dPos0A5E);
  real _t0CC8 = prim /0055 (_t0CC2, _t0CC7);
  real _t0CC9 = -0.1e-15;
  bool _t0CCA = prim >=007E (_t0CC8, _t0CC9);
  real _t0CCB = 0.57735026919e0;
  real _t0CCC = 0.57735026919e0;
  real _t0CCD = 0.57735026919e0;
  real _t0CCE = 0.57735026919e0;
  vec3 _t0CCF = [_t0CCC, _t0CCD, _t0CCE];
  real _t0CD0 = prim •00CE<$[3]; $[3]; $[]> (_t0CCF, refPos0A5D);
  real _t0CD1 = prim -0026<$[]> (_t0CCB, _t0CD0);
  real _t0CD2 = 0.57735026919e0;
  real _t0CD3 = 0.57735026919e0;
  real _t0CD4 = 0.57735026919e0;
  vec3 _t0CD5 = [_t0CD2, _t0CD3, _t0CD4];
  real _t0CD6 = prim •00CE<$[3]; $[3]; $[]> (_t0CD5, dPos0A5E);
  real _t0CD7 = prim /0055 (_t0CD1, _t0CD6);
  bool _t0CD8 = prim >0080 (time0CB9, _t0CD7);
  real _t0CD9 = 0.57735026919e0;
  real _t0CDA = 0.57735026919e0;
  real _t0CDB = 0.57735026919e0;
  vec3 _t0CDC = [_t0CD9, _t0CDA, _t0CDB];
  real _t0CDD = prim •00CE<$[3]; $[3]; $[]> (_t0CDC, dPos0A5E);
  real _t0CDE = prim |()|00B5<$[]> (_t0CDD);
  real _t0CDF = 0.1e-20;
  bool _t0CE0 = prim >=007E (_t0CDE, _t0CDF);
  bool _t0CE1 = prim $and01C4 (_t0CD8, _t0CE0);
  bool _t0CE2 = prim $and01C4 (_t0CCA, _t0CE1);
  if _t0CE2 {
    int _t0CE3 = 0;
    bool _t0CE4 = prim !=0086 (i0CB8, _t0CE3);
    if _t0CE4 {
      real _t0CE5 = 0.57735026919e0;
      real _t0CE6 = 0.57735026919e0;
      real _t0CE7 = 0.57735026919e0;
      real _t0CE8 = 0.57735026919e0;
      vec3 _t0CE9 = [_t0CE6, _t0CE7, _t0CE8];
      real _t0CEA = prim •00CE<$[3]; $[3]; $[]> (_t0CE9, refPos0A5D);
      real _t0CEB = prim -0026<$[]> (_t0CE5, _t0CEA);
      real _t0CEC = 0.57735026919e0;
      real _t0CED = 0.57735026919e0;
      real _t0CEE = 0.57735026919e0;
      vec3 _t0CEF = [_t0CEC, _t0CED, _t0CEE];
      real _t0CF0 = prim •00CE<$[3]; $[3]; $[]> (_t0CEF, dPos0A5E);
      time0CB9 = prim /0055 (_t0CEB, _t0CF0);
      face0CBA = 0;
    } else {
      real _t0CF1 = 0.57735026919e0;
      real _t0CF2 = 0.57735026919e0;
      real _t0CF3 = 0.57735026919e0;
      real _t0CF4 = 0.57735026919e0;
      vec3 _t0CF5 = [_t0CF2, _t0CF3, _t0CF4];
      real _t0CF6 = prim •00CE<$[3]; $[3]; $[]> (_t0CF5, refPos0A5D);
      real _t0CF7 = prim -0026<$[]> (_t0CF1, _t0CF6);
      real _t0CF8 = 0.57735026919e0;
      real _t0CF9 = 0.57735026919e0;
      real _t0CFA = 0.57735026919e0;
      vec3 _t0CFB = [_t0CF8, _t0CF9, _t0CFA];
      real _t0CFC = prim •00CE<$[3]; $[3]; $[]> (_t0CFB, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0CF7, _t0CFC);
    }
  }
  real _t0CFD = 0.e0;
  real _t0CFE = 0.1e1;
  real _t0CFF = 0.e0;
  real _t0D00 = 0.e0;
  vec3 _t0D01 = [_t0CFE, _t0CFF, _t0D00];
  real _t0D02 = prim •00CE<$[3]; $[3]; $[]> (_t0D01, refPos0A5D);
  real _t0D03 = prim -0026<$[]> (_t0CFD, _t0D02);
  real _t0D04 = 0.1e1;
  real _t0D05 = 0.e0;
  real _t0D06 = 0.e0;
  vec3 _t0D07 = [_t0D04, _t0D05, _t0D06];
  real _t0D08 = prim •00CE<$[3]; $[3]; $[]> (_t0D07, dPos0A5E);
  real _t0D09 = prim /0055 (_t0D03, _t0D08);
  real _t0D0A = -0.1e-15;
  bool _t0D0B = prim >=007E (_t0D09, _t0D0A);
  real _t0D0C = 0.e0;
  real _t0D0D = 0.1e1;
  real _t0D0E = 0.e0;
  real _t0D0F = 0.e0;
  vec3 _t0D10 = [_t0D0D, _t0D0E, _t0D0F];
  real _t0D11 = prim •00CE<$[3]; $[3]; $[]> (_t0D10, refPos0A5D);
  real _t0D12 = prim -0026<$[]> (_t0D0C, _t0D11);
  real _t0D13 = 0.1e1;
  real _t0D14 = 0.e0;
  real _t0D15 = 0.e0;
  vec3 _t0D16 = [_t0D13, _t0D14, _t0D15];
  real _t0D17 = prim •00CE<$[3]; $[3]; $[]> (_t0D16, dPos0A5E);
  real _t0D18 = prim /0055 (_t0D12, _t0D17);
  bool _t0D19 = prim >0080 (time0CB9, _t0D18);
  real _t0D1A = 0.1e1;
  real _t0D1B = 0.e0;
  real _t0D1C = 0.e0;
  vec3 _t0D1D = [_t0D1A, _t0D1B, _t0D1C];
  real _t0D1E = prim •00CE<$[3]; $[3]; $[]> (_t0D1D, dPos0A5E);
  real _t0D1F = prim |()|00B5<$[]> (_t0D1E);
  real _t0D20 = 0.1e-20;
  bool _t0D21 = prim >=007E (_t0D1F, _t0D20);
  bool _t0D22 = prim $and01C4 (_t0D19, _t0D21);
  bool _t0D23 = prim $and01C4 (_t0D0B, _t0D22);
  if _t0D23 {
    int _t0D24 = 1;
    bool _t0D25 = prim !=0086 (i0CB8, _t0D24);
    if _t0D25 {
      real _t0D26 = 0.e0;
      real _t0D27 = 0.1e1;
      real _t0D28 = 0.e0;
      real _t0D29 = 0.e0;
      vec3 _t0D2A = [_t0D27, _t0D28, _t0D29];
      real _t0D2B = prim •00CE<$[3]; $[3]; $[]> (_t0D2A, refPos0A5D);
      real _t0D2C = prim -0026<$[]> (_t0D26, _t0D2B);
      real _t0D2D = 0.1e1;
      real _t0D2E = 0.e0;
      real _t0D2F = 0.e0;
      vec3 _t0D30 = [_t0D2D, _t0D2E, _t0D2F];
      real _t0D31 = prim •00CE<$[3]; $[3]; $[]> (_t0D30, dPos0A5E);
      time0CB9 = prim /0055 (_t0D2C, _t0D31);
      face0CBA = 1;
    } else {
      real _t0D32 = 0.e0;
      real _t0D33 = 0.1e1;
      real _t0D34 = 0.e0;
      real _t0D35 = 0.e0;
      vec3 _t0D36 = [_t0D33, _t0D34, _t0D35];
      real _t0D37 = prim •00CE<$[3]; $[3]; $[]> (_t0D36, refPos0A5D);
      real _t0D38 = prim -0026<$[]> (_t0D32, _t0D37);
      real _t0D39 = 0.1e1;
      real _t0D3A = 0.e0;
      real _t0D3B = 0.e0;
      vec3 _t0D3C = [_t0D39, _t0D3A, _t0D3B];
      real _t0D3D = prim •00CE<$[3]; $[3]; $[]> (_t0D3C, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0D38, _t0D3D);
    }
  }
  real _t0D3E = 0.e0;
  real _t0D3F = 0.e0;
  real _t0D40 = -0.1e1;
  real _t0D41 = 0.e0;
  vec3 _t0D42 = [_t0D3F, _t0D40, _t0D41];
  real _t0D43 = prim •00CE<$[3]; $[3]; $[]> (_t0D42, refPos0A5D);
  real _t0D44 = prim -0026<$[]> (_t0D3E, _t0D43);
  real _t0D45 = 0.e0;
  real _t0D46 = -0.1e1;
  real _t0D47 = 0.e0;
  vec3 _t0D48 = [_t0D45, _t0D46, _t0D47];
  real _t0D49 = prim •00CE<$[3]; $[3]; $[]> (_t0D48, dPos0A5E);
  real _t0D4A = prim /0055 (_t0D44, _t0D49);
  real _t0D4B = -0.1e-15;
  bool _t0D4C = prim >=007E (_t0D4A, _t0D4B);
  real _t0D4D = 0.e0;
  real _t0D4E = 0.e0;
  real _t0D4F = -0.1e1;
  real _t0D50 = 0.e0;
  vec3 _t0D51 = [_t0D4E, _t0D4F, _t0D50];
  real _t0D52 = prim •00CE<$[3]; $[3]; $[]> (_t0D51, refPos0A5D);
  real _t0D53 = prim -0026<$[]> (_t0D4D, _t0D52);
  real _t0D54 = 0.e0;
  real _t0D55 = -0.1e1;
  real _t0D56 = 0.e0;
  vec3 _t0D57 = [_t0D54, _t0D55, _t0D56];
  real _t0D58 = prim •00CE<$[3]; $[3]; $[]> (_t0D57, dPos0A5E);
  real _t0D59 = prim /0055 (_t0D53, _t0D58);
  bool _t0D5A = prim >0080 (time0CB9, _t0D59);
  real _t0D5B = 0.e0;
  real _t0D5C = -0.1e1;
  real _t0D5D = 0.e0;
  vec3 _t0D5E = [_t0D5B, _t0D5C, _t0D5D];
  real _t0D5F = prim •00CE<$[3]; $[3]; $[]> (_t0D5E, dPos0A5E);
  real _t0D60 = prim |()|00B5<$[]> (_t0D5F);
  real _t0D61 = 0.1e-20;
  bool _t0D62 = prim >=007E (_t0D60, _t0D61);
  bool _t0D63 = prim $and01C4 (_t0D5A, _t0D62);
  bool _t0D64 = prim $and01C4 (_t0D4C, _t0D63);
  if _t0D64 {
    int _t0D65 = 2;
    bool _t0D66 = prim !=0086 (i0CB8, _t0D65);
    if _t0D66 {
      real _t0D67 = 0.e0;
      real _t0D68 = 0.e0;
      real _t0D69 = -0.1e1;
      real _t0D6A = 0.e0;
      vec3 _t0D6B = [_t0D68, _t0D69, _t0D6A];
      real _t0D6C = prim •00CE<$[3]; $[3]; $[]> (_t0D6B, refPos0A5D);
      real _t0D6D = prim -0026<$[]> (_t0D67, _t0D6C);
      real _t0D6E = 0.e0;
      real _t0D6F = -0.1e1;
      real _t0D70 = 0.e0;
      vec3 _t0D71 = [_t0D6E, _t0D6F, _t0D70];
      real _t0D72 = prim •00CE<$[3]; $[3]; $[]> (_t0D71, dPos0A5E);
      time0CB9 = prim /0055 (_t0D6D, _t0D72);
      face0CBA = 2;
    } else {
      real _t0D73 = 0.e0;
      real _t0D74 = 0.e0;
      real _t0D75 = -0.1e1;
      real _t0D76 = 0.e0;
      vec3 _t0D77 = [_t0D74, _t0D75, _t0D76];
      real _t0D78 = prim •00CE<$[3]; $[3]; $[]> (_t0D77, refPos0A5D);
      real _t0D79 = prim -0026<$[]> (_t0D73, _t0D78);
      real _t0D7A = 0.e0;
      real _t0D7B = -0.1e1;
      real _t0D7C = 0.e0;
      vec3 _t0D7D = [_t0D7A, _t0D7B, _t0D7C];
      real _t0D7E = prim •00CE<$[3]; $[3]; $[]> (_t0D7D, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0D79, _t0D7E);
    }
  }
  real _t0D7F = 0.e0;
  real _t0D80 = 0.e0;
  real _t0D81 = 0.e0;
  real _t0D82 = 0.1e1;
  vec3 _t0D83 = [_t0D80, _t0D81, _t0D82];
  real _t0D84 = prim •00CE<$[3]; $[3]; $[]> (_t0D83, refPos0A5D);
  real _t0D85 = prim -0026<$[]> (_t0D7F, _t0D84);
  real _t0D86 = 0.e0;
  real _t0D87 = 0.e0;
  real _t0D88 = 0.1e1;
  vec3 _t0D89 = [_t0D86, _t0D87, _t0D88];
  real _t0D8A = prim •00CE<$[3]; $[3]; $[]> (_t0D89, dPos0A5E);
  real _t0D8B = prim /0055 (_t0D85, _t0D8A);
  real _t0D8C = -0.1e-15;
  bool _t0D8D = prim >=007E (_t0D8B, _t0D8C);
  real _t0D8E = 0.e0;
  real _t0D8F = 0.e0;
  real _t0D90 = 0.e0;
  real _t0D91 = 0.1e1;
  vec3 _t0D92 = [_t0D8F, _t0D90, _t0D91];
  real _t0D93 = prim •00CE<$[3]; $[3]; $[]> (_t0D92, refPos0A5D);
  real _t0D94 = prim -0026<$[]> (_t0D8E, _t0D93);
  real _t0D95 = 0.e0;
  real _t0D96 = 0.e0;
  real _t0D97 = 0.1e1;
  vec3 _t0D98 = [_t0D95, _t0D96, _t0D97];
  real _t0D99 = prim •00CE<$[3]; $[3]; $[]> (_t0D98, dPos0A5E);
  real _t0D9A = prim /0055 (_t0D94, _t0D99);
  bool _t0D9B = prim >0080 (time0CB9, _t0D9A);
  real _t0D9C = 0.e0;
  real _t0D9D = 0.e0;
  real _t0D9E = 0.1e1;
  vec3 _t0D9F = [_t0D9C, _t0D9D, _t0D9E];
  real _t0DA0 = prim •00CE<$[3]; $[3]; $[]> (_t0D9F, dPos0A5E);
  real _t0DA1 = prim |()|00B5<$[]> (_t0DA0);
  real _t0DA2 = 0.1e-20;
  bool _t0DA3 = prim >=007E (_t0DA1, _t0DA2);
  bool _t0DA4 = prim $and01C4 (_t0D9B, _t0DA3);
  bool _t0DA5 = prim $and01C4 (_t0D8D, _t0DA4);
  if _t0DA5 {
    int _t0DA6 = 3;
    bool _t0DA7 = prim !=0086 (i0CB8, _t0DA6);
    if _t0DA7 {
      real _t0DA8 = 0.e0;
      real _t0DA9 = 0.e0;
      real _t0DAA = 0.e0;
      real _t0DAB = 0.1e1;
      vec3 _t0DAC = [_t0DA9, _t0DAA, _t0DAB];
      real _t0DAD = prim •00CE<$[3]; $[3]; $[]> (_t0DAC, refPos0A5D);
      real _t0DAE = prim -0026<$[]> (_t0DA8, _t0DAD);
      real _t0DAF = 0.e0;
      real _t0DB0 = 0.e0;
      real _t0DB1 = 0.1e1;
      vec3 _t0DB2 = [_t0DAF, _t0DB0, _t0DB1];
      real _t0DB3 = prim •00CE<$[3]; $[3]; $[]> (_t0DB2, dPos0A5E);
      time0CB9 = prim /0055 (_t0DAE, _t0DB3);
      face0CBA = 3;
    } else {
      real _t0DB4 = 0.e0;
      real _t0DB5 = 0.e0;
      real _t0DB6 = 0.e0;
      real _t0DB7 = 0.1e1;
      vec3 _t0DB8 = [_t0DB5, _t0DB6, _t0DB7];
      real _t0DB9 = prim •00CE<$[3]; $[3]; $[]> (_t0DB8, refPos0A5D);
      real _t0DBA = prim -0026<$[]> (_t0DB4, _t0DB9);
      real _t0DBB = 0.e0;
      real _t0DBC = 0.e0;
      real _t0DBD = 0.1e1;
      vec3 _t0DBE = [_t0DBB, _t0DBC, _t0DBD];
      real _t0DBF = prim •00CE<$[3]; $[3]; $[]> (_t0DBE, dPos0A5E);
      faceTime0CBB = prim /0055 (_t0DBA, _t0DBF);
    }
  }
  int _t0DC0 = -1;
  bool _t0DC1 = prim !=0086 (face0CBA, _t0DC0);
  if _t0DC1 {
    real _t0DC2 = 0.e0;
    real _t0DC3 = prim max0125 (time0CB9, _t0DC2);
    real _t0DC4 = (real)face0CBA;
    vec2 _t0DC5 = [_t0DC3, _t0DC4];
    return _t0DC5;
  } else {
    real _t0DC6 = -inf;
    bool _t0DC7 = prim ==0084 (_t0DC6, faceTime0CBB);
    if _t0DC7 {
      real _t0DC8 = -0.1e1;
      real _t0DC9 = -0.1e1;
      vec2 _t0DCA = [_t0DC8, _t0DC9];
      return _t0DCA;
    } else {
      real _t0DCB = (real)i0CB8;
      vec2 _t0DCC = [faceTime0CBB, _t0DCB];
      return _t0DCC;
    }
  }
}
function Femdata: Mesh#0 domain0DCD (Femdata: Space arg00DCE)
{
  Femdata: Mesh _t0DCF = extractFem(arg00DCE, Mesh);
  return _t0DCF;
}
function Femdata: Space#0 space0DD0 (Femdata: FemFunc arg00DD1)
{
  Femdata: Space _t0DD2 = extractFem(arg00DD1, Space);
  return _t0DD2;
}
function Femdata: FuncCell#3 funcCell0DD3 (Femdata: FemFunc arg00DD4, Femdata: MeshCell arg10DD5)
{
  int _t0DD6 = extractFemItem(CellIndex(MeshCell), int, arg10DD5);
  Femdata: FuncCell _t0DD7 = loadFem(FuncCell, arg00DD4, _t0DD6);
  return _t0DD7;
}
function Femdata: MeshPos#2 posMove0DE5 (Femdata: MeshPos x0DE6, vec3 dPos0DE7)
{
  bool _t0DE8 = extractFemItem(Valid(MeshPos), bool, x0DE6);
  bool _t0DE9 = prim !00BC (_t0DE8);
  if _t0DE9 {
    return x0DE6;
  }
  real time0DEA = 0.1e1;
  Femdata: MeshPos cmp0DEB = x0DE6;
  int _t0DEC = 0;
  int[] _t0DED = prim $range01C3 (_t0DEC, timeSteps03AF);
  foreach i0E45 in _t0DED {
    Femdata: Mesh _t0DEE = extractFem(cmp0DEB, Mesh);
    int _t0DEF = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF0 = loadFem(MeshCell, _t0DEE, _t0DEF);
    Femdata: Mesh _t0DF1 = extractFem(_t0DF0, Mesh);
    Femdata: Mesh _t0DF2 = extractFem(cmp0DEB, Mesh);
    int _t0DF3 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF4 = loadFem(MeshCell, _t0DF2, _t0DF3);
    Femdata: Mesh _t0DF5 = extractFem(_t0DF4, Mesh);
    Femdata: Mesh _t0DF6 = extractFem(cmp0DEB, Mesh);
    int _t0DF7 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF8 = loadFem(MeshCell, _t0DF6, _t0DF7);
    int _t0DF9 = extractFemItem(CellIndex(MeshCell), int, _t0DF8);
    field(3)[3] _t0DFA = femField(_t0DF1,_t0DF9,field(3)[3],Transform,);
    field(3)[3,3] _t0DFB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0DFA);
    vec3 _t0DFC = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    tensor[3,3] _t0DFD = prim @00A5<#∞; %3; $[3,3]> (_t0DFB, _t0DFC);
    tensor[3,3] _t0DFE = prim inv0155 (_t0DFD);
    tensor[3,3] _t0DFF = prim *0036<$[3,3]> (time0DEA, _t0DFE);
    vec3 deltaP0E00 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0DFF, dPos0DE7);
    vec3 _t0E01 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    vec3 newPos0E02 = prim +0017<$[3]> (_t0E01, deltaP0E00);
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.1e-8;
    real _t0E05 = prim +0017<$[]> (_t0E03, _t0E04);
    real _t0E06 = 0.1e1;
    real _t0E07 = 0.1e1;
    real _t0E08 = 0.1e1;
    vec3 _t0E09 = [_t0E06, _t0E07, _t0E08];
    real _t0E0A = prim •00CE<$[3]; $[3]; $[]> (_t0E09, newPos0E02);
    bool _t0E0B = prim >0080 (_t0E05, _t0E0A);
    real _t0E0C = 0.1e-8;
    real _t0E0D = 0.1e-8;
    real _t0E0E = 0.1e-8;
    vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
    vec3 _t0E10 = prim +0017<$[3]> (_t0E0F, newPos0E02);
    real _t0E11 = _t0E10[0];
    real _t0E12 = -0.e0;
    bool _t0E13 = prim >0080 (_t0E11, _t0E12);
    real _t0E14 = 0.1e-8;
    real _t0E15 = 0.1e-8;
    real _t0E16 = 0.1e-8;
    vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
    vec3 _t0E18 = prim +0017<$[3]> (_t0E17, newPos0E02);
    real _t0E19 = _t0E18[1];
    real _t0E1A = -0.e0;
    bool _t0E1B = prim >0080 (_t0E19, _t0E1A);
    real _t0E1C = 0.1e-8;
    real _t0E1D = 0.1e-8;
    real _t0E1E = 0.1e-8;
    vec3 _t0E1F = [_t0E1C, _t0E1D, _t0E1E];
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, newPos0E02);
    real _t0E21 = _t0E20[2];
    real _t0E22 = -0.e0;
    bool _t0E23 = prim >0080 (_t0E21, _t0E22);
    bool _t0E24 = prim $and01C4 (_t0E1B, _t0E23);
    bool _t0E25 = prim $and01C4 (_t0E13, _t0E24);
    bool _t0E26 = prim $and01C4 (_t0E0B, _t0E25);
    if _t0E26 {
      Femdata: Mesh _t0E27 = extractFem(cmp0DEB, Mesh);
      int _t0E28 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E29 = loadFem(MeshCell, _t0E27, _t0E28);
      Femdata: Mesh _t0E2A = extractFem(_t0E29, Mesh);
      Femdata: Mesh _t0E2B = extractFem(cmp0DEB, Mesh);
      int _t0E2C = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E2D = loadFem(MeshCell, _t0E2B, _t0E2C);
      int _t0E2E = extractFemItem(CellIndex(MeshCell), int, _t0E2D);
      Femdata: MeshPos nmp0E2F = extractFemItemN((_t0E2A, _t0E2E, newPos0E02),RefBuild(Mesh),);
      return nmp0E2F;
    } else {
      vec3 _t0E30 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
      int _t0E31 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E32 = func _exit0CB7 (_t0E30, deltaP0E00, _t0E31);
      real eTime0E33 = _t0E32[0];
      real _t0E34 = prim *0034 (time0DEA, eTime0E33);
      time0DEA = prim -0026<$[]> (time0DEA, _t0E34);
      Femdata: Mesh _t0E35 = extractFem(cmp0DEB, Mesh);
      int _t0E36 = extractFemItem(CellIndex(Mesh), int, cmp0DEB);
      vec3 _t0E37 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      vec3 _t0E38 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      int _t0E39 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E3A = func _exit0CB7 (_t0E38, deltaP0E00, _t0E39);
      Femdata: MeshPos nmp0E3B = func $exitPos0481 (_t0E35, _t0E36, _t0E37, deltaP0E00, _t0E3A);
      bool _t0E3C;
      bool _t0E3D = extractFemItem(Valid(MeshPos), bool, nmp0E3B);
      bool _t0E3E = prim !00BC (_t0E3D);
      if _t0E3E {
        _t0E3C = true;
      } else {
        bool _t0E3F;
        real _t0E40 = 0.e0;
        bool _t0E41 = prim <007A (eTime0E33, _t0E40);
        if _t0E41 {
          _t0E3F = true;
        } else {
          bool _t0E42;
          real _t0E43 = 0.1e1;
          bool _t0E44 = prim >0080 (eTime0E33, _t0E43);
          if _t0E44 {
            _t0E42 = true;
          } else {
            _t0E42 = prim <007A (time0DEA, timeEps03B0);
          }
          _t0E3F = _t0E42;
        }
        _t0E3C = _t0E3F;
      }
      if _t0E3C {
        return nmp0E3B;
      }
      cmp0DEB = nmp0E3B;
    }
  }
  string _t0E46 = "Took stupid way out!\n";
  print (_t0E46);
  vec3 _t0E47 = func worldPos047C (x0DE6);
  vec3 _t0E48 = prim +0017<$[3]> (_t0E47, dPos0DE7);
  cmp0DEB = func findPos03BE (meshData039F, _t0E48);
  return cmp0DEB;
}
function vec3#2 nV0E49 (Femdata: MeshPos x0E4A)
{
  bool _t0E4B = extractFemItem(Valid(MeshPos), bool, x0E4A);
  if _t0E4B {
    Femdata: Mesh _t0E4C = extractFem(x0E4A, Mesh);
    int _t0E4D = extractFemItem(CellIndex(MeshPos), int, x0E4A);
    Femdata: MeshCell c0E4E = loadFem(MeshCell, _t0E4C, _t0E4D);
    vec3 ref0E4F = extractFemItem(RefPos(MeshPos), vec3, x0E4A);
    Femdata: FuncCell _t0E50 = func funcCell0DD3 (data03AD, c0E4E);
    Femdata: FemFunc _t0E51 = extractFem(_t0E50, FemFunc);
    Femdata: FuncCell _t0E52 = func funcCell0DD3 (data03AD, c0E4E);
    Femdata: FemFunc _t0E53 = extractFem(_t0E52, FemFunc);
    Femdata: Space _t0E54 = extractFem(_t0E53, Space);
    Femdata: FuncCell _t0E55 = func funcCell0DD3 (data03AD, c0E4E);
    int _t0E56 = extractFemItem(CellIndex(FuncCell), int, _t0E55);
    field(3)[3] _t0E57 = femField(_t0E51,_t0E56,field(3)[3],refField,);
    vec3 val0E58 = prim @00A5<#∞; %3; $[3]> (_t0E57, ref0E4F);
    real _t0E59 = prim |()|00B5<$[3]> (val0E58);
    vec3 _t0E5A = prim /0057<$[3]> (val0E58, _t0E59);
    return _t0E5A;
  } else {
    vec3 _t0E5B = prim $zero01BB<$[3]> ();
    return _t0E5B;
  }
}
globalInit {
  int _t03A3 = 0;
  int _t03A1 = 1;
  int _t03A5 = extractFemItem(NumCell(Mesh), int, meshData039F);
  int _t03A4 = prim -0024 (_t03A5, _t03A1);
  int[] _t03A8 = prim $range01C3 (_t03A3, _t03A4);
  Femdata: MeshCell[] _t03A9 = {};
  foreach _t03A7 in _t03A8 {
    Femdata: MeshCell _t03AA = loadFem(MeshCell, meshData039F, _t03A7);
    _t03A9 = prim @0010<Femdata: MeshCell> (_t03A9, _t03AA);
  }
  space03AB = loadFem(Space, 0space03AB_intermedateGlobal03AC, meshData039F);
  data03AD = loadFem(FemFunc, 0data03AD_intermedateGlobal03AE, space03AB);
  Femdata: Space _t0DD8 = extractFem(data03AD, Space);
  Femdata: Space _t0DD9 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDA = extractFem(_t0DD9, Mesh);
  field(3)[3] _t0DDB = femField(data03AD,_t0DDA,field(3)[3],refField,findPos03BE );
  Femdata: Space _t0DDC = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDD = extractFem(_t0DDC, Mesh);
  Femdata: Space _t0DDE = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDF = extractFem(_t0DDE, Mesh);
  Femdata: Space _t0DE0 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DE1 = extractFem(_t0DE0, Mesh);
  field(3)[3] _t0DE2 = femField(_t0DDD,_t0DE1,field(3)[3],InvTransform,findPos03BE );
  F0DE3 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t0DDB, _t0DE2);
  simplex0DE4 = func refcell040C (meshData039F);
}
strand gg (vec3 startPos0E5C) {
  output vec3[] stream0E5D;
  output vec3[] newStream0E60;
  int step0E63;
  Femdata: MeshPos cPos0E64;
  vec3 altCPos0E65;
  {
    vec3[1] _t0E5E = {startPos0E5C};
    vec3[] _t0E5F = (vec3[])_t0E5E;
    stream0E5D = _t0E5F;
    vec3[1] _t0E61 = {startPos0E5C};
    vec3[] _t0E62 = (vec3[])_t0E61;
    newStream0E60 = _t0E62;
    step0E63 = 0;
    cPos0E64 = func findPos03BE (meshData039F, startPos0E5C);
    altCPos0E65 = startPos0E5C;
  }
  update
  {
    bool _t0E66;
    bool _t0E67 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E68 = prim !00BC (_t0E67);
    if _t0E68 {
      _t0E66 = true;
    } else {
      bool _t0E69;
      Femdata: MeshPos _t0E6A = func findPos03BE (meshData039F, altCPos0E65);
      bool _t0E6B = extractFemItem(Valid(MeshPos), bool, _t0E6A);
      bool _t0E6C = prim !00BC (_t0E6B);
      if _t0E6C {
        _t0E69 = true;
      } else {
        _t0E69 = prim ==0082 (step0E63, stepMax03B3);
      }
      _t0E66 = _t0E69;
    }
    if _t0E66 {
      stabilize;
    }
    vec3 _t0E6D = func worldPos047C (cPos0E64);
    vec3 _t0E6E = prim -0026<$[3]> (_t0E6D, altCPos0E65);
    real _t0E6F = prim |()|00B5<$[3]> (_t0E6E);
    real _t0E70 = 0.1e-5;
    bool _t0E71 = prim >0080 (_t0E6F, _t0E70);
    if _t0E71 {
      string _t0E72 = "Error in tracing: At step:";
      string _t0E73 = " with particle:";
      string _t0E74 = "\n";
      print (_t0E72, step0E63, _t0E73, startPos0E5C, _t0E74);
    } else {
      string _t0E75 = "fine in cell:";
      Femdata: Mesh _t0E76 = extractFem(cPos0E64, Mesh);
      int _t0E77 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell _t0E78 = loadFem(MeshCell, _t0E76, _t0E77);
      string _t0E79 = "\n";
      print (_t0E75, _t0E78, _t0E79);
    }
    real _t0E7A = 0.5e0;
    real _t0E7B = prim *0034 (_t0E7A, stepSize03B2);
    vec3 _t0E7C = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    vec3 _t0E7D = prim *0036<$[3]> (_t0E7B, _t0E7C);
    vec3 _t0E7E = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    real _t0E7F = prim |()|00B5<$[3]> (_t0E7E);
    vec3 altUp10E80 = prim /0057<$[3]> (_t0E7D, _t0E7F);
    real _t0E81 = 0.5e0;
    real _t0E82 = prim *0034 (_t0E81, stepSize03B2);
    vec3 _t0E83 = func nV0E49 (cPos0E64);
    vec3 up10E84 = prim *0036<$[3]> (_t0E82, _t0E83);
    Femdata: MeshPos intermed0E85 = func posMove0DE5 (cPos0E64, up10E84);
    vec3 altIntermed0E86 = prim +0017<$[3]> (altCPos0E65, altUp10E80);
    bool _t0E87;
    bool _t0E88 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    bool _t0E89 = prim !00BC (_t0E88);
    if _t0E89 {
      _t0E87 = true;
    } else {
      Femdata: MeshPos _t0E8A = func findPos03BE (meshData039F, altIntermed0E86);
      bool _t0E8B = extractFemItem(Valid(MeshPos), bool, _t0E8A);
      _t0E87 = prim !00BC (_t0E8B);
    }
    if _t0E87 {
      stabilize;
    }
    vec3 _t0E8C = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    vec3 _t0E8D = prim *0036<$[3]> (stepSize03B2, _t0E8C);
    vec3 _t0E8E = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    real _t0E8F = prim |()|00B5<$[3]> (_t0E8E);
    vec3 altUp20E90 = prim /0057<$[3]> (_t0E8D, _t0E8F);
    vec3 _t0E91 = func nV0E49 (intermed0E85);
    vec3 up20E92 = prim *0036<$[3]> (stepSize03B2, _t0E91);
    cPos0E64 = func posMove0DE5 (cPos0E64, up20E92);
    altCPos0E65 = prim +0017<$[3]> (altCPos0E65, altUp20E90);
    bool _t0E93 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E94 = prim !00BC (_t0E93);
    if _t0E94 {
      print (stream0E5D);
      stabilize;
    }
    vec3 _t0E95 = func worldPos047C (cPos0E64);
    vec3[1] _t0E96 = {_t0E95};
    vec3[] _t0E97 = (vec3[])_t0E96;
    stream0E5D = prim @0014<vec3> (stream0E5D, _t0E97);
    vec3[1] _t0E98 = {altCPos0E65};
    vec3[] _t0E99 = (vec3[])_t0E98;
    newStream0E60 = prim @0014<vec3> (newStream0E60, _t0E99);
    int _t0E9A = 1;
    step0E63 = prim +0015 (step0E63, _t0E9A);
  }
}
collection {
  foreach x0E9B in startPoints03B1 {
    new gg (x0E9B);
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData039F;
input FemData:Space 0space03AB_intermedateGlobal03AC;
input FemData:FemFunc 0data03AD_intermedateGlobal03AE;
input int timeSteps03AF = <default>;
input real timeEps03B0 = <default>;
input vec3[] startPoints03B1;
input real stepSize03B2 = <default>;
input int stepMax03B3 = <default>;
constants {
  timeSteps03AF = 32;
  timeEps03B0 = 0.1e-6;
  stepSize03B2 = 0.1e-1;
  stepMax03B3 = 100;
}
global Femdata: Space space03AB;
global Femdata: FemFunc data03AD;
global field(3)[3] F0DE3;
function Femdata: MeshPos#6 findPos03BE (Femdata: Mesh mesh03BF, vec3 pos03C0)
{
  real _t03C1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn03C4 = [_t03C1, _t03C2, _t03C3];
  newtonInt03C5 = 0;
  cellInt03C6 = extractFemItem(StartCell(Mesh), int, mesh03BF);
  int _t03C7 = extractFemItem(NumCell(Mesh), int, mesh03BF);
  int _t03C8 = 1;
  numCell03C9 = prim -0024 (_t03C7, _t03C8);
  yayCells03CA = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh03BF, pos03C0 : vec3);
  foreach cellItter03CE in yayCells03CA {
    real _t03CB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn03C4 = [_t03CB, _t03CC, _t03CD];
    cellInt03C6 = cellItter03CE;
    field(3)[3] _t03CF = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
    field(3)[3,3] _t03D0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t03CF);
    field(3)[3,3] _t03D1 = prim inv015E<#∞; %3> (_t03D0);
    real _t03D2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t03D5 = [_t03D2, _t03D3, _t03D4];
    A03D6 = prim @00A5<#∞; %3; $[3,3]> (_t03D1, _t03D5);
    int _t03D7 = 0;
    int _t03D8 = 16;
    int[] _t03D9 = prim $range01C3 (_t03D7, _t03D8);
    foreach newtonItter0408 in _t03D9 {
      field(3)[3] _t03DA = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
      field(3)[3] _t03DB = prim -002E<#∞; %3; $[3]> (_t03DA, pos03C0);
      field(3)[3] _t03DC = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A03D6, _t03DB);
      delta03DD = prim @00A5<#∞; %3; $[3]> (_t03DC, xn03C4);
      xn03C4 = prim -0026<$[3]> (xn03C4, delta03DD);
      real _t03DE = 0.1e-7;
      real _t03DF = 0.1e-7;
      real _t03E0 = prim *0034 (_t03DE, _t03DF);
      real _t03E1 = prim •00CE<$[3]; $[3]; $[]> (delta03DD, delta03DD);
      bool _t03E2 = prim >=007E (_t03E0, _t03E1);
      if _t03E2 {
        real _t03E3 = 0.1e1;
        real _t03E4 = 0.1e-8;
        real _t03E5 = prim +0017<$[]> (_t03E3, _t03E4);
        real _t03E6 = 0.1e1;
        real _t03E7 = 0.1e1;
        real _t03E8 = 0.1e1;
        vec3 _t03E9 = [_t03E6, _t03E7, _t03E8];
        real _t03EA = prim •00CE<$[3]; $[3]; $[]> (_t03E9, xn03C4);
        bool _t03EB = prim >0080 (_t03E5, _t03EA);
        real _t03EC = 0.1e-8;
        real _t03ED = 0.1e-8;
        real _t03EE = 0.1e-8;
        vec3 _t03EF = [_t03EC, _t03ED, _t03EE];
        vec3 _t03F0 = prim +0017<$[3]> (_t03EF, xn03C4);
        real _t03F1 = _t03F0[0];
        real _t03F2 = -0.e0;
        bool _t03F3 = prim >0080 (_t03F1, _t03F2);
        real _t03F4 = 0.1e-8;
        real _t03F5 = 0.1e-8;
        real _t03F6 = 0.1e-8;
        vec3 _t03F7 = [_t03F4, _t03F5, _t03F6];
        vec3 _t03F8 = prim +0017<$[3]> (_t03F7, xn03C4);
        real _t03F9 = _t03F8[1];
        real _t03FA = -0.e0;
        bool _t03FB = prim >0080 (_t03F9, _t03FA);
        real _t03FC = 0.1e-8;
        real _t03FD = 0.1e-8;
        real _t03FE = 0.1e-8;
        vec3 _t03FF = [_t03FC, _t03FD, _t03FE];
        vec3 _t0400 = prim +0017<$[3]> (_t03FF, xn03C4);
        real _t0401 = _t0400[2];
        real _t0402 = -0.e0;
        bool _t0403 = prim >0080 (_t0401, _t0402);
        bool _t0404 = prim $and01C4 (_t03FB, _t0403);
        bool _t0405 = prim $and01C4 (_t03F3, _t0404);
        bool _t0406 = prim $and01C4 (_t03EB, _t0405);
        if _t0406 {
          Femdata: MeshPos _t0407 = extractFemItemN((mesh03BF, cellInt03C6, xn03C4, pos03C0),AllBuild(MeshPos),);
          return _t0407;
        }
      }
    }
  }
  string _t0409 = "Bad end 2";
  string _t040A = "\n";
  print (_t0409, _t040A);
  Femdata: MeshPos _t040B = extractFemItemN((mesh03BF),InvalidBuild(MeshPos),);
  return _t040B;
}
function int[2]#8 nextCell4048A (int faceIdx0A53, int cell0A54, Femdata: Mesh mesh0A55)
{
  int _t0A56 = 8;
  int _t0A57 = prim *0033 (cell0A54, _t0A56);
  int _t0A58 = 2;
  int _t0A59 = prim *0033 (faceIdx0A53, _t0A58);
  int _t0A5A = prim +0015 (_t0A57, _t0A59);
  int[2] _t0A5B = extractFemItemN((mesh0A55, _t0A5A),CellFaceCell(Mesh),);
  return _t0A5B;
}
function Femdata: MeshPos#2 posMove0DE5 (Femdata: MeshPos x0DE6, vec3 dPos0DE7)
{
  bool _t0DE8 = extractFemItem(Valid(MeshPos), bool, x0DE6);
  bool _t0DE9 = prim !00BC (_t0DE8);
  if _t0DE9 {
    return x0DE6;
  }
  real time0DEA = 0.1e1;
  Femdata: MeshPos cmp0DEB = x0DE6;
  int _t0DEC = 0;
  int[] _t0DED = prim $range01C3 (_t0DEC, timeSteps03AF);
  foreach i0E45 in _t0DED {
    Femdata: Mesh _t0DEE = extractFem(cmp0DEB, Mesh);
    int _t0DEF = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF0 = loadFem(MeshCell, _t0DEE, _t0DEF);
    Femdata: Mesh _t0DF1 = extractFem(_t0DF0, Mesh);
    Femdata: Mesh _t0DF2 = extractFem(cmp0DEB, Mesh);
    int _t0DF3 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF4 = loadFem(MeshCell, _t0DF2, _t0DF3);
    Femdata: Mesh _t0DF5 = extractFem(_t0DF4, Mesh);
    Femdata: Mesh _t0DF6 = extractFem(cmp0DEB, Mesh);
    int _t0DF7 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF8 = loadFem(MeshCell, _t0DF6, _t0DF7);
    int _t0DF9 = extractFemItem(CellIndex(MeshCell), int, _t0DF8);
    field(3)[3] _t0DFA = femField(_t0DF1,_t0DF9,field(3)[3],Transform,);
    field(3)[3,3] _t0DFB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0DFA);
    vec3 _t0DFC = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    tensor[3,3] _t0DFD = prim @00A5<#∞; %3; $[3,3]> (_t0DFB, _t0DFC);
    tensor[3,3] _t0DFE = prim inv0155 (_t0DFD);
    tensor[3,3] _t0DFF = prim *0036<$[3,3]> (time0DEA, _t0DFE);
    vec3 deltaP0E00 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0DFF, dPos0DE7);
    vec3 _t0E01 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    vec3 newPos0E02 = prim +0017<$[3]> (_t0E01, deltaP0E00);
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.1e-8;
    real _t0E05 = prim +0017<$[]> (_t0E03, _t0E04);
    real _t0E06 = 0.1e1;
    real _t0E07 = 0.1e1;
    real _t0E08 = 0.1e1;
    vec3 _t0E09 = [_t0E06, _t0E07, _t0E08];
    real _t0E0A = prim •00CE<$[3]; $[3]; $[]> (_t0E09, newPos0E02);
    bool _t0E0B = prim >0080 (_t0E05, _t0E0A);
    real _t0E0C = 0.1e-8;
    real _t0E0D = 0.1e-8;
    real _t0E0E = 0.1e-8;
    vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
    vec3 _t0E10 = prim +0017<$[3]> (_t0E0F, newPos0E02);
    real _t0E11 = _t0E10[0];
    real _t0E12 = -0.e0;
    bool _t0E13 = prim >0080 (_t0E11, _t0E12);
    real _t0E14 = 0.1e-8;
    real _t0E15 = 0.1e-8;
    real _t0E16 = 0.1e-8;
    vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
    vec3 _t0E18 = prim +0017<$[3]> (_t0E17, newPos0E02);
    real _t0E19 = _t0E18[1];
    real _t0E1A = -0.e0;
    bool _t0E1B = prim >0080 (_t0E19, _t0E1A);
    real _t0E1C = 0.1e-8;
    real _t0E1D = 0.1e-8;
    real _t0E1E = 0.1e-8;
    vec3 _t0E1F = [_t0E1C, _t0E1D, _t0E1E];
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, newPos0E02);
    real _t0E21 = _t0E20[2];
    real _t0E22 = -0.e0;
    bool _t0E23 = prim >0080 (_t0E21, _t0E22);
    bool _t0E24 = prim $and01C4 (_t0E1B, _t0E23);
    bool _t0E25 = prim $and01C4 (_t0E13, _t0E24);
    bool _t0E26 = prim $and01C4 (_t0E0B, _t0E25);
    if _t0E26 {
      Femdata: Mesh _t0E27 = extractFem(cmp0DEB, Mesh);
      int _t0E28 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E29 = loadFem(MeshCell, _t0E27, _t0E28);
      Femdata: Mesh _t0E2A = extractFem(_t0E29, Mesh);
      Femdata: Mesh _t0E2B = extractFem(cmp0DEB, Mesh);
      int _t0E2C = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E2D = loadFem(MeshCell, _t0E2B, _t0E2C);
      int _t0E2E = extractFemItem(CellIndex(MeshCell), int, _t0E2D);
      Femdata: MeshPos nmp0E2F = extractFemItemN((_t0E2A, _t0E2E, newPos0E02),RefBuild(Mesh),);
      return nmp0E2F;
    } else {
      vec3 _t0E30 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
      int _t0E31 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E32;
      real time1585 = +inf;
      int face1586 = -1;
      real faceTime1587 = -inf;
      real _t1588 = 0.57735026919e0;
      real _t1589 = 0.57735026919e0;
      real _t158A = 0.57735026919e0;
      real _t158B = 0.57735026919e0;
      vec3 _t158C = [_t1589, _t158A, _t158B];
      real _t158D = prim •00CE<$[3]; $[3]; $[]> (_t158C, _t0E30);
      real _t158E = prim -0026<$[]> (_t1588, _t158D);
      real _t158F = 0.57735026919e0;
      real _t1590 = 0.57735026919e0;
      real _t1591 = 0.57735026919e0;
      vec3 _t1592 = [_t158F, _t1590, _t1591];
      real _t1593 = prim •00CE<$[3]; $[3]; $[]> (_t1592, deltaP0E00);
      real _t1594 = prim /0055 (_t158E, _t1593);
      real _t1595 = -0.1e-15;
      bool _t1596 = prim >=007E (_t1594, _t1595);
      real _t1597 = 0.57735026919e0;
      real _t1598 = 0.57735026919e0;
      real _t1599 = 0.57735026919e0;
      real _t159A = 0.57735026919e0;
      vec3 _t159B = [_t1598, _t1599, _t159A];
      real _t159C = prim •00CE<$[3]; $[3]; $[]> (_t159B, _t0E30);
      real _t159D = prim -0026<$[]> (_t1597, _t159C);
      real _t159E = 0.57735026919e0;
      real _t159F = 0.57735026919e0;
      real _t15A0 = 0.57735026919e0;
      vec3 _t15A1 = [_t159E, _t159F, _t15A0];
      real _t15A2 = prim •00CE<$[3]; $[3]; $[]> (_t15A1, deltaP0E00);
      real _t15A3 = prim /0055 (_t159D, _t15A2);
      bool _t15A4 = prim >0080 (time1585, _t15A3);
      real _t15A5 = 0.57735026919e0;
      real _t15A6 = 0.57735026919e0;
      real _t15A7 = 0.57735026919e0;
      vec3 _t15A8 = [_t15A5, _t15A6, _t15A7];
      real _t15A9 = prim •00CE<$[3]; $[3]; $[]> (_t15A8, deltaP0E00);
      real _t15AA = prim |()|00B5<$[]> (_t15A9);
      real _t15AB = 0.1e-20;
      bool _t15AC = prim >=007E (_t15AA, _t15AB);
      bool _t15AD = prim $and01C4 (_t15A4, _t15AC);
      bool _t15AE = prim $and01C4 (_t1596, _t15AD);
      if _t15AE {
        int _t15AF = 0;
        bool _t15B0 = prim !=0086 (_t0E31, _t15AF);
        if _t15B0 {
          real _t15B1 = 0.57735026919e0;
          real _t15B2 = 0.57735026919e0;
          real _t15B3 = 0.57735026919e0;
          real _t15B4 = 0.57735026919e0;
          vec3 _t15B5 = [_t15B2, _t15B3, _t15B4];
          real _t15B6 = prim •00CE<$[3]; $[3]; $[]> (_t15B5, _t0E30);
          real _t15B7 = prim -0026<$[]> (_t15B1, _t15B6);
          real _t15B8 = 0.57735026919e0;
          real _t15B9 = 0.57735026919e0;
          real _t15BA = 0.57735026919e0;
          vec3 _t15BB = [_t15B8, _t15B9, _t15BA];
          real _t15BC = prim •00CE<$[3]; $[3]; $[]> (_t15BB, deltaP0E00);
          time1585 = prim /0055 (_t15B7, _t15BC);
          face1586 = 0;
        } else {
          real _t15BD = 0.57735026919e0;
          real _t15BE = 0.57735026919e0;
          real _t15BF = 0.57735026919e0;
          real _t15C0 = 0.57735026919e0;
          vec3 _t15C1 = [_t15BE, _t15BF, _t15C0];
          real _t15C2 = prim •00CE<$[3]; $[3]; $[]> (_t15C1, _t0E30);
          real _t15C3 = prim -0026<$[]> (_t15BD, _t15C2);
          real _t15C4 = 0.57735026919e0;
          real _t15C5 = 0.57735026919e0;
          real _t15C6 = 0.57735026919e0;
          vec3 _t15C7 = [_t15C4, _t15C5, _t15C6];
          real _t15C8 = prim •00CE<$[3]; $[3]; $[]> (_t15C7, deltaP0E00);
          faceTime1587 = prim /0055 (_t15C3, _t15C8);
        }
      }
      real _t15C9 = 0.e0;
      real _t15CA = 0.1e1;
      real _t15CB = 0.e0;
      real _t15CC = 0.e0;
      vec3 _t15CD = [_t15CA, _t15CB, _t15CC];
      real _t15CE = prim •00CE<$[3]; $[3]; $[]> (_t15CD, _t0E30);
      real _t15CF = prim -0026<$[]> (_t15C9, _t15CE);
      real _t15D0 = 0.1e1;
      real _t15D1 = 0.e0;
      real _t15D2 = 0.e0;
      vec3 _t15D3 = [_t15D0, _t15D1, _t15D2];
      real _t15D4 = prim •00CE<$[3]; $[3]; $[]> (_t15D3, deltaP0E00);
      real _t15D5 = prim /0055 (_t15CF, _t15D4);
      real _t15D6 = -0.1e-15;
      bool _t15D7 = prim >=007E (_t15D5, _t15D6);
      real _t15D8 = 0.e0;
      real _t15D9 = 0.1e1;
      real _t15DA = 0.e0;
      real _t15DB = 0.e0;
      vec3 _t15DC = [_t15D9, _t15DA, _t15DB];
      real _t15DD = prim •00CE<$[3]; $[3]; $[]> (_t15DC, _t0E30);
      real _t15DE = prim -0026<$[]> (_t15D8, _t15DD);
      real _t15DF = 0.1e1;
      real _t15E0 = 0.e0;
      real _t15E1 = 0.e0;
      vec3 _t15E2 = [_t15DF, _t15E0, _t15E1];
      real _t15E3 = prim •00CE<$[3]; $[3]; $[]> (_t15E2, deltaP0E00);
      real _t15E4 = prim /0055 (_t15DE, _t15E3);
      bool _t15E5 = prim >0080 (time1585, _t15E4);
      real _t15E6 = 0.1e1;
      real _t15E7 = 0.e0;
      real _t15E8 = 0.e0;
      vec3 _t15E9 = [_t15E6, _t15E7, _t15E8];
      real _t15EA = prim •00CE<$[3]; $[3]; $[]> (_t15E9, deltaP0E00);
      real _t15EB = prim |()|00B5<$[]> (_t15EA);
      real _t15EC = 0.1e-20;
      bool _t15ED = prim >=007E (_t15EB, _t15EC);
      bool _t15EE = prim $and01C4 (_t15E5, _t15ED);
      bool _t15EF = prim $and01C4 (_t15D7, _t15EE);
      if _t15EF {
        int _t15F0 = 1;
        bool _t15F1 = prim !=0086 (_t0E31, _t15F0);
        if _t15F1 {
          real _t15F2 = 0.e0;
          real _t15F3 = 0.1e1;
          real _t15F4 = 0.e0;
          real _t15F5 = 0.e0;
          vec3 _t15F6 = [_t15F3, _t15F4, _t15F5];
          real _t15F7 = prim •00CE<$[3]; $[3]; $[]> (_t15F6, _t0E30);
          real _t15F8 = prim -0026<$[]> (_t15F2, _t15F7);
          real _t15F9 = 0.1e1;
          real _t15FA = 0.e0;
          real _t15FB = 0.e0;
          vec3 _t15FC = [_t15F9, _t15FA, _t15FB];
          real _t15FD = prim •00CE<$[3]; $[3]; $[]> (_t15FC, deltaP0E00);
          time1585 = prim /0055 (_t15F8, _t15FD);
          face1586 = 1;
        } else {
          real _t15FE = 0.e0;
          real _t15FF = 0.1e1;
          real _t1600 = 0.e0;
          real _t1601 = 0.e0;
          vec3 _t1602 = [_t15FF, _t1600, _t1601];
          real _t1603 = prim •00CE<$[3]; $[3]; $[]> (_t1602, _t0E30);
          real _t1604 = prim -0026<$[]> (_t15FE, _t1603);
          real _t1605 = 0.1e1;
          real _t1606 = 0.e0;
          real _t1607 = 0.e0;
          vec3 _t1608 = [_t1605, _t1606, _t1607];
          real _t1609 = prim •00CE<$[3]; $[3]; $[]> (_t1608, deltaP0E00);
          faceTime1587 = prim /0055 (_t1604, _t1609);
        }
      }
      real _t160A = 0.e0;
      real _t160B = 0.e0;
      real _t160C = -0.1e1;
      real _t160D = 0.e0;
      vec3 _t160E = [_t160B, _t160C, _t160D];
      real _t160F = prim •00CE<$[3]; $[3]; $[]> (_t160E, _t0E30);
      real _t1610 = prim -0026<$[]> (_t160A, _t160F);
      real _t1611 = 0.e0;
      real _t1612 = -0.1e1;
      real _t1613 = 0.e0;
      vec3 _t1614 = [_t1611, _t1612, _t1613];
      real _t1615 = prim •00CE<$[3]; $[3]; $[]> (_t1614, deltaP0E00);
      real _t1616 = prim /0055 (_t1610, _t1615);
      real _t1617 = -0.1e-15;
      bool _t1618 = prim >=007E (_t1616, _t1617);
      real _t1619 = 0.e0;
      real _t161A = 0.e0;
      real _t161B = -0.1e1;
      real _t161C = 0.e0;
      vec3 _t161D = [_t161A, _t161B, _t161C];
      real _t161E = prim •00CE<$[3]; $[3]; $[]> (_t161D, _t0E30);
      real _t161F = prim -0026<$[]> (_t1619, _t161E);
      real _t1620 = 0.e0;
      real _t1621 = -0.1e1;
      real _t1622 = 0.e0;
      vec3 _t1623 = [_t1620, _t1621, _t1622];
      real _t1624 = prim •00CE<$[3]; $[3]; $[]> (_t1623, deltaP0E00);
      real _t1625 = prim /0055 (_t161F, _t1624);
      bool _t1626 = prim >0080 (time1585, _t1625);
      real _t1627 = 0.e0;
      real _t1628 = -0.1e1;
      real _t1629 = 0.e0;
      vec3 _t162A = [_t1627, _t1628, _t1629];
      real _t162B = prim •00CE<$[3]; $[3]; $[]> (_t162A, deltaP0E00);
      real _t162C = prim |()|00B5<$[]> (_t162B);
      real _t162D = 0.1e-20;
      bool _t162E = prim >=007E (_t162C, _t162D);
      bool _t162F = prim $and01C4 (_t1626, _t162E);
      bool _t1630 = prim $and01C4 (_t1618, _t162F);
      if _t1630 {
        int _t1631 = 2;
        bool _t1632 = prim !=0086 (_t0E31, _t1631);
        if _t1632 {
          real _t1633 = 0.e0;
          real _t1634 = 0.e0;
          real _t1635 = -0.1e1;
          real _t1636 = 0.e0;
          vec3 _t1637 = [_t1634, _t1635, _t1636];
          real _t1638 = prim •00CE<$[3]; $[3]; $[]> (_t1637, _t0E30);
          real _t1639 = prim -0026<$[]> (_t1633, _t1638);
          real _t163A = 0.e0;
          real _t163B = -0.1e1;
          real _t163C = 0.e0;
          vec3 _t163D = [_t163A, _t163B, _t163C];
          real _t163E = prim •00CE<$[3]; $[3]; $[]> (_t163D, deltaP0E00);
          time1585 = prim /0055 (_t1639, _t163E);
          face1586 = 2;
        } else {
          real _t163F = 0.e0;
          real _t1640 = 0.e0;
          real _t1641 = -0.1e1;
          real _t1642 = 0.e0;
          vec3 _t1643 = [_t1640, _t1641, _t1642];
          real _t1644 = prim •00CE<$[3]; $[3]; $[]> (_t1643, _t0E30);
          real _t1645 = prim -0026<$[]> (_t163F, _t1644);
          real _t1646 = 0.e0;
          real _t1647 = -0.1e1;
          real _t1648 = 0.e0;
          vec3 _t1649 = [_t1646, _t1647, _t1648];
          real _t164A = prim •00CE<$[3]; $[3]; $[]> (_t1649, deltaP0E00);
          faceTime1587 = prim /0055 (_t1645, _t164A);
        }
      }
      real _t164B = 0.e0;
      real _t164C = 0.e0;
      real _t164D = 0.e0;
      real _t164E = 0.1e1;
      vec3 _t164F = [_t164C, _t164D, _t164E];
      real _t1650 = prim •00CE<$[3]; $[3]; $[]> (_t164F, _t0E30);
      real _t1651 = prim -0026<$[]> (_t164B, _t1650);
      real _t1652 = 0.e0;
      real _t1653 = 0.e0;
      real _t1654 = 0.1e1;
      vec3 _t1655 = [_t1652, _t1653, _t1654];
      real _t1656 = prim •00CE<$[3]; $[3]; $[]> (_t1655, deltaP0E00);
      real _t1657 = prim /0055 (_t1651, _t1656);
      real _t1658 = -0.1e-15;
      bool _t1659 = prim >=007E (_t1657, _t1658);
      real _t165A = 0.e0;
      real _t165B = 0.e0;
      real _t165C = 0.e0;
      real _t165D = 0.1e1;
      vec3 _t165E = [_t165B, _t165C, _t165D];
      real _t165F = prim •00CE<$[3]; $[3]; $[]> (_t165E, _t0E30);
      real _t1660 = prim -0026<$[]> (_t165A, _t165F);
      real _t1661 = 0.e0;
      real _t1662 = 0.e0;
      real _t1663 = 0.1e1;
      vec3 _t1664 = [_t1661, _t1662, _t1663];
      real _t1665 = prim •00CE<$[3]; $[3]; $[]> (_t1664, deltaP0E00);
      real _t1666 = prim /0055 (_t1660, _t1665);
      bool _t1667 = prim >0080 (time1585, _t1666);
      real _t1668 = 0.e0;
      real _t1669 = 0.e0;
      real _t166A = 0.1e1;
      vec3 _t166B = [_t1668, _t1669, _t166A];
      real _t166C = prim •00CE<$[3]; $[3]; $[]> (_t166B, deltaP0E00);
      real _t166D = prim |()|00B5<$[]> (_t166C);
      real _t166E = 0.1e-20;
      bool _t166F = prim >=007E (_t166D, _t166E);
      bool _t1670 = prim $and01C4 (_t1667, _t166F);
      bool _t1671 = prim $and01C4 (_t1659, _t1670);
      if _t1671 {
        int _t1672 = 3;
        bool _t1673 = prim !=0086 (_t0E31, _t1672);
        if _t1673 {
          real _t1674 = 0.e0;
          real _t1675 = 0.e0;
          real _t1676 = 0.e0;
          real _t1677 = 0.1e1;
          vec3 _t1678 = [_t1675, _t1676, _t1677];
          real _t1679 = prim •00CE<$[3]; $[3]; $[]> (_t1678, _t0E30);
          real _t167A = prim -0026<$[]> (_t1674, _t1679);
          real _t167B = 0.e0;
          real _t167C = 0.e0;
          real _t167D = 0.1e1;
          vec3 _t167E = [_t167B, _t167C, _t167D];
          real _t167F = prim •00CE<$[3]; $[3]; $[]> (_t167E, deltaP0E00);
          time1585 = prim /0055 (_t167A, _t167F);
          face1586 = 3;
        } else {
          real _t1680 = 0.e0;
          real _t1681 = 0.e0;
          real _t1682 = 0.e0;
          real _t1683 = 0.1e1;
          vec3 _t1684 = [_t1681, _t1682, _t1683];
          real _t1685 = prim •00CE<$[3]; $[3]; $[]> (_t1684, _t0E30);
          real _t1686 = prim -0026<$[]> (_t1680, _t1685);
          real _t1687 = 0.e0;
          real _t1688 = 0.e0;
          real _t1689 = 0.1e1;
          vec3 _t168A = [_t1687, _t1688, _t1689];
          real _t168B = prim •00CE<$[3]; $[3]; $[]> (_t168A, deltaP0E00);
          faceTime1587 = prim /0055 (_t1686, _t168B);
        }
      }
      int _t168C = -1;
      bool _t168D = prim !=0086 (face1586, _t168C);
      if _t168D {
        real _t168E = 0.e0;
        real _t168F = prim max0125 (time1585, _t168E);
        real _t1690 = (real)face1586;
        vec2 _t1691 = [_t168F, _t1690];
        _t0E32 = _t1691;
      } else {
        real _t1692 = -inf;
        bool _t1693 = prim ==0084 (_t1692, faceTime1587);
        if _t1693 {
          real _t1694 = -0.1e1;
          real _t1695 = -0.1e1;
          vec2 _t1696 = [_t1694, _t1695];
          _t0E32 = _t1696;
        } else {
          real _t1697 = (real)_t0E31;
          vec2 _t1698 = [faceTime1587, _t1697];
          _t0E32 = _t1698;
        }
      }
      real eTime0E33 = _t0E32[0];
      real _t0E34 = prim *0034 (time0DEA, eTime0E33);
      time0DEA = prim -0026<$[]> (time0DEA, _t0E34);
      Femdata: Mesh _t0E35 = extractFem(cmp0DEB, Mesh);
      int _t0E36 = extractFemItem(CellIndex(Mesh), int, cmp0DEB);
      vec3 _t0E37 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      vec3 _t0E38 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      int _t0E39 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E3A;
      real time1471 = +inf;
      int face1472 = -1;
      real faceTime1473 = -inf;
      real _t1474 = 0.57735026919e0;
      real _t1475 = 0.57735026919e0;
      real _t1476 = 0.57735026919e0;
      real _t1477 = 0.57735026919e0;
      vec3 _t1478 = [_t1475, _t1476, _t1477];
      real _t1479 = prim •00CE<$[3]; $[3]; $[]> (_t1478, _t0E38);
      real _t147A = prim -0026<$[]> (_t1474, _t1479);
      real _t147B = 0.57735026919e0;
      real _t147C = 0.57735026919e0;
      real _t147D = 0.57735026919e0;
      vec3 _t147E = [_t147B, _t147C, _t147D];
      real _t147F = prim •00CE<$[3]; $[3]; $[]> (_t147E, deltaP0E00);
      real _t1480 = prim /0055 (_t147A, _t147F);
      real _t1481 = -0.1e-15;
      bool _t1482 = prim >=007E (_t1480, _t1481);
      real _t1483 = 0.57735026919e0;
      real _t1484 = 0.57735026919e0;
      real _t1485 = 0.57735026919e0;
      real _t1486 = 0.57735026919e0;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, _t0E38);
      real _t1489 = prim -0026<$[]> (_t1483, _t1488);
      real _t148A = 0.57735026919e0;
      real _t148B = 0.57735026919e0;
      real _t148C = 0.57735026919e0;
      vec3 _t148D = [_t148A, _t148B, _t148C];
      real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, deltaP0E00);
      real _t148F = prim /0055 (_t1489, _t148E);
      bool _t1490 = prim >0080 (time1471, _t148F);
      real _t1491 = 0.57735026919e0;
      real _t1492 = 0.57735026919e0;
      real _t1493 = 0.57735026919e0;
      vec3 _t1494 = [_t1491, _t1492, _t1493];
      real _t1495 = prim •00CE<$[3]; $[3]; $[]> (_t1494, deltaP0E00);
      real _t1496 = prim |()|00B5<$[]> (_t1495);
      real _t1497 = 0.1e-20;
      bool _t1498 = prim >=007E (_t1496, _t1497);
      bool _t1499 = prim $and01C4 (_t1490, _t1498);
      bool _t149A = prim $and01C4 (_t1482, _t1499);
      if _t149A {
        int _t149B = 0;
        bool _t149C = prim !=0086 (_t0E39, _t149B);
        if _t149C {
          real _t149D = 0.57735026919e0;
          real _t149E = 0.57735026919e0;
          real _t149F = 0.57735026919e0;
          real _t14A0 = 0.57735026919e0;
          vec3 _t14A1 = [_t149E, _t149F, _t14A0];
          real _t14A2 = prim •00CE<$[3]; $[3]; $[]> (_t14A1, _t0E38);
          real _t14A3 = prim -0026<$[]> (_t149D, _t14A2);
          real _t14A4 = 0.57735026919e0;
          real _t14A5 = 0.57735026919e0;
          real _t14A6 = 0.57735026919e0;
          vec3 _t14A7 = [_t14A4, _t14A5, _t14A6];
          real _t14A8 = prim •00CE<$[3]; $[3]; $[]> (_t14A7, deltaP0E00);
          time1471 = prim /0055 (_t14A3, _t14A8);
          face1472 = 0;
        } else {
          real _t14A9 = 0.57735026919e0;
          real _t14AA = 0.57735026919e0;
          real _t14AB = 0.57735026919e0;
          real _t14AC = 0.57735026919e0;
          vec3 _t14AD = [_t14AA, _t14AB, _t14AC];
          real _t14AE = prim •00CE<$[3]; $[3]; $[]> (_t14AD, _t0E38);
          real _t14AF = prim -0026<$[]> (_t14A9, _t14AE);
          real _t14B0 = 0.57735026919e0;
          real _t14B1 = 0.57735026919e0;
          real _t14B2 = 0.57735026919e0;
          vec3 _t14B3 = [_t14B0, _t14B1, _t14B2];
          real _t14B4 = prim •00CE<$[3]; $[3]; $[]> (_t14B3, deltaP0E00);
          faceTime1473 = prim /0055 (_t14AF, _t14B4);
        }
      }
      real _t14B5 = 0.e0;
      real _t14B6 = 0.1e1;
      real _t14B7 = 0.e0;
      real _t14B8 = 0.e0;
      vec3 _t14B9 = [_t14B6, _t14B7, _t14B8];
      real _t14BA = prim •00CE<$[3]; $[3]; $[]> (_t14B9, _t0E38);
      real _t14BB = prim -0026<$[]> (_t14B5, _t14BA);
      real _t14BC = 0.1e1;
      real _t14BD = 0.e0;
      real _t14BE = 0.e0;
      vec3 _t14BF = [_t14BC, _t14BD, _t14BE];
      real _t14C0 = prim •00CE<$[3]; $[3]; $[]> (_t14BF, deltaP0E00);
      real _t14C1 = prim /0055 (_t14BB, _t14C0);
      real _t14C2 = -0.1e-15;
      bool _t14C3 = prim >=007E (_t14C1, _t14C2);
      real _t14C4 = 0.e0;
      real _t14C5 = 0.1e1;
      real _t14C6 = 0.e0;
      real _t14C7 = 0.e0;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, _t0E38);
      real _t14CA = prim -0026<$[]> (_t14C4, _t14C9);
      real _t14CB = 0.1e1;
      real _t14CC = 0.e0;
      real _t14CD = 0.e0;
      vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
      real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, deltaP0E00);
      real _t14D0 = prim /0055 (_t14CA, _t14CF);
      bool _t14D1 = prim >0080 (time1471, _t14D0);
      real _t14D2 = 0.1e1;
      real _t14D3 = 0.e0;
      real _t14D4 = 0.e0;
      vec3 _t14D5 = [_t14D2, _t14D3, _t14D4];
      real _t14D6 = prim •00CE<$[3]; $[3]; $[]> (_t14D5, deltaP0E00);
      real _t14D7 = prim |()|00B5<$[]> (_t14D6);
      real _t14D8 = 0.1e-20;
      bool _t14D9 = prim >=007E (_t14D7, _t14D8);
      bool _t14DA = prim $and01C4 (_t14D1, _t14D9);
      bool _t14DB = prim $and01C4 (_t14C3, _t14DA);
      if _t14DB {
        int _t14DC = 1;
        bool _t14DD = prim !=0086 (_t0E39, _t14DC);
        if _t14DD {
          real _t14DE = 0.e0;
          real _t14DF = 0.1e1;
          real _t14E0 = 0.e0;
          real _t14E1 = 0.e0;
          vec3 _t14E2 = [_t14DF, _t14E0, _t14E1];
          real _t14E3 = prim •00CE<$[3]; $[3]; $[]> (_t14E2, _t0E38);
          real _t14E4 = prim -0026<$[]> (_t14DE, _t14E3);
          real _t14E5 = 0.1e1;
          real _t14E6 = 0.e0;
          real _t14E7 = 0.e0;
          vec3 _t14E8 = [_t14E5, _t14E6, _t14E7];
          real _t14E9 = prim •00CE<$[3]; $[3]; $[]> (_t14E8, deltaP0E00);
          time1471 = prim /0055 (_t14E4, _t14E9);
          face1472 = 1;
        } else {
          real _t14EA = 0.e0;
          real _t14EB = 0.1e1;
          real _t14EC = 0.e0;
          real _t14ED = 0.e0;
          vec3 _t14EE = [_t14EB, _t14EC, _t14ED];
          real _t14EF = prim •00CE<$[3]; $[3]; $[]> (_t14EE, _t0E38);
          real _t14F0 = prim -0026<$[]> (_t14EA, _t14EF);
          real _t14F1 = 0.1e1;
          real _t14F2 = 0.e0;
          real _t14F3 = 0.e0;
          vec3 _t14F4 = [_t14F1, _t14F2, _t14F3];
          real _t14F5 = prim •00CE<$[3]; $[3]; $[]> (_t14F4, deltaP0E00);
          faceTime1473 = prim /0055 (_t14F0, _t14F5);
        }
      }
      real _t14F6 = 0.e0;
      real _t14F7 = 0.e0;
      real _t14F8 = -0.1e1;
      real _t14F9 = 0.e0;
      vec3 _t14FA = [_t14F7, _t14F8, _t14F9];
      real _t14FB = prim •00CE<$[3]; $[3]; $[]> (_t14FA, _t0E38);
      real _t14FC = prim -0026<$[]> (_t14F6, _t14FB);
      real _t14FD = 0.e0;
      real _t14FE = -0.1e1;
      real _t14FF = 0.e0;
      vec3 _t1500 = [_t14FD, _t14FE, _t14FF];
      real _t1501 = prim •00CE<$[3]; $[3]; $[]> (_t1500, deltaP0E00);
      real _t1502 = prim /0055 (_t14FC, _t1501);
      real _t1503 = -0.1e-15;
      bool _t1504 = prim >=007E (_t1502, _t1503);
      real _t1505 = 0.e0;
      real _t1506 = 0.e0;
      real _t1507 = -0.1e1;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, _t0E38);
      real _t150B = prim -0026<$[]> (_t1505, _t150A);
      real _t150C = 0.e0;
      real _t150D = -0.1e1;
      real _t150E = 0.e0;
      vec3 _t150F = [_t150C, _t150D, _t150E];
      real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, deltaP0E00);
      real _t1511 = prim /0055 (_t150B, _t1510);
      bool _t1512 = prim >0080 (time1471, _t1511);
      real _t1513 = 0.e0;
      real _t1514 = -0.1e1;
      real _t1515 = 0.e0;
      vec3 _t1516 = [_t1513, _t1514, _t1515];
      real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, deltaP0E00);
      real _t1518 = prim |()|00B5<$[]> (_t1517);
      real _t1519 = 0.1e-20;
      bool _t151A = prim >=007E (_t1518, _t1519);
      bool _t151B = prim $and01C4 (_t1512, _t151A);
      bool _t151C = prim $and01C4 (_t1504, _t151B);
      if _t151C {
        int _t151D = 2;
        bool _t151E = prim !=0086 (_t0E39, _t151D);
        if _t151E {
          real _t151F = 0.e0;
          real _t1520 = 0.e0;
          real _t1521 = -0.1e1;
          real _t1522 = 0.e0;
          vec3 _t1523 = [_t1520, _t1521, _t1522];
          real _t1524 = prim •00CE<$[3]; $[3]; $[]> (_t1523, _t0E38);
          real _t1525 = prim -0026<$[]> (_t151F, _t1524);
          real _t1526 = 0.e0;
          real _t1527 = -0.1e1;
          real _t1528 = 0.e0;
          vec3 _t1529 = [_t1526, _t1527, _t1528];
          real _t152A = prim •00CE<$[3]; $[3]; $[]> (_t1529, deltaP0E00);
          time1471 = prim /0055 (_t1525, _t152A);
          face1472 = 2;
        } else {
          real _t152B = 0.e0;
          real _t152C = 0.e0;
          real _t152D = -0.1e1;
          real _t152E = 0.e0;
          vec3 _t152F = [_t152C, _t152D, _t152E];
          real _t1530 = prim •00CE<$[3]; $[3]; $[]> (_t152F, _t0E38);
          real _t1531 = prim -0026<$[]> (_t152B, _t1530);
          real _t1532 = 0.e0;
          real _t1533 = -0.1e1;
          real _t1534 = 0.e0;
          vec3 _t1535 = [_t1532, _t1533, _t1534];
          real _t1536 = prim •00CE<$[3]; $[3]; $[]> (_t1535, deltaP0E00);
          faceTime1473 = prim /0055 (_t1531, _t1536);
        }
      }
      real _t1537 = 0.e0;
      real _t1538 = 0.e0;
      real _t1539 = 0.e0;
      real _t153A = 0.1e1;
      vec3 _t153B = [_t1538, _t1539, _t153A];
      real _t153C = prim •00CE<$[3]; $[3]; $[]> (_t153B, _t0E38);
      real _t153D = prim -0026<$[]> (_t1537, _t153C);
      real _t153E = 0.e0;
      real _t153F = 0.e0;
      real _t1540 = 0.1e1;
      vec3 _t1541 = [_t153E, _t153F, _t1540];
      real _t1542 = prim •00CE<$[3]; $[3]; $[]> (_t1541, deltaP0E00);
      real _t1543 = prim /0055 (_t153D, _t1542);
      real _t1544 = -0.1e-15;
      bool _t1545 = prim >=007E (_t1543, _t1544);
      real _t1546 = 0.e0;
      real _t1547 = 0.e0;
      real _t1548 = 0.e0;
      real _t1549 = 0.1e1;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, _t0E38);
      real _t154C = prim -0026<$[]> (_t1546, _t154B);
      real _t154D = 0.e0;
      real _t154E = 0.e0;
      real _t154F = 0.1e1;
      vec3 _t1550 = [_t154D, _t154E, _t154F];
      real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, deltaP0E00);
      real _t1552 = prim /0055 (_t154C, _t1551);
      bool _t1553 = prim >0080 (time1471, _t1552);
      real _t1554 = 0.e0;
      real _t1555 = 0.e0;
      real _t1556 = 0.1e1;
      vec3 _t1557 = [_t1554, _t1555, _t1556];
      real _t1558 = prim •00CE<$[3]; $[3]; $[]> (_t1557, deltaP0E00);
      real _t1559 = prim |()|00B5<$[]> (_t1558);
      real _t155A = 0.1e-20;
      bool _t155B = prim >=007E (_t1559, _t155A);
      bool _t155C = prim $and01C4 (_t1553, _t155B);
      bool _t155D = prim $and01C4 (_t1545, _t155C);
      if _t155D {
        int _t155E = 3;
        bool _t155F = prim !=0086 (_t0E39, _t155E);
        if _t155F {
          real _t1560 = 0.e0;
          real _t1561 = 0.e0;
          real _t1562 = 0.e0;
          real _t1563 = 0.1e1;
          vec3 _t1564 = [_t1561, _t1562, _t1563];
          real _t1565 = prim •00CE<$[3]; $[3]; $[]> (_t1564, _t0E38);
          real _t1566 = prim -0026<$[]> (_t1560, _t1565);
          real _t1567 = 0.e0;
          real _t1568 = 0.e0;
          real _t1569 = 0.1e1;
          vec3 _t156A = [_t1567, _t1568, _t1569];
          real _t156B = prim •00CE<$[3]; $[3]; $[]> (_t156A, deltaP0E00);
          time1471 = prim /0055 (_t1566, _t156B);
          face1472 = 3;
        } else {
          real _t156C = 0.e0;
          real _t156D = 0.e0;
          real _t156E = 0.e0;
          real _t156F = 0.1e1;
          vec3 _t1570 = [_t156D, _t156E, _t156F];
          real _t1571 = prim •00CE<$[3]; $[3]; $[]> (_t1570, _t0E38);
          real _t1572 = prim -0026<$[]> (_t156C, _t1571);
          real _t1573 = 0.e0;
          real _t1574 = 0.e0;
          real _t1575 = 0.1e1;
          vec3 _t1576 = [_t1573, _t1574, _t1575];
          real _t1577 = prim •00CE<$[3]; $[3]; $[]> (_t1576, deltaP0E00);
          faceTime1473 = prim /0055 (_t1572, _t1577);
        }
      }
      int _t1578 = -1;
      bool _t1579 = prim !=0086 (face1472, _t1578);
      if _t1579 {
        real _t157A = 0.e0;
        real _t157B = prim max0125 (time1471, _t157A);
        real _t157C = (real)face1472;
        vec2 _t157D = [_t157B, _t157C];
        _t0E3A = _t157D;
      } else {
        real _t157E = -inf;
        bool _t157F = prim ==0084 (_t157E, faceTime1473);
        if _t157F {
          real _t1580 = -0.1e1;
          real _t1581 = -0.1e1;
          vec2 _t1582 = [_t1580, _t1581];
          _t0E3A = _t1582;
        } else {
          real _t1583 = (real)_t0E39;
          vec2 _t1584 = [faceTime1473, _t1583];
          _t0E3A = _t1584;
        }
      }
      Femdata: MeshPos nmp0E3B;
      int _t0EA6 = -1;
      real _t0EA7 = _t0E3A[1];
      int _t0EA8 = prim $r2i01B7 (_t0EA7);
      int[2] _t0EA9 = func nextCell4048A (_t0EA8, _t0E36, _t0E35);
      int _t0EAA = 0;
      int _t0EAB = prim $sub01C0<int; %2> (_t0EA9, _t0EAA);
      bool _t0EAC = prim !=0086 (_t0EA6, _t0EAB);
      if _t0EAC {
        string _t0EAD = "face ";
        real _t0EAE = _t0E3A[1];
        int _t0EAF = prim $r2i01B7 (_t0EAE);
        string _t0EB0 = " to ";
        real _t0EB1 = _t0E3A[1];
        int _t0EB2 = prim $r2i01B7 (_t0EB1);
        int[2] _t0EB3 = func nextCell4048A (_t0EB2, _t0E36, _t0E35);
        int _t0EB4 = 1;
        int _t0EB5 = prim $sub01C0<int; %2> (_t0EB3, _t0EB4);
        string _t0EB6 = "\n";
        string _t0EB7 = "got: ";
        real _t0EB8 = 0.1e1;
        real _t0EB9 = 0.e0;
        real _t0EBA = 0.e0;
        real _t0EBB = 0.e0;
        vec4 _t0EBC = [_t0EB8, _t0EB9, _t0EBA, _t0EBB];
        real _t0EBD = 0.e0;
        real _t0EBE = 0.1e1;
        real _t0EBF = 0.e0;
        real _t0EC0 = 0.e0;
        vec4 _t0EC1 = [_t0EBD, _t0EBE, _t0EBF, _t0EC0];
        real _t0EC2 = 0.e0;
        real _t0EC3 = 0.e0;
        real _t0EC4 = 0.1e1;
        real _t0EC5 = 0.e0;
        vec4 _t0EC6 = [_t0EC2, _t0EC3, _t0EC4, _t0EC5];
        real _t0EC7 = 0.971445146547e-16;
        real _t0EC8 = 0.e0;
        real _t0EC9 = 0.e0;
        real _t0ECA = 0.1e1;
        vec4 _t0ECB = [_t0EC7, _t0EC8, _t0EC9, _t0ECA];
        tensor[4,4] _t0ECC = [_t0EBC, _t0EC1, _t0EC6, _t0ECB];
        real _t0ECD = 0.57735026919e0;
        real _t0ECE = 0.57735026919e0;
        real _t0ECF = 0.57735026919e0;
        real _t0ED0 = -0.57735026919e0;
        vec4 _t0ED1 = [_t0ECD, _t0ECE, _t0ECF, _t0ED0];
        real _t0ED2 = -0.333333333333e0;
        real _t0ED3 = 0.666666666667e0;
        real _t0ED4 = -0.333333333333e0;
        real _t0ED5 = 0.333333333333e0;
        vec4 _t0ED6 = [_t0ED2, _t0ED3, _t0ED4, _t0ED5];
        real _t0ED7 = -0.333333333333e0;
        real _t0ED8 = -0.333333333333e0;
        real _t0ED9 = 0.666666666667e0;
        real _t0EDA = 0.333333333333e0;
        vec4 _t0EDB = [_t0ED7, _t0ED8, _t0ED9, _t0EDA];
        real _t0EDC = 0.971445146547e-16;
        real _t0EDD = 0.e0;
        real _t0EDE = 0.e0;
        real _t0EDF = 0.1e1;
        vec4 _t0EE0 = [_t0EDC, _t0EDD, _t0EDE, _t0EDF];
        tensor[4,4] _t0EE1 = [_t0ED1, _t0ED6, _t0EDB, _t0EE0];
        real _t0EE2 = -0.333333333333e0;
        real _t0EE3 = 0.666666666667e0;
        real _t0EE4 = -0.333333333333e0;
        real _t0EE5 = 0.333333333333e0;
        vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
        real _t0EE7 = -0.57735026919e0;
        real _t0EE8 = -0.57735026919e0;
        real _t0EE9 = -0.57735026919e0;
        real _t0EEA = 0.57735026919e0;
        vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
        real _t0EEC = -0.333333333333e0;
        real _t0EED = -0.333333333333e0;
        real _t0EEE = 0.666666666667e0;
        real _t0EEF = 0.333333333333e0;
        vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
        real _t0EF1 = 0.971445146547e-16;
        real _t0EF2 = 0.e0;
        real _t0EF3 = 0.e0;
        real _t0EF4 = 0.1e1;
        vec4 _t0EF5 = [_t0EF1, _t0EF2, _t0EF3, _t0EF4];
        tensor[4,4] _t0EF6 = [_t0EE6, _t0EEB, _t0EF0, _t0EF5];
        real _t0EF7 = -0.333333333333e0;
        real _t0EF8 = 0.666666666667e0;
        real _t0EF9 = -0.333333333333e0;
        real _t0EFA = 0.333333333333e0;
        vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
        real _t0EFC = -0.333333333333e0;
        real _t0EFD = -0.333333333333e0;
        real _t0EFE = 0.666666666667e0;
        real _t0EFF = 0.333333333333e0;
        vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
        real _t0F01 = 0.57735026919e0;
        real _t0F02 = 0.57735026919e0;
        real _t0F03 = 0.57735026919e0;
        real _t0F04 = -0.57735026919e0;
        vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
        real _t0F06 = 0.971445146547e-16;
        real _t0F07 = 0.e0;
        real _t0F08 = 0.e0;
        real _t0F09 = 0.1e1;
        vec4 _t0F0A = [_t0F06, _t0F07, _t0F08, _t0F09];
        tensor[4,4] _t0F0B = [_t0EFB, _t0F00, _t0F05, _t0F0A];
        tensor[4,4][4] _t0F0C = {_t0ECC, _t0EE1, _t0EF6, _t0F0B};
        real _t0F0D = 0.57735026919e0;
        real _t0F0E = -0.1e1;
        real _t0F0F = -0.1e1;
        real _t0F10 = 0.1e1;
        vec4 _t0F11 = [_t0F0D, _t0F0E, _t0F0F, _t0F10];
        real _t0F12 = 0.57735026919e0;
        real _t0F13 = 0.1e1;
        real _t0F14 = 0.e0;
        real _t0F15 = 0.e0;
        vec4 _t0F16 = [_t0F12, _t0F13, _t0F14, _t0F15];
        real _t0F17 = 0.57735026919e0;
        real _t0F18 = 0.e0;
        real _t0F19 = 0.1e1;
        real _t0F1A = 0.e0;
        vec4 _t0F1B = [_t0F17, _t0F18, _t0F19, _t0F1A];
        real _t0F1C = 0.e0;
        real _t0F1D = 0.e0;
        real _t0F1E = 0.e0;
        real _t0F1F = 0.1e1;
        vec4 _t0F20 = [_t0F1C, _t0F1D, _t0F1E, _t0F1F];
        tensor[4,4] _t0F21 = [_t0F11, _t0F16, _t0F1B, _t0F20];
        real _t0F22 = 0.1e1;
        real _t0F23 = 0.e0;
        real _t0F24 = 0.e0;
        real _t0F25 = 0.e0;
        vec4 _t0F26 = [_t0F22, _t0F23, _t0F24, _t0F25];
        real _t0F27 = 0.e0;
        real _t0F28 = 0.1e1;
        real _t0F29 = 0.e0;
        real _t0F2A = 0.e0;
        vec4 _t0F2B = [_t0F27, _t0F28, _t0F29, _t0F2A];
        real _t0F2C = 0.e0;
        real _t0F2D = 0.e0;
        real _t0F2E = 0.1e1;
        real _t0F2F = 0.e0;
        vec4 _t0F30 = [_t0F2C, _t0F2D, _t0F2E, _t0F2F];
        real _t0F31 = 0.e0;
        real _t0F32 = 0.e0;
        real _t0F33 = 0.e0;
        real _t0F34 = 0.1e1;
        vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
        tensor[4,4] _t0F36 = [_t0F26, _t0F2B, _t0F30, _t0F35];
        real _t0F37 = 0.e0;
        real _t0F38 = 0.1e1;
        real _t0F39 = 0.e0;
        real _t0F3A = 0.e0;
        vec4 _t0F3B = [_t0F37, _t0F38, _t0F39, _t0F3A];
        real _t0F3C = -0.1e1;
        real _t0F3D = 0.e0;
        real _t0F3E = 0.e0;
        real _t0F3F = 0.e0;
        vec4 _t0F40 = [_t0F3C, _t0F3D, _t0F3E, _t0F3F];
        real _t0F41 = 0.e0;
        real _t0F42 = 0.e0;
        real _t0F43 = 0.1e1;
        real _t0F44 = 0.e0;
        vec4 _t0F45 = [_t0F41, _t0F42, _t0F43, _t0F44];
        real _t0F46 = 0.e0;
        real _t0F47 = 0.e0;
        real _t0F48 = 0.e0;
        real _t0F49 = 0.1e1;
        vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
        tensor[4,4] _t0F4B = [_t0F3B, _t0F40, _t0F45, _t0F4A];
        real _t0F4C = 0.e0;
        real _t0F4D = 0.1e1;
        real _t0F4E = 0.e0;
        real _t0F4F = 0.e0;
        vec4 _t0F50 = [_t0F4C, _t0F4D, _t0F4E, _t0F4F];
        real _t0F51 = 0.e0;
        real _t0F52 = 0.e0;
        real _t0F53 = 0.1e1;
        real _t0F54 = 0.e0;
        vec4 _t0F55 = [_t0F51, _t0F52, _t0F53, _t0F54];
        real _t0F56 = 0.1e1;
        real _t0F57 = 0.e0;
        real _t0F58 = 0.e0;
        real _t0F59 = 0.e0;
        vec4 _t0F5A = [_t0F56, _t0F57, _t0F58, _t0F59];
        real _t0F5B = 0.e0;
        real _t0F5C = 0.e0;
        real _t0F5D = 0.e0;
        real _t0F5E = 0.1e1;
        vec4 _t0F5F = [_t0F5B, _t0F5C, _t0F5D, _t0F5E];
        tensor[4,4] _t0F60 = [_t0F50, _t0F55, _t0F5A, _t0F5F];
        tensor[4,4][4] _t0F61 = {_t0F21, _t0F36, _t0F4B, _t0F60};
        real _t0F62 = -0.1e1;
        real _t0F63 = -0.57735026919e0;
        real _t0F64 = -0.1e1;
        real _t0F65 = 0.1e1;
        vec4 _t0F66 = [_t0F62, _t0F63, _t0F64, _t0F65];
        real _t0F67 = 0.1e1;
        real _t0F68 = -0.57735026919e0;
        real _t0F69 = 0.e0;
        real _t0F6A = 0.e0;
        vec4 _t0F6B = [_t0F67, _t0F68, _t0F69, _t0F6A];
        real _t0F6C = 0.e0;
        real _t0F6D = -0.57735026919e0;
        real _t0F6E = 0.1e1;
        real _t0F6F = 0.e0;
        vec4 _t0F70 = [_t0F6C, _t0F6D, _t0F6E, _t0F6F];
        real _t0F71 = 0.e0;
        real _t0F72 = 0.e0;
        real _t0F73 = 0.e0;
        real _t0F74 = 0.1e1;
        vec4 _t0F75 = [_t0F71, _t0F72, _t0F73, _t0F74];
        tensor[4,4] _t0F76 = [_t0F66, _t0F6B, _t0F70, _t0F75];
        real _t0F77 = 0.e0;
        real _t0F78 = -0.1e1;
        real _t0F79 = 0.e0;
        real _t0F7A = 0.e0;
        vec4 _t0F7B = [_t0F77, _t0F78, _t0F79, _t0F7A];
        real _t0F7C = 0.1e1;
        real _t0F7D = 0.e0;
        real _t0F7E = 0.e0;
        real _t0F7F = 0.e0;
        vec4 _t0F80 = [_t0F7C, _t0F7D, _t0F7E, _t0F7F];
        real _t0F81 = 0.e0;
        real _t0F82 = 0.e0;
        real _t0F83 = 0.1e1;
        real _t0F84 = 0.e0;
        vec4 _t0F85 = [_t0F81, _t0F82, _t0F83, _t0F84];
        real _t0F86 = 0.e0;
        real _t0F87 = 0.e0;
        real _t0F88 = 0.e0;
        real _t0F89 = 0.1e1;
        vec4 _t0F8A = [_t0F86, _t0F87, _t0F88, _t0F89];
        tensor[4,4] _t0F8B = [_t0F7B, _t0F80, _t0F85, _t0F8A];
        real _t0F8C = 0.1e1;
        real _t0F8D = 0.e0;
        real _t0F8E = 0.e0;
        real _t0F8F = 0.e0;
        vec4 _t0F90 = [_t0F8C, _t0F8D, _t0F8E, _t0F8F];
        real _t0F91 = 0.e0;
        real _t0F92 = 0.1e1;
        real _t0F93 = 0.e0;
        real _t0F94 = 0.e0;
        vec4 _t0F95 = [_t0F91, _t0F92, _t0F93, _t0F94];
        real _t0F96 = 0.e0;
        real _t0F97 = 0.e0;
        real _t0F98 = 0.1e1;
        real _t0F99 = 0.e0;
        vec4 _t0F9A = [_t0F96, _t0F97, _t0F98, _t0F99];
        real _t0F9B = 0.e0;
        real _t0F9C = 0.e0;
        real _t0F9D = 0.e0;
        real _t0F9E = 0.1e1;
        vec4 _t0F9F = [_t0F9B, _t0F9C, _t0F9D, _t0F9E];
        tensor[4,4] _t0FA0 = [_t0F90, _t0F95, _t0F9A, _t0F9F];
        real _t0FA1 = 0.1e1;
        real _t0FA2 = 0.e0;
        real _t0FA3 = 0.e0;
        real _t0FA4 = 0.e0;
        vec4 _t0FA5 = [_t0FA1, _t0FA2, _t0FA3, _t0FA4];
        real _t0FA6 = 0.e0;
        real _t0FA7 = 0.e0;
        real _t0FA8 = 0.1e1;
        real _t0FA9 = 0.e0;
        vec4 _t0FAA = [_t0FA6, _t0FA7, _t0FA8, _t0FA9];
        real _t0FAB = 0.e0;
        real _t0FAC = -0.1e1;
        real _t0FAD = 0.e0;
        real _t0FAE = 0.e0;
        vec4 _t0FAF = [_t0FAB, _t0FAC, _t0FAD, _t0FAE];
        real _t0FB0 = 0.e0;
        real _t0FB1 = 0.e0;
        real _t0FB2 = 0.e0;
        real _t0FB3 = 0.1e1;
        vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
        tensor[4,4] _t0FB5 = [_t0FA5, _t0FAA, _t0FAF, _t0FB4];
        tensor[4,4][4] _t0FB6 = {_t0F76, _t0F8B, _t0FA0, _t0FB5};
        real _t0FB7 = -0.1e1;
        real _t0FB8 = -0.1e1;
        real _t0FB9 = 0.57735026919e0;
        real _t0FBA = 0.1e1;
        vec4 _t0FBB = [_t0FB7, _t0FB8, _t0FB9, _t0FBA];
        real _t0FBC = 0.1e1;
        real _t0FBD = 0.e0;
        real _t0FBE = 0.57735026919e0;
        real _t0FBF = 0.e0;
        vec4 _t0FC0 = [_t0FBC, _t0FBD, _t0FBE, _t0FBF];
        real _t0FC1 = 0.e0;
        real _t0FC2 = 0.1e1;
        real _t0FC3 = 0.57735026919e0;
        real _t0FC4 = 0.e0;
        vec4 _t0FC5 = [_t0FC1, _t0FC2, _t0FC3, _t0FC4];
        real _t0FC6 = 0.e0;
        real _t0FC7 = 0.e0;
        real _t0FC8 = 0.e0;
        real _t0FC9 = 0.1e1;
        vec4 _t0FCA = [_t0FC6, _t0FC7, _t0FC8, _t0FC9];
        tensor[4,4] _t0FCB = [_t0FBB, _t0FC0, _t0FC5, _t0FCA];
        real _t0FCC = 0.e0;
        real _t0FCD = 0.e0;
        real _t0FCE = 0.1e1;
        real _t0FCF = 0.e0;
        vec4 _t0FD0 = [_t0FCC, _t0FCD, _t0FCE, _t0FCF];
        real _t0FD1 = 0.1e1;
        real _t0FD2 = 0.e0;
        real _t0FD3 = 0.e0;
        real _t0FD4 = 0.e0;
        vec4 _t0FD5 = [_t0FD1, _t0FD2, _t0FD3, _t0FD4];
        real _t0FD6 = 0.e0;
        real _t0FD7 = 0.1e1;
        real _t0FD8 = 0.e0;
        real _t0FD9 = 0.e0;
        vec4 _t0FDA = [_t0FD6, _t0FD7, _t0FD8, _t0FD9];
        real _t0FDB = 0.e0;
        real _t0FDC = 0.e0;
        real _t0FDD = 0.e0;
        real _t0FDE = 0.1e1;
        vec4 _t0FDF = [_t0FDB, _t0FDC, _t0FDD, _t0FDE];
        tensor[4,4] _t0FE0 = [_t0FD0, _t0FD5, _t0FDA, _t0FDF];
        real _t0FE1 = 0.1e1;
        real _t0FE2 = 0.e0;
        real _t0FE3 = 0.e0;
        real _t0FE4 = 0.e0;
        vec4 _t0FE5 = [_t0FE1, _t0FE2, _t0FE3, _t0FE4];
        real _t0FE6 = 0.e0;
        real _t0FE7 = 0.e0;
        real _t0FE8 = -0.1e1;
        real _t0FE9 = 0.e0;
        vec4 _t0FEA = [_t0FE6, _t0FE7, _t0FE8, _t0FE9];
        real _t0FEB = 0.e0;
        real _t0FEC = 0.1e1;
        real _t0FED = 0.e0;
        real _t0FEE = 0.e0;
        vec4 _t0FEF = [_t0FEB, _t0FEC, _t0FED, _t0FEE];
        real _t0FF0 = 0.e0;
        real _t0FF1 = 0.e0;
        real _t0FF2 = 0.e0;
        real _t0FF3 = 0.1e1;
        vec4 _t0FF4 = [_t0FF0, _t0FF1, _t0FF2, _t0FF3];
        tensor[4,4] _t0FF5 = [_t0FE5, _t0FEA, _t0FEF, _t0FF4];
        real _t0FF6 = 0.1e1;
        real _t0FF7 = 0.e0;
        real _t0FF8 = 0.e0;
        real _t0FF9 = 0.e0;
        vec4 _t0FFA = [_t0FF6, _t0FF7, _t0FF8, _t0FF9];
        real _t0FFB = 0.e0;
        real _t0FFC = 0.1e1;
        real _t0FFD = 0.e0;
        real _t0FFE = 0.e0;
        vec4 _t0FFF = [_t0FFB, _t0FFC, _t0FFD, _t0FFE];
        real _t1000 = 0.e0;
        real _t1001 = 0.e0;
        real _t1002 = 0.1e1;
        real _t1003 = 0.e0;
        vec4 _t1004 = [_t1000, _t1001, _t1002, _t1003];
        real _t1005 = 0.e0;
        real _t1006 = 0.e0;
        real _t1007 = 0.e0;
        real _t1008 = 0.1e1;
        vec4 _t1009 = [_t1005, _t1006, _t1007, _t1008];
        tensor[4,4] _t100A = [_t0FFA, _t0FFF, _t1004, _t1009];
        tensor[4,4][4] _t100B = {_t0FCB, _t0FE0, _t0FF5, _t100A};
        tensor[4,4][4][4] _t100C = {_t0F0C, _t0F61, _t0FB6, _t100B};
        real _t100D = _t0E3A[1];
        int _t100E = prim $r2i01B7 (_t100D);
        tensor[4,4][4] _t100F = prim $sub01C0<tensor[4,4][4]; %4> (_t100C, _t100E);
        real _t1010 = _t0E3A[1];
        int _t1011 = prim $r2i01B7 (_t1010);
        int[2] _t1012 = func nextCell4048A (_t1011, _t0E36, _t0E35);
        int _t1013 = 1;
        int _t1014 = prim $sub01C0<int; %2> (_t1012, _t1013);
        tensor[4,4] _t1015 = prim $sub01C0<tensor[4,4]; %4> (_t100F, _t1014);
        string _t1016 = "\n";
        print (_t0EAD, _t0EAF, _t0EB0, _t0EB5, _t0EB6, _t0EB7, _t1015, _t1016);
        real _t1017 = _t0E3A[1];
        int _t1018 = prim $r2i01B7 (_t1017);
        int[2] _t1019 = func nextCell4048A (_t1018, _t0E36, _t0E35);
        int _t101A = 0;
        int _t101B = prim $sub01C0<int; %2> (_t1019, _t101A);
        real _t101C = 0.1e1;
        real _t101D = 0.e0;
        real _t101E = 0.e0;
        real _t101F = 0.e0;
        vec4 _t1020 = [_t101C, _t101D, _t101E, _t101F];
        real _t1021 = 0.e0;
        real _t1022 = 0.1e1;
        real _t1023 = 0.e0;
        real _t1024 = 0.e0;
        vec4 _t1025 = [_t1021, _t1022, _t1023, _t1024];
        real _t1026 = 0.e0;
        real _t1027 = 0.e0;
        real _t1028 = 0.1e1;
        real _t1029 = 0.e0;
        vec4 _t102A = [_t1026, _t1027, _t1028, _t1029];
        real _t102B = 0.971445146547e-16;
        real _t102C = 0.e0;
        real _t102D = 0.e0;
        real _t102E = 0.1e1;
        vec4 _t102F = [_t102B, _t102C, _t102D, _t102E];
        tensor[4,4] _t1030 = [_t1020, _t1025, _t102A, _t102F];
        real _t1031 = 0.57735026919e0;
        real _t1032 = 0.57735026919e0;
        real _t1033 = 0.57735026919e0;
        real _t1034 = -0.57735026919e0;
        vec4 _t1035 = [_t1031, _t1032, _t1033, _t1034];
        real _t1036 = -0.333333333333e0;
        real _t1037 = 0.666666666667e0;
        real _t1038 = -0.333333333333e0;
        real _t1039 = 0.333333333333e0;
        vec4 _t103A = [_t1036, _t1037, _t1038, _t1039];
        real _t103B = -0.333333333333e0;
        real _t103C = -0.333333333333e0;
        real _t103D = 0.666666666667e0;
        real _t103E = 0.333333333333e0;
        vec4 _t103F = [_t103B, _t103C, _t103D, _t103E];
        real _t1040 = 0.971445146547e-16;
        real _t1041 = 0.e0;
        real _t1042 = 0.e0;
        real _t1043 = 0.1e1;
        vec4 _t1044 = [_t1040, _t1041, _t1042, _t1043];
        tensor[4,4] _t1045 = [_t1035, _t103A, _t103F, _t1044];
        real _t1046 = -0.333333333333e0;
        real _t1047 = 0.666666666667e0;
        real _t1048 = -0.333333333333e0;
        real _t1049 = 0.333333333333e0;
        vec4 _t104A = [_t1046, _t1047, _t1048, _t1049];
        real _t104B = -0.57735026919e0;
        real _t104C = -0.57735026919e0;
        real _t104D = -0.57735026919e0;
        real _t104E = 0.57735026919e0;
        vec4 _t104F = [_t104B, _t104C, _t104D, _t104E];
        real _t1050 = -0.333333333333e0;
        real _t1051 = -0.333333333333e0;
        real _t1052 = 0.666666666667e0;
        real _t1053 = 0.333333333333e0;
        vec4 _t1054 = [_t1050, _t1051, _t1052, _t1053];
        real _t1055 = 0.971445146547e-16;
        real _t1056 = 0.e0;
        real _t1057 = 0.e0;
        real _t1058 = 0.1e1;
        vec4 _t1059 = [_t1055, _t1056, _t1057, _t1058];
        tensor[4,4] _t105A = [_t104A, _t104F, _t1054, _t1059];
        real _t105B = -0.333333333333e0;
        real _t105C = 0.666666666667e0;
        real _t105D = -0.333333333333e0;
        real _t105E = 0.333333333333e0;
        vec4 _t105F = [_t105B, _t105C, _t105D, _t105E];
        real _t1060 = -0.333333333333e0;
        real _t1061 = -0.333333333333e0;
        real _t1062 = 0.666666666667e0;
        real _t1063 = 0.333333333333e0;
        vec4 _t1064 = [_t1060, _t1061, _t1062, _t1063];
        real _t1065 = 0.57735026919e0;
        real _t1066 = 0.57735026919e0;
        real _t1067 = 0.57735026919e0;
        real _t1068 = -0.57735026919e0;
        vec4 _t1069 = [_t1065, _t1066, _t1067, _t1068];
        real _t106A = 0.971445146547e-16;
        real _t106B = 0.e0;
        real _t106C = 0.e0;
        real _t106D = 0.1e1;
        vec4 _t106E = [_t106A, _t106B, _t106C, _t106D];
        tensor[4,4] _t106F = [_t105F, _t1064, _t1069, _t106E];
        tensor[4,4][4] _t1070 = {_t1030, _t1045, _t105A, _t106F};
        real _t1071 = 0.57735026919e0;
        real _t1072 = -0.1e1;
        real _t1073 = -0.1e1;
        real _t1074 = 0.1e1;
        vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
        real _t1076 = 0.57735026919e0;
        real _t1077 = 0.1e1;
        real _t1078 = 0.e0;
        real _t1079 = 0.e0;
        vec4 _t107A = [_t1076, _t1077, _t1078, _t1079];
        real _t107B = 0.57735026919e0;
        real _t107C = 0.e0;
        real _t107D = 0.1e1;
        real _t107E = 0.e0;
        vec4 _t107F = [_t107B, _t107C, _t107D, _t107E];
        real _t1080 = 0.e0;
        real _t1081 = 0.e0;
        real _t1082 = 0.e0;
        real _t1083 = 0.1e1;
        vec4 _t1084 = [_t1080, _t1081, _t1082, _t1083];
        tensor[4,4] _t1085 = [_t1075, _t107A, _t107F, _t1084];
        real _t1086 = 0.1e1;
        real _t1087 = 0.e0;
        real _t1088 = 0.e0;
        real _t1089 = 0.e0;
        vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
        real _t108B = 0.e0;
        real _t108C = 0.1e1;
        real _t108D = 0.e0;
        real _t108E = 0.e0;
        vec4 _t108F = [_t108B, _t108C, _t108D, _t108E];
        real _t1090 = 0.e0;
        real _t1091 = 0.e0;
        real _t1092 = 0.1e1;
        real _t1093 = 0.e0;
        vec4 _t1094 = [_t1090, _t1091, _t1092, _t1093];
        real _t1095 = 0.e0;
        real _t1096 = 0.e0;
        real _t1097 = 0.e0;
        real _t1098 = 0.1e1;
        vec4 _t1099 = [_t1095, _t1096, _t1097, _t1098];
        tensor[4,4] _t109A = [_t108A, _t108F, _t1094, _t1099];
        real _t109B = 0.e0;
        real _t109C = 0.1e1;
        real _t109D = 0.e0;
        real _t109E = 0.e0;
        vec4 _t109F = [_t109B, _t109C, _t109D, _t109E];
        real _t10A0 = -0.1e1;
        real _t10A1 = 0.e0;
        real _t10A2 = 0.e0;
        real _t10A3 = 0.e0;
        vec4 _t10A4 = [_t10A0, _t10A1, _t10A2, _t10A3];
        real _t10A5 = 0.e0;
        real _t10A6 = 0.e0;
        real _t10A7 = 0.1e1;
        real _t10A8 = 0.e0;
        vec4 _t10A9 = [_t10A5, _t10A6, _t10A7, _t10A8];
        real _t10AA = 0.e0;
        real _t10AB = 0.e0;
        real _t10AC = 0.e0;
        real _t10AD = 0.1e1;
        vec4 _t10AE = [_t10AA, _t10AB, _t10AC, _t10AD];
        tensor[4,4] _t10AF = [_t109F, _t10A4, _t10A9, _t10AE];
        real _t10B0 = 0.e0;
        real _t10B1 = 0.1e1;
        real _t10B2 = 0.e0;
        real _t10B3 = 0.e0;
        vec4 _t10B4 = [_t10B0, _t10B1, _t10B2, _t10B3];
        real _t10B5 = 0.e0;
        real _t10B6 = 0.e0;
        real _t10B7 = 0.1e1;
        real _t10B8 = 0.e0;
        vec4 _t10B9 = [_t10B5, _t10B6, _t10B7, _t10B8];
        real _t10BA = 0.1e1;
        real _t10BB = 0.e0;
        real _t10BC = 0.e0;
        real _t10BD = 0.e0;
        vec4 _t10BE = [_t10BA, _t10BB, _t10BC, _t10BD];
        real _t10BF = 0.e0;
        real _t10C0 = 0.e0;
        real _t10C1 = 0.e0;
        real _t10C2 = 0.1e1;
        vec4 _t10C3 = [_t10BF, _t10C0, _t10C1, _t10C2];
        tensor[4,4] _t10C4 = [_t10B4, _t10B9, _t10BE, _t10C3];
        tensor[4,4][4] _t10C5 = {_t1085, _t109A, _t10AF, _t10C4};
        real _t10C6 = -0.1e1;
        real _t10C7 = -0.57735026919e0;
        real _t10C8 = -0.1e1;
        real _t10C9 = 0.1e1;
        vec4 _t10CA = [_t10C6, _t10C7, _t10C8, _t10C9];
        real _t10CB = 0.1e1;
        real _t10CC = -0.57735026919e0;
        real _t10CD = 0.e0;
        real _t10CE = 0.e0;
        vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
        real _t10D0 = 0.e0;
        real _t10D1 = -0.57735026919e0;
        real _t10D2 = 0.1e1;
        real _t10D3 = 0.e0;
        vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
        real _t10D5 = 0.e0;
        real _t10D6 = 0.e0;
        real _t10D7 = 0.e0;
        real _t10D8 = 0.1e1;
        vec4 _t10D9 = [_t10D5, _t10D6, _t10D7, _t10D8];
        tensor[4,4] _t10DA = [_t10CA, _t10CF, _t10D4, _t10D9];
        real _t10DB = 0.e0;
        real _t10DC = -0.1e1;
        real _t10DD = 0.e0;
        real _t10DE = 0.e0;
        vec4 _t10DF = [_t10DB, _t10DC, _t10DD, _t10DE];
        real _t10E0 = 0.1e1;
        real _t10E1 = 0.e0;
        real _t10E2 = 0.e0;
        real _t10E3 = 0.e0;
        vec4 _t10E4 = [_t10E0, _t10E1, _t10E2, _t10E3];
        real _t10E5 = 0.e0;
        real _t10E6 = 0.e0;
        real _t10E7 = 0.1e1;
        real _t10E8 = 0.e0;
        vec4 _t10E9 = [_t10E5, _t10E6, _t10E7, _t10E8];
        real _t10EA = 0.e0;
        real _t10EB = 0.e0;
        real _t10EC = 0.e0;
        real _t10ED = 0.1e1;
        vec4 _t10EE = [_t10EA, _t10EB, _t10EC, _t10ED];
        tensor[4,4] _t10EF = [_t10DF, _t10E4, _t10E9, _t10EE];
        real _t10F0 = 0.1e1;
        real _t10F1 = 0.e0;
        real _t10F2 = 0.e0;
        real _t10F3 = 0.e0;
        vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
        real _t10F5 = 0.e0;
        real _t10F6 = 0.1e1;
        real _t10F7 = 0.e0;
        real _t10F8 = 0.e0;
        vec4 _t10F9 = [_t10F5, _t10F6, _t10F7, _t10F8];
        real _t10FA = 0.e0;
        real _t10FB = 0.e0;
        real _t10FC = 0.1e1;
        real _t10FD = 0.e0;
        vec4 _t10FE = [_t10FA, _t10FB, _t10FC, _t10FD];
        real _t10FF = 0.e0;
        real _t1100 = 0.e0;
        real _t1101 = 0.e0;
        real _t1102 = 0.1e1;
        vec4 _t1103 = [_t10FF, _t1100, _t1101, _t1102];
        tensor[4,4] _t1104 = [_t10F4, _t10F9, _t10FE, _t1103];
        real _t1105 = 0.1e1;
        real _t1106 = 0.e0;
        real _t1107 = 0.e0;
        real _t1108 = 0.e0;
        vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
        real _t110A = 0.e0;
        real _t110B = 0.e0;
        real _t110C = 0.1e1;
        real _t110D = 0.e0;
        vec4 _t110E = [_t110A, _t110B, _t110C, _t110D];
        real _t110F = 0.e0;
        real _t1110 = -0.1e1;
        real _t1111 = 0.e0;
        real _t1112 = 0.e0;
        vec4 _t1113 = [_t110F, _t1110, _t1111, _t1112];
        real _t1114 = 0.e0;
        real _t1115 = 0.e0;
        real _t1116 = 0.e0;
        real _t1117 = 0.1e1;
        vec4 _t1118 = [_t1114, _t1115, _t1116, _t1117];
        tensor[4,4] _t1119 = [_t1109, _t110E, _t1113, _t1118];
        tensor[4,4][4] _t111A = {_t10DA, _t10EF, _t1104, _t1119};
        real _t111B = -0.1e1;
        real _t111C = -0.1e1;
        real _t111D = 0.57735026919e0;
        real _t111E = 0.1e1;
        vec4 _t111F = [_t111B, _t111C, _t111D, _t111E];
        real _t1120 = 0.1e1;
        real _t1121 = 0.e0;
        real _t1122 = 0.57735026919e0;
        real _t1123 = 0.e0;
        vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
        real _t1125 = 0.e0;
        real _t1126 = 0.1e1;
        real _t1127 = 0.57735026919e0;
        real _t1128 = 0.e0;
        vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
        real _t112A = 0.e0;
        real _t112B = 0.e0;
        real _t112C = 0.e0;
        real _t112D = 0.1e1;
        vec4 _t112E = [_t112A, _t112B, _t112C, _t112D];
        tensor[4,4] _t112F = [_t111F, _t1124, _t1129, _t112E];
        real _t1130 = 0.e0;
        real _t1131 = 0.e0;
        real _t1132 = 0.1e1;
        real _t1133 = 0.e0;
        vec4 _t1134 = [_t1130, _t1131, _t1132, _t1133];
        real _t1135 = 0.1e1;
        real _t1136 = 0.e0;
        real _t1137 = 0.e0;
        real _t1138 = 0.e0;
        vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
        real _t113A = 0.e0;
        real _t113B = 0.1e1;
        real _t113C = 0.e0;
        real _t113D = 0.e0;
        vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
        real _t113F = 0.e0;
        real _t1140 = 0.e0;
        real _t1141 = 0.e0;
        real _t1142 = 0.1e1;
        vec4 _t1143 = [_t113F, _t1140, _t1141, _t1142];
        tensor[4,4] _t1144 = [_t1134, _t1139, _t113E, _t1143];
        real _t1145 = 0.1e1;
        real _t1146 = 0.e0;
        real _t1147 = 0.e0;
        real _t1148 = 0.e0;
        vec4 _t1149 = [_t1145, _t1146, _t1147, _t1148];
        real _t114A = 0.e0;
        real _t114B = 0.e0;
        real _t114C = -0.1e1;
        real _t114D = 0.e0;
        vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
        real _t114F = 0.e0;
        real _t1150 = 0.1e1;
        real _t1151 = 0.e0;
        real _t1152 = 0.e0;
        vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
        real _t1154 = 0.e0;
        real _t1155 = 0.e0;
        real _t1156 = 0.e0;
        real _t1157 = 0.1e1;
        vec4 _t1158 = [_t1154, _t1155, _t1156, _t1157];
        tensor[4,4] _t1159 = [_t1149, _t114E, _t1153, _t1158];
        real _t115A = 0.1e1;
        real _t115B = 0.e0;
        real _t115C = 0.e0;
        real _t115D = 0.e0;
        vec4 _t115E = [_t115A, _t115B, _t115C, _t115D];
        real _t115F = 0.e0;
        real _t1160 = 0.1e1;
        real _t1161 = 0.e0;
        real _t1162 = 0.e0;
        vec4 _t1163 = [_t115F, _t1160, _t1161, _t1162];
        real _t1164 = 0.e0;
        real _t1165 = 0.e0;
        real _t1166 = 0.1e1;
        real _t1167 = 0.e0;
        vec4 _t1168 = [_t1164, _t1165, _t1166, _t1167];
        real _t1169 = 0.e0;
        real _t116A = 0.e0;
        real _t116B = 0.e0;
        real _t116C = 0.1e1;
        vec4 _t116D = [_t1169, _t116A, _t116B, _t116C];
        tensor[4,4] _t116E = [_t115E, _t1163, _t1168, _t116D];
        tensor[4,4][4] _t116F = {_t112F, _t1144, _t1159, _t116E};
        tensor[4,4][4][4] _t1170 = {_t1070, _t10C5, _t111A, _t116F};
        real _t1171 = _t0E3A[1];
        int _t1172 = prim $r2i01B7 (_t1171);
        tensor[4,4][4] _t1173 = prim $sub01C0<tensor[4,4][4]; %4> (_t1170, _t1172);
        real _t1174 = _t0E3A[1];
        int _t1175 = prim $r2i01B7 (_t1174);
        int[2] _t1176 = func nextCell4048A (_t1175, _t0E36, _t0E35);
        int _t1177 = 1;
        int _t1178 = prim $sub01C0<int; %2> (_t1176, _t1177);
        tensor[4,4] _t1179 = prim $sub01C0<tensor[4,4]; %4> (_t1173, _t1178);
        real _t117A = _t0E3A[0];
        vec3 _t117B = prim *0036<$[3]> (_t117A, deltaP0E00);
        vec3 _t117C = prim +0017<$[3]> (_t117B, _t0E37);
        real _t117D = _t117C[0];
        real _t117E = _t0E3A[0];
        vec3 _t117F = prim *0036<$[3]> (_t117E, deltaP0E00);
        vec3 _t1180 = prim +0017<$[3]> (_t117F, _t0E37);
        real _t1181 = _t1180[1];
        real _t1182 = _t0E3A[0];
        vec3 _t1183 = prim *0036<$[3]> (_t1182, deltaP0E00);
        vec3 _t1184 = prim +0017<$[3]> (_t1183, _t0E37);
        real _t1185 = _t1184[2];
        real _t1186 = 0.1e1;
        vec4 _t1187 = [_t117D, _t1181, _t1185, _t1186];
        vec4 _t1188 = prim •00CE<$[4,4]; $[4]; $[4]> (_t1179, _t1187);
        real _t1189 = _t1188[0];
        real _t118A = 0.1e1;
        real _t118B = 0.e0;
        real _t118C = 0.e0;
        real _t118D = 0.e0;
        vec4 _t118E = [_t118A, _t118B, _t118C, _t118D];
        real _t118F = 0.e0;
        real _t1190 = 0.1e1;
        real _t1191 = 0.e0;
        real _t1192 = 0.e0;
        vec4 _t1193 = [_t118F, _t1190, _t1191, _t1192];
        real _t1194 = 0.e0;
        real _t1195 = 0.e0;
        real _t1196 = 0.1e1;
        real _t1197 = 0.e0;
        vec4 _t1198 = [_t1194, _t1195, _t1196, _t1197];
        real _t1199 = 0.971445146547e-16;
        real _t119A = 0.e0;
        real _t119B = 0.e0;
        real _t119C = 0.1e1;
        vec4 _t119D = [_t1199, _t119A, _t119B, _t119C];
        tensor[4,4] _t119E = [_t118E, _t1193, _t1198, _t119D];
        real _t119F = 0.57735026919e0;
        real _t11A0 = 0.57735026919e0;
        real _t11A1 = 0.57735026919e0;
        real _t11A2 = -0.57735026919e0;
        vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
        real _t11A4 = -0.333333333333e0;
        real _t11A5 = 0.666666666667e0;
        real _t11A6 = -0.333333333333e0;
        real _t11A7 = 0.333333333333e0;
        vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
        real _t11A9 = -0.333333333333e0;
        real _t11AA = -0.333333333333e0;
        real _t11AB = 0.666666666667e0;
        real _t11AC = 0.333333333333e0;
        vec4 _t11AD = [_t11A9, _t11AA, _t11AB, _t11AC];
        real _t11AE = 0.971445146547e-16;
        real _t11AF = 0.e0;
        real _t11B0 = 0.e0;
        real _t11B1 = 0.1e1;
        vec4 _t11B2 = [_t11AE, _t11AF, _t11B0, _t11B1];
        tensor[4,4] _t11B3 = [_t11A3, _t11A8, _t11AD, _t11B2];
        real _t11B4 = -0.333333333333e0;
        real _t11B5 = 0.666666666667e0;
        real _t11B6 = -0.333333333333e0;
        real _t11B7 = 0.333333333333e0;
        vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
        real _t11B9 = -0.57735026919e0;
        real _t11BA = -0.57735026919e0;
        real _t11BB = -0.57735026919e0;
        real _t11BC = 0.57735026919e0;
        vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
        real _t11BE = -0.333333333333e0;
        real _t11BF = -0.333333333333e0;
        real _t11C0 = 0.666666666667e0;
        real _t11C1 = 0.333333333333e0;
        vec4 _t11C2 = [_t11BE, _t11BF, _t11C0, _t11C1];
        real _t11C3 = 0.971445146547e-16;
        real _t11C4 = 0.e0;
        real _t11C5 = 0.e0;
        real _t11C6 = 0.1e1;
        vec4 _t11C7 = [_t11C3, _t11C4, _t11C5, _t11C6];
        tensor[4,4] _t11C8 = [_t11B8, _t11BD, _t11C2, _t11C7];
        real _t11C9 = -0.333333333333e0;
        real _t11CA = 0.666666666667e0;
        real _t11CB = -0.333333333333e0;
        real _t11CC = 0.333333333333e0;
        vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
        real _t11CE = -0.333333333333e0;
        real _t11CF = -0.333333333333e0;
        real _t11D0 = 0.666666666667e0;
        real _t11D1 = 0.333333333333e0;
        vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
        real _t11D3 = 0.57735026919e0;
        real _t11D4 = 0.57735026919e0;
        real _t11D5 = 0.57735026919e0;
        real _t11D6 = -0.57735026919e0;
        vec4 _t11D7 = [_t11D3, _t11D4, _t11D5, _t11D6];
        real _t11D8 = 0.971445146547e-16;
        real _t11D9 = 0.e0;
        real _t11DA = 0.e0;
        real _t11DB = 0.1e1;
        vec4 _t11DC = [_t11D8, _t11D9, _t11DA, _t11DB];
        tensor[4,4] _t11DD = [_t11CD, _t11D2, _t11D7, _t11DC];
        tensor[4,4][4] _t11DE = {_t119E, _t11B3, _t11C8, _t11DD};
        real _t11DF = 0.57735026919e0;
        real _t11E0 = -0.1e1;
        real _t11E1 = -0.1e1;
        real _t11E2 = 0.1e1;
        vec4 _t11E3 = [_t11DF, _t11E0, _t11E1, _t11E2];
        real _t11E4 = 0.57735026919e0;
        real _t11E5 = 0.1e1;
        real _t11E6 = 0.e0;
        real _t11E7 = 0.e0;
        vec4 _t11E8 = [_t11E4, _t11E5, _t11E6, _t11E7];
        real _t11E9 = 0.57735026919e0;
        real _t11EA = 0.e0;
        real _t11EB = 0.1e1;
        real _t11EC = 0.e0;
        vec4 _t11ED = [_t11E9, _t11EA, _t11EB, _t11EC];
        real _t11EE = 0.e0;
        real _t11EF = 0.e0;
        real _t11F0 = 0.e0;
        real _t11F1 = 0.1e1;
        vec4 _t11F2 = [_t11EE, _t11EF, _t11F0, _t11F1];
        tensor[4,4] _t11F3 = [_t11E3, _t11E8, _t11ED, _t11F2];
        real _t11F4 = 0.1e1;
        real _t11F5 = 0.e0;
        real _t11F6 = 0.e0;
        real _t11F7 = 0.e0;
        vec4 _t11F8 = [_t11F4, _t11F5, _t11F6, _t11F7];
        real _t11F9 = 0.e0;
        real _t11FA = 0.1e1;
        real _t11FB = 0.e0;
        real _t11FC = 0.e0;
        vec4 _t11FD = [_t11F9, _t11FA, _t11FB, _t11FC];
        real _t11FE = 0.e0;
        real _t11FF = 0.e0;
        real _t1200 = 0.1e1;
        real _t1201 = 0.e0;
        vec4 _t1202 = [_t11FE, _t11FF, _t1200, _t1201];
        real _t1203 = 0.e0;
        real _t1204 = 0.e0;
        real _t1205 = 0.e0;
        real _t1206 = 0.1e1;
        vec4 _t1207 = [_t1203, _t1204, _t1205, _t1206];
        tensor[4,4] _t1208 = [_t11F8, _t11FD, _t1202, _t1207];
        real _t1209 = 0.e0;
        real _t120A = 0.1e1;
        real _t120B = 0.e0;
        real _t120C = 0.e0;
        vec4 _t120D = [_t1209, _t120A, _t120B, _t120C];
        real _t120E = -0.1e1;
        real _t120F = 0.e0;
        real _t1210 = 0.e0;
        real _t1211 = 0.e0;
        vec4 _t1212 = [_t120E, _t120F, _t1210, _t1211];
        real _t1213 = 0.e0;
        real _t1214 = 0.e0;
        real _t1215 = 0.1e1;
        real _t1216 = 0.e0;
        vec4 _t1217 = [_t1213, _t1214, _t1215, _t1216];
        real _t1218 = 0.e0;
        real _t1219 = 0.e0;
        real _t121A = 0.e0;
        real _t121B = 0.1e1;
        vec4 _t121C = [_t1218, _t1219, _t121A, _t121B];
        tensor[4,4] _t121D = [_t120D, _t1212, _t1217, _t121C];
        real _t121E = 0.e0;
        real _t121F = 0.1e1;
        real _t1220 = 0.e0;
        real _t1221 = 0.e0;
        vec4 _t1222 = [_t121E, _t121F, _t1220, _t1221];
        real _t1223 = 0.e0;
        real _t1224 = 0.e0;
        real _t1225 = 0.1e1;
        real _t1226 = 0.e0;
        vec4 _t1227 = [_t1223, _t1224, _t1225, _t1226];
        real _t1228 = 0.1e1;
        real _t1229 = 0.e0;
        real _t122A = 0.e0;
        real _t122B = 0.e0;
        vec4 _t122C = [_t1228, _t1229, _t122A, _t122B];
        real _t122D = 0.e0;
        real _t122E = 0.e0;
        real _t122F = 0.e0;
        real _t1230 = 0.1e1;
        vec4 _t1231 = [_t122D, _t122E, _t122F, _t1230];
        tensor[4,4] _t1232 = [_t1222, _t1227, _t122C, _t1231];
        tensor[4,4][4] _t1233 = {_t11F3, _t1208, _t121D, _t1232};
        real _t1234 = -0.1e1;
        real _t1235 = -0.57735026919e0;
        real _t1236 = -0.1e1;
        real _t1237 = 0.1e1;
        vec4 _t1238 = [_t1234, _t1235, _t1236, _t1237];
        real _t1239 = 0.1e1;
        real _t123A = -0.57735026919e0;
        real _t123B = 0.e0;
        real _t123C = 0.e0;
        vec4 _t123D = [_t1239, _t123A, _t123B, _t123C];
        real _t123E = 0.e0;
        real _t123F = -0.57735026919e0;
        real _t1240 = 0.1e1;
        real _t1241 = 0.e0;
        vec4 _t1242 = [_t123E, _t123F, _t1240, _t1241];
        real _t1243 = 0.e0;
        real _t1244 = 0.e0;
        real _t1245 = 0.e0;
        real _t1246 = 0.1e1;
        vec4 _t1247 = [_t1243, _t1244, _t1245, _t1246];
        tensor[4,4] _t1248 = [_t1238, _t123D, _t1242, _t1247];
        real _t1249 = 0.e0;
        real _t124A = -0.1e1;
        real _t124B = 0.e0;
        real _t124C = 0.e0;
        vec4 _t124D = [_t1249, _t124A, _t124B, _t124C];
        real _t124E = 0.1e1;
        real _t124F = 0.e0;
        real _t1250 = 0.e0;
        real _t1251 = 0.e0;
        vec4 _t1252 = [_t124E, _t124F, _t1250, _t1251];
        real _t1253 = 0.e0;
        real _t1254 = 0.e0;
        real _t1255 = 0.1e1;
        real _t1256 = 0.e0;
        vec4 _t1257 = [_t1253, _t1254, _t1255, _t1256];
        real _t1258 = 0.e0;
        real _t1259 = 0.e0;
        real _t125A = 0.e0;
        real _t125B = 0.1e1;
        vec4 _t125C = [_t1258, _t1259, _t125A, _t125B];
        tensor[4,4] _t125D = [_t124D, _t1252, _t1257, _t125C];
        real _t125E = 0.1e1;
        real _t125F = 0.e0;
        real _t1260 = 0.e0;
        real _t1261 = 0.e0;
        vec4 _t1262 = [_t125E, _t125F, _t1260, _t1261];
        real _t1263 = 0.e0;
        real _t1264 = 0.1e1;
        real _t1265 = 0.e0;
        real _t1266 = 0.e0;
        vec4 _t1267 = [_t1263, _t1264, _t1265, _t1266];
        real _t1268 = 0.e0;
        real _t1269 = 0.e0;
        real _t126A = 0.1e1;
        real _t126B = 0.e0;
        vec4 _t126C = [_t1268, _t1269, _t126A, _t126B];
        real _t126D = 0.e0;
        real _t126E = 0.e0;
        real _t126F = 0.e0;
        real _t1270 = 0.1e1;
        vec4 _t1271 = [_t126D, _t126E, _t126F, _t1270];
        tensor[4,4] _t1272 = [_t1262, _t1267, _t126C, _t1271];
        real _t1273 = 0.1e1;
        real _t1274 = 0.e0;
        real _t1275 = 0.e0;
        real _t1276 = 0.e0;
        vec4 _t1277 = [_t1273, _t1274, _t1275, _t1276];
        real _t1278 = 0.e0;
        real _t1279 = 0.e0;
        real _t127A = 0.1e1;
        real _t127B = 0.e0;
        vec4 _t127C = [_t1278, _t1279, _t127A, _t127B];
        real _t127D = 0.e0;
        real _t127E = -0.1e1;
        real _t127F = 0.e0;
        real _t1280 = 0.e0;
        vec4 _t1281 = [_t127D, _t127E, _t127F, _t1280];
        real _t1282 = 0.e0;
        real _t1283 = 0.e0;
        real _t1284 = 0.e0;
        real _t1285 = 0.1e1;
        vec4 _t1286 = [_t1282, _t1283, _t1284, _t1285];
        tensor[4,4] _t1287 = [_t1277, _t127C, _t1281, _t1286];
        tensor[4,4][4] _t1288 = {_t1248, _t125D, _t1272, _t1287};
        real _t1289 = -0.1e1;
        real _t128A = -0.1e1;
        real _t128B = 0.57735026919e0;
        real _t128C = 0.1e1;
        vec4 _t128D = [_t1289, _t128A, _t128B, _t128C];
        real _t128E = 0.1e1;
        real _t128F = 0.e0;
        real _t1290 = 0.57735026919e0;
        real _t1291 = 0.e0;
        vec4 _t1292 = [_t128E, _t128F, _t1290, _t1291];
        real _t1293 = 0.e0;
        real _t1294 = 0.1e1;
        real _t1295 = 0.57735026919e0;
        real _t1296 = 0.e0;
        vec4 _t1297 = [_t1293, _t1294, _t1295, _t1296];
        real _t1298 = 0.e0;
        real _t1299 = 0.e0;
        real _t129A = 0.e0;
        real _t129B = 0.1e1;
        vec4 _t129C = [_t1298, _t1299, _t129A, _t129B];
        tensor[4,4] _t129D = [_t128D, _t1292, _t1297, _t129C];
        real _t129E = 0.e0;
        real _t129F = 0.e0;
        real _t12A0 = 0.1e1;
        real _t12A1 = 0.e0;
        vec4 _t12A2 = [_t129E, _t129F, _t12A0, _t12A1];
        real _t12A3 = 0.1e1;
        real _t12A4 = 0.e0;
        real _t12A5 = 0.e0;
        real _t12A6 = 0.e0;
        vec4 _t12A7 = [_t12A3, _t12A4, _t12A5, _t12A6];
        real _t12A8 = 0.e0;
        real _t12A9 = 0.1e1;
        real _t12AA = 0.e0;
        real _t12AB = 0.e0;
        vec4 _t12AC = [_t12A8, _t12A9, _t12AA, _t12AB];
        real _t12AD = 0.e0;
        real _t12AE = 0.e0;
        real _t12AF = 0.e0;
        real _t12B0 = 0.1e1;
        vec4 _t12B1 = [_t12AD, _t12AE, _t12AF, _t12B0];
        tensor[4,4] _t12B2 = [_t12A2, _t12A7, _t12AC, _t12B1];
        real _t12B3 = 0.1e1;
        real _t12B4 = 0.e0;
        real _t12B5 = 0.e0;
        real _t12B6 = 0.e0;
        vec4 _t12B7 = [_t12B3, _t12B4, _t12B5, _t12B6];
        real _t12B8 = 0.e0;
        real _t12B9 = 0.e0;
        real _t12BA = -0.1e1;
        real _t12BB = 0.e0;
        vec4 _t12BC = [_t12B8, _t12B9, _t12BA, _t12BB];
        real _t12BD = 0.e0;
        real _t12BE = 0.1e1;
        real _t12BF = 0.e0;
        real _t12C0 = 0.e0;
        vec4 _t12C1 = [_t12BD, _t12BE, _t12BF, _t12C0];
        real _t12C2 = 0.e0;
        real _t12C3 = 0.e0;
        real _t12C4 = 0.e0;
        real _t12C5 = 0.1e1;
        vec4 _t12C6 = [_t12C2, _t12C3, _t12C4, _t12C5];
        tensor[4,4] _t12C7 = [_t12B7, _t12BC, _t12C1, _t12C6];
        real _t12C8 = 0.1e1;
        real _t12C9 = 0.e0;
        real _t12CA = 0.e0;
        real _t12CB = 0.e0;
        vec4 _t12CC = [_t12C8, _t12C9, _t12CA, _t12CB];
        real _t12CD = 0.e0;
        real _t12CE = 0.1e1;
        real _t12CF = 0.e0;
        real _t12D0 = 0.e0;
        vec4 _t12D1 = [_t12CD, _t12CE, _t12CF, _t12D0];
        real _t12D2 = 0.e0;
        real _t12D3 = 0.e0;
        real _t12D4 = 0.1e1;
        real _t12D5 = 0.e0;
        vec4 _t12D6 = [_t12D2, _t12D3, _t12D4, _t12D5];
        real _t12D7 = 0.e0;
        real _t12D8 = 0.e0;
        real _t12D9 = 0.e0;
        real _t12DA = 0.1e1;
        vec4 _t12DB = [_t12D7, _t12D8, _t12D9, _t12DA];
        tensor[4,4] _t12DC = [_t12CC, _t12D1, _t12D6, _t12DB];
        tensor[4,4][4] _t12DD = {_t129D, _t12B2, _t12C7, _t12DC};
        tensor[4,4][4][4] _t12DE = {_t11DE, _t1233, _t1288, _t12DD};
        real _t12DF = _t0E3A[1];
        int _t12E0 = prim $r2i01B7 (_t12DF);
        tensor[4,4][4] _t12E1 = prim $sub01C0<tensor[4,4][4]; %4> (_t12DE, _t12E0);
        real _t12E2 = _t0E3A[1];
        int _t12E3 = prim $r2i01B7 (_t12E2);
        int[2] _t12E4 = func nextCell4048A (_t12E3, _t0E36, _t0E35);
        int _t12E5 = 1;
        int _t12E6 = prim $sub01C0<int; %2> (_t12E4, _t12E5);
        tensor[4,4] _t12E7 = prim $sub01C0<tensor[4,4]; %4> (_t12E1, _t12E6);
        real _t12E8 = _t0E3A[0];
        vec3 _t12E9 = prim *0036<$[3]> (_t12E8, deltaP0E00);
        vec3 _t12EA = prim +0017<$[3]> (_t12E9, _t0E37);
        real _t12EB = _t12EA[0];
        real _t12EC = _t0E3A[0];
        vec3 _t12ED = prim *0036<$[3]> (_t12EC, deltaP0E00);
        vec3 _t12EE = prim +0017<$[3]> (_t12ED, _t0E37);
        real _t12EF = _t12EE[1];
        real _t12F0 = _t0E3A[0];
        vec3 _t12F1 = prim *0036<$[3]> (_t12F0, deltaP0E00);
        vec3 _t12F2 = prim +0017<$[3]> (_t12F1, _t0E37);
        real _t12F3 = _t12F2[2];
        real _t12F4 = 0.1e1;
        vec4 _t12F5 = [_t12EB, _t12EF, _t12F3, _t12F4];
        vec4 _t12F6 = prim •00CE<$[4,4]; $[4]; $[4]> (_t12E7, _t12F5);
        real _t12F7 = _t12F6[1];
        real _t12F8 = 0.1e1;
        real _t12F9 = 0.e0;
        real _t12FA = 0.e0;
        real _t12FB = 0.e0;
        vec4 _t12FC = [_t12F8, _t12F9, _t12FA, _t12FB];
        real _t12FD = 0.e0;
        real _t12FE = 0.1e1;
        real _t12FF = 0.e0;
        real _t1300 = 0.e0;
        vec4 _t1301 = [_t12FD, _t12FE, _t12FF, _t1300];
        real _t1302 = 0.e0;
        real _t1303 = 0.e0;
        real _t1304 = 0.1e1;
        real _t1305 = 0.e0;
        vec4 _t1306 = [_t1302, _t1303, _t1304, _t1305];
        real _t1307 = 0.971445146547e-16;
        real _t1308 = 0.e0;
        real _t1309 = 0.e0;
        real _t130A = 0.1e1;
        vec4 _t130B = [_t1307, _t1308, _t1309, _t130A];
        tensor[4,4] _t130C = [_t12FC, _t1301, _t1306, _t130B];
        real _t130D = 0.57735026919e0;
        real _t130E = 0.57735026919e0;
        real _t130F = 0.57735026919e0;
        real _t1310 = -0.57735026919e0;
        vec4 _t1311 = [_t130D, _t130E, _t130F, _t1310];
        real _t1312 = -0.333333333333e0;
        real _t1313 = 0.666666666667e0;
        real _t1314 = -0.333333333333e0;
        real _t1315 = 0.333333333333e0;
        vec4 _t1316 = [_t1312, _t1313, _t1314, _t1315];
        real _t1317 = -0.333333333333e0;
        real _t1318 = -0.333333333333e0;
        real _t1319 = 0.666666666667e0;
        real _t131A = 0.333333333333e0;
        vec4 _t131B = [_t1317, _t1318, _t1319, _t131A];
        real _t131C = 0.971445146547e-16;
        real _t131D = 0.e0;
        real _t131E = 0.e0;
        real _t131F = 0.1e1;
        vec4 _t1320 = [_t131C, _t131D, _t131E, _t131F];
        tensor[4,4] _t1321 = [_t1311, _t1316, _t131B, _t1320];
        real _t1322 = -0.333333333333e0;
        real _t1323 = 0.666666666667e0;
        real _t1324 = -0.333333333333e0;
        real _t1325 = 0.333333333333e0;
        vec4 _t1326 = [_t1322, _t1323, _t1324, _t1325];
        real _t1327 = -0.57735026919e0;
        real _t1328 = -0.57735026919e0;
        real _t1329 = -0.57735026919e0;
        real _t132A = 0.57735026919e0;
        vec4 _t132B = [_t1327, _t1328, _t1329, _t132A];
        real _t132C = -0.333333333333e0;
        real _t132D = -0.333333333333e0;
        real _t132E = 0.666666666667e0;
        real _t132F = 0.333333333333e0;
        vec4 _t1330 = [_t132C, _t132D, _t132E, _t132F];
        real _t1331 = 0.971445146547e-16;
        real _t1332 = 0.e0;
        real _t1333 = 0.e0;
        real _t1334 = 0.1e1;
        vec4 _t1335 = [_t1331, _t1332, _t1333, _t1334];
        tensor[4,4] _t1336 = [_t1326, _t132B, _t1330, _t1335];
        real _t1337 = -0.333333333333e0;
        real _t1338 = 0.666666666667e0;
        real _t1339 = -0.333333333333e0;
        real _t133A = 0.333333333333e0;
        vec4 _t133B = [_t1337, _t1338, _t1339, _t133A];
        real _t133C = -0.333333333333e0;
        real _t133D = -0.333333333333e0;
        real _t133E = 0.666666666667e0;
        real _t133F = 0.333333333333e0;
        vec4 _t1340 = [_t133C, _t133D, _t133E, _t133F];
        real _t1341 = 0.57735026919e0;
        real _t1342 = 0.57735026919e0;
        real _t1343 = 0.57735026919e0;
        real _t1344 = -0.57735026919e0;
        vec4 _t1345 = [_t1341, _t1342, _t1343, _t1344];
        real _t1346 = 0.971445146547e-16;
        real _t1347 = 0.e0;
        real _t1348 = 0.e0;
        real _t1349 = 0.1e1;
        vec4 _t134A = [_t1346, _t1347, _t1348, _t1349];
        tensor[4,4] _t134B = [_t133B, _t1340, _t1345, _t134A];
        tensor[4,4][4] _t134C = {_t130C, _t1321, _t1336, _t134B};
        real _t134D = 0.57735026919e0;
        real _t134E = -0.1e1;
        real _t134F = -0.1e1;
        real _t1350 = 0.1e1;
        vec4 _t1351 = [_t134D, _t134E, _t134F, _t1350];
        real _t1352 = 0.57735026919e0;
        real _t1353 = 0.1e1;
        real _t1354 = 0.e0;
        real _t1355 = 0.e0;
        vec4 _t1356 = [_t1352, _t1353, _t1354, _t1355];
        real _t1357 = 0.57735026919e0;
        real _t1358 = 0.e0;
        real _t1359 = 0.1e1;
        real _t135A = 0.e0;
        vec4 _t135B = [_t1357, _t1358, _t1359, _t135A];
        real _t135C = 0.e0;
        real _t135D = 0.e0;
        real _t135E = 0.e0;
        real _t135F = 0.1e1;
        vec4 _t1360 = [_t135C, _t135D, _t135E, _t135F];
        tensor[4,4] _t1361 = [_t1351, _t1356, _t135B, _t1360];
        real _t1362 = 0.1e1;
        real _t1363 = 0.e0;
        real _t1364 = 0.e0;
        real _t1365 = 0.e0;
        vec4 _t1366 = [_t1362, _t1363, _t1364, _t1365];
        real _t1367 = 0.e0;
        real _t1368 = 0.1e1;
        real _t1369 = 0.e0;
        real _t136A = 0.e0;
        vec4 _t136B = [_t1367, _t1368, _t1369, _t136A];
        real _t136C = 0.e0;
        real _t136D = 0.e0;
        real _t136E = 0.1e1;
        real _t136F = 0.e0;
        vec4 _t1370 = [_t136C, _t136D, _t136E, _t136F];
        real _t1371 = 0.e0;
        real _t1372 = 0.e0;
        real _t1373 = 0.e0;
        real _t1374 = 0.1e1;
        vec4 _t1375 = [_t1371, _t1372, _t1373, _t1374];
        tensor[4,4] _t1376 = [_t1366, _t136B, _t1370, _t1375];
        real _t1377 = 0.e0;
        real _t1378 = 0.1e1;
        real _t1379 = 0.e0;
        real _t137A = 0.e0;
        vec4 _t137B = [_t1377, _t1378, _t1379, _t137A];
        real _t137C = -0.1e1;
        real _t137D = 0.e0;
        real _t137E = 0.e0;
        real _t137F = 0.e0;
        vec4 _t1380 = [_t137C, _t137D, _t137E, _t137F];
        real _t1381 = 0.e0;
        real _t1382 = 0.e0;
        real _t1383 = 0.1e1;
        real _t1384 = 0.e0;
        vec4 _t1385 = [_t1381, _t1382, _t1383, _t1384];
        real _t1386 = 0.e0;
        real _t1387 = 0.e0;
        real _t1388 = 0.e0;
        real _t1389 = 0.1e1;
        vec4 _t138A = [_t1386, _t1387, _t1388, _t1389];
        tensor[4,4] _t138B = [_t137B, _t1380, _t1385, _t138A];
        real _t138C = 0.e0;
        real _t138D = 0.1e1;
        real _t138E = 0.e0;
        real _t138F = 0.e0;
        vec4 _t1390 = [_t138C, _t138D, _t138E, _t138F];
        real _t1391 = 0.e0;
        real _t1392 = 0.e0;
        real _t1393 = 0.1e1;
        real _t1394 = 0.e0;
        vec4 _t1395 = [_t1391, _t1392, _t1393, _t1394];
        real _t1396 = 0.1e1;
        real _t1397 = 0.e0;
        real _t1398 = 0.e0;
        real _t1399 = 0.e0;
        vec4 _t139A = [_t1396, _t1397, _t1398, _t1399];
        real _t139B = 0.e0;
        real _t139C = 0.e0;
        real _t139D = 0.e0;
        real _t139E = 0.1e1;
        vec4 _t139F = [_t139B, _t139C, _t139D, _t139E];
        tensor[4,4] _t13A0 = [_t1390, _t1395, _t139A, _t139F];
        tensor[4,4][4] _t13A1 = {_t1361, _t1376, _t138B, _t13A0};
        real _t13A2 = -0.1e1;
        real _t13A3 = -0.57735026919e0;
        real _t13A4 = -0.1e1;
        real _t13A5 = 0.1e1;
        vec4 _t13A6 = [_t13A2, _t13A3, _t13A4, _t13A5];
        real _t13A7 = 0.1e1;
        real _t13A8 = -0.57735026919e0;
        real _t13A9 = 0.e0;
        real _t13AA = 0.e0;
        vec4 _t13AB = [_t13A7, _t13A8, _t13A9, _t13AA];
        real _t13AC = 0.e0;
        real _t13AD = -0.57735026919e0;
        real _t13AE = 0.1e1;
        real _t13AF = 0.e0;
        vec4 _t13B0 = [_t13AC, _t13AD, _t13AE, _t13AF];
        real _t13B1 = 0.e0;
        real _t13B2 = 0.e0;
        real _t13B3 = 0.e0;
        real _t13B4 = 0.1e1;
        vec4 _t13B5 = [_t13B1, _t13B2, _t13B3, _t13B4];
        tensor[4,4] _t13B6 = [_t13A6, _t13AB, _t13B0, _t13B5];
        real _t13B7 = 0.e0;
        real _t13B8 = -0.1e1;
        real _t13B9 = 0.e0;
        real _t13BA = 0.e0;
        vec4 _t13BB = [_t13B7, _t13B8, _t13B9, _t13BA];
        real _t13BC = 0.1e1;
        real _t13BD = 0.e0;
        real _t13BE = 0.e0;
        real _t13BF = 0.e0;
        vec4 _t13C0 = [_t13BC, _t13BD, _t13BE, _t13BF];
        real _t13C1 = 0.e0;
        real _t13C2 = 0.e0;
        real _t13C3 = 0.1e1;
        real _t13C4 = 0.e0;
        vec4 _t13C5 = [_t13C1, _t13C2, _t13C3, _t13C4];
        real _t13C6 = 0.e0;
        real _t13C7 = 0.e0;
        real _t13C8 = 0.e0;
        real _t13C9 = 0.1e1;
        vec4 _t13CA = [_t13C6, _t13C7, _t13C8, _t13C9];
        tensor[4,4] _t13CB = [_t13BB, _t13C0, _t13C5, _t13CA];
        real _t13CC = 0.1e1;
        real _t13CD = 0.e0;
        real _t13CE = 0.e0;
        real _t13CF = 0.e0;
        vec4 _t13D0 = [_t13CC, _t13CD, _t13CE, _t13CF];
        real _t13D1 = 0.e0;
        real _t13D2 = 0.1e1;
        real _t13D3 = 0.e0;
        real _t13D4 = 0.e0;
        vec4 _t13D5 = [_t13D1, _t13D2, _t13D3, _t13D4];
        real _t13D6 = 0.e0;
        real _t13D7 = 0.e0;
        real _t13D8 = 0.1e1;
        real _t13D9 = 0.e0;
        vec4 _t13DA = [_t13D6, _t13D7, _t13D8, _t13D9];
        real _t13DB = 0.e0;
        real _t13DC = 0.e0;
        real _t13DD = 0.e0;
        real _t13DE = 0.1e1;
        vec4 _t13DF = [_t13DB, _t13DC, _t13DD, _t13DE];
        tensor[4,4] _t13E0 = [_t13D0, _t13D5, _t13DA, _t13DF];
        real _t13E1 = 0.1e1;
        real _t13E2 = 0.e0;
        real _t13E3 = 0.e0;
        real _t13E4 = 0.e0;
        vec4 _t13E5 = [_t13E1, _t13E2, _t13E3, _t13E4];
        real _t13E6 = 0.e0;
        real _t13E7 = 0.e0;
        real _t13E8 = 0.1e1;
        real _t13E9 = 0.e0;
        vec4 _t13EA = [_t13E6, _t13E7, _t13E8, _t13E9];
        real _t13EB = 0.e0;
        real _t13EC = -0.1e1;
        real _t13ED = 0.e0;
        real _t13EE = 0.e0;
        vec4 _t13EF = [_t13EB, _t13EC, _t13ED, _t13EE];
        real _t13F0 = 0.e0;
        real _t13F1 = 0.e0;
        real _t13F2 = 0.e0;
        real _t13F3 = 0.1e1;
        vec4 _t13F4 = [_t13F0, _t13F1, _t13F2, _t13F3];
        tensor[4,4] _t13F5 = [_t13E5, _t13EA, _t13EF, _t13F4];
        tensor[4,4][4] _t13F6 = {_t13B6, _t13CB, _t13E0, _t13F5};
        real _t13F7 = -0.1e1;
        real _t13F8 = -0.1e1;
        real _t13F9 = 0.57735026919e0;
        real _t13FA = 0.1e1;
        vec4 _t13FB = [_t13F7, _t13F8, _t13F9, _t13FA];
        real _t13FC = 0.1e1;
        real _t13FD = 0.e0;
        real _t13FE = 0.57735026919e0;
        real _t13FF = 0.e0;
        vec4 _t1400 = [_t13FC, _t13FD, _t13FE, _t13FF];
        real _t1401 = 0.e0;
        real _t1402 = 0.1e1;
        real _t1403 = 0.57735026919e0;
        real _t1404 = 0.e0;
        vec4 _t1405 = [_t1401, _t1402, _t1403, _t1404];
        real _t1406 = 0.e0;
        real _t1407 = 0.e0;
        real _t1408 = 0.e0;
        real _t1409 = 0.1e1;
        vec4 _t140A = [_t1406, _t1407, _t1408, _t1409];
        tensor[4,4] _t140B = [_t13FB, _t1400, _t1405, _t140A];
        real _t140C = 0.e0;
        real _t140D = 0.e0;
        real _t140E = 0.1e1;
        real _t140F = 0.e0;
        vec4 _t1410 = [_t140C, _t140D, _t140E, _t140F];
        real _t1411 = 0.1e1;
        real _t1412 = 0.e0;
        real _t1413 = 0.e0;
        real _t1414 = 0.e0;
        vec4 _t1415 = [_t1411, _t1412, _t1413, _t1414];
        real _t1416 = 0.e0;
        real _t1417 = 0.1e1;
        real _t1418 = 0.e0;
        real _t1419 = 0.e0;
        vec4 _t141A = [_t1416, _t1417, _t1418, _t1419];
        real _t141B = 0.e0;
        real _t141C = 0.e0;
        real _t141D = 0.e0;
        real _t141E = 0.1e1;
        vec4 _t141F = [_t141B, _t141C, _t141D, _t141E];
        tensor[4,4] _t1420 = [_t1410, _t1415, _t141A, _t141F];
        real _t1421 = 0.1e1;
        real _t1422 = 0.e0;
        real _t1423 = 0.e0;
        real _t1424 = 0.e0;
        vec4 _t1425 = [_t1421, _t1422, _t1423, _t1424];
        real _t1426 = 0.e0;
        real _t1427 = 0.e0;
        real _t1428 = -0.1e1;
        real _t1429 = 0.e0;
        vec4 _t142A = [_t1426, _t1427, _t1428, _t1429];
        real _t142B = 0.e0;
        real _t142C = 0.1e1;
        real _t142D = 0.e0;
        real _t142E = 0.e0;
        vec4 _t142F = [_t142B, _t142C, _t142D, _t142E];
        real _t1430 = 0.e0;
        real _t1431 = 0.e0;
        real _t1432 = 0.e0;
        real _t1433 = 0.1e1;
        vec4 _t1434 = [_t1430, _t1431, _t1432, _t1433];
        tensor[4,4] _t1435 = [_t1425, _t142A, _t142F, _t1434];
        real _t1436 = 0.1e1;
        real _t1437 = 0.e0;
        real _t1438 = 0.e0;
        real _t1439 = 0.e0;
        vec4 _t143A = [_t1436, _t1437, _t1438, _t1439];
        real _t143B = 0.e0;
        real _t143C = 0.1e1;
        real _t143D = 0.e0;
        real _t143E = 0.e0;
        vec4 _t143F = [_t143B, _t143C, _t143D, _t143E];
        real _t1440 = 0.e0;
        real _t1441 = 0.e0;
        real _t1442 = 0.1e1;
        real _t1443 = 0.e0;
        vec4 _t1444 = [_t1440, _t1441, _t1442, _t1443];
        real _t1445 = 0.e0;
        real _t1446 = 0.e0;
        real _t1447 = 0.e0;
        real _t1448 = 0.1e1;
        vec4 _t1449 = [_t1445, _t1446, _t1447, _t1448];
        tensor[4,4] _t144A = [_t143A, _t143F, _t1444, _t1449];
        tensor[4,4][4] _t144B = {_t140B, _t1420, _t1435, _t144A};
        tensor[4,4][4][4] _t144C = {_t134C, _t13A1, _t13F6, _t144B};
        real _t144D = _t0E3A[1];
        int _t144E = prim $r2i01B7 (_t144D);
        tensor[4,4][4] _t144F = prim $sub01C0<tensor[4,4][4]; %4> (_t144C, _t144E);
        real _t1450 = _t0E3A[1];
        int _t1451 = prim $r2i01B7 (_t1450);
        int[2] _t1452 = func nextCell4048A (_t1451, _t0E36, _t0E35);
        int _t1453 = 1;
        int _t1454 = prim $sub01C0<int; %2> (_t1452, _t1453);
        tensor[4,4] _t1455 = prim $sub01C0<tensor[4,4]; %4> (_t144F, _t1454);
        real _t1456 = _t0E3A[0];
        vec3 _t1457 = prim *0036<$[3]> (_t1456, deltaP0E00);
        vec3 _t1458 = prim +0017<$[3]> (_t1457, _t0E37);
        real _t1459 = _t1458[0];
        real _t145A = _t0E3A[0];
        vec3 _t145B = prim *0036<$[3]> (_t145A, deltaP0E00);
        vec3 _t145C = prim +0017<$[3]> (_t145B, _t0E37);
        real _t145D = _t145C[1];
        real _t145E = _t0E3A[0];
        vec3 _t145F = prim *0036<$[3]> (_t145E, deltaP0E00);
        vec3 _t1460 = prim +0017<$[3]> (_t145F, _t0E37);
        real _t1461 = _t1460[2];
        real _t1462 = 0.1e1;
        vec4 _t1463 = [_t1459, _t145D, _t1461, _t1462];
        vec4 _t1464 = prim •00CE<$[4,4]; $[4]; $[4]> (_t1455, _t1463);
        real _t1465 = _t1464[2];
        vec3 _t1466 = [_t1189, _t12F7, _t1465];
        real _t1467 = _t0E3A[1];
        int _t1468 = prim $r2i01B7 (_t1467);
        int[2] _t1469 = func nextCell4048A (_t1468, _t0E36, _t0E35);
        int _t146A = 1;
        int _t146B = prim $sub01C0<int; %2> (_t1469, _t146A);
        Femdata: MeshPos _t146C = extractFemItemN((_t0E35, _t101B, _t1466, _t146B),RefBuild(Mesh),);
        nmp0E3B = _t146C;
      } else {
        real _t146D = _t0E3A[0];
        vec3 _t146E = prim *0036<$[3]> (_t146D, deltaP0E00);
        vec3 _t146F = prim +0017<$[3]> (_t146E, _t0E37);
        Femdata: MeshPos _t1470 = extractFemItemN((_t0E35, _t146F),InvalidBuildBoundary(MeshPos),);
        nmp0E3B = _t1470;
      }
      bool _t0E3C;
      bool _t0E3D = extractFemItem(Valid(MeshPos), bool, nmp0E3B);
      bool _t0E3E = prim !00BC (_t0E3D);
      if _t0E3E {
        _t0E3C = true;
      } else {
        bool _t0E3F;
        real _t0E40 = 0.e0;
        bool _t0E41 = prim <007A (eTime0E33, _t0E40);
        if _t0E41 {
          _t0E3F = true;
        } else {
          bool _t0E42;
          real _t0E43 = 0.1e1;
          bool _t0E44 = prim >0080 (eTime0E33, _t0E43);
          if _t0E44 {
            _t0E42 = true;
          } else {
            _t0E42 = prim <007A (time0DEA, timeEps03B0);
          }
          _t0E3F = _t0E42;
        }
        _t0E3C = _t0E3F;
      }
      if _t0E3C {
        return nmp0E3B;
      }
      cmp0DEB = nmp0E3B;
    }
  }
  string _t0E46 = "Took stupid way out!\n";
  print (_t0E46);
  vec3 _t0E47;
  vec3 _t0EA0 = extractFemItem(RefPos(MeshPos), vec3, x0DE6);
  int _t0EA1 = extractFemItem(CellIndex(MeshPos), int, x0DE6);
  Femdata: Mesh _t0EA2 = extractFem(x0DE6, Mesh);
  vec3 _t0EA3;
  field(3)[3] _t0EA4 = femField(_t0EA2,_t0EA1,field(3)[3],Transform,);
  vec3 _t0EA5 = prim @00A5<#∞; %3; $[3]> (_t0EA4, _t0EA0);
  _t0EA3 = _t0EA5;
  _t0E47 = _t0EA3;
  vec3 _t0E48 = prim +0017<$[3]> (_t0E47, dPos0DE7);
  cmp0DEB = func findPos03BE (meshData039F, _t0E48);
  return cmp0DEB;
}
globalInit {
  int _t03A3 = 0;
  int _t03A1 = 1;
  int _t03A5 = extractFemItem(NumCell(Mesh), int, meshData039F);
  int _t03A4 = prim -0024 (_t03A5, _t03A1);
  int[] _t03A8 = prim $range01C3 (_t03A3, _t03A4);
  Femdata: MeshCell[] _t03A9 = {};
  foreach _t03A7 in _t03A8 {
    Femdata: MeshCell _t03AA = loadFem(MeshCell, meshData039F, _t03A7);
    _t03A9 = prim @0010<Femdata: MeshCell> (_t03A9, _t03AA);
  }
  space03AB = loadFem(Space, 0space03AB_intermedateGlobal03AC, meshData039F);
  data03AD = loadFem(FemFunc, 0data03AD_intermedateGlobal03AE, space03AB);
  Femdata: Space _t0DD8 = extractFem(data03AD, Space);
  Femdata: Space _t0DD9 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDA = extractFem(_t0DD9, Mesh);
  field(3)[3] _t0DDB = femField(data03AD,_t0DDA,field(3)[3],refField,findPos03BE );
  Femdata: Space _t0DDC = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDD = extractFem(_t0DDC, Mesh);
  Femdata: Space _t0DDE = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDF = extractFem(_t0DDE, Mesh);
  Femdata: Space _t0DE0 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DE1 = extractFem(_t0DE0, Mesh);
  field(3)[3] _t0DE2 = femField(_t0DDD,_t0DE1,field(3)[3],InvTransform,findPos03BE );
  F0DE3 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t0DDB, _t0DE2);
  Femdata: RefCell simplex169F;
  Femdata: RefCell _t16A0 = extractFemItem(RefCell(Mesh), Femdata: RefCell, meshData039F);
  simplex169F = _t16A0;
  simplex0DE4 = simplex169F;
}
strand gg (vec3 startPos0E5C) {
  output vec3[] stream0E5D;
  output vec3[] newStream0E60;
  int step0E63;
  Femdata: MeshPos cPos0E64;
  vec3 altCPos0E65;
  {
    vec3[1] _t0E5E = {startPos0E5C};
    vec3[] _t0E5F = (vec3[])_t0E5E;
    stream0E5D = _t0E5F;
    vec3[1] _t0E61 = {startPos0E5C};
    vec3[] _t0E62 = (vec3[])_t0E61;
    newStream0E60 = _t0E62;
    step0E63 = 0;
    cPos0E64 = func findPos03BE (meshData039F, startPos0E5C);
    altCPos0E65 = startPos0E5C;
  }
  update
  {
    bool _t0E66;
    bool _t0E67 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E68 = prim !00BC (_t0E67);
    if _t0E68 {
      _t0E66 = true;
    } else {
      bool _t0E69;
      Femdata: MeshPos _t0E6A = func findPos03BE (meshData039F, altCPos0E65);
      bool _t0E6B = extractFemItem(Valid(MeshPos), bool, _t0E6A);
      bool _t0E6C = prim !00BC (_t0E6B);
      if _t0E6C {
        _t0E69 = true;
      } else {
        _t0E69 = prim ==0082 (step0E63, stepMax03B3);
      }
      _t0E66 = _t0E69;
    }
    if _t0E66 {
      stabilize;
    }
    vec3 _t0E6D;
    vec3 _t16D5 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
    int _t16D6 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
    Femdata: Mesh _t16D7 = extractFem(cPos0E64, Mesh);
    vec3 _t16D8;
    field(3)[3] _t16D9 = femField(_t16D7,_t16D6,field(3)[3],Transform,);
    vec3 _t16DA = prim @00A5<#∞; %3; $[3]> (_t16D9, _t16D5);
    _t16D8 = _t16DA;
    _t0E6D = _t16D8;
    vec3 _t0E6E = prim -0026<$[3]> (_t0E6D, altCPos0E65);
    real _t0E6F = prim |()|00B5<$[3]> (_t0E6E);
    real _t0E70 = 0.1e-5;
    bool _t0E71 = prim >0080 (_t0E6F, _t0E70);
    if _t0E71 {
      string _t0E72 = "Error in tracing: At step:";
      string _t0E73 = " with particle:";
      string _t0E74 = "\n";
      print (_t0E72, step0E63, _t0E73, startPos0E5C, _t0E74);
    } else {
      string _t0E75 = "fine in cell:";
      Femdata: Mesh _t0E76 = extractFem(cPos0E64, Mesh);
      int _t0E77 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell _t0E78 = loadFem(MeshCell, _t0E76, _t0E77);
      string _t0E79 = "\n";
      print (_t0E75, _t0E78, _t0E79);
    }
    real _t0E7A = 0.5e0;
    real _t0E7B = prim *0034 (_t0E7A, stepSize03B2);
    vec3 _t0E7C = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    vec3 _t0E7D = prim *0036<$[3]> (_t0E7B, _t0E7C);
    vec3 _t0E7E = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    real _t0E7F = prim |()|00B5<$[3]> (_t0E7E);
    vec3 altUp10E80 = prim /0057<$[3]> (_t0E7D, _t0E7F);
    real _t0E81 = 0.5e0;
    real _t0E82 = prim *0034 (_t0E81, stepSize03B2);
    vec3 _t0E83;
    bool _t16BE = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    if _t16BE {
      Femdata: Mesh _t16BF = extractFem(cPos0E64, Mesh);
      int _t16C0 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell c16C1 = loadFem(MeshCell, _t16BF, _t16C0);
      vec3 ref16C2 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
      Femdata: FuncCell _t16C3;
      int _t16C4 = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16C5 = loadFem(FuncCell, data03AD, _t16C4);
      _t16C3 = _t16C5;
      Femdata: FemFunc _t16C6 = extractFem(_t16C3, FemFunc);
      Femdata: FuncCell _t16C7;
      int _t16C8 = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16C9 = loadFem(FuncCell, data03AD, _t16C8);
      _t16C7 = _t16C9;
      Femdata: FemFunc _t16CA = extractFem(_t16C7, FemFunc);
      Femdata: Space _t16CB = extractFem(_t16CA, Space);
      Femdata: FuncCell _t16CC;
      int _t16CD = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16CE = loadFem(FuncCell, data03AD, _t16CD);
      _t16CC = _t16CE;
      int _t16CF = extractFemItem(CellIndex(FuncCell), int, _t16CC);
      field(3)[3] _t16D0 = femField(_t16C6,_t16CF,field(3)[3],refField,);
      vec3 val16D1 = prim @00A5<#∞; %3; $[3]> (_t16D0, ref16C2);
      real _t16D2 = prim |()|00B5<$[3]> (val16D1);
      vec3 _t16D3 = prim /0057<$[3]> (val16D1, _t16D2);
      _t0E83 = _t16D3;
    } else {
      vec3 _t16D4 = prim $zero01BB<$[3]> ();
      _t0E83 = _t16D4;
    }
    vec3 up10E84 = prim *0036<$[3]> (_t0E82, _t0E83);
    Femdata: MeshPos intermed0E85 = func posMove0DE5 (cPos0E64, up10E84);
    vec3 altIntermed0E86 = prim +0017<$[3]> (altCPos0E65, altUp10E80);
    bool _t0E87;
    bool _t0E88 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    bool _t0E89 = prim !00BC (_t0E88);
    if _t0E89 {
      _t0E87 = true;
    } else {
      Femdata: MeshPos _t0E8A = func findPos03BE (meshData039F, altIntermed0E86);
      bool _t0E8B = extractFemItem(Valid(MeshPos), bool, _t0E8A);
      _t0E87 = prim !00BC (_t0E8B);
    }
    if _t0E87 {
      stabilize;
    }
    vec3 _t0E8C = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    vec3 _t0E8D = prim *0036<$[3]> (stepSize03B2, _t0E8C);
    vec3 _t0E8E = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    real _t0E8F = prim |()|00B5<$[3]> (_t0E8E);
    vec3 altUp20E90 = prim /0057<$[3]> (_t0E8D, _t0E8F);
    vec3 _t0E91;
    bool _t16A7 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    if _t16A7 {
      Femdata: Mesh _t16A8 = extractFem(intermed0E85, Mesh);
      int _t16A9 = extractFemItem(CellIndex(MeshPos), int, intermed0E85);
      Femdata: MeshCell c16AA = loadFem(MeshCell, _t16A8, _t16A9);
      vec3 ref16AB = extractFemItem(RefPos(MeshPos), vec3, intermed0E85);
      Femdata: FuncCell _t16AC;
      int _t16AD = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16AE = loadFem(FuncCell, data03AD, _t16AD);
      _t16AC = _t16AE;
      Femdata: FemFunc _t16AF = extractFem(_t16AC, FemFunc);
      Femdata: FuncCell _t16B0;
      int _t16B1 = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16B2 = loadFem(FuncCell, data03AD, _t16B1);
      _t16B0 = _t16B2;
      Femdata: FemFunc _t16B3 = extractFem(_t16B0, FemFunc);
      Femdata: Space _t16B4 = extractFem(_t16B3, Space);
      Femdata: FuncCell _t16B5;
      int _t16B6 = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16B7 = loadFem(FuncCell, data03AD, _t16B6);
      _t16B5 = _t16B7;
      int _t16B8 = extractFemItem(CellIndex(FuncCell), int, _t16B5);
      field(3)[3] _t16B9 = femField(_t16AF,_t16B8,field(3)[3],refField,);
      vec3 val16BA = prim @00A5<#∞; %3; $[3]> (_t16B9, ref16AB);
      real _t16BB = prim |()|00B5<$[3]> (val16BA);
      vec3 _t16BC = prim /0057<$[3]> (val16BA, _t16BB);
      _t0E91 = _t16BC;
    } else {
      vec3 _t16BD = prim $zero01BB<$[3]> ();
      _t0E91 = _t16BD;
    }
    vec3 up20E92 = prim *0036<$[3]> (stepSize03B2, _t0E91);
    cPos0E64 = func posMove0DE5 (cPos0E64, up20E92);
    altCPos0E65 = prim +0017<$[3]> (altCPos0E65, altUp20E90);
    bool _t0E93 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E94 = prim !00BC (_t0E93);
    if _t0E94 {
      print (stream0E5D);
      stabilize;
    }
    vec3 _t0E95;
    vec3 _t16A1 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
    int _t16A2 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
    Femdata: Mesh _t16A3 = extractFem(cPos0E64, Mesh);
    vec3 _t16A4;
    field(3)[3] _t16A5 = femField(_t16A3,_t16A2,field(3)[3],Transform,);
    vec3 _t16A6 = prim @00A5<#∞; %3; $[3]> (_t16A5, _t16A1);
    _t16A4 = _t16A6;
    _t0E95 = _t16A4;
    vec3[1] _t0E96 = {_t0E95};
    vec3[] _t0E97 = (vec3[])_t0E96;
    stream0E5D = prim @0014<vec3> (stream0E5D, _t0E97);
    vec3[1] _t0E98 = {altCPos0E65};
    vec3[] _t0E99 = (vec3[])_t0E98;
    newStream0E60 = prim @0014<vec3> (newStream0E60, _t0E99);
    int _t0E9A = 1;
    step0E63 = prim +0015 (step0E63, _t0E9A);
  }
}
collection {
  foreach x0E9B in startPoints03B1 {
    new gg (x0E9B);
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData039F;
input FemData:Space 0space03AB_intermedateGlobal03AC;
input FemData:FemFunc 0data03AD_intermedateGlobal03AE;
input int timeSteps03AF = <default>;
input real timeEps03B0 = <default>;
input vec3[] startPoints03B1;
input real stepSize03B2 = <default>;
input int stepMax03B3 = <default>;
constants {
  timeSteps03AF = 32;
  timeEps03B0 = 0.1e-6;
  stepSize03B2 = 0.1e-1;
  stepMax03B3 = 100;
}
global Femdata: Space space03AB;
global Femdata: FemFunc data03AD;
global field(3)[3] F0DE3;
function Femdata: MeshPos#6 findPos03BE (Femdata: Mesh mesh03BF, vec3 pos03C0)
{
  real _t03C1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn03C4 = [_t03C1, _t03C2, _t03C3];
  newtonInt03C5 = 0;
  cellInt03C6 = extractFemItem(StartCell(Mesh), int, mesh03BF);
  int _t03C7 = extractFemItem(NumCell(Mesh), int, mesh03BF);
  int _t03C8 = 1;
  numCell03C9 = prim -0024 (_t03C7, _t03C8);
  yayCells03CA = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh03BF, pos03C0 : vec3);
  foreach cellItter03CE in yayCells03CA {
    real _t03CB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn03C4 = [_t03CB, _t03CC, _t03CD];
    cellInt03C6 = cellItter03CE;
    field(3)[3] _t03CF = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
    field(3)[3,3] _t03D0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t03CF);
    field(3)[3,3] _t03D1 = prim inv015E<#∞; %3> (_t03D0);
    real _t03D2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t03D5 = [_t03D2, _t03D3, _t03D4];
    A03D6 = prim @00A5<#∞; %3; $[3,3]> (_t03D1, _t03D5);
    int _t03D7 = 0;
    int _t03D8 = 16;
    int[] _t03D9 = prim $range01C3 (_t03D7, _t03D8);
    foreach newtonItter0408 in _t03D9 {
      field(3)[3] _t03DA = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
      field(3)[3] _t03DB = prim -002E<#∞; %3; $[3]> (_t03DA, pos03C0);
      field(3)[3] _t03DC = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A03D6, _t03DB);
      delta03DD = prim @00A5<#∞; %3; $[3]> (_t03DC, xn03C4);
      xn03C4 = prim -0026<$[3]> (xn03C4, delta03DD);
      real _t03DE = 0.1e-7;
      real _t03DF = 0.1e-7;
      real _t03E0 = prim *0034 (_t03DE, _t03DF);
      real _t03E1 = prim •00CE<$[3]; $[3]; $[]> (delta03DD, delta03DD);
      bool _t03E2 = prim >=007E (_t03E0, _t03E1);
      if _t03E2 {
        real _t03E3 = 0.1e1;
        real _t03E4 = 0.1e-8;
        real _t03E5 = prim +0017<$[]> (_t03E3, _t03E4);
        real _t03E6 = 0.1e1;
        real _t03E7 = 0.1e1;
        real _t03E8 = 0.1e1;
        vec3 _t03E9 = [_t03E6, _t03E7, _t03E8];
        real _t03EA = prim •00CE<$[3]; $[3]; $[]> (_t03E9, xn03C4);
        bool _t03EB = prim >0080 (_t03E5, _t03EA);
        real _t03EC = 0.1e-8;
        real _t03ED = 0.1e-8;
        real _t03EE = 0.1e-8;
        vec3 _t03EF = [_t03EC, _t03ED, _t03EE];
        vec3 _t03F0 = prim +0017<$[3]> (_t03EF, xn03C4);
        real _t03F1 = _t03F0[0];
        real _t03F2 = -0.e0;
        bool _t03F3 = prim >0080 (_t03F1, _t03F2);
        real _t03F4 = 0.1e-8;
        real _t03F5 = 0.1e-8;
        real _t03F6 = 0.1e-8;
        vec3 _t03F7 = [_t03F4, _t03F5, _t03F6];
        vec3 _t03F8 = prim +0017<$[3]> (_t03F7, xn03C4);
        real _t03F9 = _t03F8[1];
        real _t03FA = -0.e0;
        bool _t03FB = prim >0080 (_t03F9, _t03FA);
        real _t03FC = 0.1e-8;
        real _t03FD = 0.1e-8;
        real _t03FE = 0.1e-8;
        vec3 _t03FF = [_t03FC, _t03FD, _t03FE];
        vec3 _t0400 = prim +0017<$[3]> (_t03FF, xn03C4);
        real _t0401 = _t0400[2];
        real _t0402 = -0.e0;
        bool _t0403 = prim >0080 (_t0401, _t0402);
        bool _t0404 = prim $and01C4 (_t03FB, _t0403);
        bool _t0405 = prim $and01C4 (_t03F3, _t0404);
        bool _t0406 = prim $and01C4 (_t03EB, _t0405);
        if _t0406 {
          Femdata: MeshPos _t0407 = extractFemItemN((mesh03BF, cellInt03C6, xn03C4, pos03C0),AllBuild(MeshPos),);
          return _t0407;
        }
      }
    }
  }
  string _t0409 = "Bad end 2";
  string _t040A = "\n";
  print (_t0409, _t040A);
  Femdata: MeshPos _t040B = extractFemItemN((mesh03BF),InvalidBuild(MeshPos),);
  return _t040B;
}
function int[2]#8 nextCell4048A (int faceIdx0A53, int cell0A54, Femdata: Mesh mesh0A55)
{
  int _t0A56 = 8;
  int _t0A57 = prim *0033 (cell0A54, _t0A56);
  int _t0A58 = 2;
  int _t0A59 = prim *0033 (faceIdx0A53, _t0A58);
  int _t0A5A = prim +0015 (_t0A57, _t0A59);
  int[2] _t0A5B = extractFemItemN((mesh0A55, _t0A5A),CellFaceCell(Mesh),);
  return _t0A5B;
}
function Femdata: MeshPos#2 posMove0DE5 (Femdata: MeshPos x0DE6, vec3 dPos0DE7)
{
  bool _t0DE8 = extractFemItem(Valid(MeshPos), bool, x0DE6);
  bool _t0DE9 = prim !00BC (_t0DE8);
  if _t0DE9 {
    return x0DE6;
  }
  real time0DEA = 0.1e1;
  Femdata: MeshPos cmp0DEB = x0DE6;
  int _t0DEC = 0;
  int[] _t0DED = prim $range01C3 (_t0DEC, timeSteps03AF);
  foreach i0E45 in _t0DED {
    Femdata: Mesh _t0DEE = extractFem(cmp0DEB, Mesh);
    int _t0DEF = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF0 = loadFem(MeshCell, _t0DEE, _t0DEF);
    Femdata: Mesh _t0DF1 = extractFem(_t0DF0, Mesh);
    Femdata: Mesh _t0DF2 = extractFem(cmp0DEB, Mesh);
    int _t0DF3 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF4 = loadFem(MeshCell, _t0DF2, _t0DF3);
    Femdata: Mesh _t0DF5 = extractFem(_t0DF4, Mesh);
    Femdata: Mesh _t0DF6 = extractFem(cmp0DEB, Mesh);
    int _t0DF7 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF8 = loadFem(MeshCell, _t0DF6, _t0DF7);
    int _t0DF9 = extractFemItem(CellIndex(MeshCell), int, _t0DF8);
    field(3)[3] _t0DFA = femField(_t0DF1,_t0DF9,field(3)[3],Transform,);
    field(3)[3,3] _t0DFB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0DFA);
    vec3 _t0DFC = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    tensor[3,3] _t0DFD = prim @00A5<#∞; %3; $[3,3]> (_t0DFB, _t0DFC);
    tensor[3,3] _t0DFE = prim inv0155 (_t0DFD);
    tensor[3,3] _t0DFF = prim *0036<$[3,3]> (time0DEA, _t0DFE);
    vec3 deltaP0E00 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0DFF, dPos0DE7);
    vec3 _t0E01 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    vec3 newPos0E02 = prim +0017<$[3]> (_t0E01, deltaP0E00);
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.1e-8;
    real _t0E05 = prim +0017<$[]> (_t0E03, _t0E04);
    real _t0E06 = 0.1e1;
    real _t0E07 = 0.1e1;
    real _t0E08 = 0.1e1;
    vec3 _t0E09 = [_t0E06, _t0E07, _t0E08];
    real _t0E0A = prim •00CE<$[3]; $[3]; $[]> (_t0E09, newPos0E02);
    bool _t0E0B = prim >0080 (_t0E05, _t0E0A);
    real _t0E0C = 0.1e-8;
    real _t0E0D = 0.1e-8;
    real _t0E0E = 0.1e-8;
    vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
    vec3 _t0E10 = prim +0017<$[3]> (_t0E0F, newPos0E02);
    real _t0E11 = _t0E10[0];
    real _t0E12 = -0.e0;
    bool _t0E13 = prim >0080 (_t0E11, _t0E12);
    real _t0E14 = 0.1e-8;
    real _t0E15 = 0.1e-8;
    real _t0E16 = 0.1e-8;
    vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
    vec3 _t0E18 = prim +0017<$[3]> (_t0E17, newPos0E02);
    real _t0E19 = _t0E18[1];
    real _t0E1A = -0.e0;
    bool _t0E1B = prim >0080 (_t0E19, _t0E1A);
    real _t0E1C = 0.1e-8;
    real _t0E1D = 0.1e-8;
    real _t0E1E = 0.1e-8;
    vec3 _t0E1F = [_t0E1C, _t0E1D, _t0E1E];
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, newPos0E02);
    real _t0E21 = _t0E20[2];
    real _t0E22 = -0.e0;
    bool _t0E23 = prim >0080 (_t0E21, _t0E22);
    bool _t0E24 = prim $and01C4 (_t0E1B, _t0E23);
    bool _t0E25 = prim $and01C4 (_t0E13, _t0E24);
    bool _t0E26 = prim $and01C4 (_t0E0B, _t0E25);
    if _t0E26 {
      Femdata: Mesh _t0E27 = extractFem(cmp0DEB, Mesh);
      int _t0E28 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E29 = loadFem(MeshCell, _t0E27, _t0E28);
      Femdata: Mesh _t0E2A = extractFem(_t0E29, Mesh);
      Femdata: Mesh _t0E2B = extractFem(cmp0DEB, Mesh);
      int _t0E2C = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E2D = loadFem(MeshCell, _t0E2B, _t0E2C);
      int _t0E2E = extractFemItem(CellIndex(MeshCell), int, _t0E2D);
      Femdata: MeshPos nmp0E2F = extractFemItemN((_t0E2A, _t0E2E, newPos0E02),RefBuild(Mesh),);
      return nmp0E2F;
    } else {
      vec3 _t0E30 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
      int _t0E31 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E32;
      real time1585 = +inf;
      int face1586 = -1;
      real faceTime1587 = -inf;
      real _t1588 = 0.57735026919e0;
      real _t1589 = 0.57735026919e0;
      real _t158A = 0.57735026919e0;
      real _t158B = 0.57735026919e0;
      vec3 _t158C = [_t1589, _t158A, _t158B];
      real _t158D = prim •00CE<$[3]; $[3]; $[]> (_t158C, _t0E30);
      real _t158E = prim -0026<$[]> (_t1588, _t158D);
      real _t158F = 0.57735026919e0;
      real _t1590 = 0.57735026919e0;
      real _t1591 = 0.57735026919e0;
      vec3 _t1592 = [_t158F, _t1590, _t1591];
      real _t1593 = prim •00CE<$[3]; $[3]; $[]> (_t1592, deltaP0E00);
      real _t1594 = prim /0055 (_t158E, _t1593);
      real _t1595 = -0.1e-15;
      bool _t1596 = prim >=007E (_t1594, _t1595);
      real _t1597 = 0.57735026919e0;
      real _t1598 = 0.57735026919e0;
      real _t1599 = 0.57735026919e0;
      real _t159A = 0.57735026919e0;
      vec3 _t159B = [_t1598, _t1599, _t159A];
      real _t159C = prim •00CE<$[3]; $[3]; $[]> (_t159B, _t0E30);
      real _t159D = prim -0026<$[]> (_t1597, _t159C);
      real _t159E = 0.57735026919e0;
      real _t159F = 0.57735026919e0;
      real _t15A0 = 0.57735026919e0;
      vec3 _t15A1 = [_t159E, _t159F, _t15A0];
      real _t15A2 = prim •00CE<$[3]; $[3]; $[]> (_t15A1, deltaP0E00);
      real _t15A3 = prim /0055 (_t159D, _t15A2);
      bool _t15A4 = prim >0080 (time1585, _t15A3);
      real _t15A5 = 0.57735026919e0;
      real _t15A6 = 0.57735026919e0;
      real _t15A7 = 0.57735026919e0;
      vec3 _t15A8 = [_t15A5, _t15A6, _t15A7];
      real _t15A9 = prim •00CE<$[3]; $[3]; $[]> (_t15A8, deltaP0E00);
      real _t15AA = prim |()|00B5<$[]> (_t15A9);
      real _t15AB = 0.1e-20;
      bool _t15AC = prim >=007E (_t15AA, _t15AB);
      bool _t15AD = prim $and01C4 (_t15A4, _t15AC);
      bool _t15AE = prim $and01C4 (_t1596, _t15AD);
      if _t15AE {
        int _t15AF = 0;
        bool _t15B0 = prim !=0086 (_t0E31, _t15AF);
        if _t15B0 {
          real _t15B1 = 0.57735026919e0;
          real _t15B2 = 0.57735026919e0;
          real _t15B3 = 0.57735026919e0;
          real _t15B4 = 0.57735026919e0;
          vec3 _t15B5 = [_t15B2, _t15B3, _t15B4];
          real _t15B6 = prim •00CE<$[3]; $[3]; $[]> (_t15B5, _t0E30);
          real _t15B7 = prim -0026<$[]> (_t15B1, _t15B6);
          real _t15B8 = 0.57735026919e0;
          real _t15B9 = 0.57735026919e0;
          real _t15BA = 0.57735026919e0;
          vec3 _t15BB = [_t15B8, _t15B9, _t15BA];
          real _t15BC = prim •00CE<$[3]; $[3]; $[]> (_t15BB, deltaP0E00);
          time1585 = prim /0055 (_t15B7, _t15BC);
          face1586 = 0;
        } else {
          real _t15BD = 0.57735026919e0;
          real _t15BE = 0.57735026919e0;
          real _t15BF = 0.57735026919e0;
          real _t15C0 = 0.57735026919e0;
          vec3 _t15C1 = [_t15BE, _t15BF, _t15C0];
          real _t15C2 = prim •00CE<$[3]; $[3]; $[]> (_t15C1, _t0E30);
          real _t15C3 = prim -0026<$[]> (_t15BD, _t15C2);
          real _t15C4 = 0.57735026919e0;
          real _t15C5 = 0.57735026919e0;
          real _t15C6 = 0.57735026919e0;
          vec3 _t15C7 = [_t15C4, _t15C5, _t15C6];
          real _t15C8 = prim •00CE<$[3]; $[3]; $[]> (_t15C7, deltaP0E00);
          faceTime1587 = prim /0055 (_t15C3, _t15C8);
        }
      }
      real _t15C9 = 0.e0;
      real _t15CA = 0.1e1;
      real _t15CB = 0.e0;
      real _t15CC = 0.e0;
      vec3 _t15CD = [_t15CA, _t15CB, _t15CC];
      real _t15CE = prim •00CE<$[3]; $[3]; $[]> (_t15CD, _t0E30);
      real _t15CF = prim -0026<$[]> (_t15C9, _t15CE);
      real _t15D0 = 0.1e1;
      real _t15D1 = 0.e0;
      real _t15D2 = 0.e0;
      vec3 _t15D3 = [_t15D0, _t15D1, _t15D2];
      real _t15D4 = prim •00CE<$[3]; $[3]; $[]> (_t15D3, deltaP0E00);
      real _t15D5 = prim /0055 (_t15CF, _t15D4);
      real _t15D6 = -0.1e-15;
      bool _t15D7 = prim >=007E (_t15D5, _t15D6);
      real _t15D8 = 0.e0;
      real _t15D9 = 0.1e1;
      real _t15DA = 0.e0;
      real _t15DB = 0.e0;
      vec3 _t15DC = [_t15D9, _t15DA, _t15DB];
      real _t15DD = prim •00CE<$[3]; $[3]; $[]> (_t15DC, _t0E30);
      real _t15DE = prim -0026<$[]> (_t15D8, _t15DD);
      real _t15DF = 0.1e1;
      real _t15E0 = 0.e0;
      real _t15E1 = 0.e0;
      vec3 _t15E2 = [_t15DF, _t15E0, _t15E1];
      real _t15E3 = prim •00CE<$[3]; $[3]; $[]> (_t15E2, deltaP0E00);
      real _t15E4 = prim /0055 (_t15DE, _t15E3);
      bool _t15E5 = prim >0080 (time1585, _t15E4);
      real _t15E6 = 0.1e1;
      real _t15E7 = 0.e0;
      real _t15E8 = 0.e0;
      vec3 _t15E9 = [_t15E6, _t15E7, _t15E8];
      real _t15EA = prim •00CE<$[3]; $[3]; $[]> (_t15E9, deltaP0E00);
      real _t15EB = prim |()|00B5<$[]> (_t15EA);
      real _t15EC = 0.1e-20;
      bool _t15ED = prim >=007E (_t15EB, _t15EC);
      bool _t15EE = prim $and01C4 (_t15E5, _t15ED);
      bool _t15EF = prim $and01C4 (_t15D7, _t15EE);
      if _t15EF {
        int _t15F0 = 1;
        bool _t15F1 = prim !=0086 (_t0E31, _t15F0);
        if _t15F1 {
          real _t15F2 = 0.e0;
          real _t15F3 = 0.1e1;
          real _t15F4 = 0.e0;
          real _t15F5 = 0.e0;
          vec3 _t15F6 = [_t15F3, _t15F4, _t15F5];
          real _t15F7 = prim •00CE<$[3]; $[3]; $[]> (_t15F6, _t0E30);
          real _t15F8 = prim -0026<$[]> (_t15F2, _t15F7);
          real _t15F9 = 0.1e1;
          real _t15FA = 0.e0;
          real _t15FB = 0.e0;
          vec3 _t15FC = [_t15F9, _t15FA, _t15FB];
          real _t15FD = prim •00CE<$[3]; $[3]; $[]> (_t15FC, deltaP0E00);
          time1585 = prim /0055 (_t15F8, _t15FD);
          face1586 = 1;
        } else {
          real _t15FE = 0.e0;
          real _t15FF = 0.1e1;
          real _t1600 = 0.e0;
          real _t1601 = 0.e0;
          vec3 _t1602 = [_t15FF, _t1600, _t1601];
          real _t1603 = prim •00CE<$[3]; $[3]; $[]> (_t1602, _t0E30);
          real _t1604 = prim -0026<$[]> (_t15FE, _t1603);
          real _t1605 = 0.1e1;
          real _t1606 = 0.e0;
          real _t1607 = 0.e0;
          vec3 _t1608 = [_t1605, _t1606, _t1607];
          real _t1609 = prim •00CE<$[3]; $[3]; $[]> (_t1608, deltaP0E00);
          faceTime1587 = prim /0055 (_t1604, _t1609);
        }
      }
      real _t160A = 0.e0;
      real _t160B = 0.e0;
      real _t160C = -0.1e1;
      real _t160D = 0.e0;
      vec3 _t160E = [_t160B, _t160C, _t160D];
      real _t160F = prim •00CE<$[3]; $[3]; $[]> (_t160E, _t0E30);
      real _t1610 = prim -0026<$[]> (_t160A, _t160F);
      real _t1611 = 0.e0;
      real _t1612 = -0.1e1;
      real _t1613 = 0.e0;
      vec3 _t1614 = [_t1611, _t1612, _t1613];
      real _t1615 = prim •00CE<$[3]; $[3]; $[]> (_t1614, deltaP0E00);
      real _t1616 = prim /0055 (_t1610, _t1615);
      real _t1617 = -0.1e-15;
      bool _t1618 = prim >=007E (_t1616, _t1617);
      real _t1619 = 0.e0;
      real _t161A = 0.e0;
      real _t161B = -0.1e1;
      real _t161C = 0.e0;
      vec3 _t161D = [_t161A, _t161B, _t161C];
      real _t161E = prim •00CE<$[3]; $[3]; $[]> (_t161D, _t0E30);
      real _t161F = prim -0026<$[]> (_t1619, _t161E);
      real _t1620 = 0.e0;
      real _t1621 = -0.1e1;
      real _t1622 = 0.e0;
      vec3 _t1623 = [_t1620, _t1621, _t1622];
      real _t1624 = prim •00CE<$[3]; $[3]; $[]> (_t1623, deltaP0E00);
      real _t1625 = prim /0055 (_t161F, _t1624);
      bool _t1626 = prim >0080 (time1585, _t1625);
      real _t1627 = 0.e0;
      real _t1628 = -0.1e1;
      real _t1629 = 0.e0;
      vec3 _t162A = [_t1627, _t1628, _t1629];
      real _t162B = prim •00CE<$[3]; $[3]; $[]> (_t162A, deltaP0E00);
      real _t162C = prim |()|00B5<$[]> (_t162B);
      real _t162D = 0.1e-20;
      bool _t162E = prim >=007E (_t162C, _t162D);
      bool _t162F = prim $and01C4 (_t1626, _t162E);
      bool _t1630 = prim $and01C4 (_t1618, _t162F);
      if _t1630 {
        int _t1631 = 2;
        bool _t1632 = prim !=0086 (_t0E31, _t1631);
        if _t1632 {
          real _t1633 = 0.e0;
          real _t1634 = 0.e0;
          real _t1635 = -0.1e1;
          real _t1636 = 0.e0;
          vec3 _t1637 = [_t1634, _t1635, _t1636];
          real _t1638 = prim •00CE<$[3]; $[3]; $[]> (_t1637, _t0E30);
          real _t1639 = prim -0026<$[]> (_t1633, _t1638);
          real _t163A = 0.e0;
          real _t163B = -0.1e1;
          real _t163C = 0.e0;
          vec3 _t163D = [_t163A, _t163B, _t163C];
          real _t163E = prim •00CE<$[3]; $[3]; $[]> (_t163D, deltaP0E00);
          time1585 = prim /0055 (_t1639, _t163E);
          face1586 = 2;
        } else {
          real _t163F = 0.e0;
          real _t1640 = 0.e0;
          real _t1641 = -0.1e1;
          real _t1642 = 0.e0;
          vec3 _t1643 = [_t1640, _t1641, _t1642];
          real _t1644 = prim •00CE<$[3]; $[3]; $[]> (_t1643, _t0E30);
          real _t1645 = prim -0026<$[]> (_t163F, _t1644);
          real _t1646 = 0.e0;
          real _t1647 = -0.1e1;
          real _t1648 = 0.e0;
          vec3 _t1649 = [_t1646, _t1647, _t1648];
          real _t164A = prim •00CE<$[3]; $[3]; $[]> (_t1649, deltaP0E00);
          faceTime1587 = prim /0055 (_t1645, _t164A);
        }
      }
      real _t164B = 0.e0;
      real _t164C = 0.e0;
      real _t164D = 0.e0;
      real _t164E = 0.1e1;
      vec3 _t164F = [_t164C, _t164D, _t164E];
      real _t1650 = prim •00CE<$[3]; $[3]; $[]> (_t164F, _t0E30);
      real _t1651 = prim -0026<$[]> (_t164B, _t1650);
      real _t1652 = 0.e0;
      real _t1653 = 0.e0;
      real _t1654 = 0.1e1;
      vec3 _t1655 = [_t1652, _t1653, _t1654];
      real _t1656 = prim •00CE<$[3]; $[3]; $[]> (_t1655, deltaP0E00);
      real _t1657 = prim /0055 (_t1651, _t1656);
      real _t1658 = -0.1e-15;
      bool _t1659 = prim >=007E (_t1657, _t1658);
      real _t165A = 0.e0;
      real _t165B = 0.e0;
      real _t165C = 0.e0;
      real _t165D = 0.1e1;
      vec3 _t165E = [_t165B, _t165C, _t165D];
      real _t165F = prim •00CE<$[3]; $[3]; $[]> (_t165E, _t0E30);
      real _t1660 = prim -0026<$[]> (_t165A, _t165F);
      real _t1661 = 0.e0;
      real _t1662 = 0.e0;
      real _t1663 = 0.1e1;
      vec3 _t1664 = [_t1661, _t1662, _t1663];
      real _t1665 = prim •00CE<$[3]; $[3]; $[]> (_t1664, deltaP0E00);
      real _t1666 = prim /0055 (_t1660, _t1665);
      bool _t1667 = prim >0080 (time1585, _t1666);
      real _t1668 = 0.e0;
      real _t1669 = 0.e0;
      real _t166A = 0.1e1;
      vec3 _t166B = [_t1668, _t1669, _t166A];
      real _t166C = prim •00CE<$[3]; $[3]; $[]> (_t166B, deltaP0E00);
      real _t166D = prim |()|00B5<$[]> (_t166C);
      real _t166E = 0.1e-20;
      bool _t166F = prim >=007E (_t166D, _t166E);
      bool _t1670 = prim $and01C4 (_t1667, _t166F);
      bool _t1671 = prim $and01C4 (_t1659, _t1670);
      if _t1671 {
        int _t1672 = 3;
        bool _t1673 = prim !=0086 (_t0E31, _t1672);
        if _t1673 {
          real _t1674 = 0.e0;
          real _t1675 = 0.e0;
          real _t1676 = 0.e0;
          real _t1677 = 0.1e1;
          vec3 _t1678 = [_t1675, _t1676, _t1677];
          real _t1679 = prim •00CE<$[3]; $[3]; $[]> (_t1678, _t0E30);
          real _t167A = prim -0026<$[]> (_t1674, _t1679);
          real _t167B = 0.e0;
          real _t167C = 0.e0;
          real _t167D = 0.1e1;
          vec3 _t167E = [_t167B, _t167C, _t167D];
          real _t167F = prim •00CE<$[3]; $[3]; $[]> (_t167E, deltaP0E00);
          time1585 = prim /0055 (_t167A, _t167F);
          face1586 = 3;
        } else {
          real _t1680 = 0.e0;
          real _t1681 = 0.e0;
          real _t1682 = 0.e0;
          real _t1683 = 0.1e1;
          vec3 _t1684 = [_t1681, _t1682, _t1683];
          real _t1685 = prim •00CE<$[3]; $[3]; $[]> (_t1684, _t0E30);
          real _t1686 = prim -0026<$[]> (_t1680, _t1685);
          real _t1687 = 0.e0;
          real _t1688 = 0.e0;
          real _t1689 = 0.1e1;
          vec3 _t168A = [_t1687, _t1688, _t1689];
          real _t168B = prim •00CE<$[3]; $[3]; $[]> (_t168A, deltaP0E00);
          faceTime1587 = prim /0055 (_t1686, _t168B);
        }
      }
      int _t168C = -1;
      bool _t168D = prim !=0086 (face1586, _t168C);
      if _t168D {
        real _t168E = 0.e0;
        real _t168F = prim max0125 (time1585, _t168E);
        real _t1690 = (real)face1586;
        vec2 _t1691 = [_t168F, _t1690];
        _t0E32 = _t1691;
      } else {
        real _t1692 = -inf;
        bool _t1693 = prim ==0084 (_t1692, faceTime1587);
        if _t1693 {
          real _t1694 = -0.1e1;
          real _t1695 = -0.1e1;
          vec2 _t1696 = [_t1694, _t1695];
          _t0E32 = _t1696;
        } else {
          real _t1697 = (real)_t0E31;
          vec2 _t1698 = [faceTime1587, _t1697];
          _t0E32 = _t1698;
        }
      }
      real eTime0E33 = _t0E32[0];
      real _t0E34 = prim *0034 (time0DEA, eTime0E33);
      time0DEA = prim -0026<$[]> (time0DEA, _t0E34);
      Femdata: Mesh _t0E35 = extractFem(cmp0DEB, Mesh);
      int _t0E36 = extractFemItem(CellIndex(Mesh), int, cmp0DEB);
      vec3 _t0E37 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      vec3 _t0E38 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      int _t0E39 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E3A;
      real time1471 = +inf;
      int face1472 = -1;
      real faceTime1473 = -inf;
      real _t1474 = 0.57735026919e0;
      real _t1475 = 0.57735026919e0;
      real _t1476 = 0.57735026919e0;
      real _t1477 = 0.57735026919e0;
      vec3 _t1478 = [_t1475, _t1476, _t1477];
      real _t1479 = prim •00CE<$[3]; $[3]; $[]> (_t1478, _t0E38);
      real _t147A = prim -0026<$[]> (_t1474, _t1479);
      real _t147B = 0.57735026919e0;
      real _t147C = 0.57735026919e0;
      real _t147D = 0.57735026919e0;
      vec3 _t147E = [_t147B, _t147C, _t147D];
      real _t147F = prim •00CE<$[3]; $[3]; $[]> (_t147E, deltaP0E00);
      real _t1480 = prim /0055 (_t147A, _t147F);
      real _t1481 = -0.1e-15;
      bool _t1482 = prim >=007E (_t1480, _t1481);
      real _t1483 = 0.57735026919e0;
      real _t1484 = 0.57735026919e0;
      real _t1485 = 0.57735026919e0;
      real _t1486 = 0.57735026919e0;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, _t0E38);
      real _t1489 = prim -0026<$[]> (_t1483, _t1488);
      real _t148A = 0.57735026919e0;
      real _t148B = 0.57735026919e0;
      real _t148C = 0.57735026919e0;
      vec3 _t148D = [_t148A, _t148B, _t148C];
      real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, deltaP0E00);
      real _t148F = prim /0055 (_t1489, _t148E);
      bool _t1490 = prim >0080 (time1471, _t148F);
      real _t1491 = 0.57735026919e0;
      real _t1492 = 0.57735026919e0;
      real _t1493 = 0.57735026919e0;
      vec3 _t1494 = [_t1491, _t1492, _t1493];
      real _t1495 = prim •00CE<$[3]; $[3]; $[]> (_t1494, deltaP0E00);
      real _t1496 = prim |()|00B5<$[]> (_t1495);
      real _t1497 = 0.1e-20;
      bool _t1498 = prim >=007E (_t1496, _t1497);
      bool _t1499 = prim $and01C4 (_t1490, _t1498);
      bool _t149A = prim $and01C4 (_t1482, _t1499);
      if _t149A {
        int _t149B = 0;
        bool _t149C = prim !=0086 (_t0E39, _t149B);
        if _t149C {
          real _t149D = 0.57735026919e0;
          real _t149E = 0.57735026919e0;
          real _t149F = 0.57735026919e0;
          real _t14A0 = 0.57735026919e0;
          vec3 _t14A1 = [_t149E, _t149F, _t14A0];
          real _t14A2 = prim •00CE<$[3]; $[3]; $[]> (_t14A1, _t0E38);
          real _t14A3 = prim -0026<$[]> (_t149D, _t14A2);
          real _t14A4 = 0.57735026919e0;
          real _t14A5 = 0.57735026919e0;
          real _t14A6 = 0.57735026919e0;
          vec3 _t14A7 = [_t14A4, _t14A5, _t14A6];
          real _t14A8 = prim •00CE<$[3]; $[3]; $[]> (_t14A7, deltaP0E00);
          time1471 = prim /0055 (_t14A3, _t14A8);
          face1472 = 0;
        } else {
          real _t14A9 = 0.57735026919e0;
          real _t14AA = 0.57735026919e0;
          real _t14AB = 0.57735026919e0;
          real _t14AC = 0.57735026919e0;
          vec3 _t14AD = [_t14AA, _t14AB, _t14AC];
          real _t14AE = prim •00CE<$[3]; $[3]; $[]> (_t14AD, _t0E38);
          real _t14AF = prim -0026<$[]> (_t14A9, _t14AE);
          real _t14B0 = 0.57735026919e0;
          real _t14B1 = 0.57735026919e0;
          real _t14B2 = 0.57735026919e0;
          vec3 _t14B3 = [_t14B0, _t14B1, _t14B2];
          real _t14B4 = prim •00CE<$[3]; $[3]; $[]> (_t14B3, deltaP0E00);
          faceTime1473 = prim /0055 (_t14AF, _t14B4);
        }
      }
      real _t14B5 = 0.e0;
      real _t14B6 = 0.1e1;
      real _t14B7 = 0.e0;
      real _t14B8 = 0.e0;
      vec3 _t14B9 = [_t14B6, _t14B7, _t14B8];
      real _t14BA = prim •00CE<$[3]; $[3]; $[]> (_t14B9, _t0E38);
      real _t14BB = prim -0026<$[]> (_t14B5, _t14BA);
      real _t14BC = 0.1e1;
      real _t14BD = 0.e0;
      real _t14BE = 0.e0;
      vec3 _t14BF = [_t14BC, _t14BD, _t14BE];
      real _t14C0 = prim •00CE<$[3]; $[3]; $[]> (_t14BF, deltaP0E00);
      real _t14C1 = prim /0055 (_t14BB, _t14C0);
      real _t14C2 = -0.1e-15;
      bool _t14C3 = prim >=007E (_t14C1, _t14C2);
      real _t14C4 = 0.e0;
      real _t14C5 = 0.1e1;
      real _t14C6 = 0.e0;
      real _t14C7 = 0.e0;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, _t0E38);
      real _t14CA = prim -0026<$[]> (_t14C4, _t14C9);
      real _t14CB = 0.1e1;
      real _t14CC = 0.e0;
      real _t14CD = 0.e0;
      vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
      real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, deltaP0E00);
      real _t14D0 = prim /0055 (_t14CA, _t14CF);
      bool _t14D1 = prim >0080 (time1471, _t14D0);
      real _t14D2 = 0.1e1;
      real _t14D3 = 0.e0;
      real _t14D4 = 0.e0;
      vec3 _t14D5 = [_t14D2, _t14D3, _t14D4];
      real _t14D6 = prim •00CE<$[3]; $[3]; $[]> (_t14D5, deltaP0E00);
      real _t14D7 = prim |()|00B5<$[]> (_t14D6);
      real _t14D8 = 0.1e-20;
      bool _t14D9 = prim >=007E (_t14D7, _t14D8);
      bool _t14DA = prim $and01C4 (_t14D1, _t14D9);
      bool _t14DB = prim $and01C4 (_t14C3, _t14DA);
      if _t14DB {
        int _t14DC = 1;
        bool _t14DD = prim !=0086 (_t0E39, _t14DC);
        if _t14DD {
          real _t14DE = 0.e0;
          real _t14DF = 0.1e1;
          real _t14E0 = 0.e0;
          real _t14E1 = 0.e0;
          vec3 _t14E2 = [_t14DF, _t14E0, _t14E1];
          real _t14E3 = prim •00CE<$[3]; $[3]; $[]> (_t14E2, _t0E38);
          real _t14E4 = prim -0026<$[]> (_t14DE, _t14E3);
          real _t14E5 = 0.1e1;
          real _t14E6 = 0.e0;
          real _t14E7 = 0.e0;
          vec3 _t14E8 = [_t14E5, _t14E6, _t14E7];
          real _t14E9 = prim •00CE<$[3]; $[3]; $[]> (_t14E8, deltaP0E00);
          time1471 = prim /0055 (_t14E4, _t14E9);
          face1472 = 1;
        } else {
          real _t14EA = 0.e0;
          real _t14EB = 0.1e1;
          real _t14EC = 0.e0;
          real _t14ED = 0.e0;
          vec3 _t14EE = [_t14EB, _t14EC, _t14ED];
          real _t14EF = prim •00CE<$[3]; $[3]; $[]> (_t14EE, _t0E38);
          real _t14F0 = prim -0026<$[]> (_t14EA, _t14EF);
          real _t14F1 = 0.1e1;
          real _t14F2 = 0.e0;
          real _t14F3 = 0.e0;
          vec3 _t14F4 = [_t14F1, _t14F2, _t14F3];
          real _t14F5 = prim •00CE<$[3]; $[3]; $[]> (_t14F4, deltaP0E00);
          faceTime1473 = prim /0055 (_t14F0, _t14F5);
        }
      }
      real _t14F6 = 0.e0;
      real _t14F7 = 0.e0;
      real _t14F8 = -0.1e1;
      real _t14F9 = 0.e0;
      vec3 _t14FA = [_t14F7, _t14F8, _t14F9];
      real _t14FB = prim •00CE<$[3]; $[3]; $[]> (_t14FA, _t0E38);
      real _t14FC = prim -0026<$[]> (_t14F6, _t14FB);
      real _t14FD = 0.e0;
      real _t14FE = -0.1e1;
      real _t14FF = 0.e0;
      vec3 _t1500 = [_t14FD, _t14FE, _t14FF];
      real _t1501 = prim •00CE<$[3]; $[3]; $[]> (_t1500, deltaP0E00);
      real _t1502 = prim /0055 (_t14FC, _t1501);
      real _t1503 = -0.1e-15;
      bool _t1504 = prim >=007E (_t1502, _t1503);
      real _t1505 = 0.e0;
      real _t1506 = 0.e0;
      real _t1507 = -0.1e1;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, _t0E38);
      real _t150B = prim -0026<$[]> (_t1505, _t150A);
      real _t150C = 0.e0;
      real _t150D = -0.1e1;
      real _t150E = 0.e0;
      vec3 _t150F = [_t150C, _t150D, _t150E];
      real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, deltaP0E00);
      real _t1511 = prim /0055 (_t150B, _t1510);
      bool _t1512 = prim >0080 (time1471, _t1511);
      real _t1513 = 0.e0;
      real _t1514 = -0.1e1;
      real _t1515 = 0.e0;
      vec3 _t1516 = [_t1513, _t1514, _t1515];
      real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, deltaP0E00);
      real _t1518 = prim |()|00B5<$[]> (_t1517);
      real _t1519 = 0.1e-20;
      bool _t151A = prim >=007E (_t1518, _t1519);
      bool _t151B = prim $and01C4 (_t1512, _t151A);
      bool _t151C = prim $and01C4 (_t1504, _t151B);
      if _t151C {
        int _t151D = 2;
        bool _t151E = prim !=0086 (_t0E39, _t151D);
        if _t151E {
          real _t151F = 0.e0;
          real _t1520 = 0.e0;
          real _t1521 = -0.1e1;
          real _t1522 = 0.e0;
          vec3 _t1523 = [_t1520, _t1521, _t1522];
          real _t1524 = prim •00CE<$[3]; $[3]; $[]> (_t1523, _t0E38);
          real _t1525 = prim -0026<$[]> (_t151F, _t1524);
          real _t1526 = 0.e0;
          real _t1527 = -0.1e1;
          real _t1528 = 0.e0;
          vec3 _t1529 = [_t1526, _t1527, _t1528];
          real _t152A = prim •00CE<$[3]; $[3]; $[]> (_t1529, deltaP0E00);
          time1471 = prim /0055 (_t1525, _t152A);
          face1472 = 2;
        } else {
          real _t152B = 0.e0;
          real _t152C = 0.e0;
          real _t152D = -0.1e1;
          real _t152E = 0.e0;
          vec3 _t152F = [_t152C, _t152D, _t152E];
          real _t1530 = prim •00CE<$[3]; $[3]; $[]> (_t152F, _t0E38);
          real _t1531 = prim -0026<$[]> (_t152B, _t1530);
          real _t1532 = 0.e0;
          real _t1533 = -0.1e1;
          real _t1534 = 0.e0;
          vec3 _t1535 = [_t1532, _t1533, _t1534];
          real _t1536 = prim •00CE<$[3]; $[3]; $[]> (_t1535, deltaP0E00);
          faceTime1473 = prim /0055 (_t1531, _t1536);
        }
      }
      real _t1537 = 0.e0;
      real _t1538 = 0.e0;
      real _t1539 = 0.e0;
      real _t153A = 0.1e1;
      vec3 _t153B = [_t1538, _t1539, _t153A];
      real _t153C = prim •00CE<$[3]; $[3]; $[]> (_t153B, _t0E38);
      real _t153D = prim -0026<$[]> (_t1537, _t153C);
      real _t153E = 0.e0;
      real _t153F = 0.e0;
      real _t1540 = 0.1e1;
      vec3 _t1541 = [_t153E, _t153F, _t1540];
      real _t1542 = prim •00CE<$[3]; $[3]; $[]> (_t1541, deltaP0E00);
      real _t1543 = prim /0055 (_t153D, _t1542);
      real _t1544 = -0.1e-15;
      bool _t1545 = prim >=007E (_t1543, _t1544);
      real _t1546 = 0.e0;
      real _t1547 = 0.e0;
      real _t1548 = 0.e0;
      real _t1549 = 0.1e1;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, _t0E38);
      real _t154C = prim -0026<$[]> (_t1546, _t154B);
      real _t154D = 0.e0;
      real _t154E = 0.e0;
      real _t154F = 0.1e1;
      vec3 _t1550 = [_t154D, _t154E, _t154F];
      real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, deltaP0E00);
      real _t1552 = prim /0055 (_t154C, _t1551);
      bool _t1553 = prim >0080 (time1471, _t1552);
      real _t1554 = 0.e0;
      real _t1555 = 0.e0;
      real _t1556 = 0.1e1;
      vec3 _t1557 = [_t1554, _t1555, _t1556];
      real _t1558 = prim •00CE<$[3]; $[3]; $[]> (_t1557, deltaP0E00);
      real _t1559 = prim |()|00B5<$[]> (_t1558);
      real _t155A = 0.1e-20;
      bool _t155B = prim >=007E (_t1559, _t155A);
      bool _t155C = prim $and01C4 (_t1553, _t155B);
      bool _t155D = prim $and01C4 (_t1545, _t155C);
      if _t155D {
        int _t155E = 3;
        bool _t155F = prim !=0086 (_t0E39, _t155E);
        if _t155F {
          real _t1560 = 0.e0;
          real _t1561 = 0.e0;
          real _t1562 = 0.e0;
          real _t1563 = 0.1e1;
          vec3 _t1564 = [_t1561, _t1562, _t1563];
          real _t1565 = prim •00CE<$[3]; $[3]; $[]> (_t1564, _t0E38);
          real _t1566 = prim -0026<$[]> (_t1560, _t1565);
          real _t1567 = 0.e0;
          real _t1568 = 0.e0;
          real _t1569 = 0.1e1;
          vec3 _t156A = [_t1567, _t1568, _t1569];
          real _t156B = prim •00CE<$[3]; $[3]; $[]> (_t156A, deltaP0E00);
          time1471 = prim /0055 (_t1566, _t156B);
          face1472 = 3;
        } else {
          real _t156C = 0.e0;
          real _t156D = 0.e0;
          real _t156E = 0.e0;
          real _t156F = 0.1e1;
          vec3 _t1570 = [_t156D, _t156E, _t156F];
          real _t1571 = prim •00CE<$[3]; $[3]; $[]> (_t1570, _t0E38);
          real _t1572 = prim -0026<$[]> (_t156C, _t1571);
          real _t1573 = 0.e0;
          real _t1574 = 0.e0;
          real _t1575 = 0.1e1;
          vec3 _t1576 = [_t1573, _t1574, _t1575];
          real _t1577 = prim •00CE<$[3]; $[3]; $[]> (_t1576, deltaP0E00);
          faceTime1473 = prim /0055 (_t1572, _t1577);
        }
      }
      int _t1578 = -1;
      bool _t1579 = prim !=0086 (face1472, _t1578);
      if _t1579 {
        real _t157A = 0.e0;
        real _t157B = prim max0125 (time1471, _t157A);
        real _t157C = (real)face1472;
        vec2 _t157D = [_t157B, _t157C];
        _t0E3A = _t157D;
      } else {
        real _t157E = -inf;
        bool _t157F = prim ==0084 (_t157E, faceTime1473);
        if _t157F {
          real _t1580 = -0.1e1;
          real _t1581 = -0.1e1;
          vec2 _t1582 = [_t1580, _t1581];
          _t0E3A = _t1582;
        } else {
          real _t1583 = (real)_t0E39;
          vec2 _t1584 = [faceTime1473, _t1583];
          _t0E3A = _t1584;
        }
      }
      Femdata: MeshPos nmp0E3B;
      int _t0EA6 = -1;
      real _t0EA7 = _t0E3A[1];
      int _t0EA8 = prim $r2i01B7 (_t0EA7);
      int[2] _t0EA9 = func nextCell4048A (_t0EA8, _t0E36, _t0E35);
      int _t0EAA = 0;
      int _t0EAB = prim $sub01C0<int; %2> (_t0EA9, _t0EAA);
      bool _t0EAC = prim !=0086 (_t0EA6, _t0EAB);
      if _t0EAC {
        string _t0EAD = "face ";
        real _t0EAE = _t0E3A[1];
        int _t0EAF = prim $r2i01B7 (_t0EAE);
        string _t0EB0 = " to ";
        real _t0EB1 = _t0E3A[1];
        int _t0EB2 = prim $r2i01B7 (_t0EB1);
        int[2] _t0EB3 = func nextCell4048A (_t0EB2, _t0E36, _t0E35);
        int _t0EB4 = 1;
        int _t0EB5 = prim $sub01C0<int; %2> (_t0EB3, _t0EB4);
        string _t0EB6 = "\n";
        string _t0EB7 = "got: ";
        real _t0EB8 = 0.1e1;
        real _t0EB9 = 0.e0;
        real _t0EBA = 0.e0;
        real _t0EBB = 0.e0;
        vec4 _t0EBC = [_t0EB8, _t0EB9, _t0EBA, _t0EBB];
        real _t0EBD = 0.e0;
        real _t0EBE = 0.1e1;
        real _t0EBF = 0.e0;
        real _t0EC0 = 0.e0;
        vec4 _t0EC1 = [_t0EBD, _t0EBE, _t0EBF, _t0EC0];
        real _t0EC2 = 0.e0;
        real _t0EC3 = 0.e0;
        real _t0EC4 = 0.1e1;
        real _t0EC5 = 0.e0;
        vec4 _t0EC6 = [_t0EC2, _t0EC3, _t0EC4, _t0EC5];
        real _t0EC7 = 0.971445146547e-16;
        real _t0EC8 = 0.e0;
        real _t0EC9 = 0.e0;
        real _t0ECA = 0.1e1;
        vec4 _t0ECB = [_t0EC7, _t0EC8, _t0EC9, _t0ECA];
        tensor[4,4] _t0ECC = [_t0EBC, _t0EC1, _t0EC6, _t0ECB];
        real _t0ECD = 0.57735026919e0;
        real _t0ECE = 0.57735026919e0;
        real _t0ECF = 0.57735026919e0;
        real _t0ED0 = -0.57735026919e0;
        vec4 _t0ED1 = [_t0ECD, _t0ECE, _t0ECF, _t0ED0];
        real _t0ED2 = -0.333333333333e0;
        real _t0ED3 = 0.666666666667e0;
        real _t0ED4 = -0.333333333333e0;
        real _t0ED5 = 0.333333333333e0;
        vec4 _t0ED6 = [_t0ED2, _t0ED3, _t0ED4, _t0ED5];
        real _t0ED7 = -0.333333333333e0;
        real _t0ED8 = -0.333333333333e0;
        real _t0ED9 = 0.666666666667e0;
        real _t0EDA = 0.333333333333e0;
        vec4 _t0EDB = [_t0ED7, _t0ED8, _t0ED9, _t0EDA];
        real _t0EDC = 0.971445146547e-16;
        real _t0EDD = 0.e0;
        real _t0EDE = 0.e0;
        real _t0EDF = 0.1e1;
        vec4 _t0EE0 = [_t0EDC, _t0EDD, _t0EDE, _t0EDF];
        tensor[4,4] _t0EE1 = [_t0ED1, _t0ED6, _t0EDB, _t0EE0];
        real _t0EE2 = -0.333333333333e0;
        real _t0EE3 = 0.666666666667e0;
        real _t0EE4 = -0.333333333333e0;
        real _t0EE5 = 0.333333333333e0;
        vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
        real _t0EE7 = -0.57735026919e0;
        real _t0EE8 = -0.57735026919e0;
        real _t0EE9 = -0.57735026919e0;
        real _t0EEA = 0.57735026919e0;
        vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
        real _t0EEC = -0.333333333333e0;
        real _t0EED = -0.333333333333e0;
        real _t0EEE = 0.666666666667e0;
        real _t0EEF = 0.333333333333e0;
        vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
        real _t0EF1 = 0.971445146547e-16;
        real _t0EF2 = 0.e0;
        real _t0EF3 = 0.e0;
        real _t0EF4 = 0.1e1;
        vec4 _t0EF5 = [_t0EF1, _t0EF2, _t0EF3, _t0EF4];
        tensor[4,4] _t0EF6 = [_t0EE6, _t0EEB, _t0EF0, _t0EF5];
        real _t0EF7 = -0.333333333333e0;
        real _t0EF8 = 0.666666666667e0;
        real _t0EF9 = -0.333333333333e0;
        real _t0EFA = 0.333333333333e0;
        vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
        real _t0EFC = -0.333333333333e0;
        real _t0EFD = -0.333333333333e0;
        real _t0EFE = 0.666666666667e0;
        real _t0EFF = 0.333333333333e0;
        vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
        real _t0F01 = 0.57735026919e0;
        real _t0F02 = 0.57735026919e0;
        real _t0F03 = 0.57735026919e0;
        real _t0F04 = -0.57735026919e0;
        vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
        real _t0F06 = 0.971445146547e-16;
        real _t0F07 = 0.e0;
        real _t0F08 = 0.e0;
        real _t0F09 = 0.1e1;
        vec4 _t0F0A = [_t0F06, _t0F07, _t0F08, _t0F09];
        tensor[4,4] _t0F0B = [_t0EFB, _t0F00, _t0F05, _t0F0A];
        tensor[4,4][4] _t0F0C = {_t0ECC, _t0EE1, _t0EF6, _t0F0B};
        real _t0F0D = 0.57735026919e0;
        real _t0F0E = -0.1e1;
        real _t0F0F = -0.1e1;
        real _t0F10 = 0.1e1;
        vec4 _t0F11 = [_t0F0D, _t0F0E, _t0F0F, _t0F10];
        real _t0F12 = 0.57735026919e0;
        real _t0F13 = 0.1e1;
        real _t0F14 = 0.e0;
        real _t0F15 = 0.e0;
        vec4 _t0F16 = [_t0F12, _t0F13, _t0F14, _t0F15];
        real _t0F17 = 0.57735026919e0;
        real _t0F18 = 0.e0;
        real _t0F19 = 0.1e1;
        real _t0F1A = 0.e0;
        vec4 _t0F1B = [_t0F17, _t0F18, _t0F19, _t0F1A];
        real _t0F1C = 0.e0;
        real _t0F1D = 0.e0;
        real _t0F1E = 0.e0;
        real _t0F1F = 0.1e1;
        vec4 _t0F20 = [_t0F1C, _t0F1D, _t0F1E, _t0F1F];
        tensor[4,4] _t0F21 = [_t0F11, _t0F16, _t0F1B, _t0F20];
        real _t0F22 = 0.1e1;
        real _t0F23 = 0.e0;
        real _t0F24 = 0.e0;
        real _t0F25 = 0.e0;
        vec4 _t0F26 = [_t0F22, _t0F23, _t0F24, _t0F25];
        real _t0F27 = 0.e0;
        real _t0F28 = 0.1e1;
        real _t0F29 = 0.e0;
        real _t0F2A = 0.e0;
        vec4 _t0F2B = [_t0F27, _t0F28, _t0F29, _t0F2A];
        real _t0F2C = 0.e0;
        real _t0F2D = 0.e0;
        real _t0F2E = 0.1e1;
        real _t0F2F = 0.e0;
        vec4 _t0F30 = [_t0F2C, _t0F2D, _t0F2E, _t0F2F];
        real _t0F31 = 0.e0;
        real _t0F32 = 0.e0;
        real _t0F33 = 0.e0;
        real _t0F34 = 0.1e1;
        vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
        tensor[4,4] _t0F36 = [_t0F26, _t0F2B, _t0F30, _t0F35];
        real _t0F37 = 0.e0;
        real _t0F38 = 0.1e1;
        real _t0F39 = 0.e0;
        real _t0F3A = 0.e0;
        vec4 _t0F3B = [_t0F37, _t0F38, _t0F39, _t0F3A];
        real _t0F3C = -0.1e1;
        real _t0F3D = 0.e0;
        real _t0F3E = 0.e0;
        real _t0F3F = 0.e0;
        vec4 _t0F40 = [_t0F3C, _t0F3D, _t0F3E, _t0F3F];
        real _t0F41 = 0.e0;
        real _t0F42 = 0.e0;
        real _t0F43 = 0.1e1;
        real _t0F44 = 0.e0;
        vec4 _t0F45 = [_t0F41, _t0F42, _t0F43, _t0F44];
        real _t0F46 = 0.e0;
        real _t0F47 = 0.e0;
        real _t0F48 = 0.e0;
        real _t0F49 = 0.1e1;
        vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
        tensor[4,4] _t0F4B = [_t0F3B, _t0F40, _t0F45, _t0F4A];
        real _t0F4C = 0.e0;
        real _t0F4D = 0.1e1;
        real _t0F4E = 0.e0;
        real _t0F4F = 0.e0;
        vec4 _t0F50 = [_t0F4C, _t0F4D, _t0F4E, _t0F4F];
        real _t0F51 = 0.e0;
        real _t0F52 = 0.e0;
        real _t0F53 = 0.1e1;
        real _t0F54 = 0.e0;
        vec4 _t0F55 = [_t0F51, _t0F52, _t0F53, _t0F54];
        real _t0F56 = 0.1e1;
        real _t0F57 = 0.e0;
        real _t0F58 = 0.e0;
        real _t0F59 = 0.e0;
        vec4 _t0F5A = [_t0F56, _t0F57, _t0F58, _t0F59];
        real _t0F5B = 0.e0;
        real _t0F5C = 0.e0;
        real _t0F5D = 0.e0;
        real _t0F5E = 0.1e1;
        vec4 _t0F5F = [_t0F5B, _t0F5C, _t0F5D, _t0F5E];
        tensor[4,4] _t0F60 = [_t0F50, _t0F55, _t0F5A, _t0F5F];
        tensor[4,4][4] _t0F61 = {_t0F21, _t0F36, _t0F4B, _t0F60};
        real _t0F62 = -0.1e1;
        real _t0F63 = -0.57735026919e0;
        real _t0F64 = -0.1e1;
        real _t0F65 = 0.1e1;
        vec4 _t0F66 = [_t0F62, _t0F63, _t0F64, _t0F65];
        real _t0F67 = 0.1e1;
        real _t0F68 = -0.57735026919e0;
        real _t0F69 = 0.e0;
        real _t0F6A = 0.e0;
        vec4 _t0F6B = [_t0F67, _t0F68, _t0F69, _t0F6A];
        real _t0F6C = 0.e0;
        real _t0F6D = -0.57735026919e0;
        real _t0F6E = 0.1e1;
        real _t0F6F = 0.e0;
        vec4 _t0F70 = [_t0F6C, _t0F6D, _t0F6E, _t0F6F];
        real _t0F71 = 0.e0;
        real _t0F72 = 0.e0;
        real _t0F73 = 0.e0;
        real _t0F74 = 0.1e1;
        vec4 _t0F75 = [_t0F71, _t0F72, _t0F73, _t0F74];
        tensor[4,4] _t0F76 = [_t0F66, _t0F6B, _t0F70, _t0F75];
        real _t0F77 = 0.e0;
        real _t0F78 = -0.1e1;
        real _t0F79 = 0.e0;
        real _t0F7A = 0.e0;
        vec4 _t0F7B = [_t0F77, _t0F78, _t0F79, _t0F7A];
        real _t0F7C = 0.1e1;
        real _t0F7D = 0.e0;
        real _t0F7E = 0.e0;
        real _t0F7F = 0.e0;
        vec4 _t0F80 = [_t0F7C, _t0F7D, _t0F7E, _t0F7F];
        real _t0F81 = 0.e0;
        real _t0F82 = 0.e0;
        real _t0F83 = 0.1e1;
        real _t0F84 = 0.e0;
        vec4 _t0F85 = [_t0F81, _t0F82, _t0F83, _t0F84];
        real _t0F86 = 0.e0;
        real _t0F87 = 0.e0;
        real _t0F88 = 0.e0;
        real _t0F89 = 0.1e1;
        vec4 _t0F8A = [_t0F86, _t0F87, _t0F88, _t0F89];
        tensor[4,4] _t0F8B = [_t0F7B, _t0F80, _t0F85, _t0F8A];
        real _t0F8C = 0.1e1;
        real _t0F8D = 0.e0;
        real _t0F8E = 0.e0;
        real _t0F8F = 0.e0;
        vec4 _t0F90 = [_t0F8C, _t0F8D, _t0F8E, _t0F8F];
        real _t0F91 = 0.e0;
        real _t0F92 = 0.1e1;
        real _t0F93 = 0.e0;
        real _t0F94 = 0.e0;
        vec4 _t0F95 = [_t0F91, _t0F92, _t0F93, _t0F94];
        real _t0F96 = 0.e0;
        real _t0F97 = 0.e0;
        real _t0F98 = 0.1e1;
        real _t0F99 = 0.e0;
        vec4 _t0F9A = [_t0F96, _t0F97, _t0F98, _t0F99];
        real _t0F9B = 0.e0;
        real _t0F9C = 0.e0;
        real _t0F9D = 0.e0;
        real _t0F9E = 0.1e1;
        vec4 _t0F9F = [_t0F9B, _t0F9C, _t0F9D, _t0F9E];
        tensor[4,4] _t0FA0 = [_t0F90, _t0F95, _t0F9A, _t0F9F];
        real _t0FA1 = 0.1e1;
        real _t0FA2 = 0.e0;
        real _t0FA3 = 0.e0;
        real _t0FA4 = 0.e0;
        vec4 _t0FA5 = [_t0FA1, _t0FA2, _t0FA3, _t0FA4];
        real _t0FA6 = 0.e0;
        real _t0FA7 = 0.e0;
        real _t0FA8 = 0.1e1;
        real _t0FA9 = 0.e0;
        vec4 _t0FAA = [_t0FA6, _t0FA7, _t0FA8, _t0FA9];
        real _t0FAB = 0.e0;
        real _t0FAC = -0.1e1;
        real _t0FAD = 0.e0;
        real _t0FAE = 0.e0;
        vec4 _t0FAF = [_t0FAB, _t0FAC, _t0FAD, _t0FAE];
        real _t0FB0 = 0.e0;
        real _t0FB1 = 0.e0;
        real _t0FB2 = 0.e0;
        real _t0FB3 = 0.1e1;
        vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
        tensor[4,4] _t0FB5 = [_t0FA5, _t0FAA, _t0FAF, _t0FB4];
        tensor[4,4][4] _t0FB6 = {_t0F76, _t0F8B, _t0FA0, _t0FB5};
        real _t0FB7 = -0.1e1;
        real _t0FB8 = -0.1e1;
        real _t0FB9 = 0.57735026919e0;
        real _t0FBA = 0.1e1;
        vec4 _t0FBB = [_t0FB7, _t0FB8, _t0FB9, _t0FBA];
        real _t0FBC = 0.1e1;
        real _t0FBD = 0.e0;
        real _t0FBE = 0.57735026919e0;
        real _t0FBF = 0.e0;
        vec4 _t0FC0 = [_t0FBC, _t0FBD, _t0FBE, _t0FBF];
        real _t0FC1 = 0.e0;
        real _t0FC2 = 0.1e1;
        real _t0FC3 = 0.57735026919e0;
        real _t0FC4 = 0.e0;
        vec4 _t0FC5 = [_t0FC1, _t0FC2, _t0FC3, _t0FC4];
        real _t0FC6 = 0.e0;
        real _t0FC7 = 0.e0;
        real _t0FC8 = 0.e0;
        real _t0FC9 = 0.1e1;
        vec4 _t0FCA = [_t0FC6, _t0FC7, _t0FC8, _t0FC9];
        tensor[4,4] _t0FCB = [_t0FBB, _t0FC0, _t0FC5, _t0FCA];
        real _t0FCC = 0.e0;
        real _t0FCD = 0.e0;
        real _t0FCE = 0.1e1;
        real _t0FCF = 0.e0;
        vec4 _t0FD0 = [_t0FCC, _t0FCD, _t0FCE, _t0FCF];
        real _t0FD1 = 0.1e1;
        real _t0FD2 = 0.e0;
        real _t0FD3 = 0.e0;
        real _t0FD4 = 0.e0;
        vec4 _t0FD5 = [_t0FD1, _t0FD2, _t0FD3, _t0FD4];
        real _t0FD6 = 0.e0;
        real _t0FD7 = 0.1e1;
        real _t0FD8 = 0.e0;
        real _t0FD9 = 0.e0;
        vec4 _t0FDA = [_t0FD6, _t0FD7, _t0FD8, _t0FD9];
        real _t0FDB = 0.e0;
        real _t0FDC = 0.e0;
        real _t0FDD = 0.e0;
        real _t0FDE = 0.1e1;
        vec4 _t0FDF = [_t0FDB, _t0FDC, _t0FDD, _t0FDE];
        tensor[4,4] _t0FE0 = [_t0FD0, _t0FD5, _t0FDA, _t0FDF];
        real _t0FE1 = 0.1e1;
        real _t0FE2 = 0.e0;
        real _t0FE3 = 0.e0;
        real _t0FE4 = 0.e0;
        vec4 _t0FE5 = [_t0FE1, _t0FE2, _t0FE3, _t0FE4];
        real _t0FE6 = 0.e0;
        real _t0FE7 = 0.e0;
        real _t0FE8 = -0.1e1;
        real _t0FE9 = 0.e0;
        vec4 _t0FEA = [_t0FE6, _t0FE7, _t0FE8, _t0FE9];
        real _t0FEB = 0.e0;
        real _t0FEC = 0.1e1;
        real _t0FED = 0.e0;
        real _t0FEE = 0.e0;
        vec4 _t0FEF = [_t0FEB, _t0FEC, _t0FED, _t0FEE];
        real _t0FF0 = 0.e0;
        real _t0FF1 = 0.e0;
        real _t0FF2 = 0.e0;
        real _t0FF3 = 0.1e1;
        vec4 _t0FF4 = [_t0FF0, _t0FF1, _t0FF2, _t0FF3];
        tensor[4,4] _t0FF5 = [_t0FE5, _t0FEA, _t0FEF, _t0FF4];
        real _t0FF6 = 0.1e1;
        real _t0FF7 = 0.e0;
        real _t0FF8 = 0.e0;
        real _t0FF9 = 0.e0;
        vec4 _t0FFA = [_t0FF6, _t0FF7, _t0FF8, _t0FF9];
        real _t0FFB = 0.e0;
        real _t0FFC = 0.1e1;
        real _t0FFD = 0.e0;
        real _t0FFE = 0.e0;
        vec4 _t0FFF = [_t0FFB, _t0FFC, _t0FFD, _t0FFE];
        real _t1000 = 0.e0;
        real _t1001 = 0.e0;
        real _t1002 = 0.1e1;
        real _t1003 = 0.e0;
        vec4 _t1004 = [_t1000, _t1001, _t1002, _t1003];
        real _t1005 = 0.e0;
        real _t1006 = 0.e0;
        real _t1007 = 0.e0;
        real _t1008 = 0.1e1;
        vec4 _t1009 = [_t1005, _t1006, _t1007, _t1008];
        tensor[4,4] _t100A = [_t0FFA, _t0FFF, _t1004, _t1009];
        tensor[4,4][4] _t100B = {_t0FCB, _t0FE0, _t0FF5, _t100A};
        tensor[4,4][4][4] _t100C = {_t0F0C, _t0F61, _t0FB6, _t100B};
        real _t100D = _t0E3A[1];
        int _t100E = prim $r2i01B7 (_t100D);
        tensor[4,4][4] _t100F = prim $sub01C0<tensor[4,4][4]; %4> (_t100C, _t100E);
        real _t1010 = _t0E3A[1];
        int _t1011 = prim $r2i01B7 (_t1010);
        int[2] _t1012 = func nextCell4048A (_t1011, _t0E36, _t0E35);
        int _t1013 = 1;
        int _t1014 = prim $sub01C0<int; %2> (_t1012, _t1013);
        tensor[4,4] _t1015 = prim $sub01C0<tensor[4,4]; %4> (_t100F, _t1014);
        string _t1016 = "\n";
        print (_t0EAD, _t0EAF, _t0EB0, _t0EB5, _t0EB6, _t0EB7, _t1015, _t1016);
        real _t1017 = _t0E3A[1];
        int _t1018 = prim $r2i01B7 (_t1017);
        int[2] _t1019 = func nextCell4048A (_t1018, _t0E36, _t0E35);
        int _t101A = 0;
        int _t101B = prim $sub01C0<int; %2> (_t1019, _t101A);
        real _t101C = 0.1e1;
        real _t101D = 0.e0;
        real _t101E = 0.e0;
        real _t101F = 0.e0;
        vec4 _t1020 = [_t101C, _t101D, _t101E, _t101F];
        real _t1021 = 0.e0;
        real _t1022 = 0.1e1;
        real _t1023 = 0.e0;
        real _t1024 = 0.e0;
        vec4 _t1025 = [_t1021, _t1022, _t1023, _t1024];
        real _t1026 = 0.e0;
        real _t1027 = 0.e0;
        real _t1028 = 0.1e1;
        real _t1029 = 0.e0;
        vec4 _t102A = [_t1026, _t1027, _t1028, _t1029];
        real _t102B = 0.971445146547e-16;
        real _t102C = 0.e0;
        real _t102D = 0.e0;
        real _t102E = 0.1e1;
        vec4 _t102F = [_t102B, _t102C, _t102D, _t102E];
        tensor[4,4] _t1030 = [_t1020, _t1025, _t102A, _t102F];
        real _t1031 = 0.57735026919e0;
        real _t1032 = 0.57735026919e0;
        real _t1033 = 0.57735026919e0;
        real _t1034 = -0.57735026919e0;
        vec4 _t1035 = [_t1031, _t1032, _t1033, _t1034];
        real _t1036 = -0.333333333333e0;
        real _t1037 = 0.666666666667e0;
        real _t1038 = -0.333333333333e0;
        real _t1039 = 0.333333333333e0;
        vec4 _t103A = [_t1036, _t1037, _t1038, _t1039];
        real _t103B = -0.333333333333e0;
        real _t103C = -0.333333333333e0;
        real _t103D = 0.666666666667e0;
        real _t103E = 0.333333333333e0;
        vec4 _t103F = [_t103B, _t103C, _t103D, _t103E];
        real _t1040 = 0.971445146547e-16;
        real _t1041 = 0.e0;
        real _t1042 = 0.e0;
        real _t1043 = 0.1e1;
        vec4 _t1044 = [_t1040, _t1041, _t1042, _t1043];
        tensor[4,4] _t1045 = [_t1035, _t103A, _t103F, _t1044];
        real _t1046 = -0.333333333333e0;
        real _t1047 = 0.666666666667e0;
        real _t1048 = -0.333333333333e0;
        real _t1049 = 0.333333333333e0;
        vec4 _t104A = [_t1046, _t1047, _t1048, _t1049];
        real _t104B = -0.57735026919e0;
        real _t104C = -0.57735026919e0;
        real _t104D = -0.57735026919e0;
        real _t104E = 0.57735026919e0;
        vec4 _t104F = [_t104B, _t104C, _t104D, _t104E];
        real _t1050 = -0.333333333333e0;
        real _t1051 = -0.333333333333e0;
        real _t1052 = 0.666666666667e0;
        real _t1053 = 0.333333333333e0;
        vec4 _t1054 = [_t1050, _t1051, _t1052, _t1053];
        real _t1055 = 0.971445146547e-16;
        real _t1056 = 0.e0;
        real _t1057 = 0.e0;
        real _t1058 = 0.1e1;
        vec4 _t1059 = [_t1055, _t1056, _t1057, _t1058];
        tensor[4,4] _t105A = [_t104A, _t104F, _t1054, _t1059];
        real _t105B = -0.333333333333e0;
        real _t105C = 0.666666666667e0;
        real _t105D = -0.333333333333e0;
        real _t105E = 0.333333333333e0;
        vec4 _t105F = [_t105B, _t105C, _t105D, _t105E];
        real _t1060 = -0.333333333333e0;
        real _t1061 = -0.333333333333e0;
        real _t1062 = 0.666666666667e0;
        real _t1063 = 0.333333333333e0;
        vec4 _t1064 = [_t1060, _t1061, _t1062, _t1063];
        real _t1065 = 0.57735026919e0;
        real _t1066 = 0.57735026919e0;
        real _t1067 = 0.57735026919e0;
        real _t1068 = -0.57735026919e0;
        vec4 _t1069 = [_t1065, _t1066, _t1067, _t1068];
        real _t106A = 0.971445146547e-16;
        real _t106B = 0.e0;
        real _t106C = 0.e0;
        real _t106D = 0.1e1;
        vec4 _t106E = [_t106A, _t106B, _t106C, _t106D];
        tensor[4,4] _t106F = [_t105F, _t1064, _t1069, _t106E];
        tensor[4,4][4] _t1070 = {_t1030, _t1045, _t105A, _t106F};
        real _t1071 = 0.57735026919e0;
        real _t1072 = -0.1e1;
        real _t1073 = -0.1e1;
        real _t1074 = 0.1e1;
        vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
        real _t1076 = 0.57735026919e0;
        real _t1077 = 0.1e1;
        real _t1078 = 0.e0;
        real _t1079 = 0.e0;
        vec4 _t107A = [_t1076, _t1077, _t1078, _t1079];
        real _t107B = 0.57735026919e0;
        real _t107C = 0.e0;
        real _t107D = 0.1e1;
        real _t107E = 0.e0;
        vec4 _t107F = [_t107B, _t107C, _t107D, _t107E];
        real _t1080 = 0.e0;
        real _t1081 = 0.e0;
        real _t1082 = 0.e0;
        real _t1083 = 0.1e1;
        vec4 _t1084 = [_t1080, _t1081, _t1082, _t1083];
        tensor[4,4] _t1085 = [_t1075, _t107A, _t107F, _t1084];
        real _t1086 = 0.1e1;
        real _t1087 = 0.e0;
        real _t1088 = 0.e0;
        real _t1089 = 0.e0;
        vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
        real _t108B = 0.e0;
        real _t108C = 0.1e1;
        real _t108D = 0.e0;
        real _t108E = 0.e0;
        vec4 _t108F = [_t108B, _t108C, _t108D, _t108E];
        real _t1090 = 0.e0;
        real _t1091 = 0.e0;
        real _t1092 = 0.1e1;
        real _t1093 = 0.e0;
        vec4 _t1094 = [_t1090, _t1091, _t1092, _t1093];
        real _t1095 = 0.e0;
        real _t1096 = 0.e0;
        real _t1097 = 0.e0;
        real _t1098 = 0.1e1;
        vec4 _t1099 = [_t1095, _t1096, _t1097, _t1098];
        tensor[4,4] _t109A = [_t108A, _t108F, _t1094, _t1099];
        real _t109B = 0.e0;
        real _t109C = 0.1e1;
        real _t109D = 0.e0;
        real _t109E = 0.e0;
        vec4 _t109F = [_t109B, _t109C, _t109D, _t109E];
        real _t10A0 = -0.1e1;
        real _t10A1 = 0.e0;
        real _t10A2 = 0.e0;
        real _t10A3 = 0.e0;
        vec4 _t10A4 = [_t10A0, _t10A1, _t10A2, _t10A3];
        real _t10A5 = 0.e0;
        real _t10A6 = 0.e0;
        real _t10A7 = 0.1e1;
        real _t10A8 = 0.e0;
        vec4 _t10A9 = [_t10A5, _t10A6, _t10A7, _t10A8];
        real _t10AA = 0.e0;
        real _t10AB = 0.e0;
        real _t10AC = 0.e0;
        real _t10AD = 0.1e1;
        vec4 _t10AE = [_t10AA, _t10AB, _t10AC, _t10AD];
        tensor[4,4] _t10AF = [_t109F, _t10A4, _t10A9, _t10AE];
        real _t10B0 = 0.e0;
        real _t10B1 = 0.1e1;
        real _t10B2 = 0.e0;
        real _t10B3 = 0.e0;
        vec4 _t10B4 = [_t10B0, _t10B1, _t10B2, _t10B3];
        real _t10B5 = 0.e0;
        real _t10B6 = 0.e0;
        real _t10B7 = 0.1e1;
        real _t10B8 = 0.e0;
        vec4 _t10B9 = [_t10B5, _t10B6, _t10B7, _t10B8];
        real _t10BA = 0.1e1;
        real _t10BB = 0.e0;
        real _t10BC = 0.e0;
        real _t10BD = 0.e0;
        vec4 _t10BE = [_t10BA, _t10BB, _t10BC, _t10BD];
        real _t10BF = 0.e0;
        real _t10C0 = 0.e0;
        real _t10C1 = 0.e0;
        real _t10C2 = 0.1e1;
        vec4 _t10C3 = [_t10BF, _t10C0, _t10C1, _t10C2];
        tensor[4,4] _t10C4 = [_t10B4, _t10B9, _t10BE, _t10C3];
        tensor[4,4][4] _t10C5 = {_t1085, _t109A, _t10AF, _t10C4};
        real _t10C6 = -0.1e1;
        real _t10C7 = -0.57735026919e0;
        real _t10C8 = -0.1e1;
        real _t10C9 = 0.1e1;
        vec4 _t10CA = [_t10C6, _t10C7, _t10C8, _t10C9];
        real _t10CB = 0.1e1;
        real _t10CC = -0.57735026919e0;
        real _t10CD = 0.e0;
        real _t10CE = 0.e0;
        vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
        real _t10D0 = 0.e0;
        real _t10D1 = -0.57735026919e0;
        real _t10D2 = 0.1e1;
        real _t10D3 = 0.e0;
        vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
        real _t10D5 = 0.e0;
        real _t10D6 = 0.e0;
        real _t10D7 = 0.e0;
        real _t10D8 = 0.1e1;
        vec4 _t10D9 = [_t10D5, _t10D6, _t10D7, _t10D8];
        tensor[4,4] _t10DA = [_t10CA, _t10CF, _t10D4, _t10D9];
        real _t10DB = 0.e0;
        real _t10DC = -0.1e1;
        real _t10DD = 0.e0;
        real _t10DE = 0.e0;
        vec4 _t10DF = [_t10DB, _t10DC, _t10DD, _t10DE];
        real _t10E0 = 0.1e1;
        real _t10E1 = 0.e0;
        real _t10E2 = 0.e0;
        real _t10E3 = 0.e0;
        vec4 _t10E4 = [_t10E0, _t10E1, _t10E2, _t10E3];
        real _t10E5 = 0.e0;
        real _t10E6 = 0.e0;
        real _t10E7 = 0.1e1;
        real _t10E8 = 0.e0;
        vec4 _t10E9 = [_t10E5, _t10E6, _t10E7, _t10E8];
        real _t10EA = 0.e0;
        real _t10EB = 0.e0;
        real _t10EC = 0.e0;
        real _t10ED = 0.1e1;
        vec4 _t10EE = [_t10EA, _t10EB, _t10EC, _t10ED];
        tensor[4,4] _t10EF = [_t10DF, _t10E4, _t10E9, _t10EE];
        real _t10F0 = 0.1e1;
        real _t10F1 = 0.e0;
        real _t10F2 = 0.e0;
        real _t10F3 = 0.e0;
        vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
        real _t10F5 = 0.e0;
        real _t10F6 = 0.1e1;
        real _t10F7 = 0.e0;
        real _t10F8 = 0.e0;
        vec4 _t10F9 = [_t10F5, _t10F6, _t10F7, _t10F8];
        real _t10FA = 0.e0;
        real _t10FB = 0.e0;
        real _t10FC = 0.1e1;
        real _t10FD = 0.e0;
        vec4 _t10FE = [_t10FA, _t10FB, _t10FC, _t10FD];
        real _t10FF = 0.e0;
        real _t1100 = 0.e0;
        real _t1101 = 0.e0;
        real _t1102 = 0.1e1;
        vec4 _t1103 = [_t10FF, _t1100, _t1101, _t1102];
        tensor[4,4] _t1104 = [_t10F4, _t10F9, _t10FE, _t1103];
        real _t1105 = 0.1e1;
        real _t1106 = 0.e0;
        real _t1107 = 0.e0;
        real _t1108 = 0.e0;
        vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
        real _t110A = 0.e0;
        real _t110B = 0.e0;
        real _t110C = 0.1e1;
        real _t110D = 0.e0;
        vec4 _t110E = [_t110A, _t110B, _t110C, _t110D];
        real _t110F = 0.e0;
        real _t1110 = -0.1e1;
        real _t1111 = 0.e0;
        real _t1112 = 0.e0;
        vec4 _t1113 = [_t110F, _t1110, _t1111, _t1112];
        real _t1114 = 0.e0;
        real _t1115 = 0.e0;
        real _t1116 = 0.e0;
        real _t1117 = 0.1e1;
        vec4 _t1118 = [_t1114, _t1115, _t1116, _t1117];
        tensor[4,4] _t1119 = [_t1109, _t110E, _t1113, _t1118];
        tensor[4,4][4] _t111A = {_t10DA, _t10EF, _t1104, _t1119};
        real _t111B = -0.1e1;
        real _t111C = -0.1e1;
        real _t111D = 0.57735026919e0;
        real _t111E = 0.1e1;
        vec4 _t111F = [_t111B, _t111C, _t111D, _t111E];
        real _t1120 = 0.1e1;
        real _t1121 = 0.e0;
        real _t1122 = 0.57735026919e0;
        real _t1123 = 0.e0;
        vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
        real _t1125 = 0.e0;
        real _t1126 = 0.1e1;
        real _t1127 = 0.57735026919e0;
        real _t1128 = 0.e0;
        vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
        real _t112A = 0.e0;
        real _t112B = 0.e0;
        real _t112C = 0.e0;
        real _t112D = 0.1e1;
        vec4 _t112E = [_t112A, _t112B, _t112C, _t112D];
        tensor[4,4] _t112F = [_t111F, _t1124, _t1129, _t112E];
        real _t1130 = 0.e0;
        real _t1131 = 0.e0;
        real _t1132 = 0.1e1;
        real _t1133 = 0.e0;
        vec4 _t1134 = [_t1130, _t1131, _t1132, _t1133];
        real _t1135 = 0.1e1;
        real _t1136 = 0.e0;
        real _t1137 = 0.e0;
        real _t1138 = 0.e0;
        vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
        real _t113A = 0.e0;
        real _t113B = 0.1e1;
        real _t113C = 0.e0;
        real _t113D = 0.e0;
        vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
        real _t113F = 0.e0;
        real _t1140 = 0.e0;
        real _t1141 = 0.e0;
        real _t1142 = 0.1e1;
        vec4 _t1143 = [_t113F, _t1140, _t1141, _t1142];
        tensor[4,4] _t1144 = [_t1134, _t1139, _t113E, _t1143];
        real _t1145 = 0.1e1;
        real _t1146 = 0.e0;
        real _t1147 = 0.e0;
        real _t1148 = 0.e0;
        vec4 _t1149 = [_t1145, _t1146, _t1147, _t1148];
        real _t114A = 0.e0;
        real _t114B = 0.e0;
        real _t114C = -0.1e1;
        real _t114D = 0.e0;
        vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
        real _t114F = 0.e0;
        real _t1150 = 0.1e1;
        real _t1151 = 0.e0;
        real _t1152 = 0.e0;
        vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
        real _t1154 = 0.e0;
        real _t1155 = 0.e0;
        real _t1156 = 0.e0;
        real _t1157 = 0.1e1;
        vec4 _t1158 = [_t1154, _t1155, _t1156, _t1157];
        tensor[4,4] _t1159 = [_t1149, _t114E, _t1153, _t1158];
        real _t115A = 0.1e1;
        real _t115B = 0.e0;
        real _t115C = 0.e0;
        real _t115D = 0.e0;
        vec4 _t115E = [_t115A, _t115B, _t115C, _t115D];
        real _t115F = 0.e0;
        real _t1160 = 0.1e1;
        real _t1161 = 0.e0;
        real _t1162 = 0.e0;
        vec4 _t1163 = [_t115F, _t1160, _t1161, _t1162];
        real _t1164 = 0.e0;
        real _t1165 = 0.e0;
        real _t1166 = 0.1e1;
        real _t1167 = 0.e0;
        vec4 _t1168 = [_t1164, _t1165, _t1166, _t1167];
        real _t1169 = 0.e0;
        real _t116A = 0.e0;
        real _t116B = 0.e0;
        real _t116C = 0.1e1;
        vec4 _t116D = [_t1169, _t116A, _t116B, _t116C];
        tensor[4,4] _t116E = [_t115E, _t1163, _t1168, _t116D];
        tensor[4,4][4] _t116F = {_t112F, _t1144, _t1159, _t116E};
        tensor[4,4][4][4] _t1170 = {_t1070, _t10C5, _t111A, _t116F};
        real _t1171 = _t0E3A[1];
        int _t1172 = prim $r2i01B7 (_t1171);
        tensor[4,4][4] _t1173 = prim $sub01C0<tensor[4,4][4]; %4> (_t1170, _t1172);
        real _t1174 = _t0E3A[1];
        int _t1175 = prim $r2i01B7 (_t1174);
        int[2] _t1176 = func nextCell4048A (_t1175, _t0E36, _t0E35);
        int _t1177 = 1;
        int _t1178 = prim $sub01C0<int; %2> (_t1176, _t1177);
        tensor[4,4] _t1179 = prim $sub01C0<tensor[4,4]; %4> (_t1173, _t1178);
        real _t117A = _t0E3A[0];
        vec3 _t117B = prim *0036<$[3]> (_t117A, deltaP0E00);
        vec3 _t117C = prim +0017<$[3]> (_t117B, _t0E37);
        real _t117D = _t117C[0];
        real _t117E = _t0E3A[0];
        vec3 _t117F = prim *0036<$[3]> (_t117E, deltaP0E00);
        vec3 _t1180 = prim +0017<$[3]> (_t117F, _t0E37);
        real _t1181 = _t1180[1];
        real _t1182 = _t0E3A[0];
        vec3 _t1183 = prim *0036<$[3]> (_t1182, deltaP0E00);
        vec3 _t1184 = prim +0017<$[3]> (_t1183, _t0E37);
        real _t1185 = _t1184[2];
        real _t1186 = 0.1e1;
        vec4 _t1187 = [_t117D, _t1181, _t1185, _t1186];
        vec4 _t1188 = prim •00CE<$[4,4]; $[4]; $[4]> (_t1179, _t1187);
        real _t1189 = _t1188[0];
        real _t118A = 0.1e1;
        real _t118B = 0.e0;
        real _t118C = 0.e0;
        real _t118D = 0.e0;
        vec4 _t118E = [_t118A, _t118B, _t118C, _t118D];
        real _t118F = 0.e0;
        real _t1190 = 0.1e1;
        real _t1191 = 0.e0;
        real _t1192 = 0.e0;
        vec4 _t1193 = [_t118F, _t1190, _t1191, _t1192];
        real _t1194 = 0.e0;
        real _t1195 = 0.e0;
        real _t1196 = 0.1e1;
        real _t1197 = 0.e0;
        vec4 _t1198 = [_t1194, _t1195, _t1196, _t1197];
        real _t1199 = 0.971445146547e-16;
        real _t119A = 0.e0;
        real _t119B = 0.e0;
        real _t119C = 0.1e1;
        vec4 _t119D = [_t1199, _t119A, _t119B, _t119C];
        tensor[4,4] _t119E = [_t118E, _t1193, _t1198, _t119D];
        real _t119F = 0.57735026919e0;
        real _t11A0 = 0.57735026919e0;
        real _t11A1 = 0.57735026919e0;
        real _t11A2 = -0.57735026919e0;
        vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
        real _t11A4 = -0.333333333333e0;
        real _t11A5 = 0.666666666667e0;
        real _t11A6 = -0.333333333333e0;
        real _t11A7 = 0.333333333333e0;
        vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
        real _t11A9 = -0.333333333333e0;
        real _t11AA = -0.333333333333e0;
        real _t11AB = 0.666666666667e0;
        real _t11AC = 0.333333333333e0;
        vec4 _t11AD = [_t11A9, _t11AA, _t11AB, _t11AC];
        real _t11AE = 0.971445146547e-16;
        real _t11AF = 0.e0;
        real _t11B0 = 0.e0;
        real _t11B1 = 0.1e1;
        vec4 _t11B2 = [_t11AE, _t11AF, _t11B0, _t11B1];
        tensor[4,4] _t11B3 = [_t11A3, _t11A8, _t11AD, _t11B2];
        real _t11B4 = -0.333333333333e0;
        real _t11B5 = 0.666666666667e0;
        real _t11B6 = -0.333333333333e0;
        real _t11B7 = 0.333333333333e0;
        vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
        real _t11B9 = -0.57735026919e0;
        real _t11BA = -0.57735026919e0;
        real _t11BB = -0.57735026919e0;
        real _t11BC = 0.57735026919e0;
        vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
        real _t11BE = -0.333333333333e0;
        real _t11BF = -0.333333333333e0;
        real _t11C0 = 0.666666666667e0;
        real _t11C1 = 0.333333333333e0;
        vec4 _t11C2 = [_t11BE, _t11BF, _t11C0, _t11C1];
        real _t11C3 = 0.971445146547e-16;
        real _t11C4 = 0.e0;
        real _t11C5 = 0.e0;
        real _t11C6 = 0.1e1;
        vec4 _t11C7 = [_t11C3, _t11C4, _t11C5, _t11C6];
        tensor[4,4] _t11C8 = [_t11B8, _t11BD, _t11C2, _t11C7];
        real _t11C9 = -0.333333333333e0;
        real _t11CA = 0.666666666667e0;
        real _t11CB = -0.333333333333e0;
        real _t11CC = 0.333333333333e0;
        vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
        real _t11CE = -0.333333333333e0;
        real _t11CF = -0.333333333333e0;
        real _t11D0 = 0.666666666667e0;
        real _t11D1 = 0.333333333333e0;
        vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
        real _t11D3 = 0.57735026919e0;
        real _t11D4 = 0.57735026919e0;
        real _t11D5 = 0.57735026919e0;
        real _t11D6 = -0.57735026919e0;
        vec4 _t11D7 = [_t11D3, _t11D4, _t11D5, _t11D6];
        real _t11D8 = 0.971445146547e-16;
        real _t11D9 = 0.e0;
        real _t11DA = 0.e0;
        real _t11DB = 0.1e1;
        vec4 _t11DC = [_t11D8, _t11D9, _t11DA, _t11DB];
        tensor[4,4] _t11DD = [_t11CD, _t11D2, _t11D7, _t11DC];
        tensor[4,4][4] _t11DE = {_t119E, _t11B3, _t11C8, _t11DD};
        real _t11DF = 0.57735026919e0;
        real _t11E0 = -0.1e1;
        real _t11E1 = -0.1e1;
        real _t11E2 = 0.1e1;
        vec4 _t11E3 = [_t11DF, _t11E0, _t11E1, _t11E2];
        real _t11E4 = 0.57735026919e0;
        real _t11E5 = 0.1e1;
        real _t11E6 = 0.e0;
        real _t11E7 = 0.e0;
        vec4 _t11E8 = [_t11E4, _t11E5, _t11E6, _t11E7];
        real _t11E9 = 0.57735026919e0;
        real _t11EA = 0.e0;
        real _t11EB = 0.1e1;
        real _t11EC = 0.e0;
        vec4 _t11ED = [_t11E9, _t11EA, _t11EB, _t11EC];
        real _t11EE = 0.e0;
        real _t11EF = 0.e0;
        real _t11F0 = 0.e0;
        real _t11F1 = 0.1e1;
        vec4 _t11F2 = [_t11EE, _t11EF, _t11F0, _t11F1];
        tensor[4,4] _t11F3 = [_t11E3, _t11E8, _t11ED, _t11F2];
        real _t11F4 = 0.1e1;
        real _t11F5 = 0.e0;
        real _t11F6 = 0.e0;
        real _t11F7 = 0.e0;
        vec4 _t11F8 = [_t11F4, _t11F5, _t11F6, _t11F7];
        real _t11F9 = 0.e0;
        real _t11FA = 0.1e1;
        real _t11FB = 0.e0;
        real _t11FC = 0.e0;
        vec4 _t11FD = [_t11F9, _t11FA, _t11FB, _t11FC];
        real _t11FE = 0.e0;
        real _t11FF = 0.e0;
        real _t1200 = 0.1e1;
        real _t1201 = 0.e0;
        vec4 _t1202 = [_t11FE, _t11FF, _t1200, _t1201];
        real _t1203 = 0.e0;
        real _t1204 = 0.e0;
        real _t1205 = 0.e0;
        real _t1206 = 0.1e1;
        vec4 _t1207 = [_t1203, _t1204, _t1205, _t1206];
        tensor[4,4] _t1208 = [_t11F8, _t11FD, _t1202, _t1207];
        real _t1209 = 0.e0;
        real _t120A = 0.1e1;
        real _t120B = 0.e0;
        real _t120C = 0.e0;
        vec4 _t120D = [_t1209, _t120A, _t120B, _t120C];
        real _t120E = -0.1e1;
        real _t120F = 0.e0;
        real _t1210 = 0.e0;
        real _t1211 = 0.e0;
        vec4 _t1212 = [_t120E, _t120F, _t1210, _t1211];
        real _t1213 = 0.e0;
        real _t1214 = 0.e0;
        real _t1215 = 0.1e1;
        real _t1216 = 0.e0;
        vec4 _t1217 = [_t1213, _t1214, _t1215, _t1216];
        real _t1218 = 0.e0;
        real _t1219 = 0.e0;
        real _t121A = 0.e0;
        real _t121B = 0.1e1;
        vec4 _t121C = [_t1218, _t1219, _t121A, _t121B];
        tensor[4,4] _t121D = [_t120D, _t1212, _t1217, _t121C];
        real _t121E = 0.e0;
        real _t121F = 0.1e1;
        real _t1220 = 0.e0;
        real _t1221 = 0.e0;
        vec4 _t1222 = [_t121E, _t121F, _t1220, _t1221];
        real _t1223 = 0.e0;
        real _t1224 = 0.e0;
        real _t1225 = 0.1e1;
        real _t1226 = 0.e0;
        vec4 _t1227 = [_t1223, _t1224, _t1225, _t1226];
        real _t1228 = 0.1e1;
        real _t1229 = 0.e0;
        real _t122A = 0.e0;
        real _t122B = 0.e0;
        vec4 _t122C = [_t1228, _t1229, _t122A, _t122B];
        real _t122D = 0.e0;
        real _t122E = 0.e0;
        real _t122F = 0.e0;
        real _t1230 = 0.1e1;
        vec4 _t1231 = [_t122D, _t122E, _t122F, _t1230];
        tensor[4,4] _t1232 = [_t1222, _t1227, _t122C, _t1231];
        tensor[4,4][4] _t1233 = {_t11F3, _t1208, _t121D, _t1232};
        real _t1234 = -0.1e1;
        real _t1235 = -0.57735026919e0;
        real _t1236 = -0.1e1;
        real _t1237 = 0.1e1;
        vec4 _t1238 = [_t1234, _t1235, _t1236, _t1237];
        real _t1239 = 0.1e1;
        real _t123A = -0.57735026919e0;
        real _t123B = 0.e0;
        real _t123C = 0.e0;
        vec4 _t123D = [_t1239, _t123A, _t123B, _t123C];
        real _t123E = 0.e0;
        real _t123F = -0.57735026919e0;
        real _t1240 = 0.1e1;
        real _t1241 = 0.e0;
        vec4 _t1242 = [_t123E, _t123F, _t1240, _t1241];
        real _t1243 = 0.e0;
        real _t1244 = 0.e0;
        real _t1245 = 0.e0;
        real _t1246 = 0.1e1;
        vec4 _t1247 = [_t1243, _t1244, _t1245, _t1246];
        tensor[4,4] _t1248 = [_t1238, _t123D, _t1242, _t1247];
        real _t1249 = 0.e0;
        real _t124A = -0.1e1;
        real _t124B = 0.e0;
        real _t124C = 0.e0;
        vec4 _t124D = [_t1249, _t124A, _t124B, _t124C];
        real _t124E = 0.1e1;
        real _t124F = 0.e0;
        real _t1250 = 0.e0;
        real _t1251 = 0.e0;
        vec4 _t1252 = [_t124E, _t124F, _t1250, _t1251];
        real _t1253 = 0.e0;
        real _t1254 = 0.e0;
        real _t1255 = 0.1e1;
        real _t1256 = 0.e0;
        vec4 _t1257 = [_t1253, _t1254, _t1255, _t1256];
        real _t1258 = 0.e0;
        real _t1259 = 0.e0;
        real _t125A = 0.e0;
        real _t125B = 0.1e1;
        vec4 _t125C = [_t1258, _t1259, _t125A, _t125B];
        tensor[4,4] _t125D = [_t124D, _t1252, _t1257, _t125C];
        real _t125E = 0.1e1;
        real _t125F = 0.e0;
        real _t1260 = 0.e0;
        real _t1261 = 0.e0;
        vec4 _t1262 = [_t125E, _t125F, _t1260, _t1261];
        real _t1263 = 0.e0;
        real _t1264 = 0.1e1;
        real _t1265 = 0.e0;
        real _t1266 = 0.e0;
        vec4 _t1267 = [_t1263, _t1264, _t1265, _t1266];
        real _t1268 = 0.e0;
        real _t1269 = 0.e0;
        real _t126A = 0.1e1;
        real _t126B = 0.e0;
        vec4 _t126C = [_t1268, _t1269, _t126A, _t126B];
        real _t126D = 0.e0;
        real _t126E = 0.e0;
        real _t126F = 0.e0;
        real _t1270 = 0.1e1;
        vec4 _t1271 = [_t126D, _t126E, _t126F, _t1270];
        tensor[4,4] _t1272 = [_t1262, _t1267, _t126C, _t1271];
        real _t1273 = 0.1e1;
        real _t1274 = 0.e0;
        real _t1275 = 0.e0;
        real _t1276 = 0.e0;
        vec4 _t1277 = [_t1273, _t1274, _t1275, _t1276];
        real _t1278 = 0.e0;
        real _t1279 = 0.e0;
        real _t127A = 0.1e1;
        real _t127B = 0.e0;
        vec4 _t127C = [_t1278, _t1279, _t127A, _t127B];
        real _t127D = 0.e0;
        real _t127E = -0.1e1;
        real _t127F = 0.e0;
        real _t1280 = 0.e0;
        vec4 _t1281 = [_t127D, _t127E, _t127F, _t1280];
        real _t1282 = 0.e0;
        real _t1283 = 0.e0;
        real _t1284 = 0.e0;
        real _t1285 = 0.1e1;
        vec4 _t1286 = [_t1282, _t1283, _t1284, _t1285];
        tensor[4,4] _t1287 = [_t1277, _t127C, _t1281, _t1286];
        tensor[4,4][4] _t1288 = {_t1248, _t125D, _t1272, _t1287};
        real _t1289 = -0.1e1;
        real _t128A = -0.1e1;
        real _t128B = 0.57735026919e0;
        real _t128C = 0.1e1;
        vec4 _t128D = [_t1289, _t128A, _t128B, _t128C];
        real _t128E = 0.1e1;
        real _t128F = 0.e0;
        real _t1290 = 0.57735026919e0;
        real _t1291 = 0.e0;
        vec4 _t1292 = [_t128E, _t128F, _t1290, _t1291];
        real _t1293 = 0.e0;
        real _t1294 = 0.1e1;
        real _t1295 = 0.57735026919e0;
        real _t1296 = 0.e0;
        vec4 _t1297 = [_t1293, _t1294, _t1295, _t1296];
        real _t1298 = 0.e0;
        real _t1299 = 0.e0;
        real _t129A = 0.e0;
        real _t129B = 0.1e1;
        vec4 _t129C = [_t1298, _t1299, _t129A, _t129B];
        tensor[4,4] _t129D = [_t128D, _t1292, _t1297, _t129C];
        real _t129E = 0.e0;
        real _t129F = 0.e0;
        real _t12A0 = 0.1e1;
        real _t12A1 = 0.e0;
        vec4 _t12A2 = [_t129E, _t129F, _t12A0, _t12A1];
        real _t12A3 = 0.1e1;
        real _t12A4 = 0.e0;
        real _t12A5 = 0.e0;
        real _t12A6 = 0.e0;
        vec4 _t12A7 = [_t12A3, _t12A4, _t12A5, _t12A6];
        real _t12A8 = 0.e0;
        real _t12A9 = 0.1e1;
        real _t12AA = 0.e0;
        real _t12AB = 0.e0;
        vec4 _t12AC = [_t12A8, _t12A9, _t12AA, _t12AB];
        real _t12AD = 0.e0;
        real _t12AE = 0.e0;
        real _t12AF = 0.e0;
        real _t12B0 = 0.1e1;
        vec4 _t12B1 = [_t12AD, _t12AE, _t12AF, _t12B0];
        tensor[4,4] _t12B2 = [_t12A2, _t12A7, _t12AC, _t12B1];
        real _t12B3 = 0.1e1;
        real _t12B4 = 0.e0;
        real _t12B5 = 0.e0;
        real _t12B6 = 0.e0;
        vec4 _t12B7 = [_t12B3, _t12B4, _t12B5, _t12B6];
        real _t12B8 = 0.e0;
        real _t12B9 = 0.e0;
        real _t12BA = -0.1e1;
        real _t12BB = 0.e0;
        vec4 _t12BC = [_t12B8, _t12B9, _t12BA, _t12BB];
        real _t12BD = 0.e0;
        real _t12BE = 0.1e1;
        real _t12BF = 0.e0;
        real _t12C0 = 0.e0;
        vec4 _t12C1 = [_t12BD, _t12BE, _t12BF, _t12C0];
        real _t12C2 = 0.e0;
        real _t12C3 = 0.e0;
        real _t12C4 = 0.e0;
        real _t12C5 = 0.1e1;
        vec4 _t12C6 = [_t12C2, _t12C3, _t12C4, _t12C5];
        tensor[4,4] _t12C7 = [_t12B7, _t12BC, _t12C1, _t12C6];
        real _t12C8 = 0.1e1;
        real _t12C9 = 0.e0;
        real _t12CA = 0.e0;
        real _t12CB = 0.e0;
        vec4 _t12CC = [_t12C8, _t12C9, _t12CA, _t12CB];
        real _t12CD = 0.e0;
        real _t12CE = 0.1e1;
        real _t12CF = 0.e0;
        real _t12D0 = 0.e0;
        vec4 _t12D1 = [_t12CD, _t12CE, _t12CF, _t12D0];
        real _t12D2 = 0.e0;
        real _t12D3 = 0.e0;
        real _t12D4 = 0.1e1;
        real _t12D5 = 0.e0;
        vec4 _t12D6 = [_t12D2, _t12D3, _t12D4, _t12D5];
        real _t12D7 = 0.e0;
        real _t12D8 = 0.e0;
        real _t12D9 = 0.e0;
        real _t12DA = 0.1e1;
        vec4 _t12DB = [_t12D7, _t12D8, _t12D9, _t12DA];
        tensor[4,4] _t12DC = [_t12CC, _t12D1, _t12D6, _t12DB];
        tensor[4,4][4] _t12DD = {_t129D, _t12B2, _t12C7, _t12DC};
        tensor[4,4][4][4] _t12DE = {_t11DE, _t1233, _t1288, _t12DD};
        real _t12DF = _t0E3A[1];
        int _t12E0 = prim $r2i01B7 (_t12DF);
        tensor[4,4][4] _t12E1 = prim $sub01C0<tensor[4,4][4]; %4> (_t12DE, _t12E0);
        real _t12E2 = _t0E3A[1];
        int _t12E3 = prim $r2i01B7 (_t12E2);
        int[2] _t12E4 = func nextCell4048A (_t12E3, _t0E36, _t0E35);
        int _t12E5 = 1;
        int _t12E6 = prim $sub01C0<int; %2> (_t12E4, _t12E5);
        tensor[4,4] _t12E7 = prim $sub01C0<tensor[4,4]; %4> (_t12E1, _t12E6);
        real _t12E8 = _t0E3A[0];
        vec3 _t12E9 = prim *0036<$[3]> (_t12E8, deltaP0E00);
        vec3 _t12EA = prim +0017<$[3]> (_t12E9, _t0E37);
        real _t12EB = _t12EA[0];
        real _t12EC = _t0E3A[0];
        vec3 _t12ED = prim *0036<$[3]> (_t12EC, deltaP0E00);
        vec3 _t12EE = prim +0017<$[3]> (_t12ED, _t0E37);
        real _t12EF = _t12EE[1];
        real _t12F0 = _t0E3A[0];
        vec3 _t12F1 = prim *0036<$[3]> (_t12F0, deltaP0E00);
        vec3 _t12F2 = prim +0017<$[3]> (_t12F1, _t0E37);
        real _t12F3 = _t12F2[2];
        real _t12F4 = 0.1e1;
        vec4 _t12F5 = [_t12EB, _t12EF, _t12F3, _t12F4];
        vec4 _t12F6 = prim •00CE<$[4,4]; $[4]; $[4]> (_t12E7, _t12F5);
        real _t12F7 = _t12F6[1];
        real _t12F8 = 0.1e1;
        real _t12F9 = 0.e0;
        real _t12FA = 0.e0;
        real _t12FB = 0.e0;
        vec4 _t12FC = [_t12F8, _t12F9, _t12FA, _t12FB];
        real _t12FD = 0.e0;
        real _t12FE = 0.1e1;
        real _t12FF = 0.e0;
        real _t1300 = 0.e0;
        vec4 _t1301 = [_t12FD, _t12FE, _t12FF, _t1300];
        real _t1302 = 0.e0;
        real _t1303 = 0.e0;
        real _t1304 = 0.1e1;
        real _t1305 = 0.e0;
        vec4 _t1306 = [_t1302, _t1303, _t1304, _t1305];
        real _t1307 = 0.971445146547e-16;
        real _t1308 = 0.e0;
        real _t1309 = 0.e0;
        real _t130A = 0.1e1;
        vec4 _t130B = [_t1307, _t1308, _t1309, _t130A];
        tensor[4,4] _t130C = [_t12FC, _t1301, _t1306, _t130B];
        real _t130D = 0.57735026919e0;
        real _t130E = 0.57735026919e0;
        real _t130F = 0.57735026919e0;
        real _t1310 = -0.57735026919e0;
        vec4 _t1311 = [_t130D, _t130E, _t130F, _t1310];
        real _t1312 = -0.333333333333e0;
        real _t1313 = 0.666666666667e0;
        real _t1314 = -0.333333333333e0;
        real _t1315 = 0.333333333333e0;
        vec4 _t1316 = [_t1312, _t1313, _t1314, _t1315];
        real _t1317 = -0.333333333333e0;
        real _t1318 = -0.333333333333e0;
        real _t1319 = 0.666666666667e0;
        real _t131A = 0.333333333333e0;
        vec4 _t131B = [_t1317, _t1318, _t1319, _t131A];
        real _t131C = 0.971445146547e-16;
        real _t131D = 0.e0;
        real _t131E = 0.e0;
        real _t131F = 0.1e1;
        vec4 _t1320 = [_t131C, _t131D, _t131E, _t131F];
        tensor[4,4] _t1321 = [_t1311, _t1316, _t131B, _t1320];
        real _t1322 = -0.333333333333e0;
        real _t1323 = 0.666666666667e0;
        real _t1324 = -0.333333333333e0;
        real _t1325 = 0.333333333333e0;
        vec4 _t1326 = [_t1322, _t1323, _t1324, _t1325];
        real _t1327 = -0.57735026919e0;
        real _t1328 = -0.57735026919e0;
        real _t1329 = -0.57735026919e0;
        real _t132A = 0.57735026919e0;
        vec4 _t132B = [_t1327, _t1328, _t1329, _t132A];
        real _t132C = -0.333333333333e0;
        real _t132D = -0.333333333333e0;
        real _t132E = 0.666666666667e0;
        real _t132F = 0.333333333333e0;
        vec4 _t1330 = [_t132C, _t132D, _t132E, _t132F];
        real _t1331 = 0.971445146547e-16;
        real _t1332 = 0.e0;
        real _t1333 = 0.e0;
        real _t1334 = 0.1e1;
        vec4 _t1335 = [_t1331, _t1332, _t1333, _t1334];
        tensor[4,4] _t1336 = [_t1326, _t132B, _t1330, _t1335];
        real _t1337 = -0.333333333333e0;
        real _t1338 = 0.666666666667e0;
        real _t1339 = -0.333333333333e0;
        real _t133A = 0.333333333333e0;
        vec4 _t133B = [_t1337, _t1338, _t1339, _t133A];
        real _t133C = -0.333333333333e0;
        real _t133D = -0.333333333333e0;
        real _t133E = 0.666666666667e0;
        real _t133F = 0.333333333333e0;
        vec4 _t1340 = [_t133C, _t133D, _t133E, _t133F];
        real _t1341 = 0.57735026919e0;
        real _t1342 = 0.57735026919e0;
        real _t1343 = 0.57735026919e0;
        real _t1344 = -0.57735026919e0;
        vec4 _t1345 = [_t1341, _t1342, _t1343, _t1344];
        real _t1346 = 0.971445146547e-16;
        real _t1347 = 0.e0;
        real _t1348 = 0.e0;
        real _t1349 = 0.1e1;
        vec4 _t134A = [_t1346, _t1347, _t1348, _t1349];
        tensor[4,4] _t134B = [_t133B, _t1340, _t1345, _t134A];
        tensor[4,4][4] _t134C = {_t130C, _t1321, _t1336, _t134B};
        real _t134D = 0.57735026919e0;
        real _t134E = -0.1e1;
        real _t134F = -0.1e1;
        real _t1350 = 0.1e1;
        vec4 _t1351 = [_t134D, _t134E, _t134F, _t1350];
        real _t1352 = 0.57735026919e0;
        real _t1353 = 0.1e1;
        real _t1354 = 0.e0;
        real _t1355 = 0.e0;
        vec4 _t1356 = [_t1352, _t1353, _t1354, _t1355];
        real _t1357 = 0.57735026919e0;
        real _t1358 = 0.e0;
        real _t1359 = 0.1e1;
        real _t135A = 0.e0;
        vec4 _t135B = [_t1357, _t1358, _t1359, _t135A];
        real _t135C = 0.e0;
        real _t135D = 0.e0;
        real _t135E = 0.e0;
        real _t135F = 0.1e1;
        vec4 _t1360 = [_t135C, _t135D, _t135E, _t135F];
        tensor[4,4] _t1361 = [_t1351, _t1356, _t135B, _t1360];
        real _t1362 = 0.1e1;
        real _t1363 = 0.e0;
        real _t1364 = 0.e0;
        real _t1365 = 0.e0;
        vec4 _t1366 = [_t1362, _t1363, _t1364, _t1365];
        real _t1367 = 0.e0;
        real _t1368 = 0.1e1;
        real _t1369 = 0.e0;
        real _t136A = 0.e0;
        vec4 _t136B = [_t1367, _t1368, _t1369, _t136A];
        real _t136C = 0.e0;
        real _t136D = 0.e0;
        real _t136E = 0.1e1;
        real _t136F = 0.e0;
        vec4 _t1370 = [_t136C, _t136D, _t136E, _t136F];
        real _t1371 = 0.e0;
        real _t1372 = 0.e0;
        real _t1373 = 0.e0;
        real _t1374 = 0.1e1;
        vec4 _t1375 = [_t1371, _t1372, _t1373, _t1374];
        tensor[4,4] _t1376 = [_t1366, _t136B, _t1370, _t1375];
        real _t1377 = 0.e0;
        real _t1378 = 0.1e1;
        real _t1379 = 0.e0;
        real _t137A = 0.e0;
        vec4 _t137B = [_t1377, _t1378, _t1379, _t137A];
        real _t137C = -0.1e1;
        real _t137D = 0.e0;
        real _t137E = 0.e0;
        real _t137F = 0.e0;
        vec4 _t1380 = [_t137C, _t137D, _t137E, _t137F];
        real _t1381 = 0.e0;
        real _t1382 = 0.e0;
        real _t1383 = 0.1e1;
        real _t1384 = 0.e0;
        vec4 _t1385 = [_t1381, _t1382, _t1383, _t1384];
        real _t1386 = 0.e0;
        real _t1387 = 0.e0;
        real _t1388 = 0.e0;
        real _t1389 = 0.1e1;
        vec4 _t138A = [_t1386, _t1387, _t1388, _t1389];
        tensor[4,4] _t138B = [_t137B, _t1380, _t1385, _t138A];
        real _t138C = 0.e0;
        real _t138D = 0.1e1;
        real _t138E = 0.e0;
        real _t138F = 0.e0;
        vec4 _t1390 = [_t138C, _t138D, _t138E, _t138F];
        real _t1391 = 0.e0;
        real _t1392 = 0.e0;
        real _t1393 = 0.1e1;
        real _t1394 = 0.e0;
        vec4 _t1395 = [_t1391, _t1392, _t1393, _t1394];
        real _t1396 = 0.1e1;
        real _t1397 = 0.e0;
        real _t1398 = 0.e0;
        real _t1399 = 0.e0;
        vec4 _t139A = [_t1396, _t1397, _t1398, _t1399];
        real _t139B = 0.e0;
        real _t139C = 0.e0;
        real _t139D = 0.e0;
        real _t139E = 0.1e1;
        vec4 _t139F = [_t139B, _t139C, _t139D, _t139E];
        tensor[4,4] _t13A0 = [_t1390, _t1395, _t139A, _t139F];
        tensor[4,4][4] _t13A1 = {_t1361, _t1376, _t138B, _t13A0};
        real _t13A2 = -0.1e1;
        real _t13A3 = -0.57735026919e0;
        real _t13A4 = -0.1e1;
        real _t13A5 = 0.1e1;
        vec4 _t13A6 = [_t13A2, _t13A3, _t13A4, _t13A5];
        real _t13A7 = 0.1e1;
        real _t13A8 = -0.57735026919e0;
        real _t13A9 = 0.e0;
        real _t13AA = 0.e0;
        vec4 _t13AB = [_t13A7, _t13A8, _t13A9, _t13AA];
        real _t13AC = 0.e0;
        real _t13AD = -0.57735026919e0;
        real _t13AE = 0.1e1;
        real _t13AF = 0.e0;
        vec4 _t13B0 = [_t13AC, _t13AD, _t13AE, _t13AF];
        real _t13B1 = 0.e0;
        real _t13B2 = 0.e0;
        real _t13B3 = 0.e0;
        real _t13B4 = 0.1e1;
        vec4 _t13B5 = [_t13B1, _t13B2, _t13B3, _t13B4];
        tensor[4,4] _t13B6 = [_t13A6, _t13AB, _t13B0, _t13B5];
        real _t13B7 = 0.e0;
        real _t13B8 = -0.1e1;
        real _t13B9 = 0.e0;
        real _t13BA = 0.e0;
        vec4 _t13BB = [_t13B7, _t13B8, _t13B9, _t13BA];
        real _t13BC = 0.1e1;
        real _t13BD = 0.e0;
        real _t13BE = 0.e0;
        real _t13BF = 0.e0;
        vec4 _t13C0 = [_t13BC, _t13BD, _t13BE, _t13BF];
        real _t13C1 = 0.e0;
        real _t13C2 = 0.e0;
        real _t13C3 = 0.1e1;
        real _t13C4 = 0.e0;
        vec4 _t13C5 = [_t13C1, _t13C2, _t13C3, _t13C4];
        real _t13C6 = 0.e0;
        real _t13C7 = 0.e0;
        real _t13C8 = 0.e0;
        real _t13C9 = 0.1e1;
        vec4 _t13CA = [_t13C6, _t13C7, _t13C8, _t13C9];
        tensor[4,4] _t13CB = [_t13BB, _t13C0, _t13C5, _t13CA];
        real _t13CC = 0.1e1;
        real _t13CD = 0.e0;
        real _t13CE = 0.e0;
        real _t13CF = 0.e0;
        vec4 _t13D0 = [_t13CC, _t13CD, _t13CE, _t13CF];
        real _t13D1 = 0.e0;
        real _t13D2 = 0.1e1;
        real _t13D3 = 0.e0;
        real _t13D4 = 0.e0;
        vec4 _t13D5 = [_t13D1, _t13D2, _t13D3, _t13D4];
        real _t13D6 = 0.e0;
        real _t13D7 = 0.e0;
        real _t13D8 = 0.1e1;
        real _t13D9 = 0.e0;
        vec4 _t13DA = [_t13D6, _t13D7, _t13D8, _t13D9];
        real _t13DB = 0.e0;
        real _t13DC = 0.e0;
        real _t13DD = 0.e0;
        real _t13DE = 0.1e1;
        vec4 _t13DF = [_t13DB, _t13DC, _t13DD, _t13DE];
        tensor[4,4] _t13E0 = [_t13D0, _t13D5, _t13DA, _t13DF];
        real _t13E1 = 0.1e1;
        real _t13E2 = 0.e0;
        real _t13E3 = 0.e0;
        real _t13E4 = 0.e0;
        vec4 _t13E5 = [_t13E1, _t13E2, _t13E3, _t13E4];
        real _t13E6 = 0.e0;
        real _t13E7 = 0.e0;
        real _t13E8 = 0.1e1;
        real _t13E9 = 0.e0;
        vec4 _t13EA = [_t13E6, _t13E7, _t13E8, _t13E9];
        real _t13EB = 0.e0;
        real _t13EC = -0.1e1;
        real _t13ED = 0.e0;
        real _t13EE = 0.e0;
        vec4 _t13EF = [_t13EB, _t13EC, _t13ED, _t13EE];
        real _t13F0 = 0.e0;
        real _t13F1 = 0.e0;
        real _t13F2 = 0.e0;
        real _t13F3 = 0.1e1;
        vec4 _t13F4 = [_t13F0, _t13F1, _t13F2, _t13F3];
        tensor[4,4] _t13F5 = [_t13E5, _t13EA, _t13EF, _t13F4];
        tensor[4,4][4] _t13F6 = {_t13B6, _t13CB, _t13E0, _t13F5};
        real _t13F7 = -0.1e1;
        real _t13F8 = -0.1e1;
        real _t13F9 = 0.57735026919e0;
        real _t13FA = 0.1e1;
        vec4 _t13FB = [_t13F7, _t13F8, _t13F9, _t13FA];
        real _t13FC = 0.1e1;
        real _t13FD = 0.e0;
        real _t13FE = 0.57735026919e0;
        real _t13FF = 0.e0;
        vec4 _t1400 = [_t13FC, _t13FD, _t13FE, _t13FF];
        real _t1401 = 0.e0;
        real _t1402 = 0.1e1;
        real _t1403 = 0.57735026919e0;
        real _t1404 = 0.e0;
        vec4 _t1405 = [_t1401, _t1402, _t1403, _t1404];
        real _t1406 = 0.e0;
        real _t1407 = 0.e0;
        real _t1408 = 0.e0;
        real _t1409 = 0.1e1;
        vec4 _t140A = [_t1406, _t1407, _t1408, _t1409];
        tensor[4,4] _t140B = [_t13FB, _t1400, _t1405, _t140A];
        real _t140C = 0.e0;
        real _t140D = 0.e0;
        real _t140E = 0.1e1;
        real _t140F = 0.e0;
        vec4 _t1410 = [_t140C, _t140D, _t140E, _t140F];
        real _t1411 = 0.1e1;
        real _t1412 = 0.e0;
        real _t1413 = 0.e0;
        real _t1414 = 0.e0;
        vec4 _t1415 = [_t1411, _t1412, _t1413, _t1414];
        real _t1416 = 0.e0;
        real _t1417 = 0.1e1;
        real _t1418 = 0.e0;
        real _t1419 = 0.e0;
        vec4 _t141A = [_t1416, _t1417, _t1418, _t1419];
        real _t141B = 0.e0;
        real _t141C = 0.e0;
        real _t141D = 0.e0;
        real _t141E = 0.1e1;
        vec4 _t141F = [_t141B, _t141C, _t141D, _t141E];
        tensor[4,4] _t1420 = [_t1410, _t1415, _t141A, _t141F];
        real _t1421 = 0.1e1;
        real _t1422 = 0.e0;
        real _t1423 = 0.e0;
        real _t1424 = 0.e0;
        vec4 _t1425 = [_t1421, _t1422, _t1423, _t1424];
        real _t1426 = 0.e0;
        real _t1427 = 0.e0;
        real _t1428 = -0.1e1;
        real _t1429 = 0.e0;
        vec4 _t142A = [_t1426, _t1427, _t1428, _t1429];
        real _t142B = 0.e0;
        real _t142C = 0.1e1;
        real _t142D = 0.e0;
        real _t142E = 0.e0;
        vec4 _t142F = [_t142B, _t142C, _t142D, _t142E];
        real _t1430 = 0.e0;
        real _t1431 = 0.e0;
        real _t1432 = 0.e0;
        real _t1433 = 0.1e1;
        vec4 _t1434 = [_t1430, _t1431, _t1432, _t1433];
        tensor[4,4] _t1435 = [_t1425, _t142A, _t142F, _t1434];
        real _t1436 = 0.1e1;
        real _t1437 = 0.e0;
        real _t1438 = 0.e0;
        real _t1439 = 0.e0;
        vec4 _t143A = [_t1436, _t1437, _t1438, _t1439];
        real _t143B = 0.e0;
        real _t143C = 0.1e1;
        real _t143D = 0.e0;
        real _t143E = 0.e0;
        vec4 _t143F = [_t143B, _t143C, _t143D, _t143E];
        real _t1440 = 0.e0;
        real _t1441 = 0.e0;
        real _t1442 = 0.1e1;
        real _t1443 = 0.e0;
        vec4 _t1444 = [_t1440, _t1441, _t1442, _t1443];
        real _t1445 = 0.e0;
        real _t1446 = 0.e0;
        real _t1447 = 0.e0;
        real _t1448 = 0.1e1;
        vec4 _t1449 = [_t1445, _t1446, _t1447, _t1448];
        tensor[4,4] _t144A = [_t143A, _t143F, _t1444, _t1449];
        tensor[4,4][4] _t144B = {_t140B, _t1420, _t1435, _t144A};
        tensor[4,4][4][4] _t144C = {_t134C, _t13A1, _t13F6, _t144B};
        real _t144D = _t0E3A[1];
        int _t144E = prim $r2i01B7 (_t144D);
        tensor[4,4][4] _t144F = prim $sub01C0<tensor[4,4][4]; %4> (_t144C, _t144E);
        real _t1450 = _t0E3A[1];
        int _t1451 = prim $r2i01B7 (_t1450);
        int[2] _t1452 = func nextCell4048A (_t1451, _t0E36, _t0E35);
        int _t1453 = 1;
        int _t1454 = prim $sub01C0<int; %2> (_t1452, _t1453);
        tensor[4,4] _t1455 = prim $sub01C0<tensor[4,4]; %4> (_t144F, _t1454);
        real _t1456 = _t0E3A[0];
        vec3 _t1457 = prim *0036<$[3]> (_t1456, deltaP0E00);
        vec3 _t1458 = prim +0017<$[3]> (_t1457, _t0E37);
        real _t1459 = _t1458[0];
        real _t145A = _t0E3A[0];
        vec3 _t145B = prim *0036<$[3]> (_t145A, deltaP0E00);
        vec3 _t145C = prim +0017<$[3]> (_t145B, _t0E37);
        real _t145D = _t145C[1];
        real _t145E = _t0E3A[0];
        vec3 _t145F = prim *0036<$[3]> (_t145E, deltaP0E00);
        vec3 _t1460 = prim +0017<$[3]> (_t145F, _t0E37);
        real _t1461 = _t1460[2];
        real _t1462 = 0.1e1;
        vec4 _t1463 = [_t1459, _t145D, _t1461, _t1462];
        vec4 _t1464 = prim •00CE<$[4,4]; $[4]; $[4]> (_t1455, _t1463);
        real _t1465 = _t1464[2];
        vec3 _t1466 = [_t1189, _t12F7, _t1465];
        real _t1467 = _t0E3A[1];
        int _t1468 = prim $r2i01B7 (_t1467);
        int[2] _t1469 = func nextCell4048A (_t1468, _t0E36, _t0E35);
        int _t146A = 1;
        int _t146B = prim $sub01C0<int; %2> (_t1469, _t146A);
        Femdata: MeshPos _t146C = extractFemItemN((_t0E35, _t101B, _t1466, _t146B),RefBuild(Mesh),);
        nmp0E3B = _t146C;
      } else {
        real _t146D = _t0E3A[0];
        vec3 _t146E = prim *0036<$[3]> (_t146D, deltaP0E00);
        vec3 _t146F = prim +0017<$[3]> (_t146E, _t0E37);
        Femdata: MeshPos _t1470 = extractFemItemN((_t0E35, _t146F),InvalidBuildBoundary(MeshPos),);
        nmp0E3B = _t1470;
      }
      bool _t0E3C;
      bool _t0E3D = extractFemItem(Valid(MeshPos), bool, nmp0E3B);
      bool _t0E3E = prim !00BC (_t0E3D);
      if _t0E3E {
        _t0E3C = true;
      } else {
        bool _t0E3F;
        real _t0E40 = 0.e0;
        bool _t0E41 = prim <007A (eTime0E33, _t0E40);
        if _t0E41 {
          _t0E3F = true;
        } else {
          bool _t0E42;
          real _t0E43 = 0.1e1;
          bool _t0E44 = prim >0080 (eTime0E33, _t0E43);
          if _t0E44 {
            _t0E42 = true;
          } else {
            _t0E42 = prim <007A (time0DEA, timeEps03B0);
          }
          _t0E3F = _t0E42;
        }
        _t0E3C = _t0E3F;
      }
      if _t0E3C {
        return nmp0E3B;
      }
      cmp0DEB = nmp0E3B;
    }
  }
  string _t0E46 = "Took stupid way out!\n";
  print (_t0E46);
  vec3 _t0E47;
  vec3 _t0EA0 = extractFemItem(RefPos(MeshPos), vec3, x0DE6);
  int _t0EA1 = extractFemItem(CellIndex(MeshPos), int, x0DE6);
  Femdata: Mesh _t0EA2 = extractFem(x0DE6, Mesh);
  vec3 _t0EA3;
  field(3)[3] _t0EA4 = femField(_t0EA2,_t0EA1,field(3)[3],Transform,);
  vec3 _t0EA5 = prim @00A5<#∞; %3; $[3]> (_t0EA4, _t0EA0);
  _t0EA3 = _t0EA5;
  _t0E47 = _t0EA3;
  vec3 _t0E48 = prim +0017<$[3]> (_t0E47, dPos0DE7);
  cmp0DEB = func findPos03BE (meshData039F, _t0E48);
  return cmp0DEB;
}
globalInit {
  int _t03A3 = 0;
  int _t03A1 = 1;
  int _t03A5 = extractFemItem(NumCell(Mesh), int, meshData039F);
  int _t03A4 = prim -0024 (_t03A5, _t03A1);
  int[] _t03A8 = prim $range01C3 (_t03A3, _t03A4);
  Femdata: MeshCell[] _t03A9 = {};
  foreach _t03A7 in _t03A8 {
    Femdata: MeshCell _t03AA = loadFem(MeshCell, meshData039F, _t03A7);
    _t03A9 = prim @0010<Femdata: MeshCell> (_t03A9, _t03AA);
  }
  space03AB = loadFem(Space, 0space03AB_intermedateGlobal03AC, meshData039F);
  data03AD = loadFem(FemFunc, 0data03AD_intermedateGlobal03AE, space03AB);
  Femdata: Space _t0DD8 = extractFem(data03AD, Space);
  Femdata: Space _t0DD9 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDA = extractFem(_t0DD9, Mesh);
  field(3)[3] _t0DDB = femField(data03AD,_t0DDA,field(3)[3],refField,findPos03BE );
  Femdata: Space _t0DDC = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDD = extractFem(_t0DDC, Mesh);
  Femdata: Space _t0DDE = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDF = extractFem(_t0DDE, Mesh);
  Femdata: Space _t0DE0 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DE1 = extractFem(_t0DE0, Mesh);
  field(3)[3] _t0DE2 = femField(_t0DDD,_t0DE1,field(3)[3],InvTransform,findPos03BE );
  F0DE3 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t0DDB, _t0DE2);
}
strand gg (vec3 startPos0E5C) {
  output vec3[] stream0E5D;
  output vec3[] newStream0E60;
  int step0E63;
  Femdata: MeshPos cPos0E64;
  vec3 altCPos0E65;
  {
    vec3[1] _t0E5E = {startPos0E5C};
    vec3[] _t0E5F = (vec3[])_t0E5E;
    stream0E5D = _t0E5F;
    vec3[1] _t0E61 = {startPos0E5C};
    vec3[] _t0E62 = (vec3[])_t0E61;
    newStream0E60 = _t0E62;
    step0E63 = 0;
    cPos0E64 = func findPos03BE (meshData039F, startPos0E5C);
    altCPos0E65 = startPos0E5C;
  }
  update
  {
    bool _t0E66;
    bool _t0E67 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E68 = prim !00BC (_t0E67);
    if _t0E68 {
      _t0E66 = true;
    } else {
      bool _t0E69;
      Femdata: MeshPos _t0E6A = func findPos03BE (meshData039F, altCPos0E65);
      bool _t0E6B = extractFemItem(Valid(MeshPos), bool, _t0E6A);
      bool _t0E6C = prim !00BC (_t0E6B);
      if _t0E6C {
        _t0E69 = true;
      } else {
        _t0E69 = prim ==0082 (step0E63, stepMax03B3);
      }
      _t0E66 = _t0E69;
    }
    if _t0E66 {
      stabilize;
    }
    vec3 _t0E6D;
    vec3 _t16D5 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
    int _t16D6 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
    Femdata: Mesh _t16D7 = extractFem(cPos0E64, Mesh);
    vec3 _t16D8;
    field(3)[3] _t16D9 = femField(_t16D7,_t16D6,field(3)[3],Transform,);
    vec3 _t16DA = prim @00A5<#∞; %3; $[3]> (_t16D9, _t16D5);
    _t16D8 = _t16DA;
    _t0E6D = _t16D8;
    vec3 _t0E6E = prim -0026<$[3]> (_t0E6D, altCPos0E65);
    real _t0E6F = prim |()|00B5<$[3]> (_t0E6E);
    real _t0E70 = 0.1e-5;
    bool _t0E71 = prim >0080 (_t0E6F, _t0E70);
    if _t0E71 {
      string _t0E72 = "Error in tracing: At step:";
      string _t0E73 = " with particle:";
      string _t0E74 = "\n";
      print (_t0E72, step0E63, _t0E73, startPos0E5C, _t0E74);
    } else {
      string _t0E75 = "fine in cell:";
      Femdata: Mesh _t0E76 = extractFem(cPos0E64, Mesh);
      int _t0E77 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell _t0E78 = loadFem(MeshCell, _t0E76, _t0E77);
      string _t0E79 = "\n";
      print (_t0E75, _t0E78, _t0E79);
    }
    real _t0E7A = 0.5e0;
    real _t0E7B = prim *0034 (_t0E7A, stepSize03B2);
    vec3 _t0E7C = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    vec3 _t0E7D = prim *0036<$[3]> (_t0E7B, _t0E7C);
    vec3 _t0E7E = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    real _t0E7F = prim |()|00B5<$[3]> (_t0E7E);
    vec3 altUp10E80 = prim /0057<$[3]> (_t0E7D, _t0E7F);
    real _t0E81 = 0.5e0;
    real _t0E82 = prim *0034 (_t0E81, stepSize03B2);
    vec3 _t0E83;
    bool _t16BE = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    if _t16BE {
      Femdata: Mesh _t16BF = extractFem(cPos0E64, Mesh);
      int _t16C0 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell c16C1 = loadFem(MeshCell, _t16BF, _t16C0);
      vec3 ref16C2 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
      Femdata: FuncCell _t16C3;
      int _t16C4 = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16C5 = loadFem(FuncCell, data03AD, _t16C4);
      _t16C3 = _t16C5;
      Femdata: FemFunc _t16C6 = extractFem(_t16C3, FemFunc);
      Femdata: FuncCell _t16C7;
      int _t16C8 = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16C9 = loadFem(FuncCell, data03AD, _t16C8);
      _t16C7 = _t16C9;
      Femdata: FemFunc _t16CA = extractFem(_t16C7, FemFunc);
      Femdata: Space _t16CB = extractFem(_t16CA, Space);
      Femdata: FuncCell _t16CC;
      int _t16CD = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16CE = loadFem(FuncCell, data03AD, _t16CD);
      _t16CC = _t16CE;
      int _t16CF = extractFemItem(CellIndex(FuncCell), int, _t16CC);
      field(3)[3] _t16D0 = femField(_t16C6,_t16CF,field(3)[3],refField,);
      vec3 val16D1 = prim @00A5<#∞; %3; $[3]> (_t16D0, ref16C2);
      real _t16D2 = prim |()|00B5<$[3]> (val16D1);
      vec3 _t16D3 = prim /0057<$[3]> (val16D1, _t16D2);
      _t0E83 = _t16D3;
    } else {
      vec3 _t16D4 = prim $zero01BB<$[3]> ();
      _t0E83 = _t16D4;
    }
    vec3 up10E84 = prim *0036<$[3]> (_t0E82, _t0E83);
    Femdata: MeshPos intermed0E85 = func posMove0DE5 (cPos0E64, up10E84);
    vec3 altIntermed0E86 = prim +0017<$[3]> (altCPos0E65, altUp10E80);
    bool _t0E87;
    bool _t0E88 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    bool _t0E89 = prim !00BC (_t0E88);
    if _t0E89 {
      _t0E87 = true;
    } else {
      Femdata: MeshPos _t0E8A = func findPos03BE (meshData039F, altIntermed0E86);
      bool _t0E8B = extractFemItem(Valid(MeshPos), bool, _t0E8A);
      _t0E87 = prim !00BC (_t0E8B);
    }
    if _t0E87 {
      stabilize;
    }
    vec3 _t0E8C = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    vec3 _t0E8D = prim *0036<$[3]> (stepSize03B2, _t0E8C);
    vec3 _t0E8E = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    real _t0E8F = prim |()|00B5<$[3]> (_t0E8E);
    vec3 altUp20E90 = prim /0057<$[3]> (_t0E8D, _t0E8F);
    vec3 _t0E91;
    bool _t16A7 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    if _t16A7 {
      Femdata: Mesh _t16A8 = extractFem(intermed0E85, Mesh);
      int _t16A9 = extractFemItem(CellIndex(MeshPos), int, intermed0E85);
      Femdata: MeshCell c16AA = loadFem(MeshCell, _t16A8, _t16A9);
      vec3 ref16AB = extractFemItem(RefPos(MeshPos), vec3, intermed0E85);
      Femdata: FuncCell _t16AC;
      int _t16AD = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16AE = loadFem(FuncCell, data03AD, _t16AD);
      _t16AC = _t16AE;
      Femdata: FemFunc _t16AF = extractFem(_t16AC, FemFunc);
      Femdata: FuncCell _t16B0;
      int _t16B1 = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16B2 = loadFem(FuncCell, data03AD, _t16B1);
      _t16B0 = _t16B2;
      Femdata: FemFunc _t16B3 = extractFem(_t16B0, FemFunc);
      Femdata: Space _t16B4 = extractFem(_t16B3, Space);
      Femdata: FuncCell _t16B5;
      int _t16B6 = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16B7 = loadFem(FuncCell, data03AD, _t16B6);
      _t16B5 = _t16B7;
      int _t16B8 = extractFemItem(CellIndex(FuncCell), int, _t16B5);
      field(3)[3] _t16B9 = femField(_t16AF,_t16B8,field(3)[3],refField,);
      vec3 val16BA = prim @00A5<#∞; %3; $[3]> (_t16B9, ref16AB);
      real _t16BB = prim |()|00B5<$[3]> (val16BA);
      vec3 _t16BC = prim /0057<$[3]> (val16BA, _t16BB);
      _t0E91 = _t16BC;
    } else {
      vec3 _t16BD = prim $zero01BB<$[3]> ();
      _t0E91 = _t16BD;
    }
    vec3 up20E92 = prim *0036<$[3]> (stepSize03B2, _t0E91);
    cPos0E64 = func posMove0DE5 (cPos0E64, up20E92);
    altCPos0E65 = prim +0017<$[3]> (altCPos0E65, altUp20E90);
    bool _t0E93 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E94 = prim !00BC (_t0E93);
    if _t0E94 {
      print (stream0E5D);
      stabilize;
    }
    vec3 _t0E95;
    vec3 _t16A1 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
    int _t16A2 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
    Femdata: Mesh _t16A3 = extractFem(cPos0E64, Mesh);
    vec3 _t16A4;
    field(3)[3] _t16A5 = femField(_t16A3,_t16A2,field(3)[3],Transform,);
    vec3 _t16A6 = prim @00A5<#∞; %3; $[3]> (_t16A5, _t16A1);
    _t16A4 = _t16A6;
    _t0E95 = _t16A4;
    vec3[1] _t0E96 = {_t0E95};
    vec3[] _t0E97 = (vec3[])_t0E96;
    stream0E5D = prim @0014<vec3> (stream0E5D, _t0E97);
    vec3[1] _t0E98 = {altCPos0E65};
    vec3[] _t0E99 = (vec3[])_t0E98;
    newStream0E60 = prim @0014<vec3> (newStream0E60, _t0E99);
    int _t0E9A = 1;
    step0E63 = prim +0015 (step0E63, _t0E9A);
  }
}
collection {
  foreach x0E9B in startPoints03B1 {
    new gg (x0E9B);
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData039F;
input FemData:Space 0space03AB_intermedateGlobal03AC;
input FemData:FemFunc 0data03AD_intermedateGlobal03AE;
input int timeSteps03AF = <default>;
input real timeEps03B0 = <default>;
input vec3[] startPoints03B1;
input real stepSize03B2 = <default>;
input int stepMax03B3 = <default>;
constants {
  timeSteps03AF = 32;
  timeEps03B0 = 0.1e-6;
  stepSize03B2 = 0.1e-1;
  stepMax03B3 = 100;
}
global Femdata: Space space03AB;
global Femdata: FemFunc data03AD;
global field(3)[3] F0DE3;
function Femdata: MeshPos#6 findPos03BE (Femdata: Mesh mesh03BF, vec3 pos03C0)
{
  real _t03C1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn03C4 = [_t03C1, _t03C2, _t03C3];
  newtonInt03C5 = 0;
  cellInt03C6 = extractFemItem(StartCell(Mesh), int, mesh03BF);
  int _t03C7 = extractFemItem(NumCell(Mesh), int, mesh03BF);
  int _t03C8 = 1;
  numCell03C9 = prim -0024 (_t03C7, _t03C8);
  yayCells03CA = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh03BF, pos03C0 : vec3);
  foreach cellItter03CE in yayCells03CA {
    real _t03CB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn03C4 = [_t03CB, _t03CC, _t03CD];
    cellInt03C6 = cellItter03CE;
    field(3)[3] _t03CF = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
    field(3)[3,3] _t03D0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t03CF);
    field(3)[3,3] _t03D1 = prim inv015E<#∞; %3> (_t03D0);
    real _t03D2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t03D5 = [_t03D2, _t03D3, _t03D4];
    A03D6 = prim @00A5<#∞; %3; $[3,3]> (_t03D1, _t03D5);
    int _t03D7 = 0;
    int _t03D8 = 16;
    int[] _t03D9 = prim $range01C3 (_t03D7, _t03D8);
    foreach newtonItter0408 in _t03D9 {
      field(3)[3] _t03DA = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
      field(3)[3] _t03DB = prim -002E<#∞; %3; $[3]> (_t03DA, pos03C0);
      field(3)[3] _t03DC = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A03D6, _t03DB);
      delta03DD = prim @00A5<#∞; %3; $[3]> (_t03DC, xn03C4);
      xn03C4 = prim -0026<$[3]> (xn03C4, delta03DD);
      real _t03DE = 0.1e-7;
      real _t03DF = 0.1e-7;
      real _t03E0 = prim *0034 (_t03DE, _t03DF);
      real _t03E1 = prim •00CE<$[3]; $[3]; $[]> (delta03DD, delta03DD);
      bool _t03E2 = prim >=007E (_t03E0, _t03E1);
      if _t03E2 {
        real _t03E3 = 0.1e1;
        real _t03E4 = 0.1e-8;
        real _t03E5 = prim +0017<$[]> (_t03E3, _t03E4);
        real _t03E6 = 0.1e1;
        real _t03E7 = 0.1e1;
        real _t03E8 = 0.1e1;
        vec3 _t03E9 = [_t03E6, _t03E7, _t03E8];
        real _t03EA = prim •00CE<$[3]; $[3]; $[]> (_t03E9, xn03C4);
        bool _t03EB = prim >0080 (_t03E5, _t03EA);
        real _t03EC = 0.1e-8;
        real _t03ED = 0.1e-8;
        real _t03EE = 0.1e-8;
        vec3 _t03EF = [_t03EC, _t03ED, _t03EE];
        vec3 _t03F0 = prim +0017<$[3]> (_t03EF, xn03C4);
        real _t03F1 = _t03F0[0];
        real _t03F2 = -0.e0;
        bool _t03F3 = prim >0080 (_t03F1, _t03F2);
        real _t03F4 = 0.1e-8;
        real _t03F5 = 0.1e-8;
        real _t03F6 = 0.1e-8;
        vec3 _t03F7 = [_t03F4, _t03F5, _t03F6];
        vec3 _t03F8 = prim +0017<$[3]> (_t03F7, xn03C4);
        real _t03F9 = _t03F8[1];
        real _t03FA = -0.e0;
        bool _t03FB = prim >0080 (_t03F9, _t03FA);
        real _t03FC = 0.1e-8;
        real _t03FD = 0.1e-8;
        real _t03FE = 0.1e-8;
        vec3 _t03FF = [_t03FC, _t03FD, _t03FE];
        vec3 _t0400 = prim +0017<$[3]> (_t03FF, xn03C4);
        real _t0401 = _t0400[2];
        real _t0402 = -0.e0;
        bool _t0403 = prim >0080 (_t0401, _t0402);
        bool _t0404 = prim $and01C4 (_t03FB, _t0403);
        bool _t0405 = prim $and01C4 (_t03F3, _t0404);
        bool _t0406 = prim $and01C4 (_t03EB, _t0405);
        if _t0406 {
          Femdata: MeshPos _t0407 = extractFemItemN((mesh03BF, cellInt03C6, xn03C4, pos03C0),AllBuild(MeshPos),);
          return _t0407;
        }
      }
    }
  }
  string _t0409 = "Bad end 2";
  string _t040A = "\n";
  print (_t0409, _t040A);
  Femdata: MeshPos _t040B = extractFemItemN((mesh03BF),InvalidBuild(MeshPos),);
  return _t040B;
}
function int[2]#8 nextCell4048A (int faceIdx0A53, int cell0A54, Femdata: Mesh mesh0A55)
{
  int _t0A56 = 8;
  int _t0A57 = prim *0033 (cell0A54, _t0A56);
  int _t0A58 = 2;
  int _t0A59 = prim *0033 (faceIdx0A53, _t0A58);
  int _t0A5A = prim +0015 (_t0A57, _t0A59);
  int[2] _t0A5B = extractFemItemN((mesh0A55, _t0A5A),CellFaceCell(Mesh),);
  return _t0A5B;
}
function Femdata: MeshPos#2 posMove0DE5 (Femdata: MeshPos x0DE6, vec3 dPos0DE7)
{
  bool _t0DE8 = extractFemItem(Valid(MeshPos), bool, x0DE6);
  bool _t0DE9 = prim !00BC (_t0DE8);
  if _t0DE9 {
    return x0DE6;
  }
  real time0DEA = 0.1e1;
  Femdata: MeshPos cmp0DEB = x0DE6;
  int _t0DEC = 0;
  int[] _t0DED = prim $range01C3 (_t0DEC, timeSteps03AF);
  foreach i0E45 in _t0DED {
    Femdata: Mesh _t0DEE = extractFem(cmp0DEB, Mesh);
    int _t0DEF = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF0 = loadFem(MeshCell, _t0DEE, _t0DEF);
    Femdata: Mesh _t0DF1 = extractFem(_t0DF0, Mesh);
    Femdata: Mesh _t0DF2 = extractFem(cmp0DEB, Mesh);
    int _t0DF3 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF4 = loadFem(MeshCell, _t0DF2, _t0DF3);
    Femdata: Mesh _t0DF5 = extractFem(_t0DF4, Mesh);
    Femdata: Mesh _t0DF6 = extractFem(cmp0DEB, Mesh);
    int _t0DF7 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF8 = loadFem(MeshCell, _t0DF6, _t0DF7);
    int _t0DF9 = extractFemItem(CellIndex(MeshCell), int, _t0DF8);
    field(3)[3] _t0DFA = femField(_t0DF1,_t0DF9,field(3)[3],Transform,);
    field(3)[3,3] _t0DFB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0DFA);
    vec3 _t0DFC = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    tensor[3,3] _t0DFD = prim @00A5<#∞; %3; $[3,3]> (_t0DFB, _t0DFC);
    tensor[3,3] _t0DFE = prim inv0155 (_t0DFD);
    tensor[3,3] _t0DFF = prim *0036<$[3,3]> (time0DEA, _t0DFE);
    vec3 deltaP0E00 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0DFF, dPos0DE7);
    vec3 _t0E01 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    vec3 newPos0E02 = prim +0017<$[3]> (_t0E01, deltaP0E00);
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.1e-8;
    real _t0E05 = prim +0017<$[]> (_t0E03, _t0E04);
    real _t0E06 = 0.1e1;
    real _t0E07 = 0.1e1;
    real _t0E08 = 0.1e1;
    vec3 _t0E09 = [_t0E06, _t0E07, _t0E08];
    real _t0E0A = prim •00CE<$[3]; $[3]; $[]> (_t0E09, newPos0E02);
    bool _t0E0B = prim >0080 (_t0E05, _t0E0A);
    real _t0E0C = 0.1e-8;
    real _t0E0D = 0.1e-8;
    real _t0E0E = 0.1e-8;
    vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
    vec3 _t0E10 = prim +0017<$[3]> (_t0E0F, newPos0E02);
    real _t0E11 = _t0E10[0];
    real _t0E12 = -0.e0;
    bool _t0E13 = prim >0080 (_t0E11, _t0E12);
    real _t0E14 = 0.1e-8;
    real _t0E15 = 0.1e-8;
    real _t0E16 = 0.1e-8;
    vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
    vec3 _t0E18 = prim +0017<$[3]> (_t0E17, newPos0E02);
    real _t0E19 = _t0E18[1];
    real _t0E1A = -0.e0;
    bool _t0E1B = prim >0080 (_t0E19, _t0E1A);
    real _t0E1C = 0.1e-8;
    real _t0E1D = 0.1e-8;
    real _t0E1E = 0.1e-8;
    vec3 _t0E1F = [_t0E1C, _t0E1D, _t0E1E];
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, newPos0E02);
    real _t0E21 = _t0E20[2];
    real _t0E22 = -0.e0;
    bool _t0E23 = prim >0080 (_t0E21, _t0E22);
    bool _t0E24 = prim $and01C4 (_t0E1B, _t0E23);
    bool _t0E25 = prim $and01C4 (_t0E13, _t0E24);
    bool _t0E26 = prim $and01C4 (_t0E0B, _t0E25);
    if _t0E26 {
      Femdata: Mesh _t0E27 = extractFem(cmp0DEB, Mesh);
      int _t0E28 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E29 = loadFem(MeshCell, _t0E27, _t0E28);
      Femdata: Mesh _t0E2A = extractFem(_t0E29, Mesh);
      Femdata: Mesh _t0E2B = extractFem(cmp0DEB, Mesh);
      int _t0E2C = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E2D = loadFem(MeshCell, _t0E2B, _t0E2C);
      int _t0E2E = extractFemItem(CellIndex(MeshCell), int, _t0E2D);
      Femdata: MeshPos nmp0E2F = extractFemItemN((_t0E2A, _t0E2E, newPos0E02),RefBuild(Mesh),);
      return nmp0E2F;
    } else {
      vec3 _t0E30 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
      int _t0E31 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E32;
      real time1585 = +inf;
      int face1586 = -1;
      real faceTime1587 = -inf;
      real _t1588 = 0.57735026919e0;
      real _t1589 = 0.57735026919e0;
      real _t158A = 0.57735026919e0;
      real _t158B = 0.57735026919e0;
      vec3 _t158C = [_t1589, _t158A, _t158B];
      real _t158D = prim •00CE<$[3]; $[3]; $[]> (_t158C, _t0E30);
      real _t158E = prim -0026<$[]> (_t1588, _t158D);
      real _t158F = 0.57735026919e0;
      real _t1590 = 0.57735026919e0;
      real _t1591 = 0.57735026919e0;
      vec3 _t1592 = [_t158F, _t1590, _t1591];
      real _t1593 = prim •00CE<$[3]; $[3]; $[]> (_t1592, deltaP0E00);
      real _t1594 = prim /0055 (_t158E, _t1593);
      real _t1595 = -0.1e-15;
      bool _t1596 = prim >=007E (_t1594, _t1595);
      real _t1597 = 0.57735026919e0;
      real _t1598 = 0.57735026919e0;
      real _t1599 = 0.57735026919e0;
      real _t159A = 0.57735026919e0;
      vec3 _t159B = [_t1598, _t1599, _t159A];
      real _t159C = prim •00CE<$[3]; $[3]; $[]> (_t159B, _t0E30);
      real _t159D = prim -0026<$[]> (_t1597, _t159C);
      real _t159E = 0.57735026919e0;
      real _t159F = 0.57735026919e0;
      real _t15A0 = 0.57735026919e0;
      vec3 _t15A1 = [_t159E, _t159F, _t15A0];
      real _t15A2 = prim •00CE<$[3]; $[3]; $[]> (_t15A1, deltaP0E00);
      real _t15A3 = prim /0055 (_t159D, _t15A2);
      bool _t15A4 = prim >0080 (time1585, _t15A3);
      real _t15A5 = 0.57735026919e0;
      real _t15A6 = 0.57735026919e0;
      real _t15A7 = 0.57735026919e0;
      vec3 _t15A8 = [_t15A5, _t15A6, _t15A7];
      real _t15A9 = prim •00CE<$[3]; $[3]; $[]> (_t15A8, deltaP0E00);
      real _t15AA = prim |()|00B5<$[]> (_t15A9);
      real _t15AB = 0.1e-20;
      bool _t15AC = prim >=007E (_t15AA, _t15AB);
      bool _t15AD = prim $and01C4 (_t15A4, _t15AC);
      bool _t15AE = prim $and01C4 (_t1596, _t15AD);
      if _t15AE {
        int _t15AF = 0;
        bool _t15B0 = prim !=0086 (_t0E31, _t15AF);
        if _t15B0 {
          real _t15B1 = 0.57735026919e0;
          real _t15B2 = 0.57735026919e0;
          real _t15B3 = 0.57735026919e0;
          real _t15B4 = 0.57735026919e0;
          vec3 _t15B5 = [_t15B2, _t15B3, _t15B4];
          real _t15B6 = prim •00CE<$[3]; $[3]; $[]> (_t15B5, _t0E30);
          real _t15B7 = prim -0026<$[]> (_t15B1, _t15B6);
          real _t15B8 = 0.57735026919e0;
          real _t15B9 = 0.57735026919e0;
          real _t15BA = 0.57735026919e0;
          vec3 _t15BB = [_t15B8, _t15B9, _t15BA];
          real _t15BC = prim •00CE<$[3]; $[3]; $[]> (_t15BB, deltaP0E00);
          time1585 = prim /0055 (_t15B7, _t15BC);
          face1586 = 0;
        } else {
          real _t15BD = 0.57735026919e0;
          real _t15BE = 0.57735026919e0;
          real _t15BF = 0.57735026919e0;
          real _t15C0 = 0.57735026919e0;
          vec3 _t15C1 = [_t15BE, _t15BF, _t15C0];
          real _t15C2 = prim •00CE<$[3]; $[3]; $[]> (_t15C1, _t0E30);
          real _t15C3 = prim -0026<$[]> (_t15BD, _t15C2);
          real _t15C4 = 0.57735026919e0;
          real _t15C5 = 0.57735026919e0;
          real _t15C6 = 0.57735026919e0;
          vec3 _t15C7 = [_t15C4, _t15C5, _t15C6];
          real _t15C8 = prim •00CE<$[3]; $[3]; $[]> (_t15C7, deltaP0E00);
          faceTime1587 = prim /0055 (_t15C3, _t15C8);
        }
      }
      real _t15C9 = 0.e0;
      real _t15CA = 0.1e1;
      real _t15CB = 0.e0;
      real _t15CC = 0.e0;
      vec3 _t15CD = [_t15CA, _t15CB, _t15CC];
      real _t15CE = prim •00CE<$[3]; $[3]; $[]> (_t15CD, _t0E30);
      real _t15CF = prim -0026<$[]> (_t15C9, _t15CE);
      real _t15D0 = 0.1e1;
      real _t15D1 = 0.e0;
      real _t15D2 = 0.e0;
      vec3 _t15D3 = [_t15D0, _t15D1, _t15D2];
      real _t15D4 = prim •00CE<$[3]; $[3]; $[]> (_t15D3, deltaP0E00);
      real _t15D5 = prim /0055 (_t15CF, _t15D4);
      real _t15D6 = -0.1e-15;
      bool _t15D7 = prim >=007E (_t15D5, _t15D6);
      real _t15D8 = 0.e0;
      real _t15D9 = 0.1e1;
      real _t15DA = 0.e0;
      real _t15DB = 0.e0;
      vec3 _t15DC = [_t15D9, _t15DA, _t15DB];
      real _t15DD = prim •00CE<$[3]; $[3]; $[]> (_t15DC, _t0E30);
      real _t15DE = prim -0026<$[]> (_t15D8, _t15DD);
      real _t15DF = 0.1e1;
      real _t15E0 = 0.e0;
      real _t15E1 = 0.e0;
      vec3 _t15E2 = [_t15DF, _t15E0, _t15E1];
      real _t15E3 = prim •00CE<$[3]; $[3]; $[]> (_t15E2, deltaP0E00);
      real _t15E4 = prim /0055 (_t15DE, _t15E3);
      bool _t15E5 = prim >0080 (time1585, _t15E4);
      real _t15E6 = 0.1e1;
      real _t15E7 = 0.e0;
      real _t15E8 = 0.e0;
      vec3 _t15E9 = [_t15E6, _t15E7, _t15E8];
      real _t15EA = prim •00CE<$[3]; $[3]; $[]> (_t15E9, deltaP0E00);
      real _t15EB = prim |()|00B5<$[]> (_t15EA);
      real _t15EC = 0.1e-20;
      bool _t15ED = prim >=007E (_t15EB, _t15EC);
      bool _t15EE = prim $and01C4 (_t15E5, _t15ED);
      bool _t15EF = prim $and01C4 (_t15D7, _t15EE);
      if _t15EF {
        int _t15F0 = 1;
        bool _t15F1 = prim !=0086 (_t0E31, _t15F0);
        if _t15F1 {
          real _t15F2 = 0.e0;
          real _t15F3 = 0.1e1;
          real _t15F4 = 0.e0;
          real _t15F5 = 0.e0;
          vec3 _t15F6 = [_t15F3, _t15F4, _t15F5];
          real _t15F7 = prim •00CE<$[3]; $[3]; $[]> (_t15F6, _t0E30);
          real _t15F8 = prim -0026<$[]> (_t15F2, _t15F7);
          real _t15F9 = 0.1e1;
          real _t15FA = 0.e0;
          real _t15FB = 0.e0;
          vec3 _t15FC = [_t15F9, _t15FA, _t15FB];
          real _t15FD = prim •00CE<$[3]; $[3]; $[]> (_t15FC, deltaP0E00);
          time1585 = prim /0055 (_t15F8, _t15FD);
          face1586 = 1;
        } else {
          real _t15FE = 0.e0;
          real _t15FF = 0.1e1;
          real _t1600 = 0.e0;
          real _t1601 = 0.e0;
          vec3 _t1602 = [_t15FF, _t1600, _t1601];
          real _t1603 = prim •00CE<$[3]; $[3]; $[]> (_t1602, _t0E30);
          real _t1604 = prim -0026<$[]> (_t15FE, _t1603);
          real _t1605 = 0.1e1;
          real _t1606 = 0.e0;
          real _t1607 = 0.e0;
          vec3 _t1608 = [_t1605, _t1606, _t1607];
          real _t1609 = prim •00CE<$[3]; $[3]; $[]> (_t1608, deltaP0E00);
          faceTime1587 = prim /0055 (_t1604, _t1609);
        }
      }
      real _t160A = 0.e0;
      real _t160B = 0.e0;
      real _t160C = -0.1e1;
      real _t160D = 0.e0;
      vec3 _t160E = [_t160B, _t160C, _t160D];
      real _t160F = prim •00CE<$[3]; $[3]; $[]> (_t160E, _t0E30);
      real _t1610 = prim -0026<$[]> (_t160A, _t160F);
      real _t1611 = 0.e0;
      real _t1612 = -0.1e1;
      real _t1613 = 0.e0;
      vec3 _t1614 = [_t1611, _t1612, _t1613];
      real _t1615 = prim •00CE<$[3]; $[3]; $[]> (_t1614, deltaP0E00);
      real _t1616 = prim /0055 (_t1610, _t1615);
      real _t1617 = -0.1e-15;
      bool _t1618 = prim >=007E (_t1616, _t1617);
      real _t1619 = 0.e0;
      real _t161A = 0.e0;
      real _t161B = -0.1e1;
      real _t161C = 0.e0;
      vec3 _t161D = [_t161A, _t161B, _t161C];
      real _t161E = prim •00CE<$[3]; $[3]; $[]> (_t161D, _t0E30);
      real _t161F = prim -0026<$[]> (_t1619, _t161E);
      real _t1620 = 0.e0;
      real _t1621 = -0.1e1;
      real _t1622 = 0.e0;
      vec3 _t1623 = [_t1620, _t1621, _t1622];
      real _t1624 = prim •00CE<$[3]; $[3]; $[]> (_t1623, deltaP0E00);
      real _t1625 = prim /0055 (_t161F, _t1624);
      bool _t1626 = prim >0080 (time1585, _t1625);
      real _t1627 = 0.e0;
      real _t1628 = -0.1e1;
      real _t1629 = 0.e0;
      vec3 _t162A = [_t1627, _t1628, _t1629];
      real _t162B = prim •00CE<$[3]; $[3]; $[]> (_t162A, deltaP0E00);
      real _t162C = prim |()|00B5<$[]> (_t162B);
      real _t162D = 0.1e-20;
      bool _t162E = prim >=007E (_t162C, _t162D);
      bool _t162F = prim $and01C4 (_t1626, _t162E);
      bool _t1630 = prim $and01C4 (_t1618, _t162F);
      if _t1630 {
        int _t1631 = 2;
        bool _t1632 = prim !=0086 (_t0E31, _t1631);
        if _t1632 {
          real _t1633 = 0.e0;
          real _t1634 = 0.e0;
          real _t1635 = -0.1e1;
          real _t1636 = 0.e0;
          vec3 _t1637 = [_t1634, _t1635, _t1636];
          real _t1638 = prim •00CE<$[3]; $[3]; $[]> (_t1637, _t0E30);
          real _t1639 = prim -0026<$[]> (_t1633, _t1638);
          real _t163A = 0.e0;
          real _t163B = -0.1e1;
          real _t163C = 0.e0;
          vec3 _t163D = [_t163A, _t163B, _t163C];
          real _t163E = prim •00CE<$[3]; $[3]; $[]> (_t163D, deltaP0E00);
          time1585 = prim /0055 (_t1639, _t163E);
          face1586 = 2;
        } else {
          real _t163F = 0.e0;
          real _t1640 = 0.e0;
          real _t1641 = -0.1e1;
          real _t1642 = 0.e0;
          vec3 _t1643 = [_t1640, _t1641, _t1642];
          real _t1644 = prim •00CE<$[3]; $[3]; $[]> (_t1643, _t0E30);
          real _t1645 = prim -0026<$[]> (_t163F, _t1644);
          real _t1646 = 0.e0;
          real _t1647 = -0.1e1;
          real _t1648 = 0.e0;
          vec3 _t1649 = [_t1646, _t1647, _t1648];
          real _t164A = prim •00CE<$[3]; $[3]; $[]> (_t1649, deltaP0E00);
          faceTime1587 = prim /0055 (_t1645, _t164A);
        }
      }
      real _t164B = 0.e0;
      real _t164C = 0.e0;
      real _t164D = 0.e0;
      real _t164E = 0.1e1;
      vec3 _t164F = [_t164C, _t164D, _t164E];
      real _t1650 = prim •00CE<$[3]; $[3]; $[]> (_t164F, _t0E30);
      real _t1651 = prim -0026<$[]> (_t164B, _t1650);
      real _t1652 = 0.e0;
      real _t1653 = 0.e0;
      real _t1654 = 0.1e1;
      vec3 _t1655 = [_t1652, _t1653, _t1654];
      real _t1656 = prim •00CE<$[3]; $[3]; $[]> (_t1655, deltaP0E00);
      real _t1657 = prim /0055 (_t1651, _t1656);
      real _t1658 = -0.1e-15;
      bool _t1659 = prim >=007E (_t1657, _t1658);
      real _t165A = 0.e0;
      real _t165B = 0.e0;
      real _t165C = 0.e0;
      real _t165D = 0.1e1;
      vec3 _t165E = [_t165B, _t165C, _t165D];
      real _t165F = prim •00CE<$[3]; $[3]; $[]> (_t165E, _t0E30);
      real _t1660 = prim -0026<$[]> (_t165A, _t165F);
      real _t1661 = 0.e0;
      real _t1662 = 0.e0;
      real _t1663 = 0.1e1;
      vec3 _t1664 = [_t1661, _t1662, _t1663];
      real _t1665 = prim •00CE<$[3]; $[3]; $[]> (_t1664, deltaP0E00);
      real _t1666 = prim /0055 (_t1660, _t1665);
      bool _t1667 = prim >0080 (time1585, _t1666);
      real _t1668 = 0.e0;
      real _t1669 = 0.e0;
      real _t166A = 0.1e1;
      vec3 _t166B = [_t1668, _t1669, _t166A];
      real _t166C = prim •00CE<$[3]; $[3]; $[]> (_t166B, deltaP0E00);
      real _t166D = prim |()|00B5<$[]> (_t166C);
      real _t166E = 0.1e-20;
      bool _t166F = prim >=007E (_t166D, _t166E);
      bool _t1670 = prim $and01C4 (_t1667, _t166F);
      bool _t1671 = prim $and01C4 (_t1659, _t1670);
      if _t1671 {
        int _t1672 = 3;
        bool _t1673 = prim !=0086 (_t0E31, _t1672);
        if _t1673 {
          real _t1674 = 0.e0;
          real _t1675 = 0.e0;
          real _t1676 = 0.e0;
          real _t1677 = 0.1e1;
          vec3 _t1678 = [_t1675, _t1676, _t1677];
          real _t1679 = prim •00CE<$[3]; $[3]; $[]> (_t1678, _t0E30);
          real _t167A = prim -0026<$[]> (_t1674, _t1679);
          real _t167B = 0.e0;
          real _t167C = 0.e0;
          real _t167D = 0.1e1;
          vec3 _t167E = [_t167B, _t167C, _t167D];
          real _t167F = prim •00CE<$[3]; $[3]; $[]> (_t167E, deltaP0E00);
          time1585 = prim /0055 (_t167A, _t167F);
          face1586 = 3;
        } else {
          real _t1680 = 0.e0;
          real _t1681 = 0.e0;
          real _t1682 = 0.e0;
          real _t1683 = 0.1e1;
          vec3 _t1684 = [_t1681, _t1682, _t1683];
          real _t1685 = prim •00CE<$[3]; $[3]; $[]> (_t1684, _t0E30);
          real _t1686 = prim -0026<$[]> (_t1680, _t1685);
          real _t1687 = 0.e0;
          real _t1688 = 0.e0;
          real _t1689 = 0.1e1;
          vec3 _t168A = [_t1687, _t1688, _t1689];
          real _t168B = prim •00CE<$[3]; $[3]; $[]> (_t168A, deltaP0E00);
          faceTime1587 = prim /0055 (_t1686, _t168B);
        }
      }
      int _t168C = -1;
      bool _t168D = prim !=0086 (face1586, _t168C);
      if _t168D {
        real _t168E = 0.e0;
        real _t168F = prim max0125 (time1585, _t168E);
        real _t1690 = (real)face1586;
        vec2 _t1691 = [_t168F, _t1690];
        _t0E32 = _t1691;
      } else {
        real _t1692 = -inf;
        bool _t1693 = prim ==0084 (_t1692, faceTime1587);
        if _t1693 {
          real _t1694 = -0.1e1;
          real _t1695 = -0.1e1;
          vec2 _t1696 = [_t1694, _t1695];
          _t0E32 = _t1696;
        } else {
          real _t1697 = (real)_t0E31;
          vec2 _t1698 = [faceTime1587, _t1697];
          _t0E32 = _t1698;
        }
      }
      real eTime0E33 = _t0E32[0];
      real _t0E34 = prim *0034 (time0DEA, eTime0E33);
      time0DEA = prim -0026<$[]> (time0DEA, _t0E34);
      Femdata: Mesh _t0E35 = extractFem(cmp0DEB, Mesh);
      int _t0E36 = extractFemItem(CellIndex(Mesh), int, cmp0DEB);
      vec3 _t0E37 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      vec3 _t0E38 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      int _t0E39 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E3A;
      real time1471 = +inf;
      int face1472 = -1;
      real faceTime1473 = -inf;
      real _t1474 = 0.57735026919e0;
      real _t1475 = 0.57735026919e0;
      real _t1476 = 0.57735026919e0;
      real _t1477 = 0.57735026919e0;
      vec3 _t1478 = [_t1475, _t1476, _t1477];
      real _t1479 = prim •00CE<$[3]; $[3]; $[]> (_t1478, _t0E38);
      real _t147A = prim -0026<$[]> (_t1474, _t1479);
      real _t147B = 0.57735026919e0;
      real _t147C = 0.57735026919e0;
      real _t147D = 0.57735026919e0;
      vec3 _t147E = [_t147B, _t147C, _t147D];
      real _t147F = prim •00CE<$[3]; $[3]; $[]> (_t147E, deltaP0E00);
      real _t1480 = prim /0055 (_t147A, _t147F);
      real _t1481 = -0.1e-15;
      bool _t1482 = prim >=007E (_t1480, _t1481);
      real _t1483 = 0.57735026919e0;
      real _t1484 = 0.57735026919e0;
      real _t1485 = 0.57735026919e0;
      real _t1486 = 0.57735026919e0;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, _t0E38);
      real _t1489 = prim -0026<$[]> (_t1483, _t1488);
      real _t148A = 0.57735026919e0;
      real _t148B = 0.57735026919e0;
      real _t148C = 0.57735026919e0;
      vec3 _t148D = [_t148A, _t148B, _t148C];
      real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, deltaP0E00);
      real _t148F = prim /0055 (_t1489, _t148E);
      bool _t1490 = prim >0080 (time1471, _t148F);
      real _t1491 = 0.57735026919e0;
      real _t1492 = 0.57735026919e0;
      real _t1493 = 0.57735026919e0;
      vec3 _t1494 = [_t1491, _t1492, _t1493];
      real _t1495 = prim •00CE<$[3]; $[3]; $[]> (_t1494, deltaP0E00);
      real _t1496 = prim |()|00B5<$[]> (_t1495);
      real _t1497 = 0.1e-20;
      bool _t1498 = prim >=007E (_t1496, _t1497);
      bool _t1499 = prim $and01C4 (_t1490, _t1498);
      bool _t149A = prim $and01C4 (_t1482, _t1499);
      if _t149A {
        int _t149B = 0;
        bool _t149C = prim !=0086 (_t0E39, _t149B);
        if _t149C {
          real _t149D = 0.57735026919e0;
          real _t149E = 0.57735026919e0;
          real _t149F = 0.57735026919e0;
          real _t14A0 = 0.57735026919e0;
          vec3 _t14A1 = [_t149E, _t149F, _t14A0];
          real _t14A2 = prim •00CE<$[3]; $[3]; $[]> (_t14A1, _t0E38);
          real _t14A3 = prim -0026<$[]> (_t149D, _t14A2);
          real _t14A4 = 0.57735026919e0;
          real _t14A5 = 0.57735026919e0;
          real _t14A6 = 0.57735026919e0;
          vec3 _t14A7 = [_t14A4, _t14A5, _t14A6];
          real _t14A8 = prim •00CE<$[3]; $[3]; $[]> (_t14A7, deltaP0E00);
          time1471 = prim /0055 (_t14A3, _t14A8);
          face1472 = 0;
        } else {
          real _t14A9 = 0.57735026919e0;
          real _t14AA = 0.57735026919e0;
          real _t14AB = 0.57735026919e0;
          real _t14AC = 0.57735026919e0;
          vec3 _t14AD = [_t14AA, _t14AB, _t14AC];
          real _t14AE = prim •00CE<$[3]; $[3]; $[]> (_t14AD, _t0E38);
          real _t14AF = prim -0026<$[]> (_t14A9, _t14AE);
          real _t14B0 = 0.57735026919e0;
          real _t14B1 = 0.57735026919e0;
          real _t14B2 = 0.57735026919e0;
          vec3 _t14B3 = [_t14B0, _t14B1, _t14B2];
          real _t14B4 = prim •00CE<$[3]; $[3]; $[]> (_t14B3, deltaP0E00);
          faceTime1473 = prim /0055 (_t14AF, _t14B4);
        }
      }
      real _t14B5 = 0.e0;
      real _t14B6 = 0.1e1;
      real _t14B7 = 0.e0;
      real _t14B8 = 0.e0;
      vec3 _t14B9 = [_t14B6, _t14B7, _t14B8];
      real _t14BA = prim •00CE<$[3]; $[3]; $[]> (_t14B9, _t0E38);
      real _t14BB = prim -0026<$[]> (_t14B5, _t14BA);
      real _t14BC = 0.1e1;
      real _t14BD = 0.e0;
      real _t14BE = 0.e0;
      vec3 _t14BF = [_t14BC, _t14BD, _t14BE];
      real _t14C0 = prim •00CE<$[3]; $[3]; $[]> (_t14BF, deltaP0E00);
      real _t14C1 = prim /0055 (_t14BB, _t14C0);
      real _t14C2 = -0.1e-15;
      bool _t14C3 = prim >=007E (_t14C1, _t14C2);
      real _t14C4 = 0.e0;
      real _t14C5 = 0.1e1;
      real _t14C6 = 0.e0;
      real _t14C7 = 0.e0;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, _t0E38);
      real _t14CA = prim -0026<$[]> (_t14C4, _t14C9);
      real _t14CB = 0.1e1;
      real _t14CC = 0.e0;
      real _t14CD = 0.e0;
      vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
      real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, deltaP0E00);
      real _t14D0 = prim /0055 (_t14CA, _t14CF);
      bool _t14D1 = prim >0080 (time1471, _t14D0);
      real _t14D2 = 0.1e1;
      real _t14D3 = 0.e0;
      real _t14D4 = 0.e0;
      vec3 _t14D5 = [_t14D2, _t14D3, _t14D4];
      real _t14D6 = prim •00CE<$[3]; $[3]; $[]> (_t14D5, deltaP0E00);
      real _t14D7 = prim |()|00B5<$[]> (_t14D6);
      real _t14D8 = 0.1e-20;
      bool _t14D9 = prim >=007E (_t14D7, _t14D8);
      bool _t14DA = prim $and01C4 (_t14D1, _t14D9);
      bool _t14DB = prim $and01C4 (_t14C3, _t14DA);
      if _t14DB {
        int _t14DC = 1;
        bool _t14DD = prim !=0086 (_t0E39, _t14DC);
        if _t14DD {
          real _t14DE = 0.e0;
          real _t14DF = 0.1e1;
          real _t14E0 = 0.e0;
          real _t14E1 = 0.e0;
          vec3 _t14E2 = [_t14DF, _t14E0, _t14E1];
          real _t14E3 = prim •00CE<$[3]; $[3]; $[]> (_t14E2, _t0E38);
          real _t14E4 = prim -0026<$[]> (_t14DE, _t14E3);
          real _t14E5 = 0.1e1;
          real _t14E6 = 0.e0;
          real _t14E7 = 0.e0;
          vec3 _t14E8 = [_t14E5, _t14E6, _t14E7];
          real _t14E9 = prim •00CE<$[3]; $[3]; $[]> (_t14E8, deltaP0E00);
          time1471 = prim /0055 (_t14E4, _t14E9);
          face1472 = 1;
        } else {
          real _t14EA = 0.e0;
          real _t14EB = 0.1e1;
          real _t14EC = 0.e0;
          real _t14ED = 0.e0;
          vec3 _t14EE = [_t14EB, _t14EC, _t14ED];
          real _t14EF = prim •00CE<$[3]; $[3]; $[]> (_t14EE, _t0E38);
          real _t14F0 = prim -0026<$[]> (_t14EA, _t14EF);
          real _t14F1 = 0.1e1;
          real _t14F2 = 0.e0;
          real _t14F3 = 0.e0;
          vec3 _t14F4 = [_t14F1, _t14F2, _t14F3];
          real _t14F5 = prim •00CE<$[3]; $[3]; $[]> (_t14F4, deltaP0E00);
          faceTime1473 = prim /0055 (_t14F0, _t14F5);
        }
      }
      real _t14F6 = 0.e0;
      real _t14F7 = 0.e0;
      real _t14F8 = -0.1e1;
      real _t14F9 = 0.e0;
      vec3 _t14FA = [_t14F7, _t14F8, _t14F9];
      real _t14FB = prim •00CE<$[3]; $[3]; $[]> (_t14FA, _t0E38);
      real _t14FC = prim -0026<$[]> (_t14F6, _t14FB);
      real _t14FD = 0.e0;
      real _t14FE = -0.1e1;
      real _t14FF = 0.e0;
      vec3 _t1500 = [_t14FD, _t14FE, _t14FF];
      real _t1501 = prim •00CE<$[3]; $[3]; $[]> (_t1500, deltaP0E00);
      real _t1502 = prim /0055 (_t14FC, _t1501);
      real _t1503 = -0.1e-15;
      bool _t1504 = prim >=007E (_t1502, _t1503);
      real _t1505 = 0.e0;
      real _t1506 = 0.e0;
      real _t1507 = -0.1e1;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, _t0E38);
      real _t150B = prim -0026<$[]> (_t1505, _t150A);
      real _t150C = 0.e0;
      real _t150D = -0.1e1;
      real _t150E = 0.e0;
      vec3 _t150F = [_t150C, _t150D, _t150E];
      real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, deltaP0E00);
      real _t1511 = prim /0055 (_t150B, _t1510);
      bool _t1512 = prim >0080 (time1471, _t1511);
      real _t1513 = 0.e0;
      real _t1514 = -0.1e1;
      real _t1515 = 0.e0;
      vec3 _t1516 = [_t1513, _t1514, _t1515];
      real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, deltaP0E00);
      real _t1518 = prim |()|00B5<$[]> (_t1517);
      real _t1519 = 0.1e-20;
      bool _t151A = prim >=007E (_t1518, _t1519);
      bool _t151B = prim $and01C4 (_t1512, _t151A);
      bool _t151C = prim $and01C4 (_t1504, _t151B);
      if _t151C {
        int _t151D = 2;
        bool _t151E = prim !=0086 (_t0E39, _t151D);
        if _t151E {
          real _t151F = 0.e0;
          real _t1520 = 0.e0;
          real _t1521 = -0.1e1;
          real _t1522 = 0.e0;
          vec3 _t1523 = [_t1520, _t1521, _t1522];
          real _t1524 = prim •00CE<$[3]; $[3]; $[]> (_t1523, _t0E38);
          real _t1525 = prim -0026<$[]> (_t151F, _t1524);
          real _t1526 = 0.e0;
          real _t1527 = -0.1e1;
          real _t1528 = 0.e0;
          vec3 _t1529 = [_t1526, _t1527, _t1528];
          real _t152A = prim •00CE<$[3]; $[3]; $[]> (_t1529, deltaP0E00);
          time1471 = prim /0055 (_t1525, _t152A);
          face1472 = 2;
        } else {
          real _t152B = 0.e0;
          real _t152C = 0.e0;
          real _t152D = -0.1e1;
          real _t152E = 0.e0;
          vec3 _t152F = [_t152C, _t152D, _t152E];
          real _t1530 = prim •00CE<$[3]; $[3]; $[]> (_t152F, _t0E38);
          real _t1531 = prim -0026<$[]> (_t152B, _t1530);
          real _t1532 = 0.e0;
          real _t1533 = -0.1e1;
          real _t1534 = 0.e0;
          vec3 _t1535 = [_t1532, _t1533, _t1534];
          real _t1536 = prim •00CE<$[3]; $[3]; $[]> (_t1535, deltaP0E00);
          faceTime1473 = prim /0055 (_t1531, _t1536);
        }
      }
      real _t1537 = 0.e0;
      real _t1538 = 0.e0;
      real _t1539 = 0.e0;
      real _t153A = 0.1e1;
      vec3 _t153B = [_t1538, _t1539, _t153A];
      real _t153C = prim •00CE<$[3]; $[3]; $[]> (_t153B, _t0E38);
      real _t153D = prim -0026<$[]> (_t1537, _t153C);
      real _t153E = 0.e0;
      real _t153F = 0.e0;
      real _t1540 = 0.1e1;
      vec3 _t1541 = [_t153E, _t153F, _t1540];
      real _t1542 = prim •00CE<$[3]; $[3]; $[]> (_t1541, deltaP0E00);
      real _t1543 = prim /0055 (_t153D, _t1542);
      real _t1544 = -0.1e-15;
      bool _t1545 = prim >=007E (_t1543, _t1544);
      real _t1546 = 0.e0;
      real _t1547 = 0.e0;
      real _t1548 = 0.e0;
      real _t1549 = 0.1e1;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, _t0E38);
      real _t154C = prim -0026<$[]> (_t1546, _t154B);
      real _t154D = 0.e0;
      real _t154E = 0.e0;
      real _t154F = 0.1e1;
      vec3 _t1550 = [_t154D, _t154E, _t154F];
      real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, deltaP0E00);
      real _t1552 = prim /0055 (_t154C, _t1551);
      bool _t1553 = prim >0080 (time1471, _t1552);
      real _t1554 = 0.e0;
      real _t1555 = 0.e0;
      real _t1556 = 0.1e1;
      vec3 _t1557 = [_t1554, _t1555, _t1556];
      real _t1558 = prim •00CE<$[3]; $[3]; $[]> (_t1557, deltaP0E00);
      real _t1559 = prim |()|00B5<$[]> (_t1558);
      real _t155A = 0.1e-20;
      bool _t155B = prim >=007E (_t1559, _t155A);
      bool _t155C = prim $and01C4 (_t1553, _t155B);
      bool _t155D = prim $and01C4 (_t1545, _t155C);
      if _t155D {
        int _t155E = 3;
        bool _t155F = prim !=0086 (_t0E39, _t155E);
        if _t155F {
          real _t1560 = 0.e0;
          real _t1561 = 0.e0;
          real _t1562 = 0.e0;
          real _t1563 = 0.1e1;
          vec3 _t1564 = [_t1561, _t1562, _t1563];
          real _t1565 = prim •00CE<$[3]; $[3]; $[]> (_t1564, _t0E38);
          real _t1566 = prim -0026<$[]> (_t1560, _t1565);
          real _t1567 = 0.e0;
          real _t1568 = 0.e0;
          real _t1569 = 0.1e1;
          vec3 _t156A = [_t1567, _t1568, _t1569];
          real _t156B = prim •00CE<$[3]; $[3]; $[]> (_t156A, deltaP0E00);
          time1471 = prim /0055 (_t1566, _t156B);
          face1472 = 3;
        } else {
          real _t156C = 0.e0;
          real _t156D = 0.e0;
          real _t156E = 0.e0;
          real _t156F = 0.1e1;
          vec3 _t1570 = [_t156D, _t156E, _t156F];
          real _t1571 = prim •00CE<$[3]; $[3]; $[]> (_t1570, _t0E38);
          real _t1572 = prim -0026<$[]> (_t156C, _t1571);
          real _t1573 = 0.e0;
          real _t1574 = 0.e0;
          real _t1575 = 0.1e1;
          vec3 _t1576 = [_t1573, _t1574, _t1575];
          real _t1577 = prim •00CE<$[3]; $[3]; $[]> (_t1576, deltaP0E00);
          faceTime1473 = prim /0055 (_t1572, _t1577);
        }
      }
      int _t1578 = -1;
      bool _t1579 = prim !=0086 (face1472, _t1578);
      if _t1579 {
        real _t157A = 0.e0;
        real _t157B = prim max0125 (time1471, _t157A);
        real _t157C = (real)face1472;
        vec2 _t157D = [_t157B, _t157C];
        _t0E3A = _t157D;
      } else {
        real _t157E = -inf;
        bool _t157F = prim ==0084 (_t157E, faceTime1473);
        if _t157F {
          real _t1580 = -0.1e1;
          real _t1581 = -0.1e1;
          vec2 _t1582 = [_t1580, _t1581];
          _t0E3A = _t1582;
        } else {
          real _t1583 = (real)_t0E39;
          vec2 _t1584 = [faceTime1473, _t1583];
          _t0E3A = _t1584;
        }
      }
      Femdata: MeshPos nmp0E3B;
      int _t0EA6 = -1;
      real _t0EA7 = _t0E3A[1];
      int _t0EA8 = prim $r2i01B7 (_t0EA7);
      int[2] _t0EA9 = func nextCell4048A (_t0EA8, _t0E36, _t0E35);
      int _t0EAA = 0;
      int _t0EAB = prim $sub01C0<int; %2> (_t0EA9, _t0EAA);
      bool _t0EAC = prim !=0086 (_t0EA6, _t0EAB);
      if _t0EAC {
        string _t0EAD = "face ";
        real _t0EAE = _t0E3A[1];
        int _t0EAF = prim $r2i01B7 (_t0EAE);
        string _t0EB0 = " to ";
        real _t0EB1 = _t0E3A[1];
        int _t0EB2 = prim $r2i01B7 (_t0EB1);
        int[2] _t0EB3 = func nextCell4048A (_t0EB2, _t0E36, _t0E35);
        int _t0EB4 = 1;
        int _t0EB5 = prim $sub01C0<int; %2> (_t0EB3, _t0EB4);
        string _t0EB6 = "\n";
        string _t0EB7 = "got: ";
        real _t0EB8 = 0.1e1;
        real _t0EB9 = 0.e0;
        real _t0EBA = 0.e0;
        real _t0EBB = 0.e0;
        vec4 _t0EBC = [_t0EB8, _t0EB9, _t0EBA, _t0EBB];
        real _t0EBD = 0.e0;
        real _t0EBE = 0.1e1;
        real _t0EBF = 0.e0;
        real _t0EC0 = 0.e0;
        vec4 _t0EC1 = [_t0EBD, _t0EBE, _t0EBF, _t0EC0];
        real _t0EC2 = 0.e0;
        real _t0EC3 = 0.e0;
        real _t0EC4 = 0.1e1;
        real _t0EC5 = 0.e0;
        vec4 _t0EC6 = [_t0EC2, _t0EC3, _t0EC4, _t0EC5];
        real _t0EC7 = 0.971445146547e-16;
        real _t0EC8 = 0.e0;
        real _t0EC9 = 0.e0;
        real _t0ECA = 0.1e1;
        vec4 _t0ECB = [_t0EC7, _t0EC8, _t0EC9, _t0ECA];
        tensor[4,4] _t0ECC = [_t0EBC, _t0EC1, _t0EC6, _t0ECB];
        real _t0ECD = 0.57735026919e0;
        real _t0ECE = 0.57735026919e0;
        real _t0ECF = 0.57735026919e0;
        real _t0ED0 = -0.57735026919e0;
        vec4 _t0ED1 = [_t0ECD, _t0ECE, _t0ECF, _t0ED0];
        real _t0ED2 = -0.333333333333e0;
        real _t0ED3 = 0.666666666667e0;
        real _t0ED4 = -0.333333333333e0;
        real _t0ED5 = 0.333333333333e0;
        vec4 _t0ED6 = [_t0ED2, _t0ED3, _t0ED4, _t0ED5];
        real _t0ED7 = -0.333333333333e0;
        real _t0ED8 = -0.333333333333e0;
        real _t0ED9 = 0.666666666667e0;
        real _t0EDA = 0.333333333333e0;
        vec4 _t0EDB = [_t0ED7, _t0ED8, _t0ED9, _t0EDA];
        real _t0EDC = 0.971445146547e-16;
        real _t0EDD = 0.e0;
        real _t0EDE = 0.e0;
        real _t0EDF = 0.1e1;
        vec4 _t0EE0 = [_t0EDC, _t0EDD, _t0EDE, _t0EDF];
        tensor[4,4] _t0EE1 = [_t0ED1, _t0ED6, _t0EDB, _t0EE0];
        real _t0EE2 = -0.333333333333e0;
        real _t0EE3 = 0.666666666667e0;
        real _t0EE4 = -0.333333333333e0;
        real _t0EE5 = 0.333333333333e0;
        vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
        real _t0EE7 = -0.57735026919e0;
        real _t0EE8 = -0.57735026919e0;
        real _t0EE9 = -0.57735026919e0;
        real _t0EEA = 0.57735026919e0;
        vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
        real _t0EEC = -0.333333333333e0;
        real _t0EED = -0.333333333333e0;
        real _t0EEE = 0.666666666667e0;
        real _t0EEF = 0.333333333333e0;
        vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
        real _t0EF1 = 0.971445146547e-16;
        real _t0EF2 = 0.e0;
        real _t0EF3 = 0.e0;
        real _t0EF4 = 0.1e1;
        vec4 _t0EF5 = [_t0EF1, _t0EF2, _t0EF3, _t0EF4];
        tensor[4,4] _t0EF6 = [_t0EE6, _t0EEB, _t0EF0, _t0EF5];
        real _t0EF7 = -0.333333333333e0;
        real _t0EF8 = 0.666666666667e0;
        real _t0EF9 = -0.333333333333e0;
        real _t0EFA = 0.333333333333e0;
        vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
        real _t0EFC = -0.333333333333e0;
        real _t0EFD = -0.333333333333e0;
        real _t0EFE = 0.666666666667e0;
        real _t0EFF = 0.333333333333e0;
        vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
        real _t0F01 = 0.57735026919e0;
        real _t0F02 = 0.57735026919e0;
        real _t0F03 = 0.57735026919e0;
        real _t0F04 = -0.57735026919e0;
        vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
        real _t0F06 = 0.971445146547e-16;
        real _t0F07 = 0.e0;
        real _t0F08 = 0.e0;
        real _t0F09 = 0.1e1;
        vec4 _t0F0A = [_t0F06, _t0F07, _t0F08, _t0F09];
        tensor[4,4] _t0F0B = [_t0EFB, _t0F00, _t0F05, _t0F0A];
        tensor[4,4][4] _t0F0C = {_t0ECC, _t0EE1, _t0EF6, _t0F0B};
        real _t0F0D = 0.57735026919e0;
        real _t0F0E = -0.1e1;
        real _t0F0F = -0.1e1;
        real _t0F10 = 0.1e1;
        vec4 _t0F11 = [_t0F0D, _t0F0E, _t0F0F, _t0F10];
        real _t0F12 = 0.57735026919e0;
        real _t0F13 = 0.1e1;
        real _t0F14 = 0.e0;
        real _t0F15 = 0.e0;
        vec4 _t0F16 = [_t0F12, _t0F13, _t0F14, _t0F15];
        real _t0F17 = 0.57735026919e0;
        real _t0F18 = 0.e0;
        real _t0F19 = 0.1e1;
        real _t0F1A = 0.e0;
        vec4 _t0F1B = [_t0F17, _t0F18, _t0F19, _t0F1A];
        real _t0F1C = 0.e0;
        real _t0F1D = 0.e0;
        real _t0F1E = 0.e0;
        real _t0F1F = 0.1e1;
        vec4 _t0F20 = [_t0F1C, _t0F1D, _t0F1E, _t0F1F];
        tensor[4,4] _t0F21 = [_t0F11, _t0F16, _t0F1B, _t0F20];
        real _t0F22 = 0.1e1;
        real _t0F23 = 0.e0;
        real _t0F24 = 0.e0;
        real _t0F25 = 0.e0;
        vec4 _t0F26 = [_t0F22, _t0F23, _t0F24, _t0F25];
        real _t0F27 = 0.e0;
        real _t0F28 = 0.1e1;
        real _t0F29 = 0.e0;
        real _t0F2A = 0.e0;
        vec4 _t0F2B = [_t0F27, _t0F28, _t0F29, _t0F2A];
        real _t0F2C = 0.e0;
        real _t0F2D = 0.e0;
        real _t0F2E = 0.1e1;
        real _t0F2F = 0.e0;
        vec4 _t0F30 = [_t0F2C, _t0F2D, _t0F2E, _t0F2F];
        real _t0F31 = 0.e0;
        real _t0F32 = 0.e0;
        real _t0F33 = 0.e0;
        real _t0F34 = 0.1e1;
        vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
        tensor[4,4] _t0F36 = [_t0F26, _t0F2B, _t0F30, _t0F35];
        real _t0F37 = 0.e0;
        real _t0F38 = 0.1e1;
        real _t0F39 = 0.e0;
        real _t0F3A = 0.e0;
        vec4 _t0F3B = [_t0F37, _t0F38, _t0F39, _t0F3A];
        real _t0F3C = -0.1e1;
        real _t0F3D = 0.e0;
        real _t0F3E = 0.e0;
        real _t0F3F = 0.e0;
        vec4 _t0F40 = [_t0F3C, _t0F3D, _t0F3E, _t0F3F];
        real _t0F41 = 0.e0;
        real _t0F42 = 0.e0;
        real _t0F43 = 0.1e1;
        real _t0F44 = 0.e0;
        vec4 _t0F45 = [_t0F41, _t0F42, _t0F43, _t0F44];
        real _t0F46 = 0.e0;
        real _t0F47 = 0.e0;
        real _t0F48 = 0.e0;
        real _t0F49 = 0.1e1;
        vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
        tensor[4,4] _t0F4B = [_t0F3B, _t0F40, _t0F45, _t0F4A];
        real _t0F4C = 0.e0;
        real _t0F4D = 0.1e1;
        real _t0F4E = 0.e0;
        real _t0F4F = 0.e0;
        vec4 _t0F50 = [_t0F4C, _t0F4D, _t0F4E, _t0F4F];
        real _t0F51 = 0.e0;
        real _t0F52 = 0.e0;
        real _t0F53 = 0.1e1;
        real _t0F54 = 0.e0;
        vec4 _t0F55 = [_t0F51, _t0F52, _t0F53, _t0F54];
        real _t0F56 = 0.1e1;
        real _t0F57 = 0.e0;
        real _t0F58 = 0.e0;
        real _t0F59 = 0.e0;
        vec4 _t0F5A = [_t0F56, _t0F57, _t0F58, _t0F59];
        real _t0F5B = 0.e0;
        real _t0F5C = 0.e0;
        real _t0F5D = 0.e0;
        real _t0F5E = 0.1e1;
        vec4 _t0F5F = [_t0F5B, _t0F5C, _t0F5D, _t0F5E];
        tensor[4,4] _t0F60 = [_t0F50, _t0F55, _t0F5A, _t0F5F];
        tensor[4,4][4] _t0F61 = {_t0F21, _t0F36, _t0F4B, _t0F60};
        real _t0F62 = -0.1e1;
        real _t0F63 = -0.57735026919e0;
        real _t0F64 = -0.1e1;
        real _t0F65 = 0.1e1;
        vec4 _t0F66 = [_t0F62, _t0F63, _t0F64, _t0F65];
        real _t0F67 = 0.1e1;
        real _t0F68 = -0.57735026919e0;
        real _t0F69 = 0.e0;
        real _t0F6A = 0.e0;
        vec4 _t0F6B = [_t0F67, _t0F68, _t0F69, _t0F6A];
        real _t0F6C = 0.e0;
        real _t0F6D = -0.57735026919e0;
        real _t0F6E = 0.1e1;
        real _t0F6F = 0.e0;
        vec4 _t0F70 = [_t0F6C, _t0F6D, _t0F6E, _t0F6F];
        real _t0F71 = 0.e0;
        real _t0F72 = 0.e0;
        real _t0F73 = 0.e0;
        real _t0F74 = 0.1e1;
        vec4 _t0F75 = [_t0F71, _t0F72, _t0F73, _t0F74];
        tensor[4,4] _t0F76 = [_t0F66, _t0F6B, _t0F70, _t0F75];
        real _t0F77 = 0.e0;
        real _t0F78 = -0.1e1;
        real _t0F79 = 0.e0;
        real _t0F7A = 0.e0;
        vec4 _t0F7B = [_t0F77, _t0F78, _t0F79, _t0F7A];
        real _t0F7C = 0.1e1;
        real _t0F7D = 0.e0;
        real _t0F7E = 0.e0;
        real _t0F7F = 0.e0;
        vec4 _t0F80 = [_t0F7C, _t0F7D, _t0F7E, _t0F7F];
        real _t0F81 = 0.e0;
        real _t0F82 = 0.e0;
        real _t0F83 = 0.1e1;
        real _t0F84 = 0.e0;
        vec4 _t0F85 = [_t0F81, _t0F82, _t0F83, _t0F84];
        real _t0F86 = 0.e0;
        real _t0F87 = 0.e0;
        real _t0F88 = 0.e0;
        real _t0F89 = 0.1e1;
        vec4 _t0F8A = [_t0F86, _t0F87, _t0F88, _t0F89];
        tensor[4,4] _t0F8B = [_t0F7B, _t0F80, _t0F85, _t0F8A];
        real _t0F8C = 0.1e1;
        real _t0F8D = 0.e0;
        real _t0F8E = 0.e0;
        real _t0F8F = 0.e0;
        vec4 _t0F90 = [_t0F8C, _t0F8D, _t0F8E, _t0F8F];
        real _t0F91 = 0.e0;
        real _t0F92 = 0.1e1;
        real _t0F93 = 0.e0;
        real _t0F94 = 0.e0;
        vec4 _t0F95 = [_t0F91, _t0F92, _t0F93, _t0F94];
        real _t0F96 = 0.e0;
        real _t0F97 = 0.e0;
        real _t0F98 = 0.1e1;
        real _t0F99 = 0.e0;
        vec4 _t0F9A = [_t0F96, _t0F97, _t0F98, _t0F99];
        real _t0F9B = 0.e0;
        real _t0F9C = 0.e0;
        real _t0F9D = 0.e0;
        real _t0F9E = 0.1e1;
        vec4 _t0F9F = [_t0F9B, _t0F9C, _t0F9D, _t0F9E];
        tensor[4,4] _t0FA0 = [_t0F90, _t0F95, _t0F9A, _t0F9F];
        real _t0FA1 = 0.1e1;
        real _t0FA2 = 0.e0;
        real _t0FA3 = 0.e0;
        real _t0FA4 = 0.e0;
        vec4 _t0FA5 = [_t0FA1, _t0FA2, _t0FA3, _t0FA4];
        real _t0FA6 = 0.e0;
        real _t0FA7 = 0.e0;
        real _t0FA8 = 0.1e1;
        real _t0FA9 = 0.e0;
        vec4 _t0FAA = [_t0FA6, _t0FA7, _t0FA8, _t0FA9];
        real _t0FAB = 0.e0;
        real _t0FAC = -0.1e1;
        real _t0FAD = 0.e0;
        real _t0FAE = 0.e0;
        vec4 _t0FAF = [_t0FAB, _t0FAC, _t0FAD, _t0FAE];
        real _t0FB0 = 0.e0;
        real _t0FB1 = 0.e0;
        real _t0FB2 = 0.e0;
        real _t0FB3 = 0.1e1;
        vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
        tensor[4,4] _t0FB5 = [_t0FA5, _t0FAA, _t0FAF, _t0FB4];
        tensor[4,4][4] _t0FB6 = {_t0F76, _t0F8B, _t0FA0, _t0FB5};
        real _t0FB7 = -0.1e1;
        real _t0FB8 = -0.1e1;
        real _t0FB9 = 0.57735026919e0;
        real _t0FBA = 0.1e1;
        vec4 _t0FBB = [_t0FB7, _t0FB8, _t0FB9, _t0FBA];
        real _t0FBC = 0.1e1;
        real _t0FBD = 0.e0;
        real _t0FBE = 0.57735026919e0;
        real _t0FBF = 0.e0;
        vec4 _t0FC0 = [_t0FBC, _t0FBD, _t0FBE, _t0FBF];
        real _t0FC1 = 0.e0;
        real _t0FC2 = 0.1e1;
        real _t0FC3 = 0.57735026919e0;
        real _t0FC4 = 0.e0;
        vec4 _t0FC5 = [_t0FC1, _t0FC2, _t0FC3, _t0FC4];
        real _t0FC6 = 0.e0;
        real _t0FC7 = 0.e0;
        real _t0FC8 = 0.e0;
        real _t0FC9 = 0.1e1;
        vec4 _t0FCA = [_t0FC6, _t0FC7, _t0FC8, _t0FC9];
        tensor[4,4] _t0FCB = [_t0FBB, _t0FC0, _t0FC5, _t0FCA];
        real _t0FCC = 0.e0;
        real _t0FCD = 0.e0;
        real _t0FCE = 0.1e1;
        real _t0FCF = 0.e0;
        vec4 _t0FD0 = [_t0FCC, _t0FCD, _t0FCE, _t0FCF];
        real _t0FD1 = 0.1e1;
        real _t0FD2 = 0.e0;
        real _t0FD3 = 0.e0;
        real _t0FD4 = 0.e0;
        vec4 _t0FD5 = [_t0FD1, _t0FD2, _t0FD3, _t0FD4];
        real _t0FD6 = 0.e0;
        real _t0FD7 = 0.1e1;
        real _t0FD8 = 0.e0;
        real _t0FD9 = 0.e0;
        vec4 _t0FDA = [_t0FD6, _t0FD7, _t0FD8, _t0FD9];
        real _t0FDB = 0.e0;
        real _t0FDC = 0.e0;
        real _t0FDD = 0.e0;
        real _t0FDE = 0.1e1;
        vec4 _t0FDF = [_t0FDB, _t0FDC, _t0FDD, _t0FDE];
        tensor[4,4] _t0FE0 = [_t0FD0, _t0FD5, _t0FDA, _t0FDF];
        real _t0FE1 = 0.1e1;
        real _t0FE2 = 0.e0;
        real _t0FE3 = 0.e0;
        real _t0FE4 = 0.e0;
        vec4 _t0FE5 = [_t0FE1, _t0FE2, _t0FE3, _t0FE4];
        real _t0FE6 = 0.e0;
        real _t0FE7 = 0.e0;
        real _t0FE8 = -0.1e1;
        real _t0FE9 = 0.e0;
        vec4 _t0FEA = [_t0FE6, _t0FE7, _t0FE8, _t0FE9];
        real _t0FEB = 0.e0;
        real _t0FEC = 0.1e1;
        real _t0FED = 0.e0;
        real _t0FEE = 0.e0;
        vec4 _t0FEF = [_t0FEB, _t0FEC, _t0FED, _t0FEE];
        real _t0FF0 = 0.e0;
        real _t0FF1 = 0.e0;
        real _t0FF2 = 0.e0;
        real _t0FF3 = 0.1e1;
        vec4 _t0FF4 = [_t0FF0, _t0FF1, _t0FF2, _t0FF3];
        tensor[4,4] _t0FF5 = [_t0FE5, _t0FEA, _t0FEF, _t0FF4];
        real _t0FF6 = 0.1e1;
        real _t0FF7 = 0.e0;
        real _t0FF8 = 0.e0;
        real _t0FF9 = 0.e0;
        vec4 _t0FFA = [_t0FF6, _t0FF7, _t0FF8, _t0FF9];
        real _t0FFB = 0.e0;
        real _t0FFC = 0.1e1;
        real _t0FFD = 0.e0;
        real _t0FFE = 0.e0;
        vec4 _t0FFF = [_t0FFB, _t0FFC, _t0FFD, _t0FFE];
        real _t1000 = 0.e0;
        real _t1001 = 0.e0;
        real _t1002 = 0.1e1;
        real _t1003 = 0.e0;
        vec4 _t1004 = [_t1000, _t1001, _t1002, _t1003];
        real _t1005 = 0.e0;
        real _t1006 = 0.e0;
        real _t1007 = 0.e0;
        real _t1008 = 0.1e1;
        vec4 _t1009 = [_t1005, _t1006, _t1007, _t1008];
        tensor[4,4] _t100A = [_t0FFA, _t0FFF, _t1004, _t1009];
        tensor[4,4][4] _t100B = {_t0FCB, _t0FE0, _t0FF5, _t100A};
        tensor[4,4][4][4] _t100C = {_t0F0C, _t0F61, _t0FB6, _t100B};
        real _t100D = _t0E3A[1];
        int _t100E = prim $r2i01B7 (_t100D);
        tensor[4,4][4] _t100F = prim $sub01C0<tensor[4,4][4]; %4> (_t100C, _t100E);
        real _t1010 = _t0E3A[1];
        int _t1011 = prim $r2i01B7 (_t1010);
        int[2] _t1012 = func nextCell4048A (_t1011, _t0E36, _t0E35);
        int _t1013 = 1;
        int _t1014 = prim $sub01C0<int; %2> (_t1012, _t1013);
        tensor[4,4] _t1015 = prim $sub01C0<tensor[4,4]; %4> (_t100F, _t1014);
        string _t1016 = "\n";
        print (_t0EAD, _t0EAF, _t0EB0, _t0EB5, _t0EB6, _t0EB7, _t1015, _t1016);
        real _t1017 = _t0E3A[1];
        int _t1018 = prim $r2i01B7 (_t1017);
        int[2] _t1019 = func nextCell4048A (_t1018, _t0E36, _t0E35);
        int _t101A = 0;
        int _t101B = prim $sub01C0<int; %2> (_t1019, _t101A);
        real _t101C = 0.1e1;
        real _t101D = 0.e0;
        real _t101E = 0.e0;
        real _t101F = 0.e0;
        vec4 _t1020 = [_t101C, _t101D, _t101E, _t101F];
        real _t1021 = 0.e0;
        real _t1022 = 0.1e1;
        real _t1023 = 0.e0;
        real _t1024 = 0.e0;
        vec4 _t1025 = [_t1021, _t1022, _t1023, _t1024];
        real _t1026 = 0.e0;
        real _t1027 = 0.e0;
        real _t1028 = 0.1e1;
        real _t1029 = 0.e0;
        vec4 _t102A = [_t1026, _t1027, _t1028, _t1029];
        real _t102B = 0.971445146547e-16;
        real _t102C = 0.e0;
        real _t102D = 0.e0;
        real _t102E = 0.1e1;
        vec4 _t102F = [_t102B, _t102C, _t102D, _t102E];
        tensor[4,4] _t1030 = [_t1020, _t1025, _t102A, _t102F];
        real _t1031 = 0.57735026919e0;
        real _t1032 = 0.57735026919e0;
        real _t1033 = 0.57735026919e0;
        real _t1034 = -0.57735026919e0;
        vec4 _t1035 = [_t1031, _t1032, _t1033, _t1034];
        real _t1036 = -0.333333333333e0;
        real _t1037 = 0.666666666667e0;
        real _t1038 = -0.333333333333e0;
        real _t1039 = 0.333333333333e0;
        vec4 _t103A = [_t1036, _t1037, _t1038, _t1039];
        real _t103B = -0.333333333333e0;
        real _t103C = -0.333333333333e0;
        real _t103D = 0.666666666667e0;
        real _t103E = 0.333333333333e0;
        vec4 _t103F = [_t103B, _t103C, _t103D, _t103E];
        real _t1040 = 0.971445146547e-16;
        real _t1041 = 0.e0;
        real _t1042 = 0.e0;
        real _t1043 = 0.1e1;
        vec4 _t1044 = [_t1040, _t1041, _t1042, _t1043];
        tensor[4,4] _t1045 = [_t1035, _t103A, _t103F, _t1044];
        real _t1046 = -0.333333333333e0;
        real _t1047 = 0.666666666667e0;
        real _t1048 = -0.333333333333e0;
        real _t1049 = 0.333333333333e0;
        vec4 _t104A = [_t1046, _t1047, _t1048, _t1049];
        real _t104B = -0.57735026919e0;
        real _t104C = -0.57735026919e0;
        real _t104D = -0.57735026919e0;
        real _t104E = 0.57735026919e0;
        vec4 _t104F = [_t104B, _t104C, _t104D, _t104E];
        real _t1050 = -0.333333333333e0;
        real _t1051 = -0.333333333333e0;
        real _t1052 = 0.666666666667e0;
        real _t1053 = 0.333333333333e0;
        vec4 _t1054 = [_t1050, _t1051, _t1052, _t1053];
        real _t1055 = 0.971445146547e-16;
        real _t1056 = 0.e0;
        real _t1057 = 0.e0;
        real _t1058 = 0.1e1;
        vec4 _t1059 = [_t1055, _t1056, _t1057, _t1058];
        tensor[4,4] _t105A = [_t104A, _t104F, _t1054, _t1059];
        real _t105B = -0.333333333333e0;
        real _t105C = 0.666666666667e0;
        real _t105D = -0.333333333333e0;
        real _t105E = 0.333333333333e0;
        vec4 _t105F = [_t105B, _t105C, _t105D, _t105E];
        real _t1060 = -0.333333333333e0;
        real _t1061 = -0.333333333333e0;
        real _t1062 = 0.666666666667e0;
        real _t1063 = 0.333333333333e0;
        vec4 _t1064 = [_t1060, _t1061, _t1062, _t1063];
        real _t1065 = 0.57735026919e0;
        real _t1066 = 0.57735026919e0;
        real _t1067 = 0.57735026919e0;
        real _t1068 = -0.57735026919e0;
        vec4 _t1069 = [_t1065, _t1066, _t1067, _t1068];
        real _t106A = 0.971445146547e-16;
        real _t106B = 0.e0;
        real _t106C = 0.e0;
        real _t106D = 0.1e1;
        vec4 _t106E = [_t106A, _t106B, _t106C, _t106D];
        tensor[4,4] _t106F = [_t105F, _t1064, _t1069, _t106E];
        tensor[4,4][4] _t1070 = {_t1030, _t1045, _t105A, _t106F};
        real _t1071 = 0.57735026919e0;
        real _t1072 = -0.1e1;
        real _t1073 = -0.1e1;
        real _t1074 = 0.1e1;
        vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
        real _t1076 = 0.57735026919e0;
        real _t1077 = 0.1e1;
        real _t1078 = 0.e0;
        real _t1079 = 0.e0;
        vec4 _t107A = [_t1076, _t1077, _t1078, _t1079];
        real _t107B = 0.57735026919e0;
        real _t107C = 0.e0;
        real _t107D = 0.1e1;
        real _t107E = 0.e0;
        vec4 _t107F = [_t107B, _t107C, _t107D, _t107E];
        real _t1080 = 0.e0;
        real _t1081 = 0.e0;
        real _t1082 = 0.e0;
        real _t1083 = 0.1e1;
        vec4 _t1084 = [_t1080, _t1081, _t1082, _t1083];
        tensor[4,4] _t1085 = [_t1075, _t107A, _t107F, _t1084];
        real _t1086 = 0.1e1;
        real _t1087 = 0.e0;
        real _t1088 = 0.e0;
        real _t1089 = 0.e0;
        vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
        real _t108B = 0.e0;
        real _t108C = 0.1e1;
        real _t108D = 0.e0;
        real _t108E = 0.e0;
        vec4 _t108F = [_t108B, _t108C, _t108D, _t108E];
        real _t1090 = 0.e0;
        real _t1091 = 0.e0;
        real _t1092 = 0.1e1;
        real _t1093 = 0.e0;
        vec4 _t1094 = [_t1090, _t1091, _t1092, _t1093];
        real _t1095 = 0.e0;
        real _t1096 = 0.e0;
        real _t1097 = 0.e0;
        real _t1098 = 0.1e1;
        vec4 _t1099 = [_t1095, _t1096, _t1097, _t1098];
        tensor[4,4] _t109A = [_t108A, _t108F, _t1094, _t1099];
        real _t109B = 0.e0;
        real _t109C = 0.1e1;
        real _t109D = 0.e0;
        real _t109E = 0.e0;
        vec4 _t109F = [_t109B, _t109C, _t109D, _t109E];
        real _t10A0 = -0.1e1;
        real _t10A1 = 0.e0;
        real _t10A2 = 0.e0;
        real _t10A3 = 0.e0;
        vec4 _t10A4 = [_t10A0, _t10A1, _t10A2, _t10A3];
        real _t10A5 = 0.e0;
        real _t10A6 = 0.e0;
        real _t10A7 = 0.1e1;
        real _t10A8 = 0.e0;
        vec4 _t10A9 = [_t10A5, _t10A6, _t10A7, _t10A8];
        real _t10AA = 0.e0;
        real _t10AB = 0.e0;
        real _t10AC = 0.e0;
        real _t10AD = 0.1e1;
        vec4 _t10AE = [_t10AA, _t10AB, _t10AC, _t10AD];
        tensor[4,4] _t10AF = [_t109F, _t10A4, _t10A9, _t10AE];
        real _t10B0 = 0.e0;
        real _t10B1 = 0.1e1;
        real _t10B2 = 0.e0;
        real _t10B3 = 0.e0;
        vec4 _t10B4 = [_t10B0, _t10B1, _t10B2, _t10B3];
        real _t10B5 = 0.e0;
        real _t10B6 = 0.e0;
        real _t10B7 = 0.1e1;
        real _t10B8 = 0.e0;
        vec4 _t10B9 = [_t10B5, _t10B6, _t10B7, _t10B8];
        real _t10BA = 0.1e1;
        real _t10BB = 0.e0;
        real _t10BC = 0.e0;
        real _t10BD = 0.e0;
        vec4 _t10BE = [_t10BA, _t10BB, _t10BC, _t10BD];
        real _t10BF = 0.e0;
        real _t10C0 = 0.e0;
        real _t10C1 = 0.e0;
        real _t10C2 = 0.1e1;
        vec4 _t10C3 = [_t10BF, _t10C0, _t10C1, _t10C2];
        tensor[4,4] _t10C4 = [_t10B4, _t10B9, _t10BE, _t10C3];
        tensor[4,4][4] _t10C5 = {_t1085, _t109A, _t10AF, _t10C4};
        real _t10C6 = -0.1e1;
        real _t10C7 = -0.57735026919e0;
        real _t10C8 = -0.1e1;
        real _t10C9 = 0.1e1;
        vec4 _t10CA = [_t10C6, _t10C7, _t10C8, _t10C9];
        real _t10CB = 0.1e1;
        real _t10CC = -0.57735026919e0;
        real _t10CD = 0.e0;
        real _t10CE = 0.e0;
        vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
        real _t10D0 = 0.e0;
        real _t10D1 = -0.57735026919e0;
        real _t10D2 = 0.1e1;
        real _t10D3 = 0.e0;
        vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
        real _t10D5 = 0.e0;
        real _t10D6 = 0.e0;
        real _t10D7 = 0.e0;
        real _t10D8 = 0.1e1;
        vec4 _t10D9 = [_t10D5, _t10D6, _t10D7, _t10D8];
        tensor[4,4] _t10DA = [_t10CA, _t10CF, _t10D4, _t10D9];
        real _t10DB = 0.e0;
        real _t10DC = -0.1e1;
        real _t10DD = 0.e0;
        real _t10DE = 0.e0;
        vec4 _t10DF = [_t10DB, _t10DC, _t10DD, _t10DE];
        real _t10E0 = 0.1e1;
        real _t10E1 = 0.e0;
        real _t10E2 = 0.e0;
        real _t10E3 = 0.e0;
        vec4 _t10E4 = [_t10E0, _t10E1, _t10E2, _t10E3];
        real _t10E5 = 0.e0;
        real _t10E6 = 0.e0;
        real _t10E7 = 0.1e1;
        real _t10E8 = 0.e0;
        vec4 _t10E9 = [_t10E5, _t10E6, _t10E7, _t10E8];
        real _t10EA = 0.e0;
        real _t10EB = 0.e0;
        real _t10EC = 0.e0;
        real _t10ED = 0.1e1;
        vec4 _t10EE = [_t10EA, _t10EB, _t10EC, _t10ED];
        tensor[4,4] _t10EF = [_t10DF, _t10E4, _t10E9, _t10EE];
        real _t10F0 = 0.1e1;
        real _t10F1 = 0.e0;
        real _t10F2 = 0.e0;
        real _t10F3 = 0.e0;
        vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
        real _t10F5 = 0.e0;
        real _t10F6 = 0.1e1;
        real _t10F7 = 0.e0;
        real _t10F8 = 0.e0;
        vec4 _t10F9 = [_t10F5, _t10F6, _t10F7, _t10F8];
        real _t10FA = 0.e0;
        real _t10FB = 0.e0;
        real _t10FC = 0.1e1;
        real _t10FD = 0.e0;
        vec4 _t10FE = [_t10FA, _t10FB, _t10FC, _t10FD];
        real _t10FF = 0.e0;
        real _t1100 = 0.e0;
        real _t1101 = 0.e0;
        real _t1102 = 0.1e1;
        vec4 _t1103 = [_t10FF, _t1100, _t1101, _t1102];
        tensor[4,4] _t1104 = [_t10F4, _t10F9, _t10FE, _t1103];
        real _t1105 = 0.1e1;
        real _t1106 = 0.e0;
        real _t1107 = 0.e0;
        real _t1108 = 0.e0;
        vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
        real _t110A = 0.e0;
        real _t110B = 0.e0;
        real _t110C = 0.1e1;
        real _t110D = 0.e0;
        vec4 _t110E = [_t110A, _t110B, _t110C, _t110D];
        real _t110F = 0.e0;
        real _t1110 = -0.1e1;
        real _t1111 = 0.e0;
        real _t1112 = 0.e0;
        vec4 _t1113 = [_t110F, _t1110, _t1111, _t1112];
        real _t1114 = 0.e0;
        real _t1115 = 0.e0;
        real _t1116 = 0.e0;
        real _t1117 = 0.1e1;
        vec4 _t1118 = [_t1114, _t1115, _t1116, _t1117];
        tensor[4,4] _t1119 = [_t1109, _t110E, _t1113, _t1118];
        tensor[4,4][4] _t111A = {_t10DA, _t10EF, _t1104, _t1119};
        real _t111B = -0.1e1;
        real _t111C = -0.1e1;
        real _t111D = 0.57735026919e0;
        real _t111E = 0.1e1;
        vec4 _t111F = [_t111B, _t111C, _t111D, _t111E];
        real _t1120 = 0.1e1;
        real _t1121 = 0.e0;
        real _t1122 = 0.57735026919e0;
        real _t1123 = 0.e0;
        vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
        real _t1125 = 0.e0;
        real _t1126 = 0.1e1;
        real _t1127 = 0.57735026919e0;
        real _t1128 = 0.e0;
        vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
        real _t112A = 0.e0;
        real _t112B = 0.e0;
        real _t112C = 0.e0;
        real _t112D = 0.1e1;
        vec4 _t112E = [_t112A, _t112B, _t112C, _t112D];
        tensor[4,4] _t112F = [_t111F, _t1124, _t1129, _t112E];
        real _t1130 = 0.e0;
        real _t1131 = 0.e0;
        real _t1132 = 0.1e1;
        real _t1133 = 0.e0;
        vec4 _t1134 = [_t1130, _t1131, _t1132, _t1133];
        real _t1135 = 0.1e1;
        real _t1136 = 0.e0;
        real _t1137 = 0.e0;
        real _t1138 = 0.e0;
        vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
        real _t113A = 0.e0;
        real _t113B = 0.1e1;
        real _t113C = 0.e0;
        real _t113D = 0.e0;
        vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
        real _t113F = 0.e0;
        real _t1140 = 0.e0;
        real _t1141 = 0.e0;
        real _t1142 = 0.1e1;
        vec4 _t1143 = [_t113F, _t1140, _t1141, _t1142];
        tensor[4,4] _t1144 = [_t1134, _t1139, _t113E, _t1143];
        real _t1145 = 0.1e1;
        real _t1146 = 0.e0;
        real _t1147 = 0.e0;
        real _t1148 = 0.e0;
        vec4 _t1149 = [_t1145, _t1146, _t1147, _t1148];
        real _t114A = 0.e0;
        real _t114B = 0.e0;
        real _t114C = -0.1e1;
        real _t114D = 0.e0;
        vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
        real _t114F = 0.e0;
        real _t1150 = 0.1e1;
        real _t1151 = 0.e0;
        real _t1152 = 0.e0;
        vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
        real _t1154 = 0.e0;
        real _t1155 = 0.e0;
        real _t1156 = 0.e0;
        real _t1157 = 0.1e1;
        vec4 _t1158 = [_t1154, _t1155, _t1156, _t1157];
        tensor[4,4] _t1159 = [_t1149, _t114E, _t1153, _t1158];
        real _t115A = 0.1e1;
        real _t115B = 0.e0;
        real _t115C = 0.e0;
        real _t115D = 0.e0;
        vec4 _t115E = [_t115A, _t115B, _t115C, _t115D];
        real _t115F = 0.e0;
        real _t1160 = 0.1e1;
        real _t1161 = 0.e0;
        real _t1162 = 0.e0;
        vec4 _t1163 = [_t115F, _t1160, _t1161, _t1162];
        real _t1164 = 0.e0;
        real _t1165 = 0.e0;
        real _t1166 = 0.1e1;
        real _t1167 = 0.e0;
        vec4 _t1168 = [_t1164, _t1165, _t1166, _t1167];
        real _t1169 = 0.e0;
        real _t116A = 0.e0;
        real _t116B = 0.e0;
        real _t116C = 0.1e1;
        vec4 _t116D = [_t1169, _t116A, _t116B, _t116C];
        tensor[4,4] _t116E = [_t115E, _t1163, _t1168, _t116D];
        tensor[4,4][4] _t116F = {_t112F, _t1144, _t1159, _t116E};
        tensor[4,4][4][4] _t1170 = {_t1070, _t10C5, _t111A, _t116F};
        real _t1171 = _t0E3A[1];
        int _t1172 = prim $r2i01B7 (_t1171);
        tensor[4,4][4] _t1173 = prim $sub01C0<tensor[4,4][4]; %4> (_t1170, _t1172);
        real _t1174 = _t0E3A[1];
        int _t1175 = prim $r2i01B7 (_t1174);
        int[2] _t1176 = func nextCell4048A (_t1175, _t0E36, _t0E35);
        int _t1177 = 1;
        int _t1178 = prim $sub01C0<int; %2> (_t1176, _t1177);
        tensor[4,4] _t1179 = prim $sub01C0<tensor[4,4]; %4> (_t1173, _t1178);
        real _t117A = _t0E3A[0];
        vec3 _t117B = prim *0036<$[3]> (_t117A, deltaP0E00);
        vec3 _t117C = prim +0017<$[3]> (_t117B, _t0E37);
        real _t117D = _t117C[0];
        real _t117E = _t0E3A[0];
        vec3 _t117F = prim *0036<$[3]> (_t117E, deltaP0E00);
        vec3 _t1180 = prim +0017<$[3]> (_t117F, _t0E37);
        real _t1181 = _t1180[1];
        real _t1182 = _t0E3A[0];
        vec3 _t1183 = prim *0036<$[3]> (_t1182, deltaP0E00);
        vec3 _t1184 = prim +0017<$[3]> (_t1183, _t0E37);
        real _t1185 = _t1184[2];
        real _t1186 = 0.1e1;
        vec4 _t1187 = [_t117D, _t1181, _t1185, _t1186];
        vec4 _t1188 = prim •00CE<$[4,4]; $[4]; $[4]> (_t1179, _t1187);
        real _t1189 = _t1188[0];
        real _t118A = 0.1e1;
        real _t118B = 0.e0;
        real _t118C = 0.e0;
        real _t118D = 0.e0;
        vec4 _t118E = [_t118A, _t118B, _t118C, _t118D];
        real _t118F = 0.e0;
        real _t1190 = 0.1e1;
        real _t1191 = 0.e0;
        real _t1192 = 0.e0;
        vec4 _t1193 = [_t118F, _t1190, _t1191, _t1192];
        real _t1194 = 0.e0;
        real _t1195 = 0.e0;
        real _t1196 = 0.1e1;
        real _t1197 = 0.e0;
        vec4 _t1198 = [_t1194, _t1195, _t1196, _t1197];
        real _t1199 = 0.971445146547e-16;
        real _t119A = 0.e0;
        real _t119B = 0.e0;
        real _t119C = 0.1e1;
        vec4 _t119D = [_t1199, _t119A, _t119B, _t119C];
        tensor[4,4] _t119E = [_t118E, _t1193, _t1198, _t119D];
        real _t119F = 0.57735026919e0;
        real _t11A0 = 0.57735026919e0;
        real _t11A1 = 0.57735026919e0;
        real _t11A2 = -0.57735026919e0;
        vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
        real _t11A4 = -0.333333333333e0;
        real _t11A5 = 0.666666666667e0;
        real _t11A6 = -0.333333333333e0;
        real _t11A7 = 0.333333333333e0;
        vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
        real _t11A9 = -0.333333333333e0;
        real _t11AA = -0.333333333333e0;
        real _t11AB = 0.666666666667e0;
        real _t11AC = 0.333333333333e0;
        vec4 _t11AD = [_t11A9, _t11AA, _t11AB, _t11AC];
        real _t11AE = 0.971445146547e-16;
        real _t11AF = 0.e0;
        real _t11B0 = 0.e0;
        real _t11B1 = 0.1e1;
        vec4 _t11B2 = [_t11AE, _t11AF, _t11B0, _t11B1];
        tensor[4,4] _t11B3 = [_t11A3, _t11A8, _t11AD, _t11B2];
        real _t11B4 = -0.333333333333e0;
        real _t11B5 = 0.666666666667e0;
        real _t11B6 = -0.333333333333e0;
        real _t11B7 = 0.333333333333e0;
        vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
        real _t11B9 = -0.57735026919e0;
        real _t11BA = -0.57735026919e0;
        real _t11BB = -0.57735026919e0;
        real _t11BC = 0.57735026919e0;
        vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
        real _t11BE = -0.333333333333e0;
        real _t11BF = -0.333333333333e0;
        real _t11C0 = 0.666666666667e0;
        real _t11C1 = 0.333333333333e0;
        vec4 _t11C2 = [_t11BE, _t11BF, _t11C0, _t11C1];
        real _t11C3 = 0.971445146547e-16;
        real _t11C4 = 0.e0;
        real _t11C5 = 0.e0;
        real _t11C6 = 0.1e1;
        vec4 _t11C7 = [_t11C3, _t11C4, _t11C5, _t11C6];
        tensor[4,4] _t11C8 = [_t11B8, _t11BD, _t11C2, _t11C7];
        real _t11C9 = -0.333333333333e0;
        real _t11CA = 0.666666666667e0;
        real _t11CB = -0.333333333333e0;
        real _t11CC = 0.333333333333e0;
        vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
        real _t11CE = -0.333333333333e0;
        real _t11CF = -0.333333333333e0;
        real _t11D0 = 0.666666666667e0;
        real _t11D1 = 0.333333333333e0;
        vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
        real _t11D3 = 0.57735026919e0;
        real _t11D4 = 0.57735026919e0;
        real _t11D5 = 0.57735026919e0;
        real _t11D6 = -0.57735026919e0;
        vec4 _t11D7 = [_t11D3, _t11D4, _t11D5, _t11D6];
        real _t11D8 = 0.971445146547e-16;
        real _t11D9 = 0.e0;
        real _t11DA = 0.e0;
        real _t11DB = 0.1e1;
        vec4 _t11DC = [_t11D8, _t11D9, _t11DA, _t11DB];
        tensor[4,4] _t11DD = [_t11CD, _t11D2, _t11D7, _t11DC];
        tensor[4,4][4] _t11DE = {_t119E, _t11B3, _t11C8, _t11DD};
        real _t11DF = 0.57735026919e0;
        real _t11E0 = -0.1e1;
        real _t11E1 = -0.1e1;
        real _t11E2 = 0.1e1;
        vec4 _t11E3 = [_t11DF, _t11E0, _t11E1, _t11E2];
        real _t11E4 = 0.57735026919e0;
        real _t11E5 = 0.1e1;
        real _t11E6 = 0.e0;
        real _t11E7 = 0.e0;
        vec4 _t11E8 = [_t11E4, _t11E5, _t11E6, _t11E7];
        real _t11E9 = 0.57735026919e0;
        real _t11EA = 0.e0;
        real _t11EB = 0.1e1;
        real _t11EC = 0.e0;
        vec4 _t11ED = [_t11E9, _t11EA, _t11EB, _t11EC];
        real _t11EE = 0.e0;
        real _t11EF = 0.e0;
        real _t11F0 = 0.e0;
        real _t11F1 = 0.1e1;
        vec4 _t11F2 = [_t11EE, _t11EF, _t11F0, _t11F1];
        tensor[4,4] _t11F3 = [_t11E3, _t11E8, _t11ED, _t11F2];
        real _t11F4 = 0.1e1;
        real _t11F5 = 0.e0;
        real _t11F6 = 0.e0;
        real _t11F7 = 0.e0;
        vec4 _t11F8 = [_t11F4, _t11F5, _t11F6, _t11F7];
        real _t11F9 = 0.e0;
        real _t11FA = 0.1e1;
        real _t11FB = 0.e0;
        real _t11FC = 0.e0;
        vec4 _t11FD = [_t11F9, _t11FA, _t11FB, _t11FC];
        real _t11FE = 0.e0;
        real _t11FF = 0.e0;
        real _t1200 = 0.1e1;
        real _t1201 = 0.e0;
        vec4 _t1202 = [_t11FE, _t11FF, _t1200, _t1201];
        real _t1203 = 0.e0;
        real _t1204 = 0.e0;
        real _t1205 = 0.e0;
        real _t1206 = 0.1e1;
        vec4 _t1207 = [_t1203, _t1204, _t1205, _t1206];
        tensor[4,4] _t1208 = [_t11F8, _t11FD, _t1202, _t1207];
        real _t1209 = 0.e0;
        real _t120A = 0.1e1;
        real _t120B = 0.e0;
        real _t120C = 0.e0;
        vec4 _t120D = [_t1209, _t120A, _t120B, _t120C];
        real _t120E = -0.1e1;
        real _t120F = 0.e0;
        real _t1210 = 0.e0;
        real _t1211 = 0.e0;
        vec4 _t1212 = [_t120E, _t120F, _t1210, _t1211];
        real _t1213 = 0.e0;
        real _t1214 = 0.e0;
        real _t1215 = 0.1e1;
        real _t1216 = 0.e0;
        vec4 _t1217 = [_t1213, _t1214, _t1215, _t1216];
        real _t1218 = 0.e0;
        real _t1219 = 0.e0;
        real _t121A = 0.e0;
        real _t121B = 0.1e1;
        vec4 _t121C = [_t1218, _t1219, _t121A, _t121B];
        tensor[4,4] _t121D = [_t120D, _t1212, _t1217, _t121C];
        real _t121E = 0.e0;
        real _t121F = 0.1e1;
        real _t1220 = 0.e0;
        real _t1221 = 0.e0;
        vec4 _t1222 = [_t121E, _t121F, _t1220, _t1221];
        real _t1223 = 0.e0;
        real _t1224 = 0.e0;
        real _t1225 = 0.1e1;
        real _t1226 = 0.e0;
        vec4 _t1227 = [_t1223, _t1224, _t1225, _t1226];
        real _t1228 = 0.1e1;
        real _t1229 = 0.e0;
        real _t122A = 0.e0;
        real _t122B = 0.e0;
        vec4 _t122C = [_t1228, _t1229, _t122A, _t122B];
        real _t122D = 0.e0;
        real _t122E = 0.e0;
        real _t122F = 0.e0;
        real _t1230 = 0.1e1;
        vec4 _t1231 = [_t122D, _t122E, _t122F, _t1230];
        tensor[4,4] _t1232 = [_t1222, _t1227, _t122C, _t1231];
        tensor[4,4][4] _t1233 = {_t11F3, _t1208, _t121D, _t1232};
        real _t1234 = -0.1e1;
        real _t1235 = -0.57735026919e0;
        real _t1236 = -0.1e1;
        real _t1237 = 0.1e1;
        vec4 _t1238 = [_t1234, _t1235, _t1236, _t1237];
        real _t1239 = 0.1e1;
        real _t123A = -0.57735026919e0;
        real _t123B = 0.e0;
        real _t123C = 0.e0;
        vec4 _t123D = [_t1239, _t123A, _t123B, _t123C];
        real _t123E = 0.e0;
        real _t123F = -0.57735026919e0;
        real _t1240 = 0.1e1;
        real _t1241 = 0.e0;
        vec4 _t1242 = [_t123E, _t123F, _t1240, _t1241];
        real _t1243 = 0.e0;
        real _t1244 = 0.e0;
        real _t1245 = 0.e0;
        real _t1246 = 0.1e1;
        vec4 _t1247 = [_t1243, _t1244, _t1245, _t1246];
        tensor[4,4] _t1248 = [_t1238, _t123D, _t1242, _t1247];
        real _t1249 = 0.e0;
        real _t124A = -0.1e1;
        real _t124B = 0.e0;
        real _t124C = 0.e0;
        vec4 _t124D = [_t1249, _t124A, _t124B, _t124C];
        real _t124E = 0.1e1;
        real _t124F = 0.e0;
        real _t1250 = 0.e0;
        real _t1251 = 0.e0;
        vec4 _t1252 = [_t124E, _t124F, _t1250, _t1251];
        real _t1253 = 0.e0;
        real _t1254 = 0.e0;
        real _t1255 = 0.1e1;
        real _t1256 = 0.e0;
        vec4 _t1257 = [_t1253, _t1254, _t1255, _t1256];
        real _t1258 = 0.e0;
        real _t1259 = 0.e0;
        real _t125A = 0.e0;
        real _t125B = 0.1e1;
        vec4 _t125C = [_t1258, _t1259, _t125A, _t125B];
        tensor[4,4] _t125D = [_t124D, _t1252, _t1257, _t125C];
        real _t125E = 0.1e1;
        real _t125F = 0.e0;
        real _t1260 = 0.e0;
        real _t1261 = 0.e0;
        vec4 _t1262 = [_t125E, _t125F, _t1260, _t1261];
        real _t1263 = 0.e0;
        real _t1264 = 0.1e1;
        real _t1265 = 0.e0;
        real _t1266 = 0.e0;
        vec4 _t1267 = [_t1263, _t1264, _t1265, _t1266];
        real _t1268 = 0.e0;
        real _t1269 = 0.e0;
        real _t126A = 0.1e1;
        real _t126B = 0.e0;
        vec4 _t126C = [_t1268, _t1269, _t126A, _t126B];
        real _t126D = 0.e0;
        real _t126E = 0.e0;
        real _t126F = 0.e0;
        real _t1270 = 0.1e1;
        vec4 _t1271 = [_t126D, _t126E, _t126F, _t1270];
        tensor[4,4] _t1272 = [_t1262, _t1267, _t126C, _t1271];
        real _t1273 = 0.1e1;
        real _t1274 = 0.e0;
        real _t1275 = 0.e0;
        real _t1276 = 0.e0;
        vec4 _t1277 = [_t1273, _t1274, _t1275, _t1276];
        real _t1278 = 0.e0;
        real _t1279 = 0.e0;
        real _t127A = 0.1e1;
        real _t127B = 0.e0;
        vec4 _t127C = [_t1278, _t1279, _t127A, _t127B];
        real _t127D = 0.e0;
        real _t127E = -0.1e1;
        real _t127F = 0.e0;
        real _t1280 = 0.e0;
        vec4 _t1281 = [_t127D, _t127E, _t127F, _t1280];
        real _t1282 = 0.e0;
        real _t1283 = 0.e0;
        real _t1284 = 0.e0;
        real _t1285 = 0.1e1;
        vec4 _t1286 = [_t1282, _t1283, _t1284, _t1285];
        tensor[4,4] _t1287 = [_t1277, _t127C, _t1281, _t1286];
        tensor[4,4][4] _t1288 = {_t1248, _t125D, _t1272, _t1287};
        real _t1289 = -0.1e1;
        real _t128A = -0.1e1;
        real _t128B = 0.57735026919e0;
        real _t128C = 0.1e1;
        vec4 _t128D = [_t1289, _t128A, _t128B, _t128C];
        real _t128E = 0.1e1;
        real _t128F = 0.e0;
        real _t1290 = 0.57735026919e0;
        real _t1291 = 0.e0;
        vec4 _t1292 = [_t128E, _t128F, _t1290, _t1291];
        real _t1293 = 0.e0;
        real _t1294 = 0.1e1;
        real _t1295 = 0.57735026919e0;
        real _t1296 = 0.e0;
        vec4 _t1297 = [_t1293, _t1294, _t1295, _t1296];
        real _t1298 = 0.e0;
        real _t1299 = 0.e0;
        real _t129A = 0.e0;
        real _t129B = 0.1e1;
        vec4 _t129C = [_t1298, _t1299, _t129A, _t129B];
        tensor[4,4] _t129D = [_t128D, _t1292, _t1297, _t129C];
        real _t129E = 0.e0;
        real _t129F = 0.e0;
        real _t12A0 = 0.1e1;
        real _t12A1 = 0.e0;
        vec4 _t12A2 = [_t129E, _t129F, _t12A0, _t12A1];
        real _t12A3 = 0.1e1;
        real _t12A4 = 0.e0;
        real _t12A5 = 0.e0;
        real _t12A6 = 0.e0;
        vec4 _t12A7 = [_t12A3, _t12A4, _t12A5, _t12A6];
        real _t12A8 = 0.e0;
        real _t12A9 = 0.1e1;
        real _t12AA = 0.e0;
        real _t12AB = 0.e0;
        vec4 _t12AC = [_t12A8, _t12A9, _t12AA, _t12AB];
        real _t12AD = 0.e0;
        real _t12AE = 0.e0;
        real _t12AF = 0.e0;
        real _t12B0 = 0.1e1;
        vec4 _t12B1 = [_t12AD, _t12AE, _t12AF, _t12B0];
        tensor[4,4] _t12B2 = [_t12A2, _t12A7, _t12AC, _t12B1];
        real _t12B3 = 0.1e1;
        real _t12B4 = 0.e0;
        real _t12B5 = 0.e0;
        real _t12B6 = 0.e0;
        vec4 _t12B7 = [_t12B3, _t12B4, _t12B5, _t12B6];
        real _t12B8 = 0.e0;
        real _t12B9 = 0.e0;
        real _t12BA = -0.1e1;
        real _t12BB = 0.e0;
        vec4 _t12BC = [_t12B8, _t12B9, _t12BA, _t12BB];
        real _t12BD = 0.e0;
        real _t12BE = 0.1e1;
        real _t12BF = 0.e0;
        real _t12C0 = 0.e0;
        vec4 _t12C1 = [_t12BD, _t12BE, _t12BF, _t12C0];
        real _t12C2 = 0.e0;
        real _t12C3 = 0.e0;
        real _t12C4 = 0.e0;
        real _t12C5 = 0.1e1;
        vec4 _t12C6 = [_t12C2, _t12C3, _t12C4, _t12C5];
        tensor[4,4] _t12C7 = [_t12B7, _t12BC, _t12C1, _t12C6];
        real _t12C8 = 0.1e1;
        real _t12C9 = 0.e0;
        real _t12CA = 0.e0;
        real _t12CB = 0.e0;
        vec4 _t12CC = [_t12C8, _t12C9, _t12CA, _t12CB];
        real _t12CD = 0.e0;
        real _t12CE = 0.1e1;
        real _t12CF = 0.e0;
        real _t12D0 = 0.e0;
        vec4 _t12D1 = [_t12CD, _t12CE, _t12CF, _t12D0];
        real _t12D2 = 0.e0;
        real _t12D3 = 0.e0;
        real _t12D4 = 0.1e1;
        real _t12D5 = 0.e0;
        vec4 _t12D6 = [_t12D2, _t12D3, _t12D4, _t12D5];
        real _t12D7 = 0.e0;
        real _t12D8 = 0.e0;
        real _t12D9 = 0.e0;
        real _t12DA = 0.1e1;
        vec4 _t12DB = [_t12D7, _t12D8, _t12D9, _t12DA];
        tensor[4,4] _t12DC = [_t12CC, _t12D1, _t12D6, _t12DB];
        tensor[4,4][4] _t12DD = {_t129D, _t12B2, _t12C7, _t12DC};
        tensor[4,4][4][4] _t12DE = {_t11DE, _t1233, _t1288, _t12DD};
        real _t12DF = _t0E3A[1];
        int _t12E0 = prim $r2i01B7 (_t12DF);
        tensor[4,4][4] _t12E1 = prim $sub01C0<tensor[4,4][4]; %4> (_t12DE, _t12E0);
        real _t12E2 = _t0E3A[1];
        int _t12E3 = prim $r2i01B7 (_t12E2);
        int[2] _t12E4 = func nextCell4048A (_t12E3, _t0E36, _t0E35);
        int _t12E5 = 1;
        int _t12E6 = prim $sub01C0<int; %2> (_t12E4, _t12E5);
        tensor[4,4] _t12E7 = prim $sub01C0<tensor[4,4]; %4> (_t12E1, _t12E6);
        real _t12E8 = _t0E3A[0];
        vec3 _t12E9 = prim *0036<$[3]> (_t12E8, deltaP0E00);
        vec3 _t12EA = prim +0017<$[3]> (_t12E9, _t0E37);
        real _t12EB = _t12EA[0];
        real _t12EC = _t0E3A[0];
        vec3 _t12ED = prim *0036<$[3]> (_t12EC, deltaP0E00);
        vec3 _t12EE = prim +0017<$[3]> (_t12ED, _t0E37);
        real _t12EF = _t12EE[1];
        real _t12F0 = _t0E3A[0];
        vec3 _t12F1 = prim *0036<$[3]> (_t12F0, deltaP0E00);
        vec3 _t12F2 = prim +0017<$[3]> (_t12F1, _t0E37);
        real _t12F3 = _t12F2[2];
        real _t12F4 = 0.1e1;
        vec4 _t12F5 = [_t12EB, _t12EF, _t12F3, _t12F4];
        vec4 _t12F6 = prim •00CE<$[4,4]; $[4]; $[4]> (_t12E7, _t12F5);
        real _t12F7 = _t12F6[1];
        real _t12F8 = 0.1e1;
        real _t12F9 = 0.e0;
        real _t12FA = 0.e0;
        real _t12FB = 0.e0;
        vec4 _t12FC = [_t12F8, _t12F9, _t12FA, _t12FB];
        real _t12FD = 0.e0;
        real _t12FE = 0.1e1;
        real _t12FF = 0.e0;
        real _t1300 = 0.e0;
        vec4 _t1301 = [_t12FD, _t12FE, _t12FF, _t1300];
        real _t1302 = 0.e0;
        real _t1303 = 0.e0;
        real _t1304 = 0.1e1;
        real _t1305 = 0.e0;
        vec4 _t1306 = [_t1302, _t1303, _t1304, _t1305];
        real _t1307 = 0.971445146547e-16;
        real _t1308 = 0.e0;
        real _t1309 = 0.e0;
        real _t130A = 0.1e1;
        vec4 _t130B = [_t1307, _t1308, _t1309, _t130A];
        tensor[4,4] _t130C = [_t12FC, _t1301, _t1306, _t130B];
        real _t130D = 0.57735026919e0;
        real _t130E = 0.57735026919e0;
        real _t130F = 0.57735026919e0;
        real _t1310 = -0.57735026919e0;
        vec4 _t1311 = [_t130D, _t130E, _t130F, _t1310];
        real _t1312 = -0.333333333333e0;
        real _t1313 = 0.666666666667e0;
        real _t1314 = -0.333333333333e0;
        real _t1315 = 0.333333333333e0;
        vec4 _t1316 = [_t1312, _t1313, _t1314, _t1315];
        real _t1317 = -0.333333333333e0;
        real _t1318 = -0.333333333333e0;
        real _t1319 = 0.666666666667e0;
        real _t131A = 0.333333333333e0;
        vec4 _t131B = [_t1317, _t1318, _t1319, _t131A];
        real _t131C = 0.971445146547e-16;
        real _t131D = 0.e0;
        real _t131E = 0.e0;
        real _t131F = 0.1e1;
        vec4 _t1320 = [_t131C, _t131D, _t131E, _t131F];
        tensor[4,4] _t1321 = [_t1311, _t1316, _t131B, _t1320];
        real _t1322 = -0.333333333333e0;
        real _t1323 = 0.666666666667e0;
        real _t1324 = -0.333333333333e0;
        real _t1325 = 0.333333333333e0;
        vec4 _t1326 = [_t1322, _t1323, _t1324, _t1325];
        real _t1327 = -0.57735026919e0;
        real _t1328 = -0.57735026919e0;
        real _t1329 = -0.57735026919e0;
        real _t132A = 0.57735026919e0;
        vec4 _t132B = [_t1327, _t1328, _t1329, _t132A];
        real _t132C = -0.333333333333e0;
        real _t132D = -0.333333333333e0;
        real _t132E = 0.666666666667e0;
        real _t132F = 0.333333333333e0;
        vec4 _t1330 = [_t132C, _t132D, _t132E, _t132F];
        real _t1331 = 0.971445146547e-16;
        real _t1332 = 0.e0;
        real _t1333 = 0.e0;
        real _t1334 = 0.1e1;
        vec4 _t1335 = [_t1331, _t1332, _t1333, _t1334];
        tensor[4,4] _t1336 = [_t1326, _t132B, _t1330, _t1335];
        real _t1337 = -0.333333333333e0;
        real _t1338 = 0.666666666667e0;
        real _t1339 = -0.333333333333e0;
        real _t133A = 0.333333333333e0;
        vec4 _t133B = [_t1337, _t1338, _t1339, _t133A];
        real _t133C = -0.333333333333e0;
        real _t133D = -0.333333333333e0;
        real _t133E = 0.666666666667e0;
        real _t133F = 0.333333333333e0;
        vec4 _t1340 = [_t133C, _t133D, _t133E, _t133F];
        real _t1341 = 0.57735026919e0;
        real _t1342 = 0.57735026919e0;
        real _t1343 = 0.57735026919e0;
        real _t1344 = -0.57735026919e0;
        vec4 _t1345 = [_t1341, _t1342, _t1343, _t1344];
        real _t1346 = 0.971445146547e-16;
        real _t1347 = 0.e0;
        real _t1348 = 0.e0;
        real _t1349 = 0.1e1;
        vec4 _t134A = [_t1346, _t1347, _t1348, _t1349];
        tensor[4,4] _t134B = [_t133B, _t1340, _t1345, _t134A];
        tensor[4,4][4] _t134C = {_t130C, _t1321, _t1336, _t134B};
        real _t134D = 0.57735026919e0;
        real _t134E = -0.1e1;
        real _t134F = -0.1e1;
        real _t1350 = 0.1e1;
        vec4 _t1351 = [_t134D, _t134E, _t134F, _t1350];
        real _t1352 = 0.57735026919e0;
        real _t1353 = 0.1e1;
        real _t1354 = 0.e0;
        real _t1355 = 0.e0;
        vec4 _t1356 = [_t1352, _t1353, _t1354, _t1355];
        real _t1357 = 0.57735026919e0;
        real _t1358 = 0.e0;
        real _t1359 = 0.1e1;
        real _t135A = 0.e0;
        vec4 _t135B = [_t1357, _t1358, _t1359, _t135A];
        real _t135C = 0.e0;
        real _t135D = 0.e0;
        real _t135E = 0.e0;
        real _t135F = 0.1e1;
        vec4 _t1360 = [_t135C, _t135D, _t135E, _t135F];
        tensor[4,4] _t1361 = [_t1351, _t1356, _t135B, _t1360];
        real _t1362 = 0.1e1;
        real _t1363 = 0.e0;
        real _t1364 = 0.e0;
        real _t1365 = 0.e0;
        vec4 _t1366 = [_t1362, _t1363, _t1364, _t1365];
        real _t1367 = 0.e0;
        real _t1368 = 0.1e1;
        real _t1369 = 0.e0;
        real _t136A = 0.e0;
        vec4 _t136B = [_t1367, _t1368, _t1369, _t136A];
        real _t136C = 0.e0;
        real _t136D = 0.e0;
        real _t136E = 0.1e1;
        real _t136F = 0.e0;
        vec4 _t1370 = [_t136C, _t136D, _t136E, _t136F];
        real _t1371 = 0.e0;
        real _t1372 = 0.e0;
        real _t1373 = 0.e0;
        real _t1374 = 0.1e1;
        vec4 _t1375 = [_t1371, _t1372, _t1373, _t1374];
        tensor[4,4] _t1376 = [_t1366, _t136B, _t1370, _t1375];
        real _t1377 = 0.e0;
        real _t1378 = 0.1e1;
        real _t1379 = 0.e0;
        real _t137A = 0.e0;
        vec4 _t137B = [_t1377, _t1378, _t1379, _t137A];
        real _t137C = -0.1e1;
        real _t137D = 0.e0;
        real _t137E = 0.e0;
        real _t137F = 0.e0;
        vec4 _t1380 = [_t137C, _t137D, _t137E, _t137F];
        real _t1381 = 0.e0;
        real _t1382 = 0.e0;
        real _t1383 = 0.1e1;
        real _t1384 = 0.e0;
        vec4 _t1385 = [_t1381, _t1382, _t1383, _t1384];
        real _t1386 = 0.e0;
        real _t1387 = 0.e0;
        real _t1388 = 0.e0;
        real _t1389 = 0.1e1;
        vec4 _t138A = [_t1386, _t1387, _t1388, _t1389];
        tensor[4,4] _t138B = [_t137B, _t1380, _t1385, _t138A];
        real _t138C = 0.e0;
        real _t138D = 0.1e1;
        real _t138E = 0.e0;
        real _t138F = 0.e0;
        vec4 _t1390 = [_t138C, _t138D, _t138E, _t138F];
        real _t1391 = 0.e0;
        real _t1392 = 0.e0;
        real _t1393 = 0.1e1;
        real _t1394 = 0.e0;
        vec4 _t1395 = [_t1391, _t1392, _t1393, _t1394];
        real _t1396 = 0.1e1;
        real _t1397 = 0.e0;
        real _t1398 = 0.e0;
        real _t1399 = 0.e0;
        vec4 _t139A = [_t1396, _t1397, _t1398, _t1399];
        real _t139B = 0.e0;
        real _t139C = 0.e0;
        real _t139D = 0.e0;
        real _t139E = 0.1e1;
        vec4 _t139F = [_t139B, _t139C, _t139D, _t139E];
        tensor[4,4] _t13A0 = [_t1390, _t1395, _t139A, _t139F];
        tensor[4,4][4] _t13A1 = {_t1361, _t1376, _t138B, _t13A0};
        real _t13A2 = -0.1e1;
        real _t13A3 = -0.57735026919e0;
        real _t13A4 = -0.1e1;
        real _t13A5 = 0.1e1;
        vec4 _t13A6 = [_t13A2, _t13A3, _t13A4, _t13A5];
        real _t13A7 = 0.1e1;
        real _t13A8 = -0.57735026919e0;
        real _t13A9 = 0.e0;
        real _t13AA = 0.e0;
        vec4 _t13AB = [_t13A7, _t13A8, _t13A9, _t13AA];
        real _t13AC = 0.e0;
        real _t13AD = -0.57735026919e0;
        real _t13AE = 0.1e1;
        real _t13AF = 0.e0;
        vec4 _t13B0 = [_t13AC, _t13AD, _t13AE, _t13AF];
        real _t13B1 = 0.e0;
        real _t13B2 = 0.e0;
        real _t13B3 = 0.e0;
        real _t13B4 = 0.1e1;
        vec4 _t13B5 = [_t13B1, _t13B2, _t13B3, _t13B4];
        tensor[4,4] _t13B6 = [_t13A6, _t13AB, _t13B0, _t13B5];
        real _t13B7 = 0.e0;
        real _t13B8 = -0.1e1;
        real _t13B9 = 0.e0;
        real _t13BA = 0.e0;
        vec4 _t13BB = [_t13B7, _t13B8, _t13B9, _t13BA];
        real _t13BC = 0.1e1;
        real _t13BD = 0.e0;
        real _t13BE = 0.e0;
        real _t13BF = 0.e0;
        vec4 _t13C0 = [_t13BC, _t13BD, _t13BE, _t13BF];
        real _t13C1 = 0.e0;
        real _t13C2 = 0.e0;
        real _t13C3 = 0.1e1;
        real _t13C4 = 0.e0;
        vec4 _t13C5 = [_t13C1, _t13C2, _t13C3, _t13C4];
        real _t13C6 = 0.e0;
        real _t13C7 = 0.e0;
        real _t13C8 = 0.e0;
        real _t13C9 = 0.1e1;
        vec4 _t13CA = [_t13C6, _t13C7, _t13C8, _t13C9];
        tensor[4,4] _t13CB = [_t13BB, _t13C0, _t13C5, _t13CA];
        real _t13CC = 0.1e1;
        real _t13CD = 0.e0;
        real _t13CE = 0.e0;
        real _t13CF = 0.e0;
        vec4 _t13D0 = [_t13CC, _t13CD, _t13CE, _t13CF];
        real _t13D1 = 0.e0;
        real _t13D2 = 0.1e1;
        real _t13D3 = 0.e0;
        real _t13D4 = 0.e0;
        vec4 _t13D5 = [_t13D1, _t13D2, _t13D3, _t13D4];
        real _t13D6 = 0.e0;
        real _t13D7 = 0.e0;
        real _t13D8 = 0.1e1;
        real _t13D9 = 0.e0;
        vec4 _t13DA = [_t13D6, _t13D7, _t13D8, _t13D9];
        real _t13DB = 0.e0;
        real _t13DC = 0.e0;
        real _t13DD = 0.e0;
        real _t13DE = 0.1e1;
        vec4 _t13DF = [_t13DB, _t13DC, _t13DD, _t13DE];
        tensor[4,4] _t13E0 = [_t13D0, _t13D5, _t13DA, _t13DF];
        real _t13E1 = 0.1e1;
        real _t13E2 = 0.e0;
        real _t13E3 = 0.e0;
        real _t13E4 = 0.e0;
        vec4 _t13E5 = [_t13E1, _t13E2, _t13E3, _t13E4];
        real _t13E6 = 0.e0;
        real _t13E7 = 0.e0;
        real _t13E8 = 0.1e1;
        real _t13E9 = 0.e0;
        vec4 _t13EA = [_t13E6, _t13E7, _t13E8, _t13E9];
        real _t13EB = 0.e0;
        real _t13EC = -0.1e1;
        real _t13ED = 0.e0;
        real _t13EE = 0.e0;
        vec4 _t13EF = [_t13EB, _t13EC, _t13ED, _t13EE];
        real _t13F0 = 0.e0;
        real _t13F1 = 0.e0;
        real _t13F2 = 0.e0;
        real _t13F3 = 0.1e1;
        vec4 _t13F4 = [_t13F0, _t13F1, _t13F2, _t13F3];
        tensor[4,4] _t13F5 = [_t13E5, _t13EA, _t13EF, _t13F4];
        tensor[4,4][4] _t13F6 = {_t13B6, _t13CB, _t13E0, _t13F5};
        real _t13F7 = -0.1e1;
        real _t13F8 = -0.1e1;
        real _t13F9 = 0.57735026919e0;
        real _t13FA = 0.1e1;
        vec4 _t13FB = [_t13F7, _t13F8, _t13F9, _t13FA];
        real _t13FC = 0.1e1;
        real _t13FD = 0.e0;
        real _t13FE = 0.57735026919e0;
        real _t13FF = 0.e0;
        vec4 _t1400 = [_t13FC, _t13FD, _t13FE, _t13FF];
        real _t1401 = 0.e0;
        real _t1402 = 0.1e1;
        real _t1403 = 0.57735026919e0;
        real _t1404 = 0.e0;
        vec4 _t1405 = [_t1401, _t1402, _t1403, _t1404];
        real _t1406 = 0.e0;
        real _t1407 = 0.e0;
        real _t1408 = 0.e0;
        real _t1409 = 0.1e1;
        vec4 _t140A = [_t1406, _t1407, _t1408, _t1409];
        tensor[4,4] _t140B = [_t13FB, _t1400, _t1405, _t140A];
        real _t140C = 0.e0;
        real _t140D = 0.e0;
        real _t140E = 0.1e1;
        real _t140F = 0.e0;
        vec4 _t1410 = [_t140C, _t140D, _t140E, _t140F];
        real _t1411 = 0.1e1;
        real _t1412 = 0.e0;
        real _t1413 = 0.e0;
        real _t1414 = 0.e0;
        vec4 _t1415 = [_t1411, _t1412, _t1413, _t1414];
        real _t1416 = 0.e0;
        real _t1417 = 0.1e1;
        real _t1418 = 0.e0;
        real _t1419 = 0.e0;
        vec4 _t141A = [_t1416, _t1417, _t1418, _t1419];
        real _t141B = 0.e0;
        real _t141C = 0.e0;
        real _t141D = 0.e0;
        real _t141E = 0.1e1;
        vec4 _t141F = [_t141B, _t141C, _t141D, _t141E];
        tensor[4,4] _t1420 = [_t1410, _t1415, _t141A, _t141F];
        real _t1421 = 0.1e1;
        real _t1422 = 0.e0;
        real _t1423 = 0.e0;
        real _t1424 = 0.e0;
        vec4 _t1425 = [_t1421, _t1422, _t1423, _t1424];
        real _t1426 = 0.e0;
        real _t1427 = 0.e0;
        real _t1428 = -0.1e1;
        real _t1429 = 0.e0;
        vec4 _t142A = [_t1426, _t1427, _t1428, _t1429];
        real _t142B = 0.e0;
        real _t142C = 0.1e1;
        real _t142D = 0.e0;
        real _t142E = 0.e0;
        vec4 _t142F = [_t142B, _t142C, _t142D, _t142E];
        real _t1430 = 0.e0;
        real _t1431 = 0.e0;
        real _t1432 = 0.e0;
        real _t1433 = 0.1e1;
        vec4 _t1434 = [_t1430, _t1431, _t1432, _t1433];
        tensor[4,4] _t1435 = [_t1425, _t142A, _t142F, _t1434];
        real _t1436 = 0.1e1;
        real _t1437 = 0.e0;
        real _t1438 = 0.e0;
        real _t1439 = 0.e0;
        vec4 _t143A = [_t1436, _t1437, _t1438, _t1439];
        real _t143B = 0.e0;
        real _t143C = 0.1e1;
        real _t143D = 0.e0;
        real _t143E = 0.e0;
        vec4 _t143F = [_t143B, _t143C, _t143D, _t143E];
        real _t1440 = 0.e0;
        real _t1441 = 0.e0;
        real _t1442 = 0.1e1;
        real _t1443 = 0.e0;
        vec4 _t1444 = [_t1440, _t1441, _t1442, _t1443];
        real _t1445 = 0.e0;
        real _t1446 = 0.e0;
        real _t1447 = 0.e0;
        real _t1448 = 0.1e1;
        vec4 _t1449 = [_t1445, _t1446, _t1447, _t1448];
        tensor[4,4] _t144A = [_t143A, _t143F, _t1444, _t1449];
        tensor[4,4][4] _t144B = {_t140B, _t1420, _t1435, _t144A};
        tensor[4,4][4][4] _t144C = {_t134C, _t13A1, _t13F6, _t144B};
        real _t144D = _t0E3A[1];
        int _t144E = prim $r2i01B7 (_t144D);
        tensor[4,4][4] _t144F = prim $sub01C0<tensor[4,4][4]; %4> (_t144C, _t144E);
        real _t1450 = _t0E3A[1];
        int _t1451 = prim $r2i01B7 (_t1450);
        int[2] _t1452 = func nextCell4048A (_t1451, _t0E36, _t0E35);
        int _t1453 = 1;
        int _t1454 = prim $sub01C0<int; %2> (_t1452, _t1453);
        tensor[4,4] _t1455 = prim $sub01C0<tensor[4,4]; %4> (_t144F, _t1454);
        real _t1456 = _t0E3A[0];
        vec3 _t1457 = prim *0036<$[3]> (_t1456, deltaP0E00);
        vec3 _t1458 = prim +0017<$[3]> (_t1457, _t0E37);
        real _t1459 = _t1458[0];
        real _t145A = _t0E3A[0];
        vec3 _t145B = prim *0036<$[3]> (_t145A, deltaP0E00);
        vec3 _t145C = prim +0017<$[3]> (_t145B, _t0E37);
        real _t145D = _t145C[1];
        real _t145E = _t0E3A[0];
        vec3 _t145F = prim *0036<$[3]> (_t145E, deltaP0E00);
        vec3 _t1460 = prim +0017<$[3]> (_t145F, _t0E37);
        real _t1461 = _t1460[2];
        real _t1462 = 0.1e1;
        vec4 _t1463 = [_t1459, _t145D, _t1461, _t1462];
        vec4 _t1464 = prim •00CE<$[4,4]; $[4]; $[4]> (_t1455, _t1463);
        real _t1465 = _t1464[2];
        vec3 _t1466 = [_t1189, _t12F7, _t1465];
        real _t1467 = _t0E3A[1];
        int _t1468 = prim $r2i01B7 (_t1467);
        int[2] _t1469 = func nextCell4048A (_t1468, _t0E36, _t0E35);
        int _t146A = 1;
        int _t146B = prim $sub01C0<int; %2> (_t1469, _t146A);
        Femdata: MeshPos _t146C = extractFemItemN((_t0E35, _t101B, _t1466, _t146B),RefBuild(Mesh),);
        nmp0E3B = _t146C;
      } else {
        real _t146D = _t0E3A[0];
        vec3 _t146E = prim *0036<$[3]> (_t146D, deltaP0E00);
        vec3 _t146F = prim +0017<$[3]> (_t146E, _t0E37);
        Femdata: MeshPos _t1470 = extractFemItemN((_t0E35, _t146F),InvalidBuildBoundary(MeshPos),);
        nmp0E3B = _t1470;
      }
      bool _t0E3C;
      bool _t0E3D = extractFemItem(Valid(MeshPos), bool, nmp0E3B);
      bool _t0E3E = prim !00BC (_t0E3D);
      if _t0E3E {
        _t0E3C = true;
      } else {
        bool _t0E3F;
        real _t0E40 = 0.e0;
        bool _t0E41 = prim <007A (eTime0E33, _t0E40);
        if _t0E41 {
          _t0E3F = true;
        } else {
          bool _t0E42;
          real _t0E43 = 0.1e1;
          bool _t0E44 = prim >0080 (eTime0E33, _t0E43);
          if _t0E44 {
            _t0E42 = true;
          } else {
            _t0E42 = prim <007A (time0DEA, timeEps03B0);
          }
          _t0E3F = _t0E42;
        }
        _t0E3C = _t0E3F;
      }
      if _t0E3C {
        return nmp0E3B;
      }
      cmp0DEB = nmp0E3B;
    }
  }
  string _t0E46 = "Took stupid way out!\n";
  print (_t0E46);
  vec3 _t0E47;
  vec3 _t0EA0 = extractFemItem(RefPos(MeshPos), vec3, x0DE6);
  int _t0EA1 = extractFemItem(CellIndex(MeshPos), int, x0DE6);
  Femdata: Mesh _t0EA2 = extractFem(x0DE6, Mesh);
  vec3 _t0EA3;
  field(3)[3] _t0EA4 = femField(_t0EA2,_t0EA1,field(3)[3],Transform,);
  vec3 _t0EA5 = prim @00A5<#∞; %3; $[3]> (_t0EA4, _t0EA0);
  _t0EA3 = _t0EA5;
  _t0E47 = _t0EA3;
  vec3 _t0E48 = prim +0017<$[3]> (_t0E47, dPos0DE7);
  cmp0DEB = func findPos03BE (meshData039F, _t0E48);
  return cmp0DEB;
}
globalInit {
  int _t03A3 = 0;
  int _t03A1 = 1;
  int _t03A5 = extractFemItem(NumCell(Mesh), int, meshData039F);
  int _t03A4 = prim -0024 (_t03A5, _t03A1);
  int[] _t03A8 = prim $range01C3 (_t03A3, _t03A4);
  Femdata: MeshCell[] _t03A9 = {};
  foreach _t03A7 in _t03A8 {
    Femdata: MeshCell _t03AA = loadFem(MeshCell, meshData039F, _t03A7);
    _t03A9 = prim @0010<Femdata: MeshCell> (_t03A9, _t03AA);
  }
  space03AB = loadFem(Space, 0space03AB_intermedateGlobal03AC, meshData039F);
  data03AD = loadFem(FemFunc, 0data03AD_intermedateGlobal03AE, space03AB);
  Femdata: Space _t0DD8 = extractFem(data03AD, Space);
  Femdata: Space _t0DD9 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDA = extractFem(_t0DD9, Mesh);
  field(3)[3] _t0DDB = femField(data03AD,_t0DDA,field(3)[3],refField,findPos03BE );
  Femdata: Space _t0DDC = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDD = extractFem(_t0DDC, Mesh);
  Femdata: Space _t0DDE = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDF = extractFem(_t0DDE, Mesh);
  Femdata: Space _t0DE0 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DE1 = extractFem(_t0DE0, Mesh);
  field(3)[3] _t0DE2 = femField(_t0DDD,_t0DE1,field(3)[3],InvTransform,findPos03BE );
  F0DE3 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t0DDB, _t0DE2);
}
strand gg (vec3 startPos0E5C) {
  output vec3[] stream0E5D;
  output vec3[] newStream0E60;
  int step0E63;
  Femdata: MeshPos cPos0E64;
  vec3 altCPos0E65;
  {
    vec3[1] _t0E5E = {startPos0E5C};
    vec3[] _t0E5F = (vec3[])_t0E5E;
    stream0E5D = _t0E5F;
    vec3[1] _t0E61 = {startPos0E5C};
    vec3[] _t0E62 = (vec3[])_t0E61;
    newStream0E60 = _t0E62;
    step0E63 = 0;
    cPos0E64 = func findPos03BE (meshData039F, startPos0E5C);
    altCPos0E65 = startPos0E5C;
  }
  update
  {
    bool _t0E66;
    bool _t0E67 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E68 = prim !00BC (_t0E67);
    if _t0E68 {
      _t0E66 = true;
    } else {
      bool _t0E69;
      Femdata: MeshPos _t0E6A = func findPos03BE (meshData039F, altCPos0E65);
      bool _t0E6B = extractFemItem(Valid(MeshPos), bool, _t0E6A);
      bool _t0E6C = prim !00BC (_t0E6B);
      if _t0E6C {
        _t0E69 = true;
      } else {
        _t0E69 = prim ==0082 (step0E63, stepMax03B3);
      }
      _t0E66 = _t0E69;
    }
    if _t0E66 {
      stabilize;
    }
    vec3 _t0E6D;
    vec3 _t16D5 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
    int _t16D6 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
    Femdata: Mesh _t16D7 = extractFem(cPos0E64, Mesh);
    vec3 _t16D8;
    field(3)[3] _t16D9 = femField(_t16D7,_t16D6,field(3)[3],Transform,);
    vec3 _t16DA = prim @00A5<#∞; %3; $[3]> (_t16D9, _t16D5);
    _t16D8 = _t16DA;
    _t0E6D = _t16D8;
    vec3 _t0E6E = prim -0026<$[3]> (_t0E6D, altCPos0E65);
    real _t0E6F = prim |()|00B5<$[3]> (_t0E6E);
    real _t0E70 = 0.1e-5;
    bool _t0E71 = prim >0080 (_t0E6F, _t0E70);
    if _t0E71 {
      string _t0E72 = "Error in tracing: At step:";
      string _t0E73 = " with particle:";
      string _t0E74 = "\n";
      print (_t0E72, step0E63, _t0E73, startPos0E5C, _t0E74);
    } else {
      string _t0E75 = "fine in cell:";
      Femdata: Mesh _t0E76 = extractFem(cPos0E64, Mesh);
      int _t0E77 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell _t0E78 = loadFem(MeshCell, _t0E76, _t0E77);
      string _t0E79 = "\n";
      print (_t0E75, _t0E78, _t0E79);
    }
    real _t0E7A = 0.5e0;
    real _t0E7B = prim *0034 (_t0E7A, stepSize03B2);
    vec3 _t0E7C = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    vec3 _t0E7D = prim *0036<$[3]> (_t0E7B, _t0E7C);
    vec3 _t0E7E = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    real _t0E7F = prim |()|00B5<$[3]> (_t0E7E);
    vec3 altUp10E80 = prim /0057<$[3]> (_t0E7D, _t0E7F);
    real _t0E81 = 0.5e0;
    real _t0E82 = prim *0034 (_t0E81, stepSize03B2);
    vec3 _t0E83;
    bool _t16BE = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    if _t16BE {
      Femdata: Mesh _t16BF = extractFem(cPos0E64, Mesh);
      int _t16C0 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell c16C1 = loadFem(MeshCell, _t16BF, _t16C0);
      vec3 ref16C2 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
      Femdata: FuncCell _t16C3;
      int _t16C4 = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16C5 = loadFem(FuncCell, data03AD, _t16C4);
      _t16C3 = _t16C5;
      Femdata: FemFunc _t16C6 = extractFem(_t16C3, FemFunc);
      Femdata: FuncCell _t16C7;
      int _t16C8 = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16C9 = loadFem(FuncCell, data03AD, _t16C8);
      _t16C7 = _t16C9;
      Femdata: FemFunc _t16CA = extractFem(_t16C7, FemFunc);
      Femdata: Space _t16CB = extractFem(_t16CA, Space);
      Femdata: FuncCell _t16CC;
      int _t16CD = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16CE = loadFem(FuncCell, data03AD, _t16CD);
      _t16CC = _t16CE;
      int _t16CF = extractFemItem(CellIndex(FuncCell), int, _t16CC);
      field(3)[3] _t16D0 = femField(_t16C6,_t16CF,field(3)[3],refField,);
      vec3 val16D1 = prim @00A5<#∞; %3; $[3]> (_t16D0, ref16C2);
      real _t16D2 = prim |()|00B5<$[3]> (val16D1);
      vec3 _t16D3 = prim /0057<$[3]> (val16D1, _t16D2);
      _t0E83 = _t16D3;
    } else {
      vec3 _t16D4 = prim $zero01BB<$[3]> ();
      _t0E83 = _t16D4;
    }
    vec3 up10E84 = prim *0036<$[3]> (_t0E82, _t0E83);
    Femdata: MeshPos intermed0E85 = func posMove0DE5 (cPos0E64, up10E84);
    vec3 altIntermed0E86 = prim +0017<$[3]> (altCPos0E65, altUp10E80);
    bool _t0E87;
    bool _t0E88 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    bool _t0E89 = prim !00BC (_t0E88);
    if _t0E89 {
      _t0E87 = true;
    } else {
      Femdata: MeshPos _t0E8A = func findPos03BE (meshData039F, altIntermed0E86);
      bool _t0E8B = extractFemItem(Valid(MeshPos), bool, _t0E8A);
      _t0E87 = prim !00BC (_t0E8B);
    }
    if _t0E87 {
      stabilize;
    }
    vec3 _t0E8C = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    vec3 _t0E8D = prim *0036<$[3]> (stepSize03B2, _t0E8C);
    vec3 _t0E8E = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    real _t0E8F = prim |()|00B5<$[3]> (_t0E8E);
    vec3 altUp20E90 = prim /0057<$[3]> (_t0E8D, _t0E8F);
    vec3 _t0E91;
    bool _t16A7 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    if _t16A7 {
      Femdata: Mesh _t16A8 = extractFem(intermed0E85, Mesh);
      int _t16A9 = extractFemItem(CellIndex(MeshPos), int, intermed0E85);
      Femdata: MeshCell c16AA = loadFem(MeshCell, _t16A8, _t16A9);
      vec3 ref16AB = extractFemItem(RefPos(MeshPos), vec3, intermed0E85);
      Femdata: FuncCell _t16AC;
      int _t16AD = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16AE = loadFem(FuncCell, data03AD, _t16AD);
      _t16AC = _t16AE;
      Femdata: FemFunc _t16AF = extractFem(_t16AC, FemFunc);
      Femdata: FuncCell _t16B0;
      int _t16B1 = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16B2 = loadFem(FuncCell, data03AD, _t16B1);
      _t16B0 = _t16B2;
      Femdata: FemFunc _t16B3 = extractFem(_t16B0, FemFunc);
      Femdata: Space _t16B4 = extractFem(_t16B3, Space);
      Femdata: FuncCell _t16B5;
      int _t16B6 = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16B7 = loadFem(FuncCell, data03AD, _t16B6);
      _t16B5 = _t16B7;
      int _t16B8 = extractFemItem(CellIndex(FuncCell), int, _t16B5);
      field(3)[3] _t16B9 = femField(_t16AF,_t16B8,field(3)[3],refField,);
      vec3 val16BA = prim @00A5<#∞; %3; $[3]> (_t16B9, ref16AB);
      real _t16BB = prim |()|00B5<$[3]> (val16BA);
      vec3 _t16BC = prim /0057<$[3]> (val16BA, _t16BB);
      _t0E91 = _t16BC;
    } else {
      vec3 _t16BD = prim $zero01BB<$[3]> ();
      _t0E91 = _t16BD;
    }
    vec3 up20E92 = prim *0036<$[3]> (stepSize03B2, _t0E91);
    cPos0E64 = func posMove0DE5 (cPos0E64, up20E92);
    altCPos0E65 = prim +0017<$[3]> (altCPos0E65, altUp20E90);
    bool _t0E93 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E94 = prim !00BC (_t0E93);
    if _t0E94 {
      print (stream0E5D);
      stabilize;
    }
    vec3 _t0E95;
    vec3 _t16A1 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
    int _t16A2 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
    Femdata: Mesh _t16A3 = extractFem(cPos0E64, Mesh);
    vec3 _t16A4;
    field(3)[3] _t16A5 = femField(_t16A3,_t16A2,field(3)[3],Transform,);
    vec3 _t16A6 = prim @00A5<#∞; %3; $[3]> (_t16A5, _t16A1);
    _t16A4 = _t16A6;
    _t0E95 = _t16A4;
    vec3[1] _t0E96 = {_t0E95};
    vec3[] _t0E97 = (vec3[])_t0E96;
    stream0E5D = prim @0014<vec3> (stream0E5D, _t0E97);
    vec3[1] _t0E98 = {altCPos0E65};
    vec3[] _t0E99 = (vec3[])_t0E98;
    newStream0E60 = prim @0014<vec3> (newStream0E60, _t0E99);
    int _t0E9A = 1;
    step0E63 = prim +0015 (step0E63, _t0E9A);
  }
}
collection {
  foreach x0E9B in startPoints03B1 {
    new gg (x0E9B);
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData039F;
input FemData:Space 0space03AB_intermedateGlobal03AC;
input FemData:FemFunc 0data03AD_intermedateGlobal03AE;
input int timeSteps03AF = <default>;
input real timeEps03B0 = <default>;
input vec3[] startPoints03B1;
input real stepSize03B2 = <default>;
input int stepMax03B3 = <default>;
constants {
  timeSteps03AF = 32;
  timeEps03B0 = 0.1e-6;
  stepSize03B2 = 0.1e-1;
  stepMax03B3 = 100;
}
global Femdata: Space space03AB;
global Femdata: FemFunc data03AD;
global field(3)[3] F0DE3;
function Femdata: MeshPos#6 findPos03BE (Femdata: Mesh mesh03BF, vec3 pos03C0)
{
  real _t03C1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn03C4 = [_t03C1, _t03C2, _t03C3];
  newtonInt03C5 = 0;
  cellInt03C6 = extractFemItem(StartCell(Mesh), int, mesh03BF);
  int _t03C7 = extractFemItem(NumCell(Mesh), int, mesh03BF);
  int _t03C8 = 1;
  numCell03C9 = prim -0024 (_t03C7, _t03C8);
  yayCells03CA = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh03BF, pos03C0 : vec3);
  foreach cellItter03CE in yayCells03CA {
    real _t03CB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn03C4 = [_t03CB, _t03CC, _t03CD];
    cellInt03C6 = cellItter03CE;
    field(3)[3] _t03CF = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
    field(3)[3,3] _t03D0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t03CF);
    field(3)[3,3] _t03D1 = prim inv015E<#∞; %3> (_t03D0);
    real _t03D2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t03D5 = [_t03D2, _t03D3, _t03D4];
    A03D6 = prim @00A5<#∞; %3; $[3,3]> (_t03D1, _t03D5);
    int _t03D7 = 0;
    int _t03D8 = 16;
    int[] _t03D9 = prim $range01C3 (_t03D7, _t03D8);
    foreach newtonItter0408 in _t03D9 {
      field(3)[3] _t03DA = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
      field(3)[3] _t03DB = prim -002E<#∞; %3; $[3]> (_t03DA, pos03C0);
      field(3)[3] _t03DC = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A03D6, _t03DB);
      delta03DD = prim @00A5<#∞; %3; $[3]> (_t03DC, xn03C4);
      xn03C4 = prim -0026<$[3]> (xn03C4, delta03DD);
      real _t03DE = 0.1e-7;
      real _t03DF = 0.1e-7;
      real _t03E0 = prim *0034 (_t03DE, _t03DF);
      real _t03E1 = prim •00CE<$[3]; $[3]; $[]> (delta03DD, delta03DD);
      bool _t03E2 = prim >=007E (_t03E0, _t03E1);
      if _t03E2 {
        real _t03E3 = 0.1e1;
        real _t03E4 = 0.1e-8;
        real _t03E5 = prim +0017<$[]> (_t03E3, _t03E4);
        real _t03E6 = 0.1e1;
        real _t03E7 = 0.1e1;
        real _t03E8 = 0.1e1;
        vec3 _t03E9 = [_t03E6, _t03E7, _t03E8];
        real _t03EA = prim •00CE<$[3]; $[3]; $[]> (_t03E9, xn03C4);
        bool _t03EB = prim >0080 (_t03E5, _t03EA);
        real _t03EC = 0.1e-8;
        real _t03ED = 0.1e-8;
        real _t03EE = 0.1e-8;
        vec3 _t03EF = [_t03EC, _t03ED, _t03EE];
        vec3 _t03F0 = prim +0017<$[3]> (_t03EF, xn03C4);
        real _t03F1 = _t03F0[0];
        real _t03F2 = -0.e0;
        bool _t03F3 = prim >0080 (_t03F1, _t03F2);
        real _t03F4 = 0.1e-8;
        real _t03F5 = 0.1e-8;
        real _t03F6 = 0.1e-8;
        vec3 _t03F7 = [_t03F4, _t03F5, _t03F6];
        vec3 _t03F8 = prim +0017<$[3]> (_t03F7, xn03C4);
        real _t03F9 = _t03F8[1];
        real _t03FA = -0.e0;
        bool _t03FB = prim >0080 (_t03F9, _t03FA);
        real _t03FC = 0.1e-8;
        real _t03FD = 0.1e-8;
        real _t03FE = 0.1e-8;
        vec3 _t03FF = [_t03FC, _t03FD, _t03FE];
        vec3 _t0400 = prim +0017<$[3]> (_t03FF, xn03C4);
        real _t0401 = _t0400[2];
        real _t0402 = -0.e0;
        bool _t0403 = prim >0080 (_t0401, _t0402);
        bool _t0404 = prim $and01C4 (_t03FB, _t0403);
        bool _t0405 = prim $and01C4 (_t03F3, _t0404);
        bool _t0406 = prim $and01C4 (_t03EB, _t0405);
        if _t0406 {
          Femdata: MeshPos _t0407 = extractFemItemN((mesh03BF, cellInt03C6, xn03C4, pos03C0),AllBuild(MeshPos),);
          return _t0407;
        }
      }
    }
  }
  string _t0409 = "Bad end 2";
  string _t040A = "\n";
  print (_t0409, _t040A);
  Femdata: MeshPos _t040B = extractFemItemN((mesh03BF),InvalidBuild(MeshPos),);
  return _t040B;
}
function int[2]#8 nextCell4048A (int faceIdx0A53, int cell0A54, Femdata: Mesh mesh0A55)
{
  int _t0A56 = 8;
  int _t0A57 = prim *0033 (cell0A54, _t0A56);
  int _t0A58 = 2;
  int _t0A59 = prim *0033 (faceIdx0A53, _t0A58);
  int _t0A5A = prim +0015 (_t0A57, _t0A59);
  int[2] _t0A5B = extractFemItemN((mesh0A55, _t0A5A),CellFaceCell(Mesh),);
  return _t0A5B;
}
function Femdata: MeshPos#2 posMove0DE5 (Femdata: MeshPos x0DE6, vec3 dPos0DE7)
{
  bool _t0DE8 = extractFemItem(Valid(MeshPos), bool, x0DE6);
  bool _t0DE9 = prim !00BC (_t0DE8);
  if _t0DE9 {
    return x0DE6;
  }
  real time0DEA = 0.1e1;
  Femdata: MeshPos cmp0DEB = x0DE6;
  int _t0DEC = 0;
  int[] _t0DED = prim $range01C3 (_t0DEC, timeSteps03AF);
  foreach i0E45 in _t0DED {
    Femdata: Mesh _t0DEE = extractFem(cmp0DEB, Mesh);
    int _t0DEF = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF0 = loadFem(MeshCell, _t0DEE, _t0DEF);
    Femdata: Mesh _t0DF1 = extractFem(_t0DF0, Mesh);
    Femdata: Mesh _t0DF2 = extractFem(cmp0DEB, Mesh);
    int _t0DF3 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF4 = loadFem(MeshCell, _t0DF2, _t0DF3);
    Femdata: Mesh _t0DF5 = extractFem(_t0DF4, Mesh);
    Femdata: Mesh _t0DF6 = extractFem(cmp0DEB, Mesh);
    int _t0DF7 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF8 = loadFem(MeshCell, _t0DF6, _t0DF7);
    int _t0DF9 = extractFemItem(CellIndex(MeshCell), int, _t0DF8);
    field(3)[3] _t0DFA = femField(_t0DF1,_t0DF9,field(3)[3],Transform,);
    field(3)[3,3] _t0DFB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0DFA);
    vec3 _t0DFC = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    tensor[3,3] _t0DFD = prim @00A5<#∞; %3; $[3,3]> (_t0DFB, _t0DFC);
    tensor[3,3] _t0DFE = prim inv0155 (_t0DFD);
    tensor[3,3] _t0DFF = prim *0036<$[3,3]> (time0DEA, _t0DFE);
    vec3 deltaP0E00 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0DFF, dPos0DE7);
    vec3 _t0E01 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    vec3 newPos0E02 = prim +0017<$[3]> (_t0E01, deltaP0E00);
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.1e-8;
    real _t0E05 = prim +0017<$[]> (_t0E03, _t0E04);
    real _t0E06 = 0.1e1;
    real _t0E07 = 0.1e1;
    real _t0E08 = 0.1e1;
    vec3 _t0E09 = [_t0E06, _t0E07, _t0E08];
    real _t0E0A = prim •00CE<$[3]; $[3]; $[]> (_t0E09, newPos0E02);
    bool _t0E0B = prim >0080 (_t0E05, _t0E0A);
    real _t0E0C = 0.1e-8;
    real _t0E0D = 0.1e-8;
    real _t0E0E = 0.1e-8;
    vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
    vec3 _t0E10 = prim +0017<$[3]> (_t0E0F, newPos0E02);
    real _t0E11 = _t0E10[0];
    real _t0E12 = -0.e0;
    bool _t0E13 = prim >0080 (_t0E11, _t0E12);
    real _t0E14 = 0.1e-8;
    real _t0E15 = 0.1e-8;
    real _t0E16 = 0.1e-8;
    vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
    vec3 _t0E18 = prim +0017<$[3]> (_t0E17, newPos0E02);
    real _t0E19 = _t0E18[1];
    real _t0E1A = -0.e0;
    bool _t0E1B = prim >0080 (_t0E19, _t0E1A);
    real _t0E1C = 0.1e-8;
    real _t0E1D = 0.1e-8;
    real _t0E1E = 0.1e-8;
    vec3 _t0E1F = [_t0E1C, _t0E1D, _t0E1E];
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, newPos0E02);
    real _t0E21 = _t0E20[2];
    real _t0E22 = -0.e0;
    bool _t0E23 = prim >0080 (_t0E21, _t0E22);
    bool _t0E24 = prim $and01C4 (_t0E1B, _t0E23);
    bool _t0E25 = prim $and01C4 (_t0E13, _t0E24);
    bool _t0E26 = prim $and01C4 (_t0E0B, _t0E25);
    if _t0E26 {
      Femdata: Mesh _t0E27 = extractFem(cmp0DEB, Mesh);
      int _t0E28 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E29 = loadFem(MeshCell, _t0E27, _t0E28);
      Femdata: Mesh _t0E2A = extractFem(_t0E29, Mesh);
      Femdata: Mesh _t0E2B = extractFem(cmp0DEB, Mesh);
      int _t0E2C = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E2D = loadFem(MeshCell, _t0E2B, _t0E2C);
      int _t0E2E = extractFemItem(CellIndex(MeshCell), int, _t0E2D);
      Femdata: MeshPos nmp0E2F = extractFemItemN((_t0E2A, _t0E2E, newPos0E02),RefBuild(Mesh),);
      return nmp0E2F;
    } else {
      vec3 _t0E30 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
      int _t0E31 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E32;
      real time1585 = +inf;
      int face1586 = -1;
      real faceTime1587 = -inf;
      real _t1588 = 0.57735026919e0;
      real _t1589 = 0.57735026919e0;
      real _t158A = 0.57735026919e0;
      real _t158B = 0.57735026919e0;
      vec3 _t158C = [_t1589, _t158A, _t158B];
      real _t158D = prim •00CE<$[3]; $[3]; $[]> (_t158C, _t0E30);
      real _t158E = prim -0026<$[]> (_t1588, _t158D);
      real _t158F = 0.57735026919e0;
      real _t1590 = 0.57735026919e0;
      real _t1591 = 0.57735026919e0;
      vec3 _t1592 = [_t158F, _t1590, _t1591];
      real _t1593 = prim •00CE<$[3]; $[3]; $[]> (_t1592, deltaP0E00);
      real _t1594 = prim /0055 (_t158E, _t1593);
      real _t1595 = -0.1e-15;
      bool _t1596 = prim >=007E (_t1594, _t1595);
      real _t1597 = 0.57735026919e0;
      real _t1598 = 0.57735026919e0;
      real _t1599 = 0.57735026919e0;
      real _t159A = 0.57735026919e0;
      vec3 _t159B = [_t1598, _t1599, _t159A];
      real _t159C = prim •00CE<$[3]; $[3]; $[]> (_t159B, _t0E30);
      real _t159D = prim -0026<$[]> (_t1597, _t159C);
      real _t159E = 0.57735026919e0;
      real _t159F = 0.57735026919e0;
      real _t15A0 = 0.57735026919e0;
      vec3 _t15A1 = [_t159E, _t159F, _t15A0];
      real _t15A2 = prim •00CE<$[3]; $[3]; $[]> (_t15A1, deltaP0E00);
      real _t15A3 = prim /0055 (_t159D, _t15A2);
      bool _t15A4 = prim >0080 (time1585, _t15A3);
      real _t15A5 = 0.57735026919e0;
      real _t15A6 = 0.57735026919e0;
      real _t15A7 = 0.57735026919e0;
      vec3 _t15A8 = [_t15A5, _t15A6, _t15A7];
      real _t15A9 = prim •00CE<$[3]; $[3]; $[]> (_t15A8, deltaP0E00);
      real _t15AA = prim |()|00B5<$[]> (_t15A9);
      real _t15AB = 0.1e-20;
      bool _t15AC = prim >=007E (_t15AA, _t15AB);
      bool _t15AD = prim $and01C4 (_t15A4, _t15AC);
      bool _t15AE = prim $and01C4 (_t1596, _t15AD);
      if _t15AE {
        int _t15AF = 0;
        bool _t15B0 = prim !=0086 (_t0E31, _t15AF);
        if _t15B0 {
          real _t15B1 = 0.57735026919e0;
          real _t15B2 = 0.57735026919e0;
          real _t15B3 = 0.57735026919e0;
          real _t15B4 = 0.57735026919e0;
          vec3 _t15B5 = [_t15B2, _t15B3, _t15B4];
          real _t15B6 = prim •00CE<$[3]; $[3]; $[]> (_t15B5, _t0E30);
          real _t15B7 = prim -0026<$[]> (_t15B1, _t15B6);
          real _t15B8 = 0.57735026919e0;
          real _t15B9 = 0.57735026919e0;
          real _t15BA = 0.57735026919e0;
          vec3 _t15BB = [_t15B8, _t15B9, _t15BA];
          real _t15BC = prim •00CE<$[3]; $[3]; $[]> (_t15BB, deltaP0E00);
          time1585 = prim /0055 (_t15B7, _t15BC);
          face1586 = 0;
        } else {
          real _t15BD = 0.57735026919e0;
          real _t15BE = 0.57735026919e0;
          real _t15BF = 0.57735026919e0;
          real _t15C0 = 0.57735026919e0;
          vec3 _t15C1 = [_t15BE, _t15BF, _t15C0];
          real _t15C2 = prim •00CE<$[3]; $[3]; $[]> (_t15C1, _t0E30);
          real _t15C3 = prim -0026<$[]> (_t15BD, _t15C2);
          real _t15C4 = 0.57735026919e0;
          real _t15C5 = 0.57735026919e0;
          real _t15C6 = 0.57735026919e0;
          vec3 _t15C7 = [_t15C4, _t15C5, _t15C6];
          real _t15C8 = prim •00CE<$[3]; $[3]; $[]> (_t15C7, deltaP0E00);
          faceTime1587 = prim /0055 (_t15C3, _t15C8);
        }
      }
      real _t15C9 = 0.e0;
      real _t15CA = 0.1e1;
      real _t15CB = 0.e0;
      real _t15CC = 0.e0;
      vec3 _t15CD = [_t15CA, _t15CB, _t15CC];
      real _t15CE = prim •00CE<$[3]; $[3]; $[]> (_t15CD, _t0E30);
      real _t15CF = prim -0026<$[]> (_t15C9, _t15CE);
      real _t15D0 = 0.1e1;
      real _t15D1 = 0.e0;
      real _t15D2 = 0.e0;
      vec3 _t15D3 = [_t15D0, _t15D1, _t15D2];
      real _t15D4 = prim •00CE<$[3]; $[3]; $[]> (_t15D3, deltaP0E00);
      real _t15D5 = prim /0055 (_t15CF, _t15D4);
      real _t15D6 = -0.1e-15;
      bool _t15D7 = prim >=007E (_t15D5, _t15D6);
      real _t15D8 = 0.e0;
      real _t15D9 = 0.1e1;
      real _t15DA = 0.e0;
      real _t15DB = 0.e0;
      vec3 _t15DC = [_t15D9, _t15DA, _t15DB];
      real _t15DD = prim •00CE<$[3]; $[3]; $[]> (_t15DC, _t0E30);
      real _t15DE = prim -0026<$[]> (_t15D8, _t15DD);
      real _t15DF = 0.1e1;
      real _t15E0 = 0.e0;
      real _t15E1 = 0.e0;
      vec3 _t15E2 = [_t15DF, _t15E0, _t15E1];
      real _t15E3 = prim •00CE<$[3]; $[3]; $[]> (_t15E2, deltaP0E00);
      real _t15E4 = prim /0055 (_t15DE, _t15E3);
      bool _t15E5 = prim >0080 (time1585, _t15E4);
      real _t15E6 = 0.1e1;
      real _t15E7 = 0.e0;
      real _t15E8 = 0.e0;
      vec3 _t15E9 = [_t15E6, _t15E7, _t15E8];
      real _t15EA = prim •00CE<$[3]; $[3]; $[]> (_t15E9, deltaP0E00);
      real _t15EB = prim |()|00B5<$[]> (_t15EA);
      real _t15EC = 0.1e-20;
      bool _t15ED = prim >=007E (_t15EB, _t15EC);
      bool _t15EE = prim $and01C4 (_t15E5, _t15ED);
      bool _t15EF = prim $and01C4 (_t15D7, _t15EE);
      if _t15EF {
        int _t15F0 = 1;
        bool _t15F1 = prim !=0086 (_t0E31, _t15F0);
        if _t15F1 {
          real _t15F2 = 0.e0;
          real _t15F3 = 0.1e1;
          real _t15F4 = 0.e0;
          real _t15F5 = 0.e0;
          vec3 _t15F6 = [_t15F3, _t15F4, _t15F5];
          real _t15F7 = prim •00CE<$[3]; $[3]; $[]> (_t15F6, _t0E30);
          real _t15F8 = prim -0026<$[]> (_t15F2, _t15F7);
          real _t15F9 = 0.1e1;
          real _t15FA = 0.e0;
          real _t15FB = 0.e0;
          vec3 _t15FC = [_t15F9, _t15FA, _t15FB];
          real _t15FD = prim •00CE<$[3]; $[3]; $[]> (_t15FC, deltaP0E00);
          time1585 = prim /0055 (_t15F8, _t15FD);
          face1586 = 1;
        } else {
          real _t15FE = 0.e0;
          real _t15FF = 0.1e1;
          real _t1600 = 0.e0;
          real _t1601 = 0.e0;
          vec3 _t1602 = [_t15FF, _t1600, _t1601];
          real _t1603 = prim •00CE<$[3]; $[3]; $[]> (_t1602, _t0E30);
          real _t1604 = prim -0026<$[]> (_t15FE, _t1603);
          real _t1605 = 0.1e1;
          real _t1606 = 0.e0;
          real _t1607 = 0.e0;
          vec3 _t1608 = [_t1605, _t1606, _t1607];
          real _t1609 = prim •00CE<$[3]; $[3]; $[]> (_t1608, deltaP0E00);
          faceTime1587 = prim /0055 (_t1604, _t1609);
        }
      }
      real _t160A = 0.e0;
      real _t160B = 0.e0;
      real _t160C = -0.1e1;
      real _t160D = 0.e0;
      vec3 _t160E = [_t160B, _t160C, _t160D];
      real _t160F = prim •00CE<$[3]; $[3]; $[]> (_t160E, _t0E30);
      real _t1610 = prim -0026<$[]> (_t160A, _t160F);
      real _t1611 = 0.e0;
      real _t1612 = -0.1e1;
      real _t1613 = 0.e0;
      vec3 _t1614 = [_t1611, _t1612, _t1613];
      real _t1615 = prim •00CE<$[3]; $[3]; $[]> (_t1614, deltaP0E00);
      real _t1616 = prim /0055 (_t1610, _t1615);
      real _t1617 = -0.1e-15;
      bool _t1618 = prim >=007E (_t1616, _t1617);
      real _t1619 = 0.e0;
      real _t161A = 0.e0;
      real _t161B = -0.1e1;
      real _t161C = 0.e0;
      vec3 _t161D = [_t161A, _t161B, _t161C];
      real _t161E = prim •00CE<$[3]; $[3]; $[]> (_t161D, _t0E30);
      real _t161F = prim -0026<$[]> (_t1619, _t161E);
      real _t1620 = 0.e0;
      real _t1621 = -0.1e1;
      real _t1622 = 0.e0;
      vec3 _t1623 = [_t1620, _t1621, _t1622];
      real _t1624 = prim •00CE<$[3]; $[3]; $[]> (_t1623, deltaP0E00);
      real _t1625 = prim /0055 (_t161F, _t1624);
      bool _t1626 = prim >0080 (time1585, _t1625);
      real _t1627 = 0.e0;
      real _t1628 = -0.1e1;
      real _t1629 = 0.e0;
      vec3 _t162A = [_t1627, _t1628, _t1629];
      real _t162B = prim •00CE<$[3]; $[3]; $[]> (_t162A, deltaP0E00);
      real _t162C = prim |()|00B5<$[]> (_t162B);
      real _t162D = 0.1e-20;
      bool _t162E = prim >=007E (_t162C, _t162D);
      bool _t162F = prim $and01C4 (_t1626, _t162E);
      bool _t1630 = prim $and01C4 (_t1618, _t162F);
      if _t1630 {
        int _t1631 = 2;
        bool _t1632 = prim !=0086 (_t0E31, _t1631);
        if _t1632 {
          real _t1633 = 0.e0;
          real _t1634 = 0.e0;
          real _t1635 = -0.1e1;
          real _t1636 = 0.e0;
          vec3 _t1637 = [_t1634, _t1635, _t1636];
          real _t1638 = prim •00CE<$[3]; $[3]; $[]> (_t1637, _t0E30);
          real _t1639 = prim -0026<$[]> (_t1633, _t1638);
          real _t163A = 0.e0;
          real _t163B = -0.1e1;
          real _t163C = 0.e0;
          vec3 _t163D = [_t163A, _t163B, _t163C];
          real _t163E = prim •00CE<$[3]; $[3]; $[]> (_t163D, deltaP0E00);
          time1585 = prim /0055 (_t1639, _t163E);
          face1586 = 2;
        } else {
          real _t163F = 0.e0;
          real _t1640 = 0.e0;
          real _t1641 = -0.1e1;
          real _t1642 = 0.e0;
          vec3 _t1643 = [_t1640, _t1641, _t1642];
          real _t1644 = prim •00CE<$[3]; $[3]; $[]> (_t1643, _t0E30);
          real _t1645 = prim -0026<$[]> (_t163F, _t1644);
          real _t1646 = 0.e0;
          real _t1647 = -0.1e1;
          real _t1648 = 0.e0;
          vec3 _t1649 = [_t1646, _t1647, _t1648];
          real _t164A = prim •00CE<$[3]; $[3]; $[]> (_t1649, deltaP0E00);
          faceTime1587 = prim /0055 (_t1645, _t164A);
        }
      }
      real _t164B = 0.e0;
      real _t164C = 0.e0;
      real _t164D = 0.e0;
      real _t164E = 0.1e1;
      vec3 _t164F = [_t164C, _t164D, _t164E];
      real _t1650 = prim •00CE<$[3]; $[3]; $[]> (_t164F, _t0E30);
      real _t1651 = prim -0026<$[]> (_t164B, _t1650);
      real _t1652 = 0.e0;
      real _t1653 = 0.e0;
      real _t1654 = 0.1e1;
      vec3 _t1655 = [_t1652, _t1653, _t1654];
      real _t1656 = prim •00CE<$[3]; $[3]; $[]> (_t1655, deltaP0E00);
      real _t1657 = prim /0055 (_t1651, _t1656);
      real _t1658 = -0.1e-15;
      bool _t1659 = prim >=007E (_t1657, _t1658);
      real _t165A = 0.e0;
      real _t165B = 0.e0;
      real _t165C = 0.e0;
      real _t165D = 0.1e1;
      vec3 _t165E = [_t165B, _t165C, _t165D];
      real _t165F = prim •00CE<$[3]; $[3]; $[]> (_t165E, _t0E30);
      real _t1660 = prim -0026<$[]> (_t165A, _t165F);
      real _t1661 = 0.e0;
      real _t1662 = 0.e0;
      real _t1663 = 0.1e1;
      vec3 _t1664 = [_t1661, _t1662, _t1663];
      real _t1665 = prim •00CE<$[3]; $[3]; $[]> (_t1664, deltaP0E00);
      real _t1666 = prim /0055 (_t1660, _t1665);
      bool _t1667 = prim >0080 (time1585, _t1666);
      real _t1668 = 0.e0;
      real _t1669 = 0.e0;
      real _t166A = 0.1e1;
      vec3 _t166B = [_t1668, _t1669, _t166A];
      real _t166C = prim •00CE<$[3]; $[3]; $[]> (_t166B, deltaP0E00);
      real _t166D = prim |()|00B5<$[]> (_t166C);
      real _t166E = 0.1e-20;
      bool _t166F = prim >=007E (_t166D, _t166E);
      bool _t1670 = prim $and01C4 (_t1667, _t166F);
      bool _t1671 = prim $and01C4 (_t1659, _t1670);
      if _t1671 {
        int _t1672 = 3;
        bool _t1673 = prim !=0086 (_t0E31, _t1672);
        if _t1673 {
          real _t1674 = 0.e0;
          real _t1675 = 0.e0;
          real _t1676 = 0.e0;
          real _t1677 = 0.1e1;
          vec3 _t1678 = [_t1675, _t1676, _t1677];
          real _t1679 = prim •00CE<$[3]; $[3]; $[]> (_t1678, _t0E30);
          real _t167A = prim -0026<$[]> (_t1674, _t1679);
          real _t167B = 0.e0;
          real _t167C = 0.e0;
          real _t167D = 0.1e1;
          vec3 _t167E = [_t167B, _t167C, _t167D];
          real _t167F = prim •00CE<$[3]; $[3]; $[]> (_t167E, deltaP0E00);
          time1585 = prim /0055 (_t167A, _t167F);
          face1586 = 3;
        } else {
          real _t1680 = 0.e0;
          real _t1681 = 0.e0;
          real _t1682 = 0.e0;
          real _t1683 = 0.1e1;
          vec3 _t1684 = [_t1681, _t1682, _t1683];
          real _t1685 = prim •00CE<$[3]; $[3]; $[]> (_t1684, _t0E30);
          real _t1686 = prim -0026<$[]> (_t1680, _t1685);
          real _t1687 = 0.e0;
          real _t1688 = 0.e0;
          real _t1689 = 0.1e1;
          vec3 _t168A = [_t1687, _t1688, _t1689];
          real _t168B = prim •00CE<$[3]; $[3]; $[]> (_t168A, deltaP0E00);
          faceTime1587 = prim /0055 (_t1686, _t168B);
        }
      }
      int _t168C = -1;
      bool _t168D = prim !=0086 (face1586, _t168C);
      if _t168D {
        real _t168E = 0.e0;
        real _t168F = prim max0125 (time1585, _t168E);
        real _t1690 = (real)face1586;
        vec2 _t1691 = [_t168F, _t1690];
        _t0E32 = _t1691;
      } else {
        real _t1692 = -inf;
        bool _t1693 = prim ==0084 (_t1692, faceTime1587);
        if _t1693 {
          real _t1694 = -0.1e1;
          real _t1695 = -0.1e1;
          vec2 _t1696 = [_t1694, _t1695];
          _t0E32 = _t1696;
        } else {
          real _t1697 = (real)_t0E31;
          vec2 _t1698 = [faceTime1587, _t1697];
          _t0E32 = _t1698;
        }
      }
      real eTime0E33 = _t0E32[0];
      real _t0E34 = prim *0034 (time0DEA, eTime0E33);
      time0DEA = prim -0026<$[]> (time0DEA, _t0E34);
      Femdata: Mesh _t0E35 = extractFem(cmp0DEB, Mesh);
      int _t0E36 = extractFemItem(CellIndex(Mesh), int, cmp0DEB);
      vec3 _t0E37 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      vec3 _t0E38 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      int _t0E39 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E3A;
      real time1471 = +inf;
      int face1472 = -1;
      real faceTime1473 = -inf;
      real _t1474 = 0.57735026919e0;
      real _t1475 = 0.57735026919e0;
      real _t1476 = 0.57735026919e0;
      real _t1477 = 0.57735026919e0;
      vec3 _t1478 = [_t1475, _t1476, _t1477];
      real _t1479 = prim •00CE<$[3]; $[3]; $[]> (_t1478, _t0E38);
      real _t147A = prim -0026<$[]> (_t1474, _t1479);
      real _t147B = 0.57735026919e0;
      real _t147C = 0.57735026919e0;
      real _t147D = 0.57735026919e0;
      vec3 _t147E = [_t147B, _t147C, _t147D];
      real _t147F = prim •00CE<$[3]; $[3]; $[]> (_t147E, deltaP0E00);
      real _t1480 = prim /0055 (_t147A, _t147F);
      real _t1481 = -0.1e-15;
      bool _t1482 = prim >=007E (_t1480, _t1481);
      real _t1483 = 0.57735026919e0;
      real _t1484 = 0.57735026919e0;
      real _t1485 = 0.57735026919e0;
      real _t1486 = 0.57735026919e0;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, _t0E38);
      real _t1489 = prim -0026<$[]> (_t1483, _t1488);
      real _t148A = 0.57735026919e0;
      real _t148B = 0.57735026919e0;
      real _t148C = 0.57735026919e0;
      vec3 _t148D = [_t148A, _t148B, _t148C];
      real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, deltaP0E00);
      real _t148F = prim /0055 (_t1489, _t148E);
      bool _t1490 = prim >0080 (time1471, _t148F);
      real _t1491 = 0.57735026919e0;
      real _t1492 = 0.57735026919e0;
      real _t1493 = 0.57735026919e0;
      vec3 _t1494 = [_t1491, _t1492, _t1493];
      real _t1495 = prim •00CE<$[3]; $[3]; $[]> (_t1494, deltaP0E00);
      real _t1496 = prim |()|00B5<$[]> (_t1495);
      real _t1497 = 0.1e-20;
      bool _t1498 = prim >=007E (_t1496, _t1497);
      bool _t1499 = prim $and01C4 (_t1490, _t1498);
      bool _t149A = prim $and01C4 (_t1482, _t1499);
      if _t149A {
        int _t149B = 0;
        bool _t149C = prim !=0086 (_t0E39, _t149B);
        if _t149C {
          real _t149D = 0.57735026919e0;
          real _t149E = 0.57735026919e0;
          real _t149F = 0.57735026919e0;
          real _t14A0 = 0.57735026919e0;
          vec3 _t14A1 = [_t149E, _t149F, _t14A0];
          real _t14A2 = prim •00CE<$[3]; $[3]; $[]> (_t14A1, _t0E38);
          real _t14A3 = prim -0026<$[]> (_t149D, _t14A2);
          real _t14A4 = 0.57735026919e0;
          real _t14A5 = 0.57735026919e0;
          real _t14A6 = 0.57735026919e0;
          vec3 _t14A7 = [_t14A4, _t14A5, _t14A6];
          real _t14A8 = prim •00CE<$[3]; $[3]; $[]> (_t14A7, deltaP0E00);
          time1471 = prim /0055 (_t14A3, _t14A8);
          face1472 = 0;
        } else {
          real _t14A9 = 0.57735026919e0;
          real _t14AA = 0.57735026919e0;
          real _t14AB = 0.57735026919e0;
          real _t14AC = 0.57735026919e0;
          vec3 _t14AD = [_t14AA, _t14AB, _t14AC];
          real _t14AE = prim •00CE<$[3]; $[3]; $[]> (_t14AD, _t0E38);
          real _t14AF = prim -0026<$[]> (_t14A9, _t14AE);
          real _t14B0 = 0.57735026919e0;
          real _t14B1 = 0.57735026919e0;
          real _t14B2 = 0.57735026919e0;
          vec3 _t14B3 = [_t14B0, _t14B1, _t14B2];
          real _t14B4 = prim •00CE<$[3]; $[3]; $[]> (_t14B3, deltaP0E00);
          faceTime1473 = prim /0055 (_t14AF, _t14B4);
        }
      }
      real _t14B5 = 0.e0;
      real _t14B6 = 0.1e1;
      real _t14B7 = 0.e0;
      real _t14B8 = 0.e0;
      vec3 _t14B9 = [_t14B6, _t14B7, _t14B8];
      real _t14BA = prim •00CE<$[3]; $[3]; $[]> (_t14B9, _t0E38);
      real _t14BB = prim -0026<$[]> (_t14B5, _t14BA);
      real _t14BC = 0.1e1;
      real _t14BD = 0.e0;
      real _t14BE = 0.e0;
      vec3 _t14BF = [_t14BC, _t14BD, _t14BE];
      real _t14C0 = prim •00CE<$[3]; $[3]; $[]> (_t14BF, deltaP0E00);
      real _t14C1 = prim /0055 (_t14BB, _t14C0);
      real _t14C2 = -0.1e-15;
      bool _t14C3 = prim >=007E (_t14C1, _t14C2);
      real _t14C4 = 0.e0;
      real _t14C5 = 0.1e1;
      real _t14C6 = 0.e0;
      real _t14C7 = 0.e0;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, _t0E38);
      real _t14CA = prim -0026<$[]> (_t14C4, _t14C9);
      real _t14CB = 0.1e1;
      real _t14CC = 0.e0;
      real _t14CD = 0.e0;
      vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
      real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, deltaP0E00);
      real _t14D0 = prim /0055 (_t14CA, _t14CF);
      bool _t14D1 = prim >0080 (time1471, _t14D0);
      real _t14D2 = 0.1e1;
      real _t14D3 = 0.e0;
      real _t14D4 = 0.e0;
      vec3 _t14D5 = [_t14D2, _t14D3, _t14D4];
      real _t14D6 = prim •00CE<$[3]; $[3]; $[]> (_t14D5, deltaP0E00);
      real _t14D7 = prim |()|00B5<$[]> (_t14D6);
      real _t14D8 = 0.1e-20;
      bool _t14D9 = prim >=007E (_t14D7, _t14D8);
      bool _t14DA = prim $and01C4 (_t14D1, _t14D9);
      bool _t14DB = prim $and01C4 (_t14C3, _t14DA);
      if _t14DB {
        int _t14DC = 1;
        bool _t14DD = prim !=0086 (_t0E39, _t14DC);
        if _t14DD {
          real _t14DE = 0.e0;
          real _t14DF = 0.1e1;
          real _t14E0 = 0.e0;
          real _t14E1 = 0.e0;
          vec3 _t14E2 = [_t14DF, _t14E0, _t14E1];
          real _t14E3 = prim •00CE<$[3]; $[3]; $[]> (_t14E2, _t0E38);
          real _t14E4 = prim -0026<$[]> (_t14DE, _t14E3);
          real _t14E5 = 0.1e1;
          real _t14E6 = 0.e0;
          real _t14E7 = 0.e0;
          vec3 _t14E8 = [_t14E5, _t14E6, _t14E7];
          real _t14E9 = prim •00CE<$[3]; $[3]; $[]> (_t14E8, deltaP0E00);
          time1471 = prim /0055 (_t14E4, _t14E9);
          face1472 = 1;
        } else {
          real _t14EA = 0.e0;
          real _t14EB = 0.1e1;
          real _t14EC = 0.e0;
          real _t14ED = 0.e0;
          vec3 _t14EE = [_t14EB, _t14EC, _t14ED];
          real _t14EF = prim •00CE<$[3]; $[3]; $[]> (_t14EE, _t0E38);
          real _t14F0 = prim -0026<$[]> (_t14EA, _t14EF);
          real _t14F1 = 0.1e1;
          real _t14F2 = 0.e0;
          real _t14F3 = 0.e0;
          vec3 _t14F4 = [_t14F1, _t14F2, _t14F3];
          real _t14F5 = prim •00CE<$[3]; $[3]; $[]> (_t14F4, deltaP0E00);
          faceTime1473 = prim /0055 (_t14F0, _t14F5);
        }
      }
      real _t14F6 = 0.e0;
      real _t14F7 = 0.e0;
      real _t14F8 = -0.1e1;
      real _t14F9 = 0.e0;
      vec3 _t14FA = [_t14F7, _t14F8, _t14F9];
      real _t14FB = prim •00CE<$[3]; $[3]; $[]> (_t14FA, _t0E38);
      real _t14FC = prim -0026<$[]> (_t14F6, _t14FB);
      real _t14FD = 0.e0;
      real _t14FE = -0.1e1;
      real _t14FF = 0.e0;
      vec3 _t1500 = [_t14FD, _t14FE, _t14FF];
      real _t1501 = prim •00CE<$[3]; $[3]; $[]> (_t1500, deltaP0E00);
      real _t1502 = prim /0055 (_t14FC, _t1501);
      real _t1503 = -0.1e-15;
      bool _t1504 = prim >=007E (_t1502, _t1503);
      real _t1505 = 0.e0;
      real _t1506 = 0.e0;
      real _t1507 = -0.1e1;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, _t0E38);
      real _t150B = prim -0026<$[]> (_t1505, _t150A);
      real _t150C = 0.e0;
      real _t150D = -0.1e1;
      real _t150E = 0.e0;
      vec3 _t150F = [_t150C, _t150D, _t150E];
      real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, deltaP0E00);
      real _t1511 = prim /0055 (_t150B, _t1510);
      bool _t1512 = prim >0080 (time1471, _t1511);
      real _t1513 = 0.e0;
      real _t1514 = -0.1e1;
      real _t1515 = 0.e0;
      vec3 _t1516 = [_t1513, _t1514, _t1515];
      real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, deltaP0E00);
      real _t1518 = prim |()|00B5<$[]> (_t1517);
      real _t1519 = 0.1e-20;
      bool _t151A = prim >=007E (_t1518, _t1519);
      bool _t151B = prim $and01C4 (_t1512, _t151A);
      bool _t151C = prim $and01C4 (_t1504, _t151B);
      if _t151C {
        int _t151D = 2;
        bool _t151E = prim !=0086 (_t0E39, _t151D);
        if _t151E {
          real _t151F = 0.e0;
          real _t1520 = 0.e0;
          real _t1521 = -0.1e1;
          real _t1522 = 0.e0;
          vec3 _t1523 = [_t1520, _t1521, _t1522];
          real _t1524 = prim •00CE<$[3]; $[3]; $[]> (_t1523, _t0E38);
          real _t1525 = prim -0026<$[]> (_t151F, _t1524);
          real _t1526 = 0.e0;
          real _t1527 = -0.1e1;
          real _t1528 = 0.e0;
          vec3 _t1529 = [_t1526, _t1527, _t1528];
          real _t152A = prim •00CE<$[3]; $[3]; $[]> (_t1529, deltaP0E00);
          time1471 = prim /0055 (_t1525, _t152A);
          face1472 = 2;
        } else {
          real _t152B = 0.e0;
          real _t152C = 0.e0;
          real _t152D = -0.1e1;
          real _t152E = 0.e0;
          vec3 _t152F = [_t152C, _t152D, _t152E];
          real _t1530 = prim •00CE<$[3]; $[3]; $[]> (_t152F, _t0E38);
          real _t1531 = prim -0026<$[]> (_t152B, _t1530);
          real _t1532 = 0.e0;
          real _t1533 = -0.1e1;
          real _t1534 = 0.e0;
          vec3 _t1535 = [_t1532, _t1533, _t1534];
          real _t1536 = prim •00CE<$[3]; $[3]; $[]> (_t1535, deltaP0E00);
          faceTime1473 = prim /0055 (_t1531, _t1536);
        }
      }
      real _t1537 = 0.e0;
      real _t1538 = 0.e0;
      real _t1539 = 0.e0;
      real _t153A = 0.1e1;
      vec3 _t153B = [_t1538, _t1539, _t153A];
      real _t153C = prim •00CE<$[3]; $[3]; $[]> (_t153B, _t0E38);
      real _t153D = prim -0026<$[]> (_t1537, _t153C);
      real _t153E = 0.e0;
      real _t153F = 0.e0;
      real _t1540 = 0.1e1;
      vec3 _t1541 = [_t153E, _t153F, _t1540];
      real _t1542 = prim •00CE<$[3]; $[3]; $[]> (_t1541, deltaP0E00);
      real _t1543 = prim /0055 (_t153D, _t1542);
      real _t1544 = -0.1e-15;
      bool _t1545 = prim >=007E (_t1543, _t1544);
      real _t1546 = 0.e0;
      real _t1547 = 0.e0;
      real _t1548 = 0.e0;
      real _t1549 = 0.1e1;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, _t0E38);
      real _t154C = prim -0026<$[]> (_t1546, _t154B);
      real _t154D = 0.e0;
      real _t154E = 0.e0;
      real _t154F = 0.1e1;
      vec3 _t1550 = [_t154D, _t154E, _t154F];
      real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, deltaP0E00);
      real _t1552 = prim /0055 (_t154C, _t1551);
      bool _t1553 = prim >0080 (time1471, _t1552);
      real _t1554 = 0.e0;
      real _t1555 = 0.e0;
      real _t1556 = 0.1e1;
      vec3 _t1557 = [_t1554, _t1555, _t1556];
      real _t1558 = prim •00CE<$[3]; $[3]; $[]> (_t1557, deltaP0E00);
      real _t1559 = prim |()|00B5<$[]> (_t1558);
      real _t155A = 0.1e-20;
      bool _t155B = prim >=007E (_t1559, _t155A);
      bool _t155C = prim $and01C4 (_t1553, _t155B);
      bool _t155D = prim $and01C4 (_t1545, _t155C);
      if _t155D {
        int _t155E = 3;
        bool _t155F = prim !=0086 (_t0E39, _t155E);
        if _t155F {
          real _t1560 = 0.e0;
          real _t1561 = 0.e0;
          real _t1562 = 0.e0;
          real _t1563 = 0.1e1;
          vec3 _t1564 = [_t1561, _t1562, _t1563];
          real _t1565 = prim •00CE<$[3]; $[3]; $[]> (_t1564, _t0E38);
          real _t1566 = prim -0026<$[]> (_t1560, _t1565);
          real _t1567 = 0.e0;
          real _t1568 = 0.e0;
          real _t1569 = 0.1e1;
          vec3 _t156A = [_t1567, _t1568, _t1569];
          real _t156B = prim •00CE<$[3]; $[3]; $[]> (_t156A, deltaP0E00);
          time1471 = prim /0055 (_t1566, _t156B);
          face1472 = 3;
        } else {
          real _t156C = 0.e0;
          real _t156D = 0.e0;
          real _t156E = 0.e0;
          real _t156F = 0.1e1;
          vec3 _t1570 = [_t156D, _t156E, _t156F];
          real _t1571 = prim •00CE<$[3]; $[3]; $[]> (_t1570, _t0E38);
          real _t1572 = prim -0026<$[]> (_t156C, _t1571);
          real _t1573 = 0.e0;
          real _t1574 = 0.e0;
          real _t1575 = 0.1e1;
          vec3 _t1576 = [_t1573, _t1574, _t1575];
          real _t1577 = prim •00CE<$[3]; $[3]; $[]> (_t1576, deltaP0E00);
          faceTime1473 = prim /0055 (_t1572, _t1577);
        }
      }
      int _t1578 = -1;
      bool _t1579 = prim !=0086 (face1472, _t1578);
      if _t1579 {
        real _t157A = 0.e0;
        real _t157B = prim max0125 (time1471, _t157A);
        real _t157C = (real)face1472;
        vec2 _t157D = [_t157B, _t157C];
        _t0E3A = _t157D;
      } else {
        real _t157E = -inf;
        bool _t157F = prim ==0084 (_t157E, faceTime1473);
        if _t157F {
          real _t1580 = -0.1e1;
          real _t1581 = -0.1e1;
          vec2 _t1582 = [_t1580, _t1581];
          _t0E3A = _t1582;
        } else {
          real _t1583 = (real)_t0E39;
          vec2 _t1584 = [faceTime1473, _t1583];
          _t0E3A = _t1584;
        }
      }
      Femdata: MeshPos nmp0E3B;
      int _t0EA6 = -1;
      real _t0EA7 = _t0E3A[1];
      int _t0EA8 = prim $r2i01B7 (_t0EA7);
      int[2] _t0EA9 = func nextCell4048A (_t0EA8, _t0E36, _t0E35);
      int _t0EAA = 0;
      int _t0EAB = prim $sub01C0<int; %2> (_t0EA9, _t0EAA);
      bool _t0EAC = prim !=0086 (_t0EA6, _t0EAB);
      if _t0EAC {
        string _t0EAD = "face ";
        real _t0EAE = _t0E3A[1];
        int _t0EAF = prim $r2i01B7 (_t0EAE);
        string _t0EB0 = " to ";
        real _t0EB1 = _t0E3A[1];
        int _t0EB2 = prim $r2i01B7 (_t0EB1);
        int[2] _t0EB3 = func nextCell4048A (_t0EB2, _t0E36, _t0E35);
        int _t0EB4 = 1;
        int _t0EB5 = prim $sub01C0<int; %2> (_t0EB3, _t0EB4);
        string _t0EB6 = "\n";
        string _t0EB7 = "got: ";
        real _t0EB8 = 0.1e1;
        real _t0EB9 = 0.e0;
        real _t0EBA = 0.e0;
        real _t0EBB = 0.e0;
        vec4 _t0EBC = [_t0EB8, _t0EB9, _t0EBA, _t0EBB];
        real _t0EBD = 0.e0;
        real _t0EBE = 0.1e1;
        real _t0EBF = 0.e0;
        real _t0EC0 = 0.e0;
        vec4 _t0EC1 = [_t0EBD, _t0EBE, _t0EBF, _t0EC0];
        real _t0EC2 = 0.e0;
        real _t0EC3 = 0.e0;
        real _t0EC4 = 0.1e1;
        real _t0EC5 = 0.e0;
        vec4 _t0EC6 = [_t0EC2, _t0EC3, _t0EC4, _t0EC5];
        real _t0EC7 = 0.971445146547e-16;
        real _t0EC8 = 0.e0;
        real _t0EC9 = 0.e0;
        real _t0ECA = 0.1e1;
        vec4 _t0ECB = [_t0EC7, _t0EC8, _t0EC9, _t0ECA];
        tensor[4,4] _t0ECC = [_t0EBC, _t0EC1, _t0EC6, _t0ECB];
        real _t0ECD = 0.57735026919e0;
        real _t0ECE = 0.57735026919e0;
        real _t0ECF = 0.57735026919e0;
        real _t0ED0 = -0.57735026919e0;
        vec4 _t0ED1 = [_t0ECD, _t0ECE, _t0ECF, _t0ED0];
        real _t0ED2 = -0.333333333333e0;
        real _t0ED3 = 0.666666666667e0;
        real _t0ED4 = -0.333333333333e0;
        real _t0ED5 = 0.333333333333e0;
        vec4 _t0ED6 = [_t0ED2, _t0ED3, _t0ED4, _t0ED5];
        real _t0ED7 = -0.333333333333e0;
        real _t0ED8 = -0.333333333333e0;
        real _t0ED9 = 0.666666666667e0;
        real _t0EDA = 0.333333333333e0;
        vec4 _t0EDB = [_t0ED7, _t0ED8, _t0ED9, _t0EDA];
        real _t0EDC = 0.971445146547e-16;
        real _t0EDD = 0.e0;
        real _t0EDE = 0.e0;
        real _t0EDF = 0.1e1;
        vec4 _t0EE0 = [_t0EDC, _t0EDD, _t0EDE, _t0EDF];
        tensor[4,4] _t0EE1 = [_t0ED1, _t0ED6, _t0EDB, _t0EE0];
        real _t0EE2 = -0.333333333333e0;
        real _t0EE3 = 0.666666666667e0;
        real _t0EE4 = -0.333333333333e0;
        real _t0EE5 = 0.333333333333e0;
        vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
        real _t0EE7 = -0.57735026919e0;
        real _t0EE8 = -0.57735026919e0;
        real _t0EE9 = -0.57735026919e0;
        real _t0EEA = 0.57735026919e0;
        vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
        real _t0EEC = -0.333333333333e0;
        real _t0EED = -0.333333333333e0;
        real _t0EEE = 0.666666666667e0;
        real _t0EEF = 0.333333333333e0;
        vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
        real _t0EF1 = 0.971445146547e-16;
        real _t0EF2 = 0.e0;
        real _t0EF3 = 0.e0;
        real _t0EF4 = 0.1e1;
        vec4 _t0EF5 = [_t0EF1, _t0EF2, _t0EF3, _t0EF4];
        tensor[4,4] _t0EF6 = [_t0EE6, _t0EEB, _t0EF0, _t0EF5];
        real _t0EF7 = -0.333333333333e0;
        real _t0EF8 = 0.666666666667e0;
        real _t0EF9 = -0.333333333333e0;
        real _t0EFA = 0.333333333333e0;
        vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
        real _t0EFC = -0.333333333333e0;
        real _t0EFD = -0.333333333333e0;
        real _t0EFE = 0.666666666667e0;
        real _t0EFF = 0.333333333333e0;
        vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
        real _t0F01 = 0.57735026919e0;
        real _t0F02 = 0.57735026919e0;
        real _t0F03 = 0.57735026919e0;
        real _t0F04 = -0.57735026919e0;
        vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
        real _t0F06 = 0.971445146547e-16;
        real _t0F07 = 0.e0;
        real _t0F08 = 0.e0;
        real _t0F09 = 0.1e1;
        vec4 _t0F0A = [_t0F06, _t0F07, _t0F08, _t0F09];
        tensor[4,4] _t0F0B = [_t0EFB, _t0F00, _t0F05, _t0F0A];
        tensor[4,4][4] _t0F0C = {_t0ECC, _t0EE1, _t0EF6, _t0F0B};
        real _t0F0D = 0.57735026919e0;
        real _t0F0E = -0.1e1;
        real _t0F0F = -0.1e1;
        real _t0F10 = 0.1e1;
        vec4 _t0F11 = [_t0F0D, _t0F0E, _t0F0F, _t0F10];
        real _t0F12 = 0.57735026919e0;
        real _t0F13 = 0.1e1;
        real _t0F14 = 0.e0;
        real _t0F15 = 0.e0;
        vec4 _t0F16 = [_t0F12, _t0F13, _t0F14, _t0F15];
        real _t0F17 = 0.57735026919e0;
        real _t0F18 = 0.e0;
        real _t0F19 = 0.1e1;
        real _t0F1A = 0.e0;
        vec4 _t0F1B = [_t0F17, _t0F18, _t0F19, _t0F1A];
        real _t0F1C = 0.e0;
        real _t0F1D = 0.e0;
        real _t0F1E = 0.e0;
        real _t0F1F = 0.1e1;
        vec4 _t0F20 = [_t0F1C, _t0F1D, _t0F1E, _t0F1F];
        tensor[4,4] _t0F21 = [_t0F11, _t0F16, _t0F1B, _t0F20];
        real _t0F22 = 0.1e1;
        real _t0F23 = 0.e0;
        real _t0F24 = 0.e0;
        real _t0F25 = 0.e0;
        vec4 _t0F26 = [_t0F22, _t0F23, _t0F24, _t0F25];
        real _t0F27 = 0.e0;
        real _t0F28 = 0.1e1;
        real _t0F29 = 0.e0;
        real _t0F2A = 0.e0;
        vec4 _t0F2B = [_t0F27, _t0F28, _t0F29, _t0F2A];
        real _t0F2C = 0.e0;
        real _t0F2D = 0.e0;
        real _t0F2E = 0.1e1;
        real _t0F2F = 0.e0;
        vec4 _t0F30 = [_t0F2C, _t0F2D, _t0F2E, _t0F2F];
        real _t0F31 = 0.e0;
        real _t0F32 = 0.e0;
        real _t0F33 = 0.e0;
        real _t0F34 = 0.1e1;
        vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
        tensor[4,4] _t0F36 = [_t0F26, _t0F2B, _t0F30, _t0F35];
        real _t0F37 = 0.e0;
        real _t0F38 = 0.1e1;
        real _t0F39 = 0.e0;
        real _t0F3A = 0.e0;
        vec4 _t0F3B = [_t0F37, _t0F38, _t0F39, _t0F3A];
        real _t0F3C = -0.1e1;
        real _t0F3D = 0.e0;
        real _t0F3E = 0.e0;
        real _t0F3F = 0.e0;
        vec4 _t0F40 = [_t0F3C, _t0F3D, _t0F3E, _t0F3F];
        real _t0F41 = 0.e0;
        real _t0F42 = 0.e0;
        real _t0F43 = 0.1e1;
        real _t0F44 = 0.e0;
        vec4 _t0F45 = [_t0F41, _t0F42, _t0F43, _t0F44];
        real _t0F46 = 0.e0;
        real _t0F47 = 0.e0;
        real _t0F48 = 0.e0;
        real _t0F49 = 0.1e1;
        vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
        tensor[4,4] _t0F4B = [_t0F3B, _t0F40, _t0F45, _t0F4A];
        real _t0F4C = 0.e0;
        real _t0F4D = 0.1e1;
        real _t0F4E = 0.e0;
        real _t0F4F = 0.e0;
        vec4 _t0F50 = [_t0F4C, _t0F4D, _t0F4E, _t0F4F];
        real _t0F51 = 0.e0;
        real _t0F52 = 0.e0;
        real _t0F53 = 0.1e1;
        real _t0F54 = 0.e0;
        vec4 _t0F55 = [_t0F51, _t0F52, _t0F53, _t0F54];
        real _t0F56 = 0.1e1;
        real _t0F57 = 0.e0;
        real _t0F58 = 0.e0;
        real _t0F59 = 0.e0;
        vec4 _t0F5A = [_t0F56, _t0F57, _t0F58, _t0F59];
        real _t0F5B = 0.e0;
        real _t0F5C = 0.e0;
        real _t0F5D = 0.e0;
        real _t0F5E = 0.1e1;
        vec4 _t0F5F = [_t0F5B, _t0F5C, _t0F5D, _t0F5E];
        tensor[4,4] _t0F60 = [_t0F50, _t0F55, _t0F5A, _t0F5F];
        tensor[4,4][4] _t0F61 = {_t0F21, _t0F36, _t0F4B, _t0F60};
        real _t0F62 = -0.1e1;
        real _t0F63 = -0.57735026919e0;
        real _t0F64 = -0.1e1;
        real _t0F65 = 0.1e1;
        vec4 _t0F66 = [_t0F62, _t0F63, _t0F64, _t0F65];
        real _t0F67 = 0.1e1;
        real _t0F68 = -0.57735026919e0;
        real _t0F69 = 0.e0;
        real _t0F6A = 0.e0;
        vec4 _t0F6B = [_t0F67, _t0F68, _t0F69, _t0F6A];
        real _t0F6C = 0.e0;
        real _t0F6D = -0.57735026919e0;
        real _t0F6E = 0.1e1;
        real _t0F6F = 0.e0;
        vec4 _t0F70 = [_t0F6C, _t0F6D, _t0F6E, _t0F6F];
        real _t0F71 = 0.e0;
        real _t0F72 = 0.e0;
        real _t0F73 = 0.e0;
        real _t0F74 = 0.1e1;
        vec4 _t0F75 = [_t0F71, _t0F72, _t0F73, _t0F74];
        tensor[4,4] _t0F76 = [_t0F66, _t0F6B, _t0F70, _t0F75];
        real _t0F77 = 0.e0;
        real _t0F78 = -0.1e1;
        real _t0F79 = 0.e0;
        real _t0F7A = 0.e0;
        vec4 _t0F7B = [_t0F77, _t0F78, _t0F79, _t0F7A];
        real _t0F7C = 0.1e1;
        real _t0F7D = 0.e0;
        real _t0F7E = 0.e0;
        real _t0F7F = 0.e0;
        vec4 _t0F80 = [_t0F7C, _t0F7D, _t0F7E, _t0F7F];
        real _t0F81 = 0.e0;
        real _t0F82 = 0.e0;
        real _t0F83 = 0.1e1;
        real _t0F84 = 0.e0;
        vec4 _t0F85 = [_t0F81, _t0F82, _t0F83, _t0F84];
        real _t0F86 = 0.e0;
        real _t0F87 = 0.e0;
        real _t0F88 = 0.e0;
        real _t0F89 = 0.1e1;
        vec4 _t0F8A = [_t0F86, _t0F87, _t0F88, _t0F89];
        tensor[4,4] _t0F8B = [_t0F7B, _t0F80, _t0F85, _t0F8A];
        real _t0F8C = 0.1e1;
        real _t0F8D = 0.e0;
        real _t0F8E = 0.e0;
        real _t0F8F = 0.e0;
        vec4 _t0F90 = [_t0F8C, _t0F8D, _t0F8E, _t0F8F];
        real _t0F91 = 0.e0;
        real _t0F92 = 0.1e1;
        real _t0F93 = 0.e0;
        real _t0F94 = 0.e0;
        vec4 _t0F95 = [_t0F91, _t0F92, _t0F93, _t0F94];
        real _t0F96 = 0.e0;
        real _t0F97 = 0.e0;
        real _t0F98 = 0.1e1;
        real _t0F99 = 0.e0;
        vec4 _t0F9A = [_t0F96, _t0F97, _t0F98, _t0F99];
        real _t0F9B = 0.e0;
        real _t0F9C = 0.e0;
        real _t0F9D = 0.e0;
        real _t0F9E = 0.1e1;
        vec4 _t0F9F = [_t0F9B, _t0F9C, _t0F9D, _t0F9E];
        tensor[4,4] _t0FA0 = [_t0F90, _t0F95, _t0F9A, _t0F9F];
        real _t0FA1 = 0.1e1;
        real _t0FA2 = 0.e0;
        real _t0FA3 = 0.e0;
        real _t0FA4 = 0.e0;
        vec4 _t0FA5 = [_t0FA1, _t0FA2, _t0FA3, _t0FA4];
        real _t0FA6 = 0.e0;
        real _t0FA7 = 0.e0;
        real _t0FA8 = 0.1e1;
        real _t0FA9 = 0.e0;
        vec4 _t0FAA = [_t0FA6, _t0FA7, _t0FA8, _t0FA9];
        real _t0FAB = 0.e0;
        real _t0FAC = -0.1e1;
        real _t0FAD = 0.e0;
        real _t0FAE = 0.e0;
        vec4 _t0FAF = [_t0FAB, _t0FAC, _t0FAD, _t0FAE];
        real _t0FB0 = 0.e0;
        real _t0FB1 = 0.e0;
        real _t0FB2 = 0.e0;
        real _t0FB3 = 0.1e1;
        vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
        tensor[4,4] _t0FB5 = [_t0FA5, _t0FAA, _t0FAF, _t0FB4];
        tensor[4,4][4] _t0FB6 = {_t0F76, _t0F8B, _t0FA0, _t0FB5};
        real _t0FB7 = -0.1e1;
        real _t0FB8 = -0.1e1;
        real _t0FB9 = 0.57735026919e0;
        real _t0FBA = 0.1e1;
        vec4 _t0FBB = [_t0FB7, _t0FB8, _t0FB9, _t0FBA];
        real _t0FBC = 0.1e1;
        real _t0FBD = 0.e0;
        real _t0FBE = 0.57735026919e0;
        real _t0FBF = 0.e0;
        vec4 _t0FC0 = [_t0FBC, _t0FBD, _t0FBE, _t0FBF];
        real _t0FC1 = 0.e0;
        real _t0FC2 = 0.1e1;
        real _t0FC3 = 0.57735026919e0;
        real _t0FC4 = 0.e0;
        vec4 _t0FC5 = [_t0FC1, _t0FC2, _t0FC3, _t0FC4];
        real _t0FC6 = 0.e0;
        real _t0FC7 = 0.e0;
        real _t0FC8 = 0.e0;
        real _t0FC9 = 0.1e1;
        vec4 _t0FCA = [_t0FC6, _t0FC7, _t0FC8, _t0FC9];
        tensor[4,4] _t0FCB = [_t0FBB, _t0FC0, _t0FC5, _t0FCA];
        real _t0FCC = 0.e0;
        real _t0FCD = 0.e0;
        real _t0FCE = 0.1e1;
        real _t0FCF = 0.e0;
        vec4 _t0FD0 = [_t0FCC, _t0FCD, _t0FCE, _t0FCF];
        real _t0FD1 = 0.1e1;
        real _t0FD2 = 0.e0;
        real _t0FD3 = 0.e0;
        real _t0FD4 = 0.e0;
        vec4 _t0FD5 = [_t0FD1, _t0FD2, _t0FD3, _t0FD4];
        real _t0FD6 = 0.e0;
        real _t0FD7 = 0.1e1;
        real _t0FD8 = 0.e0;
        real _t0FD9 = 0.e0;
        vec4 _t0FDA = [_t0FD6, _t0FD7, _t0FD8, _t0FD9];
        real _t0FDB = 0.e0;
        real _t0FDC = 0.e0;
        real _t0FDD = 0.e0;
        real _t0FDE = 0.1e1;
        vec4 _t0FDF = [_t0FDB, _t0FDC, _t0FDD, _t0FDE];
        tensor[4,4] _t0FE0 = [_t0FD0, _t0FD5, _t0FDA, _t0FDF];
        real _t0FE1 = 0.1e1;
        real _t0FE2 = 0.e0;
        real _t0FE3 = 0.e0;
        real _t0FE4 = 0.e0;
        vec4 _t0FE5 = [_t0FE1, _t0FE2, _t0FE3, _t0FE4];
        real _t0FE6 = 0.e0;
        real _t0FE7 = 0.e0;
        real _t0FE8 = -0.1e1;
        real _t0FE9 = 0.e0;
        vec4 _t0FEA = [_t0FE6, _t0FE7, _t0FE8, _t0FE9];
        real _t0FEB = 0.e0;
        real _t0FEC = 0.1e1;
        real _t0FED = 0.e0;
        real _t0FEE = 0.e0;
        vec4 _t0FEF = [_t0FEB, _t0FEC, _t0FED, _t0FEE];
        real _t0FF0 = 0.e0;
        real _t0FF1 = 0.e0;
        real _t0FF2 = 0.e0;
        real _t0FF3 = 0.1e1;
        vec4 _t0FF4 = [_t0FF0, _t0FF1, _t0FF2, _t0FF3];
        tensor[4,4] _t0FF5 = [_t0FE5, _t0FEA, _t0FEF, _t0FF4];
        real _t0FF6 = 0.1e1;
        real _t0FF7 = 0.e0;
        real _t0FF8 = 0.e0;
        real _t0FF9 = 0.e0;
        vec4 _t0FFA = [_t0FF6, _t0FF7, _t0FF8, _t0FF9];
        real _t0FFB = 0.e0;
        real _t0FFC = 0.1e1;
        real _t0FFD = 0.e0;
        real _t0FFE = 0.e0;
        vec4 _t0FFF = [_t0FFB, _t0FFC, _t0FFD, _t0FFE];
        real _t1000 = 0.e0;
        real _t1001 = 0.e0;
        real _t1002 = 0.1e1;
        real _t1003 = 0.e0;
        vec4 _t1004 = [_t1000, _t1001, _t1002, _t1003];
        real _t1005 = 0.e0;
        real _t1006 = 0.e0;
        real _t1007 = 0.e0;
        real _t1008 = 0.1e1;
        vec4 _t1009 = [_t1005, _t1006, _t1007, _t1008];
        tensor[4,4] _t100A = [_t0FFA, _t0FFF, _t1004, _t1009];
        tensor[4,4][4] _t100B = {_t0FCB, _t0FE0, _t0FF5, _t100A};
        tensor[4,4][4][4] _t100C = {_t0F0C, _t0F61, _t0FB6, _t100B};
        real _t100D = _t0E3A[1];
        int _t100E = prim $r2i01B7 (_t100D);
        tensor[4,4][4] _t100F = prim $sub01C0<tensor[4,4][4]; %4> (_t100C, _t100E);
        real _t1010 = _t0E3A[1];
        int _t1011 = prim $r2i01B7 (_t1010);
        int[2] _t1012 = func nextCell4048A (_t1011, _t0E36, _t0E35);
        int _t1013 = 1;
        int _t1014 = prim $sub01C0<int; %2> (_t1012, _t1013);
        tensor[4,4] _t1015 = prim $sub01C0<tensor[4,4]; %4> (_t100F, _t1014);
        string _t1016 = "\n";
        print (_t0EAD, _t0EAF, _t0EB0, _t0EB5, _t0EB6, _t0EB7, _t1015, _t1016);
        real _t1017 = _t0E3A[1];
        int _t1018 = prim $r2i01B7 (_t1017);
        int[2] _t1019 = func nextCell4048A (_t1018, _t0E36, _t0E35);
        int _t101A = 0;
        int _t101B = prim $sub01C0<int; %2> (_t1019, _t101A);
        real _t101C = 0.1e1;
        real _t101D = 0.e0;
        real _t101E = 0.e0;
        real _t101F = 0.e0;
        vec4 _t1020 = [_t101C, _t101D, _t101E, _t101F];
        real _t1021 = 0.e0;
        real _t1022 = 0.1e1;
        real _t1023 = 0.e0;
        real _t1024 = 0.e0;
        vec4 _t1025 = [_t1021, _t1022, _t1023, _t1024];
        real _t1026 = 0.e0;
        real _t1027 = 0.e0;
        real _t1028 = 0.1e1;
        real _t1029 = 0.e0;
        vec4 _t102A = [_t1026, _t1027, _t1028, _t1029];
        real _t102B = 0.971445146547e-16;
        real _t102C = 0.e0;
        real _t102D = 0.e0;
        real _t102E = 0.1e1;
        vec4 _t102F = [_t102B, _t102C, _t102D, _t102E];
        tensor[4,4] _t1030 = [_t1020, _t1025, _t102A, _t102F];
        real _t1031 = 0.57735026919e0;
        real _t1032 = 0.57735026919e0;
        real _t1033 = 0.57735026919e0;
        real _t1034 = -0.57735026919e0;
        vec4 _t1035 = [_t1031, _t1032, _t1033, _t1034];
        real _t1036 = -0.333333333333e0;
        real _t1037 = 0.666666666667e0;
        real _t1038 = -0.333333333333e0;
        real _t1039 = 0.333333333333e0;
        vec4 _t103A = [_t1036, _t1037, _t1038, _t1039];
        real _t103B = -0.333333333333e0;
        real _t103C = -0.333333333333e0;
        real _t103D = 0.666666666667e0;
        real _t103E = 0.333333333333e0;
        vec4 _t103F = [_t103B, _t103C, _t103D, _t103E];
        real _t1040 = 0.971445146547e-16;
        real _t1041 = 0.e0;
        real _t1042 = 0.e0;
        real _t1043 = 0.1e1;
        vec4 _t1044 = [_t1040, _t1041, _t1042, _t1043];
        tensor[4,4] _t1045 = [_t1035, _t103A, _t103F, _t1044];
        real _t1046 = -0.333333333333e0;
        real _t1047 = 0.666666666667e0;
        real _t1048 = -0.333333333333e0;
        real _t1049 = 0.333333333333e0;
        vec4 _t104A = [_t1046, _t1047, _t1048, _t1049];
        real _t104B = -0.57735026919e0;
        real _t104C = -0.57735026919e0;
        real _t104D = -0.57735026919e0;
        real _t104E = 0.57735026919e0;
        vec4 _t104F = [_t104B, _t104C, _t104D, _t104E];
        real _t1050 = -0.333333333333e0;
        real _t1051 = -0.333333333333e0;
        real _t1052 = 0.666666666667e0;
        real _t1053 = 0.333333333333e0;
        vec4 _t1054 = [_t1050, _t1051, _t1052, _t1053];
        real _t1055 = 0.971445146547e-16;
        real _t1056 = 0.e0;
        real _t1057 = 0.e0;
        real _t1058 = 0.1e1;
        vec4 _t1059 = [_t1055, _t1056, _t1057, _t1058];
        tensor[4,4] _t105A = [_t104A, _t104F, _t1054, _t1059];
        real _t105B = -0.333333333333e0;
        real _t105C = 0.666666666667e0;
        real _t105D = -0.333333333333e0;
        real _t105E = 0.333333333333e0;
        vec4 _t105F = [_t105B, _t105C, _t105D, _t105E];
        real _t1060 = -0.333333333333e0;
        real _t1061 = -0.333333333333e0;
        real _t1062 = 0.666666666667e0;
        real _t1063 = 0.333333333333e0;
        vec4 _t1064 = [_t1060, _t1061, _t1062, _t1063];
        real _t1065 = 0.57735026919e0;
        real _t1066 = 0.57735026919e0;
        real _t1067 = 0.57735026919e0;
        real _t1068 = -0.57735026919e0;
        vec4 _t1069 = [_t1065, _t1066, _t1067, _t1068];
        real _t106A = 0.971445146547e-16;
        real _t106B = 0.e0;
        real _t106C = 0.e0;
        real _t106D = 0.1e1;
        vec4 _t106E = [_t106A, _t106B, _t106C, _t106D];
        tensor[4,4] _t106F = [_t105F, _t1064, _t1069, _t106E];
        tensor[4,4][4] _t1070 = {_t1030, _t1045, _t105A, _t106F};
        real _t1071 = 0.57735026919e0;
        real _t1072 = -0.1e1;
        real _t1073 = -0.1e1;
        real _t1074 = 0.1e1;
        vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
        real _t1076 = 0.57735026919e0;
        real _t1077 = 0.1e1;
        real _t1078 = 0.e0;
        real _t1079 = 0.e0;
        vec4 _t107A = [_t1076, _t1077, _t1078, _t1079];
        real _t107B = 0.57735026919e0;
        real _t107C = 0.e0;
        real _t107D = 0.1e1;
        real _t107E = 0.e0;
        vec4 _t107F = [_t107B, _t107C, _t107D, _t107E];
        real _t1080 = 0.e0;
        real _t1081 = 0.e0;
        real _t1082 = 0.e0;
        real _t1083 = 0.1e1;
        vec4 _t1084 = [_t1080, _t1081, _t1082, _t1083];
        tensor[4,4] _t1085 = [_t1075, _t107A, _t107F, _t1084];
        real _t1086 = 0.1e1;
        real _t1087 = 0.e0;
        real _t1088 = 0.e0;
        real _t1089 = 0.e0;
        vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
        real _t108B = 0.e0;
        real _t108C = 0.1e1;
        real _t108D = 0.e0;
        real _t108E = 0.e0;
        vec4 _t108F = [_t108B, _t108C, _t108D, _t108E];
        real _t1090 = 0.e0;
        real _t1091 = 0.e0;
        real _t1092 = 0.1e1;
        real _t1093 = 0.e0;
        vec4 _t1094 = [_t1090, _t1091, _t1092, _t1093];
        real _t1095 = 0.e0;
        real _t1096 = 0.e0;
        real _t1097 = 0.e0;
        real _t1098 = 0.1e1;
        vec4 _t1099 = [_t1095, _t1096, _t1097, _t1098];
        tensor[4,4] _t109A = [_t108A, _t108F, _t1094, _t1099];
        real _t109B = 0.e0;
        real _t109C = 0.1e1;
        real _t109D = 0.e0;
        real _t109E = 0.e0;
        vec4 _t109F = [_t109B, _t109C, _t109D, _t109E];
        real _t10A0 = -0.1e1;
        real _t10A1 = 0.e0;
        real _t10A2 = 0.e0;
        real _t10A3 = 0.e0;
        vec4 _t10A4 = [_t10A0, _t10A1, _t10A2, _t10A3];
        real _t10A5 = 0.e0;
        real _t10A6 = 0.e0;
        real _t10A7 = 0.1e1;
        real _t10A8 = 0.e0;
        vec4 _t10A9 = [_t10A5, _t10A6, _t10A7, _t10A8];
        real _t10AA = 0.e0;
        real _t10AB = 0.e0;
        real _t10AC = 0.e0;
        real _t10AD = 0.1e1;
        vec4 _t10AE = [_t10AA, _t10AB, _t10AC, _t10AD];
        tensor[4,4] _t10AF = [_t109F, _t10A4, _t10A9, _t10AE];
        real _t10B0 = 0.e0;
        real _t10B1 = 0.1e1;
        real _t10B2 = 0.e0;
        real _t10B3 = 0.e0;
        vec4 _t10B4 = [_t10B0, _t10B1, _t10B2, _t10B3];
        real _t10B5 = 0.e0;
        real _t10B6 = 0.e0;
        real _t10B7 = 0.1e1;
        real _t10B8 = 0.e0;
        vec4 _t10B9 = [_t10B5, _t10B6, _t10B7, _t10B8];
        real _t10BA = 0.1e1;
        real _t10BB = 0.e0;
        real _t10BC = 0.e0;
        real _t10BD = 0.e0;
        vec4 _t10BE = [_t10BA, _t10BB, _t10BC, _t10BD];
        real _t10BF = 0.e0;
        real _t10C0 = 0.e0;
        real _t10C1 = 0.e0;
        real _t10C2 = 0.1e1;
        vec4 _t10C3 = [_t10BF, _t10C0, _t10C1, _t10C2];
        tensor[4,4] _t10C4 = [_t10B4, _t10B9, _t10BE, _t10C3];
        tensor[4,4][4] _t10C5 = {_t1085, _t109A, _t10AF, _t10C4};
        real _t10C6 = -0.1e1;
        real _t10C7 = -0.57735026919e0;
        real _t10C8 = -0.1e1;
        real _t10C9 = 0.1e1;
        vec4 _t10CA = [_t10C6, _t10C7, _t10C8, _t10C9];
        real _t10CB = 0.1e1;
        real _t10CC = -0.57735026919e0;
        real _t10CD = 0.e0;
        real _t10CE = 0.e0;
        vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
        real _t10D0 = 0.e0;
        real _t10D1 = -0.57735026919e0;
        real _t10D2 = 0.1e1;
        real _t10D3 = 0.e0;
        vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
        real _t10D5 = 0.e0;
        real _t10D6 = 0.e0;
        real _t10D7 = 0.e0;
        real _t10D8 = 0.1e1;
        vec4 _t10D9 = [_t10D5, _t10D6, _t10D7, _t10D8];
        tensor[4,4] _t10DA = [_t10CA, _t10CF, _t10D4, _t10D9];
        real _t10DB = 0.e0;
        real _t10DC = -0.1e1;
        real _t10DD = 0.e0;
        real _t10DE = 0.e0;
        vec4 _t10DF = [_t10DB, _t10DC, _t10DD, _t10DE];
        real _t10E0 = 0.1e1;
        real _t10E1 = 0.e0;
        real _t10E2 = 0.e0;
        real _t10E3 = 0.e0;
        vec4 _t10E4 = [_t10E0, _t10E1, _t10E2, _t10E3];
        real _t10E5 = 0.e0;
        real _t10E6 = 0.e0;
        real _t10E7 = 0.1e1;
        real _t10E8 = 0.e0;
        vec4 _t10E9 = [_t10E5, _t10E6, _t10E7, _t10E8];
        real _t10EA = 0.e0;
        real _t10EB = 0.e0;
        real _t10EC = 0.e0;
        real _t10ED = 0.1e1;
        vec4 _t10EE = [_t10EA, _t10EB, _t10EC, _t10ED];
        tensor[4,4] _t10EF = [_t10DF, _t10E4, _t10E9, _t10EE];
        real _t10F0 = 0.1e1;
        real _t10F1 = 0.e0;
        real _t10F2 = 0.e0;
        real _t10F3 = 0.e0;
        vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
        real _t10F5 = 0.e0;
        real _t10F6 = 0.1e1;
        real _t10F7 = 0.e0;
        real _t10F8 = 0.e0;
        vec4 _t10F9 = [_t10F5, _t10F6, _t10F7, _t10F8];
        real _t10FA = 0.e0;
        real _t10FB = 0.e0;
        real _t10FC = 0.1e1;
        real _t10FD = 0.e0;
        vec4 _t10FE = [_t10FA, _t10FB, _t10FC, _t10FD];
        real _t10FF = 0.e0;
        real _t1100 = 0.e0;
        real _t1101 = 0.e0;
        real _t1102 = 0.1e1;
        vec4 _t1103 = [_t10FF, _t1100, _t1101, _t1102];
        tensor[4,4] _t1104 = [_t10F4, _t10F9, _t10FE, _t1103];
        real _t1105 = 0.1e1;
        real _t1106 = 0.e0;
        real _t1107 = 0.e0;
        real _t1108 = 0.e0;
        vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
        real _t110A = 0.e0;
        real _t110B = 0.e0;
        real _t110C = 0.1e1;
        real _t110D = 0.e0;
        vec4 _t110E = [_t110A, _t110B, _t110C, _t110D];
        real _t110F = 0.e0;
        real _t1110 = -0.1e1;
        real _t1111 = 0.e0;
        real _t1112 = 0.e0;
        vec4 _t1113 = [_t110F, _t1110, _t1111, _t1112];
        real _t1114 = 0.e0;
        real _t1115 = 0.e0;
        real _t1116 = 0.e0;
        real _t1117 = 0.1e1;
        vec4 _t1118 = [_t1114, _t1115, _t1116, _t1117];
        tensor[4,4] _t1119 = [_t1109, _t110E, _t1113, _t1118];
        tensor[4,4][4] _t111A = {_t10DA, _t10EF, _t1104, _t1119};
        real _t111B = -0.1e1;
        real _t111C = -0.1e1;
        real _t111D = 0.57735026919e0;
        real _t111E = 0.1e1;
        vec4 _t111F = [_t111B, _t111C, _t111D, _t111E];
        real _t1120 = 0.1e1;
        real _t1121 = 0.e0;
        real _t1122 = 0.57735026919e0;
        real _t1123 = 0.e0;
        vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
        real _t1125 = 0.e0;
        real _t1126 = 0.1e1;
        real _t1127 = 0.57735026919e0;
        real _t1128 = 0.e0;
        vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
        real _t112A = 0.e0;
        real _t112B = 0.e0;
        real _t112C = 0.e0;
        real _t112D = 0.1e1;
        vec4 _t112E = [_t112A, _t112B, _t112C, _t112D];
        tensor[4,4] _t112F = [_t111F, _t1124, _t1129, _t112E];
        real _t1130 = 0.e0;
        real _t1131 = 0.e0;
        real _t1132 = 0.1e1;
        real _t1133 = 0.e0;
        vec4 _t1134 = [_t1130, _t1131, _t1132, _t1133];
        real _t1135 = 0.1e1;
        real _t1136 = 0.e0;
        real _t1137 = 0.e0;
        real _t1138 = 0.e0;
        vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
        real _t113A = 0.e0;
        real _t113B = 0.1e1;
        real _t113C = 0.e0;
        real _t113D = 0.e0;
        vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
        real _t113F = 0.e0;
        real _t1140 = 0.e0;
        real _t1141 = 0.e0;
        real _t1142 = 0.1e1;
        vec4 _t1143 = [_t113F, _t1140, _t1141, _t1142];
        tensor[4,4] _t1144 = [_t1134, _t1139, _t113E, _t1143];
        real _t1145 = 0.1e1;
        real _t1146 = 0.e0;
        real _t1147 = 0.e0;
        real _t1148 = 0.e0;
        vec4 _t1149 = [_t1145, _t1146, _t1147, _t1148];
        real _t114A = 0.e0;
        real _t114B = 0.e0;
        real _t114C = -0.1e1;
        real _t114D = 0.e0;
        vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
        real _t114F = 0.e0;
        real _t1150 = 0.1e1;
        real _t1151 = 0.e0;
        real _t1152 = 0.e0;
        vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
        real _t1154 = 0.e0;
        real _t1155 = 0.e0;
        real _t1156 = 0.e0;
        real _t1157 = 0.1e1;
        vec4 _t1158 = [_t1154, _t1155, _t1156, _t1157];
        tensor[4,4] _t1159 = [_t1149, _t114E, _t1153, _t1158];
        real _t115A = 0.1e1;
        real _t115B = 0.e0;
        real _t115C = 0.e0;
        real _t115D = 0.e0;
        vec4 _t115E = [_t115A, _t115B, _t115C, _t115D];
        real _t115F = 0.e0;
        real _t1160 = 0.1e1;
        real _t1161 = 0.e0;
        real _t1162 = 0.e0;
        vec4 _t1163 = [_t115F, _t1160, _t1161, _t1162];
        real _t1164 = 0.e0;
        real _t1165 = 0.e0;
        real _t1166 = 0.1e1;
        real _t1167 = 0.e0;
        vec4 _t1168 = [_t1164, _t1165, _t1166, _t1167];
        real _t1169 = 0.e0;
        real _t116A = 0.e0;
        real _t116B = 0.e0;
        real _t116C = 0.1e1;
        vec4 _t116D = [_t1169, _t116A, _t116B, _t116C];
        tensor[4,4] _t116E = [_t115E, _t1163, _t1168, _t116D];
        tensor[4,4][4] _t116F = {_t112F, _t1144, _t1159, _t116E};
        tensor[4,4][4][4] _t1170 = {_t1070, _t10C5, _t111A, _t116F};
        real _t1171 = _t0E3A[1];
        int _t1172 = prim $r2i01B7 (_t1171);
        tensor[4,4][4] _t1173 = prim $sub01C0<tensor[4,4][4]; %4> (_t1170, _t1172);
        real _t1174 = _t0E3A[1];
        int _t1175 = prim $r2i01B7 (_t1174);
        int[2] _t1176 = func nextCell4048A (_t1175, _t0E36, _t0E35);
        int _t1177 = 1;
        int _t1178 = prim $sub01C0<int; %2> (_t1176, _t1177);
        tensor[4,4] _t1179 = prim $sub01C0<tensor[4,4]; %4> (_t1173, _t1178);
        real _t117A = _t0E3A[0];
        vec3 _t117B = prim *0036<$[3]> (_t117A, deltaP0E00);
        vec3 _t117C = prim +0017<$[3]> (_t117B, _t0E37);
        real _t117D = _t117C[0];
        real _t117E = _t0E3A[0];
        vec3 _t117F = prim *0036<$[3]> (_t117E, deltaP0E00);
        vec3 _t1180 = prim +0017<$[3]> (_t117F, _t0E37);
        real _t1181 = _t1180[1];
        real _t1182 = _t0E3A[0];
        vec3 _t1183 = prim *0036<$[3]> (_t1182, deltaP0E00);
        vec3 _t1184 = prim +0017<$[3]> (_t1183, _t0E37);
        real _t1185 = _t1184[2];
        real _t1186 = 0.1e1;
        vec4 _t1187 = [_t117D, _t1181, _t1185, _t1186];
        vec4 _t1188 = prim •00CE<$[4,4]; $[4]; $[4]> (_t1179, _t1187);
        real _t1189 = _t1188[0];
        real _t118A = 0.1e1;
        real _t118B = 0.e0;
        real _t118C = 0.e0;
        real _t118D = 0.e0;
        vec4 _t118E = [_t118A, _t118B, _t118C, _t118D];
        real _t118F = 0.e0;
        real _t1190 = 0.1e1;
        real _t1191 = 0.e0;
        real _t1192 = 0.e0;
        vec4 _t1193 = [_t118F, _t1190, _t1191, _t1192];
        real _t1194 = 0.e0;
        real _t1195 = 0.e0;
        real _t1196 = 0.1e1;
        real _t1197 = 0.e0;
        vec4 _t1198 = [_t1194, _t1195, _t1196, _t1197];
        real _t1199 = 0.971445146547e-16;
        real _t119A = 0.e0;
        real _t119B = 0.e0;
        real _t119C = 0.1e1;
        vec4 _t119D = [_t1199, _t119A, _t119B, _t119C];
        tensor[4,4] _t119E = [_t118E, _t1193, _t1198, _t119D];
        real _t119F = 0.57735026919e0;
        real _t11A0 = 0.57735026919e0;
        real _t11A1 = 0.57735026919e0;
        real _t11A2 = -0.57735026919e0;
        vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
        real _t11A4 = -0.333333333333e0;
        real _t11A5 = 0.666666666667e0;
        real _t11A6 = -0.333333333333e0;
        real _t11A7 = 0.333333333333e0;
        vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
        real _t11A9 = -0.333333333333e0;
        real _t11AA = -0.333333333333e0;
        real _t11AB = 0.666666666667e0;
        real _t11AC = 0.333333333333e0;
        vec4 _t11AD = [_t11A9, _t11AA, _t11AB, _t11AC];
        real _t11AE = 0.971445146547e-16;
        real _t11AF = 0.e0;
        real _t11B0 = 0.e0;
        real _t11B1 = 0.1e1;
        vec4 _t11B2 = [_t11AE, _t11AF, _t11B0, _t11B1];
        tensor[4,4] _t11B3 = [_t11A3, _t11A8, _t11AD, _t11B2];
        real _t11B4 = -0.333333333333e0;
        real _t11B5 = 0.666666666667e0;
        real _t11B6 = -0.333333333333e0;
        real _t11B7 = 0.333333333333e0;
        vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
        real _t11B9 = -0.57735026919e0;
        real _t11BA = -0.57735026919e0;
        real _t11BB = -0.57735026919e0;
        real _t11BC = 0.57735026919e0;
        vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
        real _t11BE = -0.333333333333e0;
        real _t11BF = -0.333333333333e0;
        real _t11C0 = 0.666666666667e0;
        real _t11C1 = 0.333333333333e0;
        vec4 _t11C2 = [_t11BE, _t11BF, _t11C0, _t11C1];
        real _t11C3 = 0.971445146547e-16;
        real _t11C4 = 0.e0;
        real _t11C5 = 0.e0;
        real _t11C6 = 0.1e1;
        vec4 _t11C7 = [_t11C3, _t11C4, _t11C5, _t11C6];
        tensor[4,4] _t11C8 = [_t11B8, _t11BD, _t11C2, _t11C7];
        real _t11C9 = -0.333333333333e0;
        real _t11CA = 0.666666666667e0;
        real _t11CB = -0.333333333333e0;
        real _t11CC = 0.333333333333e0;
        vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
        real _t11CE = -0.333333333333e0;
        real _t11CF = -0.333333333333e0;
        real _t11D0 = 0.666666666667e0;
        real _t11D1 = 0.333333333333e0;
        vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
        real _t11D3 = 0.57735026919e0;
        real _t11D4 = 0.57735026919e0;
        real _t11D5 = 0.57735026919e0;
        real _t11D6 = -0.57735026919e0;
        vec4 _t11D7 = [_t11D3, _t11D4, _t11D5, _t11D6];
        real _t11D8 = 0.971445146547e-16;
        real _t11D9 = 0.e0;
        real _t11DA = 0.e0;
        real _t11DB = 0.1e1;
        vec4 _t11DC = [_t11D8, _t11D9, _t11DA, _t11DB];
        tensor[4,4] _t11DD = [_t11CD, _t11D2, _t11D7, _t11DC];
        tensor[4,4][4] _t11DE = {_t119E, _t11B3, _t11C8, _t11DD};
        real _t11DF = 0.57735026919e0;
        real _t11E0 = -0.1e1;
        real _t11E1 = -0.1e1;
        real _t11E2 = 0.1e1;
        vec4 _t11E3 = [_t11DF, _t11E0, _t11E1, _t11E2];
        real _t11E4 = 0.57735026919e0;
        real _t11E5 = 0.1e1;
        real _t11E6 = 0.e0;
        real _t11E7 = 0.e0;
        vec4 _t11E8 = [_t11E4, _t11E5, _t11E6, _t11E7];
        real _t11E9 = 0.57735026919e0;
        real _t11EA = 0.e0;
        real _t11EB = 0.1e1;
        real _t11EC = 0.e0;
        vec4 _t11ED = [_t11E9, _t11EA, _t11EB, _t11EC];
        real _t11EE = 0.e0;
        real _t11EF = 0.e0;
        real _t11F0 = 0.e0;
        real _t11F1 = 0.1e1;
        vec4 _t11F2 = [_t11EE, _t11EF, _t11F0, _t11F1];
        tensor[4,4] _t11F3 = [_t11E3, _t11E8, _t11ED, _t11F2];
        real _t11F4 = 0.1e1;
        real _t11F5 = 0.e0;
        real _t11F6 = 0.e0;
        real _t11F7 = 0.e0;
        vec4 _t11F8 = [_t11F4, _t11F5, _t11F6, _t11F7];
        real _t11F9 = 0.e0;
        real _t11FA = 0.1e1;
        real _t11FB = 0.e0;
        real _t11FC = 0.e0;
        vec4 _t11FD = [_t11F9, _t11FA, _t11FB, _t11FC];
        real _t11FE = 0.e0;
        real _t11FF = 0.e0;
        real _t1200 = 0.1e1;
        real _t1201 = 0.e0;
        vec4 _t1202 = [_t11FE, _t11FF, _t1200, _t1201];
        real _t1203 = 0.e0;
        real _t1204 = 0.e0;
        real _t1205 = 0.e0;
        real _t1206 = 0.1e1;
        vec4 _t1207 = [_t1203, _t1204, _t1205, _t1206];
        tensor[4,4] _t1208 = [_t11F8, _t11FD, _t1202, _t1207];
        real _t1209 = 0.e0;
        real _t120A = 0.1e1;
        real _t120B = 0.e0;
        real _t120C = 0.e0;
        vec4 _t120D = [_t1209, _t120A, _t120B, _t120C];
        real _t120E = -0.1e1;
        real _t120F = 0.e0;
        real _t1210 = 0.e0;
        real _t1211 = 0.e0;
        vec4 _t1212 = [_t120E, _t120F, _t1210, _t1211];
        real _t1213 = 0.e0;
        real _t1214 = 0.e0;
        real _t1215 = 0.1e1;
        real _t1216 = 0.e0;
        vec4 _t1217 = [_t1213, _t1214, _t1215, _t1216];
        real _t1218 = 0.e0;
        real _t1219 = 0.e0;
        real _t121A = 0.e0;
        real _t121B = 0.1e1;
        vec4 _t121C = [_t1218, _t1219, _t121A, _t121B];
        tensor[4,4] _t121D = [_t120D, _t1212, _t1217, _t121C];
        real _t121E = 0.e0;
        real _t121F = 0.1e1;
        real _t1220 = 0.e0;
        real _t1221 = 0.e0;
        vec4 _t1222 = [_t121E, _t121F, _t1220, _t1221];
        real _t1223 = 0.e0;
        real _t1224 = 0.e0;
        real _t1225 = 0.1e1;
        real _t1226 = 0.e0;
        vec4 _t1227 = [_t1223, _t1224, _t1225, _t1226];
        real _t1228 = 0.1e1;
        real _t1229 = 0.e0;
        real _t122A = 0.e0;
        real _t122B = 0.e0;
        vec4 _t122C = [_t1228, _t1229, _t122A, _t122B];
        real _t122D = 0.e0;
        real _t122E = 0.e0;
        real _t122F = 0.e0;
        real _t1230 = 0.1e1;
        vec4 _t1231 = [_t122D, _t122E, _t122F, _t1230];
        tensor[4,4] _t1232 = [_t1222, _t1227, _t122C, _t1231];
        tensor[4,4][4] _t1233 = {_t11F3, _t1208, _t121D, _t1232};
        real _t1234 = -0.1e1;
        real _t1235 = -0.57735026919e0;
        real _t1236 = -0.1e1;
        real _t1237 = 0.1e1;
        vec4 _t1238 = [_t1234, _t1235, _t1236, _t1237];
        real _t1239 = 0.1e1;
        real _t123A = -0.57735026919e0;
        real _t123B = 0.e0;
        real _t123C = 0.e0;
        vec4 _t123D = [_t1239, _t123A, _t123B, _t123C];
        real _t123E = 0.e0;
        real _t123F = -0.57735026919e0;
        real _t1240 = 0.1e1;
        real _t1241 = 0.e0;
        vec4 _t1242 = [_t123E, _t123F, _t1240, _t1241];
        real _t1243 = 0.e0;
        real _t1244 = 0.e0;
        real _t1245 = 0.e0;
        real _t1246 = 0.1e1;
        vec4 _t1247 = [_t1243, _t1244, _t1245, _t1246];
        tensor[4,4] _t1248 = [_t1238, _t123D, _t1242, _t1247];
        real _t1249 = 0.e0;
        real _t124A = -0.1e1;
        real _t124B = 0.e0;
        real _t124C = 0.e0;
        vec4 _t124D = [_t1249, _t124A, _t124B, _t124C];
        real _t124E = 0.1e1;
        real _t124F = 0.e0;
        real _t1250 = 0.e0;
        real _t1251 = 0.e0;
        vec4 _t1252 = [_t124E, _t124F, _t1250, _t1251];
        real _t1253 = 0.e0;
        real _t1254 = 0.e0;
        real _t1255 = 0.1e1;
        real _t1256 = 0.e0;
        vec4 _t1257 = [_t1253, _t1254, _t1255, _t1256];
        real _t1258 = 0.e0;
        real _t1259 = 0.e0;
        real _t125A = 0.e0;
        real _t125B = 0.1e1;
        vec4 _t125C = [_t1258, _t1259, _t125A, _t125B];
        tensor[4,4] _t125D = [_t124D, _t1252, _t1257, _t125C];
        real _t125E = 0.1e1;
        real _t125F = 0.e0;
        real _t1260 = 0.e0;
        real _t1261 = 0.e0;
        vec4 _t1262 = [_t125E, _t125F, _t1260, _t1261];
        real _t1263 = 0.e0;
        real _t1264 = 0.1e1;
        real _t1265 = 0.e0;
        real _t1266 = 0.e0;
        vec4 _t1267 = [_t1263, _t1264, _t1265, _t1266];
        real _t1268 = 0.e0;
        real _t1269 = 0.e0;
        real _t126A = 0.1e1;
        real _t126B = 0.e0;
        vec4 _t126C = [_t1268, _t1269, _t126A, _t126B];
        real _t126D = 0.e0;
        real _t126E = 0.e0;
        real _t126F = 0.e0;
        real _t1270 = 0.1e1;
        vec4 _t1271 = [_t126D, _t126E, _t126F, _t1270];
        tensor[4,4] _t1272 = [_t1262, _t1267, _t126C, _t1271];
        real _t1273 = 0.1e1;
        real _t1274 = 0.e0;
        real _t1275 = 0.e0;
        real _t1276 = 0.e0;
        vec4 _t1277 = [_t1273, _t1274, _t1275, _t1276];
        real _t1278 = 0.e0;
        real _t1279 = 0.e0;
        real _t127A = 0.1e1;
        real _t127B = 0.e0;
        vec4 _t127C = [_t1278, _t1279, _t127A, _t127B];
        real _t127D = 0.e0;
        real _t127E = -0.1e1;
        real _t127F = 0.e0;
        real _t1280 = 0.e0;
        vec4 _t1281 = [_t127D, _t127E, _t127F, _t1280];
        real _t1282 = 0.e0;
        real _t1283 = 0.e0;
        real _t1284 = 0.e0;
        real _t1285 = 0.1e1;
        vec4 _t1286 = [_t1282, _t1283, _t1284, _t1285];
        tensor[4,4] _t1287 = [_t1277, _t127C, _t1281, _t1286];
        tensor[4,4][4] _t1288 = {_t1248, _t125D, _t1272, _t1287};
        real _t1289 = -0.1e1;
        real _t128A = -0.1e1;
        real _t128B = 0.57735026919e0;
        real _t128C = 0.1e1;
        vec4 _t128D = [_t1289, _t128A, _t128B, _t128C];
        real _t128E = 0.1e1;
        real _t128F = 0.e0;
        real _t1290 = 0.57735026919e0;
        real _t1291 = 0.e0;
        vec4 _t1292 = [_t128E, _t128F, _t1290, _t1291];
        real _t1293 = 0.e0;
        real _t1294 = 0.1e1;
        real _t1295 = 0.57735026919e0;
        real _t1296 = 0.e0;
        vec4 _t1297 = [_t1293, _t1294, _t1295, _t1296];
        real _t1298 = 0.e0;
        real _t1299 = 0.e0;
        real _t129A = 0.e0;
        real _t129B = 0.1e1;
        vec4 _t129C = [_t1298, _t1299, _t129A, _t129B];
        tensor[4,4] _t129D = [_t128D, _t1292, _t1297, _t129C];
        real _t129E = 0.e0;
        real _t129F = 0.e0;
        real _t12A0 = 0.1e1;
        real _t12A1 = 0.e0;
        vec4 _t12A2 = [_t129E, _t129F, _t12A0, _t12A1];
        real _t12A3 = 0.1e1;
        real _t12A4 = 0.e0;
        real _t12A5 = 0.e0;
        real _t12A6 = 0.e0;
        vec4 _t12A7 = [_t12A3, _t12A4, _t12A5, _t12A6];
        real _t12A8 = 0.e0;
        real _t12A9 = 0.1e1;
        real _t12AA = 0.e0;
        real _t12AB = 0.e0;
        vec4 _t12AC = [_t12A8, _t12A9, _t12AA, _t12AB];
        real _t12AD = 0.e0;
        real _t12AE = 0.e0;
        real _t12AF = 0.e0;
        real _t12B0 = 0.1e1;
        vec4 _t12B1 = [_t12AD, _t12AE, _t12AF, _t12B0];
        tensor[4,4] _t12B2 = [_t12A2, _t12A7, _t12AC, _t12B1];
        real _t12B3 = 0.1e1;
        real _t12B4 = 0.e0;
        real _t12B5 = 0.e0;
        real _t12B6 = 0.e0;
        vec4 _t12B7 = [_t12B3, _t12B4, _t12B5, _t12B6];
        real _t12B8 = 0.e0;
        real _t12B9 = 0.e0;
        real _t12BA = -0.1e1;
        real _t12BB = 0.e0;
        vec4 _t12BC = [_t12B8, _t12B9, _t12BA, _t12BB];
        real _t12BD = 0.e0;
        real _t12BE = 0.1e1;
        real _t12BF = 0.e0;
        real _t12C0 = 0.e0;
        vec4 _t12C1 = [_t12BD, _t12BE, _t12BF, _t12C0];
        real _t12C2 = 0.e0;
        real _t12C3 = 0.e0;
        real _t12C4 = 0.e0;
        real _t12C5 = 0.1e1;
        vec4 _t12C6 = [_t12C2, _t12C3, _t12C4, _t12C5];
        tensor[4,4] _t12C7 = [_t12B7, _t12BC, _t12C1, _t12C6];
        real _t12C8 = 0.1e1;
        real _t12C9 = 0.e0;
        real _t12CA = 0.e0;
        real _t12CB = 0.e0;
        vec4 _t12CC = [_t12C8, _t12C9, _t12CA, _t12CB];
        real _t12CD = 0.e0;
        real _t12CE = 0.1e1;
        real _t12CF = 0.e0;
        real _t12D0 = 0.e0;
        vec4 _t12D1 = [_t12CD, _t12CE, _t12CF, _t12D0];
        real _t12D2 = 0.e0;
        real _t12D3 = 0.e0;
        real _t12D4 = 0.1e1;
        real _t12D5 = 0.e0;
        vec4 _t12D6 = [_t12D2, _t12D3, _t12D4, _t12D5];
        real _t12D7 = 0.e0;
        real _t12D8 = 0.e0;
        real _t12D9 = 0.e0;
        real _t12DA = 0.1e1;
        vec4 _t12DB = [_t12D7, _t12D8, _t12D9, _t12DA];
        tensor[4,4] _t12DC = [_t12CC, _t12D1, _t12D6, _t12DB];
        tensor[4,4][4] _t12DD = {_t129D, _t12B2, _t12C7, _t12DC};
        tensor[4,4][4][4] _t12DE = {_t11DE, _t1233, _t1288, _t12DD};
        real _t12DF = _t0E3A[1];
        int _t12E0 = prim $r2i01B7 (_t12DF);
        tensor[4,4][4] _t12E1 = prim $sub01C0<tensor[4,4][4]; %4> (_t12DE, _t12E0);
        real _t12E2 = _t0E3A[1];
        int _t12E3 = prim $r2i01B7 (_t12E2);
        int[2] _t12E4 = func nextCell4048A (_t12E3, _t0E36, _t0E35);
        int _t12E5 = 1;
        int _t12E6 = prim $sub01C0<int; %2> (_t12E4, _t12E5);
        tensor[4,4] _t12E7 = prim $sub01C0<tensor[4,4]; %4> (_t12E1, _t12E6);
        real _t12E8 = _t0E3A[0];
        vec3 _t12E9 = prim *0036<$[3]> (_t12E8, deltaP0E00);
        vec3 _t12EA = prim +0017<$[3]> (_t12E9, _t0E37);
        real _t12EB = _t12EA[0];
        real _t12EC = _t0E3A[0];
        vec3 _t12ED = prim *0036<$[3]> (_t12EC, deltaP0E00);
        vec3 _t12EE = prim +0017<$[3]> (_t12ED, _t0E37);
        real _t12EF = _t12EE[1];
        real _t12F0 = _t0E3A[0];
        vec3 _t12F1 = prim *0036<$[3]> (_t12F0, deltaP0E00);
        vec3 _t12F2 = prim +0017<$[3]> (_t12F1, _t0E37);
        real _t12F3 = _t12F2[2];
        real _t12F4 = 0.1e1;
        vec4 _t12F5 = [_t12EB, _t12EF, _t12F3, _t12F4];
        vec4 _t12F6 = prim •00CE<$[4,4]; $[4]; $[4]> (_t12E7, _t12F5);
        real _t12F7 = _t12F6[1];
        real _t12F8 = 0.1e1;
        real _t12F9 = 0.e0;
        real _t12FA = 0.e0;
        real _t12FB = 0.e0;
        vec4 _t12FC = [_t12F8, _t12F9, _t12FA, _t12FB];
        real _t12FD = 0.e0;
        real _t12FE = 0.1e1;
        real _t12FF = 0.e0;
        real _t1300 = 0.e0;
        vec4 _t1301 = [_t12FD, _t12FE, _t12FF, _t1300];
        real _t1302 = 0.e0;
        real _t1303 = 0.e0;
        real _t1304 = 0.1e1;
        real _t1305 = 0.e0;
        vec4 _t1306 = [_t1302, _t1303, _t1304, _t1305];
        real _t1307 = 0.971445146547e-16;
        real _t1308 = 0.e0;
        real _t1309 = 0.e0;
        real _t130A = 0.1e1;
        vec4 _t130B = [_t1307, _t1308, _t1309, _t130A];
        tensor[4,4] _t130C = [_t12FC, _t1301, _t1306, _t130B];
        real _t130D = 0.57735026919e0;
        real _t130E = 0.57735026919e0;
        real _t130F = 0.57735026919e0;
        real _t1310 = -0.57735026919e0;
        vec4 _t1311 = [_t130D, _t130E, _t130F, _t1310];
        real _t1312 = -0.333333333333e0;
        real _t1313 = 0.666666666667e0;
        real _t1314 = -0.333333333333e0;
        real _t1315 = 0.333333333333e0;
        vec4 _t1316 = [_t1312, _t1313, _t1314, _t1315];
        real _t1317 = -0.333333333333e0;
        real _t1318 = -0.333333333333e0;
        real _t1319 = 0.666666666667e0;
        real _t131A = 0.333333333333e0;
        vec4 _t131B = [_t1317, _t1318, _t1319, _t131A];
        real _t131C = 0.971445146547e-16;
        real _t131D = 0.e0;
        real _t131E = 0.e0;
        real _t131F = 0.1e1;
        vec4 _t1320 = [_t131C, _t131D, _t131E, _t131F];
        tensor[4,4] _t1321 = [_t1311, _t1316, _t131B, _t1320];
        real _t1322 = -0.333333333333e0;
        real _t1323 = 0.666666666667e0;
        real _t1324 = -0.333333333333e0;
        real _t1325 = 0.333333333333e0;
        vec4 _t1326 = [_t1322, _t1323, _t1324, _t1325];
        real _t1327 = -0.57735026919e0;
        real _t1328 = -0.57735026919e0;
        real _t1329 = -0.57735026919e0;
        real _t132A = 0.57735026919e0;
        vec4 _t132B = [_t1327, _t1328, _t1329, _t132A];
        real _t132C = -0.333333333333e0;
        real _t132D = -0.333333333333e0;
        real _t132E = 0.666666666667e0;
        real _t132F = 0.333333333333e0;
        vec4 _t1330 = [_t132C, _t132D, _t132E, _t132F];
        real _t1331 = 0.971445146547e-16;
        real _t1332 = 0.e0;
        real _t1333 = 0.e0;
        real _t1334 = 0.1e1;
        vec4 _t1335 = [_t1331, _t1332, _t1333, _t1334];
        tensor[4,4] _t1336 = [_t1326, _t132B, _t1330, _t1335];
        real _t1337 = -0.333333333333e0;
        real _t1338 = 0.666666666667e0;
        real _t1339 = -0.333333333333e0;
        real _t133A = 0.333333333333e0;
        vec4 _t133B = [_t1337, _t1338, _t1339, _t133A];
        real _t133C = -0.333333333333e0;
        real _t133D = -0.333333333333e0;
        real _t133E = 0.666666666667e0;
        real _t133F = 0.333333333333e0;
        vec4 _t1340 = [_t133C, _t133D, _t133E, _t133F];
        real _t1341 = 0.57735026919e0;
        real _t1342 = 0.57735026919e0;
        real _t1343 = 0.57735026919e0;
        real _t1344 = -0.57735026919e0;
        vec4 _t1345 = [_t1341, _t1342, _t1343, _t1344];
        real _t1346 = 0.971445146547e-16;
        real _t1347 = 0.e0;
        real _t1348 = 0.e0;
        real _t1349 = 0.1e1;
        vec4 _t134A = [_t1346, _t1347, _t1348, _t1349];
        tensor[4,4] _t134B = [_t133B, _t1340, _t1345, _t134A];
        tensor[4,4][4] _t134C = {_t130C, _t1321, _t1336, _t134B};
        real _t134D = 0.57735026919e0;
        real _t134E = -0.1e1;
        real _t134F = -0.1e1;
        real _t1350 = 0.1e1;
        vec4 _t1351 = [_t134D, _t134E, _t134F, _t1350];
        real _t1352 = 0.57735026919e0;
        real _t1353 = 0.1e1;
        real _t1354 = 0.e0;
        real _t1355 = 0.e0;
        vec4 _t1356 = [_t1352, _t1353, _t1354, _t1355];
        real _t1357 = 0.57735026919e0;
        real _t1358 = 0.e0;
        real _t1359 = 0.1e1;
        real _t135A = 0.e0;
        vec4 _t135B = [_t1357, _t1358, _t1359, _t135A];
        real _t135C = 0.e0;
        real _t135D = 0.e0;
        real _t135E = 0.e0;
        real _t135F = 0.1e1;
        vec4 _t1360 = [_t135C, _t135D, _t135E, _t135F];
        tensor[4,4] _t1361 = [_t1351, _t1356, _t135B, _t1360];
        real _t1362 = 0.1e1;
        real _t1363 = 0.e0;
        real _t1364 = 0.e0;
        real _t1365 = 0.e0;
        vec4 _t1366 = [_t1362, _t1363, _t1364, _t1365];
        real _t1367 = 0.e0;
        real _t1368 = 0.1e1;
        real _t1369 = 0.e0;
        real _t136A = 0.e0;
        vec4 _t136B = [_t1367, _t1368, _t1369, _t136A];
        real _t136C = 0.e0;
        real _t136D = 0.e0;
        real _t136E = 0.1e1;
        real _t136F = 0.e0;
        vec4 _t1370 = [_t136C, _t136D, _t136E, _t136F];
        real _t1371 = 0.e0;
        real _t1372 = 0.e0;
        real _t1373 = 0.e0;
        real _t1374 = 0.1e1;
        vec4 _t1375 = [_t1371, _t1372, _t1373, _t1374];
        tensor[4,4] _t1376 = [_t1366, _t136B, _t1370, _t1375];
        real _t1377 = 0.e0;
        real _t1378 = 0.1e1;
        real _t1379 = 0.e0;
        real _t137A = 0.e0;
        vec4 _t137B = [_t1377, _t1378, _t1379, _t137A];
        real _t137C = -0.1e1;
        real _t137D = 0.e0;
        real _t137E = 0.e0;
        real _t137F = 0.e0;
        vec4 _t1380 = [_t137C, _t137D, _t137E, _t137F];
        real _t1381 = 0.e0;
        real _t1382 = 0.e0;
        real _t1383 = 0.1e1;
        real _t1384 = 0.e0;
        vec4 _t1385 = [_t1381, _t1382, _t1383, _t1384];
        real _t1386 = 0.e0;
        real _t1387 = 0.e0;
        real _t1388 = 0.e0;
        real _t1389 = 0.1e1;
        vec4 _t138A = [_t1386, _t1387, _t1388, _t1389];
        tensor[4,4] _t138B = [_t137B, _t1380, _t1385, _t138A];
        real _t138C = 0.e0;
        real _t138D = 0.1e1;
        real _t138E = 0.e0;
        real _t138F = 0.e0;
        vec4 _t1390 = [_t138C, _t138D, _t138E, _t138F];
        real _t1391 = 0.e0;
        real _t1392 = 0.e0;
        real _t1393 = 0.1e1;
        real _t1394 = 0.e0;
        vec4 _t1395 = [_t1391, _t1392, _t1393, _t1394];
        real _t1396 = 0.1e1;
        real _t1397 = 0.e0;
        real _t1398 = 0.e0;
        real _t1399 = 0.e0;
        vec4 _t139A = [_t1396, _t1397, _t1398, _t1399];
        real _t139B = 0.e0;
        real _t139C = 0.e0;
        real _t139D = 0.e0;
        real _t139E = 0.1e1;
        vec4 _t139F = [_t139B, _t139C, _t139D, _t139E];
        tensor[4,4] _t13A0 = [_t1390, _t1395, _t139A, _t139F];
        tensor[4,4][4] _t13A1 = {_t1361, _t1376, _t138B, _t13A0};
        real _t13A2 = -0.1e1;
        real _t13A3 = -0.57735026919e0;
        real _t13A4 = -0.1e1;
        real _t13A5 = 0.1e1;
        vec4 _t13A6 = [_t13A2, _t13A3, _t13A4, _t13A5];
        real _t13A7 = 0.1e1;
        real _t13A8 = -0.57735026919e0;
        real _t13A9 = 0.e0;
        real _t13AA = 0.e0;
        vec4 _t13AB = [_t13A7, _t13A8, _t13A9, _t13AA];
        real _t13AC = 0.e0;
        real _t13AD = -0.57735026919e0;
        real _t13AE = 0.1e1;
        real _t13AF = 0.e0;
        vec4 _t13B0 = [_t13AC, _t13AD, _t13AE, _t13AF];
        real _t13B1 = 0.e0;
        real _t13B2 = 0.e0;
        real _t13B3 = 0.e0;
        real _t13B4 = 0.1e1;
        vec4 _t13B5 = [_t13B1, _t13B2, _t13B3, _t13B4];
        tensor[4,4] _t13B6 = [_t13A6, _t13AB, _t13B0, _t13B5];
        real _t13B7 = 0.e0;
        real _t13B8 = -0.1e1;
        real _t13B9 = 0.e0;
        real _t13BA = 0.e0;
        vec4 _t13BB = [_t13B7, _t13B8, _t13B9, _t13BA];
        real _t13BC = 0.1e1;
        real _t13BD = 0.e0;
        real _t13BE = 0.e0;
        real _t13BF = 0.e0;
        vec4 _t13C0 = [_t13BC, _t13BD, _t13BE, _t13BF];
        real _t13C1 = 0.e0;
        real _t13C2 = 0.e0;
        real _t13C3 = 0.1e1;
        real _t13C4 = 0.e0;
        vec4 _t13C5 = [_t13C1, _t13C2, _t13C3, _t13C4];
        real _t13C6 = 0.e0;
        real _t13C7 = 0.e0;
        real _t13C8 = 0.e0;
        real _t13C9 = 0.1e1;
        vec4 _t13CA = [_t13C6, _t13C7, _t13C8, _t13C9];
        tensor[4,4] _t13CB = [_t13BB, _t13C0, _t13C5, _t13CA];
        real _t13CC = 0.1e1;
        real _t13CD = 0.e0;
        real _t13CE = 0.e0;
        real _t13CF = 0.e0;
        vec4 _t13D0 = [_t13CC, _t13CD, _t13CE, _t13CF];
        real _t13D1 = 0.e0;
        real _t13D2 = 0.1e1;
        real _t13D3 = 0.e0;
        real _t13D4 = 0.e0;
        vec4 _t13D5 = [_t13D1, _t13D2, _t13D3, _t13D4];
        real _t13D6 = 0.e0;
        real _t13D7 = 0.e0;
        real _t13D8 = 0.1e1;
        real _t13D9 = 0.e0;
        vec4 _t13DA = [_t13D6, _t13D7, _t13D8, _t13D9];
        real _t13DB = 0.e0;
        real _t13DC = 0.e0;
        real _t13DD = 0.e0;
        real _t13DE = 0.1e1;
        vec4 _t13DF = [_t13DB, _t13DC, _t13DD, _t13DE];
        tensor[4,4] _t13E0 = [_t13D0, _t13D5, _t13DA, _t13DF];
        real _t13E1 = 0.1e1;
        real _t13E2 = 0.e0;
        real _t13E3 = 0.e0;
        real _t13E4 = 0.e0;
        vec4 _t13E5 = [_t13E1, _t13E2, _t13E3, _t13E4];
        real _t13E6 = 0.e0;
        real _t13E7 = 0.e0;
        real _t13E8 = 0.1e1;
        real _t13E9 = 0.e0;
        vec4 _t13EA = [_t13E6, _t13E7, _t13E8, _t13E9];
        real _t13EB = 0.e0;
        real _t13EC = -0.1e1;
        real _t13ED = 0.e0;
        real _t13EE = 0.e0;
        vec4 _t13EF = [_t13EB, _t13EC, _t13ED, _t13EE];
        real _t13F0 = 0.e0;
        real _t13F1 = 0.e0;
        real _t13F2 = 0.e0;
        real _t13F3 = 0.1e1;
        vec4 _t13F4 = [_t13F0, _t13F1, _t13F2, _t13F3];
        tensor[4,4] _t13F5 = [_t13E5, _t13EA, _t13EF, _t13F4];
        tensor[4,4][4] _t13F6 = {_t13B6, _t13CB, _t13E0, _t13F5};
        real _t13F7 = -0.1e1;
        real _t13F8 = -0.1e1;
        real _t13F9 = 0.57735026919e0;
        real _t13FA = 0.1e1;
        vec4 _t13FB = [_t13F7, _t13F8, _t13F9, _t13FA];
        real _t13FC = 0.1e1;
        real _t13FD = 0.e0;
        real _t13FE = 0.57735026919e0;
        real _t13FF = 0.e0;
        vec4 _t1400 = [_t13FC, _t13FD, _t13FE, _t13FF];
        real _t1401 = 0.e0;
        real _t1402 = 0.1e1;
        real _t1403 = 0.57735026919e0;
        real _t1404 = 0.e0;
        vec4 _t1405 = [_t1401, _t1402, _t1403, _t1404];
        real _t1406 = 0.e0;
        real _t1407 = 0.e0;
        real _t1408 = 0.e0;
        real _t1409 = 0.1e1;
        vec4 _t140A = [_t1406, _t1407, _t1408, _t1409];
        tensor[4,4] _t140B = [_t13FB, _t1400, _t1405, _t140A];
        real _t140C = 0.e0;
        real _t140D = 0.e0;
        real _t140E = 0.1e1;
        real _t140F = 0.e0;
        vec4 _t1410 = [_t140C, _t140D, _t140E, _t140F];
        real _t1411 = 0.1e1;
        real _t1412 = 0.e0;
        real _t1413 = 0.e0;
        real _t1414 = 0.e0;
        vec4 _t1415 = [_t1411, _t1412, _t1413, _t1414];
        real _t1416 = 0.e0;
        real _t1417 = 0.1e1;
        real _t1418 = 0.e0;
        real _t1419 = 0.e0;
        vec4 _t141A = [_t1416, _t1417, _t1418, _t1419];
        real _t141B = 0.e0;
        real _t141C = 0.e0;
        real _t141D = 0.e0;
        real _t141E = 0.1e1;
        vec4 _t141F = [_t141B, _t141C, _t141D, _t141E];
        tensor[4,4] _t1420 = [_t1410, _t1415, _t141A, _t141F];
        real _t1421 = 0.1e1;
        real _t1422 = 0.e0;
        real _t1423 = 0.e0;
        real _t1424 = 0.e0;
        vec4 _t1425 = [_t1421, _t1422, _t1423, _t1424];
        real _t1426 = 0.e0;
        real _t1427 = 0.e0;
        real _t1428 = -0.1e1;
        real _t1429 = 0.e0;
        vec4 _t142A = [_t1426, _t1427, _t1428, _t1429];
        real _t142B = 0.e0;
        real _t142C = 0.1e1;
        real _t142D = 0.e0;
        real _t142E = 0.e0;
        vec4 _t142F = [_t142B, _t142C, _t142D, _t142E];
        real _t1430 = 0.e0;
        real _t1431 = 0.e0;
        real _t1432 = 0.e0;
        real _t1433 = 0.1e1;
        vec4 _t1434 = [_t1430, _t1431, _t1432, _t1433];
        tensor[4,4] _t1435 = [_t1425, _t142A, _t142F, _t1434];
        real _t1436 = 0.1e1;
        real _t1437 = 0.e0;
        real _t1438 = 0.e0;
        real _t1439 = 0.e0;
        vec4 _t143A = [_t1436, _t1437, _t1438, _t1439];
        real _t143B = 0.e0;
        real _t143C = 0.1e1;
        real _t143D = 0.e0;
        real _t143E = 0.e0;
        vec4 _t143F = [_t143B, _t143C, _t143D, _t143E];
        real _t1440 = 0.e0;
        real _t1441 = 0.e0;
        real _t1442 = 0.1e1;
        real _t1443 = 0.e0;
        vec4 _t1444 = [_t1440, _t1441, _t1442, _t1443];
        real _t1445 = 0.e0;
        real _t1446 = 0.e0;
        real _t1447 = 0.e0;
        real _t1448 = 0.1e1;
        vec4 _t1449 = [_t1445, _t1446, _t1447, _t1448];
        tensor[4,4] _t144A = [_t143A, _t143F, _t1444, _t1449];
        tensor[4,4][4] _t144B = {_t140B, _t1420, _t1435, _t144A};
        tensor[4,4][4][4] _t144C = {_t134C, _t13A1, _t13F6, _t144B};
        real _t144D = _t0E3A[1];
        int _t144E = prim $r2i01B7 (_t144D);
        tensor[4,4][4] _t144F = prim $sub01C0<tensor[4,4][4]; %4> (_t144C, _t144E);
        real _t1450 = _t0E3A[1];
        int _t1451 = prim $r2i01B7 (_t1450);
        int[2] _t1452 = func nextCell4048A (_t1451, _t0E36, _t0E35);
        int _t1453 = 1;
        int _t1454 = prim $sub01C0<int; %2> (_t1452, _t1453);
        tensor[4,4] _t1455 = prim $sub01C0<tensor[4,4]; %4> (_t144F, _t1454);
        real _t1456 = _t0E3A[0];
        vec3 _t1457 = prim *0036<$[3]> (_t1456, deltaP0E00);
        vec3 _t1458 = prim +0017<$[3]> (_t1457, _t0E37);
        real _t1459 = _t1458[0];
        real _t145A = _t0E3A[0];
        vec3 _t145B = prim *0036<$[3]> (_t145A, deltaP0E00);
        vec3 _t145C = prim +0017<$[3]> (_t145B, _t0E37);
        real _t145D = _t145C[1];
        real _t145E = _t0E3A[0];
        vec3 _t145F = prim *0036<$[3]> (_t145E, deltaP0E00);
        vec3 _t1460 = prim +0017<$[3]> (_t145F, _t0E37);
        real _t1461 = _t1460[2];
        real _t1462 = 0.1e1;
        vec4 _t1463 = [_t1459, _t145D, _t1461, _t1462];
        vec4 _t1464 = prim •00CE<$[4,4]; $[4]; $[4]> (_t1455, _t1463);
        real _t1465 = _t1464[2];
        vec3 _t1466 = [_t1189, _t12F7, _t1465];
        real _t1467 = _t0E3A[1];
        int _t1468 = prim $r2i01B7 (_t1467);
        int[2] _t1469 = func nextCell4048A (_t1468, _t0E36, _t0E35);
        int _t146A = 1;
        int _t146B = prim $sub01C0<int; %2> (_t1469, _t146A);
        Femdata: MeshPos _t146C = extractFemItemN((_t0E35, _t101B, _t1466, _t146B),RefBuild(Mesh),);
        nmp0E3B = _t146C;
      } else {
        real _t146D = _t0E3A[0];
        vec3 _t146E = prim *0036<$[3]> (_t146D, deltaP0E00);
        vec3 _t146F = prim +0017<$[3]> (_t146E, _t0E37);
        Femdata: MeshPos _t1470 = extractFemItemN((_t0E35, _t146F),InvalidBuildBoundary(MeshPos),);
        nmp0E3B = _t1470;
      }
      bool _t0E3C;
      bool _t0E3D = extractFemItem(Valid(MeshPos), bool, nmp0E3B);
      bool _t0E3E = prim !00BC (_t0E3D);
      if _t0E3E {
        _t0E3C = true;
      } else {
        bool _t0E3F;
        real _t0E40 = 0.e0;
        bool _t0E41 = prim <007A (eTime0E33, _t0E40);
        if _t0E41 {
          _t0E3F = true;
        } else {
          bool _t0E42;
          real _t0E43 = 0.1e1;
          bool _t0E44 = prim >0080 (eTime0E33, _t0E43);
          if _t0E44 {
            _t0E42 = true;
          } else {
            _t0E42 = prim <007A (time0DEA, timeEps03B0);
          }
          _t0E3F = _t0E42;
        }
        _t0E3C = _t0E3F;
      }
      if _t0E3C {
        return nmp0E3B;
      }
      cmp0DEB = nmp0E3B;
    }
  }
  string _t0E46 = "Took stupid way out!\n";
  print (_t0E46);
  vec3 _t0E47;
  vec3 _t0EA0 = extractFemItem(RefPos(MeshPos), vec3, x0DE6);
  int _t0EA1 = extractFemItem(CellIndex(MeshPos), int, x0DE6);
  Femdata: Mesh _t0EA2 = extractFem(x0DE6, Mesh);
  vec3 _t0EA3;
  field(3)[3] _t0EA4 = femField(_t0EA2,_t0EA1,field(3)[3],Transform,);
  vec3 _t0EA5 = prim @00A5<#∞; %3; $[3]> (_t0EA4, _t0EA0);
  _t0EA3 = _t0EA5;
  _t0E47 = _t0EA3;
  vec3 _t0E48 = prim +0017<$[3]> (_t0E47, dPos0DE7);
  cmp0DEB = func findPos03BE (meshData039F, _t0E48);
  return cmp0DEB;
}
globalInit {
  int _t03A3 = 0;
  int _t03A1 = 1;
  int _t03A5 = extractFemItem(NumCell(Mesh), int, meshData039F);
  int _t03A4 = prim -0024 (_t03A5, _t03A1);
  int[] _t03A8 = prim $range01C3 (_t03A3, _t03A4);
  Femdata: MeshCell[] _t03A9 = {};
  foreach _t03A7 in _t03A8 {
    Femdata: MeshCell _t03AA = loadFem(MeshCell, meshData039F, _t03A7);
    _t03A9 = prim @0010<Femdata: MeshCell> (_t03A9, _t03AA);
  }
  space03AB = loadFem(Space, 0space03AB_intermedateGlobal03AC, meshData039F);
  data03AD = loadFem(FemFunc, 0data03AD_intermedateGlobal03AE, space03AB);
  Femdata: Space _t0DD8 = extractFem(data03AD, Space);
  Femdata: Space _t0DD9 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDA = extractFem(_t0DD9, Mesh);
  field(3)[3] _t0DDB = femField(data03AD,_t0DDA,field(3)[3],refField,findPos03BE );
  Femdata: Space _t0DDC = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDD = extractFem(_t0DDC, Mesh);
  Femdata: Space _t0DDE = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDF = extractFem(_t0DDE, Mesh);
  Femdata: Space _t0DE0 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DE1 = extractFem(_t0DE0, Mesh);
  field(3)[3] _t0DE2 = femField(_t0DDD,_t0DE1,field(3)[3],InvTransform,findPos03BE );
  F0DE3 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t0DDB, _t0DE2);
}
strand gg (vec3 startPos0E5C) {
  output vec3[] stream0E5D;
  output vec3[] newStream0E60;
  int step0E63;
  Femdata: MeshPos cPos0E64;
  vec3 altCPos0E65;
  vec3 startPos16DB;
  {
    vec3[1] _t0E5E = {startPos0E5C};
    vec3[] _t0E5F = (vec3[])_t0E5E;
    stream0E5D = _t0E5F;
    vec3[1] _t0E61 = {startPos0E5C};
    vec3[] _t0E62 = (vec3[])_t0E61;
    newStream0E60 = _t0E62;
    step0E63 = 0;
    cPos0E64 = func findPos03BE (meshData039F, startPos0E5C);
    altCPos0E65 = startPos0E5C;
    startPos16DB = startPos0E5C;
  }
  update
  {
    bool _t0E66;
    bool _t0E67 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E68 = prim !00BC (_t0E67);
    if _t0E68 {
      _t0E66 = true;
    } else {
      bool _t0E69;
      Femdata: MeshPos _t0E6A = func findPos03BE (meshData039F, altCPos0E65);
      bool _t0E6B = extractFemItem(Valid(MeshPos), bool, _t0E6A);
      bool _t0E6C = prim !00BC (_t0E6B);
      if _t0E6C {
        _t0E69 = true;
      } else {
        _t0E69 = prim ==0082 (step0E63, stepMax03B3);
      }
      _t0E66 = _t0E69;
    }
    if _t0E66 {
      stabilize;
    }
    vec3 _t0E6D;
    vec3 _t16D5 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
    int _t16D6 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
    Femdata: Mesh _t16D7 = extractFem(cPos0E64, Mesh);
    vec3 _t16D8;
    field(3)[3] _t16D9 = femField(_t16D7,_t16D6,field(3)[3],Transform,);
    vec3 _t16DA = prim @00A5<#∞; %3; $[3]> (_t16D9, _t16D5);
    _t16D8 = _t16DA;
    _t0E6D = _t16D8;
    vec3 _t0E6E = prim -0026<$[3]> (_t0E6D, altCPos0E65);
    real _t0E6F = prim |()|00B5<$[3]> (_t0E6E);
    real _t0E70 = 0.1e-5;
    bool _t0E71 = prim >0080 (_t0E6F, _t0E70);
    if _t0E71 {
      string _t0E72 = "Error in tracing: At step:";
      string _t0E73 = " with particle:";
      string _t0E74 = "\n";
      print (_t0E72, step0E63, _t0E73, startPos16DB, _t0E74);
    } else {
      string _t0E75 = "fine in cell:";
      Femdata: Mesh _t0E76 = extractFem(cPos0E64, Mesh);
      int _t0E77 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell _t0E78 = loadFem(MeshCell, _t0E76, _t0E77);
      string _t0E79 = "\n";
      print (_t0E75, _t0E78, _t0E79);
    }
    real _t0E7A = 0.5e0;
    real _t0E7B = prim *0034 (_t0E7A, stepSize03B2);
    vec3 _t0E7C = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    vec3 _t0E7D = prim *0036<$[3]> (_t0E7B, _t0E7C);
    vec3 _t0E7E = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    real _t0E7F = prim |()|00B5<$[3]> (_t0E7E);
    vec3 altUp10E80 = prim /0057<$[3]> (_t0E7D, _t0E7F);
    real _t0E81 = 0.5e0;
    real _t0E82 = prim *0034 (_t0E81, stepSize03B2);
    vec3 _t0E83;
    bool _t16BE = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    if _t16BE {
      Femdata: Mesh _t16BF = extractFem(cPos0E64, Mesh);
      int _t16C0 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell c16C1 = loadFem(MeshCell, _t16BF, _t16C0);
      vec3 ref16C2 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
      Femdata: FuncCell _t16C3;
      int _t16C4 = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16C5 = loadFem(FuncCell, data03AD, _t16C4);
      _t16C3 = _t16C5;
      Femdata: FemFunc _t16C6 = extractFem(_t16C3, FemFunc);
      Femdata: FuncCell _t16C7;
      int _t16C8 = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16C9 = loadFem(FuncCell, data03AD, _t16C8);
      _t16C7 = _t16C9;
      Femdata: FemFunc _t16CA = extractFem(_t16C7, FemFunc);
      Femdata: Space _t16CB = extractFem(_t16CA, Space);
      Femdata: FuncCell _t16CC;
      int _t16CD = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16CE = loadFem(FuncCell, data03AD, _t16CD);
      _t16CC = _t16CE;
      int _t16CF = extractFemItem(CellIndex(FuncCell), int, _t16CC);
      field(3)[3] _t16D0 = femField(_t16C6,_t16CF,field(3)[3],refField,);
      vec3 val16D1 = prim @00A5<#∞; %3; $[3]> (_t16D0, ref16C2);
      real _t16D2 = prim |()|00B5<$[3]> (val16D1);
      vec3 _t16D3 = prim /0057<$[3]> (val16D1, _t16D2);
      _t0E83 = _t16D3;
    } else {
      vec3 _t16D4 = prim $zero01BB<$[3]> ();
      _t0E83 = _t16D4;
    }
    vec3 up10E84 = prim *0036<$[3]> (_t0E82, _t0E83);
    Femdata: MeshPos intermed0E85 = func posMove0DE5 (cPos0E64, up10E84);
    vec3 altIntermed0E86 = prim +0017<$[3]> (altCPos0E65, altUp10E80);
    bool _t0E87;
    bool _t0E88 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    bool _t0E89 = prim !00BC (_t0E88);
    if _t0E89 {
      _t0E87 = true;
    } else {
      Femdata: MeshPos _t0E8A = func findPos03BE (meshData039F, altIntermed0E86);
      bool _t0E8B = extractFemItem(Valid(MeshPos), bool, _t0E8A);
      _t0E87 = prim !00BC (_t0E8B);
    }
    if _t0E87 {
      stabilize;
    }
    vec3 _t0E8C = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    vec3 _t0E8D = prim *0036<$[3]> (stepSize03B2, _t0E8C);
    vec3 _t0E8E = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    real _t0E8F = prim |()|00B5<$[3]> (_t0E8E);
    vec3 altUp20E90 = prim /0057<$[3]> (_t0E8D, _t0E8F);
    vec3 _t0E91;
    bool _t16A7 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    if _t16A7 {
      Femdata: Mesh _t16A8 = extractFem(intermed0E85, Mesh);
      int _t16A9 = extractFemItem(CellIndex(MeshPos), int, intermed0E85);
      Femdata: MeshCell c16AA = loadFem(MeshCell, _t16A8, _t16A9);
      vec3 ref16AB = extractFemItem(RefPos(MeshPos), vec3, intermed0E85);
      Femdata: FuncCell _t16AC;
      int _t16AD = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16AE = loadFem(FuncCell, data03AD, _t16AD);
      _t16AC = _t16AE;
      Femdata: FemFunc _t16AF = extractFem(_t16AC, FemFunc);
      Femdata: FuncCell _t16B0;
      int _t16B1 = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16B2 = loadFem(FuncCell, data03AD, _t16B1);
      _t16B0 = _t16B2;
      Femdata: FemFunc _t16B3 = extractFem(_t16B0, FemFunc);
      Femdata: Space _t16B4 = extractFem(_t16B3, Space);
      Femdata: FuncCell _t16B5;
      int _t16B6 = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16B7 = loadFem(FuncCell, data03AD, _t16B6);
      _t16B5 = _t16B7;
      int _t16B8 = extractFemItem(CellIndex(FuncCell), int, _t16B5);
      field(3)[3] _t16B9 = femField(_t16AF,_t16B8,field(3)[3],refField,);
      vec3 val16BA = prim @00A5<#∞; %3; $[3]> (_t16B9, ref16AB);
      real _t16BB = prim |()|00B5<$[3]> (val16BA);
      vec3 _t16BC = prim /0057<$[3]> (val16BA, _t16BB);
      _t0E91 = _t16BC;
    } else {
      vec3 _t16BD = prim $zero01BB<$[3]> ();
      _t0E91 = _t16BD;
    }
    vec3 up20E92 = prim *0036<$[3]> (stepSize03B2, _t0E91);
    cPos0E64 = func posMove0DE5 (cPos0E64, up20E92);
    altCPos0E65 = prim +0017<$[3]> (altCPos0E65, altUp20E90);
    bool _t0E93 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E94 = prim !00BC (_t0E93);
    if _t0E94 {
      print (stream0E5D);
      stabilize;
    }
    vec3 _t0E95;
    vec3 _t16A1 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
    int _t16A2 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
    Femdata: Mesh _t16A3 = extractFem(cPos0E64, Mesh);
    vec3 _t16A4;
    field(3)[3] _t16A5 = femField(_t16A3,_t16A2,field(3)[3],Transform,);
    vec3 _t16A6 = prim @00A5<#∞; %3; $[3]> (_t16A5, _t16A1);
    _t16A4 = _t16A6;
    _t0E95 = _t16A4;
    vec3[1] _t0E96 = {_t0E95};
    vec3[] _t0E97 = (vec3[])_t0E96;
    stream0E5D = prim @0014<vec3> (stream0E5D, _t0E97);
    vec3[1] _t0E98 = {altCPos0E65};
    vec3[] _t0E99 = (vec3[])_t0E98;
    newStream0E60 = prim @0014<vec3> (newStream0E60, _t0E99);
    int _t0E9A = 1;
    step0E63 = prim +0015 (step0E63, _t0E9A);
  }
}
collection {
  foreach x0E9B in startPoints03B1 {
    new gg (x0E9B);
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData039F;
input FemData:Space 0space03AB_intermedateGlobal03AC;
input FemData:FemFunc 0data03AD_intermedateGlobal03AE;
input int timeSteps03AF = <default>;
input real timeEps03B0 = <default>;
input vec3[] startPoints03B1;
input real stepSize03B2 = <default>;
input int stepMax03B3 = <default>;
constants {
  timeSteps03AF = 32;
  timeEps03B0 = 0.1e-6;
  stepSize03B2 = 0.1e-1;
  stepMax03B3 = 100;
}
global Femdata: Space space03AB;
global Femdata: FemFunc data03AD;
global field(3)[3] F0DE3;
function Femdata: MeshPos#6 findPos03BE (Femdata: Mesh mesh03BF, vec3 pos03C0)
{
  real _t03C1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t03C3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn03C4 = [_t03C1, _t03C2, _t03C3];
  newtonInt03C5 = 0;
  cellInt03C6 = extractFemItem(StartCell(Mesh), int, mesh03BF);
  int _t03C7 = extractFemItem(NumCell(Mesh), int, mesh03BF);
  int _t03C8 = 1;
  numCell03C9 = prim -0024 (_t03C7, _t03C8);
  yayCells03CA = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh03BF, pos03C0 : vec3);
  foreach cellItter03CE in yayCells03CA {
    real _t03CB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CC = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03CD = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn03C4 = [_t03CB, _t03CC, _t03CD];
    cellInt03C6 = cellItter03CE;
    field(3)[3] _t03CF = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
    field(3)[3,3] _t03D0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t03CF);
    field(3)[3,3] _t03D1 = prim inv015E<#∞; %3> (_t03D0);
    real _t03D2 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t03D4 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t03D5 = [_t03D2, _t03D3, _t03D4];
    A03D6 = prim @00A5<#∞; %3; $[3,3]> (_t03D1, _t03D5);
    int _t03D7 = 0;
    int _t03D8 = 16;
    int[] _t03D9 = prim $range01C3 (_t03D7, _t03D8);
    foreach newtonItter0408 in _t03D9 {
      field(3)[3] _t03DA = femField(mesh03BF,cellInt03C6,field(3)[3],Transform,);
      field(3)[3] _t03DB = prim -002E<#∞; %3; $[3]> (_t03DA, pos03C0);
      field(3)[3] _t03DC = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A03D6, _t03DB);
      delta03DD = prim @00A5<#∞; %3; $[3]> (_t03DC, xn03C4);
      xn03C4 = prim -0026<$[3]> (xn03C4, delta03DD);
      real _t03DE = 0.1e-7;
      real _t03DF = 0.1e-7;
      real _t03E0 = prim *0034 (_t03DE, _t03DF);
      real _t03E1 = prim •00CE<$[3]; $[3]; $[]> (delta03DD, delta03DD);
      bool _t03E2 = prim >=007E (_t03E0, _t03E1);
      if _t03E2 {
        real _t03E3 = 0.1e1;
        real _t03E4 = 0.1e-8;
        real _t03E5 = prim +0017<$[]> (_t03E3, _t03E4);
        real _t03E6 = 0.1e1;
        real _t03E7 = 0.1e1;
        real _t03E8 = 0.1e1;
        vec3 _t03E9 = [_t03E6, _t03E7, _t03E8];
        real _t03EA = prim •00CE<$[3]; $[3]; $[]> (_t03E9, xn03C4);
        bool _t03EB = prim >0080 (_t03E5, _t03EA);
        real _t03EC = 0.1e-8;
        real _t03ED = 0.1e-8;
        real _t03EE = 0.1e-8;
        vec3 _t03EF = [_t03EC, _t03ED, _t03EE];
        vec3 _t03F0 = prim +0017<$[3]> (_t03EF, xn03C4);
        real _t03F1 = _t03F0[0];
        real _t03F2 = -0.e0;
        bool _t03F3 = prim >0080 (_t03F1, _t03F2);
        real _t03F4 = 0.1e-8;
        real _t03F5 = 0.1e-8;
        real _t03F6 = 0.1e-8;
        vec3 _t03F7 = [_t03F4, _t03F5, _t03F6];
        vec3 _t03F8 = prim +0017<$[3]> (_t03F7, xn03C4);
        real _t03F9 = _t03F8[1];
        real _t03FA = -0.e0;
        bool _t03FB = prim >0080 (_t03F9, _t03FA);
        real _t03FC = 0.1e-8;
        real _t03FD = 0.1e-8;
        real _t03FE = 0.1e-8;
        vec3 _t03FF = [_t03FC, _t03FD, _t03FE];
        vec3 _t0400 = prim +0017<$[3]> (_t03FF, xn03C4);
        real _t0401 = _t0400[2];
        real _t0402 = -0.e0;
        bool _t0403 = prim >0080 (_t0401, _t0402);
        bool _t0404 = prim $and01C4 (_t03FB, _t0403);
        bool _t0405 = prim $and01C4 (_t03F3, _t0404);
        bool _t0406 = prim $and01C4 (_t03EB, _t0405);
        if _t0406 {
          Femdata: MeshPos _t0407 = extractFemItemN((mesh03BF, cellInt03C6, xn03C4, pos03C0),AllBuild(MeshPos),);
          return _t0407;
        }
      }
    }
  }
  string _t0409 = "Bad end 2";
  string _t040A = "\n";
  print (_t0409, _t040A);
  Femdata: MeshPos _t040B = extractFemItemN((mesh03BF),InvalidBuild(MeshPos),);
  return _t040B;
}
function int[2]#8 nextCell4048A (int faceIdx0A53, int cell0A54, Femdata: Mesh mesh0A55)
{
  int _t0A56 = 8;
  int _t0A57 = prim *0033 (cell0A54, _t0A56);
  int _t0A58 = 2;
  int _t0A59 = prim *0033 (faceIdx0A53, _t0A58);
  int _t0A5A = prim +0015 (_t0A57, _t0A59);
  int[2] _t0A5B = extractFemItemN((mesh0A55, _t0A5A),CellFaceCell(Mesh),);
  return _t0A5B;
}
function Femdata: MeshPos#2 posMove0DE5 (Femdata: MeshPos x0DE6, vec3 dPos0DE7)
{
  bool _t0DE8 = extractFemItem(Valid(MeshPos), bool, x0DE6);
  bool _t0DE9 = prim !00BC (_t0DE8);
  if _t0DE9 {
    return x0DE6;
  }
  real time0DEA = 0.1e1;
  Femdata: MeshPos cmp0DEB = x0DE6;
  int _t0DEC = 0;
  int[] _t0DED = prim $range01C3 (_t0DEC, timeSteps03AF);
  foreach i0E45 in _t0DED {
    Femdata: Mesh _t0DEE = extractFem(cmp0DEB, Mesh);
    int _t0DEF = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF0 = loadFem(MeshCell, _t0DEE, _t0DEF);
    Femdata: Mesh _t0DF1 = extractFem(_t0DF0, Mesh);
    Femdata: Mesh _t0DF2 = extractFem(cmp0DEB, Mesh);
    int _t0DF3 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF4 = loadFem(MeshCell, _t0DF2, _t0DF3);
    Femdata: Mesh _t0DF5 = extractFem(_t0DF4, Mesh);
    Femdata: Mesh _t0DF6 = extractFem(cmp0DEB, Mesh);
    int _t0DF7 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
    Femdata: MeshCell _t0DF8 = loadFem(MeshCell, _t0DF6, _t0DF7);
    int _t0DF9 = extractFemItem(CellIndex(MeshCell), int, _t0DF8);
    field(3)[3] _t0DFA = femField(_t0DF1,_t0DF9,field(3)[3],Transform,);
    field(3)[3,3] _t0DFB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0DFA);
    vec3 _t0DFC = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    tensor[3,3] _t0DFD = prim @00A5<#∞; %3; $[3,3]> (_t0DFB, _t0DFC);
    tensor[3,3] _t0DFE = prim inv0155 (_t0DFD);
    tensor[3,3] _t0DFF = prim *0036<$[3,3]> (time0DEA, _t0DFE);
    vec3 deltaP0E00 = prim •00CE<$[3,3]; $[3]; $[3]> (_t0DFF, dPos0DE7);
    vec3 _t0E01 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
    vec3 newPos0E02 = prim +0017<$[3]> (_t0E01, deltaP0E00);
    real _t0E03 = 0.1e1;
    real _t0E04 = 0.1e-8;
    real _t0E05 = prim +0017<$[]> (_t0E03, _t0E04);
    real _t0E06 = 0.1e1;
    real _t0E07 = 0.1e1;
    real _t0E08 = 0.1e1;
    vec3 _t0E09 = [_t0E06, _t0E07, _t0E08];
    real _t0E0A = prim •00CE<$[3]; $[3]; $[]> (_t0E09, newPos0E02);
    bool _t0E0B = prim >0080 (_t0E05, _t0E0A);
    real _t0E0C = 0.1e-8;
    real _t0E0D = 0.1e-8;
    real _t0E0E = 0.1e-8;
    vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
    vec3 _t0E10 = prim +0017<$[3]> (_t0E0F, newPos0E02);
    real _t0E11 = _t0E10[0];
    real _t0E12 = -0.e0;
    bool _t0E13 = prim >0080 (_t0E11, _t0E12);
    real _t0E14 = 0.1e-8;
    real _t0E15 = 0.1e-8;
    real _t0E16 = 0.1e-8;
    vec3 _t0E17 = [_t0E14, _t0E15, _t0E16];
    vec3 _t0E18 = prim +0017<$[3]> (_t0E17, newPos0E02);
    real _t0E19 = _t0E18[1];
    real _t0E1A = -0.e0;
    bool _t0E1B = prim >0080 (_t0E19, _t0E1A);
    real _t0E1C = 0.1e-8;
    real _t0E1D = 0.1e-8;
    real _t0E1E = 0.1e-8;
    vec3 _t0E1F = [_t0E1C, _t0E1D, _t0E1E];
    vec3 _t0E20 = prim +0017<$[3]> (_t0E1F, newPos0E02);
    real _t0E21 = _t0E20[2];
    real _t0E22 = -0.e0;
    bool _t0E23 = prim >0080 (_t0E21, _t0E22);
    bool _t0E24 = prim $and01C4 (_t0E1B, _t0E23);
    bool _t0E25 = prim $and01C4 (_t0E13, _t0E24);
    bool _t0E26 = prim $and01C4 (_t0E0B, _t0E25);
    if _t0E26 {
      Femdata: Mesh _t0E27 = extractFem(cmp0DEB, Mesh);
      int _t0E28 = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E29 = loadFem(MeshCell, _t0E27, _t0E28);
      Femdata: Mesh _t0E2A = extractFem(_t0E29, Mesh);
      Femdata: Mesh _t0E2B = extractFem(cmp0DEB, Mesh);
      int _t0E2C = extractFemItem(CellIndex(MeshPos), int, cmp0DEB);
      Femdata: MeshCell _t0E2D = loadFem(MeshCell, _t0E2B, _t0E2C);
      int _t0E2E = extractFemItem(CellIndex(MeshCell), int, _t0E2D);
      Femdata: MeshPos nmp0E2F = extractFemItemN((_t0E2A, _t0E2E, newPos0E02),RefBuild(Mesh),);
      return nmp0E2F;
    } else {
      vec3 _t0E30 = extractFemItem(RefPos(MeshPos), vec3, cmp0DEB);
      int _t0E31 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E32;
      real time1585 = +inf;
      int face1586 = -1;
      real faceTime1587 = -inf;
      real _t1588 = 0.57735026919e0;
      real _t1589 = 0.57735026919e0;
      real _t158A = 0.57735026919e0;
      real _t158B = 0.57735026919e0;
      vec3 _t158C = [_t1589, _t158A, _t158B];
      real _t158D = prim •00CE<$[3]; $[3]; $[]> (_t158C, _t0E30);
      real _t158E = prim -0026<$[]> (_t1588, _t158D);
      real _t158F = 0.57735026919e0;
      real _t1590 = 0.57735026919e0;
      real _t1591 = 0.57735026919e0;
      vec3 _t1592 = [_t158F, _t1590, _t1591];
      real _t1593 = prim •00CE<$[3]; $[3]; $[]> (_t1592, deltaP0E00);
      real _t1594 = prim /0055 (_t158E, _t1593);
      real _t1595 = -0.1e-15;
      bool _t1596 = prim >=007E (_t1594, _t1595);
      real _t1597 = 0.57735026919e0;
      real _t1598 = 0.57735026919e0;
      real _t1599 = 0.57735026919e0;
      real _t159A = 0.57735026919e0;
      vec3 _t159B = [_t1598, _t1599, _t159A];
      real _t159C = prim •00CE<$[3]; $[3]; $[]> (_t159B, _t0E30);
      real _t159D = prim -0026<$[]> (_t1597, _t159C);
      real _t159E = 0.57735026919e0;
      real _t159F = 0.57735026919e0;
      real _t15A0 = 0.57735026919e0;
      vec3 _t15A1 = [_t159E, _t159F, _t15A0];
      real _t15A2 = prim •00CE<$[3]; $[3]; $[]> (_t15A1, deltaP0E00);
      real _t15A3 = prim /0055 (_t159D, _t15A2);
      bool _t15A4 = prim >0080 (time1585, _t15A3);
      real _t15A5 = 0.57735026919e0;
      real _t15A6 = 0.57735026919e0;
      real _t15A7 = 0.57735026919e0;
      vec3 _t15A8 = [_t15A5, _t15A6, _t15A7];
      real _t15A9 = prim •00CE<$[3]; $[3]; $[]> (_t15A8, deltaP0E00);
      real _t15AA = prim |()|00B5<$[]> (_t15A9);
      real _t15AB = 0.1e-20;
      bool _t15AC = prim >=007E (_t15AA, _t15AB);
      bool _t15AD = prim $and01C4 (_t15A4, _t15AC);
      bool _t15AE = prim $and01C4 (_t1596, _t15AD);
      if _t15AE {
        int _t15AF = 0;
        bool _t15B0 = prim !=0086 (_t0E31, _t15AF);
        if _t15B0 {
          real _t15B1 = 0.57735026919e0;
          real _t15B2 = 0.57735026919e0;
          real _t15B3 = 0.57735026919e0;
          real _t15B4 = 0.57735026919e0;
          vec3 _t15B5 = [_t15B2, _t15B3, _t15B4];
          real _t15B6 = prim •00CE<$[3]; $[3]; $[]> (_t15B5, _t0E30);
          real _t15B7 = prim -0026<$[]> (_t15B1, _t15B6);
          real _t15B8 = 0.57735026919e0;
          real _t15B9 = 0.57735026919e0;
          real _t15BA = 0.57735026919e0;
          vec3 _t15BB = [_t15B8, _t15B9, _t15BA];
          real _t15BC = prim •00CE<$[3]; $[3]; $[]> (_t15BB, deltaP0E00);
          time1585 = prim /0055 (_t15B7, _t15BC);
          face1586 = 0;
        } else {
          real _t15BD = 0.57735026919e0;
          real _t15BE = 0.57735026919e0;
          real _t15BF = 0.57735026919e0;
          real _t15C0 = 0.57735026919e0;
          vec3 _t15C1 = [_t15BE, _t15BF, _t15C0];
          real _t15C2 = prim •00CE<$[3]; $[3]; $[]> (_t15C1, _t0E30);
          real _t15C3 = prim -0026<$[]> (_t15BD, _t15C2);
          real _t15C4 = 0.57735026919e0;
          real _t15C5 = 0.57735026919e0;
          real _t15C6 = 0.57735026919e0;
          vec3 _t15C7 = [_t15C4, _t15C5, _t15C6];
          real _t15C8 = prim •00CE<$[3]; $[3]; $[]> (_t15C7, deltaP0E00);
          faceTime1587 = prim /0055 (_t15C3, _t15C8);
        }
      }
      real _t15C9 = 0.e0;
      real _t15CA = 0.1e1;
      real _t15CB = 0.e0;
      real _t15CC = 0.e0;
      vec3 _t15CD = [_t15CA, _t15CB, _t15CC];
      real _t15CE = prim •00CE<$[3]; $[3]; $[]> (_t15CD, _t0E30);
      real _t15CF = prim -0026<$[]> (_t15C9, _t15CE);
      real _t15D0 = 0.1e1;
      real _t15D1 = 0.e0;
      real _t15D2 = 0.e0;
      vec3 _t15D3 = [_t15D0, _t15D1, _t15D2];
      real _t15D4 = prim •00CE<$[3]; $[3]; $[]> (_t15D3, deltaP0E00);
      real _t15D5 = prim /0055 (_t15CF, _t15D4);
      real _t15D6 = -0.1e-15;
      bool _t15D7 = prim >=007E (_t15D5, _t15D6);
      real _t15D8 = 0.e0;
      real _t15D9 = 0.1e1;
      real _t15DA = 0.e0;
      real _t15DB = 0.e0;
      vec3 _t15DC = [_t15D9, _t15DA, _t15DB];
      real _t15DD = prim •00CE<$[3]; $[3]; $[]> (_t15DC, _t0E30);
      real _t15DE = prim -0026<$[]> (_t15D8, _t15DD);
      real _t15DF = 0.1e1;
      real _t15E0 = 0.e0;
      real _t15E1 = 0.e0;
      vec3 _t15E2 = [_t15DF, _t15E0, _t15E1];
      real _t15E3 = prim •00CE<$[3]; $[3]; $[]> (_t15E2, deltaP0E00);
      real _t15E4 = prim /0055 (_t15DE, _t15E3);
      bool _t15E5 = prim >0080 (time1585, _t15E4);
      real _t15E6 = 0.1e1;
      real _t15E7 = 0.e0;
      real _t15E8 = 0.e0;
      vec3 _t15E9 = [_t15E6, _t15E7, _t15E8];
      real _t15EA = prim •00CE<$[3]; $[3]; $[]> (_t15E9, deltaP0E00);
      real _t15EB = prim |()|00B5<$[]> (_t15EA);
      real _t15EC = 0.1e-20;
      bool _t15ED = prim >=007E (_t15EB, _t15EC);
      bool _t15EE = prim $and01C4 (_t15E5, _t15ED);
      bool _t15EF = prim $and01C4 (_t15D7, _t15EE);
      if _t15EF {
        int _t15F0 = 1;
        bool _t15F1 = prim !=0086 (_t0E31, _t15F0);
        if _t15F1 {
          real _t15F2 = 0.e0;
          real _t15F3 = 0.1e1;
          real _t15F4 = 0.e0;
          real _t15F5 = 0.e0;
          vec3 _t15F6 = [_t15F3, _t15F4, _t15F5];
          real _t15F7 = prim •00CE<$[3]; $[3]; $[]> (_t15F6, _t0E30);
          real _t15F8 = prim -0026<$[]> (_t15F2, _t15F7);
          real _t15F9 = 0.1e1;
          real _t15FA = 0.e0;
          real _t15FB = 0.e0;
          vec3 _t15FC = [_t15F9, _t15FA, _t15FB];
          real _t15FD = prim •00CE<$[3]; $[3]; $[]> (_t15FC, deltaP0E00);
          time1585 = prim /0055 (_t15F8, _t15FD);
          face1586 = 1;
        } else {
          real _t15FE = 0.e0;
          real _t15FF = 0.1e1;
          real _t1600 = 0.e0;
          real _t1601 = 0.e0;
          vec3 _t1602 = [_t15FF, _t1600, _t1601];
          real _t1603 = prim •00CE<$[3]; $[3]; $[]> (_t1602, _t0E30);
          real _t1604 = prim -0026<$[]> (_t15FE, _t1603);
          real _t1605 = 0.1e1;
          real _t1606 = 0.e0;
          real _t1607 = 0.e0;
          vec3 _t1608 = [_t1605, _t1606, _t1607];
          real _t1609 = prim •00CE<$[3]; $[3]; $[]> (_t1608, deltaP0E00);
          faceTime1587 = prim /0055 (_t1604, _t1609);
        }
      }
      real _t160A = 0.e0;
      real _t160B = 0.e0;
      real _t160C = -0.1e1;
      real _t160D = 0.e0;
      vec3 _t160E = [_t160B, _t160C, _t160D];
      real _t160F = prim •00CE<$[3]; $[3]; $[]> (_t160E, _t0E30);
      real _t1610 = prim -0026<$[]> (_t160A, _t160F);
      real _t1611 = 0.e0;
      real _t1612 = -0.1e1;
      real _t1613 = 0.e0;
      vec3 _t1614 = [_t1611, _t1612, _t1613];
      real _t1615 = prim •00CE<$[3]; $[3]; $[]> (_t1614, deltaP0E00);
      real _t1616 = prim /0055 (_t1610, _t1615);
      real _t1617 = -0.1e-15;
      bool _t1618 = prim >=007E (_t1616, _t1617);
      real _t1619 = 0.e0;
      real _t161A = 0.e0;
      real _t161B = -0.1e1;
      real _t161C = 0.e0;
      vec3 _t161D = [_t161A, _t161B, _t161C];
      real _t161E = prim •00CE<$[3]; $[3]; $[]> (_t161D, _t0E30);
      real _t161F = prim -0026<$[]> (_t1619, _t161E);
      real _t1620 = 0.e0;
      real _t1621 = -0.1e1;
      real _t1622 = 0.e0;
      vec3 _t1623 = [_t1620, _t1621, _t1622];
      real _t1624 = prim •00CE<$[3]; $[3]; $[]> (_t1623, deltaP0E00);
      real _t1625 = prim /0055 (_t161F, _t1624);
      bool _t1626 = prim >0080 (time1585, _t1625);
      real _t1627 = 0.e0;
      real _t1628 = -0.1e1;
      real _t1629 = 0.e0;
      vec3 _t162A = [_t1627, _t1628, _t1629];
      real _t162B = prim •00CE<$[3]; $[3]; $[]> (_t162A, deltaP0E00);
      real _t162C = prim |()|00B5<$[]> (_t162B);
      real _t162D = 0.1e-20;
      bool _t162E = prim >=007E (_t162C, _t162D);
      bool _t162F = prim $and01C4 (_t1626, _t162E);
      bool _t1630 = prim $and01C4 (_t1618, _t162F);
      if _t1630 {
        int _t1631 = 2;
        bool _t1632 = prim !=0086 (_t0E31, _t1631);
        if _t1632 {
          real _t1633 = 0.e0;
          real _t1634 = 0.e0;
          real _t1635 = -0.1e1;
          real _t1636 = 0.e0;
          vec3 _t1637 = [_t1634, _t1635, _t1636];
          real _t1638 = prim •00CE<$[3]; $[3]; $[]> (_t1637, _t0E30);
          real _t1639 = prim -0026<$[]> (_t1633, _t1638);
          real _t163A = 0.e0;
          real _t163B = -0.1e1;
          real _t163C = 0.e0;
          vec3 _t163D = [_t163A, _t163B, _t163C];
          real _t163E = prim •00CE<$[3]; $[3]; $[]> (_t163D, deltaP0E00);
          time1585 = prim /0055 (_t1639, _t163E);
          face1586 = 2;
        } else {
          real _t163F = 0.e0;
          real _t1640 = 0.e0;
          real _t1641 = -0.1e1;
          real _t1642 = 0.e0;
          vec3 _t1643 = [_t1640, _t1641, _t1642];
          real _t1644 = prim •00CE<$[3]; $[3]; $[]> (_t1643, _t0E30);
          real _t1645 = prim -0026<$[]> (_t163F, _t1644);
          real _t1646 = 0.e0;
          real _t1647 = -0.1e1;
          real _t1648 = 0.e0;
          vec3 _t1649 = [_t1646, _t1647, _t1648];
          real _t164A = prim •00CE<$[3]; $[3]; $[]> (_t1649, deltaP0E00);
          faceTime1587 = prim /0055 (_t1645, _t164A);
        }
      }
      real _t164B = 0.e0;
      real _t164C = 0.e0;
      real _t164D = 0.e0;
      real _t164E = 0.1e1;
      vec3 _t164F = [_t164C, _t164D, _t164E];
      real _t1650 = prim •00CE<$[3]; $[3]; $[]> (_t164F, _t0E30);
      real _t1651 = prim -0026<$[]> (_t164B, _t1650);
      real _t1652 = 0.e0;
      real _t1653 = 0.e0;
      real _t1654 = 0.1e1;
      vec3 _t1655 = [_t1652, _t1653, _t1654];
      real _t1656 = prim •00CE<$[3]; $[3]; $[]> (_t1655, deltaP0E00);
      real _t1657 = prim /0055 (_t1651, _t1656);
      real _t1658 = -0.1e-15;
      bool _t1659 = prim >=007E (_t1657, _t1658);
      real _t165A = 0.e0;
      real _t165B = 0.e0;
      real _t165C = 0.e0;
      real _t165D = 0.1e1;
      vec3 _t165E = [_t165B, _t165C, _t165D];
      real _t165F = prim •00CE<$[3]; $[3]; $[]> (_t165E, _t0E30);
      real _t1660 = prim -0026<$[]> (_t165A, _t165F);
      real _t1661 = 0.e0;
      real _t1662 = 0.e0;
      real _t1663 = 0.1e1;
      vec3 _t1664 = [_t1661, _t1662, _t1663];
      real _t1665 = prim •00CE<$[3]; $[3]; $[]> (_t1664, deltaP0E00);
      real _t1666 = prim /0055 (_t1660, _t1665);
      bool _t1667 = prim >0080 (time1585, _t1666);
      real _t1668 = 0.e0;
      real _t1669 = 0.e0;
      real _t166A = 0.1e1;
      vec3 _t166B = [_t1668, _t1669, _t166A];
      real _t166C = prim •00CE<$[3]; $[3]; $[]> (_t166B, deltaP0E00);
      real _t166D = prim |()|00B5<$[]> (_t166C);
      real _t166E = 0.1e-20;
      bool _t166F = prim >=007E (_t166D, _t166E);
      bool _t1670 = prim $and01C4 (_t1667, _t166F);
      bool _t1671 = prim $and01C4 (_t1659, _t1670);
      if _t1671 {
        int _t1672 = 3;
        bool _t1673 = prim !=0086 (_t0E31, _t1672);
        if _t1673 {
          real _t1674 = 0.e0;
          real _t1675 = 0.e0;
          real _t1676 = 0.e0;
          real _t1677 = 0.1e1;
          vec3 _t1678 = [_t1675, _t1676, _t1677];
          real _t1679 = prim •00CE<$[3]; $[3]; $[]> (_t1678, _t0E30);
          real _t167A = prim -0026<$[]> (_t1674, _t1679);
          real _t167B = 0.e0;
          real _t167C = 0.e0;
          real _t167D = 0.1e1;
          vec3 _t167E = [_t167B, _t167C, _t167D];
          real _t167F = prim •00CE<$[3]; $[3]; $[]> (_t167E, deltaP0E00);
          time1585 = prim /0055 (_t167A, _t167F);
          face1586 = 3;
        } else {
          real _t1680 = 0.e0;
          real _t1681 = 0.e0;
          real _t1682 = 0.e0;
          real _t1683 = 0.1e1;
          vec3 _t1684 = [_t1681, _t1682, _t1683];
          real _t1685 = prim •00CE<$[3]; $[3]; $[]> (_t1684, _t0E30);
          real _t1686 = prim -0026<$[]> (_t1680, _t1685);
          real _t1687 = 0.e0;
          real _t1688 = 0.e0;
          real _t1689 = 0.1e1;
          vec3 _t168A = [_t1687, _t1688, _t1689];
          real _t168B = prim •00CE<$[3]; $[3]; $[]> (_t168A, deltaP0E00);
          faceTime1587 = prim /0055 (_t1686, _t168B);
        }
      }
      int _t168C = -1;
      bool _t168D = prim !=0086 (face1586, _t168C);
      if _t168D {
        real _t168E = 0.e0;
        real _t168F = prim max0125 (time1585, _t168E);
        real _t1690 = (real)face1586;
        vec2 _t1691 = [_t168F, _t1690];
        _t0E32 = _t1691;
      } else {
        real _t1692 = -inf;
        bool _t1693 = prim ==0084 (_t1692, faceTime1587);
        if _t1693 {
          real _t1694 = -0.1e1;
          real _t1695 = -0.1e1;
          vec2 _t1696 = [_t1694, _t1695];
          _t0E32 = _t1696;
        } else {
          real _t1697 = (real)_t0E31;
          vec2 _t1698 = [faceTime1587, _t1697];
          _t0E32 = _t1698;
        }
      }
      real eTime0E33 = _t0E32[0];
      real _t0E34 = prim *0034 (time0DEA, eTime0E33);
      time0DEA = prim -0026<$[]> (time0DEA, _t0E34);
      Femdata: Mesh _t0E35 = extractFem(cmp0DEB, Mesh);
      int _t0E36 = extractFemItem(CellIndex(Mesh), int, cmp0DEB);
      vec3 _t0E37 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      vec3 _t0E38 = extractFemItem(RefPos(Mesh), vec3, cmp0DEB);
      int _t0E39 = extractFemItem(PosEntryFacet(MeshPos), int, cmp0DEB);
      vec2 _t0E3A;
      real time1471 = +inf;
      int face1472 = -1;
      real faceTime1473 = -inf;
      real _t1474 = 0.57735026919e0;
      real _t1475 = 0.57735026919e0;
      real _t1476 = 0.57735026919e0;
      real _t1477 = 0.57735026919e0;
      vec3 _t1478 = [_t1475, _t1476, _t1477];
      real _t1479 = prim •00CE<$[3]; $[3]; $[]> (_t1478, _t0E38);
      real _t147A = prim -0026<$[]> (_t1474, _t1479);
      real _t147B = 0.57735026919e0;
      real _t147C = 0.57735026919e0;
      real _t147D = 0.57735026919e0;
      vec3 _t147E = [_t147B, _t147C, _t147D];
      real _t147F = prim •00CE<$[3]; $[3]; $[]> (_t147E, deltaP0E00);
      real _t1480 = prim /0055 (_t147A, _t147F);
      real _t1481 = -0.1e-15;
      bool _t1482 = prim >=007E (_t1480, _t1481);
      real _t1483 = 0.57735026919e0;
      real _t1484 = 0.57735026919e0;
      real _t1485 = 0.57735026919e0;
      real _t1486 = 0.57735026919e0;
      vec3 _t1487 = [_t1484, _t1485, _t1486];
      real _t1488 = prim •00CE<$[3]; $[3]; $[]> (_t1487, _t0E38);
      real _t1489 = prim -0026<$[]> (_t1483, _t1488);
      real _t148A = 0.57735026919e0;
      real _t148B = 0.57735026919e0;
      real _t148C = 0.57735026919e0;
      vec3 _t148D = [_t148A, _t148B, _t148C];
      real _t148E = prim •00CE<$[3]; $[3]; $[]> (_t148D, deltaP0E00);
      real _t148F = prim /0055 (_t1489, _t148E);
      bool _t1490 = prim >0080 (time1471, _t148F);
      real _t1491 = 0.57735026919e0;
      real _t1492 = 0.57735026919e0;
      real _t1493 = 0.57735026919e0;
      vec3 _t1494 = [_t1491, _t1492, _t1493];
      real _t1495 = prim •00CE<$[3]; $[3]; $[]> (_t1494, deltaP0E00);
      real _t1496 = prim |()|00B5<$[]> (_t1495);
      real _t1497 = 0.1e-20;
      bool _t1498 = prim >=007E (_t1496, _t1497);
      bool _t1499 = prim $and01C4 (_t1490, _t1498);
      bool _t149A = prim $and01C4 (_t1482, _t1499);
      if _t149A {
        int _t149B = 0;
        bool _t149C = prim !=0086 (_t0E39, _t149B);
        if _t149C {
          real _t149D = 0.57735026919e0;
          real _t149E = 0.57735026919e0;
          real _t149F = 0.57735026919e0;
          real _t14A0 = 0.57735026919e0;
          vec3 _t14A1 = [_t149E, _t149F, _t14A0];
          real _t14A2 = prim •00CE<$[3]; $[3]; $[]> (_t14A1, _t0E38);
          real _t14A3 = prim -0026<$[]> (_t149D, _t14A2);
          real _t14A4 = 0.57735026919e0;
          real _t14A5 = 0.57735026919e0;
          real _t14A6 = 0.57735026919e0;
          vec3 _t14A7 = [_t14A4, _t14A5, _t14A6];
          real _t14A8 = prim •00CE<$[3]; $[3]; $[]> (_t14A7, deltaP0E00);
          time1471 = prim /0055 (_t14A3, _t14A8);
          face1472 = 0;
        } else {
          real _t14A9 = 0.57735026919e0;
          real _t14AA = 0.57735026919e0;
          real _t14AB = 0.57735026919e0;
          real _t14AC = 0.57735026919e0;
          vec3 _t14AD = [_t14AA, _t14AB, _t14AC];
          real _t14AE = prim •00CE<$[3]; $[3]; $[]> (_t14AD, _t0E38);
          real _t14AF = prim -0026<$[]> (_t14A9, _t14AE);
          real _t14B0 = 0.57735026919e0;
          real _t14B1 = 0.57735026919e0;
          real _t14B2 = 0.57735026919e0;
          vec3 _t14B3 = [_t14B0, _t14B1, _t14B2];
          real _t14B4 = prim •00CE<$[3]; $[3]; $[]> (_t14B3, deltaP0E00);
          faceTime1473 = prim /0055 (_t14AF, _t14B4);
        }
      }
      real _t14B5 = 0.e0;
      real _t14B6 = 0.1e1;
      real _t14B7 = 0.e0;
      real _t14B8 = 0.e0;
      vec3 _t14B9 = [_t14B6, _t14B7, _t14B8];
      real _t14BA = prim •00CE<$[3]; $[3]; $[]> (_t14B9, _t0E38);
      real _t14BB = prim -0026<$[]> (_t14B5, _t14BA);
      real _t14BC = 0.1e1;
      real _t14BD = 0.e0;
      real _t14BE = 0.e0;
      vec3 _t14BF = [_t14BC, _t14BD, _t14BE];
      real _t14C0 = prim •00CE<$[3]; $[3]; $[]> (_t14BF, deltaP0E00);
      real _t14C1 = prim /0055 (_t14BB, _t14C0);
      real _t14C2 = -0.1e-15;
      bool _t14C3 = prim >=007E (_t14C1, _t14C2);
      real _t14C4 = 0.e0;
      real _t14C5 = 0.1e1;
      real _t14C6 = 0.e0;
      real _t14C7 = 0.e0;
      vec3 _t14C8 = [_t14C5, _t14C6, _t14C7];
      real _t14C9 = prim •00CE<$[3]; $[3]; $[]> (_t14C8, _t0E38);
      real _t14CA = prim -0026<$[]> (_t14C4, _t14C9);
      real _t14CB = 0.1e1;
      real _t14CC = 0.e0;
      real _t14CD = 0.e0;
      vec3 _t14CE = [_t14CB, _t14CC, _t14CD];
      real _t14CF = prim •00CE<$[3]; $[3]; $[]> (_t14CE, deltaP0E00);
      real _t14D0 = prim /0055 (_t14CA, _t14CF);
      bool _t14D1 = prim >0080 (time1471, _t14D0);
      real _t14D2 = 0.1e1;
      real _t14D3 = 0.e0;
      real _t14D4 = 0.e0;
      vec3 _t14D5 = [_t14D2, _t14D3, _t14D4];
      real _t14D6 = prim •00CE<$[3]; $[3]; $[]> (_t14D5, deltaP0E00);
      real _t14D7 = prim |()|00B5<$[]> (_t14D6);
      real _t14D8 = 0.1e-20;
      bool _t14D9 = prim >=007E (_t14D7, _t14D8);
      bool _t14DA = prim $and01C4 (_t14D1, _t14D9);
      bool _t14DB = prim $and01C4 (_t14C3, _t14DA);
      if _t14DB {
        int _t14DC = 1;
        bool _t14DD = prim !=0086 (_t0E39, _t14DC);
        if _t14DD {
          real _t14DE = 0.e0;
          real _t14DF = 0.1e1;
          real _t14E0 = 0.e0;
          real _t14E1 = 0.e0;
          vec3 _t14E2 = [_t14DF, _t14E0, _t14E1];
          real _t14E3 = prim •00CE<$[3]; $[3]; $[]> (_t14E2, _t0E38);
          real _t14E4 = prim -0026<$[]> (_t14DE, _t14E3);
          real _t14E5 = 0.1e1;
          real _t14E6 = 0.e0;
          real _t14E7 = 0.e0;
          vec3 _t14E8 = [_t14E5, _t14E6, _t14E7];
          real _t14E9 = prim •00CE<$[3]; $[3]; $[]> (_t14E8, deltaP0E00);
          time1471 = prim /0055 (_t14E4, _t14E9);
          face1472 = 1;
        } else {
          real _t14EA = 0.e0;
          real _t14EB = 0.1e1;
          real _t14EC = 0.e0;
          real _t14ED = 0.e0;
          vec3 _t14EE = [_t14EB, _t14EC, _t14ED];
          real _t14EF = prim •00CE<$[3]; $[3]; $[]> (_t14EE, _t0E38);
          real _t14F0 = prim -0026<$[]> (_t14EA, _t14EF);
          real _t14F1 = 0.1e1;
          real _t14F2 = 0.e0;
          real _t14F3 = 0.e0;
          vec3 _t14F4 = [_t14F1, _t14F2, _t14F3];
          real _t14F5 = prim •00CE<$[3]; $[3]; $[]> (_t14F4, deltaP0E00);
          faceTime1473 = prim /0055 (_t14F0, _t14F5);
        }
      }
      real _t14F6 = 0.e0;
      real _t14F7 = 0.e0;
      real _t14F8 = -0.1e1;
      real _t14F9 = 0.e0;
      vec3 _t14FA = [_t14F7, _t14F8, _t14F9];
      real _t14FB = prim •00CE<$[3]; $[3]; $[]> (_t14FA, _t0E38);
      real _t14FC = prim -0026<$[]> (_t14F6, _t14FB);
      real _t14FD = 0.e0;
      real _t14FE = -0.1e1;
      real _t14FF = 0.e0;
      vec3 _t1500 = [_t14FD, _t14FE, _t14FF];
      real _t1501 = prim •00CE<$[3]; $[3]; $[]> (_t1500, deltaP0E00);
      real _t1502 = prim /0055 (_t14FC, _t1501);
      real _t1503 = -0.1e-15;
      bool _t1504 = prim >=007E (_t1502, _t1503);
      real _t1505 = 0.e0;
      real _t1506 = 0.e0;
      real _t1507 = -0.1e1;
      real _t1508 = 0.e0;
      vec3 _t1509 = [_t1506, _t1507, _t1508];
      real _t150A = prim •00CE<$[3]; $[3]; $[]> (_t1509, _t0E38);
      real _t150B = prim -0026<$[]> (_t1505, _t150A);
      real _t150C = 0.e0;
      real _t150D = -0.1e1;
      real _t150E = 0.e0;
      vec3 _t150F = [_t150C, _t150D, _t150E];
      real _t1510 = prim •00CE<$[3]; $[3]; $[]> (_t150F, deltaP0E00);
      real _t1511 = prim /0055 (_t150B, _t1510);
      bool _t1512 = prim >0080 (time1471, _t1511);
      real _t1513 = 0.e0;
      real _t1514 = -0.1e1;
      real _t1515 = 0.e0;
      vec3 _t1516 = [_t1513, _t1514, _t1515];
      real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, deltaP0E00);
      real _t1518 = prim |()|00B5<$[]> (_t1517);
      real _t1519 = 0.1e-20;
      bool _t151A = prim >=007E (_t1518, _t1519);
      bool _t151B = prim $and01C4 (_t1512, _t151A);
      bool _t151C = prim $and01C4 (_t1504, _t151B);
      if _t151C {
        int _t151D = 2;
        bool _t151E = prim !=0086 (_t0E39, _t151D);
        if _t151E {
          real _t151F = 0.e0;
          real _t1520 = 0.e0;
          real _t1521 = -0.1e1;
          real _t1522 = 0.e0;
          vec3 _t1523 = [_t1520, _t1521, _t1522];
          real _t1524 = prim •00CE<$[3]; $[3]; $[]> (_t1523, _t0E38);
          real _t1525 = prim -0026<$[]> (_t151F, _t1524);
          real _t1526 = 0.e0;
          real _t1527 = -0.1e1;
          real _t1528 = 0.e0;
          vec3 _t1529 = [_t1526, _t1527, _t1528];
          real _t152A = prim •00CE<$[3]; $[3]; $[]> (_t1529, deltaP0E00);
          time1471 = prim /0055 (_t1525, _t152A);
          face1472 = 2;
        } else {
          real _t152B = 0.e0;
          real _t152C = 0.e0;
          real _t152D = -0.1e1;
          real _t152E = 0.e0;
          vec3 _t152F = [_t152C, _t152D, _t152E];
          real _t1530 = prim •00CE<$[3]; $[3]; $[]> (_t152F, _t0E38);
          real _t1531 = prim -0026<$[]> (_t152B, _t1530);
          real _t1532 = 0.e0;
          real _t1533 = -0.1e1;
          real _t1534 = 0.e0;
          vec3 _t1535 = [_t1532, _t1533, _t1534];
          real _t1536 = prim •00CE<$[3]; $[3]; $[]> (_t1535, deltaP0E00);
          faceTime1473 = prim /0055 (_t1531, _t1536);
        }
      }
      real _t1537 = 0.e0;
      real _t1538 = 0.e0;
      real _t1539 = 0.e0;
      real _t153A = 0.1e1;
      vec3 _t153B = [_t1538, _t1539, _t153A];
      real _t153C = prim •00CE<$[3]; $[3]; $[]> (_t153B, _t0E38);
      real _t153D = prim -0026<$[]> (_t1537, _t153C);
      real _t153E = 0.e0;
      real _t153F = 0.e0;
      real _t1540 = 0.1e1;
      vec3 _t1541 = [_t153E, _t153F, _t1540];
      real _t1542 = prim •00CE<$[3]; $[3]; $[]> (_t1541, deltaP0E00);
      real _t1543 = prim /0055 (_t153D, _t1542);
      real _t1544 = -0.1e-15;
      bool _t1545 = prim >=007E (_t1543, _t1544);
      real _t1546 = 0.e0;
      real _t1547 = 0.e0;
      real _t1548 = 0.e0;
      real _t1549 = 0.1e1;
      vec3 _t154A = [_t1547, _t1548, _t1549];
      real _t154B = prim •00CE<$[3]; $[3]; $[]> (_t154A, _t0E38);
      real _t154C = prim -0026<$[]> (_t1546, _t154B);
      real _t154D = 0.e0;
      real _t154E = 0.e0;
      real _t154F = 0.1e1;
      vec3 _t1550 = [_t154D, _t154E, _t154F];
      real _t1551 = prim •00CE<$[3]; $[3]; $[]> (_t1550, deltaP0E00);
      real _t1552 = prim /0055 (_t154C, _t1551);
      bool _t1553 = prim >0080 (time1471, _t1552);
      real _t1554 = 0.e0;
      real _t1555 = 0.e0;
      real _t1556 = 0.1e1;
      vec3 _t1557 = [_t1554, _t1555, _t1556];
      real _t1558 = prim •00CE<$[3]; $[3]; $[]> (_t1557, deltaP0E00);
      real _t1559 = prim |()|00B5<$[]> (_t1558);
      real _t155A = 0.1e-20;
      bool _t155B = prim >=007E (_t1559, _t155A);
      bool _t155C = prim $and01C4 (_t1553, _t155B);
      bool _t155D = prim $and01C4 (_t1545, _t155C);
      if _t155D {
        int _t155E = 3;
        bool _t155F = prim !=0086 (_t0E39, _t155E);
        if _t155F {
          real _t1560 = 0.e0;
          real _t1561 = 0.e0;
          real _t1562 = 0.e0;
          real _t1563 = 0.1e1;
          vec3 _t1564 = [_t1561, _t1562, _t1563];
          real _t1565 = prim •00CE<$[3]; $[3]; $[]> (_t1564, _t0E38);
          real _t1566 = prim -0026<$[]> (_t1560, _t1565);
          real _t1567 = 0.e0;
          real _t1568 = 0.e0;
          real _t1569 = 0.1e1;
          vec3 _t156A = [_t1567, _t1568, _t1569];
          real _t156B = prim •00CE<$[3]; $[3]; $[]> (_t156A, deltaP0E00);
          time1471 = prim /0055 (_t1566, _t156B);
          face1472 = 3;
        } else {
          real _t156C = 0.e0;
          real _t156D = 0.e0;
          real _t156E = 0.e0;
          real _t156F = 0.1e1;
          vec3 _t1570 = [_t156D, _t156E, _t156F];
          real _t1571 = prim •00CE<$[3]; $[3]; $[]> (_t1570, _t0E38);
          real _t1572 = prim -0026<$[]> (_t156C, _t1571);
          real _t1573 = 0.e0;
          real _t1574 = 0.e0;
          real _t1575 = 0.1e1;
          vec3 _t1576 = [_t1573, _t1574, _t1575];
          real _t1577 = prim •00CE<$[3]; $[3]; $[]> (_t1576, deltaP0E00);
          faceTime1473 = prim /0055 (_t1572, _t1577);
        }
      }
      int _t1578 = -1;
      bool _t1579 = prim !=0086 (face1472, _t1578);
      if _t1579 {
        real _t157A = 0.e0;
        real _t157B = prim max0125 (time1471, _t157A);
        real _t157C = (real)face1472;
        vec2 _t157D = [_t157B, _t157C];
        _t0E3A = _t157D;
      } else {
        real _t157E = -inf;
        bool _t157F = prim ==0084 (_t157E, faceTime1473);
        if _t157F {
          real _t1580 = -0.1e1;
          real _t1581 = -0.1e1;
          vec2 _t1582 = [_t1580, _t1581];
          _t0E3A = _t1582;
        } else {
          real _t1583 = (real)_t0E39;
          vec2 _t1584 = [faceTime1473, _t1583];
          _t0E3A = _t1584;
        }
      }
      Femdata: MeshPos nmp0E3B;
      int _t0EA6 = -1;
      real _t0EA7 = _t0E3A[1];
      int _t0EA8 = prim $r2i01B7 (_t0EA7);
      int[2] _t0EA9 = func nextCell4048A (_t0EA8, _t0E36, _t0E35);
      int _t0EAA = 0;
      int _t0EAB = prim $sub01C0<int; %2> (_t0EA9, _t0EAA);
      bool _t0EAC = prim !=0086 (_t0EA6, _t0EAB);
      if _t0EAC {
        string _t0EAD = "face ";
        real _t0EAE = _t0E3A[1];
        int _t0EAF = prim $r2i01B7 (_t0EAE);
        string _t0EB0 = " to ";
        real _t0EB1 = _t0E3A[1];
        int _t0EB2 = prim $r2i01B7 (_t0EB1);
        int[2] _t0EB3 = func nextCell4048A (_t0EB2, _t0E36, _t0E35);
        int _t0EB4 = 1;
        int _t0EB5 = prim $sub01C0<int; %2> (_t0EB3, _t0EB4);
        string _t0EB6 = "\n";
        string _t0EB7 = "got: ";
        real _t0EB8 = 0.1e1;
        real _t0EB9 = 0.e0;
        real _t0EBA = 0.e0;
        real _t0EBB = 0.e0;
        vec4 _t0EBC = [_t0EB8, _t0EB9, _t0EBA, _t0EBB];
        real _t0EBD = 0.e0;
        real _t0EBE = 0.1e1;
        real _t0EBF = 0.e0;
        real _t0EC0 = 0.e0;
        vec4 _t0EC1 = [_t0EBD, _t0EBE, _t0EBF, _t0EC0];
        real _t0EC2 = 0.e0;
        real _t0EC3 = 0.e0;
        real _t0EC4 = 0.1e1;
        real _t0EC5 = 0.e0;
        vec4 _t0EC6 = [_t0EC2, _t0EC3, _t0EC4, _t0EC5];
        real _t0EC7 = 0.971445146547e-16;
        real _t0EC8 = 0.e0;
        real _t0EC9 = 0.e0;
        real _t0ECA = 0.1e1;
        vec4 _t0ECB = [_t0EC7, _t0EC8, _t0EC9, _t0ECA];
        tensor[4,4] _t0ECC = [_t0EBC, _t0EC1, _t0EC6, _t0ECB];
        real _t0ECD = 0.57735026919e0;
        real _t0ECE = 0.57735026919e0;
        real _t0ECF = 0.57735026919e0;
        real _t0ED0 = -0.57735026919e0;
        vec4 _t0ED1 = [_t0ECD, _t0ECE, _t0ECF, _t0ED0];
        real _t0ED2 = -0.333333333333e0;
        real _t0ED3 = 0.666666666667e0;
        real _t0ED4 = -0.333333333333e0;
        real _t0ED5 = 0.333333333333e0;
        vec4 _t0ED6 = [_t0ED2, _t0ED3, _t0ED4, _t0ED5];
        real _t0ED7 = -0.333333333333e0;
        real _t0ED8 = -0.333333333333e0;
        real _t0ED9 = 0.666666666667e0;
        real _t0EDA = 0.333333333333e0;
        vec4 _t0EDB = [_t0ED7, _t0ED8, _t0ED9, _t0EDA];
        real _t0EDC = 0.971445146547e-16;
        real _t0EDD = 0.e0;
        real _t0EDE = 0.e0;
        real _t0EDF = 0.1e1;
        vec4 _t0EE0 = [_t0EDC, _t0EDD, _t0EDE, _t0EDF];
        tensor[4,4] _t0EE1 = [_t0ED1, _t0ED6, _t0EDB, _t0EE0];
        real _t0EE2 = -0.333333333333e0;
        real _t0EE3 = 0.666666666667e0;
        real _t0EE4 = -0.333333333333e0;
        real _t0EE5 = 0.333333333333e0;
        vec4 _t0EE6 = [_t0EE2, _t0EE3, _t0EE4, _t0EE5];
        real _t0EE7 = -0.57735026919e0;
        real _t0EE8 = -0.57735026919e0;
        real _t0EE9 = -0.57735026919e0;
        real _t0EEA = 0.57735026919e0;
        vec4 _t0EEB = [_t0EE7, _t0EE8, _t0EE9, _t0EEA];
        real _t0EEC = -0.333333333333e0;
        real _t0EED = -0.333333333333e0;
        real _t0EEE = 0.666666666667e0;
        real _t0EEF = 0.333333333333e0;
        vec4 _t0EF0 = [_t0EEC, _t0EED, _t0EEE, _t0EEF];
        real _t0EF1 = 0.971445146547e-16;
        real _t0EF2 = 0.e0;
        real _t0EF3 = 0.e0;
        real _t0EF4 = 0.1e1;
        vec4 _t0EF5 = [_t0EF1, _t0EF2, _t0EF3, _t0EF4];
        tensor[4,4] _t0EF6 = [_t0EE6, _t0EEB, _t0EF0, _t0EF5];
        real _t0EF7 = -0.333333333333e0;
        real _t0EF8 = 0.666666666667e0;
        real _t0EF9 = -0.333333333333e0;
        real _t0EFA = 0.333333333333e0;
        vec4 _t0EFB = [_t0EF7, _t0EF8, _t0EF9, _t0EFA];
        real _t0EFC = -0.333333333333e0;
        real _t0EFD = -0.333333333333e0;
        real _t0EFE = 0.666666666667e0;
        real _t0EFF = 0.333333333333e0;
        vec4 _t0F00 = [_t0EFC, _t0EFD, _t0EFE, _t0EFF];
        real _t0F01 = 0.57735026919e0;
        real _t0F02 = 0.57735026919e0;
        real _t0F03 = 0.57735026919e0;
        real _t0F04 = -0.57735026919e0;
        vec4 _t0F05 = [_t0F01, _t0F02, _t0F03, _t0F04];
        real _t0F06 = 0.971445146547e-16;
        real _t0F07 = 0.e0;
        real _t0F08 = 0.e0;
        real _t0F09 = 0.1e1;
        vec4 _t0F0A = [_t0F06, _t0F07, _t0F08, _t0F09];
        tensor[4,4] _t0F0B = [_t0EFB, _t0F00, _t0F05, _t0F0A];
        tensor[4,4][4] _t0F0C = {_t0ECC, _t0EE1, _t0EF6, _t0F0B};
        real _t0F0D = 0.57735026919e0;
        real _t0F0E = -0.1e1;
        real _t0F0F = -0.1e1;
        real _t0F10 = 0.1e1;
        vec4 _t0F11 = [_t0F0D, _t0F0E, _t0F0F, _t0F10];
        real _t0F12 = 0.57735026919e0;
        real _t0F13 = 0.1e1;
        real _t0F14 = 0.e0;
        real _t0F15 = 0.e0;
        vec4 _t0F16 = [_t0F12, _t0F13, _t0F14, _t0F15];
        real _t0F17 = 0.57735026919e0;
        real _t0F18 = 0.e0;
        real _t0F19 = 0.1e1;
        real _t0F1A = 0.e0;
        vec4 _t0F1B = [_t0F17, _t0F18, _t0F19, _t0F1A];
        real _t0F1C = 0.e0;
        real _t0F1D = 0.e0;
        real _t0F1E = 0.e0;
        real _t0F1F = 0.1e1;
        vec4 _t0F20 = [_t0F1C, _t0F1D, _t0F1E, _t0F1F];
        tensor[4,4] _t0F21 = [_t0F11, _t0F16, _t0F1B, _t0F20];
        real _t0F22 = 0.1e1;
        real _t0F23 = 0.e0;
        real _t0F24 = 0.e0;
        real _t0F25 = 0.e0;
        vec4 _t0F26 = [_t0F22, _t0F23, _t0F24, _t0F25];
        real _t0F27 = 0.e0;
        real _t0F28 = 0.1e1;
        real _t0F29 = 0.e0;
        real _t0F2A = 0.e0;
        vec4 _t0F2B = [_t0F27, _t0F28, _t0F29, _t0F2A];
        real _t0F2C = 0.e0;
        real _t0F2D = 0.e0;
        real _t0F2E = 0.1e1;
        real _t0F2F = 0.e0;
        vec4 _t0F30 = [_t0F2C, _t0F2D, _t0F2E, _t0F2F];
        real _t0F31 = 0.e0;
        real _t0F32 = 0.e0;
        real _t0F33 = 0.e0;
        real _t0F34 = 0.1e1;
        vec4 _t0F35 = [_t0F31, _t0F32, _t0F33, _t0F34];
        tensor[4,4] _t0F36 = [_t0F26, _t0F2B, _t0F30, _t0F35];
        real _t0F37 = 0.e0;
        real _t0F38 = 0.1e1;
        real _t0F39 = 0.e0;
        real _t0F3A = 0.e0;
        vec4 _t0F3B = [_t0F37, _t0F38, _t0F39, _t0F3A];
        real _t0F3C = -0.1e1;
        real _t0F3D = 0.e0;
        real _t0F3E = 0.e0;
        real _t0F3F = 0.e0;
        vec4 _t0F40 = [_t0F3C, _t0F3D, _t0F3E, _t0F3F];
        real _t0F41 = 0.e0;
        real _t0F42 = 0.e0;
        real _t0F43 = 0.1e1;
        real _t0F44 = 0.e0;
        vec4 _t0F45 = [_t0F41, _t0F42, _t0F43, _t0F44];
        real _t0F46 = 0.e0;
        real _t0F47 = 0.e0;
        real _t0F48 = 0.e0;
        real _t0F49 = 0.1e1;
        vec4 _t0F4A = [_t0F46, _t0F47, _t0F48, _t0F49];
        tensor[4,4] _t0F4B = [_t0F3B, _t0F40, _t0F45, _t0F4A];
        real _t0F4C = 0.e0;
        real _t0F4D = 0.1e1;
        real _t0F4E = 0.e0;
        real _t0F4F = 0.e0;
        vec4 _t0F50 = [_t0F4C, _t0F4D, _t0F4E, _t0F4F];
        real _t0F51 = 0.e0;
        real _t0F52 = 0.e0;
        real _t0F53 = 0.1e1;
        real _t0F54 = 0.e0;
        vec4 _t0F55 = [_t0F51, _t0F52, _t0F53, _t0F54];
        real _t0F56 = 0.1e1;
        real _t0F57 = 0.e0;
        real _t0F58 = 0.e0;
        real _t0F59 = 0.e0;
        vec4 _t0F5A = [_t0F56, _t0F57, _t0F58, _t0F59];
        real _t0F5B = 0.e0;
        real _t0F5C = 0.e0;
        real _t0F5D = 0.e0;
        real _t0F5E = 0.1e1;
        vec4 _t0F5F = [_t0F5B, _t0F5C, _t0F5D, _t0F5E];
        tensor[4,4] _t0F60 = [_t0F50, _t0F55, _t0F5A, _t0F5F];
        tensor[4,4][4] _t0F61 = {_t0F21, _t0F36, _t0F4B, _t0F60};
        real _t0F62 = -0.1e1;
        real _t0F63 = -0.57735026919e0;
        real _t0F64 = -0.1e1;
        real _t0F65 = 0.1e1;
        vec4 _t0F66 = [_t0F62, _t0F63, _t0F64, _t0F65];
        real _t0F67 = 0.1e1;
        real _t0F68 = -0.57735026919e0;
        real _t0F69 = 0.e0;
        real _t0F6A = 0.e0;
        vec4 _t0F6B = [_t0F67, _t0F68, _t0F69, _t0F6A];
        real _t0F6C = 0.e0;
        real _t0F6D = -0.57735026919e0;
        real _t0F6E = 0.1e1;
        real _t0F6F = 0.e0;
        vec4 _t0F70 = [_t0F6C, _t0F6D, _t0F6E, _t0F6F];
        real _t0F71 = 0.e0;
        real _t0F72 = 0.e0;
        real _t0F73 = 0.e0;
        real _t0F74 = 0.1e1;
        vec4 _t0F75 = [_t0F71, _t0F72, _t0F73, _t0F74];
        tensor[4,4] _t0F76 = [_t0F66, _t0F6B, _t0F70, _t0F75];
        real _t0F77 = 0.e0;
        real _t0F78 = -0.1e1;
        real _t0F79 = 0.e0;
        real _t0F7A = 0.e0;
        vec4 _t0F7B = [_t0F77, _t0F78, _t0F79, _t0F7A];
        real _t0F7C = 0.1e1;
        real _t0F7D = 0.e0;
        real _t0F7E = 0.e0;
        real _t0F7F = 0.e0;
        vec4 _t0F80 = [_t0F7C, _t0F7D, _t0F7E, _t0F7F];
        real _t0F81 = 0.e0;
        real _t0F82 = 0.e0;
        real _t0F83 = 0.1e1;
        real _t0F84 = 0.e0;
        vec4 _t0F85 = [_t0F81, _t0F82, _t0F83, _t0F84];
        real _t0F86 = 0.e0;
        real _t0F87 = 0.e0;
        real _t0F88 = 0.e0;
        real _t0F89 = 0.1e1;
        vec4 _t0F8A = [_t0F86, _t0F87, _t0F88, _t0F89];
        tensor[4,4] _t0F8B = [_t0F7B, _t0F80, _t0F85, _t0F8A];
        real _t0F8C = 0.1e1;
        real _t0F8D = 0.e0;
        real _t0F8E = 0.e0;
        real _t0F8F = 0.e0;
        vec4 _t0F90 = [_t0F8C, _t0F8D, _t0F8E, _t0F8F];
        real _t0F91 = 0.e0;
        real _t0F92 = 0.1e1;
        real _t0F93 = 0.e0;
        real _t0F94 = 0.e0;
        vec4 _t0F95 = [_t0F91, _t0F92, _t0F93, _t0F94];
        real _t0F96 = 0.e0;
        real _t0F97 = 0.e0;
        real _t0F98 = 0.1e1;
        real _t0F99 = 0.e0;
        vec4 _t0F9A = [_t0F96, _t0F97, _t0F98, _t0F99];
        real _t0F9B = 0.e0;
        real _t0F9C = 0.e0;
        real _t0F9D = 0.e0;
        real _t0F9E = 0.1e1;
        vec4 _t0F9F = [_t0F9B, _t0F9C, _t0F9D, _t0F9E];
        tensor[4,4] _t0FA0 = [_t0F90, _t0F95, _t0F9A, _t0F9F];
        real _t0FA1 = 0.1e1;
        real _t0FA2 = 0.e0;
        real _t0FA3 = 0.e0;
        real _t0FA4 = 0.e0;
        vec4 _t0FA5 = [_t0FA1, _t0FA2, _t0FA3, _t0FA4];
        real _t0FA6 = 0.e0;
        real _t0FA7 = 0.e0;
        real _t0FA8 = 0.1e1;
        real _t0FA9 = 0.e0;
        vec4 _t0FAA = [_t0FA6, _t0FA7, _t0FA8, _t0FA9];
        real _t0FAB = 0.e0;
        real _t0FAC = -0.1e1;
        real _t0FAD = 0.e0;
        real _t0FAE = 0.e0;
        vec4 _t0FAF = [_t0FAB, _t0FAC, _t0FAD, _t0FAE];
        real _t0FB0 = 0.e0;
        real _t0FB1 = 0.e0;
        real _t0FB2 = 0.e0;
        real _t0FB3 = 0.1e1;
        vec4 _t0FB4 = [_t0FB0, _t0FB1, _t0FB2, _t0FB3];
        tensor[4,4] _t0FB5 = [_t0FA5, _t0FAA, _t0FAF, _t0FB4];
        tensor[4,4][4] _t0FB6 = {_t0F76, _t0F8B, _t0FA0, _t0FB5};
        real _t0FB7 = -0.1e1;
        real _t0FB8 = -0.1e1;
        real _t0FB9 = 0.57735026919e0;
        real _t0FBA = 0.1e1;
        vec4 _t0FBB = [_t0FB7, _t0FB8, _t0FB9, _t0FBA];
        real _t0FBC = 0.1e1;
        real _t0FBD = 0.e0;
        real _t0FBE = 0.57735026919e0;
        real _t0FBF = 0.e0;
        vec4 _t0FC0 = [_t0FBC, _t0FBD, _t0FBE, _t0FBF];
        real _t0FC1 = 0.e0;
        real _t0FC2 = 0.1e1;
        real _t0FC3 = 0.57735026919e0;
        real _t0FC4 = 0.e0;
        vec4 _t0FC5 = [_t0FC1, _t0FC2, _t0FC3, _t0FC4];
        real _t0FC6 = 0.e0;
        real _t0FC7 = 0.e0;
        real _t0FC8 = 0.e0;
        real _t0FC9 = 0.1e1;
        vec4 _t0FCA = [_t0FC6, _t0FC7, _t0FC8, _t0FC9];
        tensor[4,4] _t0FCB = [_t0FBB, _t0FC0, _t0FC5, _t0FCA];
        real _t0FCC = 0.e0;
        real _t0FCD = 0.e0;
        real _t0FCE = 0.1e1;
        real _t0FCF = 0.e0;
        vec4 _t0FD0 = [_t0FCC, _t0FCD, _t0FCE, _t0FCF];
        real _t0FD1 = 0.1e1;
        real _t0FD2 = 0.e0;
        real _t0FD3 = 0.e0;
        real _t0FD4 = 0.e0;
        vec4 _t0FD5 = [_t0FD1, _t0FD2, _t0FD3, _t0FD4];
        real _t0FD6 = 0.e0;
        real _t0FD7 = 0.1e1;
        real _t0FD8 = 0.e0;
        real _t0FD9 = 0.e0;
        vec4 _t0FDA = [_t0FD6, _t0FD7, _t0FD8, _t0FD9];
        real _t0FDB = 0.e0;
        real _t0FDC = 0.e0;
        real _t0FDD = 0.e0;
        real _t0FDE = 0.1e1;
        vec4 _t0FDF = [_t0FDB, _t0FDC, _t0FDD, _t0FDE];
        tensor[4,4] _t0FE0 = [_t0FD0, _t0FD5, _t0FDA, _t0FDF];
        real _t0FE1 = 0.1e1;
        real _t0FE2 = 0.e0;
        real _t0FE3 = 0.e0;
        real _t0FE4 = 0.e0;
        vec4 _t0FE5 = [_t0FE1, _t0FE2, _t0FE3, _t0FE4];
        real _t0FE6 = 0.e0;
        real _t0FE7 = 0.e0;
        real _t0FE8 = -0.1e1;
        real _t0FE9 = 0.e0;
        vec4 _t0FEA = [_t0FE6, _t0FE7, _t0FE8, _t0FE9];
        real _t0FEB = 0.e0;
        real _t0FEC = 0.1e1;
        real _t0FED = 0.e0;
        real _t0FEE = 0.e0;
        vec4 _t0FEF = [_t0FEB, _t0FEC, _t0FED, _t0FEE];
        real _t0FF0 = 0.e0;
        real _t0FF1 = 0.e0;
        real _t0FF2 = 0.e0;
        real _t0FF3 = 0.1e1;
        vec4 _t0FF4 = [_t0FF0, _t0FF1, _t0FF2, _t0FF3];
        tensor[4,4] _t0FF5 = [_t0FE5, _t0FEA, _t0FEF, _t0FF4];
        real _t0FF6 = 0.1e1;
        real _t0FF7 = 0.e0;
        real _t0FF8 = 0.e0;
        real _t0FF9 = 0.e0;
        vec4 _t0FFA = [_t0FF6, _t0FF7, _t0FF8, _t0FF9];
        real _t0FFB = 0.e0;
        real _t0FFC = 0.1e1;
        real _t0FFD = 0.e0;
        real _t0FFE = 0.e0;
        vec4 _t0FFF = [_t0FFB, _t0FFC, _t0FFD, _t0FFE];
        real _t1000 = 0.e0;
        real _t1001 = 0.e0;
        real _t1002 = 0.1e1;
        real _t1003 = 0.e0;
        vec4 _t1004 = [_t1000, _t1001, _t1002, _t1003];
        real _t1005 = 0.e0;
        real _t1006 = 0.e0;
        real _t1007 = 0.e0;
        real _t1008 = 0.1e1;
        vec4 _t1009 = [_t1005, _t1006, _t1007, _t1008];
        tensor[4,4] _t100A = [_t0FFA, _t0FFF, _t1004, _t1009];
        tensor[4,4][4] _t100B = {_t0FCB, _t0FE0, _t0FF5, _t100A};
        tensor[4,4][4][4] _t100C = {_t0F0C, _t0F61, _t0FB6, _t100B};
        real _t100D = _t0E3A[1];
        int _t100E = prim $r2i01B7 (_t100D);
        tensor[4,4][4] _t100F = prim $sub01C0<tensor[4,4][4]; %4> (_t100C, _t100E);
        real _t1010 = _t0E3A[1];
        int _t1011 = prim $r2i01B7 (_t1010);
        int[2] _t1012 = func nextCell4048A (_t1011, _t0E36, _t0E35);
        int _t1013 = 1;
        int _t1014 = prim $sub01C0<int; %2> (_t1012, _t1013);
        tensor[4,4] _t1015 = prim $sub01C0<tensor[4,4]; %4> (_t100F, _t1014);
        string _t1016 = "\n";
        print (_t0EAD, _t0EAF, _t0EB0, _t0EB5, _t0EB6, _t0EB7, _t1015, _t1016);
        real _t1017 = _t0E3A[1];
        int _t1018 = prim $r2i01B7 (_t1017);
        int[2] _t1019 = func nextCell4048A (_t1018, _t0E36, _t0E35);
        int _t101A = 0;
        int _t101B = prim $sub01C0<int; %2> (_t1019, _t101A);
        real _t101C = 0.1e1;
        real _t101D = 0.e0;
        real _t101E = 0.e0;
        real _t101F = 0.e0;
        vec4 _t1020 = [_t101C, _t101D, _t101E, _t101F];
        real _t1021 = 0.e0;
        real _t1022 = 0.1e1;
        real _t1023 = 0.e0;
        real _t1024 = 0.e0;
        vec4 _t1025 = [_t1021, _t1022, _t1023, _t1024];
        real _t1026 = 0.e0;
        real _t1027 = 0.e0;
        real _t1028 = 0.1e1;
        real _t1029 = 0.e0;
        vec4 _t102A = [_t1026, _t1027, _t1028, _t1029];
        real _t102B = 0.971445146547e-16;
        real _t102C = 0.e0;
        real _t102D = 0.e0;
        real _t102E = 0.1e1;
        vec4 _t102F = [_t102B, _t102C, _t102D, _t102E];
        tensor[4,4] _t1030 = [_t1020, _t1025, _t102A, _t102F];
        real _t1031 = 0.57735026919e0;
        real _t1032 = 0.57735026919e0;
        real _t1033 = 0.57735026919e0;
        real _t1034 = -0.57735026919e0;
        vec4 _t1035 = [_t1031, _t1032, _t1033, _t1034];
        real _t1036 = -0.333333333333e0;
        real _t1037 = 0.666666666667e0;
        real _t1038 = -0.333333333333e0;
        real _t1039 = 0.333333333333e0;
        vec4 _t103A = [_t1036, _t1037, _t1038, _t1039];
        real _t103B = -0.333333333333e0;
        real _t103C = -0.333333333333e0;
        real _t103D = 0.666666666667e0;
        real _t103E = 0.333333333333e0;
        vec4 _t103F = [_t103B, _t103C, _t103D, _t103E];
        real _t1040 = 0.971445146547e-16;
        real _t1041 = 0.e0;
        real _t1042 = 0.e0;
        real _t1043 = 0.1e1;
        vec4 _t1044 = [_t1040, _t1041, _t1042, _t1043];
        tensor[4,4] _t1045 = [_t1035, _t103A, _t103F, _t1044];
        real _t1046 = -0.333333333333e0;
        real _t1047 = 0.666666666667e0;
        real _t1048 = -0.333333333333e0;
        real _t1049 = 0.333333333333e0;
        vec4 _t104A = [_t1046, _t1047, _t1048, _t1049];
        real _t104B = -0.57735026919e0;
        real _t104C = -0.57735026919e0;
        real _t104D = -0.57735026919e0;
        real _t104E = 0.57735026919e0;
        vec4 _t104F = [_t104B, _t104C, _t104D, _t104E];
        real _t1050 = -0.333333333333e0;
        real _t1051 = -0.333333333333e0;
        real _t1052 = 0.666666666667e0;
        real _t1053 = 0.333333333333e0;
        vec4 _t1054 = [_t1050, _t1051, _t1052, _t1053];
        real _t1055 = 0.971445146547e-16;
        real _t1056 = 0.e0;
        real _t1057 = 0.e0;
        real _t1058 = 0.1e1;
        vec4 _t1059 = [_t1055, _t1056, _t1057, _t1058];
        tensor[4,4] _t105A = [_t104A, _t104F, _t1054, _t1059];
        real _t105B = -0.333333333333e0;
        real _t105C = 0.666666666667e0;
        real _t105D = -0.333333333333e0;
        real _t105E = 0.333333333333e0;
        vec4 _t105F = [_t105B, _t105C, _t105D, _t105E];
        real _t1060 = -0.333333333333e0;
        real _t1061 = -0.333333333333e0;
        real _t1062 = 0.666666666667e0;
        real _t1063 = 0.333333333333e0;
        vec4 _t1064 = [_t1060, _t1061, _t1062, _t1063];
        real _t1065 = 0.57735026919e0;
        real _t1066 = 0.57735026919e0;
        real _t1067 = 0.57735026919e0;
        real _t1068 = -0.57735026919e0;
        vec4 _t1069 = [_t1065, _t1066, _t1067, _t1068];
        real _t106A = 0.971445146547e-16;
        real _t106B = 0.e0;
        real _t106C = 0.e0;
        real _t106D = 0.1e1;
        vec4 _t106E = [_t106A, _t106B, _t106C, _t106D];
        tensor[4,4] _t106F = [_t105F, _t1064, _t1069, _t106E];
        tensor[4,4][4] _t1070 = {_t1030, _t1045, _t105A, _t106F};
        real _t1071 = 0.57735026919e0;
        real _t1072 = -0.1e1;
        real _t1073 = -0.1e1;
        real _t1074 = 0.1e1;
        vec4 _t1075 = [_t1071, _t1072, _t1073, _t1074];
        real _t1076 = 0.57735026919e0;
        real _t1077 = 0.1e1;
        real _t1078 = 0.e0;
        real _t1079 = 0.e0;
        vec4 _t107A = [_t1076, _t1077, _t1078, _t1079];
        real _t107B = 0.57735026919e0;
        real _t107C = 0.e0;
        real _t107D = 0.1e1;
        real _t107E = 0.e0;
        vec4 _t107F = [_t107B, _t107C, _t107D, _t107E];
        real _t1080 = 0.e0;
        real _t1081 = 0.e0;
        real _t1082 = 0.e0;
        real _t1083 = 0.1e1;
        vec4 _t1084 = [_t1080, _t1081, _t1082, _t1083];
        tensor[4,4] _t1085 = [_t1075, _t107A, _t107F, _t1084];
        real _t1086 = 0.1e1;
        real _t1087 = 0.e0;
        real _t1088 = 0.e0;
        real _t1089 = 0.e0;
        vec4 _t108A = [_t1086, _t1087, _t1088, _t1089];
        real _t108B = 0.e0;
        real _t108C = 0.1e1;
        real _t108D = 0.e0;
        real _t108E = 0.e0;
        vec4 _t108F = [_t108B, _t108C, _t108D, _t108E];
        real _t1090 = 0.e0;
        real _t1091 = 0.e0;
        real _t1092 = 0.1e1;
        real _t1093 = 0.e0;
        vec4 _t1094 = [_t1090, _t1091, _t1092, _t1093];
        real _t1095 = 0.e0;
        real _t1096 = 0.e0;
        real _t1097 = 0.e0;
        real _t1098 = 0.1e1;
        vec4 _t1099 = [_t1095, _t1096, _t1097, _t1098];
        tensor[4,4] _t109A = [_t108A, _t108F, _t1094, _t1099];
        real _t109B = 0.e0;
        real _t109C = 0.1e1;
        real _t109D = 0.e0;
        real _t109E = 0.e0;
        vec4 _t109F = [_t109B, _t109C, _t109D, _t109E];
        real _t10A0 = -0.1e1;
        real _t10A1 = 0.e0;
        real _t10A2 = 0.e0;
        real _t10A3 = 0.e0;
        vec4 _t10A4 = [_t10A0, _t10A1, _t10A2, _t10A3];
        real _t10A5 = 0.e0;
        real _t10A6 = 0.e0;
        real _t10A7 = 0.1e1;
        real _t10A8 = 0.e0;
        vec4 _t10A9 = [_t10A5, _t10A6, _t10A7, _t10A8];
        real _t10AA = 0.e0;
        real _t10AB = 0.e0;
        real _t10AC = 0.e0;
        real _t10AD = 0.1e1;
        vec4 _t10AE = [_t10AA, _t10AB, _t10AC, _t10AD];
        tensor[4,4] _t10AF = [_t109F, _t10A4, _t10A9, _t10AE];
        real _t10B0 = 0.e0;
        real _t10B1 = 0.1e1;
        real _t10B2 = 0.e0;
        real _t10B3 = 0.e0;
        vec4 _t10B4 = [_t10B0, _t10B1, _t10B2, _t10B3];
        real _t10B5 = 0.e0;
        real _t10B6 = 0.e0;
        real _t10B7 = 0.1e1;
        real _t10B8 = 0.e0;
        vec4 _t10B9 = [_t10B5, _t10B6, _t10B7, _t10B8];
        real _t10BA = 0.1e1;
        real _t10BB = 0.e0;
        real _t10BC = 0.e0;
        real _t10BD = 0.e0;
        vec4 _t10BE = [_t10BA, _t10BB, _t10BC, _t10BD];
        real _t10BF = 0.e0;
        real _t10C0 = 0.e0;
        real _t10C1 = 0.e0;
        real _t10C2 = 0.1e1;
        vec4 _t10C3 = [_t10BF, _t10C0, _t10C1, _t10C2];
        tensor[4,4] _t10C4 = [_t10B4, _t10B9, _t10BE, _t10C3];
        tensor[4,4][4] _t10C5 = {_t1085, _t109A, _t10AF, _t10C4};
        real _t10C6 = -0.1e1;
        real _t10C7 = -0.57735026919e0;
        real _t10C8 = -0.1e1;
        real _t10C9 = 0.1e1;
        vec4 _t10CA = [_t10C6, _t10C7, _t10C8, _t10C9];
        real _t10CB = 0.1e1;
        real _t10CC = -0.57735026919e0;
        real _t10CD = 0.e0;
        real _t10CE = 0.e0;
        vec4 _t10CF = [_t10CB, _t10CC, _t10CD, _t10CE];
        real _t10D0 = 0.e0;
        real _t10D1 = -0.57735026919e0;
        real _t10D2 = 0.1e1;
        real _t10D3 = 0.e0;
        vec4 _t10D4 = [_t10D0, _t10D1, _t10D2, _t10D3];
        real _t10D5 = 0.e0;
        real _t10D6 = 0.e0;
        real _t10D7 = 0.e0;
        real _t10D8 = 0.1e1;
        vec4 _t10D9 = [_t10D5, _t10D6, _t10D7, _t10D8];
        tensor[4,4] _t10DA = [_t10CA, _t10CF, _t10D4, _t10D9];
        real _t10DB = 0.e0;
        real _t10DC = -0.1e1;
        real _t10DD = 0.e0;
        real _t10DE = 0.e0;
        vec4 _t10DF = [_t10DB, _t10DC, _t10DD, _t10DE];
        real _t10E0 = 0.1e1;
        real _t10E1 = 0.e0;
        real _t10E2 = 0.e0;
        real _t10E3 = 0.e0;
        vec4 _t10E4 = [_t10E0, _t10E1, _t10E2, _t10E3];
        real _t10E5 = 0.e0;
        real _t10E6 = 0.e0;
        real _t10E7 = 0.1e1;
        real _t10E8 = 0.e0;
        vec4 _t10E9 = [_t10E5, _t10E6, _t10E7, _t10E8];
        real _t10EA = 0.e0;
        real _t10EB = 0.e0;
        real _t10EC = 0.e0;
        real _t10ED = 0.1e1;
        vec4 _t10EE = [_t10EA, _t10EB, _t10EC, _t10ED];
        tensor[4,4] _t10EF = [_t10DF, _t10E4, _t10E9, _t10EE];
        real _t10F0 = 0.1e1;
        real _t10F1 = 0.e0;
        real _t10F2 = 0.e0;
        real _t10F3 = 0.e0;
        vec4 _t10F4 = [_t10F0, _t10F1, _t10F2, _t10F3];
        real _t10F5 = 0.e0;
        real _t10F6 = 0.1e1;
        real _t10F7 = 0.e0;
        real _t10F8 = 0.e0;
        vec4 _t10F9 = [_t10F5, _t10F6, _t10F7, _t10F8];
        real _t10FA = 0.e0;
        real _t10FB = 0.e0;
        real _t10FC = 0.1e1;
        real _t10FD = 0.e0;
        vec4 _t10FE = [_t10FA, _t10FB, _t10FC, _t10FD];
        real _t10FF = 0.e0;
        real _t1100 = 0.e0;
        real _t1101 = 0.e0;
        real _t1102 = 0.1e1;
        vec4 _t1103 = [_t10FF, _t1100, _t1101, _t1102];
        tensor[4,4] _t1104 = [_t10F4, _t10F9, _t10FE, _t1103];
        real _t1105 = 0.1e1;
        real _t1106 = 0.e0;
        real _t1107 = 0.e0;
        real _t1108 = 0.e0;
        vec4 _t1109 = [_t1105, _t1106, _t1107, _t1108];
        real _t110A = 0.e0;
        real _t110B = 0.e0;
        real _t110C = 0.1e1;
        real _t110D = 0.e0;
        vec4 _t110E = [_t110A, _t110B, _t110C, _t110D];
        real _t110F = 0.e0;
        real _t1110 = -0.1e1;
        real _t1111 = 0.e0;
        real _t1112 = 0.e0;
        vec4 _t1113 = [_t110F, _t1110, _t1111, _t1112];
        real _t1114 = 0.e0;
        real _t1115 = 0.e0;
        real _t1116 = 0.e0;
        real _t1117 = 0.1e1;
        vec4 _t1118 = [_t1114, _t1115, _t1116, _t1117];
        tensor[4,4] _t1119 = [_t1109, _t110E, _t1113, _t1118];
        tensor[4,4][4] _t111A = {_t10DA, _t10EF, _t1104, _t1119};
        real _t111B = -0.1e1;
        real _t111C = -0.1e1;
        real _t111D = 0.57735026919e0;
        real _t111E = 0.1e1;
        vec4 _t111F = [_t111B, _t111C, _t111D, _t111E];
        real _t1120 = 0.1e1;
        real _t1121 = 0.e0;
        real _t1122 = 0.57735026919e0;
        real _t1123 = 0.e0;
        vec4 _t1124 = [_t1120, _t1121, _t1122, _t1123];
        real _t1125 = 0.e0;
        real _t1126 = 0.1e1;
        real _t1127 = 0.57735026919e0;
        real _t1128 = 0.e0;
        vec4 _t1129 = [_t1125, _t1126, _t1127, _t1128];
        real _t112A = 0.e0;
        real _t112B = 0.e0;
        real _t112C = 0.e0;
        real _t112D = 0.1e1;
        vec4 _t112E = [_t112A, _t112B, _t112C, _t112D];
        tensor[4,4] _t112F = [_t111F, _t1124, _t1129, _t112E];
        real _t1130 = 0.e0;
        real _t1131 = 0.e0;
        real _t1132 = 0.1e1;
        real _t1133 = 0.e0;
        vec4 _t1134 = [_t1130, _t1131, _t1132, _t1133];
        real _t1135 = 0.1e1;
        real _t1136 = 0.e0;
        real _t1137 = 0.e0;
        real _t1138 = 0.e0;
        vec4 _t1139 = [_t1135, _t1136, _t1137, _t1138];
        real _t113A = 0.e0;
        real _t113B = 0.1e1;
        real _t113C = 0.e0;
        real _t113D = 0.e0;
        vec4 _t113E = [_t113A, _t113B, _t113C, _t113D];
        real _t113F = 0.e0;
        real _t1140 = 0.e0;
        real _t1141 = 0.e0;
        real _t1142 = 0.1e1;
        vec4 _t1143 = [_t113F, _t1140, _t1141, _t1142];
        tensor[4,4] _t1144 = [_t1134, _t1139, _t113E, _t1143];
        real _t1145 = 0.1e1;
        real _t1146 = 0.e0;
        real _t1147 = 0.e0;
        real _t1148 = 0.e0;
        vec4 _t1149 = [_t1145, _t1146, _t1147, _t1148];
        real _t114A = 0.e0;
        real _t114B = 0.e0;
        real _t114C = -0.1e1;
        real _t114D = 0.e0;
        vec4 _t114E = [_t114A, _t114B, _t114C, _t114D];
        real _t114F = 0.e0;
        real _t1150 = 0.1e1;
        real _t1151 = 0.e0;
        real _t1152 = 0.e0;
        vec4 _t1153 = [_t114F, _t1150, _t1151, _t1152];
        real _t1154 = 0.e0;
        real _t1155 = 0.e0;
        real _t1156 = 0.e0;
        real _t1157 = 0.1e1;
        vec4 _t1158 = [_t1154, _t1155, _t1156, _t1157];
        tensor[4,4] _t1159 = [_t1149, _t114E, _t1153, _t1158];
        real _t115A = 0.1e1;
        real _t115B = 0.e0;
        real _t115C = 0.e0;
        real _t115D = 0.e0;
        vec4 _t115E = [_t115A, _t115B, _t115C, _t115D];
        real _t115F = 0.e0;
        real _t1160 = 0.1e1;
        real _t1161 = 0.e0;
        real _t1162 = 0.e0;
        vec4 _t1163 = [_t115F, _t1160, _t1161, _t1162];
        real _t1164 = 0.e0;
        real _t1165 = 0.e0;
        real _t1166 = 0.1e1;
        real _t1167 = 0.e0;
        vec4 _t1168 = [_t1164, _t1165, _t1166, _t1167];
        real _t1169 = 0.e0;
        real _t116A = 0.e0;
        real _t116B = 0.e0;
        real _t116C = 0.1e1;
        vec4 _t116D = [_t1169, _t116A, _t116B, _t116C];
        tensor[4,4] _t116E = [_t115E, _t1163, _t1168, _t116D];
        tensor[4,4][4] _t116F = {_t112F, _t1144, _t1159, _t116E};
        tensor[4,4][4][4] _t1170 = {_t1070, _t10C5, _t111A, _t116F};
        real _t1171 = _t0E3A[1];
        int _t1172 = prim $r2i01B7 (_t1171);
        tensor[4,4][4] _t1173 = prim $sub01C0<tensor[4,4][4]; %4> (_t1170, _t1172);
        real _t1174 = _t0E3A[1];
        int _t1175 = prim $r2i01B7 (_t1174);
        int[2] _t1176 = func nextCell4048A (_t1175, _t0E36, _t0E35);
        int _t1177 = 1;
        int _t1178 = prim $sub01C0<int; %2> (_t1176, _t1177);
        tensor[4,4] _t1179 = prim $sub01C0<tensor[4,4]; %4> (_t1173, _t1178);
        real _t117A = _t0E3A[0];
        vec3 _t117B = prim *0036<$[3]> (_t117A, deltaP0E00);
        vec3 _t117C = prim +0017<$[3]> (_t117B, _t0E37);
        real _t117D = _t117C[0];
        real _t117E = _t0E3A[0];
        vec3 _t117F = prim *0036<$[3]> (_t117E, deltaP0E00);
        vec3 _t1180 = prim +0017<$[3]> (_t117F, _t0E37);
        real _t1181 = _t1180[1];
        real _t1182 = _t0E3A[0];
        vec3 _t1183 = prim *0036<$[3]> (_t1182, deltaP0E00);
        vec3 _t1184 = prim +0017<$[3]> (_t1183, _t0E37);
        real _t1185 = _t1184[2];
        real _t1186 = 0.1e1;
        vec4 _t1187 = [_t117D, _t1181, _t1185, _t1186];
        vec4 _t1188 = prim •00CE<$[4,4]; $[4]; $[4]> (_t1179, _t1187);
        real _t1189 = _t1188[0];
        real _t118A = 0.1e1;
        real _t118B = 0.e0;
        real _t118C = 0.e0;
        real _t118D = 0.e0;
        vec4 _t118E = [_t118A, _t118B, _t118C, _t118D];
        real _t118F = 0.e0;
        real _t1190 = 0.1e1;
        real _t1191 = 0.e0;
        real _t1192 = 0.e0;
        vec4 _t1193 = [_t118F, _t1190, _t1191, _t1192];
        real _t1194 = 0.e0;
        real _t1195 = 0.e0;
        real _t1196 = 0.1e1;
        real _t1197 = 0.e0;
        vec4 _t1198 = [_t1194, _t1195, _t1196, _t1197];
        real _t1199 = 0.971445146547e-16;
        real _t119A = 0.e0;
        real _t119B = 0.e0;
        real _t119C = 0.1e1;
        vec4 _t119D = [_t1199, _t119A, _t119B, _t119C];
        tensor[4,4] _t119E = [_t118E, _t1193, _t1198, _t119D];
        real _t119F = 0.57735026919e0;
        real _t11A0 = 0.57735026919e0;
        real _t11A1 = 0.57735026919e0;
        real _t11A2 = -0.57735026919e0;
        vec4 _t11A3 = [_t119F, _t11A0, _t11A1, _t11A2];
        real _t11A4 = -0.333333333333e0;
        real _t11A5 = 0.666666666667e0;
        real _t11A6 = -0.333333333333e0;
        real _t11A7 = 0.333333333333e0;
        vec4 _t11A8 = [_t11A4, _t11A5, _t11A6, _t11A7];
        real _t11A9 = -0.333333333333e0;
        real _t11AA = -0.333333333333e0;
        real _t11AB = 0.666666666667e0;
        real _t11AC = 0.333333333333e0;
        vec4 _t11AD = [_t11A9, _t11AA, _t11AB, _t11AC];
        real _t11AE = 0.971445146547e-16;
        real _t11AF = 0.e0;
        real _t11B0 = 0.e0;
        real _t11B1 = 0.1e1;
        vec4 _t11B2 = [_t11AE, _t11AF, _t11B0, _t11B1];
        tensor[4,4] _t11B3 = [_t11A3, _t11A8, _t11AD, _t11B2];
        real _t11B4 = -0.333333333333e0;
        real _t11B5 = 0.666666666667e0;
        real _t11B6 = -0.333333333333e0;
        real _t11B7 = 0.333333333333e0;
        vec4 _t11B8 = [_t11B4, _t11B5, _t11B6, _t11B7];
        real _t11B9 = -0.57735026919e0;
        real _t11BA = -0.57735026919e0;
        real _t11BB = -0.57735026919e0;
        real _t11BC = 0.57735026919e0;
        vec4 _t11BD = [_t11B9, _t11BA, _t11BB, _t11BC];
        real _t11BE = -0.333333333333e0;
        real _t11BF = -0.333333333333e0;
        real _t11C0 = 0.666666666667e0;
        real _t11C1 = 0.333333333333e0;
        vec4 _t11C2 = [_t11BE, _t11BF, _t11C0, _t11C1];
        real _t11C3 = 0.971445146547e-16;
        real _t11C4 = 0.e0;
        real _t11C5 = 0.e0;
        real _t11C6 = 0.1e1;
        vec4 _t11C7 = [_t11C3, _t11C4, _t11C5, _t11C6];
        tensor[4,4] _t11C8 = [_t11B8, _t11BD, _t11C2, _t11C7];
        real _t11C9 = -0.333333333333e0;
        real _t11CA = 0.666666666667e0;
        real _t11CB = -0.333333333333e0;
        real _t11CC = 0.333333333333e0;
        vec4 _t11CD = [_t11C9, _t11CA, _t11CB, _t11CC];
        real _t11CE = -0.333333333333e0;
        real _t11CF = -0.333333333333e0;
        real _t11D0 = 0.666666666667e0;
        real _t11D1 = 0.333333333333e0;
        vec4 _t11D2 = [_t11CE, _t11CF, _t11D0, _t11D1];
        real _t11D3 = 0.57735026919e0;
        real _t11D4 = 0.57735026919e0;
        real _t11D5 = 0.57735026919e0;
        real _t11D6 = -0.57735026919e0;
        vec4 _t11D7 = [_t11D3, _t11D4, _t11D5, _t11D6];
        real _t11D8 = 0.971445146547e-16;
        real _t11D9 = 0.e0;
        real _t11DA = 0.e0;
        real _t11DB = 0.1e1;
        vec4 _t11DC = [_t11D8, _t11D9, _t11DA, _t11DB];
        tensor[4,4] _t11DD = [_t11CD, _t11D2, _t11D7, _t11DC];
        tensor[4,4][4] _t11DE = {_t119E, _t11B3, _t11C8, _t11DD};
        real _t11DF = 0.57735026919e0;
        real _t11E0 = -0.1e1;
        real _t11E1 = -0.1e1;
        real _t11E2 = 0.1e1;
        vec4 _t11E3 = [_t11DF, _t11E0, _t11E1, _t11E2];
        real _t11E4 = 0.57735026919e0;
        real _t11E5 = 0.1e1;
        real _t11E6 = 0.e0;
        real _t11E7 = 0.e0;
        vec4 _t11E8 = [_t11E4, _t11E5, _t11E6, _t11E7];
        real _t11E9 = 0.57735026919e0;
        real _t11EA = 0.e0;
        real _t11EB = 0.1e1;
        real _t11EC = 0.e0;
        vec4 _t11ED = [_t11E9, _t11EA, _t11EB, _t11EC];
        real _t11EE = 0.e0;
        real _t11EF = 0.e0;
        real _t11F0 = 0.e0;
        real _t11F1 = 0.1e1;
        vec4 _t11F2 = [_t11EE, _t11EF, _t11F0, _t11F1];
        tensor[4,4] _t11F3 = [_t11E3, _t11E8, _t11ED, _t11F2];
        real _t11F4 = 0.1e1;
        real _t11F5 = 0.e0;
        real _t11F6 = 0.e0;
        real _t11F7 = 0.e0;
        vec4 _t11F8 = [_t11F4, _t11F5, _t11F6, _t11F7];
        real _t11F9 = 0.e0;
        real _t11FA = 0.1e1;
        real _t11FB = 0.e0;
        real _t11FC = 0.e0;
        vec4 _t11FD = [_t11F9, _t11FA, _t11FB, _t11FC];
        real _t11FE = 0.e0;
        real _t11FF = 0.e0;
        real _t1200 = 0.1e1;
        real _t1201 = 0.e0;
        vec4 _t1202 = [_t11FE, _t11FF, _t1200, _t1201];
        real _t1203 = 0.e0;
        real _t1204 = 0.e0;
        real _t1205 = 0.e0;
        real _t1206 = 0.1e1;
        vec4 _t1207 = [_t1203, _t1204, _t1205, _t1206];
        tensor[4,4] _t1208 = [_t11F8, _t11FD, _t1202, _t1207];
        real _t1209 = 0.e0;
        real _t120A = 0.1e1;
        real _t120B = 0.e0;
        real _t120C = 0.e0;
        vec4 _t120D = [_t1209, _t120A, _t120B, _t120C];
        real _t120E = -0.1e1;
        real _t120F = 0.e0;
        real _t1210 = 0.e0;
        real _t1211 = 0.e0;
        vec4 _t1212 = [_t120E, _t120F, _t1210, _t1211];
        real _t1213 = 0.e0;
        real _t1214 = 0.e0;
        real _t1215 = 0.1e1;
        real _t1216 = 0.e0;
        vec4 _t1217 = [_t1213, _t1214, _t1215, _t1216];
        real _t1218 = 0.e0;
        real _t1219 = 0.e0;
        real _t121A = 0.e0;
        real _t121B = 0.1e1;
        vec4 _t121C = [_t1218, _t1219, _t121A, _t121B];
        tensor[4,4] _t121D = [_t120D, _t1212, _t1217, _t121C];
        real _t121E = 0.e0;
        real _t121F = 0.1e1;
        real _t1220 = 0.e0;
        real _t1221 = 0.e0;
        vec4 _t1222 = [_t121E, _t121F, _t1220, _t1221];
        real _t1223 = 0.e0;
        real _t1224 = 0.e0;
        real _t1225 = 0.1e1;
        real _t1226 = 0.e0;
        vec4 _t1227 = [_t1223, _t1224, _t1225, _t1226];
        real _t1228 = 0.1e1;
        real _t1229 = 0.e0;
        real _t122A = 0.e0;
        real _t122B = 0.e0;
        vec4 _t122C = [_t1228, _t1229, _t122A, _t122B];
        real _t122D = 0.e0;
        real _t122E = 0.e0;
        real _t122F = 0.e0;
        real _t1230 = 0.1e1;
        vec4 _t1231 = [_t122D, _t122E, _t122F, _t1230];
        tensor[4,4] _t1232 = [_t1222, _t1227, _t122C, _t1231];
        tensor[4,4][4] _t1233 = {_t11F3, _t1208, _t121D, _t1232};
        real _t1234 = -0.1e1;
        real _t1235 = -0.57735026919e0;
        real _t1236 = -0.1e1;
        real _t1237 = 0.1e1;
        vec4 _t1238 = [_t1234, _t1235, _t1236, _t1237];
        real _t1239 = 0.1e1;
        real _t123A = -0.57735026919e0;
        real _t123B = 0.e0;
        real _t123C = 0.e0;
        vec4 _t123D = [_t1239, _t123A, _t123B, _t123C];
        real _t123E = 0.e0;
        real _t123F = -0.57735026919e0;
        real _t1240 = 0.1e1;
        real _t1241 = 0.e0;
        vec4 _t1242 = [_t123E, _t123F, _t1240, _t1241];
        real _t1243 = 0.e0;
        real _t1244 = 0.e0;
        real _t1245 = 0.e0;
        real _t1246 = 0.1e1;
        vec4 _t1247 = [_t1243, _t1244, _t1245, _t1246];
        tensor[4,4] _t1248 = [_t1238, _t123D, _t1242, _t1247];
        real _t1249 = 0.e0;
        real _t124A = -0.1e1;
        real _t124B = 0.e0;
        real _t124C = 0.e0;
        vec4 _t124D = [_t1249, _t124A, _t124B, _t124C];
        real _t124E = 0.1e1;
        real _t124F = 0.e0;
        real _t1250 = 0.e0;
        real _t1251 = 0.e0;
        vec4 _t1252 = [_t124E, _t124F, _t1250, _t1251];
        real _t1253 = 0.e0;
        real _t1254 = 0.e0;
        real _t1255 = 0.1e1;
        real _t1256 = 0.e0;
        vec4 _t1257 = [_t1253, _t1254, _t1255, _t1256];
        real _t1258 = 0.e0;
        real _t1259 = 0.e0;
        real _t125A = 0.e0;
        real _t125B = 0.1e1;
        vec4 _t125C = [_t1258, _t1259, _t125A, _t125B];
        tensor[4,4] _t125D = [_t124D, _t1252, _t1257, _t125C];
        real _t125E = 0.1e1;
        real _t125F = 0.e0;
        real _t1260 = 0.e0;
        real _t1261 = 0.e0;
        vec4 _t1262 = [_t125E, _t125F, _t1260, _t1261];
        real _t1263 = 0.e0;
        real _t1264 = 0.1e1;
        real _t1265 = 0.e0;
        real _t1266 = 0.e0;
        vec4 _t1267 = [_t1263, _t1264, _t1265, _t1266];
        real _t1268 = 0.e0;
        real _t1269 = 0.e0;
        real _t126A = 0.1e1;
        real _t126B = 0.e0;
        vec4 _t126C = [_t1268, _t1269, _t126A, _t126B];
        real _t126D = 0.e0;
        real _t126E = 0.e0;
        real _t126F = 0.e0;
        real _t1270 = 0.1e1;
        vec4 _t1271 = [_t126D, _t126E, _t126F, _t1270];
        tensor[4,4] _t1272 = [_t1262, _t1267, _t126C, _t1271];
        real _t1273 = 0.1e1;
        real _t1274 = 0.e0;
        real _t1275 = 0.e0;
        real _t1276 = 0.e0;
        vec4 _t1277 = [_t1273, _t1274, _t1275, _t1276];
        real _t1278 = 0.e0;
        real _t1279 = 0.e0;
        real _t127A = 0.1e1;
        real _t127B = 0.e0;
        vec4 _t127C = [_t1278, _t1279, _t127A, _t127B];
        real _t127D = 0.e0;
        real _t127E = -0.1e1;
        real _t127F = 0.e0;
        real _t1280 = 0.e0;
        vec4 _t1281 = [_t127D, _t127E, _t127F, _t1280];
        real _t1282 = 0.e0;
        real _t1283 = 0.e0;
        real _t1284 = 0.e0;
        real _t1285 = 0.1e1;
        vec4 _t1286 = [_t1282, _t1283, _t1284, _t1285];
        tensor[4,4] _t1287 = [_t1277, _t127C, _t1281, _t1286];
        tensor[4,4][4] _t1288 = {_t1248, _t125D, _t1272, _t1287};
        real _t1289 = -0.1e1;
        real _t128A = -0.1e1;
        real _t128B = 0.57735026919e0;
        real _t128C = 0.1e1;
        vec4 _t128D = [_t1289, _t128A, _t128B, _t128C];
        real _t128E = 0.1e1;
        real _t128F = 0.e0;
        real _t1290 = 0.57735026919e0;
        real _t1291 = 0.e0;
        vec4 _t1292 = [_t128E, _t128F, _t1290, _t1291];
        real _t1293 = 0.e0;
        real _t1294 = 0.1e1;
        real _t1295 = 0.57735026919e0;
        real _t1296 = 0.e0;
        vec4 _t1297 = [_t1293, _t1294, _t1295, _t1296];
        real _t1298 = 0.e0;
        real _t1299 = 0.e0;
        real _t129A = 0.e0;
        real _t129B = 0.1e1;
        vec4 _t129C = [_t1298, _t1299, _t129A, _t129B];
        tensor[4,4] _t129D = [_t128D, _t1292, _t1297, _t129C];
        real _t129E = 0.e0;
        real _t129F = 0.e0;
        real _t12A0 = 0.1e1;
        real _t12A1 = 0.e0;
        vec4 _t12A2 = [_t129E, _t129F, _t12A0, _t12A1];
        real _t12A3 = 0.1e1;
        real _t12A4 = 0.e0;
        real _t12A5 = 0.e0;
        real _t12A6 = 0.e0;
        vec4 _t12A7 = [_t12A3, _t12A4, _t12A5, _t12A6];
        real _t12A8 = 0.e0;
        real _t12A9 = 0.1e1;
        real _t12AA = 0.e0;
        real _t12AB = 0.e0;
        vec4 _t12AC = [_t12A8, _t12A9, _t12AA, _t12AB];
        real _t12AD = 0.e0;
        real _t12AE = 0.e0;
        real _t12AF = 0.e0;
        real _t12B0 = 0.1e1;
        vec4 _t12B1 = [_t12AD, _t12AE, _t12AF, _t12B0];
        tensor[4,4] _t12B2 = [_t12A2, _t12A7, _t12AC, _t12B1];
        real _t12B3 = 0.1e1;
        real _t12B4 = 0.e0;
        real _t12B5 = 0.e0;
        real _t12B6 = 0.e0;
        vec4 _t12B7 = [_t12B3, _t12B4, _t12B5, _t12B6];
        real _t12B8 = 0.e0;
        real _t12B9 = 0.e0;
        real _t12BA = -0.1e1;
        real _t12BB = 0.e0;
        vec4 _t12BC = [_t12B8, _t12B9, _t12BA, _t12BB];
        real _t12BD = 0.e0;
        real _t12BE = 0.1e1;
        real _t12BF = 0.e0;
        real _t12C0 = 0.e0;
        vec4 _t12C1 = [_t12BD, _t12BE, _t12BF, _t12C0];
        real _t12C2 = 0.e0;
        real _t12C3 = 0.e0;
        real _t12C4 = 0.e0;
        real _t12C5 = 0.1e1;
        vec4 _t12C6 = [_t12C2, _t12C3, _t12C4, _t12C5];
        tensor[4,4] _t12C7 = [_t12B7, _t12BC, _t12C1, _t12C6];
        real _t12C8 = 0.1e1;
        real _t12C9 = 0.e0;
        real _t12CA = 0.e0;
        real _t12CB = 0.e0;
        vec4 _t12CC = [_t12C8, _t12C9, _t12CA, _t12CB];
        real _t12CD = 0.e0;
        real _t12CE = 0.1e1;
        real _t12CF = 0.e0;
        real _t12D0 = 0.e0;
        vec4 _t12D1 = [_t12CD, _t12CE, _t12CF, _t12D0];
        real _t12D2 = 0.e0;
        real _t12D3 = 0.e0;
        real _t12D4 = 0.1e1;
        real _t12D5 = 0.e0;
        vec4 _t12D6 = [_t12D2, _t12D3, _t12D4, _t12D5];
        real _t12D7 = 0.e0;
        real _t12D8 = 0.e0;
        real _t12D9 = 0.e0;
        real _t12DA = 0.1e1;
        vec4 _t12DB = [_t12D7, _t12D8, _t12D9, _t12DA];
        tensor[4,4] _t12DC = [_t12CC, _t12D1, _t12D6, _t12DB];
        tensor[4,4][4] _t12DD = {_t129D, _t12B2, _t12C7, _t12DC};
        tensor[4,4][4][4] _t12DE = {_t11DE, _t1233, _t1288, _t12DD};
        real _t12DF = _t0E3A[1];
        int _t12E0 = prim $r2i01B7 (_t12DF);
        tensor[4,4][4] _t12E1 = prim $sub01C0<tensor[4,4][4]; %4> (_t12DE, _t12E0);
        real _t12E2 = _t0E3A[1];
        int _t12E3 = prim $r2i01B7 (_t12E2);
        int[2] _t12E4 = func nextCell4048A (_t12E3, _t0E36, _t0E35);
        int _t12E5 = 1;
        int _t12E6 = prim $sub01C0<int; %2> (_t12E4, _t12E5);
        tensor[4,4] _t12E7 = prim $sub01C0<tensor[4,4]; %4> (_t12E1, _t12E6);
        real _t12E8 = _t0E3A[0];
        vec3 _t12E9 = prim *0036<$[3]> (_t12E8, deltaP0E00);
        vec3 _t12EA = prim +0017<$[3]> (_t12E9, _t0E37);
        real _t12EB = _t12EA[0];
        real _t12EC = _t0E3A[0];
        vec3 _t12ED = prim *0036<$[3]> (_t12EC, deltaP0E00);
        vec3 _t12EE = prim +0017<$[3]> (_t12ED, _t0E37);
        real _t12EF = _t12EE[1];
        real _t12F0 = _t0E3A[0];
        vec3 _t12F1 = prim *0036<$[3]> (_t12F0, deltaP0E00);
        vec3 _t12F2 = prim +0017<$[3]> (_t12F1, _t0E37);
        real _t12F3 = _t12F2[2];
        real _t12F4 = 0.1e1;
        vec4 _t12F5 = [_t12EB, _t12EF, _t12F3, _t12F4];
        vec4 _t12F6 = prim •00CE<$[4,4]; $[4]; $[4]> (_t12E7, _t12F5);
        real _t12F7 = _t12F6[1];
        real _t12F8 = 0.1e1;
        real _t12F9 = 0.e0;
        real _t12FA = 0.e0;
        real _t12FB = 0.e0;
        vec4 _t12FC = [_t12F8, _t12F9, _t12FA, _t12FB];
        real _t12FD = 0.e0;
        real _t12FE = 0.1e1;
        real _t12FF = 0.e0;
        real _t1300 = 0.e0;
        vec4 _t1301 = [_t12FD, _t12FE, _t12FF, _t1300];
        real _t1302 = 0.e0;
        real _t1303 = 0.e0;
        real _t1304 = 0.1e1;
        real _t1305 = 0.e0;
        vec4 _t1306 = [_t1302, _t1303, _t1304, _t1305];
        real _t1307 = 0.971445146547e-16;
        real _t1308 = 0.e0;
        real _t1309 = 0.e0;
        real _t130A = 0.1e1;
        vec4 _t130B = [_t1307, _t1308, _t1309, _t130A];
        tensor[4,4] _t130C = [_t12FC, _t1301, _t1306, _t130B];
        real _t130D = 0.57735026919e0;
        real _t130E = 0.57735026919e0;
        real _t130F = 0.57735026919e0;
        real _t1310 = -0.57735026919e0;
        vec4 _t1311 = [_t130D, _t130E, _t130F, _t1310];
        real _t1312 = -0.333333333333e0;
        real _t1313 = 0.666666666667e0;
        real _t1314 = -0.333333333333e0;
        real _t1315 = 0.333333333333e0;
        vec4 _t1316 = [_t1312, _t1313, _t1314, _t1315];
        real _t1317 = -0.333333333333e0;
        real _t1318 = -0.333333333333e0;
        real _t1319 = 0.666666666667e0;
        real _t131A = 0.333333333333e0;
        vec4 _t131B = [_t1317, _t1318, _t1319, _t131A];
        real _t131C = 0.971445146547e-16;
        real _t131D = 0.e0;
        real _t131E = 0.e0;
        real _t131F = 0.1e1;
        vec4 _t1320 = [_t131C, _t131D, _t131E, _t131F];
        tensor[4,4] _t1321 = [_t1311, _t1316, _t131B, _t1320];
        real _t1322 = -0.333333333333e0;
        real _t1323 = 0.666666666667e0;
        real _t1324 = -0.333333333333e0;
        real _t1325 = 0.333333333333e0;
        vec4 _t1326 = [_t1322, _t1323, _t1324, _t1325];
        real _t1327 = -0.57735026919e0;
        real _t1328 = -0.57735026919e0;
        real _t1329 = -0.57735026919e0;
        real _t132A = 0.57735026919e0;
        vec4 _t132B = [_t1327, _t1328, _t1329, _t132A];
        real _t132C = -0.333333333333e0;
        real _t132D = -0.333333333333e0;
        real _t132E = 0.666666666667e0;
        real _t132F = 0.333333333333e0;
        vec4 _t1330 = [_t132C, _t132D, _t132E, _t132F];
        real _t1331 = 0.971445146547e-16;
        real _t1332 = 0.e0;
        real _t1333 = 0.e0;
        real _t1334 = 0.1e1;
        vec4 _t1335 = [_t1331, _t1332, _t1333, _t1334];
        tensor[4,4] _t1336 = [_t1326, _t132B, _t1330, _t1335];
        real _t1337 = -0.333333333333e0;
        real _t1338 = 0.666666666667e0;
        real _t1339 = -0.333333333333e0;
        real _t133A = 0.333333333333e0;
        vec4 _t133B = [_t1337, _t1338, _t1339, _t133A];
        real _t133C = -0.333333333333e0;
        real _t133D = -0.333333333333e0;
        real _t133E = 0.666666666667e0;
        real _t133F = 0.333333333333e0;
        vec4 _t1340 = [_t133C, _t133D, _t133E, _t133F];
        real _t1341 = 0.57735026919e0;
        real _t1342 = 0.57735026919e0;
        real _t1343 = 0.57735026919e0;
        real _t1344 = -0.57735026919e0;
        vec4 _t1345 = [_t1341, _t1342, _t1343, _t1344];
        real _t1346 = 0.971445146547e-16;
        real _t1347 = 0.e0;
        real _t1348 = 0.e0;
        real _t1349 = 0.1e1;
        vec4 _t134A = [_t1346, _t1347, _t1348, _t1349];
        tensor[4,4] _t134B = [_t133B, _t1340, _t1345, _t134A];
        tensor[4,4][4] _t134C = {_t130C, _t1321, _t1336, _t134B};
        real _t134D = 0.57735026919e0;
        real _t134E = -0.1e1;
        real _t134F = -0.1e1;
        real _t1350 = 0.1e1;
        vec4 _t1351 = [_t134D, _t134E, _t134F, _t1350];
        real _t1352 = 0.57735026919e0;
        real _t1353 = 0.1e1;
        real _t1354 = 0.e0;
        real _t1355 = 0.e0;
        vec4 _t1356 = [_t1352, _t1353, _t1354, _t1355];
        real _t1357 = 0.57735026919e0;
        real _t1358 = 0.e0;
        real _t1359 = 0.1e1;
        real _t135A = 0.e0;
        vec4 _t135B = [_t1357, _t1358, _t1359, _t135A];
        real _t135C = 0.e0;
        real _t135D = 0.e0;
        real _t135E = 0.e0;
        real _t135F = 0.1e1;
        vec4 _t1360 = [_t135C, _t135D, _t135E, _t135F];
        tensor[4,4] _t1361 = [_t1351, _t1356, _t135B, _t1360];
        real _t1362 = 0.1e1;
        real _t1363 = 0.e0;
        real _t1364 = 0.e0;
        real _t1365 = 0.e0;
        vec4 _t1366 = [_t1362, _t1363, _t1364, _t1365];
        real _t1367 = 0.e0;
        real _t1368 = 0.1e1;
        real _t1369 = 0.e0;
        real _t136A = 0.e0;
        vec4 _t136B = [_t1367, _t1368, _t1369, _t136A];
        real _t136C = 0.e0;
        real _t136D = 0.e0;
        real _t136E = 0.1e1;
        real _t136F = 0.e0;
        vec4 _t1370 = [_t136C, _t136D, _t136E, _t136F];
        real _t1371 = 0.e0;
        real _t1372 = 0.e0;
        real _t1373 = 0.e0;
        real _t1374 = 0.1e1;
        vec4 _t1375 = [_t1371, _t1372, _t1373, _t1374];
        tensor[4,4] _t1376 = [_t1366, _t136B, _t1370, _t1375];
        real _t1377 = 0.e0;
        real _t1378 = 0.1e1;
        real _t1379 = 0.e0;
        real _t137A = 0.e0;
        vec4 _t137B = [_t1377, _t1378, _t1379, _t137A];
        real _t137C = -0.1e1;
        real _t137D = 0.e0;
        real _t137E = 0.e0;
        real _t137F = 0.e0;
        vec4 _t1380 = [_t137C, _t137D, _t137E, _t137F];
        real _t1381 = 0.e0;
        real _t1382 = 0.e0;
        real _t1383 = 0.1e1;
        real _t1384 = 0.e0;
        vec4 _t1385 = [_t1381, _t1382, _t1383, _t1384];
        real _t1386 = 0.e0;
        real _t1387 = 0.e0;
        real _t1388 = 0.e0;
        real _t1389 = 0.1e1;
        vec4 _t138A = [_t1386, _t1387, _t1388, _t1389];
        tensor[4,4] _t138B = [_t137B, _t1380, _t1385, _t138A];
        real _t138C = 0.e0;
        real _t138D = 0.1e1;
        real _t138E = 0.e0;
        real _t138F = 0.e0;
        vec4 _t1390 = [_t138C, _t138D, _t138E, _t138F];
        real _t1391 = 0.e0;
        real _t1392 = 0.e0;
        real _t1393 = 0.1e1;
        real _t1394 = 0.e0;
        vec4 _t1395 = [_t1391, _t1392, _t1393, _t1394];
        real _t1396 = 0.1e1;
        real _t1397 = 0.e0;
        real _t1398 = 0.e0;
        real _t1399 = 0.e0;
        vec4 _t139A = [_t1396, _t1397, _t1398, _t1399];
        real _t139B = 0.e0;
        real _t139C = 0.e0;
        real _t139D = 0.e0;
        real _t139E = 0.1e1;
        vec4 _t139F = [_t139B, _t139C, _t139D, _t139E];
        tensor[4,4] _t13A0 = [_t1390, _t1395, _t139A, _t139F];
        tensor[4,4][4] _t13A1 = {_t1361, _t1376, _t138B, _t13A0};
        real _t13A2 = -0.1e1;
        real _t13A3 = -0.57735026919e0;
        real _t13A4 = -0.1e1;
        real _t13A5 = 0.1e1;
        vec4 _t13A6 = [_t13A2, _t13A3, _t13A4, _t13A5];
        real _t13A7 = 0.1e1;
        real _t13A8 = -0.57735026919e0;
        real _t13A9 = 0.e0;
        real _t13AA = 0.e0;
        vec4 _t13AB = [_t13A7, _t13A8, _t13A9, _t13AA];
        real _t13AC = 0.e0;
        real _t13AD = -0.57735026919e0;
        real _t13AE = 0.1e1;
        real _t13AF = 0.e0;
        vec4 _t13B0 = [_t13AC, _t13AD, _t13AE, _t13AF];
        real _t13B1 = 0.e0;
        real _t13B2 = 0.e0;
        real _t13B3 = 0.e0;
        real _t13B4 = 0.1e1;
        vec4 _t13B5 = [_t13B1, _t13B2, _t13B3, _t13B4];
        tensor[4,4] _t13B6 = [_t13A6, _t13AB, _t13B0, _t13B5];
        real _t13B7 = 0.e0;
        real _t13B8 = -0.1e1;
        real _t13B9 = 0.e0;
        real _t13BA = 0.e0;
        vec4 _t13BB = [_t13B7, _t13B8, _t13B9, _t13BA];
        real _t13BC = 0.1e1;
        real _t13BD = 0.e0;
        real _t13BE = 0.e0;
        real _t13BF = 0.e0;
        vec4 _t13C0 = [_t13BC, _t13BD, _t13BE, _t13BF];
        real _t13C1 = 0.e0;
        real _t13C2 = 0.e0;
        real _t13C3 = 0.1e1;
        real _t13C4 = 0.e0;
        vec4 _t13C5 = [_t13C1, _t13C2, _t13C3, _t13C4];
        real _t13C6 = 0.e0;
        real _t13C7 = 0.e0;
        real _t13C8 = 0.e0;
        real _t13C9 = 0.1e1;
        vec4 _t13CA = [_t13C6, _t13C7, _t13C8, _t13C9];
        tensor[4,4] _t13CB = [_t13BB, _t13C0, _t13C5, _t13CA];
        real _t13CC = 0.1e1;
        real _t13CD = 0.e0;
        real _t13CE = 0.e0;
        real _t13CF = 0.e0;
        vec4 _t13D0 = [_t13CC, _t13CD, _t13CE, _t13CF];
        real _t13D1 = 0.e0;
        real _t13D2 = 0.1e1;
        real _t13D3 = 0.e0;
        real _t13D4 = 0.e0;
        vec4 _t13D5 = [_t13D1, _t13D2, _t13D3, _t13D4];
        real _t13D6 = 0.e0;
        real _t13D7 = 0.e0;
        real _t13D8 = 0.1e1;
        real _t13D9 = 0.e0;
        vec4 _t13DA = [_t13D6, _t13D7, _t13D8, _t13D9];
        real _t13DB = 0.e0;
        real _t13DC = 0.e0;
        real _t13DD = 0.e0;
        real _t13DE = 0.1e1;
        vec4 _t13DF = [_t13DB, _t13DC, _t13DD, _t13DE];
        tensor[4,4] _t13E0 = [_t13D0, _t13D5, _t13DA, _t13DF];
        real _t13E1 = 0.1e1;
        real _t13E2 = 0.e0;
        real _t13E3 = 0.e0;
        real _t13E4 = 0.e0;
        vec4 _t13E5 = [_t13E1, _t13E2, _t13E3, _t13E4];
        real _t13E6 = 0.e0;
        real _t13E7 = 0.e0;
        real _t13E8 = 0.1e1;
        real _t13E9 = 0.e0;
        vec4 _t13EA = [_t13E6, _t13E7, _t13E8, _t13E9];
        real _t13EB = 0.e0;
        real _t13EC = -0.1e1;
        real _t13ED = 0.e0;
        real _t13EE = 0.e0;
        vec4 _t13EF = [_t13EB, _t13EC, _t13ED, _t13EE];
        real _t13F0 = 0.e0;
        real _t13F1 = 0.e0;
        real _t13F2 = 0.e0;
        real _t13F3 = 0.1e1;
        vec4 _t13F4 = [_t13F0, _t13F1, _t13F2, _t13F3];
        tensor[4,4] _t13F5 = [_t13E5, _t13EA, _t13EF, _t13F4];
        tensor[4,4][4] _t13F6 = {_t13B6, _t13CB, _t13E0, _t13F5};
        real _t13F7 = -0.1e1;
        real _t13F8 = -0.1e1;
        real _t13F9 = 0.57735026919e0;
        real _t13FA = 0.1e1;
        vec4 _t13FB = [_t13F7, _t13F8, _t13F9, _t13FA];
        real _t13FC = 0.1e1;
        real _t13FD = 0.e0;
        real _t13FE = 0.57735026919e0;
        real _t13FF = 0.e0;
        vec4 _t1400 = [_t13FC, _t13FD, _t13FE, _t13FF];
        real _t1401 = 0.e0;
        real _t1402 = 0.1e1;
        real _t1403 = 0.57735026919e0;
        real _t1404 = 0.e0;
        vec4 _t1405 = [_t1401, _t1402, _t1403, _t1404];
        real _t1406 = 0.e0;
        real _t1407 = 0.e0;
        real _t1408 = 0.e0;
        real _t1409 = 0.1e1;
        vec4 _t140A = [_t1406, _t1407, _t1408, _t1409];
        tensor[4,4] _t140B = [_t13FB, _t1400, _t1405, _t140A];
        real _t140C = 0.e0;
        real _t140D = 0.e0;
        real _t140E = 0.1e1;
        real _t140F = 0.e0;
        vec4 _t1410 = [_t140C, _t140D, _t140E, _t140F];
        real _t1411 = 0.1e1;
        real _t1412 = 0.e0;
        real _t1413 = 0.e0;
        real _t1414 = 0.e0;
        vec4 _t1415 = [_t1411, _t1412, _t1413, _t1414];
        real _t1416 = 0.e0;
        real _t1417 = 0.1e1;
        real _t1418 = 0.e0;
        real _t1419 = 0.e0;
        vec4 _t141A = [_t1416, _t1417, _t1418, _t1419];
        real _t141B = 0.e0;
        real _t141C = 0.e0;
        real _t141D = 0.e0;
        real _t141E = 0.1e1;
        vec4 _t141F = [_t141B, _t141C, _t141D, _t141E];
        tensor[4,4] _t1420 = [_t1410, _t1415, _t141A, _t141F];
        real _t1421 = 0.1e1;
        real _t1422 = 0.e0;
        real _t1423 = 0.e0;
        real _t1424 = 0.e0;
        vec4 _t1425 = [_t1421, _t1422, _t1423, _t1424];
        real _t1426 = 0.e0;
        real _t1427 = 0.e0;
        real _t1428 = -0.1e1;
        real _t1429 = 0.e0;
        vec4 _t142A = [_t1426, _t1427, _t1428, _t1429];
        real _t142B = 0.e0;
        real _t142C = 0.1e1;
        real _t142D = 0.e0;
        real _t142E = 0.e0;
        vec4 _t142F = [_t142B, _t142C, _t142D, _t142E];
        real _t1430 = 0.e0;
        real _t1431 = 0.e0;
        real _t1432 = 0.e0;
        real _t1433 = 0.1e1;
        vec4 _t1434 = [_t1430, _t1431, _t1432, _t1433];
        tensor[4,4] _t1435 = [_t1425, _t142A, _t142F, _t1434];
        real _t1436 = 0.1e1;
        real _t1437 = 0.e0;
        real _t1438 = 0.e0;
        real _t1439 = 0.e0;
        vec4 _t143A = [_t1436, _t1437, _t1438, _t1439];
        real _t143B = 0.e0;
        real _t143C = 0.1e1;
        real _t143D = 0.e0;
        real _t143E = 0.e0;
        vec4 _t143F = [_t143B, _t143C, _t143D, _t143E];
        real _t1440 = 0.e0;
        real _t1441 = 0.e0;
        real _t1442 = 0.1e1;
        real _t1443 = 0.e0;
        vec4 _t1444 = [_t1440, _t1441, _t1442, _t1443];
        real _t1445 = 0.e0;
        real _t1446 = 0.e0;
        real _t1447 = 0.e0;
        real _t1448 = 0.1e1;
        vec4 _t1449 = [_t1445, _t1446, _t1447, _t1448];
        tensor[4,4] _t144A = [_t143A, _t143F, _t1444, _t1449];
        tensor[4,4][4] _t144B = {_t140B, _t1420, _t1435, _t144A};
        tensor[4,4][4][4] _t144C = {_t134C, _t13A1, _t13F6, _t144B};
        real _t144D = _t0E3A[1];
        int _t144E = prim $r2i01B7 (_t144D);
        tensor[4,4][4] _t144F = prim $sub01C0<tensor[4,4][4]; %4> (_t144C, _t144E);
        real _t1450 = _t0E3A[1];
        int _t1451 = prim $r2i01B7 (_t1450);
        int[2] _t1452 = func nextCell4048A (_t1451, _t0E36, _t0E35);
        int _t1453 = 1;
        int _t1454 = prim $sub01C0<int; %2> (_t1452, _t1453);
        tensor[4,4] _t1455 = prim $sub01C0<tensor[4,4]; %4> (_t144F, _t1454);
        real _t1456 = _t0E3A[0];
        vec3 _t1457 = prim *0036<$[3]> (_t1456, deltaP0E00);
        vec3 _t1458 = prim +0017<$[3]> (_t1457, _t0E37);
        real _t1459 = _t1458[0];
        real _t145A = _t0E3A[0];
        vec3 _t145B = prim *0036<$[3]> (_t145A, deltaP0E00);
        vec3 _t145C = prim +0017<$[3]> (_t145B, _t0E37);
        real _t145D = _t145C[1];
        real _t145E = _t0E3A[0];
        vec3 _t145F = prim *0036<$[3]> (_t145E, deltaP0E00);
        vec3 _t1460 = prim +0017<$[3]> (_t145F, _t0E37);
        real _t1461 = _t1460[2];
        real _t1462 = 0.1e1;
        vec4 _t1463 = [_t1459, _t145D, _t1461, _t1462];
        vec4 _t1464 = prim •00CE<$[4,4]; $[4]; $[4]> (_t1455, _t1463);
        real _t1465 = _t1464[2];
        vec3 _t1466 = [_t1189, _t12F7, _t1465];
        real _t1467 = _t0E3A[1];
        int _t1468 = prim $r2i01B7 (_t1467);
        int[2] _t1469 = func nextCell4048A (_t1468, _t0E36, _t0E35);
        int _t146A = 1;
        int _t146B = prim $sub01C0<int; %2> (_t1469, _t146A);
        Femdata: MeshPos _t146C = extractFemItemN((_t0E35, _t101B, _t1466, _t146B),RefBuild(Mesh),);
        nmp0E3B = _t146C;
      } else {
        real _t146D = _t0E3A[0];
        vec3 _t146E = prim *0036<$[3]> (_t146D, deltaP0E00);
        vec3 _t146F = prim +0017<$[3]> (_t146E, _t0E37);
        Femdata: MeshPos _t1470 = extractFemItemN((_t0E35, _t146F),InvalidBuildBoundary(MeshPos),);
        nmp0E3B = _t1470;
      }
      bool _t0E3C;
      bool _t0E3D = extractFemItem(Valid(MeshPos), bool, nmp0E3B);
      bool _t0E3E = prim !00BC (_t0E3D);
      if _t0E3E {
        _t0E3C = true;
      } else {
        bool _t0E3F;
        real _t0E40 = 0.e0;
        bool _t0E41 = prim <007A (eTime0E33, _t0E40);
        if _t0E41 {
          _t0E3F = true;
        } else {
          bool _t0E42;
          real _t0E43 = 0.1e1;
          bool _t0E44 = prim >0080 (eTime0E33, _t0E43);
          if _t0E44 {
            _t0E42 = true;
          } else {
            _t0E42 = prim <007A (time0DEA, timeEps03B0);
          }
          _t0E3F = _t0E42;
        }
        _t0E3C = _t0E3F;
      }
      if _t0E3C {
        return nmp0E3B;
      }
      cmp0DEB = nmp0E3B;
    }
  }
  string _t0E46 = "Took stupid way out!\n";
  print (_t0E46);
  vec3 _t0E47;
  vec3 _t0EA0 = extractFemItem(RefPos(MeshPos), vec3, x0DE6);
  int _t0EA1 = extractFemItem(CellIndex(MeshPos), int, x0DE6);
  Femdata: Mesh _t0EA2 = extractFem(x0DE6, Mesh);
  vec3 _t0EA3;
  field(3)[3] _t0EA4 = femField(_t0EA2,_t0EA1,field(3)[3],Transform,);
  vec3 _t0EA5 = prim @00A5<#∞; %3; $[3]> (_t0EA4, _t0EA0);
  _t0EA3 = _t0EA5;
  _t0E47 = _t0EA3;
  vec3 _t0E48 = prim +0017<$[3]> (_t0E47, dPos0DE7);
  cmp0DEB = func findPos03BE (meshData039F, _t0E48);
  return cmp0DEB;
}
globalInit {
  int _t03A3 = 0;
  int _t03A1 = 1;
  int _t03A5 = extractFemItem(NumCell(Mesh), int, meshData039F);
  int _t03A4 = prim -0024 (_t03A5, _t03A1);
  int[] _t03A8 = prim $range01C3 (_t03A3, _t03A4);
  Femdata: MeshCell[] _t03A9 = {};
  foreach _t03A7 in _t03A8 {
    Femdata: MeshCell _t03AA = loadFem(MeshCell, meshData039F, _t03A7);
    _t03A9 = prim @0010<Femdata: MeshCell> (_t03A9, _t03AA);
  }
  space03AB = loadFem(Space, 0space03AB_intermedateGlobal03AC, meshData039F);
  data03AD = loadFem(FemFunc, 0data03AD_intermedateGlobal03AE, space03AB);
  Femdata: Space _t0DD8 = extractFem(data03AD, Space);
  Femdata: Space _t0DD9 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDA = extractFem(_t0DD9, Mesh);
  field(3)[3] _t0DDB = femField(data03AD,_t0DDA,field(3)[3],refField,findPos03BE );
  Femdata: Space _t0DDC = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDD = extractFem(_t0DDC, Mesh);
  Femdata: Space _t0DDE = extractFem(data03AD, Space);
  Femdata: Mesh _t0DDF = extractFem(_t0DDE, Mesh);
  Femdata: Space _t0DE0 = extractFem(data03AD, Space);
  Femdata: Mesh _t0DE1 = extractFem(_t0DE0, Mesh);
  field(3)[3] _t0DE2 = femField(_t0DDD,_t0DE1,field(3)[3],InvTransform,findPos03BE );
  F0DE3 = prim ∘0164<#∞; %3; $[3]; %3; $[3]> (_t0DDB, _t0DE2);
}
strand gg (vec3 startPos0E5C) {
  output vec3[] stream0E5D;
  output vec3[] newStream0E60;
  int step0E63;
  Femdata: MeshPos cPos0E64;
  vec3 altCPos0E65;
  vec3 startPos16DB;
  {
    vec3[1] _t0E5E = {startPos0E5C};
    vec3[] _t0E5F = (vec3[])_t0E5E;
    stream0E5D = _t0E5F;
    vec3[1] _t0E61 = {startPos0E5C};
    vec3[] _t0E62 = (vec3[])_t0E61;
    newStream0E60 = _t0E62;
    step0E63 = 0;
    cPos0E64 = func findPos03BE (meshData039F, startPos0E5C);
    altCPos0E65 = startPos0E5C;
    startPos16DB = startPos0E5C;
  }
  update
  {
    bool _t0E66;
    bool _t0E67 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E68 = prim !00BC (_t0E67);
    if _t0E68 {
      _t0E66 = true;
    } else {
      bool _t0E69;
      Femdata: MeshPos _t0E6A = func findPos03BE (meshData039F, altCPos0E65);
      bool _t0E6B = extractFemItem(Valid(MeshPos), bool, _t0E6A);
      bool _t0E6C = prim !00BC (_t0E6B);
      if _t0E6C {
        _t0E69 = true;
      } else {
        _t0E69 = prim ==0082 (step0E63, stepMax03B3);
      }
      _t0E66 = _t0E69;
    }
    if _t0E66 {
      stabilize;
    }
    vec3 _t0E6D;
    vec3 _t16D5 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
    int _t16D6 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
    Femdata: Mesh _t16D7 = extractFem(cPos0E64, Mesh);
    vec3 _t16D8;
    field(3)[3] _t16D9 = femField(_t16D7,_t16D6,field(3)[3],Transform,);
    vec3 _t16DA = prim @00A5<#∞; %3; $[3]> (_t16D9, _t16D5);
    _t16D8 = _t16DA;
    _t0E6D = _t16D8;
    vec3 _t0E6E = prim -0026<$[3]> (_t0E6D, altCPos0E65);
    real _t0E6F = prim |()|00B5<$[3]> (_t0E6E);
    real _t0E70 = 0.1e-5;
    bool _t0E71 = prim >0080 (_t0E6F, _t0E70);
    if _t0E71 {
      string _t0E72 = "Error in tracing: At step:";
      string _t0E73 = " with particle:";
      string _t0E74 = "\n";
      print (_t0E72, step0E63, _t0E73, startPos16DB, _t0E74);
    } else {
      string _t0E75 = "fine in cell:";
      Femdata: Mesh _t0E76 = extractFem(cPos0E64, Mesh);
      int _t0E77 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell _t0E78 = loadFem(MeshCell, _t0E76, _t0E77);
      string _t0E79 = "\n";
      print (_t0E75, _t0E78, _t0E79);
    }
    real _t0E7A = 0.5e0;
    real _t0E7B = prim *0034 (_t0E7A, stepSize03B2);
    vec3 _t0E7C = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    vec3 _t0E7D = prim *0036<$[3]> (_t0E7B, _t0E7C);
    vec3 _t0E7E = prim @00A5<#∞; %3; $[3]> (F0DE3, altCPos0E65);
    real _t0E7F = prim |()|00B5<$[3]> (_t0E7E);
    vec3 altUp10E80 = prim /0057<$[3]> (_t0E7D, _t0E7F);
    real _t0E81 = 0.5e0;
    real _t0E82 = prim *0034 (_t0E81, stepSize03B2);
    vec3 _t0E83;
    bool _t16BE = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    if _t16BE {
      Femdata: Mesh _t16BF = extractFem(cPos0E64, Mesh);
      int _t16C0 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
      Femdata: MeshCell c16C1 = loadFem(MeshCell, _t16BF, _t16C0);
      vec3 ref16C2 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
      Femdata: FuncCell _t16C3;
      int _t16C4 = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16C5 = loadFem(FuncCell, data03AD, _t16C4);
      _t16C3 = _t16C5;
      Femdata: FemFunc _t16C6 = extractFem(_t16C3, FemFunc);
      Femdata: FuncCell _t16C7;
      int _t16C8 = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16C9 = loadFem(FuncCell, data03AD, _t16C8);
      _t16C7 = _t16C9;
      Femdata: FemFunc _t16CA = extractFem(_t16C7, FemFunc);
      Femdata: Space _t16CB = extractFem(_t16CA, Space);
      Femdata: FuncCell _t16CC;
      int _t16CD = extractFemItem(CellIndex(MeshCell), int, c16C1);
      Femdata: FuncCell _t16CE = loadFem(FuncCell, data03AD, _t16CD);
      _t16CC = _t16CE;
      int _t16CF = extractFemItem(CellIndex(FuncCell), int, _t16CC);
      field(3)[3] _t16D0 = femField(_t16C6,_t16CF,field(3)[3],refField,);
      vec3 val16D1 = prim @00A5<#∞; %3; $[3]> (_t16D0, ref16C2);
      real _t16D2 = prim |()|00B5<$[3]> (val16D1);
      vec3 _t16D3 = prim /0057<$[3]> (val16D1, _t16D2);
      _t0E83 = _t16D3;
    } else {
      vec3 _t16D4 = prim $zero01BB<$[3]> ();
      _t0E83 = _t16D4;
    }
    vec3 up10E84 = prim *0036<$[3]> (_t0E82, _t0E83);
    Femdata: MeshPos intermed0E85 = func posMove0DE5 (cPos0E64, up10E84);
    vec3 altIntermed0E86 = prim +0017<$[3]> (altCPos0E65, altUp10E80);
    bool _t0E87;
    bool _t0E88 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    bool _t0E89 = prim !00BC (_t0E88);
    if _t0E89 {
      _t0E87 = true;
    } else {
      Femdata: MeshPos _t0E8A = func findPos03BE (meshData039F, altIntermed0E86);
      bool _t0E8B = extractFemItem(Valid(MeshPos), bool, _t0E8A);
      _t0E87 = prim !00BC (_t0E8B);
    }
    if _t0E87 {
      stabilize;
    }
    vec3 _t0E8C = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    vec3 _t0E8D = prim *0036<$[3]> (stepSize03B2, _t0E8C);
    vec3 _t0E8E = prim @00A5<#∞; %3; $[3]> (F0DE3, altIntermed0E86);
    real _t0E8F = prim |()|00B5<$[3]> (_t0E8E);
    vec3 altUp20E90 = prim /0057<$[3]> (_t0E8D, _t0E8F);
    vec3 _t0E91;
    bool _t16A7 = extractFemItem(Valid(MeshPos), bool, intermed0E85);
    if _t16A7 {
      Femdata: Mesh _t16A8 = extractFem(intermed0E85, Mesh);
      int _t16A9 = extractFemItem(CellIndex(MeshPos), int, intermed0E85);
      Femdata: MeshCell c16AA = loadFem(MeshCell, _t16A8, _t16A9);
      vec3 ref16AB = extractFemItem(RefPos(MeshPos), vec3, intermed0E85);
      Femdata: FuncCell _t16AC;
      int _t16AD = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16AE = loadFem(FuncCell, data03AD, _t16AD);
      _t16AC = _t16AE;
      Femdata: FemFunc _t16AF = extractFem(_t16AC, FemFunc);
      Femdata: FuncCell _t16B0;
      int _t16B1 = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16B2 = loadFem(FuncCell, data03AD, _t16B1);
      _t16B0 = _t16B2;
      Femdata: FemFunc _t16B3 = extractFem(_t16B0, FemFunc);
      Femdata: Space _t16B4 = extractFem(_t16B3, Space);
      Femdata: FuncCell _t16B5;
      int _t16B6 = extractFemItem(CellIndex(MeshCell), int, c16AA);
      Femdata: FuncCell _t16B7 = loadFem(FuncCell, data03AD, _t16B6);
      _t16B5 = _t16B7;
      int _t16B8 = extractFemItem(CellIndex(FuncCell), int, _t16B5);
      field(3)[3] _t16B9 = femField(_t16AF,_t16B8,field(3)[3],refField,);
      vec3 val16BA = prim @00A5<#∞; %3; $[3]> (_t16B9, ref16AB);
      real _t16BB = prim |()|00B5<$[3]> (val16BA);
      vec3 _t16BC = prim /0057<$[3]> (val16BA, _t16BB);
      _t0E91 = _t16BC;
    } else {
      vec3 _t16BD = prim $zero01BB<$[3]> ();
      _t0E91 = _t16BD;
    }
    vec3 up20E92 = prim *0036<$[3]> (stepSize03B2, _t0E91);
    cPos0E64 = func posMove0DE5 (cPos0E64, up20E92);
    altCPos0E65 = prim +0017<$[3]> (altCPos0E65, altUp20E90);
    bool _t0E93 = extractFemItem(Valid(MeshPos), bool, cPos0E64);
    bool _t0E94 = prim !00BC (_t0E93);
    if _t0E94 {
      print (stream0E5D);
      stabilize;
    }
    vec3 _t0E95;
    vec3 _t16A1 = extractFemItem(RefPos(MeshPos), vec3, cPos0E64);
    int _t16A2 = extractFemItem(CellIndex(MeshPos), int, cPos0E64);
    Femdata: Mesh _t16A3 = extractFem(cPos0E64, Mesh);
    vec3 _t16A4;
    field(3)[3] _t16A5 = femField(_t16A3,_t16A2,field(3)[3],Transform,);
    vec3 _t16A6 = prim @00A5<#∞; %3; $[3]> (_t16A5, _t16A1);
    _t16A4 = _t16A6;
    _t0E95 = _t16A4;
    vec3[1] _t0E96 = {_t0E95};
    vec3[] _t0E97 = (vec3[])_t0E96;
    stream0E5D = prim @0014<vec3> (stream0E5D, _t0E97);
    vec3[1] _t0E98 = {altCPos0E65};
    vec3[] _t0E99 = (vec3[])_t0E98;
    newStream0E60 = prim @0014<vec3> (newStream0E60, _t0E99);
    int _t0E9A = 1;
    step0E63 = prim +0015 (step0E63, _t0E9A);
  }
}
collection {
  foreach x0E9B in startPoints03B1 {
    new gg (x0E9B);
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData16DC (meshData) = <no-default>
  input 0space03AB_intermedateGlobal16DD (space) = <no-default>
  input 0data03AD_intermedateGlobal16DE (data) = <no-default>
  input timeSteps16DF (timeSteps) = <default>
  input timeEps16E0 (timeEps) = <default>
  input startPoints16E1 (startPoints) = <no-default>
  input stepSize16E2 (stepSize) = <default>
  input stepMax16E3 (stepMax) = <default>
  global femData:Space space16F2
  global femData:FemFunc data16F3
  global field F16F4
## functions
  function femData:MeshPos findPos17A0 (femData:Mesh mesh16F5#9, tensor[3] pos16F6#3) {
    ENTRY179F:  preds = []
      real _t16F7#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t16F9#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t16FB#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16FD#1 = <tensor[3]>[_t16F7,_t16F9,_t16FB];
      int newtonInt16FF#0 = 0;
      int cellInt1701#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh16F5);
      int _t1703#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh16F5);
      int _t1705#1 = 1;
      int numCell1707#0 = ISub(_t1703,_t1705);
      int[] yayCells1709#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh16F5,pos16F6);
    FOREACH170C:  preds = [ASSIGN170A,NEXT1796]
      foreach (cellItter170B in yayCells1709) on exit goto ASSIGN1798
        int cellInt1717#0 = phi(cellInt1701,cellInt1716)
        tensor[3] xn1714#0 = phi(xn16FD,xn1730)
      real _t170D#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t170F#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1711#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn1713#1 = <tensor[3]>[_t170D,_t170F,_t1711];
      int cellInt1716#4 = cellItter170B;
      field _t1719#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt1716,mesh16F5,mesh16F5);
      field _t171B#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1719);
      field _t171D#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t171B);
      real _t171F#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1721#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      real _t1723#1 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] _t1725#1 = <tensor[3]>[_t171F,_t1721,_t1723];
      tensor[3,3] A1727#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t171D,_t1725);
      int _t1729#1 = 0;
      int _t172B#1 = 16;
      int[] _t172D#1 = Range(_t1729,_t172B);
    FOREACH1731:  preds = [ASSIGN172E,NEXT1795]
      foreach (newtonItter172F in _t172D) on exit goto NEXT1796
        tensor[3] xn1730#3 = phi(xn1713,xn173A)
      field _t1732#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellInt1716,mesh16F5,mesh16F5);
      field _t1734#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos16F6,_t1732);
      field _t1736#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A1727,_t1734);
      tensor[3] delta1738#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1736,xn1730);
      tensor[3] xn173A#6 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1730,delta1738);
      real _t173C#1 = 0.1e-7;
      real _t173E#1 = 0.1e-7;
      real _t1740#1 = λ(T0[],T1[])<(T0 * T1)> (_t173C,_t173E);
      real _t1742#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (delta1738,delta1738);
      bool _t1744#1 = GTE<real>(_t1740,_t1742);
      if _t1744 then goto ASSIGN1748 else goto JOIN1746
    ASSIGN1748:  preds = [COND1794]
      real _t1747#1 = 0.1e1;
      real _t1749#1 = 0.1e-8;
      real _t174B#1 = λ(T0[],T1[])<(T0 + T1)> (_t1747,_t1749);
      real _t174D#1 = 0.1e1;
      real _t174F#1 = 0.1e1;
      real _t1751#1 = 0.1e1;
      tensor[3] _t1753#1 = <tensor[3]>[_t174D,_t174F,_t1751];
      real _t1755#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1753,xn173A);
      bool _t1757#1 = GT<real>(_t174B,_t1755);
      real _t1759#1 = 0.1e-8;
      real _t175B#1 = 0.1e-8;
      real _t175D#1 = 0.1e-8;
      tensor[3] _t175F#1 = <tensor[3]>[_t1759,_t175B,_t175D];
      tensor[3] _t1761#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t175F,xn173A);
      real _t1763#1 = TensorIndex<tensor[3],[0]>(_t1761);
      real _t1765#1 = -0.e0;
      bool _t1767#1 = GT<real>(_t1763,_t1765);
      real _t1769#1 = 0.1e-8;
      real _t176B#1 = 0.1e-8;
      real _t176D#1 = 0.1e-8;
      tensor[3] _t176F#1 = <tensor[3]>[_t1769,_t176B,_t176D];
      tensor[3] _t1771#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t176F,xn173A);
      real _t1773#1 = TensorIndex<tensor[3],[1]>(_t1771);
      real _t1775#1 = -0.e0;
      bool _t1777#1 = GT<real>(_t1773,_t1775);
      real _t1779#1 = 0.1e-8;
      real _t177B#1 = 0.1e-8;
      real _t177D#1 = 0.1e-8;
      tensor[3] _t177F#1 = <tensor[3]>[_t1779,_t177B,_t177D];
      tensor[3] _t1781#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t177F,xn173A);
      real _t1783#1 = TensorIndex<tensor[3],[2]>(_t1781);
      real _t1785#1 = -0.e0;
      bool _t1787#1 = GT<real>(_t1783,_t1785);
      bool _t1789#1 = BAnd(_t1777,_t1787);
      bool _t178B#1 = BAnd(_t1767,_t1789);
      bool _t178D#1 = BAnd(_t1757,_t178B);
      if _t178D then goto ASSIGN1791 else goto JOIN178F
    ASSIGN1791:  preds = [COND1793]
      femData:MeshPos _t1790#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16F5,cellInt1716,xn173A,pos16F6);
      return _t1790
      goto JOIN178F
    JOIN178F:  preds = [*RETURN(_t1790)1792,COND1793]
      goto JOIN1746
    JOIN1746:  preds = [JOIN178F,COND1794]
      goto FOREACH1731
    NEXT1796:  preds = [FOREACH1731]
      goto FOREACH170C
    ASSIGN1798:  preds = [FOREACH170C]
      string _t1797#1 = "Bad end 2";
      string _t1799#1 = "\n";
      Print<[string,string]>(_t1797,_t1799);
      femData:MeshPos _t179C#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16F5);
      return _t179C
}
  function int[2] nextCell417B2 (int faceIdx17A1#1, int cell17A2#1, femData:Mesh mesh17A3#1) {
    ENTRY17B1:  preds = []
      int _t17A4#1 = 8;
      int _t17A6#1 = IMul(cell17A2,_t17A4);
      int _t17A8#1 = 2;
      int _t17AA#1 = IMul(faceIdx17A1,_t17A8);
      int _t17AC#1 = IAdd(_t17A6,_t17AA);
      int[2] _t17AE#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh17A3,_t17AC);
      return _t17AE
}
  function femData:MeshPos posMove2937 (femData:MeshPos x17B3#6, tensor[3] dPos17B4#2) {
    ENTRY2936:  preds = []
      femData:Mesh meshData17B7#1 = globals.meshData16DC;
      int timeSteps17B6#1 = globals.timeSteps16DF;
      real timeEps17B5#1 = globals.timeEps16E0;
      bool _t17BB#1 = ExtractFemItem<bool,Valid(MeshPos)>(x17B3);
      bool _t17BD#1 = BNot(_t17BB);
      if _t17BD then goto RETURN(x17B3)17C0 else goto JOIN17BF
    RETURN(x17B3)17C0:  preds = [COND17C1]
      return x17B3
      goto JOIN17BF
    JOIN17BF:  preds = [*RETURN(x17B3)17C0,COND17C1]
      real time17C2#1 = 0.1e1;
      femData:MeshPos cmp17C4#1 = x17B3;
      int _t17C6#1 = 0;
      int[] _t17C8#1 = Range(_t17C6,timeSteps17B6);
    FOREACH17CD:  preds = [ASSIGN17C9,NEXT291D]
      foreach (i17CA in _t17C8) on exit goto ASSIGN291F
        femData:MeshPos cmp17CC#19 = phi(cmp17C4,cmp291A)
        real time17CB#3 = phi(time17C2,time1AD2)
      femData:Mesh _t17CE#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp17CC);
      int _t17D0#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp17CC);
      femData:MeshCell _t17D2#1 = LoadFem<femData:MeshCell>(_t17CE,_t17D0);
      femData:Mesh _t17D4#2 = ExtractFem<femData:Mesh,femData:MeshCell>(_t17D2);
      femData:Mesh _t17D6#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp17CC);
      int _t17D8#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp17CC);
      femData:MeshCell _t17DA#1 = LoadFem<femData:MeshCell>(_t17D6,_t17D8);
      femData:Mesh _t17DC#0 = ExtractFem<femData:Mesh,femData:MeshCell>(_t17DA);
      femData:Mesh _t17DE#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp17CC);
      int _t17E0#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp17CC);
      femData:MeshCell _t17E2#1 = LoadFem<femData:MeshCell>(_t17DE,_t17E0);
      int _t17E4#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t17E2);
      field _t17E6#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t17E4,_t17D4,_t17D4);
      field _t17E8#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t17E6);
      tensor[3] _t17EA#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp17CC);
      tensor[3,3] _t17EC#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t17E8,_t17EA);
      tensor[3,3] _t17EE#1 = λ(T0[3 3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * T0_{i9,i6} * T0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * T0_{i3,'0'} * T0_{i4,'1'} * T0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t17EC);
      tensor[3,3] _t17F0#1 = λ(T0[],T1[3 3])<(T0 * T1_{i0,i1})>_{3 3} (time17CB,_t17EE);
      tensor[3] deltaP17F2#51 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t17F0,dPos17B4);
      tensor[3] _t17F4#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp17CC);
      tensor[3] newPos17F6#5 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t17F4,deltaP17F2);
      real _t17F8#1 = 0.1e1;
      real _t17FA#1 = 0.1e-8;
      real _t17FC#1 = λ(T0[],T1[])<(T0 + T1)> (_t17F8,_t17FA);
      real _t17FE#1 = 0.1e1;
      real _t1800#1 = 0.1e1;
      real _t1802#1 = 0.1e1;
      tensor[3] _t1804#1 = <tensor[3]>[_t17FE,_t1800,_t1802];
      real _t1806#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1804,newPos17F6);
      bool _t1808#1 = GT<real>(_t17FC,_t1806);
      real _t180A#1 = 0.1e-8;
      real _t180C#1 = 0.1e-8;
      real _t180E#1 = 0.1e-8;
      tensor[3] _t1810#1 = <tensor[3]>[_t180A,_t180C,_t180E];
      tensor[3] _t1812#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1810,newPos17F6);
      real _t1814#1 = TensorIndex<tensor[3],[0]>(_t1812);
      real _t1816#1 = -0.e0;
      bool _t1818#1 = GT<real>(_t1814,_t1816);
      real _t181A#1 = 0.1e-8;
      real _t181C#1 = 0.1e-8;
      real _t181E#1 = 0.1e-8;
      tensor[3] _t1820#1 = <tensor[3]>[_t181A,_t181C,_t181E];
      tensor[3] _t1822#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1820,newPos17F6);
      real _t1824#1 = TensorIndex<tensor[3],[1]>(_t1822);
      real _t1826#1 = -0.e0;
      bool _t1828#1 = GT<real>(_t1824,_t1826);
      real _t182A#1 = 0.1e-8;
      real _t182C#1 = 0.1e-8;
      real _t182E#1 = 0.1e-8;
      tensor[3] _t1830#1 = <tensor[3]>[_t182A,_t182C,_t182E];
      tensor[3] _t1832#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1830,newPos17F6);
      real _t1834#1 = TensorIndex<tensor[3],[2]>(_t1832);
      real _t1836#1 = -0.e0;
      bool _t1838#1 = GT<real>(_t1834,_t1836);
      bool _t183A#1 = BAnd(_t1828,_t1838);
      bool _t183C#1 = BAnd(_t1818,_t183A);
      bool _t183E#1 = BAnd(_t1808,_t183C);
      if _t183E then goto ASSIGN1842 else goto ASSIGN1855
    ASSIGN1842:  preds = [COND291C]
      femData:Mesh _t1841#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp17CC);
      int _t1843#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp17CC);
      femData:MeshCell _t1845#1 = LoadFem<femData:MeshCell>(_t1841,_t1843);
      femData:Mesh _t1847#1 = ExtractFem<femData:Mesh,femData:MeshCell>(_t1845);
      femData:Mesh _t1849#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp17CC);
      int _t184B#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp17CC);
      femData:MeshCell _t184D#1 = LoadFem<femData:MeshCell>(_t1849,_t184B);
      int _t184F#1 = ExtractFemItem<int,CellIndex(MeshCell)>(_t184D);
      femData:MeshPos nmp1851#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t1847,_t184F,newPos17F6);
      return nmp1851
      goto JOIN1840
    JOIN1840:  preds = [*RETURN(nmp1851)1853,ASSIGN291B]
      femData:MeshPos cmp291A#1 = phi(cmp2919)
      real time1AD2#1 = phi(time1AD1)
      goto FOREACH17CD
    ASSIGN1855:  preds = [COND291C]
      tensor[3] _t1854#16 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp17CC);
      int _t1856#5 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp17CC);
      real time1859#3 = +inf;
      int face185B#2 = -1;
      real faceTime185D#2 = -inf;
      real _t185F#1 = 0.57735026919e0;
      real _t1861#1 = 0.57735026919e0;
      real _t1863#1 = 0.57735026919e0;
      real _t1865#1 = 0.57735026919e0;
      tensor[3] _t1867#1 = <tensor[3]>[_t1861,_t1863,_t1865];
      real _t1869#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1867,_t1854);
      real _t186B#1 = λ(T0[],T1[])<(T0) - (T1)> (_t185F,_t1869);
      real _t186D#1 = 0.57735026919e0;
      real _t186F#1 = 0.57735026919e0;
      real _t1871#1 = 0.57735026919e0;
      tensor[3] _t1873#1 = <tensor[3]>[_t186D,_t186F,_t1871];
      real _t1875#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1873,deltaP17F2);
      real _t1877#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t186B,_t1875);
      real _t1879#1 = -0.1e-15;
      bool _t187B#1 = GTE<real>(_t1877,_t1879);
      real _t187D#1 = 0.57735026919e0;
      real _t187F#1 = 0.57735026919e0;
      real _t1881#1 = 0.57735026919e0;
      real _t1883#1 = 0.57735026919e0;
      tensor[3] _t1885#1 = <tensor[3]>[_t187F,_t1881,_t1883];
      real _t1887#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1885,_t1854);
      real _t1889#1 = λ(T0[],T1[])<(T0) - (T1)> (_t187D,_t1887);
      real _t188B#1 = 0.57735026919e0;
      real _t188D#1 = 0.57735026919e0;
      real _t188F#1 = 0.57735026919e0;
      tensor[3] _t1891#1 = <tensor[3]>[_t188B,_t188D,_t188F];
      real _t1893#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1891,deltaP17F2);
      real _t1895#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1889,_t1893);
      bool _t1897#1 = GT<real>(time1859,_t1895);
      real _t1899#1 = 0.57735026919e0;
      real _t189B#1 = 0.57735026919e0;
      real _t189D#1 = 0.57735026919e0;
      tensor[3] _t189F#1 = <tensor[3]>[_t1899,_t189B,_t189D];
      real _t18A1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t189F,deltaP17F2);
      real _t18A3#1 = λ(T0[])<Abs(T0)> (_t18A1);
      real _t18A5#1 = 0.1e-20;
      bool _t18A7#1 = GTE<real>(_t18A3,_t18A5);
      bool _t18A9#1 = BAnd(_t1897,_t18A7);
      bool _t18AB#1 = BAnd(_t187B,_t18A9);
      if _t18AB then goto ASSIGN18AF else goto JOIN18AD
    ASSIGN18AF:  preds = [COND18F0]
      int _t18AE#1 = 0;
      bool _t18B0#1 = NEQ<int>(_t1856,_t18AE);
      if _t18B0 then goto ASSIGN18B4 else goto ASSIGN18D2
    ASSIGN18B4:  preds = [COND18EC]
      real _t18B3#1 = 0.57735026919e0;
      real _t18B5#1 = 0.57735026919e0;
      real _t18B7#1 = 0.57735026919e0;
      real _t18B9#1 = 0.57735026919e0;
      tensor[3] _t18BB#1 = <tensor[3]>[_t18B5,_t18B7,_t18B9];
      real _t18BD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t18BB,_t1854);
      real _t18BF#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18B3,_t18BD);
      real _t18C1#1 = 0.57735026919e0;
      real _t18C3#1 = 0.57735026919e0;
      real _t18C5#1 = 0.57735026919e0;
      tensor[3] _t18C7#1 = <tensor[3]>[_t18C1,_t18C3,_t18C5];
      real _t18C9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t18C7,deltaP17F2);
      real time18CB#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18BF,_t18C9);
      int face18CE#1 = 0;
      goto JOIN18B2
    JOIN18B2:  preds = [ASSIGN18D0,ASSIGN18EB]
      real faceTime18EA#1 = phi(faceTime185D,faceTime18E9)
      int face18CF#1 = phi(face18CE,face185B)
      real time18CC#1 = phi(time18CB,time1859)
      goto JOIN18AD
    JOIN18AD:  preds = [JOIN18B2,COND18F0]
      real faceTime18EF#2 = phi(faceTime18EA,faceTime185D)
      int face18EE#2 = phi(face18CF,face185B)
      real time18ED#3 = phi(time18CC,time1859)
      real _t18F1#1 = 0.e0;
      real _t18F3#1 = 0.1e1;
      real _t18F5#1 = 0.e0;
      real _t18F7#1 = 0.e0;
      tensor[3] _t18F9#1 = <tensor[3]>[_t18F3,_t18F5,_t18F7];
      real _t18FB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t18F9,_t1854);
      real _t18FD#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18F1,_t18FB);
      real _t18FF#1 = 0.1e1;
      real _t1901#1 = 0.e0;
      real _t1903#1 = 0.e0;
      tensor[3] _t1905#1 = <tensor[3]>[_t18FF,_t1901,_t1903];
      real _t1907#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1905,deltaP17F2);
      real _t1909#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18FD,_t1907);
      real _t190B#1 = -0.1e-15;
      bool _t190D#1 = GTE<real>(_t1909,_t190B);
      real _t190F#1 = 0.e0;
      real _t1911#1 = 0.1e1;
      real _t1913#1 = 0.e0;
      real _t1915#1 = 0.e0;
      tensor[3] _t1917#1 = <tensor[3]>[_t1911,_t1913,_t1915];
      real _t1919#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1917,_t1854);
      real _t191B#1 = λ(T0[],T1[])<(T0) - (T1)> (_t190F,_t1919);
      real _t191D#1 = 0.1e1;
      real _t191F#1 = 0.e0;
      real _t1921#1 = 0.e0;
      tensor[3] _t1923#1 = <tensor[3]>[_t191D,_t191F,_t1921];
      real _t1925#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1923,deltaP17F2);
      real _t1927#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t191B,_t1925);
      bool _t1929#1 = GT<real>(time18ED,_t1927);
      real _t192B#1 = 0.1e1;
      real _t192D#1 = 0.e0;
      real _t192F#1 = 0.e0;
      tensor[3] _t1931#1 = <tensor[3]>[_t192B,_t192D,_t192F];
      real _t1933#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1931,deltaP17F2);
      real _t1935#1 = λ(T0[])<Abs(T0)> (_t1933);
      real _t1937#1 = 0.1e-20;
      bool _t1939#1 = GTE<real>(_t1935,_t1937);
      bool _t193B#1 = BAnd(_t1929,_t1939);
      bool _t193D#1 = BAnd(_t190D,_t193B);
      if _t193D then goto ASSIGN1941 else goto JOIN193F
    ASSIGN1941:  preds = [COND1982]
      int _t1940#1 = 1;
      bool _t1942#1 = NEQ<int>(_t1856,_t1940);
      if _t1942 then goto ASSIGN1946 else goto ASSIGN1964
    ASSIGN1946:  preds = [COND197E]
      real _t1945#1 = 0.e0;
      real _t1947#1 = 0.1e1;
      real _t1949#1 = 0.e0;
      real _t194B#1 = 0.e0;
      tensor[3] _t194D#1 = <tensor[3]>[_t1947,_t1949,_t194B];
      real _t194F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t194D,_t1854);
      real _t1951#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1945,_t194F);
      real _t1953#1 = 0.1e1;
      real _t1955#1 = 0.e0;
      real _t1957#1 = 0.e0;
      tensor[3] _t1959#1 = <tensor[3]>[_t1953,_t1955,_t1957];
      real _t195B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1959,deltaP17F2);
      real time195D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1951,_t195B);
      int face1960#1 = 1;
      goto JOIN1944
    JOIN1944:  preds = [ASSIGN1962,ASSIGN197D]
      real faceTime197C#1 = phi(faceTime18EF,faceTime197B)
      int face1961#1 = phi(face1960,face18EE)
      real time195E#1 = phi(time195D,time18ED)
      goto JOIN193F
    JOIN193F:  preds = [JOIN1944,COND1982]
      real faceTime1981#2 = phi(faceTime197C,faceTime18EF)
      int face1980#2 = phi(face1961,face18EE)
      real time197F#3 = phi(time195E,time18ED)
      real _t1983#1 = 0.e0;
      real _t1985#1 = 0.e0;
      real _t1987#1 = -0.1e1;
      real _t1989#1 = 0.e0;
      tensor[3] _t198B#1 = <tensor[3]>[_t1985,_t1987,_t1989];
      real _t198D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t198B,_t1854);
      real _t198F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1983,_t198D);
      real _t1991#1 = 0.e0;
      real _t1993#1 = -0.1e1;
      real _t1995#1 = 0.e0;
      tensor[3] _t1997#1 = <tensor[3]>[_t1991,_t1993,_t1995];
      real _t1999#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1997,deltaP17F2);
      real _t199B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t198F,_t1999);
      real _t199D#1 = -0.1e-15;
      bool _t199F#1 = GTE<real>(_t199B,_t199D);
      real _t19A1#1 = 0.e0;
      real _t19A3#1 = 0.e0;
      real _t19A5#1 = -0.1e1;
      real _t19A7#1 = 0.e0;
      tensor[3] _t19A9#1 = <tensor[3]>[_t19A3,_t19A5,_t19A7];
      real _t19AB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t19A9,_t1854);
      real _t19AD#1 = λ(T0[],T1[])<(T0) - (T1)> (_t19A1,_t19AB);
      real _t19AF#1 = 0.e0;
      real _t19B1#1 = -0.1e1;
      real _t19B3#1 = 0.e0;
      tensor[3] _t19B5#1 = <tensor[3]>[_t19AF,_t19B1,_t19B3];
      real _t19B7#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t19B5,deltaP17F2);
      real _t19B9#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t19AD,_t19B7);
      bool _t19BB#1 = GT<real>(time197F,_t19B9);
      real _t19BD#1 = 0.e0;
      real _t19BF#1 = -0.1e1;
      real _t19C1#1 = 0.e0;
      tensor[3] _t19C3#1 = <tensor[3]>[_t19BD,_t19BF,_t19C1];
      real _t19C5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t19C3,deltaP17F2);
      real _t19C7#1 = λ(T0[])<Abs(T0)> (_t19C5);
      real _t19C9#1 = 0.1e-20;
      bool _t19CB#1 = GTE<real>(_t19C7,_t19C9);
      bool _t19CD#1 = BAnd(_t19BB,_t19CB);
      bool _t19CF#1 = BAnd(_t199F,_t19CD);
      if _t19CF then goto ASSIGN19D3 else goto JOIN19D1
    ASSIGN19D3:  preds = [COND1A14]
      int _t19D2#1 = 2;
      bool _t19D4#1 = NEQ<int>(_t1856,_t19D2);
      if _t19D4 then goto ASSIGN19D8 else goto ASSIGN19F6
    ASSIGN19D8:  preds = [COND1A10]
      real _t19D7#1 = 0.e0;
      real _t19D9#1 = 0.e0;
      real _t19DB#1 = -0.1e1;
      real _t19DD#1 = 0.e0;
      tensor[3] _t19DF#1 = <tensor[3]>[_t19D9,_t19DB,_t19DD];
      real _t19E1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t19DF,_t1854);
      real _t19E3#1 = λ(T0[],T1[])<(T0) - (T1)> (_t19D7,_t19E1);
      real _t19E5#1 = 0.e0;
      real _t19E7#1 = -0.1e1;
      real _t19E9#1 = 0.e0;
      tensor[3] _t19EB#1 = <tensor[3]>[_t19E5,_t19E7,_t19E9];
      real _t19ED#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t19EB,deltaP17F2);
      real time19EF#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t19E3,_t19ED);
      int face19F2#1 = 2;
      goto JOIN19D6
    JOIN19D6:  preds = [ASSIGN19F4,ASSIGN1A0F]
      real faceTime1A0E#1 = phi(faceTime1981,faceTime1A0D)
      int face19F3#1 = phi(face19F2,face1980)
      real time19F0#1 = phi(time19EF,time197F)
      goto JOIN19D1
    JOIN19D1:  preds = [JOIN19D6,COND1A14]
      real faceTime1A13#2 = phi(faceTime1A0E,faceTime1981)
      int face1A12#2 = phi(face19F3,face1980)
      real time1A11#3 = phi(time19F0,time197F)
      real _t1A15#1 = 0.e0;
      real _t1A17#1 = 0.e0;
      real _t1A19#1 = 0.e0;
      real _t1A1B#1 = 0.1e1;
      tensor[3] _t1A1D#1 = <tensor[3]>[_t1A17,_t1A19,_t1A1B];
      real _t1A1F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A1D,_t1854);
      real _t1A21#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A15,_t1A1F);
      real _t1A23#1 = 0.e0;
      real _t1A25#1 = 0.e0;
      real _t1A27#1 = 0.1e1;
      tensor[3] _t1A29#1 = <tensor[3]>[_t1A23,_t1A25,_t1A27];
      real _t1A2B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A29,deltaP17F2);
      real _t1A2D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A21,_t1A2B);
      real _t1A2F#1 = -0.1e-15;
      bool _t1A31#1 = GTE<real>(_t1A2D,_t1A2F);
      real _t1A33#1 = 0.e0;
      real _t1A35#1 = 0.e0;
      real _t1A37#1 = 0.e0;
      real _t1A39#1 = 0.1e1;
      tensor[3] _t1A3B#1 = <tensor[3]>[_t1A35,_t1A37,_t1A39];
      real _t1A3D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A3B,_t1854);
      real _t1A3F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A33,_t1A3D);
      real _t1A41#1 = 0.e0;
      real _t1A43#1 = 0.e0;
      real _t1A45#1 = 0.1e1;
      tensor[3] _t1A47#1 = <tensor[3]>[_t1A41,_t1A43,_t1A45];
      real _t1A49#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A47,deltaP17F2);
      real _t1A4B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A3F,_t1A49);
      bool _t1A4D#1 = GT<real>(time1A11,_t1A4B);
      real _t1A4F#1 = 0.e0;
      real _t1A51#1 = 0.e0;
      real _t1A53#1 = 0.1e1;
      tensor[3] _t1A55#1 = <tensor[3]>[_t1A4F,_t1A51,_t1A53];
      real _t1A57#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A55,deltaP17F2);
      real _t1A59#1 = λ(T0[])<Abs(T0)> (_t1A57);
      real _t1A5B#1 = 0.1e-20;
      bool _t1A5D#1 = GTE<real>(_t1A59,_t1A5B);
      bool _t1A5F#1 = BAnd(_t1A4D,_t1A5D);
      bool _t1A61#1 = BAnd(_t1A31,_t1A5F);
      if _t1A61 then goto ASSIGN1A65 else goto JOIN1A63
    ASSIGN1A65:  preds = [COND1AA6]
      int _t1A64#1 = 3;
      bool _t1A66#1 = NEQ<int>(_t1856,_t1A64);
      if _t1A66 then goto ASSIGN1A6A else goto ASSIGN1A88
    ASSIGN1A6A:  preds = [COND1AA2]
      real _t1A69#1 = 0.e0;
      real _t1A6B#1 = 0.e0;
      real _t1A6D#1 = 0.e0;
      real _t1A6F#1 = 0.1e1;
      tensor[3] _t1A71#1 = <tensor[3]>[_t1A6B,_t1A6D,_t1A6F];
      real _t1A73#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A71,_t1854);
      real _t1A75#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A69,_t1A73);
      real _t1A77#1 = 0.e0;
      real _t1A79#1 = 0.e0;
      real _t1A7B#1 = 0.1e1;
      tensor[3] _t1A7D#1 = <tensor[3]>[_t1A77,_t1A79,_t1A7B];
      real _t1A7F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A7D,deltaP17F2);
      real time1A81#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A75,_t1A7F);
      int face1A84#1 = 3;
      goto JOIN1A68
    JOIN1A68:  preds = [ASSIGN1A86,ASSIGN1AA1]
      real faceTime1AA0#1 = phi(faceTime1A13,faceTime1A9F)
      int face1A85#1 = phi(face1A84,face1A12)
      real time1A82#1 = phi(time1A81,time1A11)
      goto JOIN1A63
    JOIN1A63:  preds = [JOIN1A68,COND1AA6]
      real faceTime1AA5#2 = phi(faceTime1AA0,faceTime1A13)
      int face1AA4#2 = phi(face1A85,face1A12)
      real time1AA3#1 = phi(time1A82,time1A11)
      int _t1AA7#1 = -1;
      bool _t1AA9#1 = NEQ<int>(face1AA4,_t1AA7);
      if _t1AA9 then goto ASSIGN1AAD else goto ASSIGN1AB8
    ASSIGN1AAD:  preds = [COND1ACC]
      real _t1AAC#1 = 0.e0;
      real _t1AAE#1 = Max<real>(time1AA3,_t1AAC);
      real _t1AB0#1 = IntToReal(face1AA4);
      tensor[2] _t1AB2#1 = <tensor[2]>[_t1AAE,_t1AB0];
      tensor[2] _t1AB4#1 = _t1AB2;
      goto JOIN1AAB
    JOIN1AAB:  preds = [ASSIGN1AB6,JOIN1ABB]
      tensor[2] _t1AB5#1 = phi(_t1AB4,_t1AC3)
      real eTime1ACD#3 = TensorIndex<tensor[2],[0]>(_t1AB5);
      real _t1ACF#1 = λ(T0[],T1[])<(T0 * T1)> (time17CB,eTime1ACD);
      real time1AD1#2 = λ(T0[],T1[])<(T0) - (T1)> (time17CB,_t1ACF);
      femData:Mesh _t1AD4#10 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp17CC);
      int _t1AD6#8 = ExtractFemItem<int,CellIndex(Mesh)>(cmp17CC);
      tensor[3] _t1AD8#10 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp17CC);
      tensor[3] _t1ADA#16 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp17CC);
      int _t1ADC#5 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp17CC);
      real time1ADF#3 = +inf;
      int face1AE1#2 = -1;
      real faceTime1AE3#2 = -inf;
      real _t1AE5#1 = 0.57735026919e0;
      real _t1AE7#1 = 0.57735026919e0;
      real _t1AE9#1 = 0.57735026919e0;
      real _t1AEB#1 = 0.57735026919e0;
      tensor[3] _t1AED#1 = <tensor[3]>[_t1AE7,_t1AE9,_t1AEB];
      real _t1AEF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1AED,_t1ADA);
      real _t1AF1#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1AE5,_t1AEF);
      real _t1AF3#1 = 0.57735026919e0;
      real _t1AF5#1 = 0.57735026919e0;
      real _t1AF7#1 = 0.57735026919e0;
      tensor[3] _t1AF9#1 = <tensor[3]>[_t1AF3,_t1AF5,_t1AF7];
      real _t1AFB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1AF9,deltaP17F2);
      real _t1AFD#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1AF1,_t1AFB);
      real _t1AFF#1 = -0.1e-15;
      bool _t1B01#1 = GTE<real>(_t1AFD,_t1AFF);
      real _t1B03#1 = 0.57735026919e0;
      real _t1B05#1 = 0.57735026919e0;
      real _t1B07#1 = 0.57735026919e0;
      real _t1B09#1 = 0.57735026919e0;
      tensor[3] _t1B0B#1 = <tensor[3]>[_t1B05,_t1B07,_t1B09];
      real _t1B0D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1B0B,_t1ADA);
      real _t1B0F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B03,_t1B0D);
      real _t1B11#1 = 0.57735026919e0;
      real _t1B13#1 = 0.57735026919e0;
      real _t1B15#1 = 0.57735026919e0;
      tensor[3] _t1B17#1 = <tensor[3]>[_t1B11,_t1B13,_t1B15];
      real _t1B19#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1B17,deltaP17F2);
      real _t1B1B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B0F,_t1B19);
      bool _t1B1D#1 = GT<real>(time1ADF,_t1B1B);
      real _t1B1F#1 = 0.57735026919e0;
      real _t1B21#1 = 0.57735026919e0;
      real _t1B23#1 = 0.57735026919e0;
      tensor[3] _t1B25#1 = <tensor[3]>[_t1B1F,_t1B21,_t1B23];
      real _t1B27#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1B25,deltaP17F2);
      real _t1B29#1 = λ(T0[])<Abs(T0)> (_t1B27);
      real _t1B2B#1 = 0.1e-20;
      bool _t1B2D#1 = GTE<real>(_t1B29,_t1B2B);
      bool _t1B2F#1 = BAnd(_t1B1D,_t1B2D);
      bool _t1B31#1 = BAnd(_t1B01,_t1B2F);
      if _t1B31 then goto ASSIGN1B35 else goto JOIN1B33
    ASSIGN1B35:  preds = [COND1B76]
      int _t1B34#1 = 0;
      bool _t1B36#1 = NEQ<int>(_t1ADC,_t1B34);
      if _t1B36 then goto ASSIGN1B3A else goto ASSIGN1B58
    ASSIGN1B3A:  preds = [COND1B72]
      real _t1B39#1 = 0.57735026919e0;
      real _t1B3B#1 = 0.57735026919e0;
      real _t1B3D#1 = 0.57735026919e0;
      real _t1B3F#1 = 0.57735026919e0;
      tensor[3] _t1B41#1 = <tensor[3]>[_t1B3B,_t1B3D,_t1B3F];
      real _t1B43#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1B41,_t1ADA);
      real _t1B45#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B39,_t1B43);
      real _t1B47#1 = 0.57735026919e0;
      real _t1B49#1 = 0.57735026919e0;
      real _t1B4B#1 = 0.57735026919e0;
      tensor[3] _t1B4D#1 = <tensor[3]>[_t1B47,_t1B49,_t1B4B];
      real _t1B4F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1B4D,deltaP17F2);
      real time1B51#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B45,_t1B4F);
      int face1B54#1 = 0;
      goto JOIN1B38
    JOIN1B38:  preds = [ASSIGN1B56,ASSIGN1B71]
      real faceTime1B70#1 = phi(faceTime1AE3,faceTime1B6F)
      int face1B55#1 = phi(face1B54,face1AE1)
      real time1B52#1 = phi(time1B51,time1ADF)
      goto JOIN1B33
    JOIN1B33:  preds = [JOIN1B38,COND1B76]
      real faceTime1B75#2 = phi(faceTime1B70,faceTime1AE3)
      int face1B74#2 = phi(face1B55,face1AE1)
      real time1B73#3 = phi(time1B52,time1ADF)
      real _t1B77#1 = 0.e0;
      real _t1B79#1 = 0.1e1;
      real _t1B7B#1 = 0.e0;
      real _t1B7D#1 = 0.e0;
      tensor[3] _t1B7F#1 = <tensor[3]>[_t1B79,_t1B7B,_t1B7D];
      real _t1B81#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1B7F,_t1ADA);
      real _t1B83#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B77,_t1B81);
      real _t1B85#1 = 0.1e1;
      real _t1B87#1 = 0.e0;
      real _t1B89#1 = 0.e0;
      tensor[3] _t1B8B#1 = <tensor[3]>[_t1B85,_t1B87,_t1B89];
      real _t1B8D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1B8B,deltaP17F2);
      real _t1B8F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B83,_t1B8D);
      real _t1B91#1 = -0.1e-15;
      bool _t1B93#1 = GTE<real>(_t1B8F,_t1B91);
      real _t1B95#1 = 0.e0;
      real _t1B97#1 = 0.1e1;
      real _t1B99#1 = 0.e0;
      real _t1B9B#1 = 0.e0;
      tensor[3] _t1B9D#1 = <tensor[3]>[_t1B97,_t1B99,_t1B9B];
      real _t1B9F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1B9D,_t1ADA);
      real _t1BA1#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B95,_t1B9F);
      real _t1BA3#1 = 0.1e1;
      real _t1BA5#1 = 0.e0;
      real _t1BA7#1 = 0.e0;
      tensor[3] _t1BA9#1 = <tensor[3]>[_t1BA3,_t1BA5,_t1BA7];
      real _t1BAB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1BA9,deltaP17F2);
      real _t1BAD#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1BA1,_t1BAB);
      bool _t1BAF#1 = GT<real>(time1B73,_t1BAD);
      real _t1BB1#1 = 0.1e1;
      real _t1BB3#1 = 0.e0;
      real _t1BB5#1 = 0.e0;
      tensor[3] _t1BB7#1 = <tensor[3]>[_t1BB1,_t1BB3,_t1BB5];
      real _t1BB9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1BB7,deltaP17F2);
      real _t1BBB#1 = λ(T0[])<Abs(T0)> (_t1BB9);
      real _t1BBD#1 = 0.1e-20;
      bool _t1BBF#1 = GTE<real>(_t1BBB,_t1BBD);
      bool _t1BC1#1 = BAnd(_t1BAF,_t1BBF);
      bool _t1BC3#1 = BAnd(_t1B93,_t1BC1);
      if _t1BC3 then goto ASSIGN1BC7 else goto JOIN1BC5
    ASSIGN1BC7:  preds = [COND1C08]
      int _t1BC6#1 = 1;
      bool _t1BC8#1 = NEQ<int>(_t1ADC,_t1BC6);
      if _t1BC8 then goto ASSIGN1BCC else goto ASSIGN1BEA
    ASSIGN1BCC:  preds = [COND1C04]
      real _t1BCB#1 = 0.e0;
      real _t1BCD#1 = 0.1e1;
      real _t1BCF#1 = 0.e0;
      real _t1BD1#1 = 0.e0;
      tensor[3] _t1BD3#1 = <tensor[3]>[_t1BCD,_t1BCF,_t1BD1];
      real _t1BD5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1BD3,_t1ADA);
      real _t1BD7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1BCB,_t1BD5);
      real _t1BD9#1 = 0.1e1;
      real _t1BDB#1 = 0.e0;
      real _t1BDD#1 = 0.e0;
      tensor[3] _t1BDF#1 = <tensor[3]>[_t1BD9,_t1BDB,_t1BDD];
      real _t1BE1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1BDF,deltaP17F2);
      real time1BE3#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1BD7,_t1BE1);
      int face1BE6#1 = 1;
      goto JOIN1BCA
    JOIN1BCA:  preds = [ASSIGN1BE8,ASSIGN1C03]
      real faceTime1C02#1 = phi(faceTime1B75,faceTime1C01)
      int face1BE7#1 = phi(face1BE6,face1B74)
      real time1BE4#1 = phi(time1BE3,time1B73)
      goto JOIN1BC5
    JOIN1BC5:  preds = [JOIN1BCA,COND1C08]
      real faceTime1C07#2 = phi(faceTime1C02,faceTime1B75)
      int face1C06#2 = phi(face1BE7,face1B74)
      real time1C05#3 = phi(time1BE4,time1B73)
      real _t1C09#1 = 0.e0;
      real _t1C0B#1 = 0.e0;
      real _t1C0D#1 = -0.1e1;
      real _t1C0F#1 = 0.e0;
      tensor[3] _t1C11#1 = <tensor[3]>[_t1C0B,_t1C0D,_t1C0F];
      real _t1C13#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1C11,_t1ADA);
      real _t1C15#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1C09,_t1C13);
      real _t1C17#1 = 0.e0;
      real _t1C19#1 = -0.1e1;
      real _t1C1B#1 = 0.e0;
      tensor[3] _t1C1D#1 = <tensor[3]>[_t1C17,_t1C19,_t1C1B];
      real _t1C1F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1C1D,deltaP17F2);
      real _t1C21#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C15,_t1C1F);
      real _t1C23#1 = -0.1e-15;
      bool _t1C25#1 = GTE<real>(_t1C21,_t1C23);
      real _t1C27#1 = 0.e0;
      real _t1C29#1 = 0.e0;
      real _t1C2B#1 = -0.1e1;
      real _t1C2D#1 = 0.e0;
      tensor[3] _t1C2F#1 = <tensor[3]>[_t1C29,_t1C2B,_t1C2D];
      real _t1C31#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1C2F,_t1ADA);
      real _t1C33#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1C27,_t1C31);
      real _t1C35#1 = 0.e0;
      real _t1C37#1 = -0.1e1;
      real _t1C39#1 = 0.e0;
      tensor[3] _t1C3B#1 = <tensor[3]>[_t1C35,_t1C37,_t1C39];
      real _t1C3D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1C3B,deltaP17F2);
      real _t1C3F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C33,_t1C3D);
      bool _t1C41#1 = GT<real>(time1C05,_t1C3F);
      real _t1C43#1 = 0.e0;
      real _t1C45#1 = -0.1e1;
      real _t1C47#1 = 0.e0;
      tensor[3] _t1C49#1 = <tensor[3]>[_t1C43,_t1C45,_t1C47];
      real _t1C4B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1C49,deltaP17F2);
      real _t1C4D#1 = λ(T0[])<Abs(T0)> (_t1C4B);
      real _t1C4F#1 = 0.1e-20;
      bool _t1C51#1 = GTE<real>(_t1C4D,_t1C4F);
      bool _t1C53#1 = BAnd(_t1C41,_t1C51);
      bool _t1C55#1 = BAnd(_t1C25,_t1C53);
      if _t1C55 then goto ASSIGN1C59 else goto JOIN1C57
    ASSIGN1C59:  preds = [COND1C9A]
      int _t1C58#1 = 2;
      bool _t1C5A#1 = NEQ<int>(_t1ADC,_t1C58);
      if _t1C5A then goto ASSIGN1C5E else goto ASSIGN1C7C
    ASSIGN1C5E:  preds = [COND1C96]
      real _t1C5D#1 = 0.e0;
      real _t1C5F#1 = 0.e0;
      real _t1C61#1 = -0.1e1;
      real _t1C63#1 = 0.e0;
      tensor[3] _t1C65#1 = <tensor[3]>[_t1C5F,_t1C61,_t1C63];
      real _t1C67#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1C65,_t1ADA);
      real _t1C69#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1C5D,_t1C67);
      real _t1C6B#1 = 0.e0;
      real _t1C6D#1 = -0.1e1;
      real _t1C6F#1 = 0.e0;
      tensor[3] _t1C71#1 = <tensor[3]>[_t1C6B,_t1C6D,_t1C6F];
      real _t1C73#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1C71,deltaP17F2);
      real time1C75#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C69,_t1C73);
      int face1C78#1 = 2;
      goto JOIN1C5C
    JOIN1C5C:  preds = [ASSIGN1C7A,ASSIGN1C95]
      real faceTime1C94#1 = phi(faceTime1C07,faceTime1C93)
      int face1C79#1 = phi(face1C78,face1C06)
      real time1C76#1 = phi(time1C75,time1C05)
      goto JOIN1C57
    JOIN1C57:  preds = [JOIN1C5C,COND1C9A]
      real faceTime1C99#2 = phi(faceTime1C94,faceTime1C07)
      int face1C98#2 = phi(face1C79,face1C06)
      real time1C97#3 = phi(time1C76,time1C05)
      real _t1C9B#1 = 0.e0;
      real _t1C9D#1 = 0.e0;
      real _t1C9F#1 = 0.e0;
      real _t1CA1#1 = 0.1e1;
      tensor[3] _t1CA3#1 = <tensor[3]>[_t1C9D,_t1C9F,_t1CA1];
      real _t1CA5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1CA3,_t1ADA);
      real _t1CA7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1C9B,_t1CA5);
      real _t1CA9#1 = 0.e0;
      real _t1CAB#1 = 0.e0;
      real _t1CAD#1 = 0.1e1;
      tensor[3] _t1CAF#1 = <tensor[3]>[_t1CA9,_t1CAB,_t1CAD];
      real _t1CB1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1CAF,deltaP17F2);
      real _t1CB3#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1CA7,_t1CB1);
      real _t1CB5#1 = -0.1e-15;
      bool _t1CB7#1 = GTE<real>(_t1CB3,_t1CB5);
      real _t1CB9#1 = 0.e0;
      real _t1CBB#1 = 0.e0;
      real _t1CBD#1 = 0.e0;
      real _t1CBF#1 = 0.1e1;
      tensor[3] _t1CC1#1 = <tensor[3]>[_t1CBB,_t1CBD,_t1CBF];
      real _t1CC3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1CC1,_t1ADA);
      real _t1CC5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1CB9,_t1CC3);
      real _t1CC7#1 = 0.e0;
      real _t1CC9#1 = 0.e0;
      real _t1CCB#1 = 0.1e1;
      tensor[3] _t1CCD#1 = <tensor[3]>[_t1CC7,_t1CC9,_t1CCB];
      real _t1CCF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1CCD,deltaP17F2);
      real _t1CD1#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1CC5,_t1CCF);
      bool _t1CD3#1 = GT<real>(time1C97,_t1CD1);
      real _t1CD5#1 = 0.e0;
      real _t1CD7#1 = 0.e0;
      real _t1CD9#1 = 0.1e1;
      tensor[3] _t1CDB#1 = <tensor[3]>[_t1CD5,_t1CD7,_t1CD9];
      real _t1CDD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1CDB,deltaP17F2);
      real _t1CDF#1 = λ(T0[])<Abs(T0)> (_t1CDD);
      real _t1CE1#1 = 0.1e-20;
      bool _t1CE3#1 = GTE<real>(_t1CDF,_t1CE1);
      bool _t1CE5#1 = BAnd(_t1CD3,_t1CE3);
      bool _t1CE7#1 = BAnd(_t1CB7,_t1CE5);
      if _t1CE7 then goto ASSIGN1CEB else goto JOIN1CE9
    ASSIGN1CEB:  preds = [COND1D2C]
      int _t1CEA#1 = 3;
      bool _t1CEC#1 = NEQ<int>(_t1ADC,_t1CEA);
      if _t1CEC then goto ASSIGN1CF0 else goto ASSIGN1D0E
    ASSIGN1CF0:  preds = [COND1D28]
      real _t1CEF#1 = 0.e0;
      real _t1CF1#1 = 0.e0;
      real _t1CF3#1 = 0.e0;
      real _t1CF5#1 = 0.1e1;
      tensor[3] _t1CF7#1 = <tensor[3]>[_t1CF1,_t1CF3,_t1CF5];
      real _t1CF9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1CF7,_t1ADA);
      real _t1CFB#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1CEF,_t1CF9);
      real _t1CFD#1 = 0.e0;
      real _t1CFF#1 = 0.e0;
      real _t1D01#1 = 0.1e1;
      tensor[3] _t1D03#1 = <tensor[3]>[_t1CFD,_t1CFF,_t1D01];
      real _t1D05#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1D03,deltaP17F2);
      real time1D07#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1CFB,_t1D05);
      int face1D0A#1 = 3;
      goto JOIN1CEE
    JOIN1CEE:  preds = [ASSIGN1D0C,ASSIGN1D27]
      real faceTime1D26#1 = phi(faceTime1C99,faceTime1D25)
      int face1D0B#1 = phi(face1D0A,face1C98)
      real time1D08#1 = phi(time1D07,time1C97)
      goto JOIN1CE9
    JOIN1CE9:  preds = [JOIN1CEE,COND1D2C]
      real faceTime1D2B#2 = phi(faceTime1D26,faceTime1C99)
      int face1D2A#2 = phi(face1D0B,face1C98)
      real time1D29#1 = phi(time1D08,time1C97)
      int _t1D2D#1 = -1;
      bool _t1D2F#1 = NEQ<int>(face1D2A,_t1D2D);
      if _t1D2F then goto ASSIGN1D33 else goto ASSIGN1D3E
    ASSIGN1D33:  preds = [COND1D52]
      real _t1D32#1 = 0.e0;
      real _t1D34#1 = Max<real>(time1D29,_t1D32);
      real _t1D36#1 = IntToReal(face1D2A);
      tensor[2] _t1D38#1 = <tensor[2]>[_t1D34,_t1D36];
      tensor[2] _t1D3A#1 = _t1D38;
      goto JOIN1D31
    JOIN1D31:  preds = [ASSIGN1D3C,JOIN1D41]
      tensor[2] _t1D3B#23 = phi(_t1D3A,_t1D49)
      int _t1D54#1 = -1;
      real _t1D56#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t1D58#1 = FloorToInt(_t1D56);
      int[2] _t1D5A#1 = nextCell417B2 (_t1D58,_t1AD6,_t1AD4);
      int _t1D5C#1 = 0;
      int _t1D5E#1 = Subscript<int[2]>(_t1D5A,_t1D5C);
      bool _t1D60#1 = NEQ<int>(_t1D54,_t1D5E);
      if _t1D60 then goto ASSIGN1D64 else goto ASSIGN28E8
    ASSIGN1D64:  preds = [COND28F1]
      string _t1D63#1 = "face ";
      real _t1D65#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t1D67#1 = FloorToInt(_t1D65);
      string _t1D69#1 = " to ";
      real _t1D6B#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t1D6D#1 = FloorToInt(_t1D6B);
      int[2] _t1D6F#1 = nextCell417B2 (_t1D6D,_t1AD6,_t1AD4);
      int _t1D71#1 = 1;
      int _t1D73#1 = Subscript<int[2]>(_t1D6F,_t1D71);
      string _t1D75#1 = "\n";
      string _t1D77#1 = "got: ";
      real _t1D79#1 = 0.1e1;
      real _t1D7B#1 = 0.e0;
      real _t1D7D#1 = 0.e0;
      real _t1D7F#1 = 0.e0;
      tensor[4] _t1D81#1 = <tensor[4]>[_t1D79,_t1D7B,_t1D7D,_t1D7F];
      real _t1D83#1 = 0.e0;
      real _t1D85#1 = 0.1e1;
      real _t1D87#1 = 0.e0;
      real _t1D89#1 = 0.e0;
      tensor[4] _t1D8B#1 = <tensor[4]>[_t1D83,_t1D85,_t1D87,_t1D89];
      real _t1D8D#1 = 0.e0;
      real _t1D8F#1 = 0.e0;
      real _t1D91#1 = 0.1e1;
      real _t1D93#1 = 0.e0;
      tensor[4] _t1D95#1 = <tensor[4]>[_t1D8D,_t1D8F,_t1D91,_t1D93];
      real _t1D97#1 = 0.971445146547e-16;
      real _t1D99#1 = 0.e0;
      real _t1D9B#1 = 0.e0;
      real _t1D9D#1 = 0.1e1;
      tensor[4] _t1D9F#1 = <tensor[4]>[_t1D97,_t1D99,_t1D9B,_t1D9D];
      tensor[4,4] _t1DA1#1 = <tensor[4,4]>[_t1D81,_t1D8B,_t1D95,_t1D9F];
      real _t1DA3#1 = 0.57735026919e0;
      real _t1DA5#1 = 0.57735026919e0;
      real _t1DA7#1 = 0.57735026919e0;
      real _t1DA9#1 = -0.57735026919e0;
      tensor[4] _t1DAB#1 = <tensor[4]>[_t1DA3,_t1DA5,_t1DA7,_t1DA9];
      real _t1DAD#1 = -0.333333333333e0;
      real _t1DAF#1 = 0.666666666667e0;
      real _t1DB1#1 = -0.333333333333e0;
      real _t1DB3#1 = 0.333333333333e0;
      tensor[4] _t1DB5#1 = <tensor[4]>[_t1DAD,_t1DAF,_t1DB1,_t1DB3];
      real _t1DB7#1 = -0.333333333333e0;
      real _t1DB9#1 = -0.333333333333e0;
      real _t1DBB#1 = 0.666666666667e0;
      real _t1DBD#1 = 0.333333333333e0;
      tensor[4] _t1DBF#1 = <tensor[4]>[_t1DB7,_t1DB9,_t1DBB,_t1DBD];
      real _t1DC1#1 = 0.971445146547e-16;
      real _t1DC3#1 = 0.e0;
      real _t1DC5#1 = 0.e0;
      real _t1DC7#1 = 0.1e1;
      tensor[4] _t1DC9#1 = <tensor[4]>[_t1DC1,_t1DC3,_t1DC5,_t1DC7];
      tensor[4,4] _t1DCB#1 = <tensor[4,4]>[_t1DAB,_t1DB5,_t1DBF,_t1DC9];
      real _t1DCD#1 = -0.333333333333e0;
      real _t1DCF#1 = 0.666666666667e0;
      real _t1DD1#1 = -0.333333333333e0;
      real _t1DD3#1 = 0.333333333333e0;
      tensor[4] _t1DD5#1 = <tensor[4]>[_t1DCD,_t1DCF,_t1DD1,_t1DD3];
      real _t1DD7#1 = -0.57735026919e0;
      real _t1DD9#1 = -0.57735026919e0;
      real _t1DDB#1 = -0.57735026919e0;
      real _t1DDD#1 = 0.57735026919e0;
      tensor[4] _t1DDF#1 = <tensor[4]>[_t1DD7,_t1DD9,_t1DDB,_t1DDD];
      real _t1DE1#1 = -0.333333333333e0;
      real _t1DE3#1 = -0.333333333333e0;
      real _t1DE5#1 = 0.666666666667e0;
      real _t1DE7#1 = 0.333333333333e0;
      tensor[4] _t1DE9#1 = <tensor[4]>[_t1DE1,_t1DE3,_t1DE5,_t1DE7];
      real _t1DEB#1 = 0.971445146547e-16;
      real _t1DED#1 = 0.e0;
      real _t1DEF#1 = 0.e0;
      real _t1DF1#1 = 0.1e1;
      tensor[4] _t1DF3#1 = <tensor[4]>[_t1DEB,_t1DED,_t1DEF,_t1DF1];
      tensor[4,4] _t1DF5#1 = <tensor[4,4]>[_t1DD5,_t1DDF,_t1DE9,_t1DF3];
      real _t1DF7#1 = -0.333333333333e0;
      real _t1DF9#1 = 0.666666666667e0;
      real _t1DFB#1 = -0.333333333333e0;
      real _t1DFD#1 = 0.333333333333e0;
      tensor[4] _t1DFF#1 = <tensor[4]>[_t1DF7,_t1DF9,_t1DFB,_t1DFD];
      real _t1E01#1 = -0.333333333333e0;
      real _t1E03#1 = -0.333333333333e0;
      real _t1E05#1 = 0.666666666667e0;
      real _t1E07#1 = 0.333333333333e0;
      tensor[4] _t1E09#1 = <tensor[4]>[_t1E01,_t1E03,_t1E05,_t1E07];
      real _t1E0B#1 = 0.57735026919e0;
      real _t1E0D#1 = 0.57735026919e0;
      real _t1E0F#1 = 0.57735026919e0;
      real _t1E11#1 = -0.57735026919e0;
      tensor[4] _t1E13#1 = <tensor[4]>[_t1E0B,_t1E0D,_t1E0F,_t1E11];
      real _t1E15#1 = 0.971445146547e-16;
      real _t1E17#1 = 0.e0;
      real _t1E19#1 = 0.e0;
      real _t1E1B#1 = 0.1e1;
      tensor[4] _t1E1D#1 = <tensor[4]>[_t1E15,_t1E17,_t1E19,_t1E1B];
      tensor[4,4] _t1E1F#1 = <tensor[4,4]>[_t1DFF,_t1E09,_t1E13,_t1E1D];
      tensor[4,4][4] _t1E21#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      real _t1E23#1 = 0.57735026919e0;
      real _t1E25#1 = -0.1e1;
      real _t1E27#1 = -0.1e1;
      real _t1E29#1 = 0.1e1;
      tensor[4] _t1E2B#1 = <tensor[4]>[_t1E23,_t1E25,_t1E27,_t1E29];
      real _t1E2D#1 = 0.57735026919e0;
      real _t1E2F#1 = 0.1e1;
      real _t1E31#1 = 0.e0;
      real _t1E33#1 = 0.e0;
      tensor[4] _t1E35#1 = <tensor[4]>[_t1E2D,_t1E2F,_t1E31,_t1E33];
      real _t1E37#1 = 0.57735026919e0;
      real _t1E39#1 = 0.e0;
      real _t1E3B#1 = 0.1e1;
      real _t1E3D#1 = 0.e0;
      tensor[4] _t1E3F#1 = <tensor[4]>[_t1E37,_t1E39,_t1E3B,_t1E3D];
      real _t1E41#1 = 0.e0;
      real _t1E43#1 = 0.e0;
      real _t1E45#1 = 0.e0;
      real _t1E47#1 = 0.1e1;
      tensor[4] _t1E49#1 = <tensor[4]>[_t1E41,_t1E43,_t1E45,_t1E47];
      tensor[4,4] _t1E4B#1 = <tensor[4,4]>[_t1E2B,_t1E35,_t1E3F,_t1E49];
      real _t1E4D#1 = 0.1e1;
      real _t1E4F#1 = 0.e0;
      real _t1E51#1 = 0.e0;
      real _t1E53#1 = 0.e0;
      tensor[4] _t1E55#1 = <tensor[4]>[_t1E4D,_t1E4F,_t1E51,_t1E53];
      real _t1E57#1 = 0.e0;
      real _t1E59#1 = 0.1e1;
      real _t1E5B#1 = 0.e0;
      real _t1E5D#1 = 0.e0;
      tensor[4] _t1E5F#1 = <tensor[4]>[_t1E57,_t1E59,_t1E5B,_t1E5D];
      real _t1E61#1 = 0.e0;
      real _t1E63#1 = 0.e0;
      real _t1E65#1 = 0.1e1;
      real _t1E67#1 = 0.e0;
      tensor[4] _t1E69#1 = <tensor[4]>[_t1E61,_t1E63,_t1E65,_t1E67];
      real _t1E6B#1 = 0.e0;
      real _t1E6D#1 = 0.e0;
      real _t1E6F#1 = 0.e0;
      real _t1E71#1 = 0.1e1;
      tensor[4] _t1E73#1 = <tensor[4]>[_t1E6B,_t1E6D,_t1E6F,_t1E71];
      tensor[4,4] _t1E75#1 = <tensor[4,4]>[_t1E55,_t1E5F,_t1E69,_t1E73];
      real _t1E77#1 = 0.e0;
      real _t1E79#1 = 0.1e1;
      real _t1E7B#1 = 0.e0;
      real _t1E7D#1 = 0.e0;
      tensor[4] _t1E7F#1 = <tensor[4]>[_t1E77,_t1E79,_t1E7B,_t1E7D];
      real _t1E81#1 = -0.1e1;
      real _t1E83#1 = 0.e0;
      real _t1E85#1 = 0.e0;
      real _t1E87#1 = 0.e0;
      tensor[4] _t1E89#1 = <tensor[4]>[_t1E81,_t1E83,_t1E85,_t1E87];
      real _t1E8B#1 = 0.e0;
      real _t1E8D#1 = 0.e0;
      real _t1E8F#1 = 0.1e1;
      real _t1E91#1 = 0.e0;
      tensor[4] _t1E93#1 = <tensor[4]>[_t1E8B,_t1E8D,_t1E8F,_t1E91];
      real _t1E95#1 = 0.e0;
      real _t1E97#1 = 0.e0;
      real _t1E99#1 = 0.e0;
      real _t1E9B#1 = 0.1e1;
      tensor[4] _t1E9D#1 = <tensor[4]>[_t1E95,_t1E97,_t1E99,_t1E9B];
      tensor[4,4] _t1E9F#1 = <tensor[4,4]>[_t1E7F,_t1E89,_t1E93,_t1E9D];
      real _t1EA1#1 = 0.e0;
      real _t1EA3#1 = 0.1e1;
      real _t1EA5#1 = 0.e0;
      real _t1EA7#1 = 0.e0;
      tensor[4] _t1EA9#1 = <tensor[4]>[_t1EA1,_t1EA3,_t1EA5,_t1EA7];
      real _t1EAB#1 = 0.e0;
      real _t1EAD#1 = 0.e0;
      real _t1EAF#1 = 0.1e1;
      real _t1EB1#1 = 0.e0;
      tensor[4] _t1EB3#1 = <tensor[4]>[_t1EAB,_t1EAD,_t1EAF,_t1EB1];
      real _t1EB5#1 = 0.1e1;
      real _t1EB7#1 = 0.e0;
      real _t1EB9#1 = 0.e0;
      real _t1EBB#1 = 0.e0;
      tensor[4] _t1EBD#1 = <tensor[4]>[_t1EB5,_t1EB7,_t1EB9,_t1EBB];
      real _t1EBF#1 = 0.e0;
      real _t1EC1#1 = 0.e0;
      real _t1EC3#1 = 0.e0;
      real _t1EC5#1 = 0.1e1;
      tensor[4] _t1EC7#1 = <tensor[4]>[_t1EBF,_t1EC1,_t1EC3,_t1EC5];
      tensor[4,4] _t1EC9#1 = <tensor[4,4]>[_t1EA9,_t1EB3,_t1EBD,_t1EC7];
      tensor[4,4][4] _t1ECB#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      real _t1ECD#1 = -0.1e1;
      real _t1ECF#1 = -0.57735026919e0;
      real _t1ED1#1 = -0.1e1;
      real _t1ED3#1 = 0.1e1;
      tensor[4] _t1ED5#1 = <tensor[4]>[_t1ECD,_t1ECF,_t1ED1,_t1ED3];
      real _t1ED7#1 = 0.1e1;
      real _t1ED9#1 = -0.57735026919e0;
      real _t1EDB#1 = 0.e0;
      real _t1EDD#1 = 0.e0;
      tensor[4] _t1EDF#1 = <tensor[4]>[_t1ED7,_t1ED9,_t1EDB,_t1EDD];
      real _t1EE1#1 = 0.e0;
      real _t1EE3#1 = -0.57735026919e0;
      real _t1EE5#1 = 0.1e1;
      real _t1EE7#1 = 0.e0;
      tensor[4] _t1EE9#1 = <tensor[4]>[_t1EE1,_t1EE3,_t1EE5,_t1EE7];
      real _t1EEB#1 = 0.e0;
      real _t1EED#1 = 0.e0;
      real _t1EEF#1 = 0.e0;
      real _t1EF1#1 = 0.1e1;
      tensor[4] _t1EF3#1 = <tensor[4]>[_t1EEB,_t1EED,_t1EEF,_t1EF1];
      tensor[4,4] _t1EF5#1 = <tensor[4,4]>[_t1ED5,_t1EDF,_t1EE9,_t1EF3];
      real _t1EF7#1 = 0.e0;
      real _t1EF9#1 = -0.1e1;
      real _t1EFB#1 = 0.e0;
      real _t1EFD#1 = 0.e0;
      tensor[4] _t1EFF#1 = <tensor[4]>[_t1EF7,_t1EF9,_t1EFB,_t1EFD];
      real _t1F01#1 = 0.1e1;
      real _t1F03#1 = 0.e0;
      real _t1F05#1 = 0.e0;
      real _t1F07#1 = 0.e0;
      tensor[4] _t1F09#1 = <tensor[4]>[_t1F01,_t1F03,_t1F05,_t1F07];
      real _t1F0B#1 = 0.e0;
      real _t1F0D#1 = 0.e0;
      real _t1F0F#1 = 0.1e1;
      real _t1F11#1 = 0.e0;
      tensor[4] _t1F13#1 = <tensor[4]>[_t1F0B,_t1F0D,_t1F0F,_t1F11];
      real _t1F15#1 = 0.e0;
      real _t1F17#1 = 0.e0;
      real _t1F19#1 = 0.e0;
      real _t1F1B#1 = 0.1e1;
      tensor[4] _t1F1D#1 = <tensor[4]>[_t1F15,_t1F17,_t1F19,_t1F1B];
      tensor[4,4] _t1F1F#1 = <tensor[4,4]>[_t1EFF,_t1F09,_t1F13,_t1F1D];
      real _t1F21#1 = 0.1e1;
      real _t1F23#1 = 0.e0;
      real _t1F25#1 = 0.e0;
      real _t1F27#1 = 0.e0;
      tensor[4] _t1F29#1 = <tensor[4]>[_t1F21,_t1F23,_t1F25,_t1F27];
      real _t1F2B#1 = 0.e0;
      real _t1F2D#1 = 0.1e1;
      real _t1F2F#1 = 0.e0;
      real _t1F31#1 = 0.e0;
      tensor[4] _t1F33#1 = <tensor[4]>[_t1F2B,_t1F2D,_t1F2F,_t1F31];
      real _t1F35#1 = 0.e0;
      real _t1F37#1 = 0.e0;
      real _t1F39#1 = 0.1e1;
      real _t1F3B#1 = 0.e0;
      tensor[4] _t1F3D#1 = <tensor[4]>[_t1F35,_t1F37,_t1F39,_t1F3B];
      real _t1F3F#1 = 0.e0;
      real _t1F41#1 = 0.e0;
      real _t1F43#1 = 0.e0;
      real _t1F45#1 = 0.1e1;
      tensor[4] _t1F47#1 = <tensor[4]>[_t1F3F,_t1F41,_t1F43,_t1F45];
      tensor[4,4] _t1F49#1 = <tensor[4,4]>[_t1F29,_t1F33,_t1F3D,_t1F47];
      real _t1F4B#1 = 0.1e1;
      real _t1F4D#1 = 0.e0;
      real _t1F4F#1 = 0.e0;
      real _t1F51#1 = 0.e0;
      tensor[4] _t1F53#1 = <tensor[4]>[_t1F4B,_t1F4D,_t1F4F,_t1F51];
      real _t1F55#1 = 0.e0;
      real _t1F57#1 = 0.e0;
      real _t1F59#1 = 0.1e1;
      real _t1F5B#1 = 0.e0;
      tensor[4] _t1F5D#1 = <tensor[4]>[_t1F55,_t1F57,_t1F59,_t1F5B];
      real _t1F5F#1 = 0.e0;
      real _t1F61#1 = -0.1e1;
      real _t1F63#1 = 0.e0;
      real _t1F65#1 = 0.e0;
      tensor[4] _t1F67#1 = <tensor[4]>[_t1F5F,_t1F61,_t1F63,_t1F65];
      real _t1F69#1 = 0.e0;
      real _t1F6B#1 = 0.e0;
      real _t1F6D#1 = 0.e0;
      real _t1F6F#1 = 0.1e1;
      tensor[4] _t1F71#1 = <tensor[4]>[_t1F69,_t1F6B,_t1F6D,_t1F6F];
      tensor[4,4] _t1F73#1 = <tensor[4,4]>[_t1F53,_t1F5D,_t1F67,_t1F71];
      tensor[4,4][4] _t1F75#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1F49,_t1F73};
      real _t1F77#1 = -0.1e1;
      real _t1F79#1 = -0.1e1;
      real _t1F7B#1 = 0.57735026919e0;
      real _t1F7D#1 = 0.1e1;
      tensor[4] _t1F7F#1 = <tensor[4]>[_t1F77,_t1F79,_t1F7B,_t1F7D];
      real _t1F81#1 = 0.1e1;
      real _t1F83#1 = 0.e0;
      real _t1F85#1 = 0.57735026919e0;
      real _t1F87#1 = 0.e0;
      tensor[4] _t1F89#1 = <tensor[4]>[_t1F81,_t1F83,_t1F85,_t1F87];
      real _t1F8B#1 = 0.e0;
      real _t1F8D#1 = 0.1e1;
      real _t1F8F#1 = 0.57735026919e0;
      real _t1F91#1 = 0.e0;
      tensor[4] _t1F93#1 = <tensor[4]>[_t1F8B,_t1F8D,_t1F8F,_t1F91];
      real _t1F95#1 = 0.e0;
      real _t1F97#1 = 0.e0;
      real _t1F99#1 = 0.e0;
      real _t1F9B#1 = 0.1e1;
      tensor[4] _t1F9D#1 = <tensor[4]>[_t1F95,_t1F97,_t1F99,_t1F9B];
      tensor[4,4] _t1F9F#1 = <tensor[4,4]>[_t1F7F,_t1F89,_t1F93,_t1F9D];
      real _t1FA1#1 = 0.e0;
      real _t1FA3#1 = 0.e0;
      real _t1FA5#1 = 0.1e1;
      real _t1FA7#1 = 0.e0;
      tensor[4] _t1FA9#1 = <tensor[4]>[_t1FA1,_t1FA3,_t1FA5,_t1FA7];
      real _t1FAB#1 = 0.1e1;
      real _t1FAD#1 = 0.e0;
      real _t1FAF#1 = 0.e0;
      real _t1FB1#1 = 0.e0;
      tensor[4] _t1FB3#1 = <tensor[4]>[_t1FAB,_t1FAD,_t1FAF,_t1FB1];
      real _t1FB5#1 = 0.e0;
      real _t1FB7#1 = 0.1e1;
      real _t1FB9#1 = 0.e0;
      real _t1FBB#1 = 0.e0;
      tensor[4] _t1FBD#1 = <tensor[4]>[_t1FB5,_t1FB7,_t1FB9,_t1FBB];
      real _t1FBF#1 = 0.e0;
      real _t1FC1#1 = 0.e0;
      real _t1FC3#1 = 0.e0;
      real _t1FC5#1 = 0.1e1;
      tensor[4] _t1FC7#1 = <tensor[4]>[_t1FBF,_t1FC1,_t1FC3,_t1FC5];
      tensor[4,4] _t1FC9#1 = <tensor[4,4]>[_t1FA9,_t1FB3,_t1FBD,_t1FC7];
      real _t1FCB#1 = 0.1e1;
      real _t1FCD#1 = 0.e0;
      real _t1FCF#1 = 0.e0;
      real _t1FD1#1 = 0.e0;
      tensor[4] _t1FD3#1 = <tensor[4]>[_t1FCB,_t1FCD,_t1FCF,_t1FD1];
      real _t1FD5#1 = 0.e0;
      real _t1FD7#1 = 0.e0;
      real _t1FD9#1 = -0.1e1;
      real _t1FDB#1 = 0.e0;
      tensor[4] _t1FDD#1 = <tensor[4]>[_t1FD5,_t1FD7,_t1FD9,_t1FDB];
      real _t1FDF#1 = 0.e0;
      real _t1FE1#1 = 0.1e1;
      real _t1FE3#1 = 0.e0;
      real _t1FE5#1 = 0.e0;
      tensor[4] _t1FE7#1 = <tensor[4]>[_t1FDF,_t1FE1,_t1FE3,_t1FE5];
      real _t1FE9#1 = 0.e0;
      real _t1FEB#1 = 0.e0;
      real _t1FED#1 = 0.e0;
      real _t1FEF#1 = 0.1e1;
      tensor[4] _t1FF1#1 = <tensor[4]>[_t1FE9,_t1FEB,_t1FED,_t1FEF];
      tensor[4,4] _t1FF3#1 = <tensor[4,4]>[_t1FD3,_t1FDD,_t1FE7,_t1FF1];
      real _t1FF5#1 = 0.1e1;
      real _t1FF7#1 = 0.e0;
      real _t1FF9#1 = 0.e0;
      real _t1FFB#1 = 0.e0;
      tensor[4] _t1FFD#1 = <tensor[4]>[_t1FF5,_t1FF7,_t1FF9,_t1FFB];
      real _t1FFF#1 = 0.e0;
      real _t2001#1 = 0.1e1;
      real _t2003#1 = 0.e0;
      real _t2005#1 = 0.e0;
      tensor[4] _t2007#1 = <tensor[4]>[_t1FFF,_t2001,_t2003,_t2005];
      real _t2009#1 = 0.e0;
      real _t200B#1 = 0.e0;
      real _t200D#1 = 0.1e1;
      real _t200F#1 = 0.e0;
      tensor[4] _t2011#1 = <tensor[4]>[_t2009,_t200B,_t200D,_t200F];
      real _t2013#1 = 0.e0;
      real _t2015#1 = 0.e0;
      real _t2017#1 = 0.e0;
      real _t2019#1 = 0.1e1;
      tensor[4] _t201B#1 = <tensor[4]>[_t2013,_t2015,_t2017,_t2019];
      tensor[4,4] _t201D#1 = <tensor[4,4]>[_t1FFD,_t2007,_t2011,_t201B];
      tensor[4,4][4] _t201F#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t201D};
      tensor[4,4][4][4] _t2021#1 = <tensor[4,4][4][4]>{_t1E21,_t1ECB,_t1F75,_t201F};
      real _t2023#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t2025#1 = FloorToInt(_t2023);
      tensor[4,4][4] _t2027#1 = Subscript<tensor[4,4][4][4]>(_t2021,_t2025);
      real _t2029#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t202B#1 = FloorToInt(_t2029);
      int[2] _t202D#1 = nextCell417B2 (_t202B,_t1AD6,_t1AD4);
      int _t202F#1 = 1;
      int _t2031#1 = Subscript<int[2]>(_t202D,_t202F);
      tensor[4,4] _t2033#1 = Subscript<tensor[4,4][4]>(_t2027,_t2031);
      string _t2035#1 = "\n";
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t1D63,_t1D67,_t1D69,_t1D73,_t1D75,_t1D77,_t2033,_t2035);
      real _t2038#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t203A#1 = FloorToInt(_t2038);
      int[2] _t203C#1 = nextCell417B2 (_t203A,_t1AD6,_t1AD4);
      int _t203E#1 = 0;
      int _t2040#1 = Subscript<int[2]>(_t203C,_t203E);
      real _t2042#1 = 0.1e1;
      real _t2044#1 = 0.e0;
      real _t2046#1 = 0.e0;
      real _t2048#1 = 0.e0;
      tensor[4] _t204A#1 = <tensor[4]>[_t2042,_t2044,_t2046,_t2048];
      real _t204C#1 = 0.e0;
      real _t204E#1 = 0.1e1;
      real _t2050#1 = 0.e0;
      real _t2052#1 = 0.e0;
      tensor[4] _t2054#1 = <tensor[4]>[_t204C,_t204E,_t2050,_t2052];
      real _t2056#1 = 0.e0;
      real _t2058#1 = 0.e0;
      real _t205A#1 = 0.1e1;
      real _t205C#1 = 0.e0;
      tensor[4] _t205E#1 = <tensor[4]>[_t2056,_t2058,_t205A,_t205C];
      real _t2060#1 = 0.971445146547e-16;
      real _t2062#1 = 0.e0;
      real _t2064#1 = 0.e0;
      real _t2066#1 = 0.1e1;
      tensor[4] _t2068#1 = <tensor[4]>[_t2060,_t2062,_t2064,_t2066];
      tensor[4,4] _t206A#1 = <tensor[4,4]>[_t204A,_t2054,_t205E,_t2068];
      real _t206C#1 = 0.57735026919e0;
      real _t206E#1 = 0.57735026919e0;
      real _t2070#1 = 0.57735026919e0;
      real _t2072#1 = -0.57735026919e0;
      tensor[4] _t2074#1 = <tensor[4]>[_t206C,_t206E,_t2070,_t2072];
      real _t2076#1 = -0.333333333333e0;
      real _t2078#1 = 0.666666666667e0;
      real _t207A#1 = -0.333333333333e0;
      real _t207C#1 = 0.333333333333e0;
      tensor[4] _t207E#1 = <tensor[4]>[_t2076,_t2078,_t207A,_t207C];
      real _t2080#1 = -0.333333333333e0;
      real _t2082#1 = -0.333333333333e0;
      real _t2084#1 = 0.666666666667e0;
      real _t2086#1 = 0.333333333333e0;
      tensor[4] _t2088#1 = <tensor[4]>[_t2080,_t2082,_t2084,_t2086];
      real _t208A#1 = 0.971445146547e-16;
      real _t208C#1 = 0.e0;
      real _t208E#1 = 0.e0;
      real _t2090#1 = 0.1e1;
      tensor[4] _t2092#1 = <tensor[4]>[_t208A,_t208C,_t208E,_t2090];
      tensor[4,4] _t2094#1 = <tensor[4,4]>[_t2074,_t207E,_t2088,_t2092];
      real _t2096#1 = -0.333333333333e0;
      real _t2098#1 = 0.666666666667e0;
      real _t209A#1 = -0.333333333333e0;
      real _t209C#1 = 0.333333333333e0;
      tensor[4] _t209E#1 = <tensor[4]>[_t2096,_t2098,_t209A,_t209C];
      real _t20A0#1 = -0.57735026919e0;
      real _t20A2#1 = -0.57735026919e0;
      real _t20A4#1 = -0.57735026919e0;
      real _t20A6#1 = 0.57735026919e0;
      tensor[4] _t20A8#1 = <tensor[4]>[_t20A0,_t20A2,_t20A4,_t20A6];
      real _t20AA#1 = -0.333333333333e0;
      real _t20AC#1 = -0.333333333333e0;
      real _t20AE#1 = 0.666666666667e0;
      real _t20B0#1 = 0.333333333333e0;
      tensor[4] _t20B2#1 = <tensor[4]>[_t20AA,_t20AC,_t20AE,_t20B0];
      real _t20B4#1 = 0.971445146547e-16;
      real _t20B6#1 = 0.e0;
      real _t20B8#1 = 0.e0;
      real _t20BA#1 = 0.1e1;
      tensor[4] _t20BC#1 = <tensor[4]>[_t20B4,_t20B6,_t20B8,_t20BA];
      tensor[4,4] _t20BE#1 = <tensor[4,4]>[_t209E,_t20A8,_t20B2,_t20BC];
      real _t20C0#1 = -0.333333333333e0;
      real _t20C2#1 = 0.666666666667e0;
      real _t20C4#1 = -0.333333333333e0;
      real _t20C6#1 = 0.333333333333e0;
      tensor[4] _t20C8#1 = <tensor[4]>[_t20C0,_t20C2,_t20C4,_t20C6];
      real _t20CA#1 = -0.333333333333e0;
      real _t20CC#1 = -0.333333333333e0;
      real _t20CE#1 = 0.666666666667e0;
      real _t20D0#1 = 0.333333333333e0;
      tensor[4] _t20D2#1 = <tensor[4]>[_t20CA,_t20CC,_t20CE,_t20D0];
      real _t20D4#1 = 0.57735026919e0;
      real _t20D6#1 = 0.57735026919e0;
      real _t20D8#1 = 0.57735026919e0;
      real _t20DA#1 = -0.57735026919e0;
      tensor[4] _t20DC#1 = <tensor[4]>[_t20D4,_t20D6,_t20D8,_t20DA];
      real _t20DE#1 = 0.971445146547e-16;
      real _t20E0#1 = 0.e0;
      real _t20E2#1 = 0.e0;
      real _t20E4#1 = 0.1e1;
      tensor[4] _t20E6#1 = <tensor[4]>[_t20DE,_t20E0,_t20E2,_t20E4];
      tensor[4,4] _t20E8#1 = <tensor[4,4]>[_t20C8,_t20D2,_t20DC,_t20E6];
      tensor[4,4][4] _t20EA#1 = <tensor[4,4][4]>{_t206A,_t2094,_t20BE,_t20E8};
      real _t20EC#1 = 0.57735026919e0;
      real _t20EE#1 = -0.1e1;
      real _t20F0#1 = -0.1e1;
      real _t20F2#1 = 0.1e1;
      tensor[4] _t20F4#1 = <tensor[4]>[_t20EC,_t20EE,_t20F0,_t20F2];
      real _t20F6#1 = 0.57735026919e0;
      real _t20F8#1 = 0.1e1;
      real _t20FA#1 = 0.e0;
      real _t20FC#1 = 0.e0;
      tensor[4] _t20FE#1 = <tensor[4]>[_t20F6,_t20F8,_t20FA,_t20FC];
      real _t2100#1 = 0.57735026919e0;
      real _t2102#1 = 0.e0;
      real _t2104#1 = 0.1e1;
      real _t2106#1 = 0.e0;
      tensor[4] _t2108#1 = <tensor[4]>[_t2100,_t2102,_t2104,_t2106];
      real _t210A#1 = 0.e0;
      real _t210C#1 = 0.e0;
      real _t210E#1 = 0.e0;
      real _t2110#1 = 0.1e1;
      tensor[4] _t2112#1 = <tensor[4]>[_t210A,_t210C,_t210E,_t2110];
      tensor[4,4] _t2114#1 = <tensor[4,4]>[_t20F4,_t20FE,_t2108,_t2112];
      real _t2116#1 = 0.1e1;
      real _t2118#1 = 0.e0;
      real _t211A#1 = 0.e0;
      real _t211C#1 = 0.e0;
      tensor[4] _t211E#1 = <tensor[4]>[_t2116,_t2118,_t211A,_t211C];
      real _t2120#1 = 0.e0;
      real _t2122#1 = 0.1e1;
      real _t2124#1 = 0.e0;
      real _t2126#1 = 0.e0;
      tensor[4] _t2128#1 = <tensor[4]>[_t2120,_t2122,_t2124,_t2126];
      real _t212A#1 = 0.e0;
      real _t212C#1 = 0.e0;
      real _t212E#1 = 0.1e1;
      real _t2130#1 = 0.e0;
      tensor[4] _t2132#1 = <tensor[4]>[_t212A,_t212C,_t212E,_t2130];
      real _t2134#1 = 0.e0;
      real _t2136#1 = 0.e0;
      real _t2138#1 = 0.e0;
      real _t213A#1 = 0.1e1;
      tensor[4] _t213C#1 = <tensor[4]>[_t2134,_t2136,_t2138,_t213A];
      tensor[4,4] _t213E#1 = <tensor[4,4]>[_t211E,_t2128,_t2132,_t213C];
      real _t2140#1 = 0.e0;
      real _t2142#1 = 0.1e1;
      real _t2144#1 = 0.e0;
      real _t2146#1 = 0.e0;
      tensor[4] _t2148#1 = <tensor[4]>[_t2140,_t2142,_t2144,_t2146];
      real _t214A#1 = -0.1e1;
      real _t214C#1 = 0.e0;
      real _t214E#1 = 0.e0;
      real _t2150#1 = 0.e0;
      tensor[4] _t2152#1 = <tensor[4]>[_t214A,_t214C,_t214E,_t2150];
      real _t2154#1 = 0.e0;
      real _t2156#1 = 0.e0;
      real _t2158#1 = 0.1e1;
      real _t215A#1 = 0.e0;
      tensor[4] _t215C#1 = <tensor[4]>[_t2154,_t2156,_t2158,_t215A];
      real _t215E#1 = 0.e0;
      real _t2160#1 = 0.e0;
      real _t2162#1 = 0.e0;
      real _t2164#1 = 0.1e1;
      tensor[4] _t2166#1 = <tensor[4]>[_t215E,_t2160,_t2162,_t2164];
      tensor[4,4] _t2168#1 = <tensor[4,4]>[_t2148,_t2152,_t215C,_t2166];
      real _t216A#1 = 0.e0;
      real _t216C#1 = 0.1e1;
      real _t216E#1 = 0.e0;
      real _t2170#1 = 0.e0;
      tensor[4] _t2172#1 = <tensor[4]>[_t216A,_t216C,_t216E,_t2170];
      real _t2174#1 = 0.e0;
      real _t2176#1 = 0.e0;
      real _t2178#1 = 0.1e1;
      real _t217A#1 = 0.e0;
      tensor[4] _t217C#1 = <tensor[4]>[_t2174,_t2176,_t2178,_t217A];
      real _t217E#1 = 0.1e1;
      real _t2180#1 = 0.e0;
      real _t2182#1 = 0.e0;
      real _t2184#1 = 0.e0;
      tensor[4] _t2186#1 = <tensor[4]>[_t217E,_t2180,_t2182,_t2184];
      real _t2188#1 = 0.e0;
      real _t218A#1 = 0.e0;
      real _t218C#1 = 0.e0;
      real _t218E#1 = 0.1e1;
      tensor[4] _t2190#1 = <tensor[4]>[_t2188,_t218A,_t218C,_t218E];
      tensor[4,4] _t2192#1 = <tensor[4,4]>[_t2172,_t217C,_t2186,_t2190];
      tensor[4,4][4] _t2194#1 = <tensor[4,4][4]>{_t2114,_t213E,_t2168,_t2192};
      real _t2196#1 = -0.1e1;
      real _t2198#1 = -0.57735026919e0;
      real _t219A#1 = -0.1e1;
      real _t219C#1 = 0.1e1;
      tensor[4] _t219E#1 = <tensor[4]>[_t2196,_t2198,_t219A,_t219C];
      real _t21A0#1 = 0.1e1;
      real _t21A2#1 = -0.57735026919e0;
      real _t21A4#1 = 0.e0;
      real _t21A6#1 = 0.e0;
      tensor[4] _t21A8#1 = <tensor[4]>[_t21A0,_t21A2,_t21A4,_t21A6];
      real _t21AA#1 = 0.e0;
      real _t21AC#1 = -0.57735026919e0;
      real _t21AE#1 = 0.1e1;
      real _t21B0#1 = 0.e0;
      tensor[4] _t21B2#1 = <tensor[4]>[_t21AA,_t21AC,_t21AE,_t21B0];
      real _t21B4#1 = 0.e0;
      real _t21B6#1 = 0.e0;
      real _t21B8#1 = 0.e0;
      real _t21BA#1 = 0.1e1;
      tensor[4] _t21BC#1 = <tensor[4]>[_t21B4,_t21B6,_t21B8,_t21BA];
      tensor[4,4] _t21BE#1 = <tensor[4,4]>[_t219E,_t21A8,_t21B2,_t21BC];
      real _t21C0#1 = 0.e0;
      real _t21C2#1 = -0.1e1;
      real _t21C4#1 = 0.e0;
      real _t21C6#1 = 0.e0;
      tensor[4] _t21C8#1 = <tensor[4]>[_t21C0,_t21C2,_t21C4,_t21C6];
      real _t21CA#1 = 0.1e1;
      real _t21CC#1 = 0.e0;
      real _t21CE#1 = 0.e0;
      real _t21D0#1 = 0.e0;
      tensor[4] _t21D2#1 = <tensor[4]>[_t21CA,_t21CC,_t21CE,_t21D0];
      real _t21D4#1 = 0.e0;
      real _t21D6#1 = 0.e0;
      real _t21D8#1 = 0.1e1;
      real _t21DA#1 = 0.e0;
      tensor[4] _t21DC#1 = <tensor[4]>[_t21D4,_t21D6,_t21D8,_t21DA];
      real _t21DE#1 = 0.e0;
      real _t21E0#1 = 0.e0;
      real _t21E2#1 = 0.e0;
      real _t21E4#1 = 0.1e1;
      tensor[4] _t21E6#1 = <tensor[4]>[_t21DE,_t21E0,_t21E2,_t21E4];
      tensor[4,4] _t21E8#1 = <tensor[4,4]>[_t21C8,_t21D2,_t21DC,_t21E6];
      real _t21EA#1 = 0.1e1;
      real _t21EC#1 = 0.e0;
      real _t21EE#1 = 0.e0;
      real _t21F0#1 = 0.e0;
      tensor[4] _t21F2#1 = <tensor[4]>[_t21EA,_t21EC,_t21EE,_t21F0];
      real _t21F4#1 = 0.e0;
      real _t21F6#1 = 0.1e1;
      real _t21F8#1 = 0.e0;
      real _t21FA#1 = 0.e0;
      tensor[4] _t21FC#1 = <tensor[4]>[_t21F4,_t21F6,_t21F8,_t21FA];
      real _t21FE#1 = 0.e0;
      real _t2200#1 = 0.e0;
      real _t2202#1 = 0.1e1;
      real _t2204#1 = 0.e0;
      tensor[4] _t2206#1 = <tensor[4]>[_t21FE,_t2200,_t2202,_t2204];
      real _t2208#1 = 0.e0;
      real _t220A#1 = 0.e0;
      real _t220C#1 = 0.e0;
      real _t220E#1 = 0.1e1;
      tensor[4] _t2210#1 = <tensor[4]>[_t2208,_t220A,_t220C,_t220E];
      tensor[4,4] _t2212#1 = <tensor[4,4]>[_t21F2,_t21FC,_t2206,_t2210];
      real _t2214#1 = 0.1e1;
      real _t2216#1 = 0.e0;
      real _t2218#1 = 0.e0;
      real _t221A#1 = 0.e0;
      tensor[4] _t221C#1 = <tensor[4]>[_t2214,_t2216,_t2218,_t221A];
      real _t221E#1 = 0.e0;
      real _t2220#1 = 0.e0;
      real _t2222#1 = 0.1e1;
      real _t2224#1 = 0.e0;
      tensor[4] _t2226#1 = <tensor[4]>[_t221E,_t2220,_t2222,_t2224];
      real _t2228#1 = 0.e0;
      real _t222A#1 = -0.1e1;
      real _t222C#1 = 0.e0;
      real _t222E#1 = 0.e0;
      tensor[4] _t2230#1 = <tensor[4]>[_t2228,_t222A,_t222C,_t222E];
      real _t2232#1 = 0.e0;
      real _t2234#1 = 0.e0;
      real _t2236#1 = 0.e0;
      real _t2238#1 = 0.1e1;
      tensor[4] _t223A#1 = <tensor[4]>[_t2232,_t2234,_t2236,_t2238];
      tensor[4,4] _t223C#1 = <tensor[4,4]>[_t221C,_t2226,_t2230,_t223A];
      tensor[4,4][4] _t223E#1 = <tensor[4,4][4]>{_t21BE,_t21E8,_t2212,_t223C};
      real _t2240#1 = -0.1e1;
      real _t2242#1 = -0.1e1;
      real _t2244#1 = 0.57735026919e0;
      real _t2246#1 = 0.1e1;
      tensor[4] _t2248#1 = <tensor[4]>[_t2240,_t2242,_t2244,_t2246];
      real _t224A#1 = 0.1e1;
      real _t224C#1 = 0.e0;
      real _t224E#1 = 0.57735026919e0;
      real _t2250#1 = 0.e0;
      tensor[4] _t2252#1 = <tensor[4]>[_t224A,_t224C,_t224E,_t2250];
      real _t2254#1 = 0.e0;
      real _t2256#1 = 0.1e1;
      real _t2258#1 = 0.57735026919e0;
      real _t225A#1 = 0.e0;
      tensor[4] _t225C#1 = <tensor[4]>[_t2254,_t2256,_t2258,_t225A];
      real _t225E#1 = 0.e0;
      real _t2260#1 = 0.e0;
      real _t2262#1 = 0.e0;
      real _t2264#1 = 0.1e1;
      tensor[4] _t2266#1 = <tensor[4]>[_t225E,_t2260,_t2262,_t2264];
      tensor[4,4] _t2268#1 = <tensor[4,4]>[_t2248,_t2252,_t225C,_t2266];
      real _t226A#1 = 0.e0;
      real _t226C#1 = 0.e0;
      real _t226E#1 = 0.1e1;
      real _t2270#1 = 0.e0;
      tensor[4] _t2272#1 = <tensor[4]>[_t226A,_t226C,_t226E,_t2270];
      real _t2274#1 = 0.1e1;
      real _t2276#1 = 0.e0;
      real _t2278#1 = 0.e0;
      real _t227A#1 = 0.e0;
      tensor[4] _t227C#1 = <tensor[4]>[_t2274,_t2276,_t2278,_t227A];
      real _t227E#1 = 0.e0;
      real _t2280#1 = 0.1e1;
      real _t2282#1 = 0.e0;
      real _t2284#1 = 0.e0;
      tensor[4] _t2286#1 = <tensor[4]>[_t227E,_t2280,_t2282,_t2284];
      real _t2288#1 = 0.e0;
      real _t228A#1 = 0.e0;
      real _t228C#1 = 0.e0;
      real _t228E#1 = 0.1e1;
      tensor[4] _t2290#1 = <tensor[4]>[_t2288,_t228A,_t228C,_t228E];
      tensor[4,4] _t2292#1 = <tensor[4,4]>[_t2272,_t227C,_t2286,_t2290];
      real _t2294#1 = 0.1e1;
      real _t2296#1 = 0.e0;
      real _t2298#1 = 0.e0;
      real _t229A#1 = 0.e0;
      tensor[4] _t229C#1 = <tensor[4]>[_t2294,_t2296,_t2298,_t229A];
      real _t229E#1 = 0.e0;
      real _t22A0#1 = 0.e0;
      real _t22A2#1 = -0.1e1;
      real _t22A4#1 = 0.e0;
      tensor[4] _t22A6#1 = <tensor[4]>[_t229E,_t22A0,_t22A2,_t22A4];
      real _t22A8#1 = 0.e0;
      real _t22AA#1 = 0.1e1;
      real _t22AC#1 = 0.e0;
      real _t22AE#1 = 0.e0;
      tensor[4] _t22B0#1 = <tensor[4]>[_t22A8,_t22AA,_t22AC,_t22AE];
      real _t22B2#1 = 0.e0;
      real _t22B4#1 = 0.e0;
      real _t22B6#1 = 0.e0;
      real _t22B8#1 = 0.1e1;
      tensor[4] _t22BA#1 = <tensor[4]>[_t22B2,_t22B4,_t22B6,_t22B8];
      tensor[4,4] _t22BC#1 = <tensor[4,4]>[_t229C,_t22A6,_t22B0,_t22BA];
      real _t22BE#1 = 0.1e1;
      real _t22C0#1 = 0.e0;
      real _t22C2#1 = 0.e0;
      real _t22C4#1 = 0.e0;
      tensor[4] _t22C6#1 = <tensor[4]>[_t22BE,_t22C0,_t22C2,_t22C4];
      real _t22C8#1 = 0.e0;
      real _t22CA#1 = 0.1e1;
      real _t22CC#1 = 0.e0;
      real _t22CE#1 = 0.e0;
      tensor[4] _t22D0#1 = <tensor[4]>[_t22C8,_t22CA,_t22CC,_t22CE];
      real _t22D2#1 = 0.e0;
      real _t22D4#1 = 0.e0;
      real _t22D6#1 = 0.1e1;
      real _t22D8#1 = 0.e0;
      tensor[4] _t22DA#1 = <tensor[4]>[_t22D2,_t22D4,_t22D6,_t22D8];
      real _t22DC#1 = 0.e0;
      real _t22DE#1 = 0.e0;
      real _t22E0#1 = 0.e0;
      real _t22E2#1 = 0.1e1;
      tensor[4] _t22E4#1 = <tensor[4]>[_t22DC,_t22DE,_t22E0,_t22E2];
      tensor[4,4] _t22E6#1 = <tensor[4,4]>[_t22C6,_t22D0,_t22DA,_t22E4];
      tensor[4,4][4] _t22E8#1 = <tensor[4,4][4]>{_t2268,_t2292,_t22BC,_t22E6};
      tensor[4,4][4][4] _t22EA#1 = <tensor[4,4][4][4]>{_t20EA,_t2194,_t223E,_t22E8};
      real _t22EC#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t22EE#1 = FloorToInt(_t22EC);
      tensor[4,4][4] _t22F0#1 = Subscript<tensor[4,4][4][4]>(_t22EA,_t22EE);
      real _t22F2#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t22F4#1 = FloorToInt(_t22F2);
      int[2] _t22F6#1 = nextCell417B2 (_t22F4,_t1AD6,_t1AD4);
      int _t22F8#1 = 1;
      int _t22FA#1 = Subscript<int[2]>(_t22F6,_t22F8);
      tensor[4,4] _t22FC#1 = Subscript<tensor[4,4][4]>(_t22F0,_t22FA);
      real _t22FE#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t2300#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t22FE,deltaP17F2);
      tensor[3] _t2302#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2300,_t1AD8);
      real _t2304#1 = TensorIndex<tensor[3],[0]>(_t2302);
      real _t2306#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t2308#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2306,deltaP17F2);
      tensor[3] _t230A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2308,_t1AD8);
      real _t230C#1 = TensorIndex<tensor[3],[1]>(_t230A);
      real _t230E#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t2310#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t230E,deltaP17F2);
      tensor[3] _t2312#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2310,_t1AD8);
      real _t2314#1 = TensorIndex<tensor[3],[2]>(_t2312);
      real _t2316#1 = 0.1e1;
      tensor[4] _t2318#1 = <tensor[4]>[_t2304,_t230C,_t2314,_t2316];
      tensor[4] _t231A#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t22FC,_t2318);
      real _t231C#1 = TensorIndex<tensor[4],[0]>(_t231A);
      real _t231E#1 = 0.1e1;
      real _t2320#1 = 0.e0;
      real _t2322#1 = 0.e0;
      real _t2324#1 = 0.e0;
      tensor[4] _t2326#1 = <tensor[4]>[_t231E,_t2320,_t2322,_t2324];
      real _t2328#1 = 0.e0;
      real _t232A#1 = 0.1e1;
      real _t232C#1 = 0.e0;
      real _t232E#1 = 0.e0;
      tensor[4] _t2330#1 = <tensor[4]>[_t2328,_t232A,_t232C,_t232E];
      real _t2332#1 = 0.e0;
      real _t2334#1 = 0.e0;
      real _t2336#1 = 0.1e1;
      real _t2338#1 = 0.e0;
      tensor[4] _t233A#1 = <tensor[4]>[_t2332,_t2334,_t2336,_t2338];
      real _t233C#1 = 0.971445146547e-16;
      real _t233E#1 = 0.e0;
      real _t2340#1 = 0.e0;
      real _t2342#1 = 0.1e1;
      tensor[4] _t2344#1 = <tensor[4]>[_t233C,_t233E,_t2340,_t2342];
      tensor[4,4] _t2346#1 = <tensor[4,4]>[_t2326,_t2330,_t233A,_t2344];
      real _t2348#1 = 0.57735026919e0;
      real _t234A#1 = 0.57735026919e0;
      real _t234C#1 = 0.57735026919e0;
      real _t234E#1 = -0.57735026919e0;
      tensor[4] _t2350#1 = <tensor[4]>[_t2348,_t234A,_t234C,_t234E];
      real _t2352#1 = -0.333333333333e0;
      real _t2354#1 = 0.666666666667e0;
      real _t2356#1 = -0.333333333333e0;
      real _t2358#1 = 0.333333333333e0;
      tensor[4] _t235A#1 = <tensor[4]>[_t2352,_t2354,_t2356,_t2358];
      real _t235C#1 = -0.333333333333e0;
      real _t235E#1 = -0.333333333333e0;
      real _t2360#1 = 0.666666666667e0;
      real _t2362#1 = 0.333333333333e0;
      tensor[4] _t2364#1 = <tensor[4]>[_t235C,_t235E,_t2360,_t2362];
      real _t2366#1 = 0.971445146547e-16;
      real _t2368#1 = 0.e0;
      real _t236A#1 = 0.e0;
      real _t236C#1 = 0.1e1;
      tensor[4] _t236E#1 = <tensor[4]>[_t2366,_t2368,_t236A,_t236C];
      tensor[4,4] _t2370#1 = <tensor[4,4]>[_t2350,_t235A,_t2364,_t236E];
      real _t2372#1 = -0.333333333333e0;
      real _t2374#1 = 0.666666666667e0;
      real _t2376#1 = -0.333333333333e0;
      real _t2378#1 = 0.333333333333e0;
      tensor[4] _t237A#1 = <tensor[4]>[_t2372,_t2374,_t2376,_t2378];
      real _t237C#1 = -0.57735026919e0;
      real _t237E#1 = -0.57735026919e0;
      real _t2380#1 = -0.57735026919e0;
      real _t2382#1 = 0.57735026919e0;
      tensor[4] _t2384#1 = <tensor[4]>[_t237C,_t237E,_t2380,_t2382];
      real _t2386#1 = -0.333333333333e0;
      real _t2388#1 = -0.333333333333e0;
      real _t238A#1 = 0.666666666667e0;
      real _t238C#1 = 0.333333333333e0;
      tensor[4] _t238E#1 = <tensor[4]>[_t2386,_t2388,_t238A,_t238C];
      real _t2390#1 = 0.971445146547e-16;
      real _t2392#1 = 0.e0;
      real _t2394#1 = 0.e0;
      real _t2396#1 = 0.1e1;
      tensor[4] _t2398#1 = <tensor[4]>[_t2390,_t2392,_t2394,_t2396];
      tensor[4,4] _t239A#1 = <tensor[4,4]>[_t237A,_t2384,_t238E,_t2398];
      real _t239C#1 = -0.333333333333e0;
      real _t239E#1 = 0.666666666667e0;
      real _t23A0#1 = -0.333333333333e0;
      real _t23A2#1 = 0.333333333333e0;
      tensor[4] _t23A4#1 = <tensor[4]>[_t239C,_t239E,_t23A0,_t23A2];
      real _t23A6#1 = -0.333333333333e0;
      real _t23A8#1 = -0.333333333333e0;
      real _t23AA#1 = 0.666666666667e0;
      real _t23AC#1 = 0.333333333333e0;
      tensor[4] _t23AE#1 = <tensor[4]>[_t23A6,_t23A8,_t23AA,_t23AC];
      real _t23B0#1 = 0.57735026919e0;
      real _t23B2#1 = 0.57735026919e0;
      real _t23B4#1 = 0.57735026919e0;
      real _t23B6#1 = -0.57735026919e0;
      tensor[4] _t23B8#1 = <tensor[4]>[_t23B0,_t23B2,_t23B4,_t23B6];
      real _t23BA#1 = 0.971445146547e-16;
      real _t23BC#1 = 0.e0;
      real _t23BE#1 = 0.e0;
      real _t23C0#1 = 0.1e1;
      tensor[4] _t23C2#1 = <tensor[4]>[_t23BA,_t23BC,_t23BE,_t23C0];
      tensor[4,4] _t23C4#1 = <tensor[4,4]>[_t23A4,_t23AE,_t23B8,_t23C2];
      tensor[4,4][4] _t23C6#1 = <tensor[4,4][4]>{_t2346,_t2370,_t239A,_t23C4};
      real _t23C8#1 = 0.57735026919e0;
      real _t23CA#1 = -0.1e1;
      real _t23CC#1 = -0.1e1;
      real _t23CE#1 = 0.1e1;
      tensor[4] _t23D0#1 = <tensor[4]>[_t23C8,_t23CA,_t23CC,_t23CE];
      real _t23D2#1 = 0.57735026919e0;
      real _t23D4#1 = 0.1e1;
      real _t23D6#1 = 0.e0;
      real _t23D8#1 = 0.e0;
      tensor[4] _t23DA#1 = <tensor[4]>[_t23D2,_t23D4,_t23D6,_t23D8];
      real _t23DC#1 = 0.57735026919e0;
      real _t23DE#1 = 0.e0;
      real _t23E0#1 = 0.1e1;
      real _t23E2#1 = 0.e0;
      tensor[4] _t23E4#1 = <tensor[4]>[_t23DC,_t23DE,_t23E0,_t23E2];
      real _t23E6#1 = 0.e0;
      real _t23E8#1 = 0.e0;
      real _t23EA#1 = 0.e0;
      real _t23EC#1 = 0.1e1;
      tensor[4] _t23EE#1 = <tensor[4]>[_t23E6,_t23E8,_t23EA,_t23EC];
      tensor[4,4] _t23F0#1 = <tensor[4,4]>[_t23D0,_t23DA,_t23E4,_t23EE];
      real _t23F2#1 = 0.1e1;
      real _t23F4#1 = 0.e0;
      real _t23F6#1 = 0.e0;
      real _t23F8#1 = 0.e0;
      tensor[4] _t23FA#1 = <tensor[4]>[_t23F2,_t23F4,_t23F6,_t23F8];
      real _t23FC#1 = 0.e0;
      real _t23FE#1 = 0.1e1;
      real _t2400#1 = 0.e0;
      real _t2402#1 = 0.e0;
      tensor[4] _t2404#1 = <tensor[4]>[_t23FC,_t23FE,_t2400,_t2402];
      real _t2406#1 = 0.e0;
      real _t2408#1 = 0.e0;
      real _t240A#1 = 0.1e1;
      real _t240C#1 = 0.e0;
      tensor[4] _t240E#1 = <tensor[4]>[_t2406,_t2408,_t240A,_t240C];
      real _t2410#1 = 0.e0;
      real _t2412#1 = 0.e0;
      real _t2414#1 = 0.e0;
      real _t2416#1 = 0.1e1;
      tensor[4] _t2418#1 = <tensor[4]>[_t2410,_t2412,_t2414,_t2416];
      tensor[4,4] _t241A#1 = <tensor[4,4]>[_t23FA,_t2404,_t240E,_t2418];
      real _t241C#1 = 0.e0;
      real _t241E#1 = 0.1e1;
      real _t2420#1 = 0.e0;
      real _t2422#1 = 0.e0;
      tensor[4] _t2424#1 = <tensor[4]>[_t241C,_t241E,_t2420,_t2422];
      real _t2426#1 = -0.1e1;
      real _t2428#1 = 0.e0;
      real _t242A#1 = 0.e0;
      real _t242C#1 = 0.e0;
      tensor[4] _t242E#1 = <tensor[4]>[_t2426,_t2428,_t242A,_t242C];
      real _t2430#1 = 0.e0;
      real _t2432#1 = 0.e0;
      real _t2434#1 = 0.1e1;
      real _t2436#1 = 0.e0;
      tensor[4] _t2438#1 = <tensor[4]>[_t2430,_t2432,_t2434,_t2436];
      real _t243A#1 = 0.e0;
      real _t243C#1 = 0.e0;
      real _t243E#1 = 0.e0;
      real _t2440#1 = 0.1e1;
      tensor[4] _t2442#1 = <tensor[4]>[_t243A,_t243C,_t243E,_t2440];
      tensor[4,4] _t2444#1 = <tensor[4,4]>[_t2424,_t242E,_t2438,_t2442];
      real _t2446#1 = 0.e0;
      real _t2448#1 = 0.1e1;
      real _t244A#1 = 0.e0;
      real _t244C#1 = 0.e0;
      tensor[4] _t244E#1 = <tensor[4]>[_t2446,_t2448,_t244A,_t244C];
      real _t2450#1 = 0.e0;
      real _t2452#1 = 0.e0;
      real _t2454#1 = 0.1e1;
      real _t2456#1 = 0.e0;
      tensor[4] _t2458#1 = <tensor[4]>[_t2450,_t2452,_t2454,_t2456];
      real _t245A#1 = 0.1e1;
      real _t245C#1 = 0.e0;
      real _t245E#1 = 0.e0;
      real _t2460#1 = 0.e0;
      tensor[4] _t2462#1 = <tensor[4]>[_t245A,_t245C,_t245E,_t2460];
      real _t2464#1 = 0.e0;
      real _t2466#1 = 0.e0;
      real _t2468#1 = 0.e0;
      real _t246A#1 = 0.1e1;
      tensor[4] _t246C#1 = <tensor[4]>[_t2464,_t2466,_t2468,_t246A];
      tensor[4,4] _t246E#1 = <tensor[4,4]>[_t244E,_t2458,_t2462,_t246C];
      tensor[4,4][4] _t2470#1 = <tensor[4,4][4]>{_t23F0,_t241A,_t2444,_t246E};
      real _t2472#1 = -0.1e1;
      real _t2474#1 = -0.57735026919e0;
      real _t2476#1 = -0.1e1;
      real _t2478#1 = 0.1e1;
      tensor[4] _t247A#1 = <tensor[4]>[_t2472,_t2474,_t2476,_t2478];
      real _t247C#1 = 0.1e1;
      real _t247E#1 = -0.57735026919e0;
      real _t2480#1 = 0.e0;
      real _t2482#1 = 0.e0;
      tensor[4] _t2484#1 = <tensor[4]>[_t247C,_t247E,_t2480,_t2482];
      real _t2486#1 = 0.e0;
      real _t2488#1 = -0.57735026919e0;
      real _t248A#1 = 0.1e1;
      real _t248C#1 = 0.e0;
      tensor[4] _t248E#1 = <tensor[4]>[_t2486,_t2488,_t248A,_t248C];
      real _t2490#1 = 0.e0;
      real _t2492#1 = 0.e0;
      real _t2494#1 = 0.e0;
      real _t2496#1 = 0.1e1;
      tensor[4] _t2498#1 = <tensor[4]>[_t2490,_t2492,_t2494,_t2496];
      tensor[4,4] _t249A#1 = <tensor[4,4]>[_t247A,_t2484,_t248E,_t2498];
      real _t249C#1 = 0.e0;
      real _t249E#1 = -0.1e1;
      real _t24A0#1 = 0.e0;
      real _t24A2#1 = 0.e0;
      tensor[4] _t24A4#1 = <tensor[4]>[_t249C,_t249E,_t24A0,_t24A2];
      real _t24A6#1 = 0.1e1;
      real _t24A8#1 = 0.e0;
      real _t24AA#1 = 0.e0;
      real _t24AC#1 = 0.e0;
      tensor[4] _t24AE#1 = <tensor[4]>[_t24A6,_t24A8,_t24AA,_t24AC];
      real _t24B0#1 = 0.e0;
      real _t24B2#1 = 0.e0;
      real _t24B4#1 = 0.1e1;
      real _t24B6#1 = 0.e0;
      tensor[4] _t24B8#1 = <tensor[4]>[_t24B0,_t24B2,_t24B4,_t24B6];
      real _t24BA#1 = 0.e0;
      real _t24BC#1 = 0.e0;
      real _t24BE#1 = 0.e0;
      real _t24C0#1 = 0.1e1;
      tensor[4] _t24C2#1 = <tensor[4]>[_t24BA,_t24BC,_t24BE,_t24C0];
      tensor[4,4] _t24C4#1 = <tensor[4,4]>[_t24A4,_t24AE,_t24B8,_t24C2];
      real _t24C6#1 = 0.1e1;
      real _t24C8#1 = 0.e0;
      real _t24CA#1 = 0.e0;
      real _t24CC#1 = 0.e0;
      tensor[4] _t24CE#1 = <tensor[4]>[_t24C6,_t24C8,_t24CA,_t24CC];
      real _t24D0#1 = 0.e0;
      real _t24D2#1 = 0.1e1;
      real _t24D4#1 = 0.e0;
      real _t24D6#1 = 0.e0;
      tensor[4] _t24D8#1 = <tensor[4]>[_t24D0,_t24D2,_t24D4,_t24D6];
      real _t24DA#1 = 0.e0;
      real _t24DC#1 = 0.e0;
      real _t24DE#1 = 0.1e1;
      real _t24E0#1 = 0.e0;
      tensor[4] _t24E2#1 = <tensor[4]>[_t24DA,_t24DC,_t24DE,_t24E0];
      real _t24E4#1 = 0.e0;
      real _t24E6#1 = 0.e0;
      real _t24E8#1 = 0.e0;
      real _t24EA#1 = 0.1e1;
      tensor[4] _t24EC#1 = <tensor[4]>[_t24E4,_t24E6,_t24E8,_t24EA];
      tensor[4,4] _t24EE#1 = <tensor[4,4]>[_t24CE,_t24D8,_t24E2,_t24EC];
      real _t24F0#1 = 0.1e1;
      real _t24F2#1 = 0.e0;
      real _t24F4#1 = 0.e0;
      real _t24F6#1 = 0.e0;
      tensor[4] _t24F8#1 = <tensor[4]>[_t24F0,_t24F2,_t24F4,_t24F6];
      real _t24FA#1 = 0.e0;
      real _t24FC#1 = 0.e0;
      real _t24FE#1 = 0.1e1;
      real _t2500#1 = 0.e0;
      tensor[4] _t2502#1 = <tensor[4]>[_t24FA,_t24FC,_t24FE,_t2500];
      real _t2504#1 = 0.e0;
      real _t2506#1 = -0.1e1;
      real _t2508#1 = 0.e0;
      real _t250A#1 = 0.e0;
      tensor[4] _t250C#1 = <tensor[4]>[_t2504,_t2506,_t2508,_t250A];
      real _t250E#1 = 0.e0;
      real _t2510#1 = 0.e0;
      real _t2512#1 = 0.e0;
      real _t2514#1 = 0.1e1;
      tensor[4] _t2516#1 = <tensor[4]>[_t250E,_t2510,_t2512,_t2514];
      tensor[4,4] _t2518#1 = <tensor[4,4]>[_t24F8,_t2502,_t250C,_t2516];
      tensor[4,4][4] _t251A#1 = <tensor[4,4][4]>{_t249A,_t24C4,_t24EE,_t2518};
      real _t251C#1 = -0.1e1;
      real _t251E#1 = -0.1e1;
      real _t2520#1 = 0.57735026919e0;
      real _t2522#1 = 0.1e1;
      tensor[4] _t2524#1 = <tensor[4]>[_t251C,_t251E,_t2520,_t2522];
      real _t2526#1 = 0.1e1;
      real _t2528#1 = 0.e0;
      real _t252A#1 = 0.57735026919e0;
      real _t252C#1 = 0.e0;
      tensor[4] _t252E#1 = <tensor[4]>[_t2526,_t2528,_t252A,_t252C];
      real _t2530#1 = 0.e0;
      real _t2532#1 = 0.1e1;
      real _t2534#1 = 0.57735026919e0;
      real _t2536#1 = 0.e0;
      tensor[4] _t2538#1 = <tensor[4]>[_t2530,_t2532,_t2534,_t2536];
      real _t253A#1 = 0.e0;
      real _t253C#1 = 0.e0;
      real _t253E#1 = 0.e0;
      real _t2540#1 = 0.1e1;
      tensor[4] _t2542#1 = <tensor[4]>[_t253A,_t253C,_t253E,_t2540];
      tensor[4,4] _t2544#1 = <tensor[4,4]>[_t2524,_t252E,_t2538,_t2542];
      real _t2546#1 = 0.e0;
      real _t2548#1 = 0.e0;
      real _t254A#1 = 0.1e1;
      real _t254C#1 = 0.e0;
      tensor[4] _t254E#1 = <tensor[4]>[_t2546,_t2548,_t254A,_t254C];
      real _t2550#1 = 0.1e1;
      real _t2552#1 = 0.e0;
      real _t2554#1 = 0.e0;
      real _t2556#1 = 0.e0;
      tensor[4] _t2558#1 = <tensor[4]>[_t2550,_t2552,_t2554,_t2556];
      real _t255A#1 = 0.e0;
      real _t255C#1 = 0.1e1;
      real _t255E#1 = 0.e0;
      real _t2560#1 = 0.e0;
      tensor[4] _t2562#1 = <tensor[4]>[_t255A,_t255C,_t255E,_t2560];
      real _t2564#1 = 0.e0;
      real _t2566#1 = 0.e0;
      real _t2568#1 = 0.e0;
      real _t256A#1 = 0.1e1;
      tensor[4] _t256C#1 = <tensor[4]>[_t2564,_t2566,_t2568,_t256A];
      tensor[4,4] _t256E#1 = <tensor[4,4]>[_t254E,_t2558,_t2562,_t256C];
      real _t2570#1 = 0.1e1;
      real _t2572#1 = 0.e0;
      real _t2574#1 = 0.e0;
      real _t2576#1 = 0.e0;
      tensor[4] _t2578#1 = <tensor[4]>[_t2570,_t2572,_t2574,_t2576];
      real _t257A#1 = 0.e0;
      real _t257C#1 = 0.e0;
      real _t257E#1 = -0.1e1;
      real _t2580#1 = 0.e0;
      tensor[4] _t2582#1 = <tensor[4]>[_t257A,_t257C,_t257E,_t2580];
      real _t2584#1 = 0.e0;
      real _t2586#1 = 0.1e1;
      real _t2588#1 = 0.e0;
      real _t258A#1 = 0.e0;
      tensor[4] _t258C#1 = <tensor[4]>[_t2584,_t2586,_t2588,_t258A];
      real _t258E#1 = 0.e0;
      real _t2590#1 = 0.e0;
      real _t2592#1 = 0.e0;
      real _t2594#1 = 0.1e1;
      tensor[4] _t2596#1 = <tensor[4]>[_t258E,_t2590,_t2592,_t2594];
      tensor[4,4] _t2598#1 = <tensor[4,4]>[_t2578,_t2582,_t258C,_t2596];
      real _t259A#1 = 0.1e1;
      real _t259C#1 = 0.e0;
      real _t259E#1 = 0.e0;
      real _t25A0#1 = 0.e0;
      tensor[4] _t25A2#1 = <tensor[4]>[_t259A,_t259C,_t259E,_t25A0];
      real _t25A4#1 = 0.e0;
      real _t25A6#1 = 0.1e1;
      real _t25A8#1 = 0.e0;
      real _t25AA#1 = 0.e0;
      tensor[4] _t25AC#1 = <tensor[4]>[_t25A4,_t25A6,_t25A8,_t25AA];
      real _t25AE#1 = 0.e0;
      real _t25B0#1 = 0.e0;
      real _t25B2#1 = 0.1e1;
      real _t25B4#1 = 0.e0;
      tensor[4] _t25B6#1 = <tensor[4]>[_t25AE,_t25B0,_t25B2,_t25B4];
      real _t25B8#1 = 0.e0;
      real _t25BA#1 = 0.e0;
      real _t25BC#1 = 0.e0;
      real _t25BE#1 = 0.1e1;
      tensor[4] _t25C0#1 = <tensor[4]>[_t25B8,_t25BA,_t25BC,_t25BE];
      tensor[4,4] _t25C2#1 = <tensor[4,4]>[_t25A2,_t25AC,_t25B6,_t25C0];
      tensor[4,4][4] _t25C4#1 = <tensor[4,4][4]>{_t2544,_t256E,_t2598,_t25C2};
      tensor[4,4][4][4] _t25C6#1 = <tensor[4,4][4][4]>{_t23C6,_t2470,_t251A,_t25C4};
      real _t25C8#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t25CA#1 = FloorToInt(_t25C8);
      tensor[4,4][4] _t25CC#1 = Subscript<tensor[4,4][4][4]>(_t25C6,_t25CA);
      real _t25CE#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t25D0#1 = FloorToInt(_t25CE);
      int[2] _t25D2#1 = nextCell417B2 (_t25D0,_t1AD6,_t1AD4);
      int _t25D4#1 = 1;
      int _t25D6#1 = Subscript<int[2]>(_t25D2,_t25D4);
      tensor[4,4] _t25D8#1 = Subscript<tensor[4,4][4]>(_t25CC,_t25D6);
      real _t25DA#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t25DC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t25DA,deltaP17F2);
      tensor[3] _t25DE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t25DC,_t1AD8);
      real _t25E0#1 = TensorIndex<tensor[3],[0]>(_t25DE);
      real _t25E2#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t25E4#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t25E2,deltaP17F2);
      tensor[3] _t25E6#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t25E4,_t1AD8);
      real _t25E8#1 = TensorIndex<tensor[3],[1]>(_t25E6);
      real _t25EA#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t25EC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t25EA,deltaP17F2);
      tensor[3] _t25EE#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t25EC,_t1AD8);
      real _t25F0#1 = TensorIndex<tensor[3],[2]>(_t25EE);
      real _t25F2#1 = 0.1e1;
      tensor[4] _t25F4#1 = <tensor[4]>[_t25E0,_t25E8,_t25F0,_t25F2];
      tensor[4] _t25F6#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t25D8,_t25F4);
      real _t25F8#1 = TensorIndex<tensor[4],[1]>(_t25F6);
      real _t25FA#1 = 0.1e1;
      real _t25FC#1 = 0.e0;
      real _t25FE#1 = 0.e0;
      real _t2600#1 = 0.e0;
      tensor[4] _t2602#1 = <tensor[4]>[_t25FA,_t25FC,_t25FE,_t2600];
      real _t2604#1 = 0.e0;
      real _t2606#1 = 0.1e1;
      real _t2608#1 = 0.e0;
      real _t260A#1 = 0.e0;
      tensor[4] _t260C#1 = <tensor[4]>[_t2604,_t2606,_t2608,_t260A];
      real _t260E#1 = 0.e0;
      real _t2610#1 = 0.e0;
      real _t2612#1 = 0.1e1;
      real _t2614#1 = 0.e0;
      tensor[4] _t2616#1 = <tensor[4]>[_t260E,_t2610,_t2612,_t2614];
      real _t2618#1 = 0.971445146547e-16;
      real _t261A#1 = 0.e0;
      real _t261C#1 = 0.e0;
      real _t261E#1 = 0.1e1;
      tensor[4] _t2620#1 = <tensor[4]>[_t2618,_t261A,_t261C,_t261E];
      tensor[4,4] _t2622#1 = <tensor[4,4]>[_t2602,_t260C,_t2616,_t2620];
      real _t2624#1 = 0.57735026919e0;
      real _t2626#1 = 0.57735026919e0;
      real _t2628#1 = 0.57735026919e0;
      real _t262A#1 = -0.57735026919e0;
      tensor[4] _t262C#1 = <tensor[4]>[_t2624,_t2626,_t2628,_t262A];
      real _t262E#1 = -0.333333333333e0;
      real _t2630#1 = 0.666666666667e0;
      real _t2632#1 = -0.333333333333e0;
      real _t2634#1 = 0.333333333333e0;
      tensor[4] _t2636#1 = <tensor[4]>[_t262E,_t2630,_t2632,_t2634];
      real _t2638#1 = -0.333333333333e0;
      real _t263A#1 = -0.333333333333e0;
      real _t263C#1 = 0.666666666667e0;
      real _t263E#1 = 0.333333333333e0;
      tensor[4] _t2640#1 = <tensor[4]>[_t2638,_t263A,_t263C,_t263E];
      real _t2642#1 = 0.971445146547e-16;
      real _t2644#1 = 0.e0;
      real _t2646#1 = 0.e0;
      real _t2648#1 = 0.1e1;
      tensor[4] _t264A#1 = <tensor[4]>[_t2642,_t2644,_t2646,_t2648];
      tensor[4,4] _t264C#1 = <tensor[4,4]>[_t262C,_t2636,_t2640,_t264A];
      real _t264E#1 = -0.333333333333e0;
      real _t2650#1 = 0.666666666667e0;
      real _t2652#1 = -0.333333333333e0;
      real _t2654#1 = 0.333333333333e0;
      tensor[4] _t2656#1 = <tensor[4]>[_t264E,_t2650,_t2652,_t2654];
      real _t2658#1 = -0.57735026919e0;
      real _t265A#1 = -0.57735026919e0;
      real _t265C#1 = -0.57735026919e0;
      real _t265E#1 = 0.57735026919e0;
      tensor[4] _t2660#1 = <tensor[4]>[_t2658,_t265A,_t265C,_t265E];
      real _t2662#1 = -0.333333333333e0;
      real _t2664#1 = -0.333333333333e0;
      real _t2666#1 = 0.666666666667e0;
      real _t2668#1 = 0.333333333333e0;
      tensor[4] _t266A#1 = <tensor[4]>[_t2662,_t2664,_t2666,_t2668];
      real _t266C#1 = 0.971445146547e-16;
      real _t266E#1 = 0.e0;
      real _t2670#1 = 0.e0;
      real _t2672#1 = 0.1e1;
      tensor[4] _t2674#1 = <tensor[4]>[_t266C,_t266E,_t2670,_t2672];
      tensor[4,4] _t2676#1 = <tensor[4,4]>[_t2656,_t2660,_t266A,_t2674];
      real _t2678#1 = -0.333333333333e0;
      real _t267A#1 = 0.666666666667e0;
      real _t267C#1 = -0.333333333333e0;
      real _t267E#1 = 0.333333333333e0;
      tensor[4] _t2680#1 = <tensor[4]>[_t2678,_t267A,_t267C,_t267E];
      real _t2682#1 = -0.333333333333e0;
      real _t2684#1 = -0.333333333333e0;
      real _t2686#1 = 0.666666666667e0;
      real _t2688#1 = 0.333333333333e0;
      tensor[4] _t268A#1 = <tensor[4]>[_t2682,_t2684,_t2686,_t2688];
      real _t268C#1 = 0.57735026919e0;
      real _t268E#1 = 0.57735026919e0;
      real _t2690#1 = 0.57735026919e0;
      real _t2692#1 = -0.57735026919e0;
      tensor[4] _t2694#1 = <tensor[4]>[_t268C,_t268E,_t2690,_t2692];
      real _t2696#1 = 0.971445146547e-16;
      real _t2698#1 = 0.e0;
      real _t269A#1 = 0.e0;
      real _t269C#1 = 0.1e1;
      tensor[4] _t269E#1 = <tensor[4]>[_t2696,_t2698,_t269A,_t269C];
      tensor[4,4] _t26A0#1 = <tensor[4,4]>[_t2680,_t268A,_t2694,_t269E];
      tensor[4,4][4] _t26A2#1 = <tensor[4,4][4]>{_t2622,_t264C,_t2676,_t26A0};
      real _t26A4#1 = 0.57735026919e0;
      real _t26A6#1 = -0.1e1;
      real _t26A8#1 = -0.1e1;
      real _t26AA#1 = 0.1e1;
      tensor[4] _t26AC#1 = <tensor[4]>[_t26A4,_t26A6,_t26A8,_t26AA];
      real _t26AE#1 = 0.57735026919e0;
      real _t26B0#1 = 0.1e1;
      real _t26B2#1 = 0.e0;
      real _t26B4#1 = 0.e0;
      tensor[4] _t26B6#1 = <tensor[4]>[_t26AE,_t26B0,_t26B2,_t26B4];
      real _t26B8#1 = 0.57735026919e0;
      real _t26BA#1 = 0.e0;
      real _t26BC#1 = 0.1e1;
      real _t26BE#1 = 0.e0;
      tensor[4] _t26C0#1 = <tensor[4]>[_t26B8,_t26BA,_t26BC,_t26BE];
      real _t26C2#1 = 0.e0;
      real _t26C4#1 = 0.e0;
      real _t26C6#1 = 0.e0;
      real _t26C8#1 = 0.1e1;
      tensor[4] _t26CA#1 = <tensor[4]>[_t26C2,_t26C4,_t26C6,_t26C8];
      tensor[4,4] _t26CC#1 = <tensor[4,4]>[_t26AC,_t26B6,_t26C0,_t26CA];
      real _t26CE#1 = 0.1e1;
      real _t26D0#1 = 0.e0;
      real _t26D2#1 = 0.e0;
      real _t26D4#1 = 0.e0;
      tensor[4] _t26D6#1 = <tensor[4]>[_t26CE,_t26D0,_t26D2,_t26D4];
      real _t26D8#1 = 0.e0;
      real _t26DA#1 = 0.1e1;
      real _t26DC#1 = 0.e0;
      real _t26DE#1 = 0.e0;
      tensor[4] _t26E0#1 = <tensor[4]>[_t26D8,_t26DA,_t26DC,_t26DE];
      real _t26E2#1 = 0.e0;
      real _t26E4#1 = 0.e0;
      real _t26E6#1 = 0.1e1;
      real _t26E8#1 = 0.e0;
      tensor[4] _t26EA#1 = <tensor[4]>[_t26E2,_t26E4,_t26E6,_t26E8];
      real _t26EC#1 = 0.e0;
      real _t26EE#1 = 0.e0;
      real _t26F0#1 = 0.e0;
      real _t26F2#1 = 0.1e1;
      tensor[4] _t26F4#1 = <tensor[4]>[_t26EC,_t26EE,_t26F0,_t26F2];
      tensor[4,4] _t26F6#1 = <tensor[4,4]>[_t26D6,_t26E0,_t26EA,_t26F4];
      real _t26F8#1 = 0.e0;
      real _t26FA#1 = 0.1e1;
      real _t26FC#1 = 0.e0;
      real _t26FE#1 = 0.e0;
      tensor[4] _t2700#1 = <tensor[4]>[_t26F8,_t26FA,_t26FC,_t26FE];
      real _t2702#1 = -0.1e1;
      real _t2704#1 = 0.e0;
      real _t2706#1 = 0.e0;
      real _t2708#1 = 0.e0;
      tensor[4] _t270A#1 = <tensor[4]>[_t2702,_t2704,_t2706,_t2708];
      real _t270C#1 = 0.e0;
      real _t270E#1 = 0.e0;
      real _t2710#1 = 0.1e1;
      real _t2712#1 = 0.e0;
      tensor[4] _t2714#1 = <tensor[4]>[_t270C,_t270E,_t2710,_t2712];
      real _t2716#1 = 0.e0;
      real _t2718#1 = 0.e0;
      real _t271A#1 = 0.e0;
      real _t271C#1 = 0.1e1;
      tensor[4] _t271E#1 = <tensor[4]>[_t2716,_t2718,_t271A,_t271C];
      tensor[4,4] _t2720#1 = <tensor[4,4]>[_t2700,_t270A,_t2714,_t271E];
      real _t2722#1 = 0.e0;
      real _t2724#1 = 0.1e1;
      real _t2726#1 = 0.e0;
      real _t2728#1 = 0.e0;
      tensor[4] _t272A#1 = <tensor[4]>[_t2722,_t2724,_t2726,_t2728];
      real _t272C#1 = 0.e0;
      real _t272E#1 = 0.e0;
      real _t2730#1 = 0.1e1;
      real _t2732#1 = 0.e0;
      tensor[4] _t2734#1 = <tensor[4]>[_t272C,_t272E,_t2730,_t2732];
      real _t2736#1 = 0.1e1;
      real _t2738#1 = 0.e0;
      real _t273A#1 = 0.e0;
      real _t273C#1 = 0.e0;
      tensor[4] _t273E#1 = <tensor[4]>[_t2736,_t2738,_t273A,_t273C];
      real _t2740#1 = 0.e0;
      real _t2742#1 = 0.e0;
      real _t2744#1 = 0.e0;
      real _t2746#1 = 0.1e1;
      tensor[4] _t2748#1 = <tensor[4]>[_t2740,_t2742,_t2744,_t2746];
      tensor[4,4] _t274A#1 = <tensor[4,4]>[_t272A,_t2734,_t273E,_t2748];
      tensor[4,4][4] _t274C#1 = <tensor[4,4][4]>{_t26CC,_t26F6,_t2720,_t274A};
      real _t274E#1 = -0.1e1;
      real _t2750#1 = -0.57735026919e0;
      real _t2752#1 = -0.1e1;
      real _t2754#1 = 0.1e1;
      tensor[4] _t2756#1 = <tensor[4]>[_t274E,_t2750,_t2752,_t2754];
      real _t2758#1 = 0.1e1;
      real _t275A#1 = -0.57735026919e0;
      real _t275C#1 = 0.e0;
      real _t275E#1 = 0.e0;
      tensor[4] _t2760#1 = <tensor[4]>[_t2758,_t275A,_t275C,_t275E];
      real _t2762#1 = 0.e0;
      real _t2764#1 = -0.57735026919e0;
      real _t2766#1 = 0.1e1;
      real _t2768#1 = 0.e0;
      tensor[4] _t276A#1 = <tensor[4]>[_t2762,_t2764,_t2766,_t2768];
      real _t276C#1 = 0.e0;
      real _t276E#1 = 0.e0;
      real _t2770#1 = 0.e0;
      real _t2772#1 = 0.1e1;
      tensor[4] _t2774#1 = <tensor[4]>[_t276C,_t276E,_t2770,_t2772];
      tensor[4,4] _t2776#1 = <tensor[4,4]>[_t2756,_t2760,_t276A,_t2774];
      real _t2778#1 = 0.e0;
      real _t277A#1 = -0.1e1;
      real _t277C#1 = 0.e0;
      real _t277E#1 = 0.e0;
      tensor[4] _t2780#1 = <tensor[4]>[_t2778,_t277A,_t277C,_t277E];
      real _t2782#1 = 0.1e1;
      real _t2784#1 = 0.e0;
      real _t2786#1 = 0.e0;
      real _t2788#1 = 0.e0;
      tensor[4] _t278A#1 = <tensor[4]>[_t2782,_t2784,_t2786,_t2788];
      real _t278C#1 = 0.e0;
      real _t278E#1 = 0.e0;
      real _t2790#1 = 0.1e1;
      real _t2792#1 = 0.e0;
      tensor[4] _t2794#1 = <tensor[4]>[_t278C,_t278E,_t2790,_t2792];
      real _t2796#1 = 0.e0;
      real _t2798#1 = 0.e0;
      real _t279A#1 = 0.e0;
      real _t279C#1 = 0.1e1;
      tensor[4] _t279E#1 = <tensor[4]>[_t2796,_t2798,_t279A,_t279C];
      tensor[4,4] _t27A0#1 = <tensor[4,4]>[_t2780,_t278A,_t2794,_t279E];
      real _t27A2#1 = 0.1e1;
      real _t27A4#1 = 0.e0;
      real _t27A6#1 = 0.e0;
      real _t27A8#1 = 0.e0;
      tensor[4] _t27AA#1 = <tensor[4]>[_t27A2,_t27A4,_t27A6,_t27A8];
      real _t27AC#1 = 0.e0;
      real _t27AE#1 = 0.1e1;
      real _t27B0#1 = 0.e0;
      real _t27B2#1 = 0.e0;
      tensor[4] _t27B4#1 = <tensor[4]>[_t27AC,_t27AE,_t27B0,_t27B2];
      real _t27B6#1 = 0.e0;
      real _t27B8#1 = 0.e0;
      real _t27BA#1 = 0.1e1;
      real _t27BC#1 = 0.e0;
      tensor[4] _t27BE#1 = <tensor[4]>[_t27B6,_t27B8,_t27BA,_t27BC];
      real _t27C0#1 = 0.e0;
      real _t27C2#1 = 0.e0;
      real _t27C4#1 = 0.e0;
      real _t27C6#1 = 0.1e1;
      tensor[4] _t27C8#1 = <tensor[4]>[_t27C0,_t27C2,_t27C4,_t27C6];
      tensor[4,4] _t27CA#1 = <tensor[4,4]>[_t27AA,_t27B4,_t27BE,_t27C8];
      real _t27CC#1 = 0.1e1;
      real _t27CE#1 = 0.e0;
      real _t27D0#1 = 0.e0;
      real _t27D2#1 = 0.e0;
      tensor[4] _t27D4#1 = <tensor[4]>[_t27CC,_t27CE,_t27D0,_t27D2];
      real _t27D6#1 = 0.e0;
      real _t27D8#1 = 0.e0;
      real _t27DA#1 = 0.1e1;
      real _t27DC#1 = 0.e0;
      tensor[4] _t27DE#1 = <tensor[4]>[_t27D6,_t27D8,_t27DA,_t27DC];
      real _t27E0#1 = 0.e0;
      real _t27E2#1 = -0.1e1;
      real _t27E4#1 = 0.e0;
      real _t27E6#1 = 0.e0;
      tensor[4] _t27E8#1 = <tensor[4]>[_t27E0,_t27E2,_t27E4,_t27E6];
      real _t27EA#1 = 0.e0;
      real _t27EC#1 = 0.e0;
      real _t27EE#1 = 0.e0;
      real _t27F0#1 = 0.1e1;
      tensor[4] _t27F2#1 = <tensor[4]>[_t27EA,_t27EC,_t27EE,_t27F0];
      tensor[4,4] _t27F4#1 = <tensor[4,4]>[_t27D4,_t27DE,_t27E8,_t27F2];
      tensor[4,4][4] _t27F6#1 = <tensor[4,4][4]>{_t2776,_t27A0,_t27CA,_t27F4};
      real _t27F8#1 = -0.1e1;
      real _t27FA#1 = -0.1e1;
      real _t27FC#1 = 0.57735026919e0;
      real _t27FE#1 = 0.1e1;
      tensor[4] _t2800#1 = <tensor[4]>[_t27F8,_t27FA,_t27FC,_t27FE];
      real _t2802#1 = 0.1e1;
      real _t2804#1 = 0.e0;
      real _t2806#1 = 0.57735026919e0;
      real _t2808#1 = 0.e0;
      tensor[4] _t280A#1 = <tensor[4]>[_t2802,_t2804,_t2806,_t2808];
      real _t280C#1 = 0.e0;
      real _t280E#1 = 0.1e1;
      real _t2810#1 = 0.57735026919e0;
      real _t2812#1 = 0.e0;
      tensor[4] _t2814#1 = <tensor[4]>[_t280C,_t280E,_t2810,_t2812];
      real _t2816#1 = 0.e0;
      real _t2818#1 = 0.e0;
      real _t281A#1 = 0.e0;
      real _t281C#1 = 0.1e1;
      tensor[4] _t281E#1 = <tensor[4]>[_t2816,_t2818,_t281A,_t281C];
      tensor[4,4] _t2820#1 = <tensor[4,4]>[_t2800,_t280A,_t2814,_t281E];
      real _t2822#1 = 0.e0;
      real _t2824#1 = 0.e0;
      real _t2826#1 = 0.1e1;
      real _t2828#1 = 0.e0;
      tensor[4] _t282A#1 = <tensor[4]>[_t2822,_t2824,_t2826,_t2828];
      real _t282C#1 = 0.1e1;
      real _t282E#1 = 0.e0;
      real _t2830#1 = 0.e0;
      real _t2832#1 = 0.e0;
      tensor[4] _t2834#1 = <tensor[4]>[_t282C,_t282E,_t2830,_t2832];
      real _t2836#1 = 0.e0;
      real _t2838#1 = 0.1e1;
      real _t283A#1 = 0.e0;
      real _t283C#1 = 0.e0;
      tensor[4] _t283E#1 = <tensor[4]>[_t2836,_t2838,_t283A,_t283C];
      real _t2840#1 = 0.e0;
      real _t2842#1 = 0.e0;
      real _t2844#1 = 0.e0;
      real _t2846#1 = 0.1e1;
      tensor[4] _t2848#1 = <tensor[4]>[_t2840,_t2842,_t2844,_t2846];
      tensor[4,4] _t284A#1 = <tensor[4,4]>[_t282A,_t2834,_t283E,_t2848];
      real _t284C#1 = 0.1e1;
      real _t284E#1 = 0.e0;
      real _t2850#1 = 0.e0;
      real _t2852#1 = 0.e0;
      tensor[4] _t2854#1 = <tensor[4]>[_t284C,_t284E,_t2850,_t2852];
      real _t2856#1 = 0.e0;
      real _t2858#1 = 0.e0;
      real _t285A#1 = -0.1e1;
      real _t285C#1 = 0.e0;
      tensor[4] _t285E#1 = <tensor[4]>[_t2856,_t2858,_t285A,_t285C];
      real _t2860#1 = 0.e0;
      real _t2862#1 = 0.1e1;
      real _t2864#1 = 0.e0;
      real _t2866#1 = 0.e0;
      tensor[4] _t2868#1 = <tensor[4]>[_t2860,_t2862,_t2864,_t2866];
      real _t286A#1 = 0.e0;
      real _t286C#1 = 0.e0;
      real _t286E#1 = 0.e0;
      real _t2870#1 = 0.1e1;
      tensor[4] _t2872#1 = <tensor[4]>[_t286A,_t286C,_t286E,_t2870];
      tensor[4,4] _t2874#1 = <tensor[4,4]>[_t2854,_t285E,_t2868,_t2872];
      real _t2876#1 = 0.1e1;
      real _t2878#1 = 0.e0;
      real _t287A#1 = 0.e0;
      real _t287C#1 = 0.e0;
      tensor[4] _t287E#1 = <tensor[4]>[_t2876,_t2878,_t287A,_t287C];
      real _t2880#1 = 0.e0;
      real _t2882#1 = 0.1e1;
      real _t2884#1 = 0.e0;
      real _t2886#1 = 0.e0;
      tensor[4] _t2888#1 = <tensor[4]>[_t2880,_t2882,_t2884,_t2886];
      real _t288A#1 = 0.e0;
      real _t288C#1 = 0.e0;
      real _t288E#1 = 0.1e1;
      real _t2890#1 = 0.e0;
      tensor[4] _t2892#1 = <tensor[4]>[_t288A,_t288C,_t288E,_t2890];
      real _t2894#1 = 0.e0;
      real _t2896#1 = 0.e0;
      real _t2898#1 = 0.e0;
      real _t289A#1 = 0.1e1;
      tensor[4] _t289C#1 = <tensor[4]>[_t2894,_t2896,_t2898,_t289A];
      tensor[4,4] _t289E#1 = <tensor[4,4]>[_t287E,_t2888,_t2892,_t289C];
      tensor[4,4][4] _t28A0#1 = <tensor[4,4][4]>{_t2820,_t284A,_t2874,_t289E};
      tensor[4,4][4][4] _t28A2#1 = <tensor[4,4][4][4]>{_t26A2,_t274C,_t27F6,_t28A0};
      real _t28A4#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t28A6#1 = FloorToInt(_t28A4);
      tensor[4,4][4] _t28A8#1 = Subscript<tensor[4,4][4][4]>(_t28A2,_t28A6);
      real _t28AA#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t28AC#1 = FloorToInt(_t28AA);
      int[2] _t28AE#1 = nextCell417B2 (_t28AC,_t1AD6,_t1AD4);
      int _t28B0#1 = 1;
      int _t28B2#1 = Subscript<int[2]>(_t28AE,_t28B0);
      tensor[4,4] _t28B4#1 = Subscript<tensor[4,4][4]>(_t28A8,_t28B2);
      real _t28B6#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t28B8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t28B6,deltaP17F2);
      tensor[3] _t28BA#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t28B8,_t1AD8);
      real _t28BC#1 = TensorIndex<tensor[3],[0]>(_t28BA);
      real _t28BE#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t28C0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t28BE,deltaP17F2);
      tensor[3] _t28C2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t28C0,_t1AD8);
      real _t28C4#1 = TensorIndex<tensor[3],[1]>(_t28C2);
      real _t28C6#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t28C8#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t28C6,deltaP17F2);
      tensor[3] _t28CA#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t28C8,_t1AD8);
      real _t28CC#1 = TensorIndex<tensor[3],[2]>(_t28CA);
      real _t28CE#1 = 0.1e1;
      tensor[4] _t28D0#1 = <tensor[4]>[_t28BC,_t28C4,_t28CC,_t28CE];
      tensor[4] _t28D2#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t28B4,_t28D0);
      real _t28D4#1 = TensorIndex<tensor[4],[2]>(_t28D2);
      tensor[3] _t28D6#1 = <tensor[3]>[_t231C,_t25F8,_t28D4];
      real _t28D8#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t28DA#1 = FloorToInt(_t28D8);
      int[2] _t28DC#1 = nextCell417B2 (_t28DA,_t1AD6,_t1AD4);
      int _t28DE#1 = 1;
      int _t28E0#1 = Subscript<int[2]>(_t28DC,_t28DE);
      femData:MeshPos _t28E2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t1AD4,_t2040,_t28D6,_t28E0);
      femData:MeshPos nmp28E4#1 = _t28E2;
      goto JOIN1D62
    JOIN1D62:  preds = [ASSIGN28E6,ASSIGN28F0]
      femData:MeshPos nmp28E5#3 = phi(nmp28E4,nmp28EF)
      bool _t28F3#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp28E5);
      bool _t28F5#1 = BNot(_t28F3);
      if _t28F5 then goto ASSIGN28FA else goto ASSIGN28FD
    ASSIGN28FA:  preds = [COND2915]
      bool _t28F8#1 = true;
      goto JOIN28F7
    JOIN28F7:  preds = [ASSIGN28FA,ASSIGN2914]
      bool _t28F9#1 = phi(_t28F8,_t2913)
      if _t28F9 then goto RETURN(nmp28E5)2917 else goto JOIN2916
    RETURN(nmp28E5)2917:  preds = [COND2918]
      return nmp28E5
      goto JOIN2916
    JOIN2916:  preds = [*RETURN(nmp28E5)2917,COND2918]
      femData:MeshPos cmp2919#1 = nmp28E5;
      goto JOIN1840
    ASSIGN28FD:  preds = [COND2915]
      real _t28FC#1 = 0.e0;
      bool _t28FE#1 = LT<real>(eTime1ACD,_t28FC);
      if _t28FE then goto ASSIGN2903 else goto ASSIGN2906
    ASSIGN2903:  preds = [COND2912]
      bool _t2901#1 = true;
      goto JOIN2900
    JOIN2900:  preds = [ASSIGN2903,ASSIGN2911]
      bool _t2902#1 = phi(_t2901,_t2910)
      bool _t2913#1 = _t2902;
      goto JOIN28F7
    ASSIGN2906:  preds = [COND2912]
      real _t2905#1 = 0.1e1;
      bool _t2907#1 = GT<real>(eTime1ACD,_t2905);
      if _t2907 then goto ASSIGN290C else goto ASSIGN290E
    ASSIGN290C:  preds = [COND290F]
      bool _t290A#1 = true;
      goto JOIN2909
    JOIN2909:  preds = [ASSIGN290C,ASSIGN290E]
      bool _t290B#1 = phi(_t290A,_t290D)
      bool _t2910#1 = _t290B;
      goto JOIN2900
    ASSIGN290E:  preds = [COND290F]
      bool _t290D#1 = LT<real>(time1AD1,timeEps17B5);
      goto JOIN2909
    ASSIGN28E8:  preds = [COND28F1]
      real _t28E7#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t28E9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t28E7,deltaP17F2);
      tensor[3] _t28EB#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t28E9,_t1AD8);
      femData:MeshPos _t28ED#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t1AD4,_t28EB);
      femData:MeshPos nmp28EF#1 = _t28ED;
      goto JOIN1D62
    ASSIGN1D3E:  preds = [COND1D52]
      real _t1D3D#1 = -inf;
      bool _t1D3F#1 = EQ<real>(_t1D3D,faceTime1D2B);
      if _t1D3F then goto ASSIGN1D43 else goto ASSIGN1D4C
    ASSIGN1D43:  preds = [COND1D51]
      real _t1D42#1 = -0.1e1;
      real _t1D44#1 = -0.1e1;
      tensor[2] _t1D46#1 = <tensor[2]>[_t1D42,_t1D44];
      tensor[2] _t1D48#1 = _t1D46;
      goto JOIN1D41
    JOIN1D41:  preds = [ASSIGN1D4A,ASSIGN1D50]
      tensor[2] _t1D49#1 = phi(_t1D48,_t1D4F)
      goto JOIN1D31
    ASSIGN1D4C:  preds = [COND1D51]
      real _t1D4B#1 = IntToReal(_t1ADC);
      tensor[2] _t1D4D#1 = <tensor[2]>[faceTime1D2B,_t1D4B];
      tensor[2] _t1D4F#1 = _t1D4D;
      goto JOIN1D41
    ASSIGN1D0E:  preds = [COND1D28]
      real _t1D0D#1 = 0.e0;
      real _t1D0F#1 = 0.e0;
      real _t1D11#1 = 0.e0;
      real _t1D13#1 = 0.1e1;
      tensor[3] _t1D15#1 = <tensor[3]>[_t1D0F,_t1D11,_t1D13];
      real _t1D17#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1D15,_t1ADA);
      real _t1D19#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D0D,_t1D17);
      real _t1D1B#1 = 0.e0;
      real _t1D1D#1 = 0.e0;
      real _t1D1F#1 = 0.1e1;
      tensor[3] _t1D21#1 = <tensor[3]>[_t1D1B,_t1D1D,_t1D1F];
      real _t1D23#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1D21,deltaP17F2);
      real faceTime1D25#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1D19,_t1D23);
      goto JOIN1CEE
    ASSIGN1C7C:  preds = [COND1C96]
      real _t1C7B#1 = 0.e0;
      real _t1C7D#1 = 0.e0;
      real _t1C7F#1 = -0.1e1;
      real _t1C81#1 = 0.e0;
      tensor[3] _t1C83#1 = <tensor[3]>[_t1C7D,_t1C7F,_t1C81];
      real _t1C85#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1C83,_t1ADA);
      real _t1C87#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1C7B,_t1C85);
      real _t1C89#1 = 0.e0;
      real _t1C8B#1 = -0.1e1;
      real _t1C8D#1 = 0.e0;
      tensor[3] _t1C8F#1 = <tensor[3]>[_t1C89,_t1C8B,_t1C8D];
      real _t1C91#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1C8F,deltaP17F2);
      real faceTime1C93#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C87,_t1C91);
      goto JOIN1C5C
    ASSIGN1BEA:  preds = [COND1C04]
      real _t1BE9#1 = 0.e0;
      real _t1BEB#1 = 0.1e1;
      real _t1BED#1 = 0.e0;
      real _t1BEF#1 = 0.e0;
      tensor[3] _t1BF1#1 = <tensor[3]>[_t1BEB,_t1BED,_t1BEF];
      real _t1BF3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1BF1,_t1ADA);
      real _t1BF5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1BE9,_t1BF3);
      real _t1BF7#1 = 0.1e1;
      real _t1BF9#1 = 0.e0;
      real _t1BFB#1 = 0.e0;
      tensor[3] _t1BFD#1 = <tensor[3]>[_t1BF7,_t1BF9,_t1BFB];
      real _t1BFF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1BFD,deltaP17F2);
      real faceTime1C01#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1BF5,_t1BFF);
      goto JOIN1BCA
    ASSIGN1B58:  preds = [COND1B72]
      real _t1B57#1 = 0.57735026919e0;
      real _t1B59#1 = 0.57735026919e0;
      real _t1B5B#1 = 0.57735026919e0;
      real _t1B5D#1 = 0.57735026919e0;
      tensor[3] _t1B5F#1 = <tensor[3]>[_t1B59,_t1B5B,_t1B5D];
      real _t1B61#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1B5F,_t1ADA);
      real _t1B63#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1B57,_t1B61);
      real _t1B65#1 = 0.57735026919e0;
      real _t1B67#1 = 0.57735026919e0;
      real _t1B69#1 = 0.57735026919e0;
      tensor[3] _t1B6B#1 = <tensor[3]>[_t1B65,_t1B67,_t1B69];
      real _t1B6D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1B6B,deltaP17F2);
      real faceTime1B6F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B63,_t1B6D);
      goto JOIN1B38
    ASSIGN1AB8:  preds = [COND1ACC]
      real _t1AB7#1 = -inf;
      bool _t1AB9#1 = EQ<real>(_t1AB7,faceTime1AA5);
      if _t1AB9 then goto ASSIGN1ABD else goto ASSIGN1AC6
    ASSIGN1ABD:  preds = [COND1ACB]
      real _t1ABC#1 = -0.1e1;
      real _t1ABE#1 = -0.1e1;
      tensor[2] _t1AC0#1 = <tensor[2]>[_t1ABC,_t1ABE];
      tensor[2] _t1AC2#1 = _t1AC0;
      goto JOIN1ABB
    JOIN1ABB:  preds = [ASSIGN1AC4,ASSIGN1ACA]
      tensor[2] _t1AC3#1 = phi(_t1AC2,_t1AC9)
      goto JOIN1AAB
    ASSIGN1AC6:  preds = [COND1ACB]
      real _t1AC5#1 = IntToReal(_t1856);
      tensor[2] _t1AC7#1 = <tensor[2]>[faceTime1AA5,_t1AC5];
      tensor[2] _t1AC9#1 = _t1AC7;
      goto JOIN1ABB
    ASSIGN1A88:  preds = [COND1AA2]
      real _t1A87#1 = 0.e0;
      real _t1A89#1 = 0.e0;
      real _t1A8B#1 = 0.e0;
      real _t1A8D#1 = 0.1e1;
      tensor[3] _t1A8F#1 = <tensor[3]>[_t1A89,_t1A8B,_t1A8D];
      real _t1A91#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A8F,_t1854);
      real _t1A93#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1A87,_t1A91);
      real _t1A95#1 = 0.e0;
      real _t1A97#1 = 0.e0;
      real _t1A99#1 = 0.1e1;
      tensor[3] _t1A9B#1 = <tensor[3]>[_t1A95,_t1A97,_t1A99];
      real _t1A9D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A9B,deltaP17F2);
      real faceTime1A9F#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A93,_t1A9D);
      goto JOIN1A68
    ASSIGN19F6:  preds = [COND1A10]
      real _t19F5#1 = 0.e0;
      real _t19F7#1 = 0.e0;
      real _t19F9#1 = -0.1e1;
      real _t19FB#1 = 0.e0;
      tensor[3] _t19FD#1 = <tensor[3]>[_t19F7,_t19F9,_t19FB];
      real _t19FF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t19FD,_t1854);
      real _t1A01#1 = λ(T0[],T1[])<(T0) - (T1)> (_t19F5,_t19FF);
      real _t1A03#1 = 0.e0;
      real _t1A05#1 = -0.1e1;
      real _t1A07#1 = 0.e0;
      tensor[3] _t1A09#1 = <tensor[3]>[_t1A03,_t1A05,_t1A07];
      real _t1A0B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A09,deltaP17F2);
      real faceTime1A0D#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A01,_t1A0B);
      goto JOIN19D6
    ASSIGN1964:  preds = [COND197E]
      real _t1963#1 = 0.e0;
      real _t1965#1 = 0.1e1;
      real _t1967#1 = 0.e0;
      real _t1969#1 = 0.e0;
      tensor[3] _t196B#1 = <tensor[3]>[_t1965,_t1967,_t1969];
      real _t196D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t196B,_t1854);
      real _t196F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1963,_t196D);
      real _t1971#1 = 0.1e1;
      real _t1973#1 = 0.e0;
      real _t1975#1 = 0.e0;
      tensor[3] _t1977#1 = <tensor[3]>[_t1971,_t1973,_t1975];
      real _t1979#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1977,deltaP17F2);
      real faceTime197B#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t196F,_t1979);
      goto JOIN1944
    ASSIGN18D2:  preds = [COND18EC]
      real _t18D1#1 = 0.57735026919e0;
      real _t18D3#1 = 0.57735026919e0;
      real _t18D5#1 = 0.57735026919e0;
      real _t18D7#1 = 0.57735026919e0;
      tensor[3] _t18D9#1 = <tensor[3]>[_t18D3,_t18D5,_t18D7];
      real _t18DB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t18D9,_t1854);
      real _t18DD#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18D1,_t18DB);
      real _t18DF#1 = 0.57735026919e0;
      real _t18E1#1 = 0.57735026919e0;
      real _t18E3#1 = 0.57735026919e0;
      tensor[3] _t18E5#1 = <tensor[3]>[_t18DF,_t18E1,_t18E3];
      real _t18E7#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t18E5,deltaP17F2);
      real faceTime18E9#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18DD,_t18E7);
      goto JOIN18B2
    ASSIGN291F:  preds = [FOREACH17CD]
      string _t291E#1 = "Took stupid way out!\n";
      Print<[string]>(_t291E);
      tensor[3] _t2922#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x17B3);
      int _t2924#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x17B3);
      femData:Mesh _t2926#2 = ExtractFem<femData:Mesh,femData:MeshPos>(x17B3);
      field _t2929#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2924,_t2926,_t2926);
      tensor[3] _t292B#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2929,_t2922);
      tensor[3] _t292D#1 = _t292B;
      tensor[3] _t292F#1 = _t292D;
      tensor[3] _t2931#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t292F,dPos17B4);
      femData:MeshPos cmp2933#1 = findPos17A0 (meshData17B7,_t2931);
      return cmp2933
}
## input initialization
  ENTRY16F0:  preds = []
    int timeSteps16E4#1 = 32;
    globals.timeSteps16DF = timeSteps16E4;
    real timeEps16E7#1 = 0.1e-6;
    globals.timeEps16E0 = timeEps16E7;
    real stepSize16EA#1 = 0.1e-1;
    globals.stepSize16E2 = stepSize16EA;
    int stepMax16ED#1 = 100;
    globals.stepMax16E3 = stepMax16ED;
    return
## global-variable initialization
  ENTRY2971:  preds = []
    femData:Mesh meshData293A#3 = globals.meshData16DC;
    femData:Space 0space03AB_intermedateGlobal2939#1 = globals.0space03AB_intermedateGlobal16DD;
    femData:FemFunc 0data03AD_intermedateGlobal2938#1 = globals.0data03AD_intermedateGlobal16DE;
    int _t293E#1 = 0;
    int _t2940#1 = 1;
    int _t2942#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData293A);
    int _t2944#1 = ISub(_t2942,_t2940);
    int[] _t2946#1 = Range(_t293E,_t2944);
    femData:MeshCell[] _t2948#1 = <femData:MeshCell[]>{};
  FOREACH294C:  preds = [ASSIGN2949,NEXT2951]
    foreach (_t294A in _t2946) on exit goto ASSIGN2953
      femData:MeshCell[] _t294B#1 = phi(_t2948,_t294F)
    femData:MeshCell _t294D#1 = LoadFem<femData:MeshCell>(meshData293A,_t294A);
    femData:MeshCell[] _t294F#1 = Append<femData:MeshCell>(_t294B,_t294D);
    goto FOREACH294C
  ASSIGN2953:  preds = [FOREACH294C]
    femData:Space space2952#2 = LoadFem<femData:Space>(0space03AB_intermedateGlobal2939,meshData293A);
    globals.space16F2 = space2952;
    femData:FemFunc data2955#7 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal2938,space2952);
    globals.data16F3 = data2955;
    femData:Space _t2958#1 = ExtractFem<femData:Space,femData:FemFunc>(data2955);
    femData:Space _t295A#1 = ExtractFem<femData:Space,femData:FemFunc>(data2955);
    femData:Mesh _t295C#1 = ExtractFem<femData:Mesh,femData:Space>(_t295A);
    field _t295E#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2)<femV(17A0, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t295C,_t2958,data2955);
    femData:Space _t2960#1 = ExtractFem<femData:Space,femData:FemFunc>(data2955);
    femData:Mesh _t2962#2 = ExtractFem<femData:Mesh,femData:Space>(_t2960);
    femData:Space _t2964#1 = ExtractFem<femData:Space,femData:FemFunc>(data2955);
    femData:Mesh _t2966#0 = ExtractFem<femData:Mesh,femData:Space>(_t2964);
    femData:Space _t2968#1 = ExtractFem<femData:Space,femData:FemFunc>(data2955);
    femData:Mesh _t296A#1 = ExtractFem<femData:Mesh,femData:Space>(_t2968);
    field _t296C#1 = λ(FEM(mesh_t)0,FEM(mesh_t)1,FEM(mesh_t)2)<femInvV(17A0, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t296A,_t2962,_t2962);
    field F296E#1 = λ(F0[3],F1[3])<Cmp(F0_{i0})[F1_{i0}{3}]>_{3} (_t295E,_t296C);
    globals.F16F4 = F296E;
    return
## strand
  strand gg (tensor[3] startPos297B#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY299E:  preds = []
        femData:Mesh meshData2982#1 = globals.meshData16DC;
        tensor[3][1] _t298A#1 = <tensor[3][1]>{startPos297B};
        tensor[3][] _t298C#1 = MkDynamic<tensor[3],1>(_t298A);
        tensor[3][] stream298E#1 = _t298C;
        tensor[3][1] _t2990#1 = <tensor[3][1]>{startPos297B};
        tensor[3][] _t2992#1 = MkDynamic<tensor[3],1>(_t2990);
        tensor[3][] newStream2994#1 = _t2992;
        int step2996#1 = 0;
        femData:MeshPos cPos2998#1 = findPos17A0 (meshData2982,startPos297B);
        tensor[3] altCPos299A#1 = startPos297B;
        tensor[3] startPos299C#1 = startPos297B;
        self.stream = stream298E;
        self.newStream = newStream2994;
        self.step = step2996;
        self.cPos = cPos2998;
        self.altCPos = altCPos299A;
        self.startPos = startPos299C;
        return
    end state init
    method update
        ENTRY2AE9:  preds = []
          femData:Mesh meshData29AA#2 = globals.meshData16DC;
          femData:FemFunc data29A9#6 = globals.data16F3;
          real stepSize29A8#4 = globals.stepSize16E2;
          int stepMax29A7#1 = globals.stepMax16E3;
          field F29A6#4 = globals.F16F4;
          tensor[3][] stream29B0#5 = self.stream;
          tensor[3][] newStream29B1#4 = self.newStream;
          int step29B2#6 = self.step;
          femData:MeshPos cPos29B3#14 = self.cPos;
          tensor[3] altCPos29B4#8 = self.altCPos;
          tensor[3] startPos29B5#1 = self.startPos;
          bool _t29BD#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos29B3);
          bool _t29BF#1 = BNot(_t29BD);
          if _t29BF then goto ASSIGN29C4 else goto ASSIGN29C7
        ASSIGN29C4:  preds = [COND29D5]
          bool _t29C2#1 = true;
          goto JOIN29C1
        JOIN29C1:  preds = [ASSIGN29C4,ASSIGN29D4]
          bool _t29C3#1 = phi(_t29C2,_t29D3)
          if _t29C3 then goto SAVE29D8 else goto JOIN29D6
        SAVE29D8:  preds = [COND29DD]
          self.stream = stream29B0;
          self.newStream = newStream29B1;
          self.step = step29B2;
          self.cPos = cPos29B3;
          self.altCPos = altCPos29B4;
          stabilize
          goto JOIN29D6
        JOIN29D6:  preds = [*STABILIZE29D7,COND29DD]
          tensor[3] _t29DF#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos29B3);
          int _t29E1#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos29B3);
          femData:Mesh _t29E3#2 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos29B3);
          field _t29E6#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t29E1,_t29E3,_t29E3);
          tensor[3] _t29E8#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t29E6,_t29DF);
          tensor[3] _t29EA#1 = _t29E8;
          tensor[3] _t29EC#1 = _t29EA;
          tensor[3] _t29EE#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t29EC,altCPos29B4);
          real _t29F0#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t29EE);
          real _t29F2#1 = 0.1e-5;
          bool _t29F4#1 = GT<real>(_t29F0,_t29F2);
          if _t29F4 then goto ASSIGN29F8 else goto ASSIGN29FF
        ASSIGN29F8:  preds = [COND2A09]
          string _t29F7#1 = "Error in tracing: At step:";
          string _t29F9#1 = " with particle:";
          string _t29FB#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t29F7,step29B2,_t29F9,startPos29B5,_t29FB);
          goto JOIN29F6
        JOIN29F6:  preds = [MASSIGN29FD,MASSIGN2A08]
          real _t2A0A#1 = 0.5e0;
          real _t2A0C#1 = λ(T0[],T1[])<(T0 * T1)> (_t2A0A,stepSize29A8);
          tensor[3] _t2A0E#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F29A6,altCPos29B4);
          tensor[3] _t2A10#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2A0C,_t2A0E);
          tensor[3] _t2A12#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F29A6,altCPos29B4);
          real _t2A14#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t2A12);
          tensor[3] altUp12A16#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t2A10,_t2A14);
          real _t2A18#1 = 0.5e0;
          real _t2A1A#1 = λ(T0[],T1[])<(T0 * T1)> (_t2A18,stepSize29A8);
          bool _t2A1D#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos29B3);
          if _t2A1D then goto ASSIGN2A21 else goto ASSIGN2A51
        ASSIGN2A21:  preds = [COND2A54]
          femData:Mesh _t2A20#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos29B3);
          int _t2A22#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos29B3);
          femData:MeshCell c2A24#3 = LoadFem<femData:MeshCell>(_t2A20,_t2A22);
          tensor[3] ref2A26#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos29B3);
          int _t2A29#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A24);
          femData:FuncCell _t2A2B#1 = LoadFem<femData:FuncCell>(data29A9,_t2A29);
          femData:FuncCell _t2A2D#1 = _t2A2B;
          femData:FemFunc _t2A2F#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2A2D);
          int _t2A32#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A24);
          femData:FuncCell _t2A34#1 = LoadFem<femData:FuncCell>(data29A9,_t2A32);
          femData:FuncCell _t2A36#1 = _t2A34;
          femData:FemFunc _t2A38#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2A36);
          femData:Space _t2A3A#1 = ExtractFem<femData:Space,femData:FemFunc>(_t2A38);
          int _t2A3D#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A24);
          femData:FuncCell _t2A3F#1 = LoadFem<femData:FuncCell>(data29A9,_t2A3D);
          femData:FuncCell _t2A41#1 = _t2A3F;
          int _t2A43#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2A41);
          field _t2A45#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2A43,_t2A3A,_t2A2F);
          tensor[3] val2A47#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2A45,ref2A26);
          real _t2A49#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (val2A47);
          tensor[3] _t2A4B#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (val2A47,_t2A49);
          tensor[3] _t2A4D#1 = _t2A4B;
          goto JOIN2A1F
        JOIN2A1F:  preds = [ASSIGN2A4F,ASSIGN2A53]
          tensor[3] _t2A4E#1 = phi(_t2A4D,_t2A52)
          tensor[3] up12A55#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2A1A,_t2A4E);
          femData:MeshPos intermed2A57#5 = posMove2937 (cPos29B3,up12A55);
          tensor[3] altIntermed2A59#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos29B4,altUp12A16);
          bool _t2A5C#1 = ExtractFemItem<bool,Valid(MeshPos)>(intermed2A57);
          bool _t2A5E#1 = BNot(_t2A5C);
          if _t2A5E then goto ASSIGN2A63 else goto ASSIGN2A65
        ASSIGN2A63:  preds = [COND2A6A]
          bool _t2A61#1 = true;
          goto JOIN2A60
        JOIN2A60:  preds = [ASSIGN2A63,ASSIGN2A69]
          bool _t2A62#1 = phi(_t2A61,_t2A68)
          if _t2A62 then goto SAVE2A6D else goto JOIN2A6B
        SAVE2A6D:  preds = [COND2A72]
          self.stream = stream29B0;
          self.newStream = newStream29B1;
          self.step = step29B2;
          self.cPos = cPos29B3;
          self.altCPos = altCPos29B4;
          stabilize
          goto JOIN2A6B
        JOIN2A6B:  preds = [*STABILIZE2A6C,COND2A72]
          tensor[3] _t2A73#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F29A6,altIntermed2A59);
          tensor[3] _t2A75#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize29A8,_t2A73);
          tensor[3] _t2A77#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F29A6,altIntermed2A59);
          real _t2A79#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t2A77);
          tensor[3] altUp22A7B#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t2A75,_t2A79);
          bool _t2A7E#1 = ExtractFemItem<bool,Valid(MeshPos)>(intermed2A57);
          if _t2A7E then goto ASSIGN2A82 else goto ASSIGN2AB2
        ASSIGN2A82:  preds = [COND2AB5]
          femData:Mesh _t2A81#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed2A57);
          int _t2A83#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed2A57);
          femData:MeshCell c2A85#3 = LoadFem<femData:MeshCell>(_t2A81,_t2A83);
          tensor[3] ref2A87#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed2A57);
          int _t2A8A#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A85);
          femData:FuncCell _t2A8C#1 = LoadFem<femData:FuncCell>(data29A9,_t2A8A);
          femData:FuncCell _t2A8E#1 = _t2A8C;
          femData:FemFunc _t2A90#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2A8E);
          int _t2A93#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A85);
          femData:FuncCell _t2A95#1 = LoadFem<femData:FuncCell>(data29A9,_t2A93);
          femData:FuncCell _t2A97#1 = _t2A95;
          femData:FemFunc _t2A99#1 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2A97);
          femData:Space _t2A9B#1 = ExtractFem<femData:Space,femData:FemFunc>(_t2A99);
          int _t2A9E#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A85);
          femData:FuncCell _t2AA0#1 = LoadFem<femData:FuncCell>(data29A9,_t2A9E);
          femData:FuncCell _t2AA2#1 = _t2AA0;
          int _t2AA4#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2AA2);
          field _t2AA6#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2AA4,_t2A9B,_t2A90);
          tensor[3] val2AA8#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2AA6,ref2A87);
          real _t2AAA#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (val2AA8);
          tensor[3] _t2AAC#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (val2AA8,_t2AAA);
          tensor[3] _t2AAE#1 = _t2AAC;
          goto JOIN2A80
        JOIN2A80:  preds = [ASSIGN2AB0,ASSIGN2AB4]
          tensor[3] _t2AAF#1 = phi(_t2AAE,_t2AB3)
          tensor[3] up22AB6#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize29A8,_t2AAF);
          femData:MeshPos cPos2AB8#6 = posMove2937 (cPos29B3,up22AB6);
          tensor[3] altCPos2ABA#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos29B4,altUp22A7B);
          bool _t2ABC#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2AB8);
          bool _t2ABE#1 = BNot(_t2ABC);
          if _t2ABE then goto MASSIGN2AC1 else goto JOIN2AC0
        MASSIGN2AC1:  preds = [COND2AC8]
          Print<[tensor[3][]]>(stream29B0);
          self.stream = stream29B0;
          self.newStream = newStream29B1;
          self.step = step29B2;
          self.cPos = cPos2AB8;
          self.altCPos = altCPos2ABA;
          stabilize
          goto JOIN2AC0
        JOIN2AC0:  preds = [*STABILIZE2AC2,COND2AC8]
          tensor[3] _t2ACA#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2AB8);
          int _t2ACC#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2AB8);
          femData:Mesh _t2ACE#2 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2AB8);
          field _t2AD1#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2ACC,_t2ACE,_t2ACE);
          tensor[3] _t2AD3#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2AD1,_t2ACA);
          tensor[3] _t2AD5#1 = _t2AD3;
          tensor[3] _t2AD7#1 = _t2AD5;
          tensor[3][1] _t2AD9#1 = <tensor[3][1]>{_t2AD7};
          tensor[3][] _t2ADB#1 = MkDynamic<tensor[3],1>(_t2AD9);
          tensor[3][] stream2ADD#1 = Concat<tensor[3]>(stream29B0,_t2ADB);
          tensor[3][1] _t2ADF#1 = <tensor[3][1]>{altCPos2ABA};
          tensor[3][] _t2AE1#1 = MkDynamic<tensor[3],1>(_t2ADF);
          tensor[3][] newStream2AE3#1 = Concat<tensor[3]>(newStream29B1,_t2AE1);
          int _t2AE5#1 = 1;
          int step2AE7#1 = IAdd(step29B2,_t2AE5);
          self.stream = stream2ADD;
          self.newStream = newStream2AE3;
          self.step = step2AE7;
          self.cPos = cPos2AB8;
          self.altCPos = altCPos2ABA;
          active
        ASSIGN2AB2:  preds = [COND2AB5]
          tensor[3] _t2AB1#1 = λ()<Z_{i0}>_{3} ();
          tensor[3] _t2AB3#1 = _t2AB1;
          goto JOIN2A80
        ASSIGN2A65:  preds = [COND2A6A]
          femData:MeshPos _t2A64#1 = findPos17A0 (meshData29AA,altIntermed2A59);
          bool _t2A66#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t2A64);
          bool _t2A68#1 = BNot(_t2A66);
          goto JOIN2A60
        ASSIGN2A51:  preds = [COND2A54]
          tensor[3] _t2A50#1 = λ()<Z_{i0}>_{3} ();
          tensor[3] _t2A52#1 = _t2A50;
          goto JOIN2A1F
        ASSIGN29FF:  preds = [COND2A09]
          string _t29FE#1 = "fine in cell:";
          femData:Mesh _t2A00#1 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos29B3);
          int _t2A02#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos29B3);
          femData:MeshCell _t2A04#1 = LoadFem<femData:MeshCell>(_t2A00,_t2A02);
          string _t2A06#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t29FE,_t2A04,_t2A06);
          goto JOIN29F6
        ASSIGN29C7:  preds = [COND29D5]
          femData:MeshPos _t29C6#1 = findPos17A0 (meshData29AA,altCPos29B4);
          bool _t29C8#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t29C6);
          bool _t29CA#1 = BNot(_t29C8);
          if _t29CA then goto ASSIGN29CF else goto ASSIGN29D1
        ASSIGN29CF:  preds = [COND29D2]
          bool _t29CD#1 = true;
          goto JOIN29CC
        JOIN29CC:  preds = [ASSIGN29CF,ASSIGN29D1]
          bool _t29CE#1 = phi(_t29CD,_t29D0)
          bool _t29D3#1 = _t29CE;
          goto JOIN29C1
        ASSIGN29D1:  preds = [COND29D2]
          bool _t29D0#1 = EQ<int>(step29B2,stepMax29A7);
          goto JOIN29CC
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY2979:  preds = []
      tensor[3][] startPoints2973#1 = globals.startPoints16E1;
    FOREACH2976:  preds = [ASSIGN2974,NEXT2978]
      foreach (x2975 in startPoints2973) on exit goto RETURN297A
      new gg(x2975);
      goto FOREACH2976
    RETURN297A:  preds = [FOREACH2976]
      return
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData16DC (meshData) = <no-default>
  input 0space03AB_intermedateGlobal16DD (space) = <no-default>
  input 0data03AD_intermedateGlobal16DE (data) = <no-default>
  input timeSteps16DF (timeSteps) = <default>
  input timeEps16E0 (timeEps) = <default>
  input startPoints16E1 (startPoints) = <no-default>
  input stepSize16E2 (stepSize) = <default>
  input stepMax16E3 (stepMax) = <default>
  global femData:Space space16F2
  global femData:FemFunc data16F3
  global field F16F4
## functions
  function femData:MeshPos findPos17A0 (femData:Mesh mesh16F5#7, tensor[3] pos16F6#3) {
    ENTRY179F:  preds = []
      real _t16F7#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16FD#3 = <tensor[3]>[_t16F7,_t16F7,_t16F7];
      int newtonInt16FF#1 = 0;
      int cellInt1701#1 = ExtractFemItem<int,StartCell(Mesh)>(mesh16F5);
      int _t1703#1 = ExtractFemItem<int,NumCell(Mesh)>(mesh16F5);
      int _t1705#1 = 1;
      int numCell1707#0 = ISub(_t1703,_t1705);
      int[] yayCells1709#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh16F5,pos16F6);
    FOREACH170C:  preds = [ASSIGN170A,NEXT1796]
      foreach (cellItter170B in yayCells1709) on exit goto ASSIGN1798
        int cellInt1717#0 = phi(cellInt1701,cellItter170B)
        tensor[3] xn1714#0 = phi(xn16FD,xn1730)
      field _t1719#2 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (cellItter170B,mesh16F5,mesh16F5);
      field _t171B#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t1719);
      field _t171D#1 = λ(F0[3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * F0_{i9,i6} * F0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * F0_{i3,'0'} * F0_{i4,'1'} * F0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t171B);
      tensor[3,3] A1727#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t171D,xn16FD);
      int _t172B#1 = 16;
      int[] _t172D#1 = Range(newtonInt16FF,_t172B);
    FOREACH1731:  preds = [ASSIGN2AF3,NEXT1795]
      foreach (newtonItter172F in _t172D) on exit goto NEXT1796
        tensor[3] xn1730#3 = phi(xn16FD,xn173A)
      field _t1734#1 = λ(T0[3],F1[3])<(F1_{i0}) - («T0_{i0}»)>_{3} (pos16F6,_t1719);
      field _t1736#1 = λ(T0[3 3],F1[3])<Σ(i1=0..2)<((«T0_{i0,i1}» * F1_{i1}))>(i1=0..2)>_{3} (A1727,_t1734);
      tensor[3] delta1738#3 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t1736,xn1730);
      tensor[3] xn173A#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn1730,delta1738);
      real _t173C#2 = 0.1e-7;
      real _t1740#1 = λ(T0[],T1[])<(T0 * T1)> (_t173C,_t173C);
      real _t1742#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (delta1738,delta1738);
      bool _t1744#1 = GTE<real>(_t1740,_t1742);
      if _t1744 then goto ASSIGN1748 else goto JOIN1746
    ASSIGN1748:  preds = [COND1794]
      real _t1747#4 = 0.1e1;
      real _t1749#4 = 0.1e-8;
      real _t174B#1 = λ(T0[],T1[])<(T0 + T1)> (_t1747,_t1749);
      tensor[3] _t1753#1 = <tensor[3]>[_t1747,_t1747,_t1747];
      real _t1755#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1753,xn173A);
      bool _t1757#1 = GT<real>(_t174B,_t1755);
      tensor[3] _t175F#1 = <tensor[3]>[_t1749,_t1749,_t1749];
      tensor[3] _t1761#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t175F,xn173A);
      real _t1763#1 = TensorIndex<tensor[3],[0]>(_t1761);
      real _t1765#3 = -0.e0;
      bool _t1767#1 = GT<real>(_t1763,_t1765);
      real _t1773#1 = TensorIndex<tensor[3],[1]>(_t1761);
      bool _t1777#1 = GT<real>(_t1773,_t1765);
      real _t1783#1 = TensorIndex<tensor[3],[2]>(_t1761);
      bool _t1787#1 = GT<real>(_t1783,_t1765);
      bool _t1789#1 = BAnd(_t1777,_t1787);
      bool _t178B#1 = BAnd(_t1767,_t1789);
      bool _t178D#1 = BAnd(_t1757,_t178B);
      if _t178D then goto ASSIGN2AFC else goto JOIN178F
    ASSIGN2AFC:  preds = [COND1793]
      femData:MeshPos _t1790#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16F5,cellItter170B,xn173A,pos16F6);
      return _t1790
      goto JOIN178F
    JOIN178F:  preds = [*RETURN(_t1790)1792,COND1793]
      goto JOIN1746
    JOIN1746:  preds = [JOIN178F,COND1794]
      goto FOREACH1731
    NEXT1796:  preds = [FOREACH1731]
      goto FOREACH170C
    ASSIGN1798:  preds = [FOREACH170C]
      string _t1797#1 = "Bad end 2";
      string _t1799#1 = "\n";
      Print<[string,string]>(_t1797,_t1799);
      femData:MeshPos _t179C#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16F5);
      return _t179C
}
  function int[2] nextCell417B2 (int faceIdx17A1#1, int cell17A2#1, femData:Mesh mesh17A3#1) {
    ENTRY17B1:  preds = []
      int _t17A4#1 = 8;
      int _t17A6#1 = IMul(cell17A2,_t17A4);
      int _t17A8#1 = 2;
      int _t17AA#1 = IMul(faceIdx17A1,_t17A8);
      int _t17AC#1 = IAdd(_t17A6,_t17AA);
      int[2] _t17AE#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh17A3,_t17AC);
      return _t17AE
}
  function femData:MeshPos posMove2937 (femData:MeshPos x17B3#6, tensor[3] dPos17B4#2) {
    ENTRY2936:  preds = []
      femData:Mesh meshData17B7#1 = globals.meshData16DC;
      int timeSteps17B6#1 = globals.timeSteps16DF;
      real timeEps17B5#1 = globals.timeEps16E0;
      bool _t17BB#1 = ExtractFemItem<bool,Valid(MeshPos)>(x17B3);
      bool _t17BD#1 = BNot(_t17BB);
      if _t17BD then goto RETURN(x17B3)17C0 else goto JOIN17BF
    RETURN(x17B3)17C0:  preds = [COND17C1]
      return x17B3
      goto JOIN17BF
    JOIN17BF:  preds = [*RETURN(x17B3)17C0,COND17C1]
      real time17C2#23 = 0.1e1;
      int _t17C6#6 = 0;
      int[] _t17C8#1 = Range(_t17C6,timeSteps17B6);
    FOREACH17CD:  preds = [ASSIGN17C9,NEXT291D]
      foreach (i17CA in _t17C8) on exit goto ASSIGN291F
        femData:MeshPos cmp17CC#6 = phi(x17B3,cmp291A)
        real time17CB#3 = phi(time17C2,time1AD2)
      femData:Mesh _t17CE#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp17CC);
      int _t17D0#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp17CC);
      femData:MeshCell _t17D2#2 = LoadFem<femData:MeshCell>(_t17CE,_t17D0);
      femData:Mesh _t17D4#3 = ExtractFem<femData:Mesh,femData:MeshCell>(_t17D2);
      int _t17E4#2 = ExtractFemItem<int,CellIndex(MeshCell)>(_t17D2);
      field _t17E6#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t17E4,_t17D4,_t17D4);
      field _t17E8#1 = λ(F0[3])<∂/∂x_{i1}@(F0_{i0})>_{3 3} (_t17E6);
      tensor[3] _t17EA#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp17CC);
      tensor[3,3] _t17EC#1 = λ(F0[3],T1[3])<Probe(F0_{i0,i1},T1)>_{3 3} (_t17E8,_t17EA);
      tensor[3,3] _t17EE#1 = λ(T0[3 3])<((Σ(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)<((ϵ_{ii6,ii7,ii0} * ϵ_{ii9,ii10,ii1} * T0_{i9,i6} * T0_{i10,i7}))>(i6=0..2)(i7=0..2)(i9=0..2)(i10=0..2)) / ( 2)) / ( Σ(i3=0..2)(i4=0..2)(i5=0..2)<((ϵ_{ii3,ii4,ii5} * T0_{i3,'0'} * T0_{i4,'1'} * T0_{i5,'2'}))>(i3=0..2)(i4=0..2)(i5=0..2))>_{3 3} (_t17EC);
      tensor[3,3] _t17F0#1 = λ(T0[],T1[3 3])<(T0 * T1_{i0,i1})>_{3 3} (time17CB,_t17EE);
      tensor[3] deltaP17F2#7 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t17F0,dPos17B4);
      tensor[3] newPos17F6#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t17EA,deltaP17F2);
      real _t17FA#4 = 0.1e-8;
      real _t17FC#1 = λ(T0[],T1[])<(T0 + T1)> (time17C2,_t17FA);
      tensor[3] _t1804#1 = <tensor[3]>[time17C2,time17C2,time17C2];
      real _t1806#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1804,newPos17F6);
      bool _t1808#1 = GT<real>(_t17FC,_t1806);
      tensor[3] _t1810#1 = <tensor[3]>[_t17FA,_t17FA,_t17FA];
      tensor[3] _t1812#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t1810,newPos17F6);
      real _t1814#1 = TensorIndex<tensor[3],[0]>(_t1812);
      real _t1816#3 = -0.e0;
      bool _t1818#1 = GT<real>(_t1814,_t1816);
      real _t1824#1 = TensorIndex<tensor[3],[1]>(_t1812);
      bool _t1828#1 = GT<real>(_t1824,_t1816);
      real _t1834#1 = TensorIndex<tensor[3],[2]>(_t1812);
      bool _t1838#1 = GT<real>(_t1834,_t1816);
      bool _t183A#1 = BAnd(_t1828,_t1838);
      bool _t183C#1 = BAnd(_t1818,_t183A);
      bool _t183E#1 = BAnd(_t1808,_t183C);
      if _t183E then goto ASSIGN2B8E else goto ASSIGN1857
    ASSIGN2B8E:  preds = [COND291C]
      femData:MeshPos nmp1851#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t17D4,_t17E4,newPos17F6);
      return nmp1851
      goto JOIN1840
    JOIN1840:  preds = [*RETURN(nmp1851)1853,JOIN2916]
      femData:MeshPos cmp291A#1 = phi(nmp28E5)
      real time1AD2#1 = phi(time1AD1)
      goto FOREACH17CD
    ASSIGN1857:  preds = [COND291C]
      int _t1856#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp17CC);
      real time1859#6 = +inf;
      int face185B#7 = -1;
      real faceTime185D#6 = -inf;
      real _t185F#15 = 0.57735026919e0;
      tensor[3] _t1867#3 = <tensor[3]>[_t185F,_t185F,_t185F];
      real _t1869#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1867,_t17EA);
      real _t186B#1 = λ(T0[],T1[])<(T0) - (T1)> (_t185F,_t1869);
      real _t1875#3 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1867,deltaP17F2);
      real _t1877#4 = λ(T0[],T1[])<(T0) / ( T1)> (_t186B,_t1875);
      real _t1879#8 = -0.1e-15;
      bool _t187B#1 = GTE<real>(_t1877,_t1879);
      bool _t1897#1 = GT<real>(time1859,_t1877);
      real _t18A3#1 = λ(T0[])<Abs(T0)> (_t1875);
      real _t18A5#4 = 0.1e-20;
      bool _t18A7#2 = GTE<real>(_t18A3,_t18A5);
      bool _t18A9#1 = BAnd(_t1897,_t18A7);
      bool _t18AB#1 = BAnd(_t187B,_t18A9);
      if _t18AB then goto ASSIGN2B0C else goto JOIN18AD
    ASSIGN2B0C:  preds = [COND18F0]
      bool _t18B0#1 = NEQ<int>(_t1856,_t17C6);
      if _t18B0 then goto JOIN18B2 else goto JOIN18B2
    JOIN18B2:  preds = [COND18EC,COND18EC]
      real faceTime18EA#1 = phi(faceTime185D,_t1877)
      int face18CF#1 = phi(_t17C6,face185B)
      real time18CC#1 = phi(_t1877,time1859)
      goto JOIN18AD
    JOIN18AD:  preds = [JOIN18B2,COND18F0]
      real faceTime18EF#2 = phi(faceTime18EA,faceTime185D)
      int face18EE#2 = phi(face18CF,face185B)
      real time18ED#3 = phi(time18CC,time1859)
      real _t18F1#50 = 0.e0;
      tensor[3] _t18F9#3 = <tensor[3]>[time17C2,_t18F1,_t18F1];
      real _t18FB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t18F9,_t17EA);
      real _t18FD#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18F1,_t18FB);
      real _t1907#3 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t18F9,deltaP17F2);
      real _t1909#4 = λ(T0[],T1[])<(T0) / ( T1)> (_t18FD,_t1907);
      bool _t190D#1 = GTE<real>(_t1909,_t1879);
      bool _t1929#1 = GT<real>(time18ED,_t1909);
      real _t1935#1 = λ(T0[])<Abs(T0)> (_t1907);
      bool _t1939#2 = GTE<real>(_t1935,_t18A5);
      bool _t193B#1 = BAnd(_t1929,_t1939);
      bool _t193D#1 = BAnd(_t190D,_t193B);
      if _t193D then goto ASSIGN1941 else goto JOIN193F
    ASSIGN1941:  preds = [COND1982]
      int _t1940#2 = 1;
      bool _t1942#1 = NEQ<int>(_t1856,_t1940);
      if _t1942 then goto JOIN1944 else goto JOIN1944
    JOIN1944:  preds = [COND197E,COND197E]
      real faceTime197C#1 = phi(faceTime18EF,_t1909)
      int face1961#1 = phi(_t1940,face18EE)
      real time195E#1 = phi(_t1909,time18ED)
      goto JOIN193F
    JOIN193F:  preds = [JOIN1944,COND1982]
      real faceTime1981#2 = phi(faceTime197C,faceTime18EF)
      int face1980#2 = phi(face1961,face18EE)
      real time197F#3 = phi(time195E,time18ED)
      real _t1987#14 = -0.1e1;
      tensor[3] _t198B#3 = <tensor[3]>[_t18F1,_t1987,_t18F1];
      real _t198D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t198B,_t17EA);
      real _t198F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18F1,_t198D);
      real _t1999#3 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t198B,deltaP17F2);
      real _t199B#4 = λ(T0[],T1[])<(T0) / ( T1)> (_t198F,_t1999);
      bool _t199F#1 = GTE<real>(_t199B,_t1879);
      bool _t19BB#1 = GT<real>(time197F,_t199B);
      real _t19C7#1 = λ(T0[])<Abs(T0)> (_t1999);
      bool _t19CB#2 = GTE<real>(_t19C7,_t18A5);
      bool _t19CD#1 = BAnd(_t19BB,_t19CB);
      bool _t19CF#1 = BAnd(_t199F,_t19CD);
      if _t19CF then goto ASSIGN19D3 else goto JOIN19D1
    ASSIGN19D3:  preds = [COND1A14]
      int _t19D2#2 = 2;
      bool _t19D4#1 = NEQ<int>(_t1856,_t19D2);
      if _t19D4 then goto JOIN19D6 else goto JOIN19D6
    JOIN19D6:  preds = [COND1A10,COND1A10]
      real faceTime1A0E#1 = phi(faceTime1981,_t199B)
      int face19F3#1 = phi(_t19D2,face1980)
      real time19F0#1 = phi(_t199B,time197F)
      goto JOIN19D1
    JOIN19D1:  preds = [JOIN19D6,COND1A14]
      real faceTime1A13#2 = phi(faceTime1A0E,faceTime1981)
      int face1A12#2 = phi(face19F3,face1980)
      real time1A11#3 = phi(time19F0,time197F)
      tensor[3] _t1A1D#3 = <tensor[3]>[_t18F1,_t18F1,time17C2];
      real _t1A1F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A1D,_t17EA);
      real _t1A21#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18F1,_t1A1F);
      real _t1A2B#3 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A1D,deltaP17F2);
      real _t1A2D#4 = λ(T0[],T1[])<(T0) / ( T1)> (_t1A21,_t1A2B);
      bool _t1A31#1 = GTE<real>(_t1A2D,_t1879);
      bool _t1A4D#1 = GT<real>(time1A11,_t1A2D);
      real _t1A59#1 = λ(T0[])<Abs(T0)> (_t1A2B);
      bool _t1A5D#2 = GTE<real>(_t1A59,_t18A5);
      bool _t1A5F#1 = BAnd(_t1A4D,_t1A5D);
      bool _t1A61#1 = BAnd(_t1A31,_t1A5F);
      if _t1A61 then goto ASSIGN1A65 else goto JOIN1A63
    ASSIGN1A65:  preds = [COND1AA6]
      int _t1A64#2 = 3;
      bool _t1A66#1 = NEQ<int>(_t1856,_t1A64);
      if _t1A66 then goto JOIN1A68 else goto JOIN1A68
    JOIN1A68:  preds = [COND1AA2,COND1AA2]
      real faceTime1AA0#1 = phi(faceTime1A13,_t1A2D)
      int face1A85#1 = phi(_t1A64,face1A12)
      real time1A82#1 = phi(_t1A2D,time1A11)
      goto JOIN1A63
    JOIN1A63:  preds = [JOIN1A68,COND1AA6]
      real faceTime1AA5#2 = phi(faceTime1AA0,faceTime1A13)
      int face1AA4#2 = phi(face1A85,face1A12)
      real time1AA3#1 = phi(time1A82,time1A11)
      bool _t1AA9#1 = NEQ<int>(face1AA4,face185B);
      if _t1AA9 then goto ASSIGN2B27 else goto ASSIGN2B25
    ASSIGN2B27:  preds = [COND1ACC]
      real _t1AAE#1 = Max<real>(time1AA3,_t18F1);
      real _t1AB0#1 = IntToReal(face1AA4);
      tensor[2] _t1AB2#1 = <tensor[2]>[_t1AAE,_t1AB0];
      goto JOIN1AAB
    JOIN1AAB:  preds = [ASSIGN1AB3,JOIN1ABB]
      tensor[2] _t1AB5#1 = phi(_t1AB2,_t1AC3)
      real eTime1ACD#3 = TensorIndex<tensor[2],[0]>(_t1AB5);
      real _t1ACF#1 = λ(T0[],T1[])<(T0 * T1)> (time17CB,eTime1ACD);
      real time1AD1#2 = λ(T0[],T1[])<(T0) - (T1)> (time17CB,_t1ACF);
      int _t1AD6#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp17CC);
      tensor[3] _t1AD8#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp17CC);
      real _t1AEF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1867,_t1AD8);
      real _t1AF1#1 = λ(T0[],T1[])<(T0) - (T1)> (_t185F,_t1AEF);
      real _t1AFD#4 = λ(T0[],T1[])<(T0) / ( T1)> (_t1AF1,_t1875);
      bool _t1B01#1 = GTE<real>(_t1AFD,_t1879);
      bool _t1B1D#1 = GT<real>(time1859,_t1AFD);
      bool _t1B2F#1 = BAnd(_t1B1D,_t18A7);
      bool _t1B31#1 = BAnd(_t1B01,_t1B2F);
      if _t1B31 then goto ASSIGN2B2E else goto JOIN1B33
    ASSIGN2B2E:  preds = [COND1B76]
      bool _t1B36#1 = NEQ<int>(_t1856,_t17C6);
      if _t1B36 then goto JOIN1B38 else goto JOIN1B38
    JOIN1B38:  preds = [COND1B72,COND1B72]
      real faceTime1B70#1 = phi(faceTime185D,_t1AFD)
      int face1B55#1 = phi(_t17C6,face185B)
      real time1B52#1 = phi(_t1AFD,time1859)
      goto JOIN1B33
    JOIN1B33:  preds = [JOIN1B38,COND1B76]
      real faceTime1B75#2 = phi(faceTime1B70,faceTime185D)
      int face1B74#2 = phi(face1B55,face185B)
      real time1B73#3 = phi(time1B52,time1859)
      real _t1B81#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t18F9,_t1AD8);
      real _t1B83#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18F1,_t1B81);
      real _t1B8F#4 = λ(T0[],T1[])<(T0) / ( T1)> (_t1B83,_t1907);
      bool _t1B93#1 = GTE<real>(_t1B8F,_t1879);
      bool _t1BAF#1 = GT<real>(time1B73,_t1B8F);
      bool _t1BC1#1 = BAnd(_t1BAF,_t1939);
      bool _t1BC3#1 = BAnd(_t1B93,_t1BC1);
      if _t1BC3 then goto ASSIGN1BC7 else goto JOIN1BC5
    ASSIGN1BC7:  preds = [COND1C08]
      int _t1BC6#2 = 1;
      bool _t1BC8#1 = NEQ<int>(_t1856,_t1BC6);
      if _t1BC8 then goto JOIN1BCA else goto JOIN1BCA
    JOIN1BCA:  preds = [COND1C04,COND1C04]
      real faceTime1C02#1 = phi(faceTime1B75,_t1B8F)
      int face1BE7#1 = phi(_t1BC6,face1B74)
      real time1BE4#1 = phi(_t1B8F,time1B73)
      goto JOIN1BC5
    JOIN1BC5:  preds = [JOIN1BCA,COND1C08]
      real faceTime1C07#2 = phi(faceTime1C02,faceTime1B75)
      int face1C06#2 = phi(face1BE7,face1B74)
      real time1C05#3 = phi(time1BE4,time1B73)
      real _t1C13#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t198B,_t1AD8);
      real _t1C15#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18F1,_t1C13);
      real _t1C21#4 = λ(T0[],T1[])<(T0) / ( T1)> (_t1C15,_t1999);
      bool _t1C25#1 = GTE<real>(_t1C21,_t1879);
      bool _t1C41#1 = GT<real>(time1C05,_t1C21);
      bool _t1C53#1 = BAnd(_t1C41,_t19CB);
      bool _t1C55#1 = BAnd(_t1C25,_t1C53);
      if _t1C55 then goto ASSIGN1C59 else goto JOIN1C57
    ASSIGN1C59:  preds = [COND1C9A]
      int _t1C58#2 = 2;
      bool _t1C5A#1 = NEQ<int>(_t1856,_t1C58);
      if _t1C5A then goto JOIN1C5C else goto JOIN1C5C
    JOIN1C5C:  preds = [COND1C96,COND1C96]
      real faceTime1C94#1 = phi(faceTime1C07,_t1C21)
      int face1C79#1 = phi(_t1C58,face1C06)
      real time1C76#1 = phi(_t1C21,time1C05)
      goto JOIN1C57
    JOIN1C57:  preds = [JOIN1C5C,COND1C9A]
      real faceTime1C99#2 = phi(faceTime1C94,faceTime1C07)
      int face1C98#2 = phi(face1C79,face1C06)
      real time1C97#3 = phi(time1C76,time1C05)
      real _t1CA5#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t1A1D,_t1AD8);
      real _t1CA7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18F1,_t1CA5);
      real _t1CB3#4 = λ(T0[],T1[])<(T0) / ( T1)> (_t1CA7,_t1A2B);
      bool _t1CB7#1 = GTE<real>(_t1CB3,_t1879);
      bool _t1CD3#1 = GT<real>(time1C97,_t1CB3);
      bool _t1CE5#1 = BAnd(_t1CD3,_t1A5D);
      bool _t1CE7#1 = BAnd(_t1CB7,_t1CE5);
      if _t1CE7 then goto ASSIGN1CEB else goto JOIN1CE9
    ASSIGN1CEB:  preds = [COND1D2C]
      int _t1CEA#2 = 3;
      bool _t1CEC#1 = NEQ<int>(_t1856,_t1CEA);
      if _t1CEC then goto JOIN1CEE else goto JOIN1CEE
    JOIN1CEE:  preds = [COND1D28,COND1D28]
      real faceTime1D26#1 = phi(faceTime1C99,_t1CB3)
      int face1D0B#1 = phi(_t1CEA,face1C98)
      real time1D08#1 = phi(_t1CB3,time1C97)
      goto JOIN1CE9
    JOIN1CE9:  preds = [JOIN1CEE,COND1D2C]
      real faceTime1D2B#2 = phi(faceTime1D26,faceTime1C99)
      int face1D2A#2 = phi(face1D0B,face1C98)
      real time1D29#1 = phi(time1D08,time1C97)
      bool _t1D2F#1 = NEQ<int>(face1D2A,face185B);
      if _t1D2F then goto ASSIGN2B48 else goto ASSIGN2B45
    ASSIGN2B48:  preds = [COND1D52]
      real _t1D34#1 = Max<real>(time1D29,_t18F1);
      real _t1D36#1 = IntToReal(face1D2A);
      tensor[2] _t1D38#1 = <tensor[2]>[_t1D34,_t1D36];
      goto JOIN1D31
    JOIN1D31:  preds = [ASSIGN1D39,JOIN1D41]
      tensor[2] _t1D3B#3 = phi(_t1D38,_t1D49)
      real _t1D56#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t1D58#6 = FloorToInt(_t1D56);
      int[2] _t1D5A#2 = nextCell417B2 (_t1D58,_t1AD6,_t17CE);
      int _t1D5E#2 = Subscript<int[2]>(_t1D5A,_t17C6);
      bool _t1D60#1 = NEQ<int>(face185B,_t1D5E);
      if _t1D60 then goto ASSIGN1D64 else goto ASSIGN28E8
    ASSIGN1D64:  preds = [COND28F1]
      string _t1D63#1 = "face ";
      string _t1D69#1 = " to ";
      int _t1D71#1 = 1;
      int _t1D73#6 = Subscript<int[2]>(_t1D5A,_t1D71);
      string _t1D75#2 = "\n";
      string _t1D77#1 = "got: ";
      tensor[4] _t1D81#7 = <tensor[4]>[time17C2,_t18F1,_t18F1,_t18F1];
      tensor[4] _t1D8B#6 = <tensor[4]>[_t18F1,time17C2,_t18F1,_t18F1];
      tensor[4] _t1D95#7 = <tensor[4]>[_t18F1,_t18F1,time17C2,_t18F1];
      real _t1D97#1 = 0.971445146547e-16;
      tensor[4] _t1D9F#4 = <tensor[4]>[_t1D97,_t18F1,_t18F1,time17C2];
      tensor[4,4] _t1DA1#4 = <tensor[4,4]>[_t1D81,_t1D8B,_t1D95,_t1D9F];
      real _t1DA9#7 = -0.57735026919e0;
      tensor[4] _t1DAB#2 = <tensor[4]>[_t185F,_t185F,_t185F,_t1DA9];
      real _t1DAD#4 = -0.333333333333e0;
      real _t1DAF#2 = 0.666666666667e0;
      real _t1DB3#2 = 0.333333333333e0;
      tensor[4] _t1DB5#3 = <tensor[4]>[_t1DAD,_t1DAF,_t1DAD,_t1DB3];
      tensor[4] _t1DBF#3 = <tensor[4]>[_t1DAD,_t1DAD,_t1DAF,_t1DB3];
      tensor[4,4] _t1DCB#4 = <tensor[4,4]>[_t1DAB,_t1DB5,_t1DBF,_t1D9F];
      tensor[4] _t1DDF#1 = <tensor[4]>[_t1DA9,_t1DA9,_t1DA9,_t185F];
      tensor[4,4] _t1DF5#4 = <tensor[4,4]>[_t1DB5,_t1DDF,_t1DBF,_t1D9F];
      tensor[4,4] _t1E1F#4 = <tensor[4,4]>[_t1DB5,_t1DBF,_t1DAB,_t1D9F];
      tensor[4,4][4] _t1E21#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4] _t1E2B#1 = <tensor[4]>[_t185F,_t1987,_t1987,time17C2];
      tensor[4] _t1E35#1 = <tensor[4]>[_t185F,time17C2,_t18F1,_t18F1];
      tensor[4] _t1E3F#1 = <tensor[4]>[_t185F,_t18F1,time17C2,_t18F1];
      tensor[4] _t1E49#10 = <tensor[4]>[_t18F1,_t18F1,_t18F1,time17C2];
      tensor[4,4] _t1E4B#4 = <tensor[4,4]>[_t1E2B,_t1E35,_t1E3F,_t1E49];
      tensor[4,4] _t1E75#12 = <tensor[4,4]>[_t1D81,_t1D8B,_t1D95,_t1E49];
      tensor[4] _t1E89#1 = <tensor[4]>[_t1987,_t18F1,_t18F1,_t18F1];
      tensor[4,4] _t1E9F#4 = <tensor[4,4]>[_t1D8B,_t1E89,_t1D95,_t1E49];
      tensor[4,4] _t1EC9#4 = <tensor[4,4]>[_t1D8B,_t1D95,_t1D81,_t1E49];
      tensor[4,4][4] _t1ECB#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4] _t1ED5#1 = <tensor[4]>[_t1987,_t1DA9,_t1987,time17C2];
      tensor[4] _t1EDF#1 = <tensor[4]>[time17C2,_t1DA9,_t18F1,_t18F1];
      tensor[4] _t1EE9#1 = <tensor[4]>[_t18F1,_t1DA9,time17C2,_t18F1];
      tensor[4,4] _t1EF5#4 = <tensor[4,4]>[_t1ED5,_t1EDF,_t1EE9,_t1E49];
      tensor[4] _t1EFF#2 = <tensor[4]>[_t18F1,_t1987,_t18F1,_t18F1];
      tensor[4,4] _t1F1F#4 = <tensor[4,4]>[_t1EFF,_t1D81,_t1D95,_t1E49];
      tensor[4,4] _t1F73#4 = <tensor[4,4]>[_t1D81,_t1D95,_t1EFF,_t1E49];
      tensor[4,4][4] _t1F75#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4] _t1F7F#1 = <tensor[4]>[_t1987,_t1987,_t185F,time17C2];
      tensor[4] _t1F89#1 = <tensor[4]>[time17C2,_t18F1,_t185F,_t18F1];
      tensor[4] _t1F93#1 = <tensor[4]>[_t18F1,time17C2,_t185F,_t18F1];
      tensor[4,4] _t1F9F#4 = <tensor[4,4]>[_t1F7F,_t1F89,_t1F93,_t1E49];
      tensor[4,4] _t1FC9#4 = <tensor[4,4]>[_t1D95,_t1D81,_t1D8B,_t1E49];
      tensor[4] _t1FDD#1 = <tensor[4]>[_t18F1,_t18F1,_t1987,_t18F1];
      tensor[4,4] _t1FF3#4 = <tensor[4,4]>[_t1D81,_t1FDD,_t1D8B,_t1E49];
      tensor[4,4][4] _t201F#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t2021#1 = <tensor[4,4][4][4]>{_t1E21,_t1ECB,_t1F75,_t201F};
      tensor[4,4][4] _t2027#1 = Subscript<tensor[4,4][4][4]>(_t2021,_t1D58);
      tensor[4,4] _t2033#1 = Subscript<tensor[4,4][4]>(_t2027,_t1D73);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t1D63,_t1D58,_t1D69,_t1D73,_t1D75,_t1D77,_t2033,_t1D75);
      tensor[4,4][4] _t20EA#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4,4][4] _t2194#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4,4][4] _t223E#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4,4][4] _t22E8#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t22EA#1 = <tensor[4,4][4][4]>{_t20EA,_t2194,_t223E,_t22E8};
      tensor[4,4][4] _t22F0#1 = Subscript<tensor[4,4][4][4]>(_t22EA,_t1D58);
      tensor[4,4] _t22FC#1 = Subscript<tensor[4,4][4]>(_t22F0,_t1D73);
      real _t22FE#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t2300#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t22FE,deltaP17F2);
      tensor[3] _t2302#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2300,_t1AD8);
      real _t2304#1 = TensorIndex<tensor[3],[0]>(_t2302);
      real _t230C#1 = TensorIndex<tensor[3],[1]>(_t2302);
      real _t2314#1 = TensorIndex<tensor[3],[2]>(_t2302);
      tensor[4] _t2318#3 = <tensor[4]>[_t2304,_t230C,_t2314,time17C2];
      tensor[4] _t231A#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t22FC,_t2318);
      real _t231C#1 = TensorIndex<tensor[4],[0]>(_t231A);
      tensor[4,4][4] _t23C6#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4,4][4] _t2470#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4,4][4] _t251A#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4,4][4] _t25C4#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t25C6#1 = <tensor[4,4][4][4]>{_t23C6,_t2470,_t251A,_t25C4};
      tensor[4,4][4] _t25CC#1 = Subscript<tensor[4,4][4][4]>(_t25C6,_t1D58);
      tensor[4,4] _t25D8#1 = Subscript<tensor[4,4][4]>(_t25CC,_t1D73);
      tensor[4] _t25F6#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t25D8,_t2318);
      real _t25F8#1 = TensorIndex<tensor[4],[1]>(_t25F6);
      tensor[4,4][4] _t26A2#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4,4][4] _t274C#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4,4][4] _t27F6#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4,4][4] _t28A0#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t28A2#1 = <tensor[4,4][4][4]>{_t26A2,_t274C,_t27F6,_t28A0};
      tensor[4,4][4] _t28A8#1 = Subscript<tensor[4,4][4][4]>(_t28A2,_t1D58);
      tensor[4,4] _t28B4#1 = Subscript<tensor[4,4][4]>(_t28A8,_t1D73);
      tensor[4] _t28D2#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t28B4,_t2318);
      real _t28D4#1 = TensorIndex<tensor[4],[2]>(_t28D2);
      tensor[3] _t28D6#1 = <tensor[3]>[_t231C,_t25F8,_t28D4];
      femData:MeshPos _t28E2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t17CE,_t1D5E,_t28D6,_t1D73);
      goto JOIN1D62
    JOIN1D62:  preds = [ASSIGN2B8B,ASSIGN2B4C]
      femData:MeshPos nmp28E5#3 = phi(_t28E2,_t28ED)
      bool _t28F3#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp28E5);
      bool _t28F5#1 = BNot(_t28F3);
      if _t28F5 then goto ASSIGN28FA else goto ASSIGN2B8C
    ASSIGN28FA:  preds = [COND2915]
      bool _t28F8#1 = true;
      goto JOIN28F7
    JOIN28F7:  preds = [ASSIGN28FA,JOIN2900]
      bool _t28F9#1 = phi(_t28F8,_t2902)
      if _t28F9 then goto RETURN(nmp28E5)2917 else goto JOIN2916
    RETURN(nmp28E5)2917:  preds = [COND2918]
      return nmp28E5
      goto JOIN2916
    JOIN2916:  preds = [*RETURN(nmp28E5)2917,COND2918]
      goto JOIN1840
    ASSIGN2B8C:  preds = [COND2915]
      bool _t28FE#1 = LT<real>(eTime1ACD,_t18F1);
      if _t28FE then goto ASSIGN2903 else goto ASSIGN2B8D
    ASSIGN2903:  preds = [COND2912]
      bool _t2901#1 = true;
      goto JOIN2900
    JOIN2900:  preds = [ASSIGN2903,JOIN2909]
      bool _t2902#1 = phi(_t2901,_t290B)
      goto JOIN28F7
    ASSIGN2B8D:  preds = [COND2912]
      bool _t2907#1 = GT<real>(eTime1ACD,time17C2);
      if _t2907 then goto ASSIGN290C else goto ASSIGN290E
    ASSIGN290C:  preds = [COND290F]
      bool _t290A#1 = true;
      goto JOIN2909
    JOIN2909:  preds = [ASSIGN290C,ASSIGN290E]
      bool _t290B#1 = phi(_t290A,_t290D)
      goto JOIN2900
    ASSIGN290E:  preds = [COND290F]
      bool _t290D#1 = LT<real>(time1AD1,timeEps17B5);
      goto JOIN2909
    ASSIGN28E8:  preds = [COND28F1]
      real _t28E7#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t28E9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t28E7,deltaP17F2);
      tensor[3] _t28EB#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t28E9,_t1AD8);
      femData:MeshPos _t28ED#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t17CE,_t28EB);
      goto JOIN1D62
    ASSIGN2B45:  preds = [COND1D52]
      bool _t1D3F#1 = EQ<real>(faceTime185D,faceTime1D2B);
      if _t1D3F then goto ASSIGN2B47 else goto ASSIGN2B46
    ASSIGN2B47:  preds = [COND1D51]
      tensor[2] _t1D46#1 = <tensor[2]>[_t1987,_t1987];
      goto JOIN1D41
    JOIN1D41:  preds = [ASSIGN2B47,ASSIGN1D4E]
      tensor[2] _t1D49#1 = phi(_t1D46,_t1D4D)
      goto JOIN1D31
    ASSIGN2B46:  preds = [COND1D51]
      real _t1D4B#1 = IntToReal(_t1856);
      tensor[2] _t1D4D#1 = <tensor[2]>[faceTime1D2B,_t1D4B];
      goto JOIN1D41
    ASSIGN2B25:  preds = [COND1ACC]
      bool _t1AB9#1 = EQ<real>(faceTime185D,faceTime1AA5);
      if _t1AB9 then goto ASSIGN2B26 else goto ASSIGN1AC6
    ASSIGN2B26:  preds = [COND1ACB]
      tensor[2] _t1AC0#1 = <tensor[2]>[_t1987,_t1987];
      goto JOIN1ABB
    JOIN1ABB:  preds = [ASSIGN2B26,ASSIGN1AC8]
      tensor[2] _t1AC3#1 = phi(_t1AC0,_t1AC7)
      goto JOIN1AAB
    ASSIGN1AC6:  preds = [COND1ACB]
      real _t1AC5#1 = IntToReal(_t1856);
      tensor[2] _t1AC7#1 = <tensor[2]>[faceTime1AA5,_t1AC5];
      goto JOIN1ABB
    ASSIGN291F:  preds = [FOREACH17CD]
      string _t291E#1 = "Took stupid way out!\n";
      Print<[string]>(_t291E);
      tensor[3] _t2922#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x17B3);
      int _t2924#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x17B3);
      femData:Mesh _t2926#2 = ExtractFem<femData:Mesh,femData:MeshPos>(x17B3);
      field _t2929#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2924,_t2926,_t2926);
      tensor[3] _t292B#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2929,_t2922);
      tensor[3] _t2931#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t292B,dPos17B4);
      femData:MeshPos cmp2933#1 = findPos17A0 (meshData17B7,_t2931);
      return cmp2933
}
## input initialization
  ENTRY16F0:  preds = []
    int timeSteps16E4#1 = 32;
    globals.timeSteps16DF = timeSteps16E4;
    real timeEps16E7#1 = 0.1e-6;
    globals.timeEps16E0 = timeEps16E7;
    real stepSize16EA#1 = 0.1e-1;
    globals.stepSize16E2 = stepSize16EA;
    int stepMax16ED#1 = 100;
    globals.stepMax16E3 = stepMax16ED;
    return
## global-variable initialization
  ENTRY2971:  preds = []
    femData:Mesh meshData293A#3 = globals.meshData16DC;
    femData:Space 0space03AB_intermedateGlobal2939#1 = globals.0space03AB_intermedateGlobal16DD;
    femData:FemFunc 0data03AD_intermedateGlobal2938#1 = globals.0data03AD_intermedateGlobal16DE;
    int _t293E#1 = 0;
    int _t2940#1 = 1;
    int _t2942#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData293A);
    int _t2944#1 = ISub(_t2942,_t2940);
    int[] _t2946#1 = Range(_t293E,_t2944);
    femData:MeshCell[] _t2948#1 = <femData:MeshCell[]>{};
  FOREACH294C:  preds = [ASSIGN2949,NEXT2951]
    foreach (_t294A in _t2946) on exit goto ASSIGN2953
      femData:MeshCell[] _t294B#1 = phi(_t2948,_t294F)
    femData:MeshCell _t294D#1 = LoadFem<femData:MeshCell>(meshData293A,_t294A);
    femData:MeshCell[] _t294F#1 = Append<femData:MeshCell>(_t294B,_t294D);
    goto FOREACH294C
  ASSIGN2953:  preds = [FOREACH294C]
    femData:Space space2952#2 = LoadFem<femData:Space>(0space03AB_intermedateGlobal2939,meshData293A);
    globals.space16F2 = space2952;
    femData:FemFunc data2955#3 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal2938,space2952);
    globals.data16F3 = data2955;
    femData:Space _t2958#2 = ExtractFem<femData:Space,femData:FemFunc>(data2955);
    femData:Mesh _t295C#4 = ExtractFem<femData:Mesh,femData:Space>(_t2958);
    field _t295E#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2)<femV(17A0, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t295C,_t2958,data2955);
    field _t296C#1 = λ(FEM(mesh_t)0,FEM(mesh_t)1,FEM(mesh_t)2)<femInvV(17A0, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t295C,_t295C,_t295C);
    field F296E#1 = λ(F0[3],F1[3])<Cmp(F0_{i0})[F1_{i0}{3}]>_{3} (_t295E,_t296C);
    globals.F16F4 = F296E;
    return
## strand
  strand gg (tensor[3] startPos297B#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY299E:  preds = []
        femData:Mesh meshData2982#1 = globals.meshData16DC;
        tensor[3][1] _t298A#1 = <tensor[3][1]>{startPos297B};
        tensor[3][] _t298C#1 = MkDynamic<tensor[3],1>(_t298A);
        tensor[3][1] _t2990#1 = <tensor[3][1]>{startPos297B};
        tensor[3][] _t2992#1 = MkDynamic<tensor[3],1>(_t2990);
        int step2996#1 = 0;
        femData:MeshPos cPos2998#1 = findPos17A0 (meshData2982,startPos297B);
        self.stream = _t298C;
        self.newStream = _t2992;
        self.step = step2996;
        self.cPos = cPos2998;
        self.altCPos = startPos297B;
        self.startPos = startPos297B;
        return
    end state init
    method update
        ENTRY2AE9:  preds = []
          femData:Mesh meshData29AA#2 = globals.meshData16DC;
          femData:FemFunc data29A9#2 = globals.data16F3;
          real stepSize29A8#3 = globals.stepSize16E2;
          int stepMax29A7#1 = globals.stepMax16E3;
          field F29A6#2 = globals.F16F4;
          tensor[3][] stream29B0#2 = self.stream;
          tensor[3][] newStream29B1#1 = self.newStream;
          int step29B2#3 = self.step;
          femData:MeshPos cPos29B3#6 = self.cPos;
          tensor[3] altCPos29B4#5 = self.altCPos;
          tensor[3] startPos29B5#1 = self.startPos;
          bool _t29BD#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos29B3);
          bool _t29BF#1 = BNot(_t29BD);
          if _t29BF then goto ASSIGN29C4 else goto ASSIGN29C7
        ASSIGN29C4:  preds = [COND29D5]
          bool _t29C2#1 = true;
          goto JOIN29C1
        JOIN29C1:  preds = [ASSIGN29C4,JOIN29CC]
          bool _t29C3#1 = phi(_t29C2,_t29CE)
          if _t29C3 then goto STABILIZE29D7 else goto JOIN29D6
        STABILIZE29D7:  preds = [COND29DD]
          stabilize
          goto JOIN29D6
        JOIN29D6:  preds = [*STABILIZE29D7,COND29DD]
          tensor[3] _t29DF#2 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos29B3);
          int _t29E1#3 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos29B3);
          femData:Mesh _t29E3#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos29B3);
          field _t29E6#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t29E1,_t29E3,_t29E3);
          tensor[3] _t29E8#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t29E6,_t29DF);
          tensor[3] _t29EE#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t29E8,altCPos29B4);
          real _t29F0#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t29EE);
          real _t29F2#1 = 0.1e-5;
          bool _t29F4#1 = GT<real>(_t29F0,_t29F2);
          if _t29F4 then goto ASSIGN29F8 else goto ASSIGN29FF
        ASSIGN29F8:  preds = [COND2A09]
          string _t29F7#1 = "Error in tracing: At step:";
          string _t29F9#1 = " with particle:";
          string _t29FB#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t29F7,step29B2,_t29F9,startPos29B5,_t29FB);
          goto JOIN29F6
        JOIN29F6:  preds = [MASSIGN29FD,MASSIGN2A08]
          real _t2A0A#1 = 0.5e0;
          real _t2A0C#2 = λ(T0[],T1[])<(T0 * T1)> (_t2A0A,stepSize29A8);
          tensor[3] _t2A0E#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F29A6,altCPos29B4);
          tensor[3] _t2A10#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2A0C,_t2A0E);
          real _t2A14#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t2A0E);
          tensor[3] altUp12A16#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t2A10,_t2A14);
          if _t29BD then goto ASSIGN2B98 else goto ASSIGN2A51
        ASSIGN2B98:  preds = [COND2A54]
          femData:MeshCell c2A24#1 = LoadFem<femData:MeshCell>(_t29E3,_t29E1);
          int _t2A29#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A24);
          femData:FuncCell _t2A2B#2 = LoadFem<femData:FuncCell>(data29A9,_t2A29);
          femData:FemFunc _t2A2F#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2A2B);
          femData:Space _t2A3A#1 = ExtractFem<femData:Space,femData:FemFunc>(_t2A2F);
          int _t2A43#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2A2B);
          field _t2A45#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2A43,_t2A3A,_t2A2F);
          tensor[3] val2A47#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2A45,_t29DF);
          real _t2A49#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (val2A47);
          tensor[3] _t2A4B#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (val2A47,_t2A49);
          goto JOIN2A1F
        JOIN2A1F:  preds = [ASSIGN2A4C,ASSIGN2A51]
          tensor[3] _t2A4E#1 = phi(_t2A4B,_t2A50)
          tensor[3] up12A55#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t2A0C,_t2A4E);
          femData:MeshPos intermed2A57#4 = posMove2937 (cPos29B3,up12A55);
          tensor[3] altIntermed2A59#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos29B4,altUp12A16);
          bool _t2A5C#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed2A57);
          bool _t2A5E#1 = BNot(_t2A5C);
          if _t2A5E then goto ASSIGN2A63 else goto ASSIGN2A65
        ASSIGN2A63:  preds = [COND2A6A]
          bool _t2A61#1 = true;
          goto JOIN2A60
        JOIN2A60:  preds = [ASSIGN2A63,ASSIGN2A69]
          bool _t2A62#1 = phi(_t2A61,_t2A68)
          if _t2A62 then goto STABILIZE2A6C else goto JOIN2A6B
        STABILIZE2A6C:  preds = [COND2A72]
          stabilize
          goto JOIN2A6B
        JOIN2A6B:  preds = [*STABILIZE2A6C,COND2A72]
          tensor[3] _t2A73#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (F29A6,altIntermed2A59);
          tensor[3] _t2A75#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize29A8,_t2A73);
          real _t2A79#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t2A73);
          tensor[3] altUp22A7B#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t2A75,_t2A79);
          if _t2A5C then goto ASSIGN2A82 else goto ASSIGN2AB2
        ASSIGN2A82:  preds = [COND2AB5]
          femData:Mesh _t2A81#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed2A57);
          int _t2A83#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed2A57);
          femData:MeshCell c2A85#1 = LoadFem<femData:MeshCell>(_t2A81,_t2A83);
          tensor[3] ref2A87#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed2A57);
          int _t2A8A#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A85);
          femData:FuncCell _t2A8C#2 = LoadFem<femData:FuncCell>(data29A9,_t2A8A);
          femData:FemFunc _t2A90#2 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2A8C);
          femData:Space _t2A9B#1 = ExtractFem<femData:Space,femData:FemFunc>(_t2A90);
          int _t2AA4#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2A8C);
          field _t2AA6#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2AA4,_t2A9B,_t2A90);
          tensor[3] val2AA8#2 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2AA6,ref2A87);
          real _t2AAA#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (val2AA8);
          tensor[3] _t2AAC#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (val2AA8,_t2AAA);
          goto JOIN2A80
        JOIN2A80:  preds = [ASSIGN2AAD,ASSIGN2AB2]
          tensor[3] _t2AAF#1 = phi(_t2AAC,_t2AB1)
          tensor[3] up22AB6#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize29A8,_t2AAF);
          femData:MeshPos cPos2AB8#6 = posMove2937 (cPos29B3,up22AB6);
          tensor[3] altCPos2ABA#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos29B4,altUp22A7B);
          bool _t2ABC#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2AB8);
          bool _t2ABE#1 = BNot(_t2ABC);
          if _t2ABE then goto MASSIGN2AC1 else goto JOIN2AC0
        MASSIGN2AC1:  preds = [COND2AC8]
          Print<[tensor[3][]]>(stream29B0);
          self.cPos = cPos2AB8;
          self.altCPos = altCPos2ABA;
          stabilize
          goto JOIN2AC0
        JOIN2AC0:  preds = [*STABILIZE2AC2,COND2AC8]
          tensor[3] _t2ACA#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2AB8);
          int _t2ACC#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2AB8);
          femData:Mesh _t2ACE#2 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2AB8);
          field _t2AD1#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2)<femV(noFunc, 0, 1, 2)_{i0}⊛Basis()>_{3} (_t2ACC,_t2ACE,_t2ACE);
          tensor[3] _t2AD3#1 = λ(F0[3],T1[3])<Probe(F0_{i0},T1)>_{3} (_t2AD1,_t2ACA);
          tensor[3][1] _t2AD9#1 = <tensor[3][1]>{_t2AD3};
          tensor[3][] _t2ADB#1 = MkDynamic<tensor[3],1>(_t2AD9);
          tensor[3][] stream2ADD#1 = Concat<tensor[3]>(stream29B0,_t2ADB);
          tensor[3][1] _t2ADF#1 = <tensor[3][1]>{altCPos2ABA};
          tensor[3][] _t2AE1#1 = MkDynamic<tensor[3],1>(_t2ADF);
          tensor[3][] newStream2AE3#1 = Concat<tensor[3]>(newStream29B1,_t2AE1);
          int _t2AE5#1 = 1;
          int step2AE7#1 = IAdd(step29B2,_t2AE5);
          self.stream = stream2ADD;
          self.newStream = newStream2AE3;
          self.step = step2AE7;
          self.cPos = cPos2AB8;
          self.altCPos = altCPos2ABA;
          active
        ASSIGN2AB2:  preds = [COND2AB5]
          tensor[3] _t2AB1#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2A80
        ASSIGN2A65:  preds = [COND2A6A]
          femData:MeshPos _t2A64#1 = findPos17A0 (meshData29AA,altIntermed2A59);
          bool _t2A66#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t2A64);
          bool _t2A68#1 = BNot(_t2A66);
          goto JOIN2A60
        ASSIGN2A51:  preds = [COND2A54]
          tensor[3] _t2A50#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2A1F
        ASSIGN29FF:  preds = [COND2A09]
          string _t29FE#1 = "fine in cell:";
          femData:MeshCell _t2A04#1 = LoadFem<femData:MeshCell>(_t29E3,_t29E1);
          string _t2A06#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t29FE,_t2A04,_t2A06);
          goto JOIN29F6
        ASSIGN29C7:  preds = [COND29D5]
          femData:MeshPos _t29C6#1 = findPos17A0 (meshData29AA,altCPos29B4);
          bool _t29C8#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t29C6);
          bool _t29CA#1 = BNot(_t29C8);
          if _t29CA then goto ASSIGN29CF else goto ASSIGN29D1
        ASSIGN29CF:  preds = [COND29D2]
          bool _t29CD#1 = true;
          goto JOIN29CC
        JOIN29CC:  preds = [ASSIGN29CF,ASSIGN29D1]
          bool _t29CE#1 = phi(_t29CD,_t29D0)
          goto JOIN29C1
        ASSIGN29D1:  preds = [COND29D2]
          bool _t29D0#1 = EQ<int>(step29B2,stepMax29A7);
          goto JOIN29CC
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY2979:  preds = []
      tensor[3][] startPoints2973#1 = globals.startPoints16E1;
    FOREACH2976:  preds = [ASSIGN2974,NEXT2978]
      foreach (x2975 in startPoints2973) on exit goto RETURN297A
      new gg(x2975);
      goto FOREACH2976
    RETURN297A:  preds = [FOREACH2976]
      return
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData16DC (meshData) = <no-default>
  input 0space03AB_intermedateGlobal16DD (space) = <no-default>
  input 0data03AD_intermedateGlobal16DE (data) = <no-default>
  input timeSteps16DF (timeSteps) = <default>
  input timeEps16E0 (timeEps) = <default>
  input startPoints16E1 (startPoints) = <no-default>
  input stepSize16E2 (stepSize) = <default>
  input stepMax16E3 (stepMax) = <default>
  global femData:FemFunc data16F3
## functions
  function femData:MeshPos findPos17A0 (femData:Mesh mesh16F5#23, tensor[3] pos16F6#7) {
    ENTRY179F:  preds = []
      real _t16F7#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16FD#6 = <tensor[3]>[_t16F7,_t16F7,_t16F7];
      int newtonInt16FF#1 = 0;
      int[] yayCells1709#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh16F5,pos16F6);
    FOREACH170C:  preds = [ASSIGN170A,NEXT1796]
      foreach (cellItter170B in yayCells1709) on exit goto ASSIGN1798
      int _t172B#1 = 16;
      int[] _t172D#1 = Range(newtonInt16FF,_t172B);
    FOREACH1731:  preds = [ASSIGN2AF3,NEXT1795]
      foreach (newtonItter172F in _t172D) on exit goto NEXT1796
        tensor[3] xn1730#8 = phi(xn16FD,xn173A)
      tensor[3] xn173A#2 = λ(T0[3],INT1,FEM(mesh_t)2,FEM(mesh_t)3,T4[3],T5[3],INT6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn1730,cellItter170B,mesh16F5,mesh16F5,xn16FD,pos16F6,cellItter170B,mesh16F5,mesh16F5,xn1730);
      real _t173C#2 = 0.1e-7;
      real _t1740#1 = λ(T0[],T1[])<(T0 * T1)> (_t173C,_t173C);
      real _t1742#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],INT9,FEM(mesh_t)10,FEM(mesh_t)11,T12[3],T13[3],INT14,FEM(mesh_t)15,FEM(mesh_t)16,T17[3])<Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i11=0..2)<(((Σ(i19=0..2)(i20=0..2)<((ϵ_{ii19,ii20,ii0} * Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i22}⊛Basis()dx_{i19},T3) * Σ(i23=0..2)<((ϵ_{ii22,ii23,ii11} * Probe(femV(noFunc, 0, 1, 1)_{i23}⊛Basis()dx_{i20},T3)))>(i23=0..2)))>(i22=0..2)))>(i19=0..2)(i20=0..2)) / ( (2 * Σ(i16=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'0'},T3) * Σ(i17=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i17}⊛Basis()dx_{'1'},T3) * Σ(i18=0..2)<((ϵ_{ii16,ii17,ii18} * Probe(femV(noFunc, 0, 1, 1)_{i18}⊛Basis()dx_{'2'},T3)))>(i18=0..2)))>(i17=0..2)))>(i16=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis(),T8)) - (T4_{i11})))>(i11=0..2)))>(i0=0..2)> (cellItter170B,mesh16F5,mesh16F5,xn16FD,pos16F6,cellItter170B,mesh16F5,mesh16F5,xn1730,cellItter170B,mesh16F5,mesh16F5,xn16FD,pos16F6,cellItter170B,mesh16F5,mesh16F5,xn1730);
      bool _t1744#1 = GTE<real>(_t1740,_t1742);
      if _t1744 then goto ASSIGN1748 else goto JOIN1746
    ASSIGN1748:  preds = [COND1794]
      real _t1747#4 = 0.1e1;
      real _t1749#4 = 0.1e-8;
      real _t174B#1 = λ(T0[],T1[])<(T0 + T1)> (_t1747,_t1749);
      tensor[3] _t1753#1 = <tensor[3]>[_t1747,_t1747,_t1747];
      real _t1755#1 = λ(T0[3],T1[3],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],INT7,FEM(mesh_t)8,FEM(mesh_t)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t1753,xn1730,cellItter170B,mesh16F5,mesh16F5,xn16FD,pos16F6,cellItter170B,mesh16F5,mesh16F5,xn1730);
      bool _t1757#1 = GT<real>(_t174B,_t1755);
      tensor[3] _t175F#1 = <tensor[3]>[_t1749,_t1749,_t1749];
      tensor[3] _t1761#3 = λ(T0[3],T1[3],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],INT7,FEM(mesh_t)8,FEM(mesh_t)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t175F,xn1730,cellItter170B,mesh16F5,mesh16F5,xn16FD,pos16F6,cellItter170B,mesh16F5,mesh16F5,xn1730);
      real _t1763#1 = TensorIndex<tensor[3],[0]>(_t1761);
      real _t1765#3 = -0.e0;
      bool _t1767#1 = GT<real>(_t1763,_t1765);
      real _t1773#1 = TensorIndex<tensor[3],[1]>(_t1761);
      bool _t1777#1 = GT<real>(_t1773,_t1765);
      real _t1783#1 = TensorIndex<tensor[3],[2]>(_t1761);
      bool _t1787#1 = GT<real>(_t1783,_t1765);
      bool _t1789#1 = BAnd(_t1777,_t1787);
      bool _t178B#1 = BAnd(_t1767,_t1789);
      bool _t178D#1 = BAnd(_t1757,_t178B);
      if _t178D then goto ASSIGN2AFC else goto JOIN178F
    ASSIGN2AFC:  preds = [COND1793]
      femData:MeshPos _t1790#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16F5,cellItter170B,xn173A,pos16F6);
      return _t1790
      goto JOIN178F
    JOIN178F:  preds = [*RETURN(_t1790)1792,COND1793]
      goto JOIN1746
    JOIN1746:  preds = [JOIN178F,COND1794]
      goto FOREACH1731
    NEXT1796:  preds = [FOREACH1731]
      goto FOREACH170C
    ASSIGN1798:  preds = [FOREACH170C]
      string _t1797#1 = "Bad end 2";
      string _t1799#1 = "\n";
      Print<[string,string]>(_t1797,_t1799);
      femData:MeshPos _t179C#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16F5);
      return _t179C
}
  function int[2] nextCell417B2 (int faceIdx17A1#1, int cell17A2#1, femData:Mesh mesh17A3#1) {
    ENTRY17B1:  preds = []
      int _t17A4#1 = 8;
      int _t17A6#1 = IMul(cell17A2,_t17A4);
      int _t17A8#1 = 2;
      int _t17AA#1 = IMul(faceIdx17A1,_t17A8);
      int _t17AC#1 = IAdd(_t17A6,_t17AA);
      int[2] _t17AE#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh17A3,_t17AC);
      return _t17AE
}
  function femData:MeshPos posMove2937 (femData:MeshPos x17B3#6, tensor[3] dPos17B4#18) {
    ENTRY2936:  preds = []
      femData:Mesh meshData17B7#1 = globals.meshData16DC;
      int timeSteps17B6#1 = globals.timeSteps16DF;
      real timeEps17B5#1 = globals.timeEps16E0;
      bool _t17BB#1 = ExtractFemItem<bool,Valid(MeshPos)>(x17B3);
      bool _t17BD#1 = BNot(_t17BB);
      if _t17BD then goto RETURN(x17B3)17C0 else goto JOIN17BF
    RETURN(x17B3)17C0:  preds = [COND17C1]
      return x17B3
      goto JOIN17BF
    JOIN17BF:  preds = [*RETURN(x17B3)17C0,COND17C1]
      real time17C2#23 = 0.1e1;
      int _t17C6#6 = 0;
      int[] _t17C8#1 = Range(_t17C6,timeSteps17B6);
    FOREACH17CD:  preds = [ASSIGN17C9,NEXT291D]
      foreach (i17CA in _t17C8) on exit goto ASSIGN291F
        femData:MeshPos cmp17CC#6 = phi(x17B3,cmp291A)
        real time17CB#19 = phi(time17C2,time1AD2)
      femData:Mesh _t17CE#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp17CC);
      int _t17D0#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp17CC);
      femData:MeshCell _t17D2#2 = LoadFem<femData:MeshCell>(_t17CE,_t17D0);
      femData:Mesh _t17D4#35 = ExtractFem<femData:Mesh,femData:MeshCell>(_t17D2);
      int _t17E4#18 = ExtractFemItem<int,CellIndex(MeshCell)>(_t17D2);
      tensor[3] _t17EA#24 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp17CC);
      tensor[3] newPos17F6#1 = λ(T0[3],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3])<(T0_{i0} + (T1 * Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i10},T0) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T0)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i7}⊛Basis()dx_{'0'},T0) * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'1'},T0) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'2'},T0)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * T6_{i2}))>(i2=0..2)))>_{3} (_t17EA,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      real _t17FA#4 = 0.1e-8;
      real _t17FC#1 = λ(T0[],T1[])<(T0 + T1)> (time17C2,_t17FA);
      tensor[3] _t1804#1 = <tensor[3]>[time17C2,time17C2,time17C2];
      real _t1806#1 = λ(T0[3],T1[3],T2[],INT3,FEM(mesh_t)4,FEM(mesh_t)5,T6[3],T7[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (T2 * Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i13}⊛Basis()dx_{i10},T1) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 3, 4, 4)_{i14}⊛Basis()dx_{i11},T1)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i7}⊛Basis()dx_{'0'},T1) * Σ(i8=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i8}⊛Basis()dx_{'1'},T1) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 3, 4, 4)_{i9}⊛Basis()dx_{'2'},T1)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * T7_{i2}))>(i2=0..2)))))>(i0=0..2)> (_t1804,_t17EA,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1808#1 = GT<real>(_t17FC,_t1806);
      tensor[3] _t1810#1 = <tensor[3]>[_t17FA,_t17FA,_t17FA];
      tensor[3] _t1812#3 = λ(T0[3],T1[3],T2[],INT3,FEM(mesh_t)4,FEM(mesh_t)5,T6[3],T7[3])<(T0_{i0} + T1_{i0} + (T2 * Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i14}⊛Basis()dx_{i11},T1) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 3, 4, 4)_{i15}⊛Basis()dx_{i12},T1)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i8}⊛Basis()dx_{'0'},T1) * Σ(i9=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i9}⊛Basis()dx_{'1'},T1) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 3, 4, 4)_{i10}⊛Basis()dx_{'2'},T1)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * T7_{i3}))>(i3=0..2)))>_{3} (_t1810,_t17EA,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      real _t1814#1 = TensorIndex<tensor[3],[0]>(_t1812);
      real _t1816#3 = -0.e0;
      bool _t1818#1 = GT<real>(_t1814,_t1816);
      real _t1824#1 = TensorIndex<tensor[3],[1]>(_t1812);
      bool _t1828#1 = GT<real>(_t1824,_t1816);
      real _t1834#1 = TensorIndex<tensor[3],[2]>(_t1812);
      bool _t1838#1 = GT<real>(_t1834,_t1816);
      bool _t183A#1 = BAnd(_t1828,_t1838);
      bool _t183C#1 = BAnd(_t1818,_t183A);
      bool _t183E#1 = BAnd(_t1808,_t183C);
      if _t183E then goto ASSIGN2B8E else goto ASSIGN1857
    ASSIGN2B8E:  preds = [COND291C]
      femData:MeshPos nmp1851#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t17D4,_t17E4,newPos17F6);
      return nmp1851
      goto JOIN1840
    JOIN1840:  preds = [*RETURN(nmp1851)1853,JOIN2916]
      femData:MeshPos cmp291A#1 = phi(nmp28E5)
      real time1AD2#1 = phi(time1AD1)
      goto FOREACH17CD
    ASSIGN1857:  preds = [COND291C]
      int _t1856#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp17CC);
      real time1859#6 = +inf;
      int face185B#7 = -1;
      real faceTime185D#6 = -inf;
      real _t185F#15 = 0.57735026919e0;
      tensor[3] _t1867#5 = <tensor[3]>[_t185F,_t185F,_t185F];
      real _t1877#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T2) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T2)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T2) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T2) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T2)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t185F,_t1867,_t17EA,_t1867,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      real _t1879#8 = -0.1e-15;
      bool _t187B#1 = GTE<real>(_t1877,_t1879);
      bool _t1897#1 = GT<real>(time1859,_t1877);
      real _t18A3#1 = λ(T0[3],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3])<Abs((T1 * Σ(i0=0..2)<((T0_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i9},T5) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i10},T5)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i6}⊛Basis()dx_{'0'},T5) * Σ(i7=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i7}⊛Basis()dx_{'1'},T5) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'2'},T5)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T6_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t1867,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      real _t18A5#4 = 0.1e-20;
      bool _t18A7#2 = GTE<real>(_t18A3,_t18A5);
      bool _t18A9#1 = BAnd(_t1897,_t18A7);
      bool _t18AB#1 = BAnd(_t187B,_t18A9);
      if _t18AB then goto ASSIGN2B0C else goto JOIN18AD
    ASSIGN2B0C:  preds = [COND18F0]
      bool _t18B0#1 = NEQ<int>(_t1856,_t17C6);
      if _t18B0 then goto JOIN18B2 else goto JOIN18B2
    JOIN18B2:  preds = [COND18EC,COND18EC]
      real faceTime18EA#1 = phi(faceTime185D,_t1877)
      int face18CF#1 = phi(_t17C6,face185B)
      real time18CC#1 = phi(_t1877,time1859)
      goto JOIN18AD
    JOIN18AD:  preds = [JOIN18B2,COND18F0]
      real faceTime18EF#2 = phi(faceTime18EA,faceTime185D)
      int face18EE#2 = phi(face18CF,face185B)
      real time18ED#3 = phi(time18CC,time1859)
      real _t18F1#50 = 0.e0;
      tensor[3] _t18F9#5 = <tensor[3]>[time17C2,_t18F1,_t18F1];
      real _t1909#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T2) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T2)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T2) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T2) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T2)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t18F9,_t17EA,_t18F9,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t190D#1 = GTE<real>(_t1909,_t1879);
      bool _t1929#1 = GT<real>(time18ED,_t1909);
      real _t1935#1 = λ(T0[3],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3])<Abs((T1 * Σ(i0=0..2)<((T0_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i9},T5) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i10},T5)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i6}⊛Basis()dx_{'0'},T5) * Σ(i7=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i7}⊛Basis()dx_{'1'},T5) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'2'},T5)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T6_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F9,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1939#2 = GTE<real>(_t1935,_t18A5);
      bool _t193B#1 = BAnd(_t1929,_t1939);
      bool _t193D#1 = BAnd(_t190D,_t193B);
      if _t193D then goto ASSIGN1941 else goto JOIN193F
    ASSIGN1941:  preds = [COND1982]
      int _t1940#2 = 1;
      bool _t1942#1 = NEQ<int>(_t1856,_t1940);
      if _t1942 then goto JOIN1944 else goto JOIN1944
    JOIN1944:  preds = [COND197E,COND197E]
      real faceTime197C#1 = phi(faceTime18EF,_t1909)
      int face1961#1 = phi(_t1940,face18EE)
      real time195E#1 = phi(_t1909,time18ED)
      goto JOIN193F
    JOIN193F:  preds = [JOIN1944,COND1982]
      real faceTime1981#2 = phi(faceTime197C,faceTime18EF)
      int face1980#2 = phi(face1961,face18EE)
      real time197F#3 = phi(time195E,time18ED)
      real _t1987#14 = -0.1e1;
      tensor[3] _t198B#5 = <tensor[3]>[_t18F1,_t1987,_t18F1];
      real _t199B#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T2) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T2)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T2) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T2) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T2)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t198B,_t17EA,_t198B,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t199F#1 = GTE<real>(_t199B,_t1879);
      bool _t19BB#1 = GT<real>(time197F,_t199B);
      real _t19C7#1 = λ(T0[3],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3])<Abs((T1 * Σ(i0=0..2)<((T0_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i9},T5) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i10},T5)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i6}⊛Basis()dx_{'0'},T5) * Σ(i7=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i7}⊛Basis()dx_{'1'},T5) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'2'},T5)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T6_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t198B,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t19CB#2 = GTE<real>(_t19C7,_t18A5);
      bool _t19CD#1 = BAnd(_t19BB,_t19CB);
      bool _t19CF#1 = BAnd(_t199F,_t19CD);
      if _t19CF then goto ASSIGN19D3 else goto JOIN19D1
    ASSIGN19D3:  preds = [COND1A14]
      int _t19D2#2 = 2;
      bool _t19D4#1 = NEQ<int>(_t1856,_t19D2);
      if _t19D4 then goto JOIN19D6 else goto JOIN19D6
    JOIN19D6:  preds = [COND1A10,COND1A10]
      real faceTime1A0E#1 = phi(faceTime1981,_t199B)
      int face19F3#1 = phi(_t19D2,face1980)
      real time19F0#1 = phi(_t199B,time197F)
      goto JOIN19D1
    JOIN19D1:  preds = [JOIN19D6,COND1A14]
      real faceTime1A13#2 = phi(faceTime1A0E,faceTime1981)
      int face1A12#2 = phi(face19F3,face1980)
      real time1A11#3 = phi(time19F0,time197F)
      tensor[3] _t1A1D#5 = <tensor[3]>[_t18F1,_t18F1,time17C2];
      real _t1A2D#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T2) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T2)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T2) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T2) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T2)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t1A1D,_t17EA,_t1A1D,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1A31#1 = GTE<real>(_t1A2D,_t1879);
      bool _t1A4D#1 = GT<real>(time1A11,_t1A2D);
      real _t1A59#1 = λ(T0[3],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3])<Abs((T1 * Σ(i0=0..2)<((T0_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i9},T5) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i10},T5)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i6}⊛Basis()dx_{'0'},T5) * Σ(i7=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i7}⊛Basis()dx_{'1'},T5) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'2'},T5)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T6_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t1A1D,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1A5D#2 = GTE<real>(_t1A59,_t18A5);
      bool _t1A5F#1 = BAnd(_t1A4D,_t1A5D);
      bool _t1A61#1 = BAnd(_t1A31,_t1A5F);
      if _t1A61 then goto ASSIGN1A65 else goto JOIN1A63
    ASSIGN1A65:  preds = [COND1AA6]
      int _t1A64#2 = 3;
      bool _t1A66#1 = NEQ<int>(_t1856,_t1A64);
      if _t1A66 then goto JOIN1A68 else goto JOIN1A68
    JOIN1A68:  preds = [COND1AA2,COND1AA2]
      real faceTime1AA0#1 = phi(faceTime1A13,_t1A2D)
      int face1A85#1 = phi(_t1A64,face1A12)
      real time1A82#1 = phi(_t1A2D,time1A11)
      goto JOIN1A63
    JOIN1A63:  preds = [JOIN1A68,COND1AA6]
      real faceTime1AA5#2 = phi(faceTime1AA0,faceTime1A13)
      int face1AA4#2 = phi(face1A85,face1A12)
      real time1AA3#1 = phi(time1A82,time1A11)
      bool _t1AA9#1 = NEQ<int>(face1AA4,face185B);
      if _t1AA9 then goto ASSIGN2B27 else goto ASSIGN2B25
    ASSIGN2B27:  preds = [COND1ACC]
      real _t1AAE#1 = Max<real>(time1AA3,_t18F1);
      real _t1AB0#1 = IntToReal(face1AA4);
      tensor[2] _t1AB2#1 = <tensor[2]>[_t1AAE,_t1AB0];
      goto JOIN1AAB
    JOIN1AAB:  preds = [ASSIGN1AB3,JOIN1ABB]
      tensor[2] _t1AB5#1 = phi(_t1AB2,_t1AC3)
      real eTime1ACD#3 = TensorIndex<tensor[2],[0]>(_t1AB5);
      real time1AD1#2 = λ(T0[],T1[],T2[])<(T0) - ((T0 * T2))> (time17CB,time17CB,eTime1ACD);
      int _t1AD6#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp17CC);
      tensor[3] _t1AD8#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp17CC);
      real _t1AFD#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T8) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T8)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T8) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T8) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T8)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t185F,_t1867,_t1AD8,_t1867,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1B01#1 = GTE<real>(_t1AFD,_t1879);
      bool _t1B1D#1 = GT<real>(time1859,_t1AFD);
      bool _t1B2F#1 = BAnd(_t1B1D,_t18A7);
      bool _t1B31#1 = BAnd(_t1B01,_t1B2F);
      if _t1B31 then goto ASSIGN2B2E else goto JOIN1B33
    ASSIGN2B2E:  preds = [COND1B76]
      bool _t1B36#1 = NEQ<int>(_t1856,_t17C6);
      if _t1B36 then goto JOIN1B38 else goto JOIN1B38
    JOIN1B38:  preds = [COND1B72,COND1B72]
      real faceTime1B70#1 = phi(faceTime185D,_t1AFD)
      int face1B55#1 = phi(_t17C6,face185B)
      real time1B52#1 = phi(_t1AFD,time1859)
      goto JOIN1B33
    JOIN1B33:  preds = [JOIN1B38,COND1B76]
      real faceTime1B75#2 = phi(faceTime1B70,faceTime185D)
      int face1B74#2 = phi(face1B55,face185B)
      real time1B73#3 = phi(time1B52,time1859)
      real _t1B8F#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T8) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T8)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T8) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T8) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T8)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t18F9,_t1AD8,_t18F9,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1B93#1 = GTE<real>(_t1B8F,_t1879);
      bool _t1BAF#1 = GT<real>(time1B73,_t1B8F);
      bool _t1BC1#1 = BAnd(_t1BAF,_t1939);
      bool _t1BC3#1 = BAnd(_t1B93,_t1BC1);
      if _t1BC3 then goto ASSIGN1BC7 else goto JOIN1BC5
    ASSIGN1BC7:  preds = [COND1C08]
      int _t1BC6#2 = 1;
      bool _t1BC8#1 = NEQ<int>(_t1856,_t1BC6);
      if _t1BC8 then goto JOIN1BCA else goto JOIN1BCA
    JOIN1BCA:  preds = [COND1C04,COND1C04]
      real faceTime1C02#1 = phi(faceTime1B75,_t1B8F)
      int face1BE7#1 = phi(_t1BC6,face1B74)
      real time1BE4#1 = phi(_t1B8F,time1B73)
      goto JOIN1BC5
    JOIN1BC5:  preds = [JOIN1BCA,COND1C08]
      real faceTime1C07#2 = phi(faceTime1C02,faceTime1B75)
      int face1C06#2 = phi(face1BE7,face1B74)
      real time1C05#3 = phi(time1BE4,time1B73)
      real _t1C21#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T8) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T8)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T8) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T8) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T8)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t198B,_t1AD8,_t198B,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1C25#1 = GTE<real>(_t1C21,_t1879);
      bool _t1C41#1 = GT<real>(time1C05,_t1C21);
      bool _t1C53#1 = BAnd(_t1C41,_t19CB);
      bool _t1C55#1 = BAnd(_t1C25,_t1C53);
      if _t1C55 then goto ASSIGN1C59 else goto JOIN1C57
    ASSIGN1C59:  preds = [COND1C9A]
      int _t1C58#2 = 2;
      bool _t1C5A#1 = NEQ<int>(_t1856,_t1C58);
      if _t1C5A then goto JOIN1C5C else goto JOIN1C5C
    JOIN1C5C:  preds = [COND1C96,COND1C96]
      real faceTime1C94#1 = phi(faceTime1C07,_t1C21)
      int face1C79#1 = phi(_t1C58,face1C06)
      real time1C76#1 = phi(_t1C21,time1C05)
      goto JOIN1C57
    JOIN1C57:  preds = [JOIN1C5C,COND1C9A]
      real faceTime1C99#2 = phi(faceTime1C94,faceTime1C07)
      int face1C98#2 = phi(face1C79,face1C06)
      real time1C97#3 = phi(time1C76,time1C05)
      real _t1CB3#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T8) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T8)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T8) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T8) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T8)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t1A1D,_t1AD8,_t1A1D,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1CB7#1 = GTE<real>(_t1CB3,_t1879);
      bool _t1CD3#1 = GT<real>(time1C97,_t1CB3);
      bool _t1CE5#1 = BAnd(_t1CD3,_t1A5D);
      bool _t1CE7#1 = BAnd(_t1CB7,_t1CE5);
      if _t1CE7 then goto ASSIGN1CEB else goto JOIN1CE9
    ASSIGN1CEB:  preds = [COND1D2C]
      int _t1CEA#2 = 3;
      bool _t1CEC#1 = NEQ<int>(_t1856,_t1CEA);
      if _t1CEC then goto JOIN1CEE else goto JOIN1CEE
    JOIN1CEE:  preds = [COND1D28,COND1D28]
      real faceTime1D26#1 = phi(faceTime1C99,_t1CB3)
      int face1D0B#1 = phi(_t1CEA,face1C98)
      real time1D08#1 = phi(_t1CB3,time1C97)
      goto JOIN1CE9
    JOIN1CE9:  preds = [JOIN1CEE,COND1D2C]
      real faceTime1D2B#2 = phi(faceTime1D26,faceTime1C99)
      int face1D2A#2 = phi(face1D0B,face1C98)
      real time1D29#1 = phi(time1D08,time1C97)
      bool _t1D2F#1 = NEQ<int>(face1D2A,face185B);
      if _t1D2F then goto ASSIGN2B48 else goto ASSIGN2B45
    ASSIGN2B48:  preds = [COND1D52]
      real _t1D34#1 = Max<real>(time1D29,_t18F1);
      real _t1D36#1 = IntToReal(face1D2A);
      tensor[2] _t1D38#1 = <tensor[2]>[_t1D34,_t1D36];
      goto JOIN1D31
    JOIN1D31:  preds = [ASSIGN1D39,JOIN1D41]
      tensor[2] _t1D3B#3 = phi(_t1D38,_t1D49)
      real _t1D56#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t1D58#6 = FloorToInt(_t1D56);
      int[2] _t1D5A#2 = nextCell417B2 (_t1D58,_t1AD6,_t17CE);
      int _t1D5E#2 = Subscript<int[2]>(_t1D5A,_t17C6);
      bool _t1D60#1 = NEQ<int>(face185B,_t1D5E);
      if _t1D60 then goto ASSIGN1D64 else goto ASSIGN28E8
    ASSIGN1D64:  preds = [COND28F1]
      string _t1D63#1 = "face ";
      string _t1D69#1 = " to ";
      int _t1D71#1 = 1;
      int _t1D73#6 = Subscript<int[2]>(_t1D5A,_t1D71);
      string _t1D75#2 = "\n";
      string _t1D77#1 = "got: ";
      tensor[4] _t1D81#7 = <tensor[4]>[time17C2,_t18F1,_t18F1,_t18F1];
      tensor[4] _t1D8B#6 = <tensor[4]>[_t18F1,time17C2,_t18F1,_t18F1];
      tensor[4] _t1D95#7 = <tensor[4]>[_t18F1,_t18F1,time17C2,_t18F1];
      real _t1D97#1 = 0.971445146547e-16;
      tensor[4] _t1D9F#4 = <tensor[4]>[_t1D97,_t18F1,_t18F1,time17C2];
      tensor[4,4] _t1DA1#4 = <tensor[4,4]>[_t1D81,_t1D8B,_t1D95,_t1D9F];
      real _t1DA9#7 = -0.57735026919e0;
      tensor[4] _t1DAB#2 = <tensor[4]>[_t185F,_t185F,_t185F,_t1DA9];
      real _t1DAD#4 = -0.333333333333e0;
      real _t1DAF#2 = 0.666666666667e0;
      real _t1DB3#2 = 0.333333333333e0;
      tensor[4] _t1DB5#3 = <tensor[4]>[_t1DAD,_t1DAF,_t1DAD,_t1DB3];
      tensor[4] _t1DBF#3 = <tensor[4]>[_t1DAD,_t1DAD,_t1DAF,_t1DB3];
      tensor[4,4] _t1DCB#4 = <tensor[4,4]>[_t1DAB,_t1DB5,_t1DBF,_t1D9F];
      tensor[4] _t1DDF#1 = <tensor[4]>[_t1DA9,_t1DA9,_t1DA9,_t185F];
      tensor[4,4] _t1DF5#4 = <tensor[4,4]>[_t1DB5,_t1DDF,_t1DBF,_t1D9F];
      tensor[4,4] _t1E1F#4 = <tensor[4,4]>[_t1DB5,_t1DBF,_t1DAB,_t1D9F];
      tensor[4,4][4] _t1E21#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4] _t1E2B#1 = <tensor[4]>[_t185F,_t1987,_t1987,time17C2];
      tensor[4] _t1E35#1 = <tensor[4]>[_t185F,time17C2,_t18F1,_t18F1];
      tensor[4] _t1E3F#1 = <tensor[4]>[_t185F,_t18F1,time17C2,_t18F1];
      tensor[4] _t1E49#10 = <tensor[4]>[_t18F1,_t18F1,_t18F1,time17C2];
      tensor[4,4] _t1E4B#4 = <tensor[4,4]>[_t1E2B,_t1E35,_t1E3F,_t1E49];
      tensor[4,4] _t1E75#12 = <tensor[4,4]>[_t1D81,_t1D8B,_t1D95,_t1E49];
      tensor[4] _t1E89#1 = <tensor[4]>[_t1987,_t18F1,_t18F1,_t18F1];
      tensor[4,4] _t1E9F#4 = <tensor[4,4]>[_t1D8B,_t1E89,_t1D95,_t1E49];
      tensor[4,4] _t1EC9#4 = <tensor[4,4]>[_t1D8B,_t1D95,_t1D81,_t1E49];
      tensor[4,4][4] _t1ECB#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4] _t1ED5#1 = <tensor[4]>[_t1987,_t1DA9,_t1987,time17C2];
      tensor[4] _t1EDF#1 = <tensor[4]>[time17C2,_t1DA9,_t18F1,_t18F1];
      tensor[4] _t1EE9#1 = <tensor[4]>[_t18F1,_t1DA9,time17C2,_t18F1];
      tensor[4,4] _t1EF5#4 = <tensor[4,4]>[_t1ED5,_t1EDF,_t1EE9,_t1E49];
      tensor[4] _t1EFF#2 = <tensor[4]>[_t18F1,_t1987,_t18F1,_t18F1];
      tensor[4,4] _t1F1F#4 = <tensor[4,4]>[_t1EFF,_t1D81,_t1D95,_t1E49];
      tensor[4,4] _t1F73#4 = <tensor[4,4]>[_t1D81,_t1D95,_t1EFF,_t1E49];
      tensor[4,4][4] _t1F75#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4] _t1F7F#1 = <tensor[4]>[_t1987,_t1987,_t185F,time17C2];
      tensor[4] _t1F89#1 = <tensor[4]>[time17C2,_t18F1,_t185F,_t18F1];
      tensor[4] _t1F93#1 = <tensor[4]>[_t18F1,time17C2,_t185F,_t18F1];
      tensor[4,4] _t1F9F#4 = <tensor[4,4]>[_t1F7F,_t1F89,_t1F93,_t1E49];
      tensor[4,4] _t1FC9#4 = <tensor[4,4]>[_t1D95,_t1D81,_t1D8B,_t1E49];
      tensor[4] _t1FDD#1 = <tensor[4]>[_t18F1,_t18F1,_t1987,_t18F1];
      tensor[4,4] _t1FF3#4 = <tensor[4,4]>[_t1D81,_t1FDD,_t1D8B,_t1E49];
      tensor[4,4][4] _t201F#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t2021#1 = <tensor[4,4][4][4]>{_t1E21,_t1ECB,_t1F75,_t201F};
      tensor[4,4][4] _t2027#1 = Subscript<tensor[4,4][4][4]>(_t2021,_t1D58);
      tensor[4,4] _t2033#1 = Subscript<tensor[4,4][4]>(_t2027,_t1D73);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t1D63,_t1D58,_t1D69,_t1D73,_t1D75,_t1D77,_t2033,_t1D75);
      tensor[4,4][4] _t20EA#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4,4][4] _t2194#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4,4][4] _t223E#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4,4][4] _t22E8#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t22EA#1 = <tensor[4,4][4][4]>{_t20EA,_t2194,_t223E,_t22E8};
      tensor[4,4][4] _t22F0#1 = Subscript<tensor[4,4][4][4]>(_t22EA,_t1D58);
      tensor[4,4] _t22FC#1 = Subscript<tensor[4,4][4]>(_t22F0,_t1D73);
      real _t22FE#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t2302#3 = λ(T0[],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],T7[3])<((T0 * T1 * Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * T6_{i3}))>(i3=0..2)) + T7_{i0})>_{3} (_t22FE,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4,_t1AD8);
      real _t2304#1 = TensorIndex<tensor[3],[0]>(_t2302);
      real _t230C#1 = TensorIndex<tensor[3],[1]>(_t2302);
      real _t2314#1 = TensorIndex<tensor[3],[2]>(_t2302);
      tensor[4] _t2318#3 = <tensor[4]>[_t2304,_t230C,_t2314,time17C2];
      tensor[4] _t231A#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t22FC,_t2318);
      real _t231C#1 = TensorIndex<tensor[4],[0]>(_t231A);
      tensor[4,4][4] _t23C6#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4,4][4] _t2470#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4,4][4] _t251A#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4,4][4] _t25C4#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t25C6#1 = <tensor[4,4][4][4]>{_t23C6,_t2470,_t251A,_t25C4};
      tensor[4,4][4] _t25CC#1 = Subscript<tensor[4,4][4][4]>(_t25C6,_t1D58);
      tensor[4,4] _t25D8#1 = Subscript<tensor[4,4][4]>(_t25CC,_t1D73);
      tensor[4] _t25F6#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t25D8,_t2318);
      real _t25F8#1 = TensorIndex<tensor[4],[1]>(_t25F6);
      tensor[4,4][4] _t26A2#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4,4][4] _t274C#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4,4][4] _t27F6#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4,4][4] _t28A0#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t28A2#1 = <tensor[4,4][4][4]>{_t26A2,_t274C,_t27F6,_t28A0};
      tensor[4,4][4] _t28A8#1 = Subscript<tensor[4,4][4][4]>(_t28A2,_t1D58);
      tensor[4,4] _t28B4#1 = Subscript<tensor[4,4][4]>(_t28A8,_t1D73);
      tensor[4] _t28D2#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t28B4,_t2318);
      real _t28D4#1 = TensorIndex<tensor[4],[2]>(_t28D2);
      tensor[3] _t28D6#1 = <tensor[3]>[_t231C,_t25F8,_t28D4];
      femData:MeshPos _t28E2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t17CE,_t1D5E,_t28D6,_t1D73);
      goto JOIN1D62
    JOIN1D62:  preds = [ASSIGN2B8B,ASSIGN2B4C]
      femData:MeshPos nmp28E5#3 = phi(_t28E2,_t28ED)
      bool _t28F3#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp28E5);
      bool _t28F5#1 = BNot(_t28F3);
      if _t28F5 then goto ASSIGN28FA else goto ASSIGN2B8C
    ASSIGN28FA:  preds = [COND2915]
      bool _t28F8#1 = true;
      goto JOIN28F7
    JOIN28F7:  preds = [ASSIGN28FA,JOIN2900]
      bool _t28F9#1 = phi(_t28F8,_t2902)
      if _t28F9 then goto RETURN(nmp28E5)2917 else goto JOIN2916
    RETURN(nmp28E5)2917:  preds = [COND2918]
      return nmp28E5
      goto JOIN2916
    JOIN2916:  preds = [*RETURN(nmp28E5)2917,COND2918]
      goto JOIN1840
    ASSIGN2B8C:  preds = [COND2915]
      bool _t28FE#1 = LT<real>(eTime1ACD,_t18F1);
      if _t28FE then goto ASSIGN2903 else goto ASSIGN2B8D
    ASSIGN2903:  preds = [COND2912]
      bool _t2901#1 = true;
      goto JOIN2900
    JOIN2900:  preds = [ASSIGN2903,JOIN2909]
      bool _t2902#1 = phi(_t2901,_t290B)
      goto JOIN28F7
    ASSIGN2B8D:  preds = [COND2912]
      bool _t2907#1 = GT<real>(eTime1ACD,time17C2);
      if _t2907 then goto ASSIGN290C else goto ASSIGN290E
    ASSIGN290C:  preds = [COND290F]
      bool _t290A#1 = true;
      goto JOIN2909
    JOIN2909:  preds = [ASSIGN290C,ASSIGN290E]
      bool _t290B#1 = phi(_t290A,_t290D)
      goto JOIN2900
    ASSIGN290E:  preds = [COND290F]
      bool _t290D#1 = LT<real>(time1AD1,timeEps17B5);
      goto JOIN2909
    ASSIGN28E8:  preds = [COND28F1]
      real _t28E7#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t28EB#1 = λ(T0[],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],T7[3])<((T0 * T1 * Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * T6_{i3}))>(i3=0..2)) + T7_{i0})>_{3} (_t28E7,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4,_t1AD8);
      femData:MeshPos _t28ED#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t17CE,_t28EB);
      goto JOIN1D62
    ASSIGN2B45:  preds = [COND1D52]
      bool _t1D3F#1 = EQ<real>(faceTime185D,faceTime1D2B);
      if _t1D3F then goto ASSIGN2B47 else goto ASSIGN2B46
    ASSIGN2B47:  preds = [COND1D51]
      tensor[2] _t1D46#1 = <tensor[2]>[_t1987,_t1987];
      goto JOIN1D41
    JOIN1D41:  preds = [ASSIGN2B47,ASSIGN1D4E]
      tensor[2] _t1D49#1 = phi(_t1D46,_t1D4D)
      goto JOIN1D31
    ASSIGN2B46:  preds = [COND1D51]
      real _t1D4B#1 = IntToReal(_t1856);
      tensor[2] _t1D4D#1 = <tensor[2]>[faceTime1D2B,_t1D4B];
      goto JOIN1D41
    ASSIGN2B25:  preds = [COND1ACC]
      bool _t1AB9#1 = EQ<real>(faceTime185D,faceTime1AA5);
      if _t1AB9 then goto ASSIGN2B26 else goto ASSIGN1AC6
    ASSIGN2B26:  preds = [COND1ACB]
      tensor[2] _t1AC0#1 = <tensor[2]>[_t1987,_t1987];
      goto JOIN1ABB
    JOIN1ABB:  preds = [ASSIGN2B26,ASSIGN1AC8]
      tensor[2] _t1AC3#1 = phi(_t1AC0,_t1AC7)
      goto JOIN1AAB
    ASSIGN1AC6:  preds = [COND1ACB]
      real _t1AC5#1 = IntToReal(_t1856);
      tensor[2] _t1AC7#1 = <tensor[2]>[faceTime1AA5,_t1AC5];
      goto JOIN1ABB
    ASSIGN291F:  preds = [FOREACH17CD]
      string _t291E#1 = "Took stupid way out!\n";
      Print<[string]>(_t291E);
      tensor[3] _t2922#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x17B3);
      int _t2924#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x17B3);
      femData:Mesh _t2926#2 = ExtractFem<femData:Mesh,femData:MeshPos>(x17B3);
      tensor[3] _t2931#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3])<(Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3) + T4_{i0})>_{3} (_t2924,_t2926,_t2926,_t2922,dPos17B4);
      femData:MeshPos cmp2933#1 = findPos17A0 (meshData17B7,_t2931);
      return cmp2933
}
## input initialization
  ENTRY16F0:  preds = []
    int timeSteps16E4#1 = 32;
    globals.timeSteps16DF = timeSteps16E4;
    real timeEps16E7#1 = 0.1e-6;
    globals.timeEps16E0 = timeEps16E7;
    real stepSize16EA#1 = 0.1e-1;
    globals.stepSize16E2 = stepSize16EA;
    int stepMax16ED#1 = 100;
    globals.stepMax16E3 = stepMax16ED;
    return
## global-variable initialization
  ENTRY2971:  preds = []
    femData:Mesh meshData293A#3 = globals.meshData16DC;
    femData:Space 0space03AB_intermedateGlobal2939#1 = globals.0space03AB_intermedateGlobal16DD;
    femData:FemFunc 0data03AD_intermedateGlobal2938#1 = globals.0data03AD_intermedateGlobal16DE;
    int _t293E#1 = 0;
    int _t2940#1 = 1;
    int _t2942#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData293A);
    int _t2944#1 = ISub(_t2942,_t2940);
    int[] _t2946#1 = Range(_t293E,_t2944);
    femData:MeshCell[] _t2948#1 = <femData:MeshCell[]>{};
  FOREACH294C:  preds = [ASSIGN2949,NEXT2951]
    foreach (_t294A in _t2946) on exit goto ASSIGN2953
      femData:MeshCell[] _t294B#1 = phi(_t2948,_t294F)
    femData:MeshCell _t294D#1 = LoadFem<femData:MeshCell>(meshData293A,_t294A);
    femData:MeshCell[] _t294F#1 = Append<femData:MeshCell>(_t294B,_t294D);
    goto FOREACH294C
  ASSIGN2953:  preds = [FOREACH294C]
    femData:Space space2952#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal2939,meshData293A);
    femData:FemFunc data2955#6 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal2938,space2952);
    globals.data16F3 = data2955;
    femData:Space _t2958#5 = ExtractFem<femData:Space,femData:FemFunc>(data2955);
    femData:Mesh _t295C#16 = ExtractFem<femData:Mesh,femData:Space>(_t2958);
    return
## strand
  strand gg (tensor[3] startPos297B#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY299E:  preds = []
        femData:Mesh meshData2982#1 = globals.meshData16DC;
        tensor[3][1] _t298A#1 = <tensor[3][1]>{startPos297B};
        tensor[3][] _t298C#1 = MkDynamic<tensor[3],1>(_t298A);
        tensor[3][1] _t2990#1 = <tensor[3][1]>{startPos297B};
        tensor[3][] _t2992#1 = MkDynamic<tensor[3],1>(_t2990);
        int step2996#1 = 0;
        femData:MeshPos cPos2998#1 = findPos17A0 (meshData2982,startPos297B);
        self.stream = _t298C;
        self.newStream = _t2992;
        self.step = step2996;
        self.cPos = cPos2998;
        self.altCPos = startPos297B;
        self.startPos = startPos297B;
        return
    end state init
    method update
        ENTRY2AE9:  preds = []
          femData:Mesh meshData29AA#2 = globals.meshData16DC;
          femData:FemFunc data29A9#2 = globals.data16F3;
          real stepSize29A8#4 = globals.stepSize16E2;
          int stepMax29A7#1 = globals.stepMax16E3;
          tensor[3][] stream29B0#2 = self.stream;
          tensor[3][] newStream29B1#1 = self.newStream;
          int step29B2#3 = self.step;
          femData:MeshPos cPos29B3#6 = self.cPos;
          tensor[3] altCPos29B4#6 = self.altCPos;
          tensor[3] startPos29B5#1 = self.startPos;
          bool _t29BD#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos29B3);
          bool _t29BF#1 = BNot(_t29BD);
          if _t29BF then goto ASSIGN29C4 else goto ASSIGN29C7
        ASSIGN29C4:  preds = [COND29D5]
          bool _t29C2#1 = true;
          goto JOIN29C1
        JOIN29C1:  preds = [ASSIGN29C4,JOIN29CC]
          bool _t29C3#1 = phi(_t29C2,_t29CE)
          if _t29C3 then goto STABILIZE29D7 else goto JOIN29D6
        STABILIZE29D7:  preds = [COND29DD]
          stabilize
          goto JOIN29D6
        JOIN29D6:  preds = [*STABILIZE29D7,COND29DD]
          tensor[3] _t29DF#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos29B3);
          int _t29E1#3 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos29B3);
          femData:Mesh _t29E3#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos29B3);
          real _t29F0#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3])<Sqrt(Σ(i0=0..2)<(((Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0}) * (Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0})))>(i0=0..2))> (_t29E1,_t29E3,_t29E3,_t29DF,altCPos29B4);
          real _t29F2#1 = 0.1e-5;
          bool _t29F4#1 = GT<real>(_t29F0,_t29F2);
          if _t29F4 then goto ASSIGN29F8 else goto ASSIGN29FF
        ASSIGN29F8:  preds = [COND2A09]
          string _t29F7#1 = "Error in tracing: At step:";
          string _t29F9#1 = " with particle:";
          string _t29FB#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t29F7,step29B2,_t29F9,startPos29B5,_t29FB);
          goto JOIN29F6
        JOIN29F6:  preds = [MASSIGN29FD,MASSIGN2A08]
          real _t2A0A#2 = 0.5e0;
          if _t29BD then goto ASSIGN2B98 else goto ASSIGN2A51
        ASSIGN2B98:  preds = [COND2A54]
          femData:MeshCell c2A24#1 = LoadFem<femData:MeshCell>(_t29E3,_t29E1);
          int _t2A29#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A24);
          femData:FuncCell _t2A2B#2 = LoadFem<femData:FuncCell>(data29A9,_t2A29);
          femData:FemFunc _t2A2F#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2A2B);
          femData:Space _t2A3A#2 = ExtractFem<femData:Space,femData:FemFunc>(_t2A2F);
          int _t2A43#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2A2B);
          tensor[3] _t2A4B#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],INT4,FEM(fns_t)5,FEM(func_t)6,T7[3])<(Probe(femV(noFunc, 0, 1, 2)_{i0}⊛Basis(),T3)) / ( Sqrt(Σ(i1=0..2)<((Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3) * Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3)))>(i1=0..2)))>_{3} (_t2A43,_t2A3A,_t2A2F,_t29DF,_t2A43,_t2A3A,_t2A2F,_t29DF);
          goto JOIN2A1F
        JOIN2A1F:  preds = [ASSIGN2BDE,ASSIGN2A51]
          tensor[3] _t2A4E#1 = phi(_t2A4B,_t2A50)
          tensor[3] up12A55#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2A0A,stepSize29A8,_t2A4E);
          femData:MeshPos intermed2A57#4 = posMove2937 (cPos29B3,up12A55);
          tensor[3] altIntermed2A59#3 = λ(T0[3],T1[],T2[],FEM(mesh_t)3,FEM(fns_t)4,FEM(func_t)5,FEM(mesh_t)6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3],FEM(mesh_t)10,FEM(fns_t)11,FEM(func_t)12,FEM(mesh_t)13,FEM(mesh_t)14,FEM(mesh_t)15,T16[3])<(T0_{i0} + ((T1 * T2 * Probe(Cmp(femV(17A0, 3, 4, 5)_{i0}⊛Basis())[femInvV(17A0, 3, 3, 3)_{i0}⊛Basis(){3}],T0))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(17A0, 3, 4, 5)_{i2}⊛Basis())[femInvV(17A0, 3, 3, 3)_{i0}⊛Basis(){3}],T0) * Probe(Cmp(femV(17A0, 3, 4, 5)_{i2}⊛Basis())[femInvV(17A0, 3, 3, 3)_{i0}⊛Basis(){3}],T0)))>(i2=0..2))))>_{3} (altCPos29B4,_t2A0A,stepSize29A8,_t295C,_t2958,data2955,_t295C,_t295C,_t295C,altCPos29B4,_t295C,_t2958,data2955,_t295C,_t295C,_t295C,altCPos29B4);
          bool _t2A5C#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed2A57);
          bool _t2A5E#1 = BNot(_t2A5C);
          if _t2A5E then goto ASSIGN2A63 else goto ASSIGN2A65
        ASSIGN2A63:  preds = [COND2A6A]
          bool _t2A61#1 = true;
          goto JOIN2A60
        JOIN2A60:  preds = [ASSIGN2A63,ASSIGN2A69]
          bool _t2A62#1 = phi(_t2A61,_t2A68)
          if _t2A62 then goto STABILIZE2A6C else goto JOIN2A6B
        STABILIZE2A6C:  preds = [COND2A72]
          stabilize
          goto JOIN2A6B
        JOIN2A6B:  preds = [*STABILIZE2A6C,COND2A72]
          if _t2A5C then goto ASSIGN2A82 else goto ASSIGN2AB2
        ASSIGN2A82:  preds = [COND2AB5]
          femData:Mesh _t2A81#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed2A57);
          int _t2A83#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed2A57);
          femData:MeshCell c2A85#1 = LoadFem<femData:MeshCell>(_t2A81,_t2A83);
          tensor[3] ref2A87#2 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed2A57);
          int _t2A8A#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A85);
          femData:FuncCell _t2A8C#2 = LoadFem<femData:FuncCell>(data29A9,_t2A8A);
          femData:FemFunc _t2A90#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2A8C);
          femData:Space _t2A9B#2 = ExtractFem<femData:Space,femData:FemFunc>(_t2A90);
          int _t2AA4#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2A8C);
          tensor[3] _t2AAC#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],INT4,FEM(fns_t)5,FEM(func_t)6,T7[3])<(Probe(femV(noFunc, 0, 1, 2)_{i0}⊛Basis(),T3)) / ( Sqrt(Σ(i1=0..2)<((Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3) * Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3)))>(i1=0..2)))>_{3} (_t2AA4,_t2A9B,_t2A90,ref2A87,_t2AA4,_t2A9B,_t2A90,ref2A87);
          goto JOIN2A80
        JOIN2A80:  preds = [ASSIGN2BE7,ASSIGN2AB2]
          tensor[3] _t2AAF#1 = phi(_t2AAC,_t2AB1)
          tensor[3] up22AB6#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize29A8,_t2AAF);
          femData:MeshPos cPos2AB8#6 = posMove2937 (cPos29B3,up22AB6);
          tensor[3] altCPos2ABA#3 = λ(T0[3],T1[],FEM(mesh_t)2,FEM(fns_t)3,FEM(func_t)4,FEM(mesh_t)5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],FEM(mesh_t)9,FEM(fns_t)10,FEM(func_t)11,FEM(mesh_t)12,FEM(mesh_t)13,FEM(mesh_t)14,T15[3])<(T0_{i0} + ((T1 * Probe(Cmp(femV(17A0, 2, 3, 4)_{i0}⊛Basis())[femInvV(17A0, 2, 2, 2)_{i0}⊛Basis(){3}],T8))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(17A0, 2, 3, 4)_{i2}⊛Basis())[femInvV(17A0, 2, 2, 2)_{i0}⊛Basis(){3}],T8) * Probe(Cmp(femV(17A0, 2, 3, 4)_{i2}⊛Basis())[femInvV(17A0, 2, 2, 2)_{i0}⊛Basis(){3}],T8)))>(i2=0..2))))>_{3} (altCPos29B4,stepSize29A8,_t295C,_t2958,data2955,_t295C,_t295C,_t295C,altIntermed2A59,_t295C,_t2958,data2955,_t295C,_t295C,_t295C,altIntermed2A59);
          bool _t2ABC#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2AB8);
          bool _t2ABE#1 = BNot(_t2ABC);
          if _t2ABE then goto MASSIGN2AC1 else goto JOIN2AC0
        MASSIGN2AC1:  preds = [COND2AC8]
          Print<[tensor[3][]]>(stream29B0);
          self.cPos = cPos2AB8;
          self.altCPos = altCPos2ABA;
          stabilize
          goto JOIN2AC0
        JOIN2AC0:  preds = [*STABILIZE2AC2,COND2AC8]
          tensor[3] _t2ACA#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2AB8);
          int _t2ACC#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2AB8);
          femData:Mesh _t2ACE#2 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2AB8);
          tensor[3] _t2AD3#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{3} (_t2ACC,_t2ACE,_t2ACE,_t2ACA);
          tensor[3][1] _t2AD9#1 = <tensor[3][1]>{_t2AD3};
          tensor[3][] _t2ADB#1 = MkDynamic<tensor[3],1>(_t2AD9);
          tensor[3][] stream2ADD#1 = Concat<tensor[3]>(stream29B0,_t2ADB);
          tensor[3][1] _t2ADF#1 = <tensor[3][1]>{altCPos2ABA};
          tensor[3][] _t2AE1#1 = MkDynamic<tensor[3],1>(_t2ADF);
          tensor[3][] newStream2AE3#1 = Concat<tensor[3]>(newStream29B1,_t2AE1);
          int _t2AE5#1 = 1;
          int step2AE7#1 = IAdd(step29B2,_t2AE5);
          self.stream = stream2ADD;
          self.newStream = newStream2AE3;
          self.step = step2AE7;
          self.cPos = cPos2AB8;
          self.altCPos = altCPos2ABA;
          active
        ASSIGN2AB2:  preds = [COND2AB5]
          tensor[3] _t2AB1#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2A80
        ASSIGN2A65:  preds = [COND2A6A]
          femData:MeshPos _t2A64#1 = findPos17A0 (meshData29AA,altIntermed2A59);
          bool _t2A66#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t2A64);
          bool _t2A68#1 = BNot(_t2A66);
          goto JOIN2A60
        ASSIGN2A51:  preds = [COND2A54]
          tensor[3] _t2A50#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2A1F
        ASSIGN29FF:  preds = [COND2A09]
          string _t29FE#1 = "fine in cell:";
          femData:MeshCell _t2A04#1 = LoadFem<femData:MeshCell>(_t29E3,_t29E1);
          string _t2A06#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t29FE,_t2A04,_t2A06);
          goto JOIN29F6
        ASSIGN29C7:  preds = [COND29D5]
          femData:MeshPos _t29C6#1 = findPos17A0 (meshData29AA,altCPos29B4);
          bool _t29C8#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t29C6);
          bool _t29CA#1 = BNot(_t29C8);
          if _t29CA then goto ASSIGN29CF else goto ASSIGN29D1
        ASSIGN29CF:  preds = [COND29D2]
          bool _t29CD#1 = true;
          goto JOIN29CC
        JOIN29CC:  preds = [ASSIGN29CF,ASSIGN29D1]
          bool _t29CE#1 = phi(_t29CD,_t29D0)
          goto JOIN29C1
        ASSIGN29D1:  preds = [COND29D2]
          bool _t29D0#1 = EQ<int>(step29B2,stepMax29A7);
          goto JOIN29CC
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY2979:  preds = []
      tensor[3][] startPoints2973#1 = globals.startPoints16E1;
    FOREACH2976:  preds = [ASSIGN2974,NEXT2978]
      foreach (x2975 in startPoints2973) on exit goto RETURN297A
      new gg(x2975);
      goto FOREACH2976
    RETURN297A:  preds = [FOREACH2976]
      return
#### end program ####
promote _t295C --> globals._t2BEB
promote _t2958 --> globals._tX2BEE
##### high-ir: after normalization promotion ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData16DC (meshData) = <no-default>
  input 0space03AB_intermedateGlobal16DD (space) = <no-default>
  input 0data03AD_intermedateGlobal16DE (data) = <no-default>
  input timeSteps16DF (timeSteps) = <default>
  input timeEps16E0 (timeEps) = <default>
  input startPoints16E1 (startPoints) = <no-default>
  input stepSize16E2 (stepSize) = <default>
  input stepMax16E3 (stepMax) = <default>
  global femData:FemFunc data16F3
  global femData:Mesh _t2BEB
  global femData:Space _tX2BEE
## functions
  function femData:MeshPos findPos17A0 (femData:Mesh mesh16F5#23, tensor[3] pos16F6#7) {
    ENTRY179F:  preds = []
      real _t16F7#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn16FD#6 = <tensor[3]>[_t16F7,_t16F7,_t16F7];
      int newtonInt16FF#1 = 0;
      int[] yayCells1709#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh16F5,pos16F6);
    FOREACH170C:  preds = [ASSIGN170A,NEXT1796]
      foreach (cellItter170B in yayCells1709) on exit goto ASSIGN1798
      int _t172B#1 = 16;
      int[] _t172D#1 = Range(newtonInt16FF,_t172B);
    FOREACH1731:  preds = [ASSIGN2AF3,NEXT1795]
      foreach (newtonItter172F in _t172D) on exit goto NEXT1796
        tensor[3] xn1730#8 = phi(xn16FD,xn173A)
      tensor[3] xn173A#2 = λ(T0[3],INT1,FEM(mesh_t)2,FEM(mesh_t)3,T4[3],T5[3],INT6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3])<(T0_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i14}⊛Basis()dx_{i11},T4) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 1, 2, 2)_{i15}⊛Basis()dx_{i12},T4)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i8}⊛Basis()dx_{'0'},T4) * Σ(i9=0..2)<((Probe(femV(noFunc, 1, 2, 2)_{i9}⊛Basis()dx_{'1'},T4) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 1, 2, 2)_{i10}⊛Basis()dx_{'2'},T4)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 1, 2, 2)_{i3}⊛Basis(),T0)) - (T5_{i3})))>(i3=0..2))>_{3} (xn1730,cellItter170B,mesh16F5,mesh16F5,xn16FD,pos16F6,cellItter170B,mesh16F5,mesh16F5,xn1730);
      real _t173C#2 = 0.1e-7;
      real _t1740#1 = λ(T0[],T1[])<(T0 * T1)> (_t173C,_t173C);
      real _t1742#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],INT9,FEM(mesh_t)10,FEM(mesh_t)11,T12[3],T13[3],INT14,FEM(mesh_t)15,FEM(mesh_t)16,T17[3])<Σ(i0=0..2)<((Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i13}⊛Basis()dx_{i10},T3) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 0, 1, 1)_{i14}⊛Basis()dx_{i11},T3)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i7}⊛Basis()dx_{'0'},T3) * Σ(i8=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i8}⊛Basis()dx_{'1'},T3) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 0, 1, 1)_{i9}⊛Basis()dx_{'2'},T3)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i2}⊛Basis(),T8)) - (T4_{i2})))>(i2=0..2) * Σ(i11=0..2)<(((Σ(i19=0..2)(i20=0..2)<((ϵ_{ii19,ii20,ii0} * Σ(i22=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i22}⊛Basis()dx_{i19},T3) * Σ(i23=0..2)<((ϵ_{ii22,ii23,ii11} * Probe(femV(noFunc, 0, 1, 1)_{i23}⊛Basis()dx_{i20},T3)))>(i23=0..2)))>(i22=0..2)))>(i19=0..2)(i20=0..2)) / ( (2 * Σ(i16=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i16}⊛Basis()dx_{'0'},T3) * Σ(i17=0..2)<((Probe(femV(noFunc, 0, 1, 1)_{i17}⊛Basis()dx_{'1'},T3) * Σ(i18=0..2)<((ϵ_{ii16,ii17,ii18} * Probe(femV(noFunc, 0, 1, 1)_{i18}⊛Basis()dx_{'2'},T3)))>(i18=0..2)))>(i17=0..2)))>(i16=0..2))) * (Probe(femV(noFunc, 0, 1, 1)_{i11}⊛Basis(),T8)) - (T4_{i11})))>(i11=0..2)))>(i0=0..2)> (cellItter170B,mesh16F5,mesh16F5,xn16FD,pos16F6,cellItter170B,mesh16F5,mesh16F5,xn1730,cellItter170B,mesh16F5,mesh16F5,xn16FD,pos16F6,cellItter170B,mesh16F5,mesh16F5,xn1730);
      bool _t1744#1 = GTE<real>(_t1740,_t1742);
      if _t1744 then goto ASSIGN1748 else goto JOIN1746
    ASSIGN1748:  preds = [COND1794]
      real _t1747#4 = 0.1e1;
      real _t1749#4 = 0.1e-8;
      real _t174B#1 = λ(T0[],T1[])<(T0 + T1)> (_t1747,_t1749);
      tensor[3] _t1753#1 = <tensor[3]>[_t1747,_t1747,_t1747];
      real _t1755#1 = λ(T0[3],T1[3],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],INT7,FEM(mesh_t)8,FEM(mesh_t)9,T10[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0}) - (Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i3}⊛Basis(),T1)) - (T6_{i3})))>(i3=0..2))))>(i0=0..2)> (_t1753,xn1730,cellItter170B,mesh16F5,mesh16F5,xn16FD,pos16F6,cellItter170B,mesh16F5,mesh16F5,xn1730);
      bool _t1757#1 = GT<real>(_t174B,_t1755);
      tensor[3] _t175F#1 = <tensor[3]>[_t1749,_t1749,_t1749];
      tensor[3] _t1761#3 = λ(T0[3],T1[3],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],INT7,FEM(mesh_t)8,FEM(mesh_t)9,T10[3])<(T0_{i0} + (T1_{i0}) - (Σ(i4=0..2)<(((Σ(i12=0..2)(i13=0..2)<((ϵ_{ii12,ii13,ii0} * Σ(i15=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5) * Σ(i16=0..2)<((ϵ_{ii15,ii16,ii4} * Probe(femV(noFunc, 2, 3, 3)_{i16}⊛Basis()dx_{i13},T5)))>(i16=0..2)))>(i15=0..2)))>(i12=0..2)(i13=0..2)) / ( (2 * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'0'},T5) * Σ(i10=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'1'},T5) * Σ(i11=0..2)<((ϵ_{ii9,ii10,ii11} * Probe(femV(noFunc, 2, 3, 3)_{i11}⊛Basis()dx_{'2'},T5)))>(i11=0..2)))>(i10=0..2)))>(i9=0..2))) * (Probe(femV(noFunc, 2, 3, 3)_{i4}⊛Basis(),T1)) - (T6_{i4})))>(i4=0..2)))>_{3} (_t175F,xn1730,cellItter170B,mesh16F5,mesh16F5,xn16FD,pos16F6,cellItter170B,mesh16F5,mesh16F5,xn1730);
      real _t1763#1 = TensorIndex<tensor[3],[0]>(_t1761);
      real _t1765#3 = -0.e0;
      bool _t1767#1 = GT<real>(_t1763,_t1765);
      real _t1773#1 = TensorIndex<tensor[3],[1]>(_t1761);
      bool _t1777#1 = GT<real>(_t1773,_t1765);
      real _t1783#1 = TensorIndex<tensor[3],[2]>(_t1761);
      bool _t1787#1 = GT<real>(_t1783,_t1765);
      bool _t1789#1 = BAnd(_t1777,_t1787);
      bool _t178B#1 = BAnd(_t1767,_t1789);
      bool _t178D#1 = BAnd(_t1757,_t178B);
      if _t178D then goto ASSIGN2AFC else goto JOIN178F
    ASSIGN2AFC:  preds = [COND1793]
      femData:MeshPos _t1790#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh16F5,cellItter170B,xn173A,pos16F6);
      return _t1790
      goto JOIN178F
    JOIN178F:  preds = [*RETURN(_t1790)1792,COND1793]
      goto JOIN1746
    JOIN1746:  preds = [JOIN178F,COND1794]
      goto FOREACH1731
    NEXT1796:  preds = [FOREACH1731]
      goto FOREACH170C
    ASSIGN1798:  preds = [FOREACH170C]
      string _t1797#1 = "Bad end 2";
      string _t1799#1 = "\n";
      Print<[string,string]>(_t1797,_t1799);
      femData:MeshPos _t179C#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh16F5);
      return _t179C
}
  function int[2] nextCell417B2 (int faceIdx17A1#1, int cell17A2#1, femData:Mesh mesh17A3#1) {
    ENTRY17B1:  preds = []
      int _t17A4#1 = 8;
      int _t17A6#1 = IMul(cell17A2,_t17A4);
      int _t17A8#1 = 2;
      int _t17AA#1 = IMul(faceIdx17A1,_t17A8);
      int _t17AC#1 = IAdd(_t17A6,_t17AA);
      int[2] _t17AE#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh17A3,_t17AC);
      return _t17AE
}
  function femData:MeshPos posMove2937 (femData:MeshPos x17B3#6, tensor[3] dPos17B4#18) {
    ENTRY2936:  preds = []
      femData:Mesh meshData17B7#1 = globals.meshData16DC;
      int timeSteps17B6#1 = globals.timeSteps16DF;
      real timeEps17B5#1 = globals.timeEps16E0;
      bool _t17BB#1 = ExtractFemItem<bool,Valid(MeshPos)>(x17B3);
      bool _t17BD#1 = BNot(_t17BB);
      if _t17BD then goto RETURN(x17B3)17C0 else goto JOIN17BF
    RETURN(x17B3)17C0:  preds = [COND17C1]
      return x17B3
      goto JOIN17BF
    JOIN17BF:  preds = [*RETURN(x17B3)17C0,COND17C1]
      real time17C2#23 = 0.1e1;
      int _t17C6#6 = 0;
      int[] _t17C8#1 = Range(_t17C6,timeSteps17B6);
    FOREACH17CD:  preds = [ASSIGN17C9,NEXT291D]
      foreach (i17CA in _t17C8) on exit goto ASSIGN291F
        femData:MeshPos cmp17CC#6 = phi(x17B3,cmp291A)
        real time17CB#19 = phi(time17C2,time1AD2)
      femData:Mesh _t17CE#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp17CC);
      int _t17D0#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp17CC);
      femData:MeshCell _t17D2#2 = LoadFem<femData:MeshCell>(_t17CE,_t17D0);
      femData:Mesh _t17D4#35 = ExtractFem<femData:Mesh,femData:MeshCell>(_t17D2);
      int _t17E4#18 = ExtractFemItem<int,CellIndex(MeshCell)>(_t17D2);
      tensor[3] _t17EA#24 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp17CC);
      tensor[3] newPos17F6#1 = λ(T0[3],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3])<(T0_{i0} + (T1 * Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i10},T0) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T0)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i7}⊛Basis()dx_{'0'},T0) * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'1'},T0) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'2'},T0)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * T6_{i2}))>(i2=0..2)))>_{3} (_t17EA,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      real _t17FA#4 = 0.1e-8;
      real _t17FC#1 = λ(T0[],T1[])<(T0 + T1)> (time17C2,_t17FA);
      tensor[3] _t1804#1 = <tensor[3]>[time17C2,time17C2,time17C2];
      real _t1806#1 = λ(T0[3],T1[3],T2[],INT3,FEM(mesh_t)4,FEM(mesh_t)5,T6[3],T7[3])<Σ(i0=0..2)<((T0_{i0} * (T1_{i0} + (T2 * Σ(i2=0..2)<(((Σ(i10=0..2)(i11=0..2)<((ϵ_{ii10,ii11,ii0} * Σ(i13=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i13}⊛Basis()dx_{i10},T1) * Σ(i14=0..2)<((ϵ_{ii13,ii14,ii2} * Probe(femV(noFunc, 3, 4, 4)_{i14}⊛Basis()dx_{i11},T1)))>(i14=0..2)))>(i13=0..2)))>(i10=0..2)(i11=0..2)) / ( (2 * Σ(i7=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i7}⊛Basis()dx_{'0'},T1) * Σ(i8=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i8}⊛Basis()dx_{'1'},T1) * Σ(i9=0..2)<((ϵ_{ii7,ii8,ii9} * Probe(femV(noFunc, 3, 4, 4)_{i9}⊛Basis()dx_{'2'},T1)))>(i9=0..2)))>(i8=0..2)))>(i7=0..2))) * T7_{i2}))>(i2=0..2)))))>(i0=0..2)> (_t1804,_t17EA,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1808#1 = GT<real>(_t17FC,_t1806);
      tensor[3] _t1810#1 = <tensor[3]>[_t17FA,_t17FA,_t17FA];
      tensor[3] _t1812#3 = λ(T0[3],T1[3],T2[],INT3,FEM(mesh_t)4,FEM(mesh_t)5,T6[3],T7[3])<(T0_{i0} + T1_{i0} + (T2 * Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i14}⊛Basis()dx_{i11},T1) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 3, 4, 4)_{i15}⊛Basis()dx_{i12},T1)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i8}⊛Basis()dx_{'0'},T1) * Σ(i9=0..2)<((Probe(femV(noFunc, 3, 4, 4)_{i9}⊛Basis()dx_{'1'},T1) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 3, 4, 4)_{i10}⊛Basis()dx_{'2'},T1)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * T7_{i3}))>(i3=0..2)))>_{3} (_t1810,_t17EA,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      real _t1814#1 = TensorIndex<tensor[3],[0]>(_t1812);
      real _t1816#3 = -0.e0;
      bool _t1818#1 = GT<real>(_t1814,_t1816);
      real _t1824#1 = TensorIndex<tensor[3],[1]>(_t1812);
      bool _t1828#1 = GT<real>(_t1824,_t1816);
      real _t1834#1 = TensorIndex<tensor[3],[2]>(_t1812);
      bool _t1838#1 = GT<real>(_t1834,_t1816);
      bool _t183A#1 = BAnd(_t1828,_t1838);
      bool _t183C#1 = BAnd(_t1818,_t183A);
      bool _t183E#1 = BAnd(_t1808,_t183C);
      if _t183E then goto ASSIGN2B8E else goto ASSIGN1857
    ASSIGN2B8E:  preds = [COND291C]
      femData:MeshPos nmp1851#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t17D4,_t17E4,newPos17F6);
      return nmp1851
      goto JOIN1840
    JOIN1840:  preds = [*RETURN(nmp1851)1853,JOIN2916]
      femData:MeshPos cmp291A#1 = phi(nmp28E5)
      real time1AD2#1 = phi(time1AD1)
      goto FOREACH17CD
    ASSIGN1857:  preds = [COND291C]
      int _t1856#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp17CC);
      real time1859#6 = +inf;
      int face185B#7 = -1;
      real faceTime185D#6 = -inf;
      real _t185F#15 = 0.57735026919e0;
      tensor[3] _t1867#5 = <tensor[3]>[_t185F,_t185F,_t185F];
      real _t1877#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T2) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T2)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T2) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T2) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T2)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t185F,_t1867,_t17EA,_t1867,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      real _t1879#8 = -0.1e-15;
      bool _t187B#1 = GTE<real>(_t1877,_t1879);
      bool _t1897#1 = GT<real>(time1859,_t1877);
      real _t18A3#1 = λ(T0[3],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3])<Abs((T1 * Σ(i0=0..2)<((T0_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i9},T5) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i10},T5)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i6}⊛Basis()dx_{'0'},T5) * Σ(i7=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i7}⊛Basis()dx_{'1'},T5) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'2'},T5)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T6_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t1867,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      real _t18A5#4 = 0.1e-20;
      bool _t18A7#2 = GTE<real>(_t18A3,_t18A5);
      bool _t18A9#1 = BAnd(_t1897,_t18A7);
      bool _t18AB#1 = BAnd(_t187B,_t18A9);
      if _t18AB then goto ASSIGN2B0C else goto JOIN18AD
    ASSIGN2B0C:  preds = [COND18F0]
      bool _t18B0#1 = NEQ<int>(_t1856,_t17C6);
      if _t18B0 then goto JOIN18B2 else goto JOIN18B2
    JOIN18B2:  preds = [COND18EC,COND18EC]
      real faceTime18EA#1 = phi(faceTime185D,_t1877)
      int face18CF#1 = phi(_t17C6,face185B)
      real time18CC#1 = phi(_t1877,time1859)
      goto JOIN18AD
    JOIN18AD:  preds = [JOIN18B2,COND18F0]
      real faceTime18EF#2 = phi(faceTime18EA,faceTime185D)
      int face18EE#2 = phi(face18CF,face185B)
      real time18ED#3 = phi(time18CC,time1859)
      real _t18F1#50 = 0.e0;
      tensor[3] _t18F9#5 = <tensor[3]>[time17C2,_t18F1,_t18F1];
      real _t1909#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T2) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T2)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T2) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T2) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T2)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t18F9,_t17EA,_t18F9,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t190D#1 = GTE<real>(_t1909,_t1879);
      bool _t1929#1 = GT<real>(time18ED,_t1909);
      real _t1935#1 = λ(T0[3],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3])<Abs((T1 * Σ(i0=0..2)<((T0_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i9},T5) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i10},T5)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i6}⊛Basis()dx_{'0'},T5) * Σ(i7=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i7}⊛Basis()dx_{'1'},T5) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'2'},T5)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T6_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F9,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1939#2 = GTE<real>(_t1935,_t18A5);
      bool _t193B#1 = BAnd(_t1929,_t1939);
      bool _t193D#1 = BAnd(_t190D,_t193B);
      if _t193D then goto ASSIGN1941 else goto JOIN193F
    ASSIGN1941:  preds = [COND1982]
      int _t1940#2 = 1;
      bool _t1942#1 = NEQ<int>(_t1856,_t1940);
      if _t1942 then goto JOIN1944 else goto JOIN1944
    JOIN1944:  preds = [COND197E,COND197E]
      real faceTime197C#1 = phi(faceTime18EF,_t1909)
      int face1961#1 = phi(_t1940,face18EE)
      real time195E#1 = phi(_t1909,time18ED)
      goto JOIN193F
    JOIN193F:  preds = [JOIN1944,COND1982]
      real faceTime1981#2 = phi(faceTime197C,faceTime18EF)
      int face1980#2 = phi(face1961,face18EE)
      real time197F#3 = phi(time195E,time18ED)
      real _t1987#14 = -0.1e1;
      tensor[3] _t198B#5 = <tensor[3]>[_t18F1,_t1987,_t18F1];
      real _t199B#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T2) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T2)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T2) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T2) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T2)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t198B,_t17EA,_t198B,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t199F#1 = GTE<real>(_t199B,_t1879);
      bool _t19BB#1 = GT<real>(time197F,_t199B);
      real _t19C7#1 = λ(T0[3],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3])<Abs((T1 * Σ(i0=0..2)<((T0_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i9},T5) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i10},T5)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i6}⊛Basis()dx_{'0'},T5) * Σ(i7=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i7}⊛Basis()dx_{'1'},T5) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'2'},T5)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T6_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t198B,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t19CB#2 = GTE<real>(_t19C7,_t18A5);
      bool _t19CD#1 = BAnd(_t19BB,_t19CB);
      bool _t19CF#1 = BAnd(_t199F,_t19CD);
      if _t19CF then goto ASSIGN19D3 else goto JOIN19D1
    ASSIGN19D3:  preds = [COND1A14]
      int _t19D2#2 = 2;
      bool _t19D4#1 = NEQ<int>(_t1856,_t19D2);
      if _t19D4 then goto JOIN19D6 else goto JOIN19D6
    JOIN19D6:  preds = [COND1A10,COND1A10]
      real faceTime1A0E#1 = phi(faceTime1981,_t199B)
      int face19F3#1 = phi(_t19D2,face1980)
      real time19F0#1 = phi(_t199B,time197F)
      goto JOIN19D1
    JOIN19D1:  preds = [JOIN19D6,COND1A14]
      real faceTime1A13#2 = phi(faceTime1A0E,faceTime1981)
      int face1A12#2 = phi(face19F3,face1980)
      real time1A11#3 = phi(time19F0,time197F)
      tensor[3] _t1A1D#5 = <tensor[3]>[_t18F1,_t18F1,time17C2];
      real _t1A2D#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T2) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T2)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T2) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T2) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T2)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t1A1D,_t17EA,_t1A1D,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1A31#1 = GTE<real>(_t1A2D,_t1879);
      bool _t1A4D#1 = GT<real>(time1A11,_t1A2D);
      real _t1A59#1 = λ(T0[3],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3])<Abs((T1 * Σ(i0=0..2)<((T0_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i12}⊛Basis()dx_{i9},T5) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 2, 3, 3)_{i13}⊛Basis()dx_{i10},T5)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i6}⊛Basis()dx_{'0'},T5) * Σ(i7=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i7}⊛Basis()dx_{'1'},T5) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'2'},T5)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T6_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t1A1D,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1A5D#2 = GTE<real>(_t1A59,_t18A5);
      bool _t1A5F#1 = BAnd(_t1A4D,_t1A5D);
      bool _t1A61#1 = BAnd(_t1A31,_t1A5F);
      if _t1A61 then goto ASSIGN1A65 else goto JOIN1A63
    ASSIGN1A65:  preds = [COND1AA6]
      int _t1A64#2 = 3;
      bool _t1A66#1 = NEQ<int>(_t1856,_t1A64);
      if _t1A66 then goto JOIN1A68 else goto JOIN1A68
    JOIN1A68:  preds = [COND1AA2,COND1AA2]
      real faceTime1AA0#1 = phi(faceTime1A13,_t1A2D)
      int face1A85#1 = phi(_t1A64,face1A12)
      real time1A82#1 = phi(_t1A2D,time1A11)
      goto JOIN1A63
    JOIN1A63:  preds = [JOIN1A68,COND1AA6]
      real faceTime1AA5#2 = phi(faceTime1AA0,faceTime1A13)
      int face1AA4#2 = phi(face1A85,face1A12)
      real time1AA3#1 = phi(time1A82,time1A11)
      bool _t1AA9#1 = NEQ<int>(face1AA4,face185B);
      if _t1AA9 then goto ASSIGN2B27 else goto ASSIGN2B25
    ASSIGN2B27:  preds = [COND1ACC]
      real _t1AAE#1 = Max<real>(time1AA3,_t18F1);
      real _t1AB0#1 = IntToReal(face1AA4);
      tensor[2] _t1AB2#1 = <tensor[2]>[_t1AAE,_t1AB0];
      goto JOIN1AAB
    JOIN1AAB:  preds = [ASSIGN1AB3,JOIN1ABB]
      tensor[2] _t1AB5#1 = phi(_t1AB2,_t1AC3)
      real eTime1ACD#3 = TensorIndex<tensor[2],[0]>(_t1AB5);
      real time1AD1#2 = λ(T0[],T1[],T2[])<(T0) - ((T0 * T2))> (time17CB,time17CB,eTime1ACD);
      int _t1AD6#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp17CC);
      tensor[3] _t1AD8#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp17CC);
      real _t1AFD#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T8) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T8)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T8) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T8) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T8)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t185F,_t1867,_t1AD8,_t1867,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1B01#1 = GTE<real>(_t1AFD,_t1879);
      bool _t1B1D#1 = GT<real>(time1859,_t1AFD);
      bool _t1B2F#1 = BAnd(_t1B1D,_t18A7);
      bool _t1B31#1 = BAnd(_t1B01,_t1B2F);
      if _t1B31 then goto ASSIGN2B2E else goto JOIN1B33
    ASSIGN2B2E:  preds = [COND1B76]
      bool _t1B36#1 = NEQ<int>(_t1856,_t17C6);
      if _t1B36 then goto JOIN1B38 else goto JOIN1B38
    JOIN1B38:  preds = [COND1B72,COND1B72]
      real faceTime1B70#1 = phi(faceTime185D,_t1AFD)
      int face1B55#1 = phi(_t17C6,face185B)
      real time1B52#1 = phi(_t1AFD,time1859)
      goto JOIN1B33
    JOIN1B33:  preds = [JOIN1B38,COND1B76]
      real faceTime1B75#2 = phi(faceTime1B70,faceTime185D)
      int face1B74#2 = phi(face1B55,face185B)
      real time1B73#3 = phi(time1B52,time1859)
      real _t1B8F#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T8) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T8)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T8) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T8) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T8)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t18F9,_t1AD8,_t18F9,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1B93#1 = GTE<real>(_t1B8F,_t1879);
      bool _t1BAF#1 = GT<real>(time1B73,_t1B8F);
      bool _t1BC1#1 = BAnd(_t1BAF,_t1939);
      bool _t1BC3#1 = BAnd(_t1B93,_t1BC1);
      if _t1BC3 then goto ASSIGN1BC7 else goto JOIN1BC5
    ASSIGN1BC7:  preds = [COND1C08]
      int _t1BC6#2 = 1;
      bool _t1BC8#1 = NEQ<int>(_t1856,_t1BC6);
      if _t1BC8 then goto JOIN1BCA else goto JOIN1BCA
    JOIN1BCA:  preds = [COND1C04,COND1C04]
      real faceTime1C02#1 = phi(faceTime1B75,_t1B8F)
      int face1BE7#1 = phi(_t1BC6,face1B74)
      real time1BE4#1 = phi(_t1B8F,time1B73)
      goto JOIN1BC5
    JOIN1BC5:  preds = [JOIN1BCA,COND1C08]
      real faceTime1C07#2 = phi(faceTime1C02,faceTime1B75)
      int face1C06#2 = phi(face1BE7,face1B74)
      real time1C05#3 = phi(time1BE4,time1B73)
      real _t1C21#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T8) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T8)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T8) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T8) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T8)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t198B,_t1AD8,_t198B,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1C25#1 = GTE<real>(_t1C21,_t1879);
      bool _t1C41#1 = GT<real>(time1C05,_t1C21);
      bool _t1C53#1 = BAnd(_t1C41,_t19CB);
      bool _t1C55#1 = BAnd(_t1C25,_t1C53);
      if _t1C55 then goto ASSIGN1C59 else goto JOIN1C57
    ASSIGN1C59:  preds = [COND1C9A]
      int _t1C58#2 = 2;
      bool _t1C5A#1 = NEQ<int>(_t1856,_t1C58);
      if _t1C5A then goto JOIN1C5C else goto JOIN1C5C
    JOIN1C5C:  preds = [COND1C96,COND1C96]
      real faceTime1C94#1 = phi(faceTime1C07,_t1C21)
      int face1C79#1 = phi(_t1C58,face1C06)
      real time1C76#1 = phi(_t1C21,time1C05)
      goto JOIN1C57
    JOIN1C57:  preds = [JOIN1C5C,COND1C9A]
      real faceTime1C99#2 = phi(faceTime1C94,faceTime1C07)
      int face1C98#2 = phi(face1C79,face1C06)
      real time1C97#3 = phi(time1C76,time1C05)
      real _t1CB3#4 = λ(T0[],T1[3],T2[3],T3[3],T4[],INT5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],T9[3])<((T0) - (Σ(i0=0..2)<((T1_{i0} * T2_{i0}))>(i0=0..2))) / ( (T4 * Σ(i0=0..2)<((T1_{i0} * Σ(i1=0..2)<(((Σ(i9=0..2)(i10=0..2)<((ϵ_{ii9,ii10,ii0} * Σ(i12=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i12}⊛Basis()dx_{i9},T8) * Σ(i13=0..2)<((ϵ_{ii12,ii13,ii1} * Probe(femV(noFunc, 5, 6, 6)_{i13}⊛Basis()dx_{i10},T8)))>(i13=0..2)))>(i12=0..2)))>(i9=0..2)(i10=0..2)) / ( (2 * Σ(i6=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i6}⊛Basis()dx_{'0'},T8) * Σ(i7=0..2)<((Probe(femV(noFunc, 5, 6, 6)_{i7}⊛Basis()dx_{'1'},T8) * Σ(i8=0..2)<((ϵ_{ii6,ii7,ii8} * Probe(femV(noFunc, 5, 6, 6)_{i8}⊛Basis()dx_{'2'},T8)))>(i8=0..2)))>(i7=0..2)))>(i6=0..2))) * T9_{i1}))>(i1=0..2)))>(i0=0..2)))> (_t18F1,_t1A1D,_t1AD8,_t1A1D,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4);
      bool _t1CB7#1 = GTE<real>(_t1CB3,_t1879);
      bool _t1CD3#1 = GT<real>(time1C97,_t1CB3);
      bool _t1CE5#1 = BAnd(_t1CD3,_t1A5D);
      bool _t1CE7#1 = BAnd(_t1CB7,_t1CE5);
      if _t1CE7 then goto ASSIGN1CEB else goto JOIN1CE9
    ASSIGN1CEB:  preds = [COND1D2C]
      int _t1CEA#2 = 3;
      bool _t1CEC#1 = NEQ<int>(_t1856,_t1CEA);
      if _t1CEC then goto JOIN1CEE else goto JOIN1CEE
    JOIN1CEE:  preds = [COND1D28,COND1D28]
      real faceTime1D26#1 = phi(faceTime1C99,_t1CB3)
      int face1D0B#1 = phi(_t1CEA,face1C98)
      real time1D08#1 = phi(_t1CB3,time1C97)
      goto JOIN1CE9
    JOIN1CE9:  preds = [JOIN1CEE,COND1D2C]
      real faceTime1D2B#2 = phi(faceTime1D26,faceTime1C99)
      int face1D2A#2 = phi(face1D0B,face1C98)
      real time1D29#1 = phi(time1D08,time1C97)
      bool _t1D2F#1 = NEQ<int>(face1D2A,face185B);
      if _t1D2F then goto ASSIGN2B48 else goto ASSIGN2B45
    ASSIGN2B48:  preds = [COND1D52]
      real _t1D34#1 = Max<real>(time1D29,_t18F1);
      real _t1D36#1 = IntToReal(face1D2A);
      tensor[2] _t1D38#1 = <tensor[2]>[_t1D34,_t1D36];
      goto JOIN1D31
    JOIN1D31:  preds = [ASSIGN1D39,JOIN1D41]
      tensor[2] _t1D3B#3 = phi(_t1D38,_t1D49)
      real _t1D56#1 = TensorIndex<tensor[2],[1]>(_t1D3B);
      int _t1D58#6 = FloorToInt(_t1D56);
      int[2] _t1D5A#2 = nextCell417B2 (_t1D58,_t1AD6,_t17CE);
      int _t1D5E#2 = Subscript<int[2]>(_t1D5A,_t17C6);
      bool _t1D60#1 = NEQ<int>(face185B,_t1D5E);
      if _t1D60 then goto ASSIGN1D64 else goto ASSIGN28E8
    ASSIGN1D64:  preds = [COND28F1]
      string _t1D63#1 = "face ";
      string _t1D69#1 = " to ";
      int _t1D71#1 = 1;
      int _t1D73#6 = Subscript<int[2]>(_t1D5A,_t1D71);
      string _t1D75#2 = "\n";
      string _t1D77#1 = "got: ";
      tensor[4] _t1D81#7 = <tensor[4]>[time17C2,_t18F1,_t18F1,_t18F1];
      tensor[4] _t1D8B#6 = <tensor[4]>[_t18F1,time17C2,_t18F1,_t18F1];
      tensor[4] _t1D95#7 = <tensor[4]>[_t18F1,_t18F1,time17C2,_t18F1];
      real _t1D97#1 = 0.971445146547e-16;
      tensor[4] _t1D9F#4 = <tensor[4]>[_t1D97,_t18F1,_t18F1,time17C2];
      tensor[4,4] _t1DA1#4 = <tensor[4,4]>[_t1D81,_t1D8B,_t1D95,_t1D9F];
      real _t1DA9#7 = -0.57735026919e0;
      tensor[4] _t1DAB#2 = <tensor[4]>[_t185F,_t185F,_t185F,_t1DA9];
      real _t1DAD#4 = -0.333333333333e0;
      real _t1DAF#2 = 0.666666666667e0;
      real _t1DB3#2 = 0.333333333333e0;
      tensor[4] _t1DB5#3 = <tensor[4]>[_t1DAD,_t1DAF,_t1DAD,_t1DB3];
      tensor[4] _t1DBF#3 = <tensor[4]>[_t1DAD,_t1DAD,_t1DAF,_t1DB3];
      tensor[4,4] _t1DCB#4 = <tensor[4,4]>[_t1DAB,_t1DB5,_t1DBF,_t1D9F];
      tensor[4] _t1DDF#1 = <tensor[4]>[_t1DA9,_t1DA9,_t1DA9,_t185F];
      tensor[4,4] _t1DF5#4 = <tensor[4,4]>[_t1DB5,_t1DDF,_t1DBF,_t1D9F];
      tensor[4,4] _t1E1F#4 = <tensor[4,4]>[_t1DB5,_t1DBF,_t1DAB,_t1D9F];
      tensor[4,4][4] _t1E21#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4] _t1E2B#1 = <tensor[4]>[_t185F,_t1987,_t1987,time17C2];
      tensor[4] _t1E35#1 = <tensor[4]>[_t185F,time17C2,_t18F1,_t18F1];
      tensor[4] _t1E3F#1 = <tensor[4]>[_t185F,_t18F1,time17C2,_t18F1];
      tensor[4] _t1E49#10 = <tensor[4]>[_t18F1,_t18F1,_t18F1,time17C2];
      tensor[4,4] _t1E4B#4 = <tensor[4,4]>[_t1E2B,_t1E35,_t1E3F,_t1E49];
      tensor[4,4] _t1E75#12 = <tensor[4,4]>[_t1D81,_t1D8B,_t1D95,_t1E49];
      tensor[4] _t1E89#1 = <tensor[4]>[_t1987,_t18F1,_t18F1,_t18F1];
      tensor[4,4] _t1E9F#4 = <tensor[4,4]>[_t1D8B,_t1E89,_t1D95,_t1E49];
      tensor[4,4] _t1EC9#4 = <tensor[4,4]>[_t1D8B,_t1D95,_t1D81,_t1E49];
      tensor[4,4][4] _t1ECB#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4] _t1ED5#1 = <tensor[4]>[_t1987,_t1DA9,_t1987,time17C2];
      tensor[4] _t1EDF#1 = <tensor[4]>[time17C2,_t1DA9,_t18F1,_t18F1];
      tensor[4] _t1EE9#1 = <tensor[4]>[_t18F1,_t1DA9,time17C2,_t18F1];
      tensor[4,4] _t1EF5#4 = <tensor[4,4]>[_t1ED5,_t1EDF,_t1EE9,_t1E49];
      tensor[4] _t1EFF#2 = <tensor[4]>[_t18F1,_t1987,_t18F1,_t18F1];
      tensor[4,4] _t1F1F#4 = <tensor[4,4]>[_t1EFF,_t1D81,_t1D95,_t1E49];
      tensor[4,4] _t1F73#4 = <tensor[4,4]>[_t1D81,_t1D95,_t1EFF,_t1E49];
      tensor[4,4][4] _t1F75#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4] _t1F7F#1 = <tensor[4]>[_t1987,_t1987,_t185F,time17C2];
      tensor[4] _t1F89#1 = <tensor[4]>[time17C2,_t18F1,_t185F,_t18F1];
      tensor[4] _t1F93#1 = <tensor[4]>[_t18F1,time17C2,_t185F,_t18F1];
      tensor[4,4] _t1F9F#4 = <tensor[4,4]>[_t1F7F,_t1F89,_t1F93,_t1E49];
      tensor[4,4] _t1FC9#4 = <tensor[4,4]>[_t1D95,_t1D81,_t1D8B,_t1E49];
      tensor[4] _t1FDD#1 = <tensor[4]>[_t18F1,_t18F1,_t1987,_t18F1];
      tensor[4,4] _t1FF3#4 = <tensor[4,4]>[_t1D81,_t1FDD,_t1D8B,_t1E49];
      tensor[4,4][4] _t201F#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t2021#1 = <tensor[4,4][4][4]>{_t1E21,_t1ECB,_t1F75,_t201F};
      tensor[4,4][4] _t2027#1 = Subscript<tensor[4,4][4][4]>(_t2021,_t1D58);
      tensor[4,4] _t2033#1 = Subscript<tensor[4,4][4]>(_t2027,_t1D73);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t1D63,_t1D58,_t1D69,_t1D73,_t1D75,_t1D77,_t2033,_t1D75);
      tensor[4,4][4] _t20EA#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4,4][4] _t2194#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4,4][4] _t223E#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4,4][4] _t22E8#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t22EA#1 = <tensor[4,4][4][4]>{_t20EA,_t2194,_t223E,_t22E8};
      tensor[4,4][4] _t22F0#1 = Subscript<tensor[4,4][4][4]>(_t22EA,_t1D58);
      tensor[4,4] _t22FC#1 = Subscript<tensor[4,4][4]>(_t22F0,_t1D73);
      real _t22FE#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t2302#3 = λ(T0[],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],T7[3])<((T0 * T1 * Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * T6_{i3}))>(i3=0..2)) + T7_{i0})>_{3} (_t22FE,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4,_t1AD8);
      real _t2304#1 = TensorIndex<tensor[3],[0]>(_t2302);
      real _t230C#1 = TensorIndex<tensor[3],[1]>(_t2302);
      real _t2314#1 = TensorIndex<tensor[3],[2]>(_t2302);
      tensor[4] _t2318#3 = <tensor[4]>[_t2304,_t230C,_t2314,time17C2];
      tensor[4] _t231A#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t22FC,_t2318);
      real _t231C#1 = TensorIndex<tensor[4],[0]>(_t231A);
      tensor[4,4][4] _t23C6#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4,4][4] _t2470#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4,4][4] _t251A#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4,4][4] _t25C4#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t25C6#1 = <tensor[4,4][4][4]>{_t23C6,_t2470,_t251A,_t25C4};
      tensor[4,4][4] _t25CC#1 = Subscript<tensor[4,4][4][4]>(_t25C6,_t1D58);
      tensor[4,4] _t25D8#1 = Subscript<tensor[4,4][4]>(_t25CC,_t1D73);
      tensor[4] _t25F6#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t25D8,_t2318);
      real _t25F8#1 = TensorIndex<tensor[4],[1]>(_t25F6);
      tensor[4,4][4] _t26A2#1 = <tensor[4,4][4]>{_t1DA1,_t1DCB,_t1DF5,_t1E1F};
      tensor[4,4][4] _t274C#1 = <tensor[4,4][4]>{_t1E4B,_t1E75,_t1E9F,_t1EC9};
      tensor[4,4][4] _t27F6#1 = <tensor[4,4][4]>{_t1EF5,_t1F1F,_t1E75,_t1F73};
      tensor[4,4][4] _t28A0#1 = <tensor[4,4][4]>{_t1F9F,_t1FC9,_t1FF3,_t1E75};
      tensor[4,4][4][4] _t28A2#1 = <tensor[4,4][4][4]>{_t26A2,_t274C,_t27F6,_t28A0};
      tensor[4,4][4] _t28A8#1 = Subscript<tensor[4,4][4][4]>(_t28A2,_t1D58);
      tensor[4,4] _t28B4#1 = Subscript<tensor[4,4][4]>(_t28A8,_t1D73);
      tensor[4] _t28D2#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t28B4,_t2318);
      real _t28D4#1 = TensorIndex<tensor[4],[2]>(_t28D2);
      tensor[3] _t28D6#1 = <tensor[3]>[_t231C,_t25F8,_t28D4];
      femData:MeshPos _t28E2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t17CE,_t1D5E,_t28D6,_t1D73);
      goto JOIN1D62
    JOIN1D62:  preds = [ASSIGN2B8B,ASSIGN2B4C]
      femData:MeshPos nmp28E5#3 = phi(_t28E2,_t28ED)
      bool _t28F3#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp28E5);
      bool _t28F5#1 = BNot(_t28F3);
      if _t28F5 then goto ASSIGN28FA else goto ASSIGN2B8C
    ASSIGN28FA:  preds = [COND2915]
      bool _t28F8#1 = true;
      goto JOIN28F7
    JOIN28F7:  preds = [ASSIGN28FA,JOIN2900]
      bool _t28F9#1 = phi(_t28F8,_t2902)
      if _t28F9 then goto RETURN(nmp28E5)2917 else goto JOIN2916
    RETURN(nmp28E5)2917:  preds = [COND2918]
      return nmp28E5
      goto JOIN2916
    JOIN2916:  preds = [*RETURN(nmp28E5)2917,COND2918]
      goto JOIN1840
    ASSIGN2B8C:  preds = [COND2915]
      bool _t28FE#1 = LT<real>(eTime1ACD,_t18F1);
      if _t28FE then goto ASSIGN2903 else goto ASSIGN2B8D
    ASSIGN2903:  preds = [COND2912]
      bool _t2901#1 = true;
      goto JOIN2900
    JOIN2900:  preds = [ASSIGN2903,JOIN2909]
      bool _t2902#1 = phi(_t2901,_t290B)
      goto JOIN28F7
    ASSIGN2B8D:  preds = [COND2912]
      bool _t2907#1 = GT<real>(eTime1ACD,time17C2);
      if _t2907 then goto ASSIGN290C else goto ASSIGN290E
    ASSIGN290C:  preds = [COND290F]
      bool _t290A#1 = true;
      goto JOIN2909
    JOIN2909:  preds = [ASSIGN290C,ASSIGN290E]
      bool _t290B#1 = phi(_t290A,_t290D)
      goto JOIN2900
    ASSIGN290E:  preds = [COND290F]
      bool _t290D#1 = LT<real>(time1AD1,timeEps17B5);
      goto JOIN2909
    ASSIGN28E8:  preds = [COND28F1]
      real _t28E7#1 = TensorIndex<tensor[2],[0]>(_t1D3B);
      tensor[3] _t28EB#1 = λ(T0[],T1[],INT2,FEM(mesh_t)3,FEM(mesh_t)4,T5[3],T6[3],T7[3])<((T0 * T1 * Σ(i3=0..2)<(((Σ(i11=0..2)(i12=0..2)<((ϵ_{ii11,ii12,ii0} * Σ(i14=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i14}⊛Basis()dx_{i11},T5) * Σ(i15=0..2)<((ϵ_{ii14,ii15,ii3} * Probe(femV(noFunc, 2, 3, 3)_{i15}⊛Basis()dx_{i12},T5)))>(i15=0..2)))>(i14=0..2)))>(i11=0..2)(i12=0..2)) / ( (2 * Σ(i8=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i8}⊛Basis()dx_{'0'},T5) * Σ(i9=0..2)<((Probe(femV(noFunc, 2, 3, 3)_{i9}⊛Basis()dx_{'1'},T5) * Σ(i10=0..2)<((ϵ_{ii8,ii9,ii10} * Probe(femV(noFunc, 2, 3, 3)_{i10}⊛Basis()dx_{'2'},T5)))>(i10=0..2)))>(i9=0..2)))>(i8=0..2))) * T6_{i3}))>(i3=0..2)) + T7_{i0})>_{3} (_t28E7,time17CB,_t17E4,_t17D4,_t17D4,_t17EA,dPos17B4,_t1AD8);
      femData:MeshPos _t28ED#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t17CE,_t28EB);
      goto JOIN1D62
    ASSIGN2B45:  preds = [COND1D52]
      bool _t1D3F#1 = EQ<real>(faceTime185D,faceTime1D2B);
      if _t1D3F then goto ASSIGN2B47 else goto ASSIGN2B46
    ASSIGN2B47:  preds = [COND1D51]
      tensor[2] _t1D46#1 = <tensor[2]>[_t1987,_t1987];
      goto JOIN1D41
    JOIN1D41:  preds = [ASSIGN2B47,ASSIGN1D4E]
      tensor[2] _t1D49#1 = phi(_t1D46,_t1D4D)
      goto JOIN1D31
    ASSIGN2B46:  preds = [COND1D51]
      real _t1D4B#1 = IntToReal(_t1856);
      tensor[2] _t1D4D#1 = <tensor[2]>[faceTime1D2B,_t1D4B];
      goto JOIN1D41
    ASSIGN2B25:  preds = [COND1ACC]
      bool _t1AB9#1 = EQ<real>(faceTime185D,faceTime1AA5);
      if _t1AB9 then goto ASSIGN2B26 else goto ASSIGN1AC6
    ASSIGN2B26:  preds = [COND1ACB]
      tensor[2] _t1AC0#1 = <tensor[2]>[_t1987,_t1987];
      goto JOIN1ABB
    JOIN1ABB:  preds = [ASSIGN2B26,ASSIGN1AC8]
      tensor[2] _t1AC3#1 = phi(_t1AC0,_t1AC7)
      goto JOIN1AAB
    ASSIGN1AC6:  preds = [COND1ACB]
      real _t1AC5#1 = IntToReal(_t1856);
      tensor[2] _t1AC7#1 = <tensor[2]>[faceTime1AA5,_t1AC5];
      goto JOIN1ABB
    ASSIGN291F:  preds = [FOREACH17CD]
      string _t291E#1 = "Took stupid way out!\n";
      Print<[string]>(_t291E);
      tensor[3] _t2922#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x17B3);
      int _t2924#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x17B3);
      femData:Mesh _t2926#2 = ExtractFem<femData:Mesh,femData:MeshPos>(x17B3);
      tensor[3] _t2931#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3])<(Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3) + T4_{i0})>_{3} (_t2924,_t2926,_t2926,_t2922,dPos17B4);
      femData:MeshPos cmp2933#1 = findPos17A0 (meshData17B7,_t2931);
      return cmp2933
}
## input initialization
  ENTRY16F0:  preds = []
    int timeSteps16E4#1 = 32;
    globals.timeSteps16DF = timeSteps16E4;
    real timeEps16E7#1 = 0.1e-6;
    globals.timeEps16E0 = timeEps16E7;
    real stepSize16EA#1 = 0.1e-1;
    globals.stepSize16E2 = stepSize16EA;
    int stepMax16ED#1 = 100;
    globals.stepMax16E3 = stepMax16ED;
    return
## global-variable initialization
  ENTRY2971:  preds = []
    femData:Mesh meshData293A#3 = globals.meshData16DC;
    femData:Space 0space03AB_intermedateGlobal2939#1 = globals.0space03AB_intermedateGlobal16DD;
    femData:FemFunc 0data03AD_intermedateGlobal2938#1 = globals.0data03AD_intermedateGlobal16DE;
    int _t293E#1 = 0;
    int _t2940#1 = 1;
    int _t2942#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData293A);
    int _t2944#1 = ISub(_t2942,_t2940);
    int[] _t2946#1 = Range(_t293E,_t2944);
    femData:MeshCell[] _t2948#1 = <femData:MeshCell[]>{};
  FOREACH294C:  preds = [ASSIGN2949,NEXT2951]
    foreach (_t294A in _t2946) on exit goto ASSIGN2953
      femData:MeshCell[] _t294B#1 = phi(_t2948,_t294F)
    femData:MeshCell _t294D#1 = LoadFem<femData:MeshCell>(meshData293A,_t294A);
    femData:MeshCell[] _t294F#1 = Append<femData:MeshCell>(_t294B,_t294D);
    goto FOREACH294C
  ASSIGN2953:  preds = [FOREACH294C]
    femData:Space space2952#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal2939,meshData293A);
    femData:FemFunc data2955#2 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal2938,space2952);
    globals.data16F3 = data2955;
    femData:Space _t2958#2 = ExtractFem<femData:Space,femData:FemFunc>(data2955);
    femData:Mesh _t295C#1 = ExtractFem<femData:Mesh,femData:Space>(_t2958);
    globals._t2BEB = _t295C;
    globals._tX2BEE = _t2958;
    return
## strand
  strand gg (tensor[3] startPos297B#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY299E:  preds = []
        femData:Mesh meshData2982#1 = globals.meshData16DC;
        tensor[3][1] _t298A#1 = <tensor[3][1]>{startPos297B};
        tensor[3][] _t298C#1 = MkDynamic<tensor[3],1>(_t298A);
        tensor[3][1] _t2990#1 = <tensor[3][1]>{startPos297B};
        tensor[3][] _t2992#1 = MkDynamic<tensor[3],1>(_t2990);
        int step2996#1 = 0;
        femData:MeshPos cPos2998#1 = findPos17A0 (meshData2982,startPos297B);
        self.stream = _t298C;
        self.newStream = _t2992;
        self.step = step2996;
        self.cPos = cPos2998;
        self.altCPos = startPos297B;
        self.startPos = startPos297B;
        return
    end state init
    method update
        ENTRY2AE9:  preds = []
          femData:Mesh _t2BEC#16 = globals._t2BEB;
          femData:Space _t2BEF#4 = globals._tX2BEE;
          femData:FemFunc data2BF0#4 = globals.data16F3;
          femData:Mesh meshData29AA#2 = globals.meshData16DC;
          femData:FemFunc data29A9#2 = globals.data16F3;
          real stepSize29A8#4 = globals.stepSize16E2;
          int stepMax29A7#1 = globals.stepMax16E3;
          tensor[3][] stream29B0#2 = self.stream;
          tensor[3][] newStream29B1#1 = self.newStream;
          int step29B2#3 = self.step;
          femData:MeshPos cPos29B3#6 = self.cPos;
          tensor[3] altCPos29B4#6 = self.altCPos;
          tensor[3] startPos29B5#1 = self.startPos;
          bool _t29BD#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos29B3);
          bool _t29BF#1 = BNot(_t29BD);
          if _t29BF then goto ASSIGN29C4 else goto ASSIGN29C7
        ASSIGN29C4:  preds = [COND29D5]
          bool _t29C2#1 = true;
          goto JOIN29C1
        JOIN29C1:  preds = [ASSIGN29C4,JOIN29CC]
          bool _t29C3#1 = phi(_t29C2,_t29CE)
          if _t29C3 then goto STABILIZE29D7 else goto JOIN29D6
        STABILIZE29D7:  preds = [COND29DD]
          stabilize
          goto JOIN29D6
        JOIN29D6:  preds = [*STABILIZE29D7,COND29DD]
          tensor[3] _t29DF#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos29B3);
          int _t29E1#3 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos29B3);
          femData:Mesh _t29E3#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos29B3);
          real _t29F0#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[3])<Sqrt(Σ(i0=0..2)<(((Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0}) * (Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)) - (T4_{i0})))>(i0=0..2))> (_t29E1,_t29E3,_t29E3,_t29DF,altCPos29B4);
          real _t29F2#1 = 0.1e-5;
          bool _t29F4#1 = GT<real>(_t29F0,_t29F2);
          if _t29F4 then goto ASSIGN29F8 else goto ASSIGN29FF
        ASSIGN29F8:  preds = [COND2A09]
          string _t29F7#1 = "Error in tracing: At step:";
          string _t29F9#1 = " with particle:";
          string _t29FB#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t29F7,step29B2,_t29F9,startPos29B5,_t29FB);
          goto JOIN29F6
        JOIN29F6:  preds = [MASSIGN29FD,MASSIGN2A08]
          real _t2A0A#2 = 0.5e0;
          if _t29BD then goto ASSIGN2B98 else goto ASSIGN2A51
        ASSIGN2B98:  preds = [COND2A54]
          femData:MeshCell c2A24#1 = LoadFem<femData:MeshCell>(_t29E3,_t29E1);
          int _t2A29#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A24);
          femData:FuncCell _t2A2B#2 = LoadFem<femData:FuncCell>(data29A9,_t2A29);
          femData:FemFunc _t2A2F#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2A2B);
          femData:Space _t2A3A#2 = ExtractFem<femData:Space,femData:FemFunc>(_t2A2F);
          int _t2A43#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2A2B);
          tensor[3] _t2A4B#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],INT4,FEM(fns_t)5,FEM(func_t)6,T7[3])<(Probe(femV(noFunc, 0, 1, 2)_{i0}⊛Basis(),T3)) / ( Sqrt(Σ(i1=0..2)<((Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3) * Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3)))>(i1=0..2)))>_{3} (_t2A43,_t2A3A,_t2A2F,_t29DF,_t2A43,_t2A3A,_t2A2F,_t29DF);
          goto JOIN2A1F
        JOIN2A1F:  preds = [ASSIGN2BDE,ASSIGN2A51]
          tensor[3] _t2A4E#1 = phi(_t2A4B,_t2A50)
          tensor[3] up12A55#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2A0A,stepSize29A8,_t2A4E);
          femData:MeshPos intermed2A57#4 = posMove2937 (cPos29B3,up12A55);
          tensor[3] altIntermed2A59#3 = λ(T0[3],T1[],T2[],FEM(mesh_t)3,FEM(fns_t)4,FEM(func_t)5,FEM(mesh_t)6,FEM(mesh_t)7,FEM(mesh_t)8,T9[3],FEM(mesh_t)10,FEM(fns_t)11,FEM(func_t)12,FEM(mesh_t)13,FEM(mesh_t)14,FEM(mesh_t)15,T16[3])<(T0_{i0} + ((T1 * T2 * Probe(Cmp(femV(17A0, 3, 4, 5)_{i0}⊛Basis())[femInvV(17A0, 3, 3, 3)_{i0}⊛Basis(){3}],T0))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(17A0, 3, 4, 5)_{i2}⊛Basis())[femInvV(17A0, 3, 3, 3)_{i0}⊛Basis(){3}],T0) * Probe(Cmp(femV(17A0, 3, 4, 5)_{i2}⊛Basis())[femInvV(17A0, 3, 3, 3)_{i0}⊛Basis(){3}],T0)))>(i2=0..2))))>_{3} (altCPos29B4,_t2A0A,stepSize29A8,_t2BEC,_t2BEF,data2BF0,_t2BEC,_t2BEC,_t2BEC,altCPos29B4,_t2BEC,_t2BEF,data2BF0,_t2BEC,_t2BEC,_t2BEC,altCPos29B4);
          bool _t2A5C#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed2A57);
          bool _t2A5E#1 = BNot(_t2A5C);
          if _t2A5E then goto ASSIGN2A63 else goto ASSIGN2A65
        ASSIGN2A63:  preds = [COND2A6A]
          bool _t2A61#1 = true;
          goto JOIN2A60
        JOIN2A60:  preds = [ASSIGN2A63,ASSIGN2A69]
          bool _t2A62#1 = phi(_t2A61,_t2A68)
          if _t2A62 then goto STABILIZE2A6C else goto JOIN2A6B
        STABILIZE2A6C:  preds = [COND2A72]
          stabilize
          goto JOIN2A6B
        JOIN2A6B:  preds = [*STABILIZE2A6C,COND2A72]
          if _t2A5C then goto ASSIGN2A82 else goto ASSIGN2AB2
        ASSIGN2A82:  preds = [COND2AB5]
          femData:Mesh _t2A81#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed2A57);
          int _t2A83#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed2A57);
          femData:MeshCell c2A85#1 = LoadFem<femData:MeshCell>(_t2A81,_t2A83);
          tensor[3] ref2A87#2 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed2A57);
          int _t2A8A#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2A85);
          femData:FuncCell _t2A8C#2 = LoadFem<femData:FuncCell>(data29A9,_t2A8A);
          femData:FemFunc _t2A90#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2A8C);
          femData:Space _t2A9B#2 = ExtractFem<femData:Space,femData:FemFunc>(_t2A90);
          int _t2AA4#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2A8C);
          tensor[3] _t2AAC#1 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],INT4,FEM(fns_t)5,FEM(func_t)6,T7[3])<(Probe(femV(noFunc, 0, 1, 2)_{i0}⊛Basis(),T3)) / ( Sqrt(Σ(i1=0..2)<((Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3) * Probe(femV(noFunc, 0, 1, 2)_{i1}⊛Basis(),T3)))>(i1=0..2)))>_{3} (_t2AA4,_t2A9B,_t2A90,ref2A87,_t2AA4,_t2A9B,_t2A90,ref2A87);
          goto JOIN2A80
        JOIN2A80:  preds = [ASSIGN2BE7,ASSIGN2AB2]
          tensor[3] _t2AAF#1 = phi(_t2AAC,_t2AB1)
          tensor[3] up22AB6#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize29A8,_t2AAF);
          femData:MeshPos cPos2AB8#6 = posMove2937 (cPos29B3,up22AB6);
          tensor[3] altCPos2ABA#3 = λ(T0[3],T1[],FEM(mesh_t)2,FEM(fns_t)3,FEM(func_t)4,FEM(mesh_t)5,FEM(mesh_t)6,FEM(mesh_t)7,T8[3],FEM(mesh_t)9,FEM(fns_t)10,FEM(func_t)11,FEM(mesh_t)12,FEM(mesh_t)13,FEM(mesh_t)14,T15[3])<(T0_{i0} + ((T1 * Probe(Cmp(femV(17A0, 2, 3, 4)_{i0}⊛Basis())[femInvV(17A0, 2, 2, 2)_{i0}⊛Basis(){3}],T8))) / ( Sqrt(Σ(i2=0..2)<((Probe(Cmp(femV(17A0, 2, 3, 4)_{i2}⊛Basis())[femInvV(17A0, 2, 2, 2)_{i0}⊛Basis(){3}],T8) * Probe(Cmp(femV(17A0, 2, 3, 4)_{i2}⊛Basis())[femInvV(17A0, 2, 2, 2)_{i0}⊛Basis(){3}],T8)))>(i2=0..2))))>_{3} (altCPos29B4,stepSize29A8,_t2BEC,_t2BEF,data2BF0,_t2BEC,_t2BEC,_t2BEC,altIntermed2A59,_t2BEC,_t2BEF,data2BF0,_t2BEC,_t2BEC,_t2BEC,altIntermed2A59);
          bool _t2ABC#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2AB8);
          bool _t2ABE#1 = BNot(_t2ABC);
          if _t2ABE then goto MASSIGN2AC1 else goto JOIN2AC0
        MASSIGN2AC1:  preds = [COND2AC8]
          Print<[tensor[3][]]>(stream29B0);
          self.cPos = cPos2AB8;
          self.altCPos = altCPos2ABA;
          stabilize
          goto JOIN2AC0
        JOIN2AC0:  preds = [*STABILIZE2AC2,COND2AC8]
          tensor[3] _t2ACA#1 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2AB8);
          int _t2ACC#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2AB8);
          femData:Mesh _t2ACE#2 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2AB8);
          tensor[3] _t2AD3#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3])<Probe(femV(noFunc, 0, 1, 1)_{i0}⊛Basis(),T3)>_{3} (_t2ACC,_t2ACE,_t2ACE,_t2ACA);
          tensor[3][1] _t2AD9#1 = <tensor[3][1]>{_t2AD3};
          tensor[3][] _t2ADB#1 = MkDynamic<tensor[3],1>(_t2AD9);
          tensor[3][] stream2ADD#1 = Concat<tensor[3]>(stream29B0,_t2ADB);
          tensor[3][1] _t2ADF#1 = <tensor[3][1]>{altCPos2ABA};
          tensor[3][] _t2AE1#1 = MkDynamic<tensor[3],1>(_t2ADF);
          tensor[3][] newStream2AE3#1 = Concat<tensor[3]>(newStream29B1,_t2AE1);
          int _t2AE5#1 = 1;
          int step2AE7#1 = IAdd(step29B2,_t2AE5);
          self.stream = stream2ADD;
          self.newStream = newStream2AE3;
          self.step = step2AE7;
          self.cPos = cPos2AB8;
          self.altCPos = altCPos2ABA;
          active
        ASSIGN2AB2:  preds = [COND2AB5]
          tensor[3] _t2AB1#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2A80
        ASSIGN2A65:  preds = [COND2A6A]
          femData:MeshPos _t2A64#1 = findPos17A0 (meshData29AA,altIntermed2A59);
          bool _t2A66#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t2A64);
          bool _t2A68#1 = BNot(_t2A66);
          goto JOIN2A60
        ASSIGN2A51:  preds = [COND2A54]
          tensor[3] _t2A50#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2A1F
        ASSIGN29FF:  preds = [COND2A09]
          string _t29FE#1 = "fine in cell:";
          femData:MeshCell _t2A04#1 = LoadFem<femData:MeshCell>(_t29E3,_t29E1);
          string _t2A06#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t29FE,_t2A04,_t2A06);
          goto JOIN29F6
        ASSIGN29C7:  preds = [COND29D5]
          femData:MeshPos _t29C6#1 = findPos17A0 (meshData29AA,altCPos29B4);
          bool _t29C8#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t29C6);
          bool _t29CA#1 = BNot(_t29C8);
          if _t29CA then goto ASSIGN29CF else goto ASSIGN29D1
        ASSIGN29CF:  preds = [COND29D2]
          bool _t29CD#1 = true;
          goto JOIN29CC
        JOIN29CC:  preds = [ASSIGN29CF,ASSIGN29D1]
          bool _t29CE#1 = phi(_t29CD,_t29D0)
          goto JOIN29C1
        ASSIGN29D1:  preds = [COND29D2]
          bool _t29D0#1 = EQ<int>(step29B2,stepMax29A7);
          goto JOIN29CC
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY2979:  preds = []
      tensor[3][] startPoints2973#1 = globals.startPoints16E1;
    FOREACH2976:  preds = [ASSIGN2974,NEXT2978]
      foreach (x2975 in startPoints2973) on exit goto RETURN297A
      new gg(x2975);
      goto FOREACH2976
    RETURN297A:  preds = [FOREACH2976]
      return
#### end program ####
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData2BF8 (meshData) = <no-default>
  input 0space03AB_intermedateGlobal2BF9 (space) = <no-default>
  input 0data03AD_intermedateGlobal2BFA (data) = <no-default>
  input timeSteps2BFB (timeSteps) = <default>
  input timeEps2BFC (timeEps) = <default>
  input startPoints2BFD (startPoints) = <no-default>
  input stepSize2BFE (stepSize) = <default>
  input stepMax2BFF (stepMax) = <default>
  global femData:FemFunc data2C00
  global femData:Mesh _t2C01
  global femData:Space _tX2C02
## functions
  function femData:MeshPos findPos2C4C (femData:Mesh mesh2C4D#31, tensor[3] pos2C4E#6) {
    ENTRY2C4F:  preds = []
      real _t2C50#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn2C52#49 = <tensor[3]>[_t2C50,_t2C50,_t2C50];
      int newtonInt2C54#1 = 0;
      int[] yayCells2C56#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh2C4D,pos2C4E);
    FOREACH2C59:  preds = [ASSIGN2C57,NEXT2D73]
      foreach (cellItter2C58 in yayCells2C56) on exit goto ASSIGN2D75
      int _t2C5A#1 = 16;
      int[] _t2C5C#1 = Range(newtonInt2C54,_t2C5A);
    FOREACH2C5F:  preds = [ASSIGN2C5D,NEXT2D72]
      foreach (newtonItter2C5E in _t2C5C) on exit goto NEXT2D73
        tensor[3] xn2C61#15 = phi(xn2C52,xn2C60)
      int[4] femIndicies2C72#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh2C4D,cellItter2C58);
      tensor[4,3] femDofs2C73#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh2C4D,femIndicies2C72);
      tensor[4,3] dofs2C71#1 = femDofs2C73;
      tensor[3,4] basisResult2C74#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3,3] probe_l_102C62#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter2C58,mesh2C4D,xn2C52,dofs2C71,basisResult2C74,xn2C52);
      tensor[3,3,3] op1_e3_l_122C63#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_102C62);
      tensor[3,3,3] op1_e3_l_132C64#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_102C62,op1_e3_l_122C63);
      tensor[4,3] dofs2C75#1 = femDofs2C73;
      tensor[3,4] basisResult2C76#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_142C65#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2C75,basisResult2C76,xn2C52);
      tensor[4,3] dofs2C77#1 = femDofs2C73;
      tensor[3,4] basisResult2C78#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_152C66#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2C77,basisResult2C78,xn2C52);
      tensor[4,3] dofs2C79#1 = femDofs2C73;
      tensor[3,4] basisResult2C7A#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_162C67#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2C79,basisResult2C7A,xn2C52);
      tensor[3,3] op1_e3_l_172C68#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_162C67);
      tensor[3] op1_e3_l_182C69#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_152C66,op1_e3_l_172C68);
      real op1_e3_l_192C6A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_142C65,op1_e3_l_182C69);
      tensor[3,3] op1_e3_l_202C6B#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_132C64);
      real op1_e3_l_212C6C#1 = λ(T0[])<(2 * T0)> (op1_e3_l_192C6A);
      tensor[4,3] dofs2C7B#1 = femDofs2C73;
      tensor[4] basisResult2C7C#1 = EvaluateBasis<BasisArray(4)>(xn2C61);
      tensor[3] probe_l_222C6D#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn2C61,cellItter2C58,mesh2C4D,dofs2C7B,basisResult2C7C,xn2C61);
      tensor[3,3] op1_e3_l_232C6E#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_202C6B,op1_e3_l_212C6C);
      tensor[3] op1_e3_l_242C6F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos2C4E,probe_l_222C6D);
      tensor[3] op1_e3_l_252C70#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_232C6E,op1_e3_l_242C6F);
      tensor[3] xn2C60#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn2C61,op1_e3_l_252C70);
      real _t2C99#2 = 0.1e-7;
      real _t2C9B#1 = λ(T0[],T1[])<(T0 * T1)> (_t2C99,_t2C99);
      int[4] femIndicies2CAE#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh2C4D,cellItter2C58);
      tensor[4,3] femDofs2CAF#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh2C4D,femIndicies2CAE);
      tensor[4,3] dofs2CAD#1 = femDofs2CAF;
      tensor[3,4] basisResult2CB0#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3,3] probe_l_182C9E#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter2C58,mesh2C4D,xn2C52,dofs2CAD,basisResult2CB0,xn2C52);
      tensor[3,3,3] op1_e3_l_202C9F#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_182C9E);
      tensor[3,3,3] op1_e3_l_212CA0#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_182C9E,op1_e3_l_202C9F);
      tensor[4,3] dofs2CB1#1 = femDofs2CAF;
      tensor[3,4] basisResult2CB2#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_222CA1#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2CB1,basisResult2CB2,xn2C52);
      tensor[4,3] dofs2CB3#1 = femDofs2CAF;
      tensor[3,4] basisResult2CB4#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_232CA2#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2CB3,basisResult2CB4,xn2C52);
      tensor[4,3] dofs2CB5#1 = femDofs2CAF;
      tensor[3,4] basisResult2CB6#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_242CA3#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2CB5,basisResult2CB6,xn2C52);
      tensor[3,3] op1_e3_l_252CA4#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_242CA3);
      tensor[3] op1_e3_l_262CA5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_232CA2,op1_e3_l_252CA4);
      real op1_e3_l_272CA6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_222CA1,op1_e3_l_262CA5);
      tensor[3,3] op1_e3_l_282CA7#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_212CA0);
      real op1_e3_l_292CA8#1 = λ(T0[])<(2 * T0)> (op1_e3_l_272CA6);
      tensor[4,3] dofs2CB7#1 = femDofs2CAF;
      tensor[4] basisResult2CB8#1 = EvaluateBasis<BasisArray(4)>(xn2C61);
      tensor[3] probe_l_302CA9#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C61,dofs2CB7,basisResult2CB8,xn2C61);
      tensor[3,3] op1_e3_l_312CAA#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_282CA7,op1_e3_l_292CA8);
      tensor[3] op1_e3_l_322CAB#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos2C4E,probe_l_302CA9);
      tensor[3] op1_e3_l_482CAC#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_312CAA,op1_e3_l_322CAB);
      real _t2C9D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_482CAC,op1_e3_l_482CAC);
      bool _t2CD5#1 = GTE<real>(_t2C9B,_t2C9D);
      if _t2CD5 then goto ASSIGN2CD9 else goto JOIN2D71
    ASSIGN2CD9:  preds = [COND2CD7]
      real _t2CD8#4 = 0.1e1;
      real _t2CDA#4 = 0.1e-8;
      real _t2CDC#1 = λ(T0[],T1[])<(T0 + T1)> (_t2CD8,_t2CDA);
      tensor[3] _t2CDE#1 = <tensor[3]>[_t2CD8,_t2CD8,_t2CD8];
      int[4] femIndicies2CF2#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh2C4D,cellItter2C58);
      tensor[4,3] femDofs2CF3#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh2C4D,femIndicies2CF2);
      tensor[4,3] dofs2CF1#1 = femDofs2CF3;
      tensor[3,4] basisResult2CF4#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3,3] probe_l_112CE1#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter2C58,mesh2C4D,xn2C52,dofs2CF1,basisResult2CF4,xn2C52);
      tensor[3,3,3] op1_e3_l_132CE2#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_112CE1);
      tensor[3,3,3] op1_e3_l_142CE3#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_112CE1,op1_e3_l_132CE2);
      tensor[4,3] dofs2CF5#1 = femDofs2CF3;
      tensor[3,4] basisResult2CF6#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_152CE4#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2CF5,basisResult2CF6,xn2C52);
      tensor[4,3] dofs2CF7#1 = femDofs2CF3;
      tensor[3,4] basisResult2CF8#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_162CE5#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2CF7,basisResult2CF8,xn2C52);
      tensor[4,3] dofs2CF9#1 = femDofs2CF3;
      tensor[3,4] basisResult2CFA#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_172CE6#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2CF9,basisResult2CFA,xn2C52);
      tensor[3,3] op1_e3_l_182CE7#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_172CE6);
      tensor[3] op1_e3_l_192CE8#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_162CE5,op1_e3_l_182CE7);
      real op1_e3_l_202CE9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_152CE4,op1_e3_l_192CE8);
      tensor[3,3] op1_e3_l_212CEA#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_142CE3);
      real op1_e3_l_222CEB#1 = λ(T0[])<(2 * T0)> (op1_e3_l_202CE9);
      tensor[4,3] dofs2CFB#1 = femDofs2CF3;
      tensor[4] basisResult2CFC#1 = EvaluateBasis<BasisArray(4)>(xn2C61);
      tensor[3] probe_l_232CEC#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn2C61,cellItter2C58,mesh2C4D,dofs2CFB,basisResult2CFC,xn2C61);
      tensor[3,3] op1_e3_l_242CED#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_212CEA,op1_e3_l_222CEB);
      tensor[3] op1_e3_l_252CEE#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos2C4E,probe_l_232CEC);
      tensor[3] op1_e3_l_262CEF#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_242CED,op1_e3_l_252CEE);
      tensor[3] op1_e3_l_272CF0#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn2C61,op1_e3_l_262CEF);
      real _t2CE0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2CDE,op1_e3_l_272CF0);
      bool _t2D1A#1 = GT<real>(_t2CDC,_t2CE0);
      tensor[3] _t2D1C#1 = <tensor[3]>[_t2CDA,_t2CDA,_t2CDA];
      int[4] femIndicies2D30#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh2C4D,cellItter2C58);
      tensor[4,3] femDofs2D31#5 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh2C4D,femIndicies2D30);
      tensor[4,3] dofs2D2F#1 = femDofs2D31;
      tensor[3,4] basisResult2D32#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3,3] probe_l_112D1F#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter2C58,mesh2C4D,xn2C52,dofs2D2F,basisResult2D32,xn2C52);
      tensor[3,3,3] op1_e3_l_132D20#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_112D1F);
      tensor[3,3,3] op1_e3_l_142D21#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_112D1F,op1_e3_l_132D20);
      tensor[4,3] dofs2D33#1 = femDofs2D31;
      tensor[3,4] basisResult2D34#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_152D22#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2D33,basisResult2D34,xn2C52);
      tensor[4,3] dofs2D35#1 = femDofs2D31;
      tensor[3,4] basisResult2D36#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_162D23#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2D35,basisResult2D36,xn2C52);
      tensor[4,3] dofs2D37#1 = femDofs2D31;
      tensor[3,4] basisResult2D38#1 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3] probe_l_172D24#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,dofs2D37,basisResult2D38,xn2C52);
      tensor[3,3] op1_e3_l_182D25#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_172D24);
      tensor[3] op1_e3_l_192D26#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_162D23,op1_e3_l_182D25);
      real op1_e3_l_202D27#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_152D22,op1_e3_l_192D26);
      tensor[3,3] op1_e3_l_212D28#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_142D21);
      real op1_e3_l_222D29#1 = λ(T0[])<(2 * T0)> (op1_e3_l_202D27);
      tensor[4,3] dofs2D39#1 = femDofs2D31;
      tensor[4] basisResult2D3A#1 = EvaluateBasis<BasisArray(4)>(xn2C61);
      tensor[3] probe_l_232D2A#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn2C61,cellItter2C58,mesh2C4D,dofs2D39,basisResult2D3A,xn2C61);
      tensor[3,3] op1_e3_l_242D2B#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_212D28,op1_e3_l_222D29);
      tensor[3] op1_e3_l_252D2C#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos2C4E,probe_l_232D2A);
      tensor[3] op1_e3_l_262D2D#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_242D2B,op1_e3_l_252D2C);
      tensor[3] op1_e3_l_272D2E#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn2C61,op1_e3_l_262D2D);
      tensor[3] _t2D1E#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2D1C,op1_e3_l_272D2E);
      real _t2D58#1 = TensorIndex<tensor[3],[0]>(_t2D1E);
      real _t2D5A#3 = -0.e0;
      bool _t2D5C#1 = GT<real>(_t2D58,_t2D5A);
      real _t2D5E#1 = TensorIndex<tensor[3],[1]>(_t2D1E);
      bool _t2D60#1 = GT<real>(_t2D5E,_t2D5A);
      real _t2D62#1 = TensorIndex<tensor[3],[2]>(_t2D1E);
      bool _t2D64#1 = GT<real>(_t2D62,_t2D5A);
      bool _t2D66#1 = BAnd(_t2D60,_t2D64);
      bool _t2D68#1 = BAnd(_t2D5C,_t2D66);
      bool _t2D6A#1 = BAnd(_t2D1A,_t2D68);
      if _t2D6A then goto ASSIGN2D6E else goto JOIN2D70
    ASSIGN2D6E:  preds = [COND2D6C]
      femData:MeshPos _t2D6D#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh2C4D,cellItter2C58,xn2C60,pos2C4E);
      return _t2D6D
      goto JOIN2D70
    JOIN2D70:  preds = [*RETURN(_t2D6D)2D6F,COND2D6C]
      goto JOIN2D71
    JOIN2D71:  preds = [JOIN2D70,COND2CD7]
      goto FOREACH2C5F
    NEXT2D73:  preds = [FOREACH2C5F]
      goto FOREACH2C59
    ASSIGN2D75:  preds = [FOREACH2C59]
      string _t2D74#1 = "Bad end 2";
      string _t2D76#1 = "\n";
      Print<[string,string]>(_t2D74,_t2D76);
      femData:MeshPos _t2D79#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2C4D);
      return _t2D79
}
  function int[2] nextCell43260 (int faceIdx3261#1, int cell3262#1, femData:Mesh mesh3263#1) {
    ENTRY3264:  preds = []
      int _t3265#1 = 8;
      int _t3267#1 = IMul(cell3262,_t3265);
      int _t3269#1 = 2;
      int _t326B#1 = IMul(faceIdx3261,_t3269);
      int _t326D#1 = IAdd(_t3267,_t326B);
      int[2] _t326F#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh3263,_t326D);
      return _t326F
}
  function femData:MeshPos posMove2DF4 (femData:MeshPos x2DF5#6, tensor[3] dPos2DF6#18) {
    ENTRY2DF7:  preds = []
      femData:Mesh meshData2DF8#1 = globals.meshData2BF8;
      int timeSteps2DFA#1 = globals.timeSteps2BFB;
      real timeEps2DFC#1 = globals.timeEps2BFC;
      bool _t2DFE#1 = ExtractFemItem<bool,Valid(MeshPos)>(x2DF5);
      bool _t2E00#1 = BNot(_t2DFE);
      if _t2E00 then goto RETURN(x2DF5)2E03 else goto JOIN2E04
    RETURN(x2DF5)2E03:  preds = [COND2E02]
      return x2DF5
      goto JOIN2E04
    JOIN2E04:  preds = [*RETURN(x2DF5)2E03,COND2E02]
      real time2E05#23 = 0.1e1;
      int _t2E07#6 = 0;
      int[] _t2E09#1 = Range(_t2E07,timeSteps2DFA);
    FOREACH2E0C:  preds = [ASSIGN2E0A,NEXT2EDA]
      foreach (i2E0B in _t2E09) on exit goto ASSIGN33C2
        femData:MeshPos cmp2E0E#6 = phi(x2DF5,cmp2ED5)
        real time2E1B#19 = phi(time2E05,time2ED7)
      femData:Mesh _t2E0D#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp2E0E);
      int _t2E10#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp2E0E);
      femData:MeshCell _t2E12#2 = LoadFem<femData:MeshCell>(_t2E0D,_t2E10);
      femData:Mesh _t2E14#103 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2E12);
      int _t2E16#86 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2E12);
      tensor[3] _t2E18#211 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp2E0E);
      int[4] femIndicies2E2B#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs2E2C#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies2E2B);
      tensor[4,3] dofs2E2A#1 = femDofs2E2C;
      tensor[3,4] basisResult2E2D#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_72E1C#2 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E18,_t2E16,_t2E14,dofs2E2A,basisResult2E2D,_t2E18);
      tensor[3,3,3] op1_e3_l_92E1D#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72E1C);
      tensor[3,3,3] op1_e3_l_102E1E#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72E1C,op1_e3_l_92E1D);
      tensor[4,3] dofs2E2E#1 = femDofs2E2C;
      tensor[3,4] basisResult2E2F#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_112E1F#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2E2E,basisResult2E2F,_t2E18);
      tensor[4,3] dofs2E30#1 = femDofs2E2C;
      tensor[3,4] basisResult2E31#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_122E20#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2E30,basisResult2E31,_t2E18);
      tensor[4,3] dofs2E32#1 = femDofs2E2C;
      tensor[3,4] basisResult2E33#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_132E21#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2E32,basisResult2E33,_t2E18);
      tensor[3,3] op1_e3_l_142E22#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_132E21);
      tensor[3] op1_e3_l_152E23#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_122E20,op1_e3_l_142E22);
      real op1_e3_l_162E24#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_112E1F,op1_e3_l_152E23);
      tensor[3,3] op1_e3_l_172E25#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_102E1E);
      real op1_e3_l_182E26#1 = λ(T0[])<(2 * T0)> (op1_e3_l_162E24);
      tensor[3,3] op1_e3_l_192E27#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_172E25,op1_e3_l_182E26);
      tensor[3] op1_e3_l_202E28#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_192E27);
      tensor[3] op1_e3_l_212E29#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (time2E1B,op1_e3_l_202E28);
      tensor[3] newPos2E1A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2E18,op1_e3_l_212E29);
      real _t2E4D#4 = 0.1e-8;
      real _t2E4F#1 = λ(T0[],T1[])<(T0 + T1)> (time2E05,_t2E4D);
      tensor[3] _t2E51#1 = <tensor[3]>[time2E05,time2E05,time2E05];
      int[4] femIndicies2E64#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs2E65#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies2E64);
      tensor[4,3] dofs2E63#1 = femDofs2E65;
      tensor[3,4] basisResult2E66#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_82E54#2 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E18,_t2E16,_t2E14,dofs2E63,basisResult2E66,_t2E18);
      tensor[3,3,3] op1_e3_l_102E55#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_82E54);
      tensor[3,3,3] op1_e3_l_112E56#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_82E54,op1_e3_l_102E55);
      tensor[4,3] dofs2E67#1 = femDofs2E65;
      tensor[3,4] basisResult2E68#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_122E57#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2E67,basisResult2E68,_t2E18);
      tensor[4,3] dofs2E69#1 = femDofs2E65;
      tensor[3,4] basisResult2E6A#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_132E58#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2E69,basisResult2E6A,_t2E18);
      tensor[4,3] dofs2E6B#1 = femDofs2E65;
      tensor[3,4] basisResult2E6C#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_142E59#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2E6B,basisResult2E6C,_t2E18);
      tensor[3,3] op1_e3_l_152E5A#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_142E59);
      tensor[3] op1_e3_l_162E5B#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_132E58,op1_e3_l_152E5A);
      real op1_e3_l_172E5C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_122E57,op1_e3_l_162E5B);
      tensor[3,3] op1_e3_l_182E5D#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_112E56);
      real op1_e3_l_192E5E#1 = λ(T0[])<(2 * T0)> (op1_e3_l_172E5C);
      tensor[3,3] op1_e3_l_202E5F#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_182E5D,op1_e3_l_192E5E);
      tensor[3] op1_e3_l_212E60#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_202E5F);
      tensor[3] op1_e3_l_222E61#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (time2E1B,op1_e3_l_212E60);
      tensor[3] op1_e3_l_232E62#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2E18,op1_e3_l_222E61);
      real _t2E53#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2E51,op1_e3_l_232E62);
      bool _t2E87#1 = GT<real>(_t2E4F,_t2E53);
      tensor[3] _t2E89#1 = <tensor[3]>[_t2E4D,_t2E4D,_t2E4D];
      int[4] femIndicies2E9B#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs2E9C#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies2E9B);
      tensor[4,3] dofs2E9A#1 = femDofs2E9C;
      tensor[3,4] basisResult2E9D#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_82E8C#2 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E18,_t2E16,_t2E14,dofs2E9A,basisResult2E9D,_t2E18);
      tensor[3,3,3] op1_e3_l_102E8D#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_82E8C);
      tensor[3,3,3] op1_e3_l_112E8E#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_82E8C,op1_e3_l_102E8D);
      tensor[4,3] dofs2E9E#1 = femDofs2E9C;
      tensor[3,4] basisResult2E9F#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_122E8F#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2E9E,basisResult2E9F,_t2E18);
      tensor[4,3] dofs2EA0#1 = femDofs2E9C;
      tensor[3,4] basisResult2EA1#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_132E90#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2EA0,basisResult2EA1,_t2E18);
      tensor[4,3] dofs2EA2#1 = femDofs2E9C;
      tensor[3,4] basisResult2EA3#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_142E91#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2EA2,basisResult2EA3,_t2E18);
      tensor[3,3] op1_e3_l_152E92#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_142E91);
      tensor[3] op1_e3_l_162E93#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_132E90,op1_e3_l_152E92);
      real op1_e3_l_172E94#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_122E8F,op1_e3_l_162E93);
      tensor[3,3] op1_e3_l_182E95#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_112E8E);
      real op1_e3_l_192E96#1 = λ(T0[])<(2 * T0)> (op1_e3_l_172E94);
      tensor[3,3] op1_e3_l_202E97#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_182E95,op1_e3_l_192E96);
      tensor[3] op1_e3_l_212E98#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_202E97);
      tensor[3] op1_e3_l_222E99#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (time2E1B,op1_e3_l_212E98);
      tensor[3] _t2E8B#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (_t2E89,_t2E18,op1_e3_l_222E99);
      real _t2EBD#1 = TensorIndex<tensor[3],[0]>(_t2E8B);
      real _t2EBF#3 = -0.e0;
      bool _t2EC1#1 = GT<real>(_t2EBD,_t2EBF);
      real _t2EC3#1 = TensorIndex<tensor[3],[1]>(_t2E8B);
      bool _t2EC5#1 = GT<real>(_t2EC3,_t2EBF);
      real _t2EC7#1 = TensorIndex<tensor[3],[2]>(_t2E8B);
      bool _t2EC9#1 = GT<real>(_t2EC7,_t2EBF);
      bool _t2ECB#1 = BAnd(_t2EC5,_t2EC9);
      bool _t2ECD#1 = BAnd(_t2EC1,_t2ECB);
      bool _t2ECF#1 = BAnd(_t2E87,_t2ECD);
      if _t2ECF then goto ASSIGN2ED3 else goto ASSIGN2EDC
    ASSIGN2ED3:  preds = [COND2ED1]
      femData:MeshPos nmp2ED2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2E14,_t2E16,newPos2E1A);
      return nmp2ED2
      goto JOIN2ED9
    JOIN2ED9:  preds = [*RETURN(nmp2ED2)2ED4,JOIN3368]
      femData:MeshPos cmp2ED5#1 = phi(nmp2ED6)
      real time2ED7#1 = phi(time2ED8)
      goto FOREACH2E0C
    ASSIGN2EDC:  preds = [COND2ED1]
      int _t2EDB#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp2E0E);
      real time2EDD#6 = +inf;
      int face2EDF#7 = -1;
      real faceTime2EE1#6 = -inf;
      real _t2EE3#15 = 0.57735026919e0;
      tensor[3] _t2EE5#5 = <tensor[3]>[_t2EE3,_t2EE3,_t2EE3];
      real op1_e3_l_102EE8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,_t2E18);
      int[4] femIndicies2EFA#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs2EFB#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies2EFA);
      tensor[4,3] dofs2EF9#1 = femDofs2EFB;
      tensor[3,4] basisResult2EFC#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_112EE9#2 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E18,_t2E16,_t2E14,dofs2EF9,basisResult2EFC,_t2E18);
      tensor[3,3,3] op1_e3_l_132EEA#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_112EE9);
      tensor[3,3,3] op1_e3_l_142EEB#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_112EE9,op1_e3_l_132EEA);
      tensor[4,3] dofs2EFD#1 = femDofs2EFB;
      tensor[3,4] basisResult2EFE#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_152EEC#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2EFD,basisResult2EFE,_t2E18);
      tensor[4,3] dofs2EFF#1 = femDofs2EFB;
      tensor[3,4] basisResult2F00#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_162EED#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2EFF,basisResult2F00,_t2E18);
      tensor[4,3] dofs2F01#1 = femDofs2EFB;
      tensor[3,4] basisResult2F02#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_172EEE#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2F01,basisResult2F02,_t2E18);
      tensor[3,3] op1_e3_l_182EEF#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_172EEE);
      tensor[3] op1_e3_l_192EF0#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_162EED,op1_e3_l_182EEF);
      real op1_e3_l_202EF1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_152EEC,op1_e3_l_192EF0);
      tensor[3,3] op1_e3_l_212EF2#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_142EEB);
      real op1_e3_l_222EF3#1 = λ(T0[])<(2 * T0)> (op1_e3_l_202EF1);
      tensor[3,3] op1_e3_l_232EF4#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_212EF2,op1_e3_l_222EF3);
      tensor[3] op1_e3_l_242EF5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_232EF4);
      real op1_e3_l_252EF6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,op1_e3_l_242EF5);
      real op1_e3_l_262EF7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2EE3,op1_e3_l_102EE8);
      real op1_e3_l_272EF8#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_252EF6);
      real _t2EE7#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_262EF7,op1_e3_l_272EF8);
      real _t2F1F#8 = -0.1e-15;
      bool _t2F21#1 = GTE<real>(_t2EE7,_t2F1F);
      bool _t2F23#1 = GT<real>(time2EDD,_t2EE7);
      int[4] femIndicies2F36#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs2F37#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies2F36);
      tensor[4,3] dofs2F35#1 = femDofs2F37;
      tensor[3,4] basisResult2F38#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_72F26#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,dofs2F35,basisResult2F38,_t2E18);
      tensor[3,3,3] op1_e3_l_92F27#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72F26);
      tensor[3,3,3] op1_e3_l_102F28#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72F26,op1_e3_l_92F27);
      tensor[4,3] dofs2F39#1 = femDofs2F37;
      tensor[3,4] basisResult2F3A#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_112F29#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs2F39,basisResult2F3A,_t2E18);
      tensor[4,3] dofs2F3B#1 = femDofs2F37;
      tensor[3,4] basisResult2F3C#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_122F2A#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs2F3B,basisResult2F3C,_t2E18);
      tensor[4,3] dofs2F3D#1 = femDofs2F37;
      tensor[3,4] basisResult2F3E#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_132F2B#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs2F3D,basisResult2F3E,_t2E18);
      tensor[3,3] op1_e3_l_142F2C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_132F2B);
      tensor[3] op1_e3_l_152F2D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_122F2A,op1_e3_l_142F2C);
      real op1_e3_l_162F2E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_112F29,op1_e3_l_152F2D);
      tensor[3,3] op1_e3_l_172F2F#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_102F28);
      real op1_e3_l_182F30#1 = λ(T0[])<(2 * T0)> (op1_e3_l_162F2E);
      tensor[3,3] op1_e3_l_192F31#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_172F2F,op1_e3_l_182F30);
      tensor[3] op1_e3_l_202F32#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_192F31);
      real op1_e3_l_212F33#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,op1_e3_l_202F32);
      real op1_e3_l_222F34#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_212F33);
      real _t2F25#1 = λ(T0[])<Abs(T0)> (op1_e3_l_222F34);
      real _t2F59#4 = 0.1e-20;
      bool _t2F5B#2 = GTE<real>(_t2F25,_t2F59);
      bool _t2F5D#1 = BAnd(_t2F23,_t2F5B);
      bool _t2F5F#1 = BAnd(_t2F21,_t2F5D);
      if _t2F5F then goto ASSIGN2F63 else goto JOIN2F6C
    ASSIGN2F63:  preds = [COND2F61]
      bool _t2F62#1 = NEQ<int>(_t2EDB,_t2E07);
      if _t2F62 then goto JOIN2F68 else goto JOIN2F68
    JOIN2F68:  preds = [COND2F64,COND2F64]
      real faceTime2F65#1 = phi(faceTime2EE1,_t2EE7)
      int face2F66#1 = phi(_t2E07,face2EDF)
      real time2F67#1 = phi(_t2EE7,time2EDD)
      goto JOIN2F6C
    JOIN2F6C:  preds = [JOIN2F68,COND2F61]
      real faceTime2F69#2 = phi(faceTime2F65,faceTime2EE1)
      int face2F6A#2 = phi(face2F66,face2EDF)
      real time2F6B#3 = phi(time2F67,time2EDD)
      real _t2F6D#50 = 0.e0;
      tensor[3] _t2F6F#5 = <tensor[3]>[time2E05,_t2F6D,_t2F6D];
      real op1_e3_l_102F72#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,_t2E18);
      int[4] femIndicies2F84#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs2F85#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies2F84);
      tensor[4,3] dofs2F83#1 = femDofs2F85;
      tensor[3,4] basisResult2F86#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_112F73#2 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E18,_t2E16,_t2E14,dofs2F83,basisResult2F86,_t2E18);
      tensor[3,3,3] op1_e3_l_132F74#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_112F73);
      tensor[3,3,3] op1_e3_l_142F75#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_112F73,op1_e3_l_132F74);
      tensor[4,3] dofs2F87#1 = femDofs2F85;
      tensor[3,4] basisResult2F88#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_152F76#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2F87,basisResult2F88,_t2E18);
      tensor[4,3] dofs2F89#1 = femDofs2F85;
      tensor[3,4] basisResult2F8A#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_162F77#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2F89,basisResult2F8A,_t2E18);
      tensor[4,3] dofs2F8B#1 = femDofs2F85;
      tensor[3,4] basisResult2F8C#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_172F78#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs2F8B,basisResult2F8C,_t2E18);
      tensor[3,3] op1_e3_l_182F79#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_172F78);
      tensor[3] op1_e3_l_192F7A#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_162F77,op1_e3_l_182F79);
      real op1_e3_l_202F7B#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_152F76,op1_e3_l_192F7A);
      tensor[3,3] op1_e3_l_212F7C#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_142F75);
      real op1_e3_l_222F7D#1 = λ(T0[])<(2 * T0)> (op1_e3_l_202F7B);
      tensor[3,3] op1_e3_l_232F7E#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_212F7C,op1_e3_l_222F7D);
      tensor[3] op1_e3_l_242F7F#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_232F7E);
      real op1_e3_l_252F80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,op1_e3_l_242F7F);
      real op1_e3_l_262F81#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_102F72);
      real op1_e3_l_272F82#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_252F80);
      real _t2F71#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_262F81,op1_e3_l_272F82);
      bool _t2FA9#1 = GTE<real>(_t2F71,_t2F1F);
      bool _t2FAB#1 = GT<real>(time2F6B,_t2F71);
      int[4] femIndicies2FBE#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs2FBF#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies2FBE);
      tensor[4,3] dofs2FBD#1 = femDofs2FBF;
      tensor[3,4] basisResult2FC0#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_72FAE#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,dofs2FBD,basisResult2FC0,_t2E18);
      tensor[3,3,3] op1_e3_l_92FAF#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72FAE);
      tensor[3,3,3] op1_e3_l_102FB0#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72FAE,op1_e3_l_92FAF);
      tensor[4,3] dofs2FC1#1 = femDofs2FBF;
      tensor[3,4] basisResult2FC2#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_112FB1#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs2FC1,basisResult2FC2,_t2E18);
      tensor[4,3] dofs2FC3#1 = femDofs2FBF;
      tensor[3,4] basisResult2FC4#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_122FB2#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs2FC3,basisResult2FC4,_t2E18);
      tensor[4,3] dofs2FC5#1 = femDofs2FBF;
      tensor[3,4] basisResult2FC6#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_132FB3#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs2FC5,basisResult2FC6,_t2E18);
      tensor[3,3] op1_e3_l_142FB4#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_132FB3);
      tensor[3] op1_e3_l_152FB5#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_122FB2,op1_e3_l_142FB4);
      real op1_e3_l_162FB6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_112FB1,op1_e3_l_152FB5);
      tensor[3,3] op1_e3_l_172FB7#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_102FB0);
      real op1_e3_l_182FB8#1 = λ(T0[])<(2 * T0)> (op1_e3_l_162FB6);
      tensor[3,3] op1_e3_l_192FB9#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_172FB7,op1_e3_l_182FB8);
      tensor[3] op1_e3_l_202FBA#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_192FB9);
      real op1_e3_l_212FBB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,op1_e3_l_202FBA);
      real op1_e3_l_222FBC#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_212FBB);
      real _t2FAD#1 = λ(T0[])<Abs(T0)> (op1_e3_l_222FBC);
      bool _t2FE1#2 = GTE<real>(_t2FAD,_t2F59);
      bool _t2FE3#1 = BAnd(_t2FAB,_t2FE1);
      bool _t2FE5#1 = BAnd(_t2FA9,_t2FE3);
      if _t2FE5 then goto ASSIGN2FE9 else goto JOIN2FF4
    ASSIGN2FE9:  preds = [COND2FE7]
      int _t2FE8#2 = 1;
      bool _t2FEA#1 = NEQ<int>(_t2EDB,_t2FE8);
      if _t2FEA then goto JOIN2FF0 else goto JOIN2FF0
    JOIN2FF0:  preds = [COND2FEC,COND2FEC]
      real faceTime2FED#1 = phi(faceTime2F69,_t2F71)
      int face2FEE#1 = phi(_t2FE8,face2F6A)
      real time2FEF#1 = phi(_t2F71,time2F6B)
      goto JOIN2FF4
    JOIN2FF4:  preds = [JOIN2FF0,COND2FE7]
      real faceTime2FF1#2 = phi(faceTime2FED,faceTime2F69)
      int face2FF2#2 = phi(face2FEE,face2F6A)
      real time2FF3#3 = phi(time2FEF,time2F6B)
      real _t2FF5#14 = -0.1e1;
      tensor[3] _t2FF7#5 = <tensor[3]>[_t2F6D,_t2FF5,_t2F6D];
      real op1_e3_l_102FFA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,_t2E18);
      int[4] femIndicies300C#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs300D#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies300C);
      tensor[4,3] dofs300B#1 = femDofs300D;
      tensor[3,4] basisResult300E#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_112FFB#2 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E18,_t2E16,_t2E14,dofs300B,basisResult300E,_t2E18);
      tensor[3,3,3] op1_e3_l_132FFC#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_112FFB);
      tensor[3,3,3] op1_e3_l_142FFD#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_112FFB,op1_e3_l_132FFC);
      tensor[4,3] dofs300F#1 = femDofs300D;
      tensor[3,4] basisResult3010#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_152FFE#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs300F,basisResult3010,_t2E18);
      tensor[4,3] dofs3011#1 = femDofs300D;
      tensor[3,4] basisResult3012#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_162FFF#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs3011,basisResult3012,_t2E18);
      tensor[4,3] dofs3013#1 = femDofs300D;
      tensor[3,4] basisResult3014#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_173000#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs3013,basisResult3014,_t2E18);
      tensor[3,3] op1_e3_l_183001#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_173000);
      tensor[3] op1_e3_l_193002#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_162FFF,op1_e3_l_183001);
      real op1_e3_l_203003#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_152FFE,op1_e3_l_193002);
      tensor[3,3] op1_e3_l_213004#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_142FFD);
      real op1_e3_l_223005#1 = λ(T0[])<(2 * T0)> (op1_e3_l_203003);
      tensor[3,3] op1_e3_l_233006#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_213004,op1_e3_l_223005);
      tensor[3] op1_e3_l_243007#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_233006);
      real op1_e3_l_253008#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,op1_e3_l_243007);
      real op1_e3_l_263009#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_102FFA);
      real op1_e3_l_27300A#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_253008);
      real _t2FF9#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263009,op1_e3_l_27300A);
      bool _t3031#1 = GTE<real>(_t2FF9,_t2F1F);
      bool _t3033#1 = GT<real>(time2FF3,_t2FF9);
      int[4] femIndicies3046#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs3047#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies3046);
      tensor[4,3] dofs3045#1 = femDofs3047;
      tensor[3,4] basisResult3048#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_73036#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,dofs3045,basisResult3048,_t2E18);
      tensor[3,3,3] op1_e3_l_93037#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_73036);
      tensor[3,3,3] op1_e3_l_103038#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_73036,op1_e3_l_93037);
      tensor[4,3] dofs3049#1 = femDofs3047;
      tensor[3,4] basisResult304A#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_113039#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs3049,basisResult304A,_t2E18);
      tensor[4,3] dofs304B#1 = femDofs3047;
      tensor[3,4] basisResult304C#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_12303A#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs304B,basisResult304C,_t2E18);
      tensor[4,3] dofs304D#1 = femDofs3047;
      tensor[3,4] basisResult304E#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_13303B#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs304D,basisResult304E,_t2E18);
      tensor[3,3] op1_e3_l_14303C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_13303B);
      tensor[3] op1_e3_l_15303D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_12303A,op1_e3_l_14303C);
      real op1_e3_l_16303E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_113039,op1_e3_l_15303D);
      tensor[3,3] op1_e3_l_17303F#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_103038);
      real op1_e3_l_183040#1 = λ(T0[])<(2 * T0)> (op1_e3_l_16303E);
      tensor[3,3] op1_e3_l_193041#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_17303F,op1_e3_l_183040);
      tensor[3] op1_e3_l_203042#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_193041);
      real op1_e3_l_213043#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,op1_e3_l_203042);
      real op1_e3_l_223044#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_213043);
      real _t3035#1 = λ(T0[])<Abs(T0)> (op1_e3_l_223044);
      bool _t3069#2 = GTE<real>(_t3035,_t2F59);
      bool _t306B#1 = BAnd(_t3033,_t3069);
      bool _t306D#1 = BAnd(_t3031,_t306B);
      if _t306D then goto ASSIGN3071 else goto JOIN307C
    ASSIGN3071:  preds = [COND306F]
      int _t3070#2 = 2;
      bool _t3072#1 = NEQ<int>(_t2EDB,_t3070);
      if _t3072 then goto JOIN3078 else goto JOIN3078
    JOIN3078:  preds = [COND3074,COND3074]
      real faceTime3075#1 = phi(faceTime2FF1,_t2FF9)
      int face3076#1 = phi(_t3070,face2FF2)
      real time3077#1 = phi(_t2FF9,time2FF3)
      goto JOIN307C
    JOIN307C:  preds = [JOIN3078,COND306F]
      real faceTime3079#2 = phi(faceTime3075,faceTime2FF1)
      int face307A#2 = phi(face3076,face2FF2)
      real time307B#3 = phi(time3077,time2FF3)
      tensor[3] _t307D#5 = <tensor[3]>[_t2F6D,_t2F6D,time2E05];
      real op1_e3_l_103080#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,_t2E18);
      int[4] femIndicies3092#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs3093#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies3092);
      tensor[4,3] dofs3091#1 = femDofs3093;
      tensor[3,4] basisResult3094#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_113081#2 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E18,_t2E16,_t2E14,dofs3091,basisResult3094,_t2E18);
      tensor[3,3,3] op1_e3_l_133082#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_113081);
      tensor[3,3,3] op1_e3_l_143083#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_113081,op1_e3_l_133082);
      tensor[4,3] dofs3095#1 = femDofs3093;
      tensor[3,4] basisResult3096#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_153084#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs3095,basisResult3096,_t2E18);
      tensor[4,3] dofs3097#1 = femDofs3093;
      tensor[3,4] basisResult3098#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_163085#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs3097,basisResult3098,_t2E18);
      tensor[4,3] dofs3099#1 = femDofs3093;
      tensor[3,4] basisResult309A#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_173086#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,dofs3099,basisResult309A,_t2E18);
      tensor[3,3] op1_e3_l_183087#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_173086);
      tensor[3] op1_e3_l_193088#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_163085,op1_e3_l_183087);
      real op1_e3_l_203089#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_153084,op1_e3_l_193088);
      tensor[3,3] op1_e3_l_21308A#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_143083);
      real op1_e3_l_22308B#1 = λ(T0[])<(2 * T0)> (op1_e3_l_203089);
      tensor[3,3] op1_e3_l_23308C#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_21308A,op1_e3_l_22308B);
      tensor[3] op1_e3_l_24308D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_23308C);
      real op1_e3_l_25308E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,op1_e3_l_24308D);
      real op1_e3_l_26308F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103080);
      real op1_e3_l_273090#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_25308E);
      real _t307F#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_26308F,op1_e3_l_273090);
      bool _t30B7#1 = GTE<real>(_t307F,_t2F1F);
      bool _t30B9#1 = GT<real>(time307B,_t307F);
      int[4] femIndicies30CC#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs30CD#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies30CC);
      tensor[4,3] dofs30CB#1 = femDofs30CD;
      tensor[3,4] basisResult30CE#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_730BC#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,dofs30CB,basisResult30CE,_t2E18);
      tensor[3,3,3] op1_e3_l_930BD#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_730BC);
      tensor[3,3,3] op1_e3_l_1030BE#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_730BC,op1_e3_l_930BD);
      tensor[4,3] dofs30CF#1 = femDofs30CD;
      tensor[3,4] basisResult30D0#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_1130BF#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs30CF,basisResult30D0,_t2E18);
      tensor[4,3] dofs30D1#1 = femDofs30CD;
      tensor[3,4] basisResult30D2#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_1230C0#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs30D1,basisResult30D2,_t2E18);
      tensor[4,3] dofs30D3#1 = femDofs30CD;
      tensor[3,4] basisResult30D4#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_1330C1#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs30D3,basisResult30D4,_t2E18);
      tensor[3,3] op1_e3_l_1430C2#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1330C1);
      tensor[3] op1_e3_l_1530C3#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1230C0,op1_e3_l_1430C2);
      real op1_e3_l_1630C4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1130BF,op1_e3_l_1530C3);
      tensor[3,3] op1_e3_l_1730C5#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1030BE);
      real op1_e3_l_1830C6#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1630C4);
      tensor[3,3] op1_e3_l_1930C7#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_1730C5,op1_e3_l_1830C6);
      tensor[3] op1_e3_l_2030C8#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_1930C7);
      real op1_e3_l_2130C9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,op1_e3_l_2030C8);
      real op1_e3_l_2230CA#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_2130C9);
      real _t30BB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_2230CA);
      bool _t30EF#2 = GTE<real>(_t30BB,_t2F59);
      bool _t30F1#1 = BAnd(_t30B9,_t30EF);
      bool _t30F3#1 = BAnd(_t30B7,_t30F1);
      if _t30F3 then goto ASSIGN30F7 else goto JOIN3102
    ASSIGN30F7:  preds = [COND30F5]
      int _t30F6#2 = 3;
      bool _t30F8#1 = NEQ<int>(_t2EDB,_t30F6);
      if _t30F8 then goto JOIN30FE else goto JOIN30FE
    JOIN30FE:  preds = [COND30FA,COND30FA]
      real faceTime30FB#1 = phi(faceTime3079,_t307F)
      int face30FC#1 = phi(_t30F6,face307A)
      real time30FD#1 = phi(_t307F,time307B)
      goto JOIN3102
    JOIN3102:  preds = [JOIN30FE,COND30F5]
      real faceTime30FF#2 = phi(faceTime30FB,faceTime3079)
      int face3100#2 = phi(face30FC,face307A)
      real time3101#1 = phi(time30FD,time307B)
      bool _t3103#1 = NEQ<int>(face3100,face2EDF);
      if _t3103 then goto ASSIGN3107 else goto ASSIGN33B8
    ASSIGN3107:  preds = [COND3105]
      real _t3106#1 = Max<real>(time3101,_t2F6D);
      real _t3108#1 = IntToReal(face3100);
      tensor[2] _t310A#1 = <tensor[2]>[_t3106,_t3108];
      goto JOIN310E
    JOIN310E:  preds = [ASSIGN310B,JOIN33BD]
      tensor[2] _t310C#1 = phi(_t310A,_t310D)
      real eTime310F#3 = TensorIndex<tensor[2],[0]>(_t310C);
      real op1_e3_l_33111#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,eTime310F);
      real time2ED8#2 = λ(T0[],T1[])<(T0) - (T1)> (time2E1B,op1_e3_l_33111);
      int _t3114#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp2E0E);
      tensor[3] _t3116#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp2E0E);
      real op1_e3_l_103119#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,_t3116);
      int[4] femIndicies312B#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs312C#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies312B);
      tensor[4,3] dofs312A#1 = femDofs312C;
      tensor[3,4] basisResult312D#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_11311A#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,dofs312A,basisResult312D,_t2E18);
      tensor[3,3,3] op1_e3_l_13311B#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_11311A);
      tensor[3,3,3] op1_e3_l_14311C#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_11311A,op1_e3_l_13311B);
      tensor[4,3] dofs312E#1 = femDofs312C;
      tensor[3,4] basisResult312F#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_15311D#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs312E,basisResult312F,_t2E18);
      tensor[4,3] dofs3130#1 = femDofs312C;
      tensor[3,4] basisResult3131#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_16311E#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs3130,basisResult3131,_t2E18);
      tensor[4,3] dofs3132#1 = femDofs312C;
      tensor[3,4] basisResult3133#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_17311F#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs3132,basisResult3133,_t2E18);
      tensor[3,3] op1_e3_l_183120#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_17311F);
      tensor[3] op1_e3_l_193121#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_16311E,op1_e3_l_183120);
      real op1_e3_l_203122#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_15311D,op1_e3_l_193121);
      tensor[3,3] op1_e3_l_213123#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_14311C);
      real op1_e3_l_223124#1 = λ(T0[])<(2 * T0)> (op1_e3_l_203122);
      tensor[3,3] op1_e3_l_233125#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_213123,op1_e3_l_223124);
      tensor[3] op1_e3_l_243126#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_233125);
      real op1_e3_l_253127#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,op1_e3_l_243126);
      real op1_e3_l_263128#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2EE3,op1_e3_l_103119);
      real op1_e3_l_273129#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_253127);
      real _t3118#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263128,op1_e3_l_273129);
      bool _t3150#1 = GTE<real>(_t3118,_t2F1F);
      bool _t3152#1 = GT<real>(time2EDD,_t3118);
      bool _t3154#1 = BAnd(_t3152,_t2F5B);
      bool _t3156#1 = BAnd(_t3150,_t3154);
      if _t3156 then goto ASSIGN315A else goto JOIN3163
    ASSIGN315A:  preds = [COND3158]
      bool _t3159#1 = NEQ<int>(_t2EDB,_t2E07);
      if _t3159 then goto JOIN315F else goto JOIN315F
    JOIN315F:  preds = [COND315B,COND315B]
      real faceTime315C#1 = phi(faceTime2EE1,_t3118)
      int face315D#1 = phi(_t2E07,face2EDF)
      real time315E#1 = phi(_t3118,time2EDD)
      goto JOIN3163
    JOIN3163:  preds = [JOIN315F,COND3158]
      real faceTime3160#2 = phi(faceTime315C,faceTime2EE1)
      int face3161#2 = phi(face315D,face2EDF)
      real time3162#3 = phi(time315E,time2EDD)
      real op1_e3_l_103165#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,_t3116);
      int[4] femIndicies3177#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs3178#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies3177);
      tensor[4,3] dofs3176#1 = femDofs3178;
      tensor[3,4] basisResult3179#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_113166#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,dofs3176,basisResult3179,_t2E18);
      tensor[3,3,3] op1_e3_l_133167#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_113166);
      tensor[3,3,3] op1_e3_l_143168#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_113166,op1_e3_l_133167);
      tensor[4,3] dofs317A#1 = femDofs3178;
      tensor[3,4] basisResult317B#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_153169#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs317A,basisResult317B,_t2E18);
      tensor[4,3] dofs317C#1 = femDofs3178;
      tensor[3,4] basisResult317D#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_16316A#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs317C,basisResult317D,_t2E18);
      tensor[4,3] dofs317E#1 = femDofs3178;
      tensor[3,4] basisResult317F#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_17316B#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs317E,basisResult317F,_t2E18);
      tensor[3,3] op1_e3_l_18316C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_17316B);
      tensor[3] op1_e3_l_19316D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_16316A,op1_e3_l_18316C);
      real op1_e3_l_20316E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_153169,op1_e3_l_19316D);
      tensor[3,3] op1_e3_l_21316F#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_143168);
      real op1_e3_l_223170#1 = λ(T0[])<(2 * T0)> (op1_e3_l_20316E);
      tensor[3,3] op1_e3_l_233171#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_21316F,op1_e3_l_223170);
      tensor[3] op1_e3_l_243172#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_233171);
      real op1_e3_l_253173#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,op1_e3_l_243172);
      real op1_e3_l_263174#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103165);
      real op1_e3_l_273175#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_253173);
      real _t3164#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263174,op1_e3_l_273175);
      bool _t319C#1 = GTE<real>(_t3164,_t2F1F);
      bool _t319E#1 = GT<real>(time3162,_t3164);
      bool _t31A0#1 = BAnd(_t319E,_t2FE1);
      bool _t31A2#1 = BAnd(_t319C,_t31A0);
      if _t31A2 then goto ASSIGN31A6 else goto JOIN31B1
    ASSIGN31A6:  preds = [COND31A4]
      int _t31A5#2 = 1;
      bool _t31A7#1 = NEQ<int>(_t2EDB,_t31A5);
      if _t31A7 then goto JOIN31AD else goto JOIN31AD
    JOIN31AD:  preds = [COND31A9,COND31A9]
      real faceTime31AA#1 = phi(faceTime3160,_t3164)
      int face31AB#1 = phi(_t31A5,face3161)
      real time31AC#1 = phi(_t3164,time3162)
      goto JOIN31B1
    JOIN31B1:  preds = [JOIN31AD,COND31A4]
      real faceTime31AE#2 = phi(faceTime31AA,faceTime3160)
      int face31AF#2 = phi(face31AB,face3161)
      real time31B0#3 = phi(time31AC,time3162)
      real op1_e3_l_1031B3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,_t3116);
      int[4] femIndicies31C5#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs31C6#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies31C5);
      tensor[4,3] dofs31C4#1 = femDofs31C6;
      tensor[3,4] basisResult31C7#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_1131B4#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,dofs31C4,basisResult31C7,_t2E18);
      tensor[3,3,3] op1_e3_l_1331B5#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1131B4);
      tensor[3,3,3] op1_e3_l_1431B6#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_1131B4,op1_e3_l_1331B5);
      tensor[4,3] dofs31C8#1 = femDofs31C6;
      tensor[3,4] basisResult31C9#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_1531B7#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs31C8,basisResult31C9,_t2E18);
      tensor[4,3] dofs31CA#1 = femDofs31C6;
      tensor[3,4] basisResult31CB#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_1631B8#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs31CA,basisResult31CB,_t2E18);
      tensor[4,3] dofs31CC#1 = femDofs31C6;
      tensor[3,4] basisResult31CD#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_1731B9#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs31CC,basisResult31CD,_t2E18);
      tensor[3,3] op1_e3_l_1831BA#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1731B9);
      tensor[3] op1_e3_l_1931BB#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1631B8,op1_e3_l_1831BA);
      real op1_e3_l_2031BC#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1531B7,op1_e3_l_1931BB);
      tensor[3,3] op1_e3_l_2131BD#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1431B6);
      real op1_e3_l_2231BE#1 = λ(T0[])<(2 * T0)> (op1_e3_l_2031BC);
      tensor[3,3] op1_e3_l_2331BF#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_2131BD,op1_e3_l_2231BE);
      tensor[3] op1_e3_l_2431C0#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_2331BF);
      real op1_e3_l_2531C1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,op1_e3_l_2431C0);
      real op1_e3_l_2631C2#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_1031B3);
      real op1_e3_l_2731C3#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_2531C1);
      real _t31B2#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_2631C2,op1_e3_l_2731C3);
      bool _t31EA#1 = GTE<real>(_t31B2,_t2F1F);
      bool _t31EC#1 = GT<real>(time31B0,_t31B2);
      bool _t31EE#1 = BAnd(_t31EC,_t3069);
      bool _t31F0#1 = BAnd(_t31EA,_t31EE);
      if _t31F0 then goto ASSIGN31F4 else goto JOIN31FF
    ASSIGN31F4:  preds = [COND31F2]
      int _t31F3#2 = 2;
      bool _t31F5#1 = NEQ<int>(_t2EDB,_t31F3);
      if _t31F5 then goto JOIN31FB else goto JOIN31FB
    JOIN31FB:  preds = [COND31F7,COND31F7]
      real faceTime31F8#1 = phi(faceTime31AE,_t31B2)
      int face31F9#1 = phi(_t31F3,face31AF)
      real time31FA#1 = phi(_t31B2,time31B0)
      goto JOIN31FF
    JOIN31FF:  preds = [JOIN31FB,COND31F2]
      real faceTime31FC#2 = phi(faceTime31F8,faceTime31AE)
      int face31FD#2 = phi(face31F9,face31AF)
      real time31FE#3 = phi(time31FA,time31B0)
      real op1_e3_l_103201#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,_t3116);
      int[4] femIndicies3213#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs3214#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies3213);
      tensor[4,3] dofs3212#1 = femDofs3214;
      tensor[3,4] basisResult3215#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_113202#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,dofs3212,basisResult3215,_t2E18);
      tensor[3,3,3] op1_e3_l_133203#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_113202);
      tensor[3,3,3] op1_e3_l_143204#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_113202,op1_e3_l_133203);
      tensor[4,3] dofs3216#1 = femDofs3214;
      tensor[3,4] basisResult3217#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_153205#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs3216,basisResult3217,_t2E18);
      tensor[4,3] dofs3218#1 = femDofs3214;
      tensor[3,4] basisResult3219#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_163206#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs3218,basisResult3219,_t2E18);
      tensor[4,3] dofs321A#1 = femDofs3214;
      tensor[3,4] basisResult321B#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_173207#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs321A,basisResult321B,_t2E18);
      tensor[3,3] op1_e3_l_183208#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_173207);
      tensor[3] op1_e3_l_193209#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_163206,op1_e3_l_183208);
      real op1_e3_l_20320A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_153205,op1_e3_l_193209);
      tensor[3,3] op1_e3_l_21320B#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_143204);
      real op1_e3_l_22320C#1 = λ(T0[])<(2 * T0)> (op1_e3_l_20320A);
      tensor[3,3] op1_e3_l_23320D#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_21320B,op1_e3_l_22320C);
      tensor[3] op1_e3_l_24320E#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_23320D);
      real op1_e3_l_25320F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,op1_e3_l_24320E);
      real op1_e3_l_263210#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103201);
      real op1_e3_l_273211#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_25320F);
      real _t3200#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263210,op1_e3_l_273211);
      bool _t3238#1 = GTE<real>(_t3200,_t2F1F);
      bool _t323A#1 = GT<real>(time31FE,_t3200);
      bool _t323C#1 = BAnd(_t323A,_t30EF);
      bool _t323E#1 = BAnd(_t3238,_t323C);
      if _t323E then goto ASSIGN3242 else goto JOIN324D
    ASSIGN3242:  preds = [COND3240]
      int _t3241#2 = 3;
      bool _t3243#1 = NEQ<int>(_t2EDB,_t3241);
      if _t3243 then goto JOIN3249 else goto JOIN3249
    JOIN3249:  preds = [COND3245,COND3245]
      real faceTime3246#1 = phi(faceTime31FC,_t3200)
      int face3247#1 = phi(_t3241,face31FD)
      real time3248#1 = phi(_t3200,time31FE)
      goto JOIN324D
    JOIN324D:  preds = [JOIN3249,COND3240]
      real faceTime324A#2 = phi(faceTime3246,faceTime31FC)
      int face324B#2 = phi(face3247,face31FD)
      real time324C#1 = phi(time3248,time31FE)
      bool _t324E#1 = NEQ<int>(face324B,face2EDF);
      if _t324E then goto ASSIGN3252 else goto ASSIGN33AE
    ASSIGN3252:  preds = [COND3250]
      real _t3251#1 = Max<real>(time324C,_t2F6D);
      real _t3253#1 = IntToReal(face324B);
      tensor[2] _t3255#1 = <tensor[2]>[_t3251,_t3253];
      goto JOIN3259
    JOIN3259:  preds = [ASSIGN3256,JOIN33B3]
      tensor[2] _t3257#3 = phi(_t3255,_t3258)
      real _t325A#1 = TensorIndex<tensor[2],[1]>(_t3257);
      real t325D#1 = Floor<1>(_t325A);
      int _t325C#6 = RealToInt<1>(t325D);
      int[2] _t3272#2 = nextCell43260 (_t325C,_t3114,_t2E0D);
      int _t3274#2 = Subscript<int[2]>(_t3272,_t2E07);
      bool _t3276#1 = NEQ<int>(face2EDF,_t3274);
      if _t3276 then goto ASSIGN327A else goto ASSIGN3379
    ASSIGN327A:  preds = [COND3278]
      string _t3279#1 = "face ";
      string _t327B#1 = " to ";
      int _t327D#1 = 1;
      int _t327F#6 = Subscript<int[2]>(_t3272,_t327D);
      string _t3281#2 = "\n";
      string _t3283#1 = "got: ";
      tensor[4] _t3285#7 = <tensor[4]>[time2E05,_t2F6D,_t2F6D,_t2F6D];
      tensor[4] _t3287#6 = <tensor[4]>[_t2F6D,time2E05,_t2F6D,_t2F6D];
      tensor[4] _t3289#7 = <tensor[4]>[_t2F6D,_t2F6D,time2E05,_t2F6D];
      real _t328B#1 = 0.971445146547e-16;
      tensor[4] _t328D#4 = <tensor[4]>[_t328B,_t2F6D,_t2F6D,time2E05];
      tensor[4,4] _t328F#4 = <tensor[4,4]>[_t3285,_t3287,_t3289,_t328D];
      real _t3291#7 = -0.57735026919e0;
      tensor[4] _t3293#2 = <tensor[4]>[_t2EE3,_t2EE3,_t2EE3,_t3291];
      real _t3295#4 = -0.333333333333e0;
      real _t3297#2 = 0.666666666667e0;
      real _t3299#2 = 0.333333333333e0;
      tensor[4] _t329B#3 = <tensor[4]>[_t3295,_t3297,_t3295,_t3299];
      tensor[4] _t329D#3 = <tensor[4]>[_t3295,_t3295,_t3297,_t3299];
      tensor[4,4] _t329F#4 = <tensor[4,4]>[_t3293,_t329B,_t329D,_t328D];
      tensor[4] _t32A1#1 = <tensor[4]>[_t3291,_t3291,_t3291,_t2EE3];
      tensor[4,4] _t32A3#4 = <tensor[4,4]>[_t329B,_t32A1,_t329D,_t328D];
      tensor[4,4] _t32A5#4 = <tensor[4,4]>[_t329B,_t329D,_t3293,_t328D];
      tensor[4,4][4] _t32A7#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4] _t32A9#1 = <tensor[4]>[_t2EE3,_t2FF5,_t2FF5,time2E05];
      tensor[4] _t32AB#1 = <tensor[4]>[_t2EE3,time2E05,_t2F6D,_t2F6D];
      tensor[4] _t32AD#1 = <tensor[4]>[_t2EE3,_t2F6D,time2E05,_t2F6D];
      tensor[4] _t32AF#10 = <tensor[4]>[_t2F6D,_t2F6D,_t2F6D,time2E05];
      tensor[4,4] _t32B1#4 = <tensor[4,4]>[_t32A9,_t32AB,_t32AD,_t32AF];
      tensor[4,4] _t32B3#12 = <tensor[4,4]>[_t3285,_t3287,_t3289,_t32AF];
      tensor[4] _t32B5#1 = <tensor[4]>[_t2FF5,_t2F6D,_t2F6D,_t2F6D];
      tensor[4,4] _t32B7#4 = <tensor[4,4]>[_t3287,_t32B5,_t3289,_t32AF];
      tensor[4,4] _t32B9#4 = <tensor[4,4]>[_t3287,_t3289,_t3285,_t32AF];
      tensor[4,4][4] _t32BB#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4] _t32BD#1 = <tensor[4]>[_t2FF5,_t3291,_t2FF5,time2E05];
      tensor[4] _t32BF#1 = <tensor[4]>[time2E05,_t3291,_t2F6D,_t2F6D];
      tensor[4] _t32C1#1 = <tensor[4]>[_t2F6D,_t3291,time2E05,_t2F6D];
      tensor[4,4] _t32C3#4 = <tensor[4,4]>[_t32BD,_t32BF,_t32C1,_t32AF];
      tensor[4] _t32C5#2 = <tensor[4]>[_t2F6D,_t2FF5,_t2F6D,_t2F6D];
      tensor[4,4] _t32C7#4 = <tensor[4,4]>[_t32C5,_t3285,_t3289,_t32AF];
      tensor[4,4] _t32C9#4 = <tensor[4,4]>[_t3285,_t3289,_t32C5,_t32AF];
      tensor[4,4][4] _t32CB#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4] _t32CD#1 = <tensor[4]>[_t2FF5,_t2FF5,_t2EE3,time2E05];
      tensor[4] _t32CF#1 = <tensor[4]>[time2E05,_t2F6D,_t2EE3,_t2F6D];
      tensor[4] _t32D1#1 = <tensor[4]>[_t2F6D,time2E05,_t2EE3,_t2F6D];
      tensor[4,4] _t32D3#4 = <tensor[4,4]>[_t32CD,_t32CF,_t32D1,_t32AF];
      tensor[4,4] _t32D5#4 = <tensor[4,4]>[_t3289,_t3285,_t3287,_t32AF];
      tensor[4] _t32D7#1 = <tensor[4]>[_t2F6D,_t2F6D,_t2FF5,_t2F6D];
      tensor[4,4] _t32D9#4 = <tensor[4,4]>[_t3285,_t32D7,_t3287,_t32AF];
      tensor[4,4][4] _t32DB#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t32DD#1 = <tensor[4,4][4][4]>{_t32A7,_t32BB,_t32CB,_t32DB};
      tensor[4,4][4] _t32DF#1 = Subscript<tensor[4,4][4][4]>(_t32DD,_t325C);
      tensor[4,4] _t32E1#1 = Subscript<tensor[4,4][4]>(_t32DF,_t327F);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t3279,_t325C,_t327B,_t327F,_t3281,_t3283,_t32E1,_t3281);
      tensor[4,4][4] _t32E4#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t32E6#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t32E8#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t32EA#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t32EC#1 = <tensor[4,4][4][4]>{_t32E4,_t32E6,_t32E8,_t32EA};
      tensor[4,4][4] _t32EE#1 = Subscript<tensor[4,4][4][4]>(_t32EC,_t325C);
      tensor[4,4] _t32F0#1 = Subscript<tensor[4,4][4]>(_t32EE,_t327F);
      real _t32F2#1 = TensorIndex<tensor[2],[0]>(_t3257);
      int[4] femIndicies3304#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs3305#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies3304);
      tensor[4,3] dofs3303#1 = femDofs3305;
      tensor[3,4] basisResult3306#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_832F5#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,dofs3303,basisResult3306,_t2E18);
      tensor[3,3,3] op1_e3_l_1032F6#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_832F5);
      tensor[3,3,3] op1_e3_l_1132F7#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_832F5,op1_e3_l_1032F6);
      tensor[4,3] dofs3307#1 = femDofs3305;
      tensor[3,4] basisResult3308#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_1232F8#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs3307,basisResult3308,_t2E18);
      tensor[4,3] dofs3309#1 = femDofs3305;
      tensor[3,4] basisResult330A#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_1332F9#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs3309,basisResult330A,_t2E18);
      tensor[4,3] dofs330B#1 = femDofs3305;
      tensor[3,4] basisResult330C#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_1432FA#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs330B,basisResult330C,_t2E18);
      tensor[3,3] op1_e3_l_1532FB#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_1432FA);
      tensor[3] op1_e3_l_1632FC#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_1332F9,op1_e3_l_1532FB);
      real op1_e3_l_1732FD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_1232F8,op1_e3_l_1632FC);
      tensor[3,3] op1_e3_l_1832FE#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_1132F7);
      real op1_e3_l_1932FF#1 = λ(T0[])<(2 * T0)> (op1_e3_l_1732FD);
      tensor[3,3] op1_e3_l_203300#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_1832FE,op1_e3_l_1932FF);
      tensor[3] op1_e3_l_213301#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_203300);
      tensor[3] op1_e3_l_223302#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t32F2,time2E1B,op1_e3_l_213301);
      tensor[3] _t32F4#3 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (_t3116,op1_e3_l_223302);
      real _t3326#1 = TensorIndex<tensor[3],[0]>(_t32F4);
      real _t3328#1 = TensorIndex<tensor[3],[1]>(_t32F4);
      real _t332A#1 = TensorIndex<tensor[3],[2]>(_t32F4);
      tensor[4] _t332C#3 = <tensor[4]>[_t3326,_t3328,_t332A,time2E05];
      tensor[4] _t332E#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t32F0,_t332C);
      real _t3330#1 = TensorIndex<tensor[4],[0]>(_t332E);
      tensor[4,4][4] _t3332#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t3334#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t3336#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t3338#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t333A#1 = <tensor[4,4][4][4]>{_t3332,_t3334,_t3336,_t3338};
      tensor[4,4][4] _t333C#1 = Subscript<tensor[4,4][4][4]>(_t333A,_t325C);
      tensor[4,4] _t333E#1 = Subscript<tensor[4,4][4]>(_t333C,_t327F);
      tensor[4] _t3340#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t333E,_t332C);
      real _t3342#1 = TensorIndex<tensor[4],[1]>(_t3340);
      tensor[4,4][4] _t3344#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t3346#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t3348#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t334A#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t334C#1 = <tensor[4,4][4][4]>{_t3344,_t3346,_t3348,_t334A};
      tensor[4,4][4] _t334E#1 = Subscript<tensor[4,4][4][4]>(_t334C,_t325C);
      tensor[4,4] _t3350#1 = Subscript<tensor[4,4][4]>(_t334E,_t327F);
      tensor[4] _t3352#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t3350,_t332C);
      real _t3354#1 = TensorIndex<tensor[4],[2]>(_t3352);
      tensor[3] _t3356#1 = <tensor[3]>[_t3330,_t3342,_t3354];
      femData:MeshPos _t3358#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2E0D,_t3274,_t3356,_t327F);
      goto JOIN335B
    JOIN335B:  preds = [ASSIGN3359,ASSIGN33AC]
      femData:MeshPos nmp2ED6#3 = phi(_t3358,_t335A)
      bool _t335C#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp2ED6);
      bool _t335E#1 = BNot(_t335C);
      if _t335E then goto ASSIGN3362 else goto ASSIGN336A
    ASSIGN3362:  preds = [COND3360]
      bool _t3361#1 = true;
      goto JOIN3365
    JOIN3365:  preds = [ASSIGN3362,JOIN336F]
      bool _t3363#1 = phi(_t3361,_t3364)
      if _t3363 then goto RETURN(nmp2ED6)3367 else goto JOIN3368
    RETURN(nmp2ED6)3367:  preds = [COND3366]
      return nmp2ED6
      goto JOIN3368
    JOIN3368:  preds = [*RETURN(nmp2ED6)3367,COND3366]
      goto JOIN2ED9
    ASSIGN336A:  preds = [COND3360]
      bool _t3369#1 = LT<real>(eTime310F,_t2F6D);
      if _t3369 then goto ASSIGN336D else goto ASSIGN3371
    ASSIGN336D:  preds = [COND336B]
      bool _t336C#1 = true;
      goto JOIN336F
    JOIN336F:  preds = [ASSIGN336D,JOIN3376]
      bool _t3364#1 = phi(_t336C,_t336E)
      goto JOIN3365
    ASSIGN3371:  preds = [COND336B]
      bool _t3370#1 = GT<real>(eTime310F,time2E05);
      if _t3370 then goto ASSIGN3374 else goto ASSIGN3377
    ASSIGN3374:  preds = [COND3372]
      bool _t3373#1 = true;
      goto JOIN3376
    JOIN3376:  preds = [ASSIGN3374,ASSIGN3377]
      bool _t336E#1 = phi(_t3373,_t3375)
      goto JOIN336F
    ASSIGN3377:  preds = [COND3372]
      bool _t3375#1 = LT<real>(time2ED8,timeEps2DFC);
      goto JOIN3376
    ASSIGN3379:  preds = [COND3278]
      real _t3378#1 = TensorIndex<tensor[2],[0]>(_t3257);
      int[4] femIndicies338A#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs338B#4 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies338A);
      tensor[4,3] dofs3389#1 = femDofs338B;
      tensor[3,4] basisResult338C#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_8337B#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,dofs3389,basisResult338C,_t2E18);
      tensor[3,3,3] op1_e3_l_10337C#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_8337B);
      tensor[3,3,3] op1_e3_l_11337D#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_8337B,op1_e3_l_10337C);
      tensor[4,3] dofs338D#1 = femDofs338B;
      tensor[3,4] basisResult338E#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_12337E#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs338D,basisResult338E,_t2E18);
      tensor[4,3] dofs338F#1 = femDofs338B;
      tensor[3,4] basisResult3390#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_13337F#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs338F,basisResult3390,_t2E18);
      tensor[4,3] dofs3391#1 = femDofs338B;
      tensor[3,4] basisResult3392#1 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3] probe_l_143380#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,dofs3391,basisResult3392,_t2E18);
      tensor[3,3] op1_e3_l_153381#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_143380);
      tensor[3] op1_e3_l_163382#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_13337F,op1_e3_l_153381);
      real op1_e3_l_173383#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_12337E,op1_e3_l_163382);
      tensor[3,3] op1_e3_l_183384#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_11337D);
      real op1_e3_l_193385#1 = λ(T0[])<(2 * T0)> (op1_e3_l_173383);
      tensor[3,3] op1_e3_l_203386#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_183384,op1_e3_l_193385);
      tensor[3] op1_e3_l_213387#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_203386);
      tensor[3] op1_e3_l_223388#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t3378,time2E1B,op1_e3_l_213387);
      tensor[3] _t337A#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (_t3116,op1_e3_l_223388);
      femData:MeshPos _t335A#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t2E0D,_t337A);
      goto JOIN335B
    ASSIGN33AE:  preds = [COND3250]
      bool _t33AD#1 = EQ<real>(faceTime2EE1,faceTime324A);
      if _t33AD then goto ASSIGN33B1 else goto ASSIGN33B5
    ASSIGN33B1:  preds = [COND33AF]
      tensor[2] _t33B0#1 = <tensor[2]>[_t2FF5,_t2FF5];
      goto JOIN33B3
    JOIN33B3:  preds = [ASSIGN33B1,ASSIGN33B6]
      tensor[2] _t3258#1 = phi(_t33B0,_t33B2)
      goto JOIN3259
    ASSIGN33B5:  preds = [COND33AF]
      real _t33B4#1 = IntToReal(_t2EDB);
      tensor[2] _t33B2#1 = <tensor[2]>[faceTime324A,_t33B4];
      goto JOIN33B3
    ASSIGN33B8:  preds = [COND3105]
      bool _t33B7#1 = EQ<real>(faceTime2EE1,faceTime30FF);
      if _t33B7 then goto ASSIGN33BB else goto ASSIGN33BF
    ASSIGN33BB:  preds = [COND33B9]
      tensor[2] _t33BA#1 = <tensor[2]>[_t2FF5,_t2FF5];
      goto JOIN33BD
    JOIN33BD:  preds = [ASSIGN33BB,ASSIGN33C0]
      tensor[2] _t310D#1 = phi(_t33BA,_t33BC)
      goto JOIN310E
    ASSIGN33BF:  preds = [COND33B9]
      real _t33BE#1 = IntToReal(_t2EDB);
      tensor[2] _t33BC#1 = <tensor[2]>[faceTime30FF,_t33BE];
      goto JOIN33BD
    ASSIGN33C2:  preds = [FOREACH2E0C]
      string _t33C1#1 = "Took stupid way out!\n";
      Print<[string]>(_t33C1);
      tensor[3] _t33C4#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x2DF5);
      int _t33C6#2 = ExtractFemItem<int,CellIndex(MeshPos)>(x2DF5);
      femData:Mesh _t33C8#3 = ExtractFem<femData:Mesh,femData:MeshPos>(x2DF5);
      int[4] femIndicies33CD#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t33C8,_t33C6);
      tensor[4,3] femDofs33CE#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t33C8,femIndicies33CD);
      tensor[4,3] dofs33CC#1 = femDofs33CE;
      tensor[4] basisResult33CF#1 = EvaluateBasis<BasisArray(4)>(_t33C4);
      tensor[3] probe_l_533CB#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t33C6,_t33C8,_t33C4,dofs33CC,basisResult33CF,_t33C4);
      tensor[3] _t33CA#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (dPos2DF6,probe_l_533CB);
      femData:MeshPos cmp33D6#1 = findPos2C4C (meshData2DF8,_t33CA);
      return cmp33D6
}
## input initialization
  ENTRY2C03:  preds = []
    int timeSteps2C04#1 = 32;
    globals.timeSteps2BFB = timeSteps2C04;
    real timeEps2C07#1 = 0.1e-6;
    globals.timeEps2BFC = timeEps2C07;
    real stepSize2C0A#1 = 0.1e-1;
    globals.stepSize2BFE = stepSize2C0A;
    int stepMax2C0D#1 = 100;
    globals.stepMax2BFF = stepMax2C0D;
    return
## global-variable initialization
  ENTRY2C11:  preds = []
    femData:Mesh meshData2C12#3 = globals.meshData2BF8;
    femData:Space 0space03AB_intermedateGlobal2C14#1 = globals.0space03AB_intermedateGlobal2BF9;
    femData:FemFunc 0data03AD_intermedateGlobal2C16#1 = globals.0data03AD_intermedateGlobal2BFA;
    int _t2C18#1 = 0;
    int _t2C1A#1 = 1;
    int _t2C1C#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData2C12);
    int _t2C1E#1 = ISub(_t2C1C,_t2C1A);
    int[] _t2C20#1 = Range(_t2C18,_t2C1E);
    femData:MeshCell[] _t2C22#1 = <femData:MeshCell[]>{};
  FOREACH2C25:  preds = [ASSIGN2C23,NEXT2C2B]
    foreach (_t2C24 in _t2C20) on exit goto ASSIGN2C2D
      femData:MeshCell[] _t2C29#1 = phi(_t2C22,_t2C28)
    femData:MeshCell _t2C26#1 = LoadFem<femData:MeshCell>(meshData2C12,_t2C24);
    femData:MeshCell[] _t2C28#1 = Append<femData:MeshCell>(_t2C29,_t2C26);
    goto FOREACH2C25
  ASSIGN2C2D:  preds = [FOREACH2C25]
    femData:Space space2C2C#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal2C14,meshData2C12);
    femData:FemFunc data2C2E#2 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal2C16,space2C2C);
    globals.data2C00 = data2C2E;
    femData:Space _t2C31#2 = ExtractFem<femData:Space,femData:FemFunc>(data2C2E);
    femData:Mesh _t2C33#1 = ExtractFem<femData:Mesh,femData:Space>(_t2C31);
    globals._t2C01 = _t2C33;
    globals._tX2C02 = _t2C31;
    return
## strand
  strand gg (tensor[3] startPos2C38#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY2C3F:  preds = []
        femData:Mesh meshData2C40#1 = globals.meshData2BF8;
        tensor[3][1] _t2C42#1 = <tensor[3][1]>{startPos2C38};
        tensor[3][] _t2C44#1 = MkDynamic<tensor[3],1>(_t2C42);
        tensor[3][1] _t2C46#1 = <tensor[3][1]>{startPos2C38};
        tensor[3][] _t2C48#1 = MkDynamic<tensor[3],1>(_t2C46);
        int step2C4A#1 = 0;
        femData:MeshPos cPos2D7C#1 = findPos2C4C (meshData2C40,startPos2C38);
        self.stream = _t2C44;
        self.newStream = _t2C48;
        self.step = step2C4A;
        self.cPos = cPos2D7C;
        self.altCPos = startPos2C38;
        self.startPos = startPos2C38;
        return
    end state init
    method update
        ENTRY2D85:  preds = []
          femData:Mesh _t2D86#14 = globals._t2C01;
          femData:Space _t2D88#12 = globals._tX2C02;
          femData:FemFunc data2D8A#12 = globals.data2C00;
          femData:Mesh meshData2D8C#2 = globals.meshData2BF8;
          femData:FemFunc data2D8E#2 = globals.data2C00;
          real stepSize2D90#4 = globals.stepSize2BFE;
          int stepMax2D92#1 = globals.stepMax2BFF;
          tensor[3][] stream2D94#2 = self.stream;
          tensor[3][] newStream2D96#1 = self.newStream;
          int step2D98#3 = self.step;
          femData:MeshPos cPos2D9A#6 = self.cPos;
          tensor[3] altCPos2D9C#8 = self.altCPos;
          tensor[3] startPos2D9E#1 = self.startPos;
          bool _t2DA0#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2D9A);
          bool _t2DA2#1 = BNot(_t2DA0);
          if _t2DA2 then goto ASSIGN2DA6 else goto ASSIGN34DD
        ASSIGN2DA6:  preds = [COND2DA4]
          bool _t2DA5#1 = true;
          goto JOIN2DA9
        JOIN2DA9:  preds = [ASSIGN2DA6,JOIN34E6]
          bool _t2DA7#1 = phi(_t2DA5,_t2DA8)
          if _t2DA7 then goto STABILIZE2DAB else goto JOIN2DAC
        STABILIZE2DAB:  preds = [COND2DAA]
          stabilize
          goto JOIN2DAC
        JOIN2DAC:  preds = [*STABILIZE2DAB,COND2DAA]
          tensor[3] _t2DAD#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2D9A);
          int _t2DAF#4 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2D9A);
          femData:Mesh _t2DB1#5 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2D9A);
          int[4] femIndicies2DB8#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2DB1,_t2DAF);
          tensor[4,3] femDofs2DB9#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2DB1,femIndicies2DB8);
          tensor[4,3] dofs2DB7#1 = femDofs2DB9;
          tensor[4] basisResult2DBA#1 = EvaluateBasis<BasisArray(4)>(_t2DAD);
          tensor[3] probe_l_52DB4#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t2DAF,_t2DB1,_t2DAD,dofs2DB7,basisResult2DBA,_t2DAD);
          tensor[3] op1_e3_l_72DB5#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (altCPos2D9C,probe_l_52DB4);
          real op1_e3_l_92DB6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_72DB5,op1_e3_l_72DB5);
          real _t2DB3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_92DB6);
          real _t2DC3#1 = 0.1e-5;
          bool _t2DC5#1 = GT<real>(_t2DB3,_t2DC3);
          if _t2DC5 then goto ASSIGN2DC9 else goto ASSIGN34D6
        ASSIGN2DC9:  preds = [COND2DC7]
          string _t2DC8#1 = "Error in tracing: At step:";
          string _t2DCA#1 = " with particle:";
          string _t2DCC#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t2DC8,step2D98,_t2DCA,startPos2D9E,_t2DCC);
          goto JOIN2DCF
        JOIN2DCF:  preds = [MASSIGN2DCE,MASSIGN34DB]
          real _t2DD0#2 = 0.5e0;
          if _t2DA0 then goto ASSIGN2DD4 else goto ASSIGN34D4
        ASSIGN2DD4:  preds = [COND2DD2]
          femData:MeshCell c2DD3#1 = LoadFem<femData:MeshCell>(_t2DB1,_t2DAF);
          int _t2DD5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2DD3);
          femData:FuncCell _t2DD7#2 = LoadFem<femData:FuncCell>(data2D8E,_t2DD5);
          femData:FemFunc _t2DD9#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2DD7);
          femData:Space _t2DDB#2 = ExtractFem<femData:Space,femData:FemFunc>(_t2DD9);
          int _t2DDD#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2DD7);
          int[10] femIndicies2DE4#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2DDB,_t2DDD);
          tensor[10,3] femDofs2DE5#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t2DD9,femIndicies2DE4);
          tensor[10,3] dofs2DE3#1 = femDofs2DE5;
          tensor[10] basisResult2DE6#1 = EvaluateBasis<BasisArray(10)>(_t2DAD);
          tensor[3] probe_l_82DE0#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2DDD,_t2DDB,_t2DD9,_t2DAD,dofs2DE3,basisResult2DE6,_t2DAD);
          real op1_e3_l_112DE1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_82DE0,probe_l_82DE0);
          real op1_e3_l_122DE2#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_112DE1);
          tensor[3] _t2DDF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_82DE0,op1_e3_l_122DE2);
          goto JOIN2DF1
        JOIN2DF1:  preds = [ASSIGN2DEE,ASSIGN34D4]
          tensor[3] _t2DEF#1 = phi(_t2DDF,_t2DF0)
          tensor[3] up12DF2#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2DD0,stepSize2D90,_t2DEF);
          femData:MeshPos intermed33D9#4 = posMove2DF4 (cPos2D9A,up12DF2);
          femData:MeshPos callFindPos33E6#2 = findPos2C4C (_t2D86,altCPos2D9C);
          int intPos33E7#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos33E6);
          tensor[3] refPos33E8#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos33E6);
          tensor[3] Inner33DC#2 = altCPos2D9C;
          femData:MeshPos callFindPos33E9#2 = findPos2C4C (_t2D86,Inner33DC);
          int intPos33EA#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos33E9);
          tensor[3] refPos33EB#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos33E9);
          int[10] femIndicies33ED#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos33EA);
          tensor[10,3] femDofs33EE#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies33ED);
          tensor[10,3] dofs33EC#1 = femDofs33EE;
          tensor[10] basisResult33EF#1 = EvaluateBasis<BasisArray(10)>(refPos33EB);
          tensor[3] compositionl33DD#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,Inner33DC,dofs33EC,basisResult33EF,refPos33EB);
          tensor[3] Inner33DE#2 = altCPos2D9C;
          femData:MeshPos callFindPos33F0#2 = findPos2C4C (_t2D86,Inner33DE);
          int intPos33F1#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos33F0);
          tensor[3] refPos33F2#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos33F0);
          int[10] femIndicies33F4#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos33F1);
          tensor[10,3] femDofs33F5#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies33F4);
          tensor[10,3] dofs33F3#1 = femDofs33F5;
          tensor[10] basisResult33F6#1 = EvaluateBasis<BasisArray(10)>(refPos33F2);
          tensor[3] compositionl33DF#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,Inner33DE,dofs33F3,basisResult33F6,refPos33F2);
          tensor[3] Inner33E0#2 = altCPos2D9C;
          femData:MeshPos callFindPos33F7#2 = findPos2C4C (_t2D86,Inner33E0);
          int intPos33F8#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos33F7);
          tensor[3] refPos33F9#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos33F7);
          int[10] femIndicies33FB#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos33F8);
          tensor[10,3] femDofs33FC#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies33FB);
          tensor[10,3] dofs33FA#1 = femDofs33FC;
          tensor[10] basisResult33FD#1 = EvaluateBasis<BasisArray(10)>(refPos33F9);
          tensor[3] compositionl33E1#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,Inner33E0,dofs33FA,basisResult33FD,refPos33F9);
          real op1_e3_l_2033E2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl33DF,compositionl33E1);
          tensor[3] op1_e3_l_2133E3#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2DD0,stepSize2D90,compositionl33DD);
          real op1_e3_l_2233E4#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2033E2);
          tensor[3] op1_e3_l_2333E5#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2133E3,op1_e3_l_2233E4);
          tensor[3] altIntermed33DB#5 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2D9C,op1_e3_l_2333E5);
          bool _t3421#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed33D9);
          bool _t3423#1 = BNot(_t3421);
          if _t3423 then goto ASSIGN3427 else goto ASSIGN34D0
        ASSIGN3427:  preds = [COND3425]
          bool _t3426#1 = true;
          goto JOIN342A
        JOIN342A:  preds = [ASSIGN3427,ASSIGN34D3]
          bool _t3428#1 = phi(_t3426,_t3429)
          if _t3428 then goto STABILIZE342C else goto JOIN342D
        STABILIZE342C:  preds = [COND342B]
          stabilize
          goto JOIN342D
        JOIN342D:  preds = [*STABILIZE342C,COND342B]
          if _t3421 then goto ASSIGN3430 else goto ASSIGN34CE
        ASSIGN3430:  preds = [COND342E]
          femData:Mesh _t342F#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed33D9);
          int _t3431#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed33D9);
          femData:MeshCell c3433#1 = LoadFem<femData:MeshCell>(_t342F,_t3431);
          tensor[3] ref3435#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed33D9);
          int _t3437#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3433);
          femData:FuncCell _t3439#2 = LoadFem<femData:FuncCell>(data2D8E,_t3437);
          femData:FemFunc _t343B#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3439);
          femData:Space _t343D#2 = ExtractFem<femData:Space,femData:FemFunc>(_t343B);
          int _t343F#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3439);
          int[10] femIndicies3446#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t343D,_t343F);
          tensor[10,3] femDofs3447#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t343B,femIndicies3446);
          tensor[10,3] dofs3445#1 = femDofs3447;
          tensor[10] basisResult3448#1 = EvaluateBasis<BasisArray(10)>(ref3435);
          tensor[3] probe_l_83442#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t343F,_t343D,_t343B,ref3435,dofs3445,basisResult3448,ref3435);
          real op1_e3_l_113443#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_83442,probe_l_83442);
          real op1_e3_l_123444#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_113443);
          tensor[3] _t3441#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_83442,op1_e3_l_123444);
          goto JOIN3453
        JOIN3453:  preds = [ASSIGN3450,ASSIGN34CE]
          tensor[3] _t3451#1 = phi(_t3441,_t3452)
          tensor[3] up23454#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2D90,_t3451);
          femData:MeshPos cPos3456#6 = posMove2DF4 (cPos2D9A,up23454);
          femData:MeshPos callFindPos3463#2 = findPos2C4C (_t2D86,altIntermed33DB);
          int intPos3464#0 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3463);
          tensor[3] refPos3465#0 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3463);
          tensor[3] Inner3459#2 = altIntermed33DB;
          femData:MeshPos callFindPos3466#2 = findPos2C4C (_t2D86,Inner3459);
          int intPos3467#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3466);
          tensor[3] refPos3468#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3466);
          int[10] femIndicies346A#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos3467);
          tensor[10,3] femDofs346B#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies346A);
          tensor[10,3] dofs3469#1 = femDofs346B;
          tensor[10] basisResult346C#1 = EvaluateBasis<BasisArray(10)>(refPos3468);
          tensor[3] compositionl345A#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,Inner3459,dofs3469,basisResult346C,refPos3468);
          tensor[3] Inner345B#2 = altIntermed33DB;
          femData:MeshPos callFindPos346D#2 = findPos2C4C (_t2D86,Inner345B);
          int intPos346E#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos346D);
          tensor[3] refPos346F#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos346D);
          int[10] femIndicies3471#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos346E);
          tensor[10,3] femDofs3472#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies3471);
          tensor[10,3] dofs3470#1 = femDofs3472;
          tensor[10] basisResult3473#1 = EvaluateBasis<BasisArray(10)>(refPos346F);
          tensor[3] compositionl345C#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,Inner345B,dofs3470,basisResult3473,refPos346F);
          tensor[3] Inner345D#2 = altIntermed33DB;
          femData:MeshPos callFindPos3474#2 = findPos2C4C (_t2D86,Inner345D);
          int intPos3475#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3474);
          tensor[3] refPos3476#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3474);
          int[10] femIndicies3478#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos3475);
          tensor[10,3] femDofs3479#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies3478);
          tensor[10,3] dofs3477#1 = femDofs3479;
          tensor[10] basisResult347A#1 = EvaluateBasis<BasisArray(10)>(refPos3476);
          tensor[3] compositionl345E#1 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,Inner345D,dofs3477,basisResult347A,refPos3476);
          real op1_e3_l_19345F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl345C,compositionl345E);
          tensor[3] op1_e3_l_203460#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2D90,compositionl345A);
          real op1_e3_l_213461#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_19345F);
          tensor[3] op1_e3_l_223462#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_203460,op1_e3_l_213461);
          tensor[3] altCPos3458#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2D9C,op1_e3_l_223462);
          bool _t349E#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos3456);
          bool _t34A0#1 = BNot(_t349E);
          if _t34A0 then goto MASSIGN34A3 else goto JOIN34A7
        MASSIGN34A3:  preds = [COND34A2]
          Print<[tensor[3][]]>(stream2D94);
          self.cPos = cPos3456;
          self.altCPos = altCPos3458;
          stabilize
          goto JOIN34A7
        JOIN34A7:  preds = [*STABILIZE34A6,COND34A2]
          tensor[3] _t34A8#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos3456);
          int _t34AA#2 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos3456);
          femData:Mesh _t34AC#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos3456);
          int[4] femIndicies34B0#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t34AC,_t34AA);
          tensor[4,3] femDofs34B1#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t34AC,femIndicies34B0);
          tensor[4,3] dofs34AF#1 = femDofs34B1;
          tensor[4] basisResult34B2#1 = EvaluateBasis<BasisArray(4)>(_t34A8);
          tensor[3] _t34AE#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t34AA,_t34AC,_t34AC,_t34A8,dofs34AF,basisResult34B2,_t34A8);
          tensor[3][1] _t34B8#1 = <tensor[3][1]>{_t34AE};
          tensor[3][] _t34BA#1 = MkDynamic<tensor[3],1>(_t34B8);
          tensor[3][] stream34BC#1 = Concat<tensor[3]>(stream2D94,_t34BA);
          tensor[3][1] _t34BE#1 = <tensor[3][1]>{altCPos3458};
          tensor[3][] _t34C0#1 = MkDynamic<tensor[3],1>(_t34BE);
          tensor[3][] newStream34C2#1 = Concat<tensor[3]>(newStream2D96,_t34C0);
          int _t34C4#1 = 1;
          int step34C6#1 = IAdd(step2D98,_t34C4);
          self.stream = stream34BC;
          self.newStream = newStream34C2;
          self.step = step34C6;
          self.cPos = cPos3456;
          self.altCPos = altCPos3458;
          active
        ASSIGN34CE:  preds = [COND342E]
          tensor[3] _t3452#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN3453
        ASSIGN34D0:  preds = [COND3425]
          femData:MeshPos _t34CF#1 = findPos2C4C (meshData2D8C,altIntermed33DB);
          bool _t34D1#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t34CF);
          bool _t3429#1 = BNot(_t34D1);
          goto JOIN342A
        ASSIGN34D4:  preds = [COND2DD2]
          tensor[3] _t2DF0#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2DF1
        ASSIGN34D6:  preds = [COND2DC7]
          string _t34D5#1 = "fine in cell:";
          femData:MeshCell _t34D7#1 = LoadFem<femData:MeshCell>(_t2DB1,_t2DAF);
          string _t34D9#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t34D5,_t34D7,_t34D9);
          goto JOIN2DCF
        ASSIGN34DD:  preds = [COND2DA4]
          femData:MeshPos _t34DC#1 = findPos2C4C (meshData2D8C,altCPos2D9C);
          bool _t34DE#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t34DC);
          bool _t34E0#1 = BNot(_t34DE);
          if _t34E0 then goto ASSIGN34E4 else goto ASSIGN34E7
        ASSIGN34E4:  preds = [COND34E2]
          bool _t34E3#1 = true;
          goto JOIN34E6
        JOIN34E6:  preds = [ASSIGN34E4,ASSIGN34E7]
          bool _t2DA8#1 = phi(_t34E3,_t34E5)
          goto JOIN2DA9
        ASSIGN34E7:  preds = [COND34E2]
          bool _t34E5#1 = EQ<int>(step2D98,stepMax2D92);
          goto JOIN34E6
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY34E8:  preds = []
      tensor[3][] startPoints34E9#1 = globals.startPoints2BFD;
    FOREACH34EC:  preds = [ASSIGN34EA,NEXT34EE]
      foreach (x34EB in startPoints34E9) on exit goto RETURN34EF
      new gg(x34EB);
      goto FOREACH34EC
    RETURN34EF:  preds = [FOREACH34EC]
      return
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData2BF8 (meshData) = <no-default>
  input 0space03AB_intermedateGlobal2BF9 (space) = <no-default>
  input 0data03AD_intermedateGlobal2BFA (data) = <no-default>
  input timeSteps2BFB (timeSteps) = <default>
  input timeEps2BFC (timeEps) = <default>
  input startPoints2BFD (startPoints) = <no-default>
  input stepSize2BFE (stepSize) = <default>
  input stepMax2BFF (stepMax) = <default>
  global femData:FemFunc data2C00
  global femData:Mesh _t2C01
  global femData:Space _tX2C02
## functions
  function femData:MeshPos findPos2C4C (femData:Mesh mesh2C4D#11, tensor[3] pos2C4E#4) {
    ENTRY2C4F:  preds = []
      real _t2C50#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn2C52#10 = <tensor[3]>[_t2C50,_t2C50,_t2C50];
      int newtonInt2C54#1 = 0;
      int[] yayCells2C56#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh2C4D,pos2C4E);
    FOREACH2C59:  preds = [ASSIGN2C57,NEXT2D73]
      foreach (cellItter2C58 in yayCells2C56) on exit goto ASSIGN2D75
      int _t2C5A#1 = 16;
      int[] _t2C5C#1 = Range(newtonInt2C54,_t2C5A);
    FOREACH2C5F:  preds = [ASSIGN2C5D,NEXT2D72]
      foreach (newtonItter2C5E in _t2C5C) on exit goto NEXT2D73
        tensor[3] xn2C61#6 = phi(xn2C52,xn2C60)
      int[4] femIndicies2C72#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh2C4D,cellItter2C58);
      tensor[4,3] femDofs2C73#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh2C4D,femIndicies2C72);
      tensor[3,4] basisResult2C74#4 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3,3] probe_l_102C62#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3,3,3] op1_e3_l_122C63#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_102C62);
      tensor[3,3,3] op1_e3_l_132C64#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_102C62,op1_e3_l_122C63);
      tensor[3] probe_l_142C65#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3] probe_l_152C66#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3] probe_l_162C67#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3,3] op1_e3_l_172C68#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_162C67);
      tensor[3] op1_e3_l_182C69#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_152C66,op1_e3_l_172C68);
      real op1_e3_l_192C6A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_142C65,op1_e3_l_182C69);
      tensor[3,3] op1_e3_l_202C6B#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_132C64);
      real op1_e3_l_212C6C#1 = λ(T0[])<(2 * T0)> (op1_e3_l_192C6A);
      tensor[4] basisResult2C7C#2 = EvaluateBasis<BasisArray(4)>(xn2C61);
      tensor[3] probe_l_222C6D#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn2C61,cellItter2C58,mesh2C4D,femDofs2C73,basisResult2C7C,xn2C61);
      tensor[3,3] op1_e3_l_232C6E#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_202C6B,op1_e3_l_212C6C);
      tensor[3] op1_e3_l_242C6F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos2C4E,probe_l_222C6D);
      tensor[3] op1_e3_l_252C70#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_232C6E,op1_e3_l_242C6F);
      tensor[3] xn2C60#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn2C61,op1_e3_l_252C70);
      real _t2C99#2 = 0.1e-7;
      real _t2C9B#1 = λ(T0[],T1[])<(T0 * T1)> (_t2C99,_t2C99);
      tensor[3] probe_l_302CA9#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C61,femDofs2C73,basisResult2C7C,xn2C61);
      tensor[3] op1_e3_l_322CAB#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos2C4E,probe_l_302CA9);
      tensor[3] op1_e3_l_482CAC#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_232C6E,op1_e3_l_322CAB);
      real _t2C9D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_482CAC,op1_e3_l_482CAC);
      bool _t2CD5#1 = GTE<real>(_t2C9B,_t2C9D);
      if _t2CD5 then goto ASSIGN2CD9 else goto JOIN2D71
    ASSIGN2CD9:  preds = [COND2CD7]
      real _t2CD8#4 = 0.1e1;
      real _t2CDA#4 = 0.1e-8;
      real _t2CDC#1 = λ(T0[],T1[])<(T0 + T1)> (_t2CD8,_t2CDA);
      tensor[3] _t2CDE#1 = <tensor[3]>[_t2CD8,_t2CD8,_t2CD8];
      real _t2CE0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2CDE,xn2C60);
      bool _t2D1A#1 = GT<real>(_t2CDC,_t2CE0);
      tensor[3] _t2D1C#1 = <tensor[3]>[_t2CDA,_t2CDA,_t2CDA];
      tensor[3] _t2D1E#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2D1C,xn2C60);
      real _t2D58#1 = TensorIndex<tensor[3],[0]>(_t2D1E);
      real _t2D5A#3 = -0.e0;
      bool _t2D5C#1 = GT<real>(_t2D58,_t2D5A);
      real _t2D5E#1 = TensorIndex<tensor[3],[1]>(_t2D1E);
      bool _t2D60#1 = GT<real>(_t2D5E,_t2D5A);
      real _t2D62#1 = TensorIndex<tensor[3],[2]>(_t2D1E);
      bool _t2D64#1 = GT<real>(_t2D62,_t2D5A);
      bool _t2D66#1 = BAnd(_t2D60,_t2D64);
      bool _t2D68#1 = BAnd(_t2D5C,_t2D66);
      bool _t2D6A#1 = BAnd(_t2D1A,_t2D68);
      if _t2D6A then goto ASSIGN2D6E else goto JOIN2D70
    ASSIGN2D6E:  preds = [COND2D6C]
      femData:MeshPos _t2D6D#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh2C4D,cellItter2C58,xn2C60,pos2C4E);
      return _t2D6D
      goto JOIN2D70
    JOIN2D70:  preds = [*RETURN(_t2D6D)2D6F,COND2D6C]
      goto JOIN2D71
    JOIN2D71:  preds = [JOIN2D70,COND2CD7]
      goto FOREACH2C5F
    NEXT2D73:  preds = [FOREACH2C5F]
      goto FOREACH2C59
    ASSIGN2D75:  preds = [FOREACH2C59]
      string _t2D74#1 = "Bad end 2";
      string _t2D76#1 = "\n";
      Print<[string,string]>(_t2D74,_t2D76);
      femData:MeshPos _t2D79#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2C4D);
      return _t2D79
}
  function int[2] nextCell43260 (int faceIdx3261#1, int cell3262#1, femData:Mesh mesh3263#1) {
    ENTRY3264:  preds = []
      int _t3265#1 = 8;
      int _t3267#1 = IMul(cell3262,_t3265);
      int _t3269#1 = 2;
      int _t326B#1 = IMul(faceIdx3261,_t3269);
      int _t326D#1 = IAdd(_t3267,_t326B);
      int[2] _t326F#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh3263,_t326D);
      return _t326F
}
  function femData:MeshPos posMove2DF4 (femData:MeshPos x2DF5#6, tensor[3] dPos2DF6#3) {
    ENTRY2DF7:  preds = []
      femData:Mesh meshData2DF8#1 = globals.meshData2BF8;
      int timeSteps2DFA#1 = globals.timeSteps2BFB;
      real timeEps2DFC#1 = globals.timeEps2BFC;
      bool _t2DFE#1 = ExtractFemItem<bool,Valid(MeshPos)>(x2DF5);
      bool _t2E00#1 = BNot(_t2DFE);
      if _t2E00 then goto RETURN(x2DF5)2E03 else goto JOIN2E04
    RETURN(x2DF5)2E03:  preds = [COND2E02]
      return x2DF5
      goto JOIN2E04
    JOIN2E04:  preds = [*RETURN(x2DF5)2E03,COND2E02]
      real time2E05#23 = 0.1e1;
      int _t2E07#6 = 0;
      int[] _t2E09#1 = Range(_t2E07,timeSteps2DFA);
    FOREACH2E0C:  preds = [ASSIGN2E0A,NEXT2EDA]
      foreach (i2E0B in _t2E09) on exit goto ASSIGN33C2
        femData:MeshPos cmp2E0E#6 = phi(x2DF5,cmp2ED5)
        real time2E1B#13 = phi(time2E05,time2ED7)
      femData:Mesh _t2E0D#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp2E0E);
      int _t2E10#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp2E0E);
      femData:MeshCell _t2E12#2 = LoadFem<femData:MeshCell>(_t2E0D,_t2E10);
      femData:Mesh _t2E14#11 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2E12);
      int _t2E16#10 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2E12);
      tensor[3] _t2E18#23 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp2E0E);
      int[4] femIndicies2E2B#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs2E2C#8 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies2E2B);
      tensor[3,4] basisResult2E2D#8 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_72E1C#2 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3,3] op1_e3_l_92E1D#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72E1C);
      tensor[3,3,3] op1_e3_l_102E1E#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72E1C,op1_e3_l_92E1D);
      tensor[3] probe_l_112E1F#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_122E20#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_132E21#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3] op1_e3_l_142E22#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_132E21);
      tensor[3] op1_e3_l_152E23#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_122E20,op1_e3_l_142E22);
      real op1_e3_l_162E24#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_112E1F,op1_e3_l_152E23);
      tensor[3,3] op1_e3_l_172E25#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_102E1E);
      real op1_e3_l_182E26#1 = λ(T0[])<(2 * T0)> (op1_e3_l_162E24);
      tensor[3,3] op1_e3_l_192E27#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_172E25,op1_e3_l_182E26);
      tensor[3] op1_e3_l_202E28#5 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_192E27);
      tensor[3] op1_e3_l_212E29#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (time2E1B,op1_e3_l_202E28);
      tensor[3] newPos2E1A#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2E18,op1_e3_l_212E29);
      real _t2E4D#4 = 0.1e-8;
      real _t2E4F#1 = λ(T0[],T1[])<(T0 + T1)> (time2E05,_t2E4D);
      tensor[3] _t2E51#1 = <tensor[3]>[time2E05,time2E05,time2E05];
      real _t2E53#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2E51,newPos2E1A);
      bool _t2E87#1 = GT<real>(_t2E4F,_t2E53);
      tensor[3] _t2E89#1 = <tensor[3]>[_t2E4D,_t2E4D,_t2E4D];
      tensor[3] _t2E8B#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (_t2E89,_t2E18,op1_e3_l_212E29);
      real _t2EBD#1 = TensorIndex<tensor[3],[0]>(_t2E8B);
      real _t2EBF#3 = -0.e0;
      bool _t2EC1#1 = GT<real>(_t2EBD,_t2EBF);
      real _t2EC3#1 = TensorIndex<tensor[3],[1]>(_t2E8B);
      bool _t2EC5#1 = GT<real>(_t2EC3,_t2EBF);
      real _t2EC7#1 = TensorIndex<tensor[3],[2]>(_t2E8B);
      bool _t2EC9#1 = GT<real>(_t2EC7,_t2EBF);
      bool _t2ECB#1 = BAnd(_t2EC5,_t2EC9);
      bool _t2ECD#1 = BAnd(_t2EC1,_t2ECB);
      bool _t2ECF#1 = BAnd(_t2E87,_t2ECD);
      if _t2ECF then goto ASSIGN2ED3 else goto ASSIGN2EDC
    ASSIGN2ED3:  preds = [COND2ED1]
      femData:MeshPos nmp2ED2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2E14,_t2E16,newPos2E1A);
      return nmp2ED2
      goto JOIN2ED9
    JOIN2ED9:  preds = [*RETURN(nmp2ED2)2ED4,JOIN3368]
      femData:MeshPos cmp2ED5#1 = phi(nmp2ED6)
      real time2ED7#1 = phi(time2ED8)
      goto FOREACH2E0C
    ASSIGN2EDC:  preds = [COND2ED1]
      int _t2EDB#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp2E0E);
      real time2EDD#6 = +inf;
      int face2EDF#7 = -1;
      real faceTime2EE1#6 = -inf;
      real _t2EE3#15 = 0.57735026919e0;
      tensor[3] _t2EE5#4 = <tensor[3]>[_t2EE3,_t2EE3,_t2EE3];
      real op1_e3_l_102EE8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,_t2E18);
      real op1_e3_l_252EF6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,op1_e3_l_202E28);
      real op1_e3_l_262EF7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2EE3,op1_e3_l_102EE8);
      real op1_e3_l_272EF8#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_252EF6);
      real _t2EE7#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_262EF7,op1_e3_l_272EF8);
      real _t2F1F#8 = -0.1e-15;
      bool _t2F21#1 = GTE<real>(_t2EE7,_t2F1F);
      bool _t2F23#1 = GT<real>(time2EDD,_t2EE7);
      tensor[3,3] probe_l_72F26#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3,3] op1_e3_l_92F27#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72F26);
      tensor[3,3,3] op1_e3_l_102F28#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72F26,op1_e3_l_92F27);
      tensor[3] probe_l_112F29#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_122F2A#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_132F2B#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3] op1_e3_l_142F2C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_132F2B);
      tensor[3] op1_e3_l_152F2D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_122F2A,op1_e3_l_142F2C);
      real op1_e3_l_162F2E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_112F29,op1_e3_l_152F2D);
      tensor[3,3] op1_e3_l_172F2F#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_102F28);
      real op1_e3_l_182F30#1 = λ(T0[])<(2 * T0)> (op1_e3_l_162F2E);
      tensor[3,3] op1_e3_l_192F31#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_172F2F,op1_e3_l_182F30);
      tensor[3] op1_e3_l_202F32#6 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_192F31);
      real op1_e3_l_212F33#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,op1_e3_l_202F32);
      real op1_e3_l_222F34#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_212F33);
      real _t2F25#1 = λ(T0[])<Abs(T0)> (op1_e3_l_222F34);
      real _t2F59#4 = 0.1e-20;
      bool _t2F5B#2 = GTE<real>(_t2F25,_t2F59);
      bool _t2F5D#1 = BAnd(_t2F23,_t2F5B);
      bool _t2F5F#1 = BAnd(_t2F21,_t2F5D);
      if _t2F5F then goto ASSIGN2F63 else goto JOIN2F6C
    ASSIGN2F63:  preds = [COND2F61]
      bool _t2F62#1 = NEQ<int>(_t2EDB,_t2E07);
      if _t2F62 then goto JOIN2F68 else goto JOIN2F68
    JOIN2F68:  preds = [COND2F64,COND2F64]
      real faceTime2F65#1 = phi(faceTime2EE1,_t2EE7)
      int face2F66#1 = phi(_t2E07,face2EDF)
      real time2F67#1 = phi(_t2EE7,time2EDD)
      goto JOIN2F6C
    JOIN2F6C:  preds = [JOIN2F68,COND2F61]
      real faceTime2F69#2 = phi(faceTime2F65,faceTime2EE1)
      int face2F6A#2 = phi(face2F66,face2EDF)
      real time2F6B#3 = phi(time2F67,time2EDD)
      real _t2F6D#50 = 0.e0;
      tensor[3] _t2F6F#4 = <tensor[3]>[time2E05,_t2F6D,_t2F6D];
      real op1_e3_l_102F72#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,_t2E18);
      real op1_e3_l_252F80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,op1_e3_l_202E28);
      real op1_e3_l_262F81#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_102F72);
      real op1_e3_l_272F82#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_252F80);
      real _t2F71#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_262F81,op1_e3_l_272F82);
      bool _t2FA9#1 = GTE<real>(_t2F71,_t2F1F);
      bool _t2FAB#1 = GT<real>(time2F6B,_t2F71);
      real op1_e3_l_212FBB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,op1_e3_l_202F32);
      real op1_e3_l_222FBC#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_212FBB);
      real _t2FAD#1 = λ(T0[])<Abs(T0)> (op1_e3_l_222FBC);
      bool _t2FE1#2 = GTE<real>(_t2FAD,_t2F59);
      bool _t2FE3#1 = BAnd(_t2FAB,_t2FE1);
      bool _t2FE5#1 = BAnd(_t2FA9,_t2FE3);
      if _t2FE5 then goto ASSIGN2FE9 else goto JOIN2FF4
    ASSIGN2FE9:  preds = [COND2FE7]
      int _t2FE8#2 = 1;
      bool _t2FEA#1 = NEQ<int>(_t2EDB,_t2FE8);
      if _t2FEA then goto JOIN2FF0 else goto JOIN2FF0
    JOIN2FF0:  preds = [COND2FEC,COND2FEC]
      real faceTime2FED#1 = phi(faceTime2F69,_t2F71)
      int face2FEE#1 = phi(_t2FE8,face2F6A)
      real time2FEF#1 = phi(_t2F71,time2F6B)
      goto JOIN2FF4
    JOIN2FF4:  preds = [JOIN2FF0,COND2FE7]
      real faceTime2FF1#2 = phi(faceTime2FED,faceTime2F69)
      int face2FF2#2 = phi(face2FEE,face2F6A)
      real time2FF3#3 = phi(time2FEF,time2F6B)
      real _t2FF5#14 = -0.1e1;
      tensor[3] _t2FF7#4 = <tensor[3]>[_t2F6D,_t2FF5,_t2F6D];
      real op1_e3_l_102FFA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,_t2E18);
      real op1_e3_l_253008#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,op1_e3_l_202E28);
      real op1_e3_l_263009#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_102FFA);
      real op1_e3_l_27300A#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_253008);
      real _t2FF9#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263009,op1_e3_l_27300A);
      bool _t3031#1 = GTE<real>(_t2FF9,_t2F1F);
      bool _t3033#1 = GT<real>(time2FF3,_t2FF9);
      real op1_e3_l_213043#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,op1_e3_l_202F32);
      real op1_e3_l_223044#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_213043);
      real _t3035#1 = λ(T0[])<Abs(T0)> (op1_e3_l_223044);
      bool _t3069#2 = GTE<real>(_t3035,_t2F59);
      bool _t306B#1 = BAnd(_t3033,_t3069);
      bool _t306D#1 = BAnd(_t3031,_t306B);
      if _t306D then goto ASSIGN3071 else goto JOIN307C
    ASSIGN3071:  preds = [COND306F]
      int _t3070#2 = 2;
      bool _t3072#1 = NEQ<int>(_t2EDB,_t3070);
      if _t3072 then goto JOIN3078 else goto JOIN3078
    JOIN3078:  preds = [COND3074,COND3074]
      real faceTime3075#1 = phi(faceTime2FF1,_t2FF9)
      int face3076#1 = phi(_t3070,face2FF2)
      real time3077#1 = phi(_t2FF9,time2FF3)
      goto JOIN307C
    JOIN307C:  preds = [JOIN3078,COND306F]
      real faceTime3079#2 = phi(faceTime3075,faceTime2FF1)
      int face307A#2 = phi(face3076,face2FF2)
      real time307B#3 = phi(time3077,time2FF3)
      tensor[3] _t307D#4 = <tensor[3]>[_t2F6D,_t2F6D,time2E05];
      real op1_e3_l_103080#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,_t2E18);
      real op1_e3_l_25308E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,op1_e3_l_202E28);
      real op1_e3_l_26308F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103080);
      real op1_e3_l_273090#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_25308E);
      real _t307F#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_26308F,op1_e3_l_273090);
      bool _t30B7#1 = GTE<real>(_t307F,_t2F1F);
      bool _t30B9#1 = GT<real>(time307B,_t307F);
      real op1_e3_l_2130C9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,op1_e3_l_202F32);
      real op1_e3_l_2230CA#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_2130C9);
      real _t30BB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_2230CA);
      bool _t30EF#2 = GTE<real>(_t30BB,_t2F59);
      bool _t30F1#1 = BAnd(_t30B9,_t30EF);
      bool _t30F3#1 = BAnd(_t30B7,_t30F1);
      if _t30F3 then goto ASSIGN30F7 else goto JOIN3102
    ASSIGN30F7:  preds = [COND30F5]
      int _t30F6#2 = 3;
      bool _t30F8#1 = NEQ<int>(_t2EDB,_t30F6);
      if _t30F8 then goto JOIN30FE else goto JOIN30FE
    JOIN30FE:  preds = [COND30FA,COND30FA]
      real faceTime30FB#1 = phi(faceTime3079,_t307F)
      int face30FC#1 = phi(_t30F6,face307A)
      real time30FD#1 = phi(_t307F,time307B)
      goto JOIN3102
    JOIN3102:  preds = [JOIN30FE,COND30F5]
      real faceTime30FF#2 = phi(faceTime30FB,faceTime3079)
      int face3100#2 = phi(face30FC,face307A)
      real time3101#1 = phi(time30FD,time307B)
      bool _t3103#1 = NEQ<int>(face3100,face2EDF);
      if _t3103 then goto ASSIGN3107 else goto ASSIGN33B8
    ASSIGN3107:  preds = [COND3105]
      real _t3106#1 = Max<real>(time3101,_t2F6D);
      real _t3108#1 = IntToReal(face3100);
      tensor[2] _t310A#1 = <tensor[2]>[_t3106,_t3108];
      goto JOIN310E
    JOIN310E:  preds = [ASSIGN310B,JOIN33BD]
      tensor[2] _t310C#1 = phi(_t310A,_t310D)
      real eTime310F#3 = TensorIndex<tensor[2],[0]>(_t310C);
      real op1_e3_l_33111#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,eTime310F);
      real time2ED8#2 = λ(T0[],T1[])<(T0) - (T1)> (time2E1B,op1_e3_l_33111);
      int _t3114#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp2E0E);
      tensor[3] _t3116#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp2E0E);
      real op1_e3_l_103119#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,_t3116);
      real op1_e3_l_263128#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2EE3,op1_e3_l_103119);
      real _t3118#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263128,op1_e3_l_222F34);
      bool _t3150#1 = GTE<real>(_t3118,_t2F1F);
      bool _t3152#1 = GT<real>(time2EDD,_t3118);
      bool _t3154#1 = BAnd(_t3152,_t2F5B);
      bool _t3156#1 = BAnd(_t3150,_t3154);
      if _t3156 then goto ASSIGN315A else goto JOIN3163
    ASSIGN315A:  preds = [COND3158]
      bool _t3159#1 = NEQ<int>(_t2EDB,_t2E07);
      if _t3159 then goto JOIN315F else goto JOIN315F
    JOIN315F:  preds = [COND315B,COND315B]
      real faceTime315C#1 = phi(faceTime2EE1,_t3118)
      int face315D#1 = phi(_t2E07,face2EDF)
      real time315E#1 = phi(_t3118,time2EDD)
      goto JOIN3163
    JOIN3163:  preds = [JOIN315F,COND3158]
      real faceTime3160#2 = phi(faceTime315C,faceTime2EE1)
      int face3161#2 = phi(face315D,face2EDF)
      real time3162#3 = phi(time315E,time2EDD)
      real op1_e3_l_103165#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,_t3116);
      real op1_e3_l_263174#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103165);
      real _t3164#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263174,op1_e3_l_222FBC);
      bool _t319C#1 = GTE<real>(_t3164,_t2F1F);
      bool _t319E#1 = GT<real>(time3162,_t3164);
      bool _t31A0#1 = BAnd(_t319E,_t2FE1);
      bool _t31A2#1 = BAnd(_t319C,_t31A0);
      if _t31A2 then goto ASSIGN31A6 else goto JOIN31B1
    ASSIGN31A6:  preds = [COND31A4]
      int _t31A5#2 = 1;
      bool _t31A7#1 = NEQ<int>(_t2EDB,_t31A5);
      if _t31A7 then goto JOIN31AD else goto JOIN31AD
    JOIN31AD:  preds = [COND31A9,COND31A9]
      real faceTime31AA#1 = phi(faceTime3160,_t3164)
      int face31AB#1 = phi(_t31A5,face3161)
      real time31AC#1 = phi(_t3164,time3162)
      goto JOIN31B1
    JOIN31B1:  preds = [JOIN31AD,COND31A4]
      real faceTime31AE#2 = phi(faceTime31AA,faceTime3160)
      int face31AF#2 = phi(face31AB,face3161)
      real time31B0#3 = phi(time31AC,time3162)
      real op1_e3_l_1031B3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,_t3116);
      real op1_e3_l_2631C2#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_1031B3);
      real _t31B2#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_2631C2,op1_e3_l_223044);
      bool _t31EA#1 = GTE<real>(_t31B2,_t2F1F);
      bool _t31EC#1 = GT<real>(time31B0,_t31B2);
      bool _t31EE#1 = BAnd(_t31EC,_t3069);
      bool _t31F0#1 = BAnd(_t31EA,_t31EE);
      if _t31F0 then goto ASSIGN31F4 else goto JOIN31FF
    ASSIGN31F4:  preds = [COND31F2]
      int _t31F3#2 = 2;
      bool _t31F5#1 = NEQ<int>(_t2EDB,_t31F3);
      if _t31F5 then goto JOIN31FB else goto JOIN31FB
    JOIN31FB:  preds = [COND31F7,COND31F7]
      real faceTime31F8#1 = phi(faceTime31AE,_t31B2)
      int face31F9#1 = phi(_t31F3,face31AF)
      real time31FA#1 = phi(_t31B2,time31B0)
      goto JOIN31FF
    JOIN31FF:  preds = [JOIN31FB,COND31F2]
      real faceTime31FC#2 = phi(faceTime31F8,faceTime31AE)
      int face31FD#2 = phi(face31F9,face31AF)
      real time31FE#3 = phi(time31FA,time31B0)
      real op1_e3_l_103201#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,_t3116);
      real op1_e3_l_263210#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103201);
      real _t3200#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263210,op1_e3_l_2230CA);
      bool _t3238#1 = GTE<real>(_t3200,_t2F1F);
      bool _t323A#1 = GT<real>(time31FE,_t3200);
      bool _t323C#1 = BAnd(_t323A,_t30EF);
      bool _t323E#1 = BAnd(_t3238,_t323C);
      if _t323E then goto ASSIGN3242 else goto JOIN324D
    ASSIGN3242:  preds = [COND3240]
      int _t3241#2 = 3;
      bool _t3243#1 = NEQ<int>(_t2EDB,_t3241);
      if _t3243 then goto JOIN3249 else goto JOIN3249
    JOIN3249:  preds = [COND3245,COND3245]
      real faceTime3246#1 = phi(faceTime31FC,_t3200)
      int face3247#1 = phi(_t3241,face31FD)
      real time3248#1 = phi(_t3200,time31FE)
      goto JOIN324D
    JOIN324D:  preds = [JOIN3249,COND3240]
      real faceTime324A#2 = phi(faceTime3246,faceTime31FC)
      int face324B#2 = phi(face3247,face31FD)
      real time324C#1 = phi(time3248,time31FE)
      bool _t324E#1 = NEQ<int>(face324B,face2EDF);
      if _t324E then goto ASSIGN3252 else goto ASSIGN33AE
    ASSIGN3252:  preds = [COND3250]
      real _t3251#1 = Max<real>(time324C,_t2F6D);
      real _t3253#1 = IntToReal(face324B);
      tensor[2] _t3255#1 = <tensor[2]>[_t3251,_t3253];
      goto JOIN3259
    JOIN3259:  preds = [ASSIGN3256,JOIN33B3]
      tensor[2] _t3257#3 = phi(_t3255,_t3258)
      real _t325A#1 = TensorIndex<tensor[2],[1]>(_t3257);
      real t325D#1 = Floor<1>(_t325A);
      int _t325C#6 = RealToInt<1>(t325D);
      int[2] _t3272#2 = nextCell43260 (_t325C,_t3114,_t2E0D);
      int _t3274#2 = Subscript<int[2]>(_t3272,_t2E07);
      bool _t3276#1 = NEQ<int>(face2EDF,_t3274);
      if _t3276 then goto ASSIGN327A else goto ASSIGN3379
    ASSIGN327A:  preds = [COND3278]
      string _t3279#1 = "face ";
      string _t327B#1 = " to ";
      int _t327D#1 = 1;
      int _t327F#6 = Subscript<int[2]>(_t3272,_t327D);
      string _t3281#2 = "\n";
      string _t3283#1 = "got: ";
      tensor[4] _t3285#7 = <tensor[4]>[time2E05,_t2F6D,_t2F6D,_t2F6D];
      tensor[4] _t3287#6 = <tensor[4]>[_t2F6D,time2E05,_t2F6D,_t2F6D];
      tensor[4] _t3289#7 = <tensor[4]>[_t2F6D,_t2F6D,time2E05,_t2F6D];
      real _t328B#1 = 0.971445146547e-16;
      tensor[4] _t328D#4 = <tensor[4]>[_t328B,_t2F6D,_t2F6D,time2E05];
      tensor[4,4] _t328F#4 = <tensor[4,4]>[_t3285,_t3287,_t3289,_t328D];
      real _t3291#7 = -0.57735026919e0;
      tensor[4] _t3293#2 = <tensor[4]>[_t2EE3,_t2EE3,_t2EE3,_t3291];
      real _t3295#4 = -0.333333333333e0;
      real _t3297#2 = 0.666666666667e0;
      real _t3299#2 = 0.333333333333e0;
      tensor[4] _t329B#3 = <tensor[4]>[_t3295,_t3297,_t3295,_t3299];
      tensor[4] _t329D#3 = <tensor[4]>[_t3295,_t3295,_t3297,_t3299];
      tensor[4,4] _t329F#4 = <tensor[4,4]>[_t3293,_t329B,_t329D,_t328D];
      tensor[4] _t32A1#1 = <tensor[4]>[_t3291,_t3291,_t3291,_t2EE3];
      tensor[4,4] _t32A3#4 = <tensor[4,4]>[_t329B,_t32A1,_t329D,_t328D];
      tensor[4,4] _t32A5#4 = <tensor[4,4]>[_t329B,_t329D,_t3293,_t328D];
      tensor[4,4][4] _t32A7#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4] _t32A9#1 = <tensor[4]>[_t2EE3,_t2FF5,_t2FF5,time2E05];
      tensor[4] _t32AB#1 = <tensor[4]>[_t2EE3,time2E05,_t2F6D,_t2F6D];
      tensor[4] _t32AD#1 = <tensor[4]>[_t2EE3,_t2F6D,time2E05,_t2F6D];
      tensor[4] _t32AF#10 = <tensor[4]>[_t2F6D,_t2F6D,_t2F6D,time2E05];
      tensor[4,4] _t32B1#4 = <tensor[4,4]>[_t32A9,_t32AB,_t32AD,_t32AF];
      tensor[4,4] _t32B3#12 = <tensor[4,4]>[_t3285,_t3287,_t3289,_t32AF];
      tensor[4] _t32B5#1 = <tensor[4]>[_t2FF5,_t2F6D,_t2F6D,_t2F6D];
      tensor[4,4] _t32B7#4 = <tensor[4,4]>[_t3287,_t32B5,_t3289,_t32AF];
      tensor[4,4] _t32B9#4 = <tensor[4,4]>[_t3287,_t3289,_t3285,_t32AF];
      tensor[4,4][4] _t32BB#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4] _t32BD#1 = <tensor[4]>[_t2FF5,_t3291,_t2FF5,time2E05];
      tensor[4] _t32BF#1 = <tensor[4]>[time2E05,_t3291,_t2F6D,_t2F6D];
      tensor[4] _t32C1#1 = <tensor[4]>[_t2F6D,_t3291,time2E05,_t2F6D];
      tensor[4,4] _t32C3#4 = <tensor[4,4]>[_t32BD,_t32BF,_t32C1,_t32AF];
      tensor[4] _t32C5#2 = <tensor[4]>[_t2F6D,_t2FF5,_t2F6D,_t2F6D];
      tensor[4,4] _t32C7#4 = <tensor[4,4]>[_t32C5,_t3285,_t3289,_t32AF];
      tensor[4,4] _t32C9#4 = <tensor[4,4]>[_t3285,_t3289,_t32C5,_t32AF];
      tensor[4,4][4] _t32CB#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4] _t32CD#1 = <tensor[4]>[_t2FF5,_t2FF5,_t2EE3,time2E05];
      tensor[4] _t32CF#1 = <tensor[4]>[time2E05,_t2F6D,_t2EE3,_t2F6D];
      tensor[4] _t32D1#1 = <tensor[4]>[_t2F6D,time2E05,_t2EE3,_t2F6D];
      tensor[4,4] _t32D3#4 = <tensor[4,4]>[_t32CD,_t32CF,_t32D1,_t32AF];
      tensor[4,4] _t32D5#4 = <tensor[4,4]>[_t3289,_t3285,_t3287,_t32AF];
      tensor[4] _t32D7#1 = <tensor[4]>[_t2F6D,_t2F6D,_t2FF5,_t2F6D];
      tensor[4,4] _t32D9#4 = <tensor[4,4]>[_t3285,_t32D7,_t3287,_t32AF];
      tensor[4,4][4] _t32DB#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t32DD#1 = <tensor[4,4][4][4]>{_t32A7,_t32BB,_t32CB,_t32DB};
      tensor[4,4][4] _t32DF#1 = Subscript<tensor[4,4][4][4]>(_t32DD,_t325C);
      tensor[4,4] _t32E1#1 = Subscript<tensor[4,4][4]>(_t32DF,_t327F);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t3279,_t325C,_t327B,_t327F,_t3281,_t3283,_t32E1,_t3281);
      tensor[4,4][4] _t32E4#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t32E6#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t32E8#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t32EA#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t32EC#1 = <tensor[4,4][4][4]>{_t32E4,_t32E6,_t32E8,_t32EA};
      tensor[4,4][4] _t32EE#1 = Subscript<tensor[4,4][4][4]>(_t32EC,_t325C);
      tensor[4,4] _t32F0#1 = Subscript<tensor[4,4][4]>(_t32EE,_t327F);
      real _t32F2#1 = TensorIndex<tensor[2],[0]>(_t3257);
      tensor[3] op1_e3_l_223302#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t32F2,time2E1B,op1_e3_l_202F32);
      tensor[3] _t32F4#3 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (_t3116,op1_e3_l_223302);
      real _t3326#1 = TensorIndex<tensor[3],[0]>(_t32F4);
      real _t3328#1 = TensorIndex<tensor[3],[1]>(_t32F4);
      real _t332A#1 = TensorIndex<tensor[3],[2]>(_t32F4);
      tensor[4] _t332C#3 = <tensor[4]>[_t3326,_t3328,_t332A,time2E05];
      tensor[4] _t332E#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t32F0,_t332C);
      real _t3330#1 = TensorIndex<tensor[4],[0]>(_t332E);
      tensor[4,4][4] _t3332#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t3334#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t3336#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t3338#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t333A#1 = <tensor[4,4][4][4]>{_t3332,_t3334,_t3336,_t3338};
      tensor[4,4][4] _t333C#1 = Subscript<tensor[4,4][4][4]>(_t333A,_t325C);
      tensor[4,4] _t333E#1 = Subscript<tensor[4,4][4]>(_t333C,_t327F);
      tensor[4] _t3340#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t333E,_t332C);
      real _t3342#1 = TensorIndex<tensor[4],[1]>(_t3340);
      tensor[4,4][4] _t3344#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t3346#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t3348#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t334A#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t334C#1 = <tensor[4,4][4][4]>{_t3344,_t3346,_t3348,_t334A};
      tensor[4,4][4] _t334E#1 = Subscript<tensor[4,4][4][4]>(_t334C,_t325C);
      tensor[4,4] _t3350#1 = Subscript<tensor[4,4][4]>(_t334E,_t327F);
      tensor[4] _t3352#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t3350,_t332C);
      real _t3354#1 = TensorIndex<tensor[4],[2]>(_t3352);
      tensor[3] _t3356#1 = <tensor[3]>[_t3330,_t3342,_t3354];
      femData:MeshPos _t3358#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2E0D,_t3274,_t3356,_t327F);
      goto JOIN335B
    JOIN335B:  preds = [ASSIGN3359,ASSIGN33AC]
      femData:MeshPos nmp2ED6#3 = phi(_t3358,_t335A)
      bool _t335C#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp2ED6);
      bool _t335E#1 = BNot(_t335C);
      if _t335E then goto ASSIGN3362 else goto ASSIGN336A
    ASSIGN3362:  preds = [COND3360]
      bool _t3361#1 = true;
      goto JOIN3365
    JOIN3365:  preds = [ASSIGN3362,JOIN336F]
      bool _t3363#1 = phi(_t3361,_t3364)
      if _t3363 then goto RETURN(nmp2ED6)3367 else goto JOIN3368
    RETURN(nmp2ED6)3367:  preds = [COND3366]
      return nmp2ED6
      goto JOIN3368
    JOIN3368:  preds = [*RETURN(nmp2ED6)3367,COND3366]
      goto JOIN2ED9
    ASSIGN336A:  preds = [COND3360]
      bool _t3369#1 = LT<real>(eTime310F,_t2F6D);
      if _t3369 then goto ASSIGN336D else goto ASSIGN3371
    ASSIGN336D:  preds = [COND336B]
      bool _t336C#1 = true;
      goto JOIN336F
    JOIN336F:  preds = [ASSIGN336D,JOIN3376]
      bool _t3364#1 = phi(_t336C,_t336E)
      goto JOIN3365
    ASSIGN3371:  preds = [COND336B]
      bool _t3370#1 = GT<real>(eTime310F,time2E05);
      if _t3370 then goto ASSIGN3374 else goto ASSIGN3377
    ASSIGN3374:  preds = [COND3372]
      bool _t3373#1 = true;
      goto JOIN3376
    JOIN3376:  preds = [ASSIGN3374,ASSIGN3377]
      bool _t336E#1 = phi(_t3373,_t3375)
      goto JOIN336F
    ASSIGN3377:  preds = [COND3372]
      bool _t3375#1 = LT<real>(time2ED8,timeEps2DFC);
      goto JOIN3376
    ASSIGN3379:  preds = [COND3278]
      real _t3378#1 = TensorIndex<tensor[2],[0]>(_t3257);
      tensor[3] op1_e3_l_223388#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t3378,time2E1B,op1_e3_l_202F32);
      tensor[3] _t337A#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (_t3116,op1_e3_l_223388);
      femData:MeshPos _t335A#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t2E0D,_t337A);
      goto JOIN335B
    ASSIGN33AE:  preds = [COND3250]
      bool _t33AD#1 = EQ<real>(faceTime2EE1,faceTime324A);
      if _t33AD then goto ASSIGN33B1 else goto ASSIGN33B5
    ASSIGN33B1:  preds = [COND33AF]
      tensor[2] _t33B0#1 = <tensor[2]>[_t2FF5,_t2FF5];
      goto JOIN33B3
    JOIN33B3:  preds = [ASSIGN33B1,ASSIGN33B6]
      tensor[2] _t3258#1 = phi(_t33B0,_t33B2)
      goto JOIN3259
    ASSIGN33B5:  preds = [COND33AF]
      real _t33B4#1 = IntToReal(_t2EDB);
      tensor[2] _t33B2#1 = <tensor[2]>[faceTime324A,_t33B4];
      goto JOIN33B3
    ASSIGN33B8:  preds = [COND3105]
      bool _t33B7#1 = EQ<real>(faceTime2EE1,faceTime30FF);
      if _t33B7 then goto ASSIGN33BB else goto ASSIGN33BF
    ASSIGN33BB:  preds = [COND33B9]
      tensor[2] _t33BA#1 = <tensor[2]>[_t2FF5,_t2FF5];
      goto JOIN33BD
    JOIN33BD:  preds = [ASSIGN33BB,ASSIGN33C0]
      tensor[2] _t310D#1 = phi(_t33BA,_t33BC)
      goto JOIN310E
    ASSIGN33BF:  preds = [COND33B9]
      real _t33BE#1 = IntToReal(_t2EDB);
      tensor[2] _t33BC#1 = <tensor[2]>[faceTime30FF,_t33BE];
      goto JOIN33BD
    ASSIGN33C2:  preds = [FOREACH2E0C]
      string _t33C1#1 = "Took stupid way out!\n";
      Print<[string]>(_t33C1);
      tensor[3] _t33C4#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x2DF5);
      int _t33C6#2 = ExtractFemItem<int,CellIndex(MeshPos)>(x2DF5);
      femData:Mesh _t33C8#3 = ExtractFem<femData:Mesh,femData:MeshPos>(x2DF5);
      int[4] femIndicies33CD#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t33C8,_t33C6);
      tensor[4,3] femDofs33CE#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t33C8,femIndicies33CD);
      tensor[4] basisResult33CF#1 = EvaluateBasis<BasisArray(4)>(_t33C4);
      tensor[3] probe_l_533CB#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t33C6,_t33C8,_t33C4,femDofs33CE,basisResult33CF,_t33C4);
      tensor[3] _t33CA#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (dPos2DF6,probe_l_533CB);
      femData:MeshPos cmp33D6#1 = findPos2C4C (meshData2DF8,_t33CA);
      return cmp33D6
}
## input initialization
  ENTRY2C03:  preds = []
    int timeSteps2C04#1 = 32;
    globals.timeSteps2BFB = timeSteps2C04;
    real timeEps2C07#1 = 0.1e-6;
    globals.timeEps2BFC = timeEps2C07;
    real stepSize2C0A#1 = 0.1e-1;
    globals.stepSize2BFE = stepSize2C0A;
    int stepMax2C0D#1 = 100;
    globals.stepMax2BFF = stepMax2C0D;
    return
## global-variable initialization
  ENTRY2C11:  preds = []
    femData:Mesh meshData2C12#3 = globals.meshData2BF8;
    femData:Space 0space03AB_intermedateGlobal2C14#1 = globals.0space03AB_intermedateGlobal2BF9;
    femData:FemFunc 0data03AD_intermedateGlobal2C16#1 = globals.0data03AD_intermedateGlobal2BFA;
    int _t2C18#1 = 0;
    int _t2C1A#1 = 1;
    int _t2C1C#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData2C12);
    int _t2C1E#1 = ISub(_t2C1C,_t2C1A);
    int[] _t2C20#1 = Range(_t2C18,_t2C1E);
    femData:MeshCell[] _t2C22#1 = <femData:MeshCell[]>{};
  FOREACH2C25:  preds = [ASSIGN2C23,NEXT2C2B]
    foreach (_t2C24 in _t2C20) on exit goto ASSIGN2C2D
      femData:MeshCell[] _t2C29#1 = phi(_t2C22,_t2C28)
    femData:MeshCell _t2C26#1 = LoadFem<femData:MeshCell>(meshData2C12,_t2C24);
    femData:MeshCell[] _t2C28#1 = Append<femData:MeshCell>(_t2C29,_t2C26);
    goto FOREACH2C25
  ASSIGN2C2D:  preds = [FOREACH2C25]
    femData:Space space2C2C#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal2C14,meshData2C12);
    femData:FemFunc data2C2E#2 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal2C16,space2C2C);
    globals.data2C00 = data2C2E;
    femData:Space _t2C31#2 = ExtractFem<femData:Space,femData:FemFunc>(data2C2E);
    femData:Mesh _t2C33#1 = ExtractFem<femData:Mesh,femData:Space>(_t2C31);
    globals._t2C01 = _t2C33;
    globals._tX2C02 = _t2C31;
    return
## strand
  strand gg (tensor[3] startPos2C38#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY2C3F:  preds = []
        femData:Mesh meshData2C40#1 = globals.meshData2BF8;
        tensor[3][1] _t2C42#1 = <tensor[3][1]>{startPos2C38};
        tensor[3][] _t2C44#1 = MkDynamic<tensor[3],1>(_t2C42);
        tensor[3][1] _t2C46#1 = <tensor[3][1]>{startPos2C38};
        tensor[3][] _t2C48#1 = MkDynamic<tensor[3],1>(_t2C46);
        int step2C4A#1 = 0;
        femData:MeshPos cPos2D7C#1 = findPos2C4C (meshData2C40,startPos2C38);
        self.stream = _t2C44;
        self.newStream = _t2C48;
        self.step = step2C4A;
        self.cPos = cPos2D7C;
        self.altCPos = startPos2C38;
        self.startPos = startPos2C38;
        return
    end state init
    method update
        ENTRY2D85:  preds = []
          femData:Mesh _t2D86#4 = globals._t2C01;
          femData:Space _t2D88#4 = globals._tX2C02;
          femData:FemFunc data2D8A#6 = globals.data2C00;
          femData:Mesh meshData2D8C#2 = globals.meshData2BF8;
          real stepSize2D90#4 = globals.stepSize2BFE;
          int stepMax2D92#1 = globals.stepMax2BFF;
          tensor[3][] stream2D94#2 = self.stream;
          tensor[3][] newStream2D96#1 = self.newStream;
          int step2D98#3 = self.step;
          femData:MeshPos cPos2D9A#6 = self.cPos;
          tensor[3] altCPos2D9C#6 = self.altCPos;
          tensor[3] startPos2D9E#1 = self.startPos;
          bool _t2DA0#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2D9A);
          bool _t2DA2#1 = BNot(_t2DA0);
          if _t2DA2 then goto ASSIGN2DA6 else goto ASSIGN34DD
        ASSIGN2DA6:  preds = [COND2DA4]
          bool _t2DA5#1 = true;
          goto JOIN2DA9
        JOIN2DA9:  preds = [ASSIGN2DA6,JOIN34E6]
          bool _t2DA7#1 = phi(_t2DA5,_t2DA8)
          if _t2DA7 then goto STABILIZE2DAB else goto JOIN2DAC
        STABILIZE2DAB:  preds = [COND2DAA]
          stabilize
          goto JOIN2DAC
        JOIN2DAC:  preds = [*STABILIZE2DAB,COND2DAA]
          tensor[3] _t2DAD#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2D9A);
          int _t2DAF#4 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2D9A);
          femData:Mesh _t2DB1#5 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2D9A);
          int[4] femIndicies2DB8#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2DB1,_t2DAF);
          tensor[4,3] femDofs2DB9#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2DB1,femIndicies2DB8);
          tensor[4] basisResult2DBA#1 = EvaluateBasis<BasisArray(4)>(_t2DAD);
          tensor[3] probe_l_52DB4#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t2DAF,_t2DB1,_t2DAD,femDofs2DB9,basisResult2DBA,_t2DAD);
          tensor[3] op1_e3_l_72DB5#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (altCPos2D9C,probe_l_52DB4);
          real op1_e3_l_92DB6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_72DB5,op1_e3_l_72DB5);
          real _t2DB3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_92DB6);
          real _t2DC3#1 = 0.1e-5;
          bool _t2DC5#1 = GT<real>(_t2DB3,_t2DC3);
          if _t2DC5 then goto ASSIGN2DC9 else goto ASSIGN34D6
        ASSIGN2DC9:  preds = [COND2DC7]
          string _t2DC8#1 = "Error in tracing: At step:";
          string _t2DCA#1 = " with particle:";
          string _t2DCC#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t2DC8,step2D98,_t2DCA,startPos2D9E,_t2DCC);
          goto JOIN2DCF
        JOIN2DCF:  preds = [MASSIGN2DCE,MASSIGN34DB]
          real _t2DD0#2 = 0.5e0;
          if _t2DA0 then goto ASSIGN2DD4 else goto ASSIGN34D4
        ASSIGN2DD4:  preds = [COND2DD2]
          femData:MeshCell c2DD3#1 = LoadFem<femData:MeshCell>(_t2DB1,_t2DAF);
          int _t2DD5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2DD3);
          femData:FuncCell _t2DD7#2 = LoadFem<femData:FuncCell>(data2D8A,_t2DD5);
          femData:FemFunc _t2DD9#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2DD7);
          femData:Space _t2DDB#2 = ExtractFem<femData:Space,femData:FemFunc>(_t2DD9);
          int _t2DDD#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2DD7);
          int[10] femIndicies2DE4#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2DDB,_t2DDD);
          tensor[10,3] femDofs2DE5#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t2DD9,femIndicies2DE4);
          tensor[10] basisResult2DE6#1 = EvaluateBasis<BasisArray(10)>(_t2DAD);
          tensor[3] probe_l_82DE0#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2DDD,_t2DDB,_t2DD9,_t2DAD,femDofs2DE5,basisResult2DE6,_t2DAD);
          real op1_e3_l_112DE1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_82DE0,probe_l_82DE0);
          real op1_e3_l_122DE2#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_112DE1);
          tensor[3] _t2DDF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_82DE0,op1_e3_l_122DE2);
          goto JOIN2DF1
        JOIN2DF1:  preds = [ASSIGN2DEE,ASSIGN34D4]
          tensor[3] _t2DEF#1 = phi(_t2DDF,_t2DF0)
          tensor[3] up12DF2#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2DD0,stepSize2D90,_t2DEF);
          femData:MeshPos intermed33D9#4 = posMove2DF4 (cPos2D9A,up12DF2);
          femData:MeshPos callFindPos33E6#2 = findPos2C4C (_t2D86,altCPos2D9C);
          int intPos33E7#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos33E6);
          tensor[3] refPos33E8#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos33E6);
          int[10] femIndicies33ED#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos33E7);
          tensor[10,3] femDofs33EE#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies33ED);
          tensor[10] basisResult33EF#1 = EvaluateBasis<BasisArray(10)>(refPos33E8);
          tensor[3] compositionl33DD#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,altCPos2D9C,femDofs33EE,basisResult33EF,refPos33E8);
          real op1_e3_l_2033E2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl33DD,compositionl33DD);
          tensor[3] op1_e3_l_2133E3#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2DD0,stepSize2D90,compositionl33DD);
          real op1_e3_l_2233E4#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2033E2);
          tensor[3] op1_e3_l_2333E5#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2133E3,op1_e3_l_2233E4);
          tensor[3] altIntermed33DB#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2D9C,op1_e3_l_2333E5);
          bool _t3421#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed33D9);
          bool _t3423#1 = BNot(_t3421);
          if _t3423 then goto ASSIGN3427 else goto ASSIGN34D0
        ASSIGN3427:  preds = [COND3425]
          bool _t3426#1 = true;
          goto JOIN342A
        JOIN342A:  preds = [ASSIGN3427,ASSIGN34D3]
          bool _t3428#1 = phi(_t3426,_t3429)
          if _t3428 then goto STABILIZE342C else goto JOIN342D
        STABILIZE342C:  preds = [COND342B]
          stabilize
          goto JOIN342D
        JOIN342D:  preds = [*STABILIZE342C,COND342B]
          if _t3421 then goto ASSIGN3430 else goto ASSIGN34CE
        ASSIGN3430:  preds = [COND342E]
          femData:Mesh _t342F#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed33D9);
          int _t3431#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed33D9);
          femData:MeshCell c3433#1 = LoadFem<femData:MeshCell>(_t342F,_t3431);
          tensor[3] ref3435#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed33D9);
          int _t3437#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3433);
          femData:FuncCell _t3439#2 = LoadFem<femData:FuncCell>(data2D8A,_t3437);
          femData:FemFunc _t343B#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3439);
          femData:Space _t343D#2 = ExtractFem<femData:Space,femData:FemFunc>(_t343B);
          int _t343F#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3439);
          int[10] femIndicies3446#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t343D,_t343F);
          tensor[10,3] femDofs3447#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t343B,femIndicies3446);
          tensor[10] basisResult3448#1 = EvaluateBasis<BasisArray(10)>(ref3435);
          tensor[3] probe_l_83442#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t343F,_t343D,_t343B,ref3435,femDofs3447,basisResult3448,ref3435);
          real op1_e3_l_113443#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_83442,probe_l_83442);
          real op1_e3_l_123444#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_113443);
          tensor[3] _t3441#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_83442,op1_e3_l_123444);
          goto JOIN3453
        JOIN3453:  preds = [ASSIGN3450,ASSIGN34CE]
          tensor[3] _t3451#1 = phi(_t3441,_t3452)
          tensor[3] up23454#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2D90,_t3451);
          femData:MeshPos cPos3456#6 = posMove2DF4 (cPos2D9A,up23454);
          femData:MeshPos callFindPos3463#2 = findPos2C4C (_t2D86,altIntermed33DB);
          int intPos3464#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3463);
          tensor[3] refPos3465#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3463);
          int[10] femIndicies346A#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos3464);
          tensor[10,3] femDofs346B#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies346A);
          tensor[10] basisResult346C#1 = EvaluateBasis<BasisArray(10)>(refPos3465);
          tensor[3] compositionl345A#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,altIntermed33DB,femDofs346B,basisResult346C,refPos3465);
          real op1_e3_l_19345F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl345A,compositionl345A);
          tensor[3] op1_e3_l_203460#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2D90,compositionl345A);
          real op1_e3_l_213461#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_19345F);
          tensor[3] op1_e3_l_223462#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_203460,op1_e3_l_213461);
          tensor[3] altCPos3458#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2D9C,op1_e3_l_223462);
          bool _t349E#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos3456);
          bool _t34A0#1 = BNot(_t349E);
          if _t34A0 then goto MASSIGN34A3 else goto JOIN34A7
        MASSIGN34A3:  preds = [COND34A2]
          Print<[tensor[3][]]>(stream2D94);
          self.cPos = cPos3456;
          self.altCPos = altCPos3458;
          stabilize
          goto JOIN34A7
        JOIN34A7:  preds = [*STABILIZE34A6,COND34A2]
          tensor[3] _t34A8#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos3456);
          int _t34AA#2 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos3456);
          femData:Mesh _t34AC#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos3456);
          int[4] femIndicies34B0#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t34AC,_t34AA);
          tensor[4,3] femDofs34B1#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t34AC,femIndicies34B0);
          tensor[4] basisResult34B2#1 = EvaluateBasis<BasisArray(4)>(_t34A8);
          tensor[3] _t34AE#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t34AA,_t34AC,_t34AC,_t34A8,femDofs34B1,basisResult34B2,_t34A8);
          tensor[3][1] _t34B8#1 = <tensor[3][1]>{_t34AE};
          tensor[3][] _t34BA#1 = MkDynamic<tensor[3],1>(_t34B8);
          tensor[3][] stream34BC#1 = Concat<tensor[3]>(stream2D94,_t34BA);
          tensor[3][1] _t34BE#1 = <tensor[3][1]>{altCPos3458};
          tensor[3][] _t34C0#1 = MkDynamic<tensor[3],1>(_t34BE);
          tensor[3][] newStream34C2#1 = Concat<tensor[3]>(newStream2D96,_t34C0);
          int _t34C4#1 = 1;
          int step34C6#1 = IAdd(step2D98,_t34C4);
          self.stream = stream34BC;
          self.newStream = newStream34C2;
          self.step = step34C6;
          self.cPos = cPos3456;
          self.altCPos = altCPos3458;
          active
        ASSIGN34CE:  preds = [COND342E]
          tensor[3] _t3452#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN3453
        ASSIGN34D0:  preds = [COND3425]
          femData:MeshPos _t34CF#1 = findPos2C4C (meshData2D8C,altIntermed33DB);
          bool _t34D1#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t34CF);
          bool _t3429#1 = BNot(_t34D1);
          goto JOIN342A
        ASSIGN34D4:  preds = [COND2DD2]
          tensor[3] _t2DF0#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2DF1
        ASSIGN34D6:  preds = [COND2DC7]
          string _t34D5#1 = "fine in cell:";
          femData:MeshCell _t34D7#1 = LoadFem<femData:MeshCell>(_t2DB1,_t2DAF);
          string _t34D9#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t34D5,_t34D7,_t34D9);
          goto JOIN2DCF
        ASSIGN34DD:  preds = [COND2DA4]
          femData:MeshPos _t34DC#1 = findPos2C4C (meshData2D8C,altCPos2D9C);
          bool _t34DE#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t34DC);
          bool _t34E0#1 = BNot(_t34DE);
          if _t34E0 then goto ASSIGN34E4 else goto ASSIGN34E7
        ASSIGN34E4:  preds = [COND34E2]
          bool _t34E3#1 = true;
          goto JOIN34E6
        JOIN34E6:  preds = [ASSIGN34E4,ASSIGN34E7]
          bool _t2DA8#1 = phi(_t34E3,_t34E5)
          goto JOIN2DA9
        ASSIGN34E7:  preds = [COND34E2]
          bool _t34E5#1 = EQ<int>(step2D98,stepMax2D92);
          goto JOIN34E6
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY34E8:  preds = []
      tensor[3][] startPoints34E9#1 = globals.startPoints2BFD;
    FOREACH34EC:  preds = [ASSIGN34EA,NEXT34EE]
      foreach (x34EB in startPoints34E9) on exit goto RETURN34EF
      new gg(x34EB);
      goto FOREACH34EC
    RETURN34EF:  preds = [FOREACH34EC]
      return
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData2BF8 (meshData) = <no-default>
  input 0space03AB_intermedateGlobal2BF9 (space) = <no-default>
  input 0data03AD_intermedateGlobal2BFA (data) = <no-default>
  input timeSteps2BFB (timeSteps) = <default>
  input timeEps2BFC (timeEps) = <default>
  input startPoints2BFD (startPoints) = <no-default>
  input stepSize2BFE (stepSize) = <default>
  input stepMax2BFF (stepMax) = <default>
  global femData:FemFunc data2C00
  global femData:Mesh _t2C01
  global femData:Space _tX2C02
## functions
  function femData:MeshPos findPos2C4C (femData:Mesh mesh2C4D#11, tensor[3] pos2C4E#4) {
    ENTRY2C4F:  preds = []
      real _t2C50#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn2C52#10 = <tensor[3]>[_t2C50,_t2C50,_t2C50];
      int newtonInt2C54#1 = 0;
      int[] yayCells2C56#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh2C4D,pos2C4E);
    FOREACH2C59:  preds = [ASSIGN2C57,NEXT2D73]
      foreach (cellItter2C58 in yayCells2C56) on exit goto ASSIGN2D75
      int _t2C5A#1 = 16;
      int[] _t2C5C#1 = Range(newtonInt2C54,_t2C5A);
    FOREACH2C5F:  preds = [ASSIGN2C5D,NEXT2D72]
      foreach (newtonItter2C5E in _t2C5C) on exit goto NEXT2D73
        tensor[3] xn2C61#6 = phi(xn2C52,xn2C60)
      int[4] femIndicies2C72#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh2C4D,cellItter2C58);
      tensor[4,3] femDofs2C73#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh2C4D,femIndicies2C72);
      tensor[3,4] basisResult2C74#4 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3,3] probe_l_102C62#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3,3,3] op1_e3_l_122C63#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_102C62);
      tensor[3,3,3] op1_e3_l_132C64#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_102C62,op1_e3_l_122C63);
      tensor[3] probe_l_142C65#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3] probe_l_152C66#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3] probe_l_162C67#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3,3] op1_e3_l_172C68#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_162C67);
      tensor[3] op1_e3_l_182C69#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_152C66,op1_e3_l_172C68);
      real op1_e3_l_192C6A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_142C65,op1_e3_l_182C69);
      tensor[3,3] op1_e3_l_202C6B#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_132C64);
      real op1_e3_l_212C6C#1 = λ(T0[])<(2 * T0)> (op1_e3_l_192C6A);
      tensor[4] basisResult2C7C#2 = EvaluateBasis<BasisArray(4)>(xn2C61);
      tensor[3] probe_l_222C6D#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn2C61,cellItter2C58,mesh2C4D,femDofs2C73,basisResult2C7C,xn2C61);
      tensor[3,3] op1_e3_l_232C6E#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_202C6B,op1_e3_l_212C6C);
      tensor[3] op1_e3_l_242C6F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos2C4E,probe_l_222C6D);
      tensor[3] op1_e3_l_252C70#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_232C6E,op1_e3_l_242C6F);
      tensor[3] xn2C60#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn2C61,op1_e3_l_252C70);
      real _t2C99#2 = 0.1e-7;
      real _t2C9B#1 = λ(T0[],T1[])<(T0 * T1)> (_t2C99,_t2C99);
      tensor[3] probe_l_302CA9#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C61,femDofs2C73,basisResult2C7C,xn2C61);
      tensor[3] op1_e3_l_322CAB#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos2C4E,probe_l_302CA9);
      tensor[3] op1_e3_l_482CAC#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_232C6E,op1_e3_l_322CAB);
      real _t2C9D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_482CAC,op1_e3_l_482CAC);
      bool _t2CD5#1 = GTE<real>(_t2C9B,_t2C9D);
      if _t2CD5 then goto ASSIGN2CD9 else goto JOIN2D71
    ASSIGN2CD9:  preds = [COND2CD7]
      real _t2CD8#4 = 0.1e1;
      real _t2CDA#4 = 0.1e-8;
      real _t2CDC#1 = λ(T0[],T1[])<(T0 + T1)> (_t2CD8,_t2CDA);
      tensor[3] _t2CDE#1 = <tensor[3]>[_t2CD8,_t2CD8,_t2CD8];
      real _t2CE0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2CDE,xn2C60);
      bool _t2D1A#1 = GT<real>(_t2CDC,_t2CE0);
      tensor[3] _t2D1C#1 = <tensor[3]>[_t2CDA,_t2CDA,_t2CDA];
      tensor[3] _t2D1E#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2D1C,xn2C60);
      real _t2D58#1 = TensorIndex<tensor[3],[0]>(_t2D1E);
      real _t2D5A#3 = -0.e0;
      bool _t2D5C#1 = GT<real>(_t2D58,_t2D5A);
      real _t2D5E#1 = TensorIndex<tensor[3],[1]>(_t2D1E);
      bool _t2D60#1 = GT<real>(_t2D5E,_t2D5A);
      real _t2D62#1 = TensorIndex<tensor[3],[2]>(_t2D1E);
      bool _t2D64#1 = GT<real>(_t2D62,_t2D5A);
      bool _t2D66#1 = BAnd(_t2D60,_t2D64);
      bool _t2D68#1 = BAnd(_t2D5C,_t2D66);
      bool _t2D6A#1 = BAnd(_t2D1A,_t2D68);
      if _t2D6A then goto ASSIGN2D6E else goto JOIN2D70
    ASSIGN2D6E:  preds = [COND2D6C]
      femData:MeshPos _t2D6D#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh2C4D,cellItter2C58,xn2C60,pos2C4E);
      return _t2D6D
      goto JOIN2D70
    JOIN2D70:  preds = [*RETURN(_t2D6D)2D6F,COND2D6C]
      goto JOIN2D71
    JOIN2D71:  preds = [JOIN2D70,COND2CD7]
      goto FOREACH2C5F
    NEXT2D73:  preds = [FOREACH2C5F]
      goto FOREACH2C59
    ASSIGN2D75:  preds = [FOREACH2C59]
      string _t2D74#1 = "Bad end 2";
      string _t2D76#1 = "\n";
      Print<[string,string]>(_t2D74,_t2D76);
      femData:MeshPos _t2D79#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2C4D);
      return _t2D79
}
  function int[2] nextCell43260 (int faceIdx3261#1, int cell3262#1, femData:Mesh mesh3263#1) {
    ENTRY3264:  preds = []
      int _t3265#1 = 8;
      int _t3267#1 = IMul(cell3262,_t3265);
      int _t3269#1 = 2;
      int _t326B#1 = IMul(faceIdx3261,_t3269);
      int _t326D#1 = IAdd(_t3267,_t326B);
      int[2] _t326F#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh3263,_t326D);
      return _t326F
}
  function femData:MeshPos posMove2DF4 (femData:MeshPos x2DF5#6, tensor[3] dPos2DF6#3) {
    ENTRY2DF7:  preds = []
      femData:Mesh meshData2DF8#1 = globals.meshData2BF8;
      int timeSteps2DFA#1 = globals.timeSteps2BFB;
      real timeEps2DFC#1 = globals.timeEps2BFC;
      bool _t2DFE#1 = ExtractFemItem<bool,Valid(MeshPos)>(x2DF5);
      bool _t2E00#1 = BNot(_t2DFE);
      if _t2E00 then goto RETURN(x2DF5)2E03 else goto JOIN2E04
    RETURN(x2DF5)2E03:  preds = [COND2E02]
      return x2DF5
      goto JOIN2E04
    JOIN2E04:  preds = [*RETURN(x2DF5)2E03,COND2E02]
      real time2E05#23 = 0.1e1;
      int _t2E07#6 = 0;
      int[] _t2E09#1 = Range(_t2E07,timeSteps2DFA);
    FOREACH2E0C:  preds = [ASSIGN2E0A,NEXT2EDA]
      foreach (i2E0B in _t2E09) on exit goto ASSIGN33C2
        femData:MeshPos cmp2E0E#6 = phi(x2DF5,cmp2ED5)
        real time2E1B#13 = phi(time2E05,time2ED7)
      femData:Mesh _t2E0D#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp2E0E);
      int _t2E10#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp2E0E);
      femData:MeshCell _t2E12#2 = LoadFem<femData:MeshCell>(_t2E0D,_t2E10);
      femData:Mesh _t2E14#11 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2E12);
      int _t2E16#10 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2E12);
      tensor[3] _t2E18#23 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp2E0E);
      int[4] femIndicies2E2B#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs2E2C#8 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies2E2B);
      tensor[3,4] basisResult2E2D#8 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_72E1C#2 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3,3] op1_e3_l_92E1D#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72E1C);
      tensor[3,3,3] op1_e3_l_102E1E#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72E1C,op1_e3_l_92E1D);
      tensor[3] probe_l_112E1F#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_122E20#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_132E21#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3] op1_e3_l_142E22#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_132E21);
      tensor[3] op1_e3_l_152E23#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_122E20,op1_e3_l_142E22);
      real op1_e3_l_162E24#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_112E1F,op1_e3_l_152E23);
      tensor[3,3] op1_e3_l_172E25#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_102E1E);
      real op1_e3_l_182E26#1 = λ(T0[])<(2 * T0)> (op1_e3_l_162E24);
      tensor[3,3] op1_e3_l_192E27#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_172E25,op1_e3_l_182E26);
      tensor[3] op1_e3_l_202E28#5 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_192E27);
      tensor[3] op1_e3_l_212E29#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (time2E1B,op1_e3_l_202E28);
      tensor[3] newPos2E1A#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2E18,op1_e3_l_212E29);
      real _t2E4D#4 = 0.1e-8;
      real _t2E4F#1 = λ(T0[],T1[])<(T0 + T1)> (time2E05,_t2E4D);
      tensor[3] _t2E51#1 = <tensor[3]>[time2E05,time2E05,time2E05];
      real _t2E53#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2E51,newPos2E1A);
      bool _t2E87#1 = GT<real>(_t2E4F,_t2E53);
      tensor[3] _t2E89#1 = <tensor[3]>[_t2E4D,_t2E4D,_t2E4D];
      tensor[3] _t2E8B#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (_t2E89,_t2E18,op1_e3_l_212E29);
      real _t2EBD#1 = TensorIndex<tensor[3],[0]>(_t2E8B);
      real _t2EBF#3 = -0.e0;
      bool _t2EC1#1 = GT<real>(_t2EBD,_t2EBF);
      real _t2EC3#1 = TensorIndex<tensor[3],[1]>(_t2E8B);
      bool _t2EC5#1 = GT<real>(_t2EC3,_t2EBF);
      real _t2EC7#1 = TensorIndex<tensor[3],[2]>(_t2E8B);
      bool _t2EC9#1 = GT<real>(_t2EC7,_t2EBF);
      bool _t2ECB#1 = BAnd(_t2EC5,_t2EC9);
      bool _t2ECD#1 = BAnd(_t2EC1,_t2ECB);
      bool _t2ECF#1 = BAnd(_t2E87,_t2ECD);
      if _t2ECF then goto ASSIGN2ED3 else goto ASSIGN2EDC
    ASSIGN2ED3:  preds = [COND2ED1]
      femData:MeshPos nmp2ED2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2E14,_t2E16,newPos2E1A);
      return nmp2ED2
      goto JOIN2ED9
    JOIN2ED9:  preds = [*RETURN(nmp2ED2)2ED4,JOIN3368]
      femData:MeshPos cmp2ED5#1 = phi(nmp2ED6)
      real time2ED7#1 = phi(time2ED8)
      goto FOREACH2E0C
    ASSIGN2EDC:  preds = [COND2ED1]
      int _t2EDB#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp2E0E);
      real time2EDD#6 = +inf;
      int face2EDF#7 = -1;
      real faceTime2EE1#6 = -inf;
      real _t2EE3#15 = 0.57735026919e0;
      tensor[3] _t2EE5#4 = <tensor[3]>[_t2EE3,_t2EE3,_t2EE3];
      real op1_e3_l_102EE8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,_t2E18);
      real op1_e3_l_252EF6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,op1_e3_l_202E28);
      real op1_e3_l_262EF7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2EE3,op1_e3_l_102EE8);
      real op1_e3_l_272EF8#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_252EF6);
      real _t2EE7#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_262EF7,op1_e3_l_272EF8);
      real _t2F1F#8 = -0.1e-15;
      bool _t2F21#1 = GTE<real>(_t2EE7,_t2F1F);
      bool _t2F23#1 = GT<real>(time2EDD,_t2EE7);
      tensor[3,3] probe_l_72F26#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3,3] op1_e3_l_92F27#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72F26);
      tensor[3,3,3] op1_e3_l_102F28#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72F26,op1_e3_l_92F27);
      tensor[3] probe_l_112F29#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_122F2A#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_132F2B#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3] op1_e3_l_142F2C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_132F2B);
      tensor[3] op1_e3_l_152F2D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_122F2A,op1_e3_l_142F2C);
      real op1_e3_l_162F2E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_112F29,op1_e3_l_152F2D);
      tensor[3,3] op1_e3_l_172F2F#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_102F28);
      real op1_e3_l_182F30#1 = λ(T0[])<(2 * T0)> (op1_e3_l_162F2E);
      tensor[3,3] op1_e3_l_192F31#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_172F2F,op1_e3_l_182F30);
      tensor[3] op1_e3_l_202F32#6 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_192F31);
      real op1_e3_l_212F33#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,op1_e3_l_202F32);
      real op1_e3_l_222F34#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_212F33);
      real _t2F25#1 = λ(T0[])<Abs(T0)> (op1_e3_l_222F34);
      real _t2F59#4 = 0.1e-20;
      bool _t2F5B#2 = GTE<real>(_t2F25,_t2F59);
      bool _t2F5D#1 = BAnd(_t2F23,_t2F5B);
      bool _t2F5F#1 = BAnd(_t2F21,_t2F5D);
      if _t2F5F then goto ASSIGN2F63 else goto JOIN2F6C
    ASSIGN2F63:  preds = [COND2F61]
      bool _t2F62#1 = NEQ<int>(_t2EDB,_t2E07);
      if _t2F62 then goto JOIN2F68 else goto JOIN2F68
    JOIN2F68:  preds = [COND2F64,COND2F64]
      real faceTime2F65#1 = phi(faceTime2EE1,_t2EE7)
      int face2F66#1 = phi(_t2E07,face2EDF)
      real time2F67#1 = phi(_t2EE7,time2EDD)
      goto JOIN2F6C
    JOIN2F6C:  preds = [JOIN2F68,COND2F61]
      real faceTime2F69#2 = phi(faceTime2F65,faceTime2EE1)
      int face2F6A#2 = phi(face2F66,face2EDF)
      real time2F6B#3 = phi(time2F67,time2EDD)
      real _t2F6D#50 = 0.e0;
      tensor[3] _t2F6F#4 = <tensor[3]>[time2E05,_t2F6D,_t2F6D];
      real op1_e3_l_102F72#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,_t2E18);
      real op1_e3_l_252F80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,op1_e3_l_202E28);
      real op1_e3_l_262F81#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_102F72);
      real op1_e3_l_272F82#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_252F80);
      real _t2F71#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_262F81,op1_e3_l_272F82);
      bool _t2FA9#1 = GTE<real>(_t2F71,_t2F1F);
      bool _t2FAB#1 = GT<real>(time2F6B,_t2F71);
      real op1_e3_l_212FBB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,op1_e3_l_202F32);
      real op1_e3_l_222FBC#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_212FBB);
      real _t2FAD#1 = λ(T0[])<Abs(T0)> (op1_e3_l_222FBC);
      bool _t2FE1#2 = GTE<real>(_t2FAD,_t2F59);
      bool _t2FE3#1 = BAnd(_t2FAB,_t2FE1);
      bool _t2FE5#1 = BAnd(_t2FA9,_t2FE3);
      if _t2FE5 then goto ASSIGN2FE9 else goto JOIN2FF4
    ASSIGN2FE9:  preds = [COND2FE7]
      int _t2FE8#2 = 1;
      bool _t2FEA#1 = NEQ<int>(_t2EDB,_t2FE8);
      if _t2FEA then goto JOIN2FF0 else goto JOIN2FF0
    JOIN2FF0:  preds = [COND2FEC,COND2FEC]
      real faceTime2FED#1 = phi(faceTime2F69,_t2F71)
      int face2FEE#1 = phi(_t2FE8,face2F6A)
      real time2FEF#1 = phi(_t2F71,time2F6B)
      goto JOIN2FF4
    JOIN2FF4:  preds = [JOIN2FF0,COND2FE7]
      real faceTime2FF1#2 = phi(faceTime2FED,faceTime2F69)
      int face2FF2#2 = phi(face2FEE,face2F6A)
      real time2FF3#3 = phi(time2FEF,time2F6B)
      real _t2FF5#14 = -0.1e1;
      tensor[3] _t2FF7#4 = <tensor[3]>[_t2F6D,_t2FF5,_t2F6D];
      real op1_e3_l_102FFA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,_t2E18);
      real op1_e3_l_253008#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,op1_e3_l_202E28);
      real op1_e3_l_263009#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_102FFA);
      real op1_e3_l_27300A#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_253008);
      real _t2FF9#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263009,op1_e3_l_27300A);
      bool _t3031#1 = GTE<real>(_t2FF9,_t2F1F);
      bool _t3033#1 = GT<real>(time2FF3,_t2FF9);
      real op1_e3_l_213043#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,op1_e3_l_202F32);
      real op1_e3_l_223044#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_213043);
      real _t3035#1 = λ(T0[])<Abs(T0)> (op1_e3_l_223044);
      bool _t3069#2 = GTE<real>(_t3035,_t2F59);
      bool _t306B#1 = BAnd(_t3033,_t3069);
      bool _t306D#1 = BAnd(_t3031,_t306B);
      if _t306D then goto ASSIGN3071 else goto JOIN307C
    ASSIGN3071:  preds = [COND306F]
      int _t3070#2 = 2;
      bool _t3072#1 = NEQ<int>(_t2EDB,_t3070);
      if _t3072 then goto JOIN3078 else goto JOIN3078
    JOIN3078:  preds = [COND3074,COND3074]
      real faceTime3075#1 = phi(faceTime2FF1,_t2FF9)
      int face3076#1 = phi(_t3070,face2FF2)
      real time3077#1 = phi(_t2FF9,time2FF3)
      goto JOIN307C
    JOIN307C:  preds = [JOIN3078,COND306F]
      real faceTime3079#2 = phi(faceTime3075,faceTime2FF1)
      int face307A#2 = phi(face3076,face2FF2)
      real time307B#3 = phi(time3077,time2FF3)
      tensor[3] _t307D#4 = <tensor[3]>[_t2F6D,_t2F6D,time2E05];
      real op1_e3_l_103080#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,_t2E18);
      real op1_e3_l_25308E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,op1_e3_l_202E28);
      real op1_e3_l_26308F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103080);
      real op1_e3_l_273090#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_25308E);
      real _t307F#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_26308F,op1_e3_l_273090);
      bool _t30B7#1 = GTE<real>(_t307F,_t2F1F);
      bool _t30B9#1 = GT<real>(time307B,_t307F);
      real op1_e3_l_2130C9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,op1_e3_l_202F32);
      real op1_e3_l_2230CA#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_2130C9);
      real _t30BB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_2230CA);
      bool _t30EF#2 = GTE<real>(_t30BB,_t2F59);
      bool _t30F1#1 = BAnd(_t30B9,_t30EF);
      bool _t30F3#1 = BAnd(_t30B7,_t30F1);
      if _t30F3 then goto ASSIGN30F7 else goto JOIN3102
    ASSIGN30F7:  preds = [COND30F5]
      int _t30F6#2 = 3;
      bool _t30F8#1 = NEQ<int>(_t2EDB,_t30F6);
      if _t30F8 then goto JOIN30FE else goto JOIN30FE
    JOIN30FE:  preds = [COND30FA,COND30FA]
      real faceTime30FB#1 = phi(faceTime3079,_t307F)
      int face30FC#1 = phi(_t30F6,face307A)
      real time30FD#1 = phi(_t307F,time307B)
      goto JOIN3102
    JOIN3102:  preds = [JOIN30FE,COND30F5]
      real faceTime30FF#2 = phi(faceTime30FB,faceTime3079)
      int face3100#2 = phi(face30FC,face307A)
      real time3101#1 = phi(time30FD,time307B)
      bool _t3103#1 = NEQ<int>(face3100,face2EDF);
      if _t3103 then goto ASSIGN3107 else goto ASSIGN33B8
    ASSIGN3107:  preds = [COND3105]
      real _t3106#1 = Max<real>(time3101,_t2F6D);
      real _t3108#1 = IntToReal(face3100);
      tensor[2] _t310A#1 = <tensor[2]>[_t3106,_t3108];
      goto JOIN310E
    JOIN310E:  preds = [ASSIGN310B,JOIN33BD]
      tensor[2] _t310C#1 = phi(_t310A,_t310D)
      real eTime310F#3 = TensorIndex<tensor[2],[0]>(_t310C);
      real op1_e3_l_33111#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,eTime310F);
      real time2ED8#2 = λ(T0[],T1[])<(T0) - (T1)> (time2E1B,op1_e3_l_33111);
      int _t3114#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp2E0E);
      tensor[3] _t3116#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp2E0E);
      real op1_e3_l_103119#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,_t3116);
      real op1_e3_l_263128#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2EE3,op1_e3_l_103119);
      real _t3118#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263128,op1_e3_l_222F34);
      bool _t3150#1 = GTE<real>(_t3118,_t2F1F);
      bool _t3152#1 = GT<real>(time2EDD,_t3118);
      bool _t3154#1 = BAnd(_t3152,_t2F5B);
      bool _t3156#1 = BAnd(_t3150,_t3154);
      if _t3156 then goto ASSIGN315A else goto JOIN3163
    ASSIGN315A:  preds = [COND3158]
      bool _t3159#1 = NEQ<int>(_t2EDB,_t2E07);
      if _t3159 then goto JOIN315F else goto JOIN315F
    JOIN315F:  preds = [COND315B,COND315B]
      real faceTime315C#1 = phi(faceTime2EE1,_t3118)
      int face315D#1 = phi(_t2E07,face2EDF)
      real time315E#1 = phi(_t3118,time2EDD)
      goto JOIN3163
    JOIN3163:  preds = [JOIN315F,COND3158]
      real faceTime3160#2 = phi(faceTime315C,faceTime2EE1)
      int face3161#2 = phi(face315D,face2EDF)
      real time3162#3 = phi(time315E,time2EDD)
      real op1_e3_l_103165#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,_t3116);
      real op1_e3_l_263174#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103165);
      real _t3164#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263174,op1_e3_l_222FBC);
      bool _t319C#1 = GTE<real>(_t3164,_t2F1F);
      bool _t319E#1 = GT<real>(time3162,_t3164);
      bool _t31A0#1 = BAnd(_t319E,_t2FE1);
      bool _t31A2#1 = BAnd(_t319C,_t31A0);
      if _t31A2 then goto ASSIGN31A6 else goto JOIN31B1
    ASSIGN31A6:  preds = [COND31A4]
      int _t31A5#2 = 1;
      bool _t31A7#1 = NEQ<int>(_t2EDB,_t31A5);
      if _t31A7 then goto JOIN31AD else goto JOIN31AD
    JOIN31AD:  preds = [COND31A9,COND31A9]
      real faceTime31AA#1 = phi(faceTime3160,_t3164)
      int face31AB#1 = phi(_t31A5,face3161)
      real time31AC#1 = phi(_t3164,time3162)
      goto JOIN31B1
    JOIN31B1:  preds = [JOIN31AD,COND31A4]
      real faceTime31AE#2 = phi(faceTime31AA,faceTime3160)
      int face31AF#2 = phi(face31AB,face3161)
      real time31B0#3 = phi(time31AC,time3162)
      real op1_e3_l_1031B3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,_t3116);
      real op1_e3_l_2631C2#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_1031B3);
      real _t31B2#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_2631C2,op1_e3_l_223044);
      bool _t31EA#1 = GTE<real>(_t31B2,_t2F1F);
      bool _t31EC#1 = GT<real>(time31B0,_t31B2);
      bool _t31EE#1 = BAnd(_t31EC,_t3069);
      bool _t31F0#1 = BAnd(_t31EA,_t31EE);
      if _t31F0 then goto ASSIGN31F4 else goto JOIN31FF
    ASSIGN31F4:  preds = [COND31F2]
      int _t31F3#2 = 2;
      bool _t31F5#1 = NEQ<int>(_t2EDB,_t31F3);
      if _t31F5 then goto JOIN31FB else goto JOIN31FB
    JOIN31FB:  preds = [COND31F7,COND31F7]
      real faceTime31F8#1 = phi(faceTime31AE,_t31B2)
      int face31F9#1 = phi(_t31F3,face31AF)
      real time31FA#1 = phi(_t31B2,time31B0)
      goto JOIN31FF
    JOIN31FF:  preds = [JOIN31FB,COND31F2]
      real faceTime31FC#2 = phi(faceTime31F8,faceTime31AE)
      int face31FD#2 = phi(face31F9,face31AF)
      real time31FE#3 = phi(time31FA,time31B0)
      real op1_e3_l_103201#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,_t3116);
      real op1_e3_l_263210#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103201);
      real _t3200#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263210,op1_e3_l_2230CA);
      bool _t3238#1 = GTE<real>(_t3200,_t2F1F);
      bool _t323A#1 = GT<real>(time31FE,_t3200);
      bool _t323C#1 = BAnd(_t323A,_t30EF);
      bool _t323E#1 = BAnd(_t3238,_t323C);
      if _t323E then goto ASSIGN3242 else goto JOIN324D
    ASSIGN3242:  preds = [COND3240]
      int _t3241#2 = 3;
      bool _t3243#1 = NEQ<int>(_t2EDB,_t3241);
      if _t3243 then goto JOIN3249 else goto JOIN3249
    JOIN3249:  preds = [COND3245,COND3245]
      real faceTime3246#1 = phi(faceTime31FC,_t3200)
      int face3247#1 = phi(_t3241,face31FD)
      real time3248#1 = phi(_t3200,time31FE)
      goto JOIN324D
    JOIN324D:  preds = [JOIN3249,COND3240]
      real faceTime324A#2 = phi(faceTime3246,faceTime31FC)
      int face324B#2 = phi(face3247,face31FD)
      real time324C#1 = phi(time3248,time31FE)
      bool _t324E#1 = NEQ<int>(face324B,face2EDF);
      if _t324E then goto ASSIGN3252 else goto ASSIGN33AE
    ASSIGN3252:  preds = [COND3250]
      real _t3251#1 = Max<real>(time324C,_t2F6D);
      real _t3253#1 = IntToReal(face324B);
      tensor[2] _t3255#1 = <tensor[2]>[_t3251,_t3253];
      goto JOIN3259
    JOIN3259:  preds = [ASSIGN3256,JOIN33B3]
      tensor[2] _t3257#3 = phi(_t3255,_t3258)
      real _t325A#1 = TensorIndex<tensor[2],[1]>(_t3257);
      real t325D#1 = Floor<1>(_t325A);
      int _t325C#6 = RealToInt<1>(t325D);
      int[2] _t3272#2 = nextCell43260 (_t325C,_t3114,_t2E0D);
      int _t3274#2 = Subscript<int[2]>(_t3272,_t2E07);
      bool _t3276#1 = NEQ<int>(face2EDF,_t3274);
      if _t3276 then goto ASSIGN327A else goto ASSIGN3379
    ASSIGN327A:  preds = [COND3278]
      string _t3279#1 = "face ";
      string _t327B#1 = " to ";
      int _t327D#1 = 1;
      int _t327F#6 = Subscript<int[2]>(_t3272,_t327D);
      string _t3281#2 = "\n";
      string _t3283#1 = "got: ";
      tensor[4] _t3285#7 = <tensor[4]>[time2E05,_t2F6D,_t2F6D,_t2F6D];
      tensor[4] _t3287#6 = <tensor[4]>[_t2F6D,time2E05,_t2F6D,_t2F6D];
      tensor[4] _t3289#7 = <tensor[4]>[_t2F6D,_t2F6D,time2E05,_t2F6D];
      real _t328B#1 = 0.971445146547e-16;
      tensor[4] _t328D#4 = <tensor[4]>[_t328B,_t2F6D,_t2F6D,time2E05];
      tensor[4,4] _t328F#4 = <tensor[4,4]>[_t3285,_t3287,_t3289,_t328D];
      real _t3291#7 = -0.57735026919e0;
      tensor[4] _t3293#2 = <tensor[4]>[_t2EE3,_t2EE3,_t2EE3,_t3291];
      real _t3295#4 = -0.333333333333e0;
      real _t3297#2 = 0.666666666667e0;
      real _t3299#2 = 0.333333333333e0;
      tensor[4] _t329B#3 = <tensor[4]>[_t3295,_t3297,_t3295,_t3299];
      tensor[4] _t329D#3 = <tensor[4]>[_t3295,_t3295,_t3297,_t3299];
      tensor[4,4] _t329F#4 = <tensor[4,4]>[_t3293,_t329B,_t329D,_t328D];
      tensor[4] _t32A1#1 = <tensor[4]>[_t3291,_t3291,_t3291,_t2EE3];
      tensor[4,4] _t32A3#4 = <tensor[4,4]>[_t329B,_t32A1,_t329D,_t328D];
      tensor[4,4] _t32A5#4 = <tensor[4,4]>[_t329B,_t329D,_t3293,_t328D];
      tensor[4,4][4] _t32A7#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4] _t32A9#1 = <tensor[4]>[_t2EE3,_t2FF5,_t2FF5,time2E05];
      tensor[4] _t32AB#1 = <tensor[4]>[_t2EE3,time2E05,_t2F6D,_t2F6D];
      tensor[4] _t32AD#1 = <tensor[4]>[_t2EE3,_t2F6D,time2E05,_t2F6D];
      tensor[4] _t32AF#10 = <tensor[4]>[_t2F6D,_t2F6D,_t2F6D,time2E05];
      tensor[4,4] _t32B1#4 = <tensor[4,4]>[_t32A9,_t32AB,_t32AD,_t32AF];
      tensor[4,4] _t32B3#12 = <tensor[4,4]>[_t3285,_t3287,_t3289,_t32AF];
      tensor[4] _t32B5#1 = <tensor[4]>[_t2FF5,_t2F6D,_t2F6D,_t2F6D];
      tensor[4,4] _t32B7#4 = <tensor[4,4]>[_t3287,_t32B5,_t3289,_t32AF];
      tensor[4,4] _t32B9#4 = <tensor[4,4]>[_t3287,_t3289,_t3285,_t32AF];
      tensor[4,4][4] _t32BB#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4] _t32BD#1 = <tensor[4]>[_t2FF5,_t3291,_t2FF5,time2E05];
      tensor[4] _t32BF#1 = <tensor[4]>[time2E05,_t3291,_t2F6D,_t2F6D];
      tensor[4] _t32C1#1 = <tensor[4]>[_t2F6D,_t3291,time2E05,_t2F6D];
      tensor[4,4] _t32C3#4 = <tensor[4,4]>[_t32BD,_t32BF,_t32C1,_t32AF];
      tensor[4] _t32C5#2 = <tensor[4]>[_t2F6D,_t2FF5,_t2F6D,_t2F6D];
      tensor[4,4] _t32C7#4 = <tensor[4,4]>[_t32C5,_t3285,_t3289,_t32AF];
      tensor[4,4] _t32C9#4 = <tensor[4,4]>[_t3285,_t3289,_t32C5,_t32AF];
      tensor[4,4][4] _t32CB#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4] _t32CD#1 = <tensor[4]>[_t2FF5,_t2FF5,_t2EE3,time2E05];
      tensor[4] _t32CF#1 = <tensor[4]>[time2E05,_t2F6D,_t2EE3,_t2F6D];
      tensor[4] _t32D1#1 = <tensor[4]>[_t2F6D,time2E05,_t2EE3,_t2F6D];
      tensor[4,4] _t32D3#4 = <tensor[4,4]>[_t32CD,_t32CF,_t32D1,_t32AF];
      tensor[4,4] _t32D5#4 = <tensor[4,4]>[_t3289,_t3285,_t3287,_t32AF];
      tensor[4] _t32D7#1 = <tensor[4]>[_t2F6D,_t2F6D,_t2FF5,_t2F6D];
      tensor[4,4] _t32D9#4 = <tensor[4,4]>[_t3285,_t32D7,_t3287,_t32AF];
      tensor[4,4][4] _t32DB#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t32DD#1 = <tensor[4,4][4][4]>{_t32A7,_t32BB,_t32CB,_t32DB};
      tensor[4,4][4] _t32DF#1 = Subscript<tensor[4,4][4][4]>(_t32DD,_t325C);
      tensor[4,4] _t32E1#1 = Subscript<tensor[4,4][4]>(_t32DF,_t327F);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t3279,_t325C,_t327B,_t327F,_t3281,_t3283,_t32E1,_t3281);
      tensor[4,4][4] _t32E4#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t32E6#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t32E8#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t32EA#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t32EC#1 = <tensor[4,4][4][4]>{_t32E4,_t32E6,_t32E8,_t32EA};
      tensor[4,4][4] _t32EE#1 = Subscript<tensor[4,4][4][4]>(_t32EC,_t325C);
      tensor[4,4] _t32F0#1 = Subscript<tensor[4,4][4]>(_t32EE,_t327F);
      real _t32F2#1 = TensorIndex<tensor[2],[0]>(_t3257);
      tensor[3] op1_e3_l_223302#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t32F2,time2E1B,op1_e3_l_202F32);
      tensor[3] _t32F4#3 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (_t3116,op1_e3_l_223302);
      real _t3326#1 = TensorIndex<tensor[3],[0]>(_t32F4);
      real _t3328#1 = TensorIndex<tensor[3],[1]>(_t32F4);
      real _t332A#1 = TensorIndex<tensor[3],[2]>(_t32F4);
      tensor[4] _t332C#3 = <tensor[4]>[_t3326,_t3328,_t332A,time2E05];
      tensor[4] _t332E#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t32F0,_t332C);
      real _t3330#1 = TensorIndex<tensor[4],[0]>(_t332E);
      tensor[4,4][4] _t3332#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t3334#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t3336#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t3338#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t333A#1 = <tensor[4,4][4][4]>{_t3332,_t3334,_t3336,_t3338};
      tensor[4,4][4] _t333C#1 = Subscript<tensor[4,4][4][4]>(_t333A,_t325C);
      tensor[4,4] _t333E#1 = Subscript<tensor[4,4][4]>(_t333C,_t327F);
      tensor[4] _t3340#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t333E,_t332C);
      real _t3342#1 = TensorIndex<tensor[4],[1]>(_t3340);
      tensor[4,4][4] _t3344#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t3346#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t3348#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t334A#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t334C#1 = <tensor[4,4][4][4]>{_t3344,_t3346,_t3348,_t334A};
      tensor[4,4][4] _t334E#1 = Subscript<tensor[4,4][4][4]>(_t334C,_t325C);
      tensor[4,4] _t3350#1 = Subscript<tensor[4,4][4]>(_t334E,_t327F);
      tensor[4] _t3352#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t3350,_t332C);
      real _t3354#1 = TensorIndex<tensor[4],[2]>(_t3352);
      tensor[3] _t3356#1 = <tensor[3]>[_t3330,_t3342,_t3354];
      femData:MeshPos _t3358#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2E0D,_t3274,_t3356,_t327F);
      goto JOIN335B
    JOIN335B:  preds = [ASSIGN3359,ASSIGN33AC]
      femData:MeshPos nmp2ED6#3 = phi(_t3358,_t335A)
      bool _t335C#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp2ED6);
      bool _t335E#1 = BNot(_t335C);
      if _t335E then goto ASSIGN3362 else goto ASSIGN336A
    ASSIGN3362:  preds = [COND3360]
      bool _t3361#1 = true;
      goto JOIN3365
    JOIN3365:  preds = [ASSIGN3362,JOIN336F]
      bool _t3363#1 = phi(_t3361,_t3364)
      if _t3363 then goto RETURN(nmp2ED6)3367 else goto JOIN3368
    RETURN(nmp2ED6)3367:  preds = [COND3366]
      return nmp2ED6
      goto JOIN3368
    JOIN3368:  preds = [*RETURN(nmp2ED6)3367,COND3366]
      goto JOIN2ED9
    ASSIGN336A:  preds = [COND3360]
      bool _t3369#1 = LT<real>(eTime310F,_t2F6D);
      if _t3369 then goto ASSIGN336D else goto ASSIGN3371
    ASSIGN336D:  preds = [COND336B]
      bool _t336C#1 = true;
      goto JOIN336F
    JOIN336F:  preds = [ASSIGN336D,JOIN3376]
      bool _t3364#1 = phi(_t336C,_t336E)
      goto JOIN3365
    ASSIGN3371:  preds = [COND336B]
      bool _t3370#1 = GT<real>(eTime310F,time2E05);
      if _t3370 then goto ASSIGN3374 else goto ASSIGN3377
    ASSIGN3374:  preds = [COND3372]
      bool _t3373#1 = true;
      goto JOIN3376
    JOIN3376:  preds = [ASSIGN3374,ASSIGN3377]
      bool _t336E#1 = phi(_t3373,_t3375)
      goto JOIN336F
    ASSIGN3377:  preds = [COND3372]
      bool _t3375#1 = LT<real>(time2ED8,timeEps2DFC);
      goto JOIN3376
    ASSIGN3379:  preds = [COND3278]
      real _t3378#1 = TensorIndex<tensor[2],[0]>(_t3257);
      tensor[3] op1_e3_l_223388#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t3378,time2E1B,op1_e3_l_202F32);
      tensor[3] _t337A#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (_t3116,op1_e3_l_223388);
      femData:MeshPos _t335A#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t2E0D,_t337A);
      goto JOIN335B
    ASSIGN33AE:  preds = [COND3250]
      bool _t33AD#1 = EQ<real>(faceTime2EE1,faceTime324A);
      if _t33AD then goto ASSIGN33B1 else goto ASSIGN33B5
    ASSIGN33B1:  preds = [COND33AF]
      tensor[2] _t33B0#1 = <tensor[2]>[_t2FF5,_t2FF5];
      goto JOIN33B3
    JOIN33B3:  preds = [ASSIGN33B1,ASSIGN33B6]
      tensor[2] _t3258#1 = phi(_t33B0,_t33B2)
      goto JOIN3259
    ASSIGN33B5:  preds = [COND33AF]
      real _t33B4#1 = IntToReal(_t2EDB);
      tensor[2] _t33B2#1 = <tensor[2]>[faceTime324A,_t33B4];
      goto JOIN33B3
    ASSIGN33B8:  preds = [COND3105]
      bool _t33B7#1 = EQ<real>(faceTime2EE1,faceTime30FF);
      if _t33B7 then goto ASSIGN33BB else goto ASSIGN33BF
    ASSIGN33BB:  preds = [COND33B9]
      tensor[2] _t33BA#1 = <tensor[2]>[_t2FF5,_t2FF5];
      goto JOIN33BD
    JOIN33BD:  preds = [ASSIGN33BB,ASSIGN33C0]
      tensor[2] _t310D#1 = phi(_t33BA,_t33BC)
      goto JOIN310E
    ASSIGN33BF:  preds = [COND33B9]
      real _t33BE#1 = IntToReal(_t2EDB);
      tensor[2] _t33BC#1 = <tensor[2]>[faceTime30FF,_t33BE];
      goto JOIN33BD
    ASSIGN33C2:  preds = [FOREACH2E0C]
      string _t33C1#1 = "Took stupid way out!\n";
      Print<[string]>(_t33C1);
      tensor[3] _t33C4#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x2DF5);
      int _t33C6#2 = ExtractFemItem<int,CellIndex(MeshPos)>(x2DF5);
      femData:Mesh _t33C8#3 = ExtractFem<femData:Mesh,femData:MeshPos>(x2DF5);
      int[4] femIndicies33CD#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t33C8,_t33C6);
      tensor[4,3] femDofs33CE#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t33C8,femIndicies33CD);
      tensor[4] basisResult33CF#1 = EvaluateBasis<BasisArray(4)>(_t33C4);
      tensor[3] probe_l_533CB#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t33C6,_t33C8,_t33C4,femDofs33CE,basisResult33CF,_t33C4);
      tensor[3] _t33CA#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (dPos2DF6,probe_l_533CB);
      femData:MeshPos cmp33D6#1 = findPos2C4C (meshData2DF8,_t33CA);
      return cmp33D6
}
## input initialization
  ENTRY2C03:  preds = []
    int timeSteps2C04#1 = 32;
    globals.timeSteps2BFB = timeSteps2C04;
    real timeEps2C07#1 = 0.1e-6;
    globals.timeEps2BFC = timeEps2C07;
    real stepSize2C0A#1 = 0.1e-1;
    globals.stepSize2BFE = stepSize2C0A;
    int stepMax2C0D#1 = 100;
    globals.stepMax2BFF = stepMax2C0D;
    return
## global-variable initialization
  ENTRY2C11:  preds = []
    femData:Mesh meshData2C12#3 = globals.meshData2BF8;
    femData:Space 0space03AB_intermedateGlobal2C14#1 = globals.0space03AB_intermedateGlobal2BF9;
    femData:FemFunc 0data03AD_intermedateGlobal2C16#1 = globals.0data03AD_intermedateGlobal2BFA;
    int _t2C18#1 = 0;
    int _t2C1A#1 = 1;
    int _t2C1C#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData2C12);
    int _t2C1E#1 = ISub(_t2C1C,_t2C1A);
    int[] _t2C20#1 = Range(_t2C18,_t2C1E);
    femData:MeshCell[] _t2C22#1 = <femData:MeshCell[]>{};
  FOREACH2C25:  preds = [ASSIGN2C23,NEXT2C2B]
    foreach (_t2C24 in _t2C20) on exit goto ASSIGN2C2D
      femData:MeshCell[] _t2C29#1 = phi(_t2C22,_t2C28)
    femData:MeshCell _t2C26#1 = LoadFem<femData:MeshCell>(meshData2C12,_t2C24);
    femData:MeshCell[] _t2C28#1 = Append<femData:MeshCell>(_t2C29,_t2C26);
    goto FOREACH2C25
  ASSIGN2C2D:  preds = [FOREACH2C25]
    femData:Space space2C2C#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal2C14,meshData2C12);
    femData:FemFunc data2C2E#2 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal2C16,space2C2C);
    globals.data2C00 = data2C2E;
    femData:Space _t2C31#2 = ExtractFem<femData:Space,femData:FemFunc>(data2C2E);
    femData:Mesh _t2C33#1 = ExtractFem<femData:Mesh,femData:Space>(_t2C31);
    globals._t2C01 = _t2C33;
    globals._tX2C02 = _t2C31;
    return
## strand
  strand gg (tensor[3] startPos2C38#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY2C3F:  preds = []
        femData:Mesh meshData2C40#1 = globals.meshData2BF8;
        tensor[3][1] _t2C42#1 = <tensor[3][1]>{startPos2C38};
        tensor[3][] _t2C44#1 = MkDynamic<tensor[3],1>(_t2C42);
        tensor[3][1] _t2C46#1 = <tensor[3][1]>{startPos2C38};
        tensor[3][] _t2C48#1 = MkDynamic<tensor[3],1>(_t2C46);
        int step2C4A#1 = 0;
        femData:MeshPos cPos2D7C#1 = findPos2C4C (meshData2C40,startPos2C38);
        self.stream = _t2C44;
        self.newStream = _t2C48;
        self.step = step2C4A;
        self.cPos = cPos2D7C;
        self.altCPos = startPos2C38;
        self.startPos = startPos2C38;
        return
    end state init
    method update
        ENTRY2D85:  preds = []
          femData:Mesh _t2D86#4 = globals._t2C01;
          femData:Space _t2D88#4 = globals._tX2C02;
          femData:FemFunc data2D8A#6 = globals.data2C00;
          femData:Mesh meshData2D8C#2 = globals.meshData2BF8;
          real stepSize2D90#4 = globals.stepSize2BFE;
          int stepMax2D92#1 = globals.stepMax2BFF;
          tensor[3][] stream2D94#2 = self.stream;
          tensor[3][] newStream2D96#1 = self.newStream;
          int step2D98#3 = self.step;
          femData:MeshPos cPos2D9A#6 = self.cPos;
          tensor[3] altCPos2D9C#6 = self.altCPos;
          tensor[3] startPos2D9E#1 = self.startPos;
          bool _t2DA0#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2D9A);
          bool _t2DA2#1 = BNot(_t2DA0);
          if _t2DA2 then goto ASSIGN2DA6 else goto ASSIGN34DD
        ASSIGN2DA6:  preds = [COND2DA4]
          bool _t2DA5#1 = true;
          goto JOIN2DA9
        JOIN2DA9:  preds = [ASSIGN2DA6,JOIN34E6]
          bool _t2DA7#1 = phi(_t2DA5,_t2DA8)
          if _t2DA7 then goto STABILIZE2DAB else goto JOIN2DAC
        STABILIZE2DAB:  preds = [COND2DAA]
          stabilize
          goto JOIN2DAC
        JOIN2DAC:  preds = [*STABILIZE2DAB,COND2DAA]
          tensor[3] _t2DAD#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2D9A);
          int _t2DAF#4 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2D9A);
          femData:Mesh _t2DB1#5 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2D9A);
          int[4] femIndicies2DB8#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2DB1,_t2DAF);
          tensor[4,3] femDofs2DB9#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2DB1,femIndicies2DB8);
          tensor[4] basisResult2DBA#1 = EvaluateBasis<BasisArray(4)>(_t2DAD);
          tensor[3] probe_l_52DB4#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t2DAF,_t2DB1,_t2DAD,femDofs2DB9,basisResult2DBA,_t2DAD);
          tensor[3] op1_e3_l_72DB5#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (altCPos2D9C,probe_l_52DB4);
          real op1_e3_l_92DB6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_72DB5,op1_e3_l_72DB5);
          real _t2DB3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_92DB6);
          real _t2DC3#1 = 0.1e-5;
          bool _t2DC5#1 = GT<real>(_t2DB3,_t2DC3);
          if _t2DC5 then goto ASSIGN2DC9 else goto ASSIGN34D6
        ASSIGN2DC9:  preds = [COND2DC7]
          string _t2DC8#1 = "Error in tracing: At step:";
          string _t2DCA#1 = " with particle:";
          string _t2DCC#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t2DC8,step2D98,_t2DCA,startPos2D9E,_t2DCC);
          goto JOIN2DCF
        JOIN2DCF:  preds = [MASSIGN2DCE,MASSIGN34DB]
          real _t2DD0#2 = 0.5e0;
          if _t2DA0 then goto ASSIGN2DD4 else goto ASSIGN34D4
        ASSIGN2DD4:  preds = [COND2DD2]
          femData:MeshCell c2DD3#1 = LoadFem<femData:MeshCell>(_t2DB1,_t2DAF);
          int _t2DD5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2DD3);
          femData:FuncCell _t2DD7#2 = LoadFem<femData:FuncCell>(data2D8A,_t2DD5);
          femData:FemFunc _t2DD9#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2DD7);
          femData:Space _t2DDB#2 = ExtractFem<femData:Space,femData:FemFunc>(_t2DD9);
          int _t2DDD#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2DD7);
          int[10] femIndicies2DE4#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2DDB,_t2DDD);
          tensor[10,3] femDofs2DE5#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t2DD9,femIndicies2DE4);
          tensor[10] basisResult2DE6#1 = EvaluateBasis<BasisArray(10)>(_t2DAD);
          tensor[3] probe_l_82DE0#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2DDD,_t2DDB,_t2DD9,_t2DAD,femDofs2DE5,basisResult2DE6,_t2DAD);
          real op1_e3_l_112DE1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_82DE0,probe_l_82DE0);
          real op1_e3_l_122DE2#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_112DE1);
          tensor[3] _t2DDF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_82DE0,op1_e3_l_122DE2);
          goto JOIN2DF1
        JOIN2DF1:  preds = [ASSIGN2DEE,ASSIGN34D4]
          tensor[3] _t2DEF#1 = phi(_t2DDF,_t2DF0)
          tensor[3] up12DF2#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2DD0,stepSize2D90,_t2DEF);
          femData:MeshPos intermed33D9#4 = posMove2DF4 (cPos2D9A,up12DF2);
          femData:MeshPos callFindPos33E6#2 = findPos2C4C (_t2D86,altCPos2D9C);
          int intPos33E7#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos33E6);
          tensor[3] refPos33E8#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos33E6);
          int[10] femIndicies33ED#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos33E7);
          tensor[10,3] femDofs33EE#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies33ED);
          tensor[10] basisResult33EF#1 = EvaluateBasis<BasisArray(10)>(refPos33E8);
          tensor[3] compositionl33DD#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,altCPos2D9C,femDofs33EE,basisResult33EF,refPos33E8);
          real op1_e3_l_2033E2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl33DD,compositionl33DD);
          tensor[3] op1_e3_l_2133E3#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2DD0,stepSize2D90,compositionl33DD);
          real op1_e3_l_2233E4#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2033E2);
          tensor[3] op1_e3_l_2333E5#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2133E3,op1_e3_l_2233E4);
          tensor[3] altIntermed33DB#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2D9C,op1_e3_l_2333E5);
          bool _t3421#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed33D9);
          bool _t3423#1 = BNot(_t3421);
          if _t3423 then goto ASSIGN3427 else goto ASSIGN34D0
        ASSIGN3427:  preds = [COND3425]
          bool _t3426#1 = true;
          goto JOIN342A
        JOIN342A:  preds = [ASSIGN3427,ASSIGN34D3]
          bool _t3428#1 = phi(_t3426,_t3429)
          if _t3428 then goto STABILIZE342C else goto JOIN342D
        STABILIZE342C:  preds = [COND342B]
          stabilize
          goto JOIN342D
        JOIN342D:  preds = [*STABILIZE342C,COND342B]
          if _t3421 then goto ASSIGN3430 else goto ASSIGN34CE
        ASSIGN3430:  preds = [COND342E]
          femData:Mesh _t342F#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed33D9);
          int _t3431#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed33D9);
          femData:MeshCell c3433#1 = LoadFem<femData:MeshCell>(_t342F,_t3431);
          tensor[3] ref3435#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed33D9);
          int _t3437#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3433);
          femData:FuncCell _t3439#2 = LoadFem<femData:FuncCell>(data2D8A,_t3437);
          femData:FemFunc _t343B#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3439);
          femData:Space _t343D#2 = ExtractFem<femData:Space,femData:FemFunc>(_t343B);
          int _t343F#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3439);
          int[10] femIndicies3446#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t343D,_t343F);
          tensor[10,3] femDofs3447#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t343B,femIndicies3446);
          tensor[10] basisResult3448#1 = EvaluateBasis<BasisArray(10)>(ref3435);
          tensor[3] probe_l_83442#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t343F,_t343D,_t343B,ref3435,femDofs3447,basisResult3448,ref3435);
          real op1_e3_l_113443#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_83442,probe_l_83442);
          real op1_e3_l_123444#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_113443);
          tensor[3] _t3441#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_83442,op1_e3_l_123444);
          goto JOIN3453
        JOIN3453:  preds = [ASSIGN3450,ASSIGN34CE]
          tensor[3] _t3451#1 = phi(_t3441,_t3452)
          tensor[3] up23454#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2D90,_t3451);
          femData:MeshPos cPos3456#6 = posMove2DF4 (cPos2D9A,up23454);
          femData:MeshPos callFindPos3463#2 = findPos2C4C (_t2D86,altIntermed33DB);
          int intPos3464#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3463);
          tensor[3] refPos3465#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3463);
          int[10] femIndicies346A#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos3464);
          tensor[10,3] femDofs346B#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies346A);
          tensor[10] basisResult346C#1 = EvaluateBasis<BasisArray(10)>(refPos3465);
          tensor[3] compositionl345A#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,altIntermed33DB,femDofs346B,basisResult346C,refPos3465);
          real op1_e3_l_19345F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl345A,compositionl345A);
          tensor[3] op1_e3_l_203460#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2D90,compositionl345A);
          real op1_e3_l_213461#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_19345F);
          tensor[3] op1_e3_l_223462#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_203460,op1_e3_l_213461);
          tensor[3] altCPos3458#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2D9C,op1_e3_l_223462);
          bool _t349E#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos3456);
          bool _t34A0#1 = BNot(_t349E);
          if _t34A0 then goto MASSIGN34A3 else goto JOIN34A7
        MASSIGN34A3:  preds = [COND34A2]
          Print<[tensor[3][]]>(stream2D94);
          self.cPos = cPos3456;
          self.altCPos = altCPos3458;
          stabilize
          goto JOIN34A7
        JOIN34A7:  preds = [*STABILIZE34A6,COND34A2]
          tensor[3] _t34A8#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos3456);
          int _t34AA#2 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos3456);
          femData:Mesh _t34AC#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos3456);
          int[4] femIndicies34B0#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t34AC,_t34AA);
          tensor[4,3] femDofs34B1#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t34AC,femIndicies34B0);
          tensor[4] basisResult34B2#1 = EvaluateBasis<BasisArray(4)>(_t34A8);
          tensor[3] _t34AE#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t34AA,_t34AC,_t34AC,_t34A8,femDofs34B1,basisResult34B2,_t34A8);
          tensor[3][1] _t34B8#1 = <tensor[3][1]>{_t34AE};
          tensor[3][] _t34BA#1 = MkDynamic<tensor[3],1>(_t34B8);
          tensor[3][] stream34BC#1 = Concat<tensor[3]>(stream2D94,_t34BA);
          tensor[3][1] _t34BE#1 = <tensor[3][1]>{altCPos3458};
          tensor[3][] _t34C0#1 = MkDynamic<tensor[3],1>(_t34BE);
          tensor[3][] newStream34C2#1 = Concat<tensor[3]>(newStream2D96,_t34C0);
          int _t34C4#1 = 1;
          int step34C6#1 = IAdd(step2D98,_t34C4);
          self.stream = stream34BC;
          self.newStream = newStream34C2;
          self.step = step34C6;
          self.cPos = cPos3456;
          self.altCPos = altCPos3458;
          active
        ASSIGN34CE:  preds = [COND342E]
          tensor[3] _t3452#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN3453
        ASSIGN34D0:  preds = [COND3425]
          femData:MeshPos _t34CF#1 = findPos2C4C (meshData2D8C,altIntermed33DB);
          bool _t34D1#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t34CF);
          bool _t3429#1 = BNot(_t34D1);
          goto JOIN342A
        ASSIGN34D4:  preds = [COND2DD2]
          tensor[3] _t2DF0#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2DF1
        ASSIGN34D6:  preds = [COND2DC7]
          string _t34D5#1 = "fine in cell:";
          femData:MeshCell _t34D7#1 = LoadFem<femData:MeshCell>(_t2DB1,_t2DAF);
          string _t34D9#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t34D5,_t34D7,_t34D9);
          goto JOIN2DCF
        ASSIGN34DD:  preds = [COND2DA4]
          femData:MeshPos _t34DC#1 = findPos2C4C (meshData2D8C,altCPos2D9C);
          bool _t34DE#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t34DC);
          bool _t34E0#1 = BNot(_t34DE);
          if _t34E0 then goto ASSIGN34E4 else goto ASSIGN34E7
        ASSIGN34E4:  preds = [COND34E2]
          bool _t34E3#1 = true;
          goto JOIN34E6
        JOIN34E6:  preds = [ASSIGN34E4,ASSIGN34E7]
          bool _t2DA8#1 = phi(_t34E3,_t34E5)
          goto JOIN2DA9
        ASSIGN34E7:  preds = [COND34E2]
          bool _t34E5#1 = EQ<int>(step2D98,stepMax2D92);
          goto JOIN34E6
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY34E8:  preds = []
      tensor[3][] startPoints34E9#1 = globals.startPoints2BFD;
    FOREACH34EC:  preds = [ASSIGN34EA,NEXT34EE]
      foreach (x34EB in startPoints34E9) on exit goto RETURN34EF
      new gg(x34EB);
      goto FOREACH34EC
    RETURN34EF:  preds = [FOREACH34EC]
      return
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData2BF8 (meshData) = <no-default>
  input 0space03AB_intermedateGlobal2BF9 (space) = <no-default>
  input 0data03AD_intermedateGlobal2BFA (data) = <no-default>
  input timeSteps2BFB (timeSteps) = <default>
  input timeEps2BFC (timeEps) = <default>
  input startPoints2BFD (startPoints) = <no-default>
  input stepSize2BFE (stepSize) = <default>
  input stepMax2BFF (stepMax) = <default>
  global femData:FemFunc data2C00
  global femData:Mesh _t2C01
  global femData:Space _tX2C02
## functions
  function femData:MeshPos findPos2C4C (femData:Mesh mesh2C4D#11, tensor[3] pos2C4E#4) {
    ENTRY2C4F:  preds = []
      real _t2C50#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn2C52#10 = <tensor[3]>[_t2C50,_t2C50,_t2C50];
      int newtonInt2C54#1 = 0;
      int[] yayCells2C56#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh2C4D,pos2C4E);
    FOREACH2C59:  preds = [ASSIGN2C57,NEXT2D73]
      foreach (cellItter2C58 in yayCells2C56) on exit goto ASSIGN2D75
      int _t2C5A#1 = 16;
      int[] _t2C5C#1 = Range(newtonInt2C54,_t2C5A);
    FOREACH2C5F:  preds = [ASSIGN2C5D,NEXT2D72]
      foreach (newtonItter2C5E in _t2C5C) on exit goto NEXT2D73
        tensor[3] xn2C61#6 = phi(xn2C52,xn2C60)
      int[4] femIndicies2C72#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(mesh2C4D,cellItter2C58);
      tensor[4,3] femDofs2C73#6 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(mesh2C4D,femIndicies2C72);
      tensor[3,4] basisResult2C74#4 = EvaluateBasis<BasisArray(3,4)>(xn2C52);
      tensor[3,3] probe_l_102C62#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3,3,3] op1_e3_l_122C63#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_102C62);
      tensor[3,3,3] op1_e3_l_132C64#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_102C62,op1_e3_l_122C63);
      tensor[3] probe_l_142C65#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3] probe_l_152C66#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3] probe_l_162C67#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C52,femDofs2C73,basisResult2C74,xn2C52);
      tensor[3,3] op1_e3_l_172C68#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_162C67);
      tensor[3] op1_e3_l_182C69#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_152C66,op1_e3_l_172C68);
      real op1_e3_l_192C6A#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_142C65,op1_e3_l_182C69);
      tensor[3,3] op1_e3_l_202C6B#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_132C64);
      real op1_e3_l_212C6C#1 = λ(T0[])<(2 * T0)> (op1_e3_l_192C6A);
      tensor[4] basisResult2C7C#2 = EvaluateBasis<BasisArray(4)>(xn2C61);
      tensor[3] probe_l_222C6D#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (xn2C61,cellItter2C58,mesh2C4D,femDofs2C73,basisResult2C7C,xn2C61);
      tensor[3,3] op1_e3_l_232C6E#2 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_202C6B,op1_e3_l_212C6C);
      tensor[3] op1_e3_l_242C6F#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos2C4E,probe_l_222C6D);
      tensor[3] op1_e3_l_252C70#1 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_232C6E,op1_e3_l_242C6F);
      tensor[3] xn2C60#4 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (xn2C61,op1_e3_l_252C70);
      real _t2C99#2 = 0.1e-7;
      real _t2C9B#1 = λ(T0[],T1[])<(T0 * T1)> (_t2C99,_t2C99);
      tensor[3] probe_l_302CA9#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (cellItter2C58,mesh2C4D,xn2C61,femDofs2C73,basisResult2C7C,xn2C61);
      tensor[3] op1_e3_l_322CAB#1 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (pos2C4E,probe_l_302CA9);
      tensor[3] op1_e3_l_482CAC#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (op1_e3_l_232C6E,op1_e3_l_322CAB);
      real _t2C9D#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_482CAC,op1_e3_l_482CAC);
      bool _t2CD5#1 = GTE<real>(_t2C9B,_t2C9D);
      if _t2CD5 then goto ASSIGN2CD9 else goto JOIN2D71
    ASSIGN2CD9:  preds = [COND2CD7]
      real _t2CD8#4 = 0.1e1;
      real _t2CDA#4 = 0.1e-8;
      real _t2CDC#1 = λ(T0[],T1[])<(T0 + T1)> (_t2CD8,_t2CDA);
      tensor[3] _t2CDE#1 = <tensor[3]>[_t2CD8,_t2CD8,_t2CD8];
      real _t2CE0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2CDE,xn2C60);
      bool _t2D1A#1 = GT<real>(_t2CDC,_t2CE0);
      tensor[3] _t2D1C#1 = <tensor[3]>[_t2CDA,_t2CDA,_t2CDA];
      tensor[3] _t2D1E#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2D1C,xn2C60);
      real _t2D58#1 = TensorIndex<tensor[3],[0]>(_t2D1E);
      real _t2D5A#3 = -0.e0;
      bool _t2D5C#1 = GT<real>(_t2D58,_t2D5A);
      real _t2D5E#1 = TensorIndex<tensor[3],[1]>(_t2D1E);
      bool _t2D60#1 = GT<real>(_t2D5E,_t2D5A);
      real _t2D62#1 = TensorIndex<tensor[3],[2]>(_t2D1E);
      bool _t2D64#1 = GT<real>(_t2D62,_t2D5A);
      bool _t2D66#1 = BAnd(_t2D60,_t2D64);
      bool _t2D68#1 = BAnd(_t2D5C,_t2D66);
      bool _t2D6A#1 = BAnd(_t2D1A,_t2D68);
      if _t2D6A then goto ASSIGN2D6E else goto JOIN2D70
    ASSIGN2D6E:  preds = [COND2D6C]
      femData:MeshPos _t2D6D#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh2C4D,cellItter2C58,xn2C60,pos2C4E);
      return _t2D6D
      goto JOIN2D70
    JOIN2D70:  preds = [*RETURN(_t2D6D)2D6F,COND2D6C]
      goto JOIN2D71
    JOIN2D71:  preds = [JOIN2D70,COND2CD7]
      goto FOREACH2C5F
    NEXT2D73:  preds = [FOREACH2C5F]
      goto FOREACH2C59
    ASSIGN2D75:  preds = [FOREACH2C59]
      string _t2D74#1 = "Bad end 2";
      string _t2D76#1 = "\n";
      Print<[string,string]>(_t2D74,_t2D76);
      femData:MeshPos _t2D79#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh2C4D);
      return _t2D79
}
  function int[2] nextCell43260 (int faceIdx3261#1, int cell3262#1, femData:Mesh mesh3263#1) {
    ENTRY3264:  preds = []
      int _t3265#1 = 8;
      int _t3267#1 = IMul(cell3262,_t3265);
      int _t3269#1 = 2;
      int _t326B#1 = IMul(faceIdx3261,_t3269);
      int _t326D#1 = IAdd(_t3267,_t326B);
      int[2] _t326F#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh3263,_t326D);
      return _t326F
}
  function femData:MeshPos posMove2DF4 (femData:MeshPos x2DF5#6, tensor[3] dPos2DF6#3) {
    ENTRY2DF7:  preds = []
      femData:Mesh meshData2DF8#1 = globals.meshData2BF8;
      int timeSteps2DFA#1 = globals.timeSteps2BFB;
      real timeEps2DFC#1 = globals.timeEps2BFC;
      bool _t2DFE#1 = ExtractFemItem<bool,Valid(MeshPos)>(x2DF5);
      bool _t2E00#1 = BNot(_t2DFE);
      if _t2E00 then goto RETURN(x2DF5)2E03 else goto JOIN2E04
    RETURN(x2DF5)2E03:  preds = [COND2E02]
      return x2DF5
      goto JOIN2E04
    JOIN2E04:  preds = [*RETURN(x2DF5)2E03,COND2E02]
      real time2E05#23 = 0.1e1;
      int _t2E07#6 = 0;
      int[] _t2E09#1 = Range(_t2E07,timeSteps2DFA);
    FOREACH2E0C:  preds = [ASSIGN2E0A,NEXT2EDA]
      foreach (i2E0B in _t2E09) on exit goto ASSIGN33C2
        femData:MeshPos cmp2E0E#6 = phi(x2DF5,cmp2ED5)
        real time2E1B#13 = phi(time2E05,time2ED7)
      femData:Mesh _t2E0D#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp2E0E);
      int _t2E10#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp2E0E);
      femData:MeshCell _t2E12#2 = LoadFem<femData:MeshCell>(_t2E0D,_t2E10);
      femData:Mesh _t2E14#11 = ExtractFem<femData:Mesh,femData:MeshCell>(_t2E12);
      int _t2E16#10 = ExtractFemItem<int,CellIndex(MeshCell)>(_t2E12);
      tensor[3] _t2E18#23 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp2E0E);
      int[4] femIndicies2E2B#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2E14,_t2E16);
      tensor[4,3] femDofs2E2C#8 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2E14,femIndicies2E2B);
      tensor[3,4] basisResult2E2D#8 = EvaluateBasis<BasisArray(3,4)>(_t2E18);
      tensor[3,3] probe_l_72E1C#2 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3,3] op1_e3_l_92E1D#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72E1C);
      tensor[3,3,3] op1_e3_l_102E1E#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72E1C,op1_e3_l_92E1D);
      tensor[3] probe_l_112E1F#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_122E20#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_132E21#1 = λ(T0[3],INT1,FEM(mesh_t)2,T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E18,_t2E16,_t2E14,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3] op1_e3_l_142E22#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_132E21);
      tensor[3] op1_e3_l_152E23#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_122E20,op1_e3_l_142E22);
      real op1_e3_l_162E24#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_112E1F,op1_e3_l_152E23);
      tensor[3,3] op1_e3_l_172E25#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_102E1E);
      real op1_e3_l_182E26#1 = λ(T0[])<(2 * T0)> (op1_e3_l_162E24);
      tensor[3,3] op1_e3_l_192E27#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_172E25,op1_e3_l_182E26);
      tensor[3] op1_e3_l_202E28#5 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_192E27);
      tensor[3] op1_e3_l_212E29#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (time2E1B,op1_e3_l_202E28);
      tensor[3] newPos2E1A#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t2E18,op1_e3_l_212E29);
      real _t2E4D#4 = 0.1e-8;
      real _t2E4F#1 = λ(T0[],T1[])<(T0 + T1)> (time2E05,_t2E4D);
      tensor[3] _t2E51#1 = <tensor[3]>[time2E05,time2E05,time2E05];
      real _t2E53#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2E51,newPos2E1A);
      bool _t2E87#1 = GT<real>(_t2E4F,_t2E53);
      tensor[3] _t2E89#1 = <tensor[3]>[_t2E4D,_t2E4D,_t2E4D];
      tensor[3] _t2E8B#3 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T1_{i0} + T2_{i0})>_{3} (_t2E89,_t2E18,op1_e3_l_212E29);
      real _t2EBD#1 = TensorIndex<tensor[3],[0]>(_t2E8B);
      real _t2EBF#3 = -0.e0;
      bool _t2EC1#1 = GT<real>(_t2EBD,_t2EBF);
      real _t2EC3#1 = TensorIndex<tensor[3],[1]>(_t2E8B);
      bool _t2EC5#1 = GT<real>(_t2EC3,_t2EBF);
      real _t2EC7#1 = TensorIndex<tensor[3],[2]>(_t2E8B);
      bool _t2EC9#1 = GT<real>(_t2EC7,_t2EBF);
      bool _t2ECB#1 = BAnd(_t2EC5,_t2EC9);
      bool _t2ECD#1 = BAnd(_t2EC1,_t2ECB);
      bool _t2ECF#1 = BAnd(_t2E87,_t2ECD);
      if _t2ECF then goto ASSIGN2ED3 else goto ASSIGN2EDC
    ASSIGN2ED3:  preds = [COND2ED1]
      femData:MeshPos nmp2ED2#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2E14,_t2E16,newPos2E1A);
      return nmp2ED2
      goto JOIN2ED9
    JOIN2ED9:  preds = [*RETURN(nmp2ED2)2ED4,JOIN3368]
      femData:MeshPos cmp2ED5#1 = phi(nmp2ED6)
      real time2ED7#1 = phi(time2ED8)
      goto FOREACH2E0C
    ASSIGN2EDC:  preds = [COND2ED1]
      int _t2EDB#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp2E0E);
      real time2EDD#6 = +inf;
      int face2EDF#7 = -1;
      real faceTime2EE1#6 = -inf;
      real _t2EE3#15 = 0.57735026919e0;
      tensor[3] _t2EE5#4 = <tensor[3]>[_t2EE3,_t2EE3,_t2EE3];
      real op1_e3_l_102EE8#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,_t2E18);
      real op1_e3_l_252EF6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,op1_e3_l_202E28);
      real op1_e3_l_262EF7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2EE3,op1_e3_l_102EE8);
      real op1_e3_l_272EF8#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_252EF6);
      real _t2EE7#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_262EF7,op1_e3_l_272EF8);
      real _t2F1F#8 = -0.1e-15;
      bool _t2F21#1 = GTE<real>(_t2EE7,_t2F1F);
      bool _t2F23#1 = GT<real>(time2EDD,_t2EE7);
      tensor[3,3] probe_l_72F26#2 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i3=0..3)<((T3_{i3,i0} * T4_{i1,i3}))>(i3=0..3)>_{3 3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3,3] op1_e3_l_92F27#1 = λ(T0[3 3])<Σ(i3=0..2)<((ϵ_{ii0,ii3,ii1} * T0_{i3,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72F26);
      tensor[3,3,3] op1_e3_l_102F28#1 = λ(T0[3 3],T1[3 3 3])<Σ(i3=0..2)<((T0_{i3,i0} * T1_{i3,i1,i2}))>(i3=0..2)>_{3 3 3} (probe_l_72F26,op1_e3_l_92F27);
      tensor[3] probe_l_112F29#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'0',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_122F2A#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'1',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3] probe_l_132F2B#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[3 4],T5[3])<Σ(i2=0..3)<((T3_{i2,i0} * T4_{'2',i2}))>(i2=0..3)>_{3} (_t2E16,_t2E14,_t2E18,femDofs2E2C,basisResult2E2D,_t2E18);
      tensor[3,3] op1_e3_l_142F2C#1 = λ(T0[3])<Σ(i2=0..2)<((ϵ_{ii0,ii1,ii2} * T0_{i2}))>(i2=0..2)>_{3 3} (probe_l_132F2B);
      tensor[3] op1_e3_l_152F2D#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T0_{i1} * T1_{i0,i1}))>(i1=0..2)>_{3} (probe_l_122F2A,op1_e3_l_142F2C);
      real op1_e3_l_162F2E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_112F29,op1_e3_l_152F2D);
      tensor[3,3] op1_e3_l_172F2F#1 = λ(T0[3 3 3])<Σ(i2=0..2)(i3=0..2)<((ϵ_{ii2,ii3,ii0} * T0_{i2,i1,i3}))>(i2=0..2)(i3=0..2)>_{3 3} (op1_e3_l_102F28);
      real op1_e3_l_182F30#1 = λ(T0[])<(2 * T0)> (op1_e3_l_162F2E);
      tensor[3,3] op1_e3_l_192F31#1 = λ(T0[3 3],T1[])<(T0_{i0,i1}) / ( T1)>_{3 3} (op1_e3_l_172F2F,op1_e3_l_182F30);
      tensor[3] op1_e3_l_202F32#6 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (dPos2DF6,op1_e3_l_192F31);
      real op1_e3_l_212F33#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,op1_e3_l_202F32);
      real op1_e3_l_222F34#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_212F33);
      real _t2F25#1 = λ(T0[])<Abs(T0)> (op1_e3_l_222F34);
      real _t2F59#4 = 0.1e-20;
      bool _t2F5B#2 = GTE<real>(_t2F25,_t2F59);
      bool _t2F5D#1 = BAnd(_t2F23,_t2F5B);
      bool _t2F5F#1 = BAnd(_t2F21,_t2F5D);
      if _t2F5F then goto ASSIGN2F63 else goto JOIN2F6C
    ASSIGN2F63:  preds = [COND2F61]
      bool _t2F62#1 = NEQ<int>(_t2EDB,_t2E07);
      if _t2F62 then goto JOIN2F68 else goto JOIN2F68
    JOIN2F68:  preds = [COND2F64,COND2F64]
      real faceTime2F65#1 = phi(faceTime2EE1,_t2EE7)
      int face2F66#1 = phi(_t2E07,face2EDF)
      real time2F67#1 = phi(_t2EE7,time2EDD)
      goto JOIN2F6C
    JOIN2F6C:  preds = [JOIN2F68,COND2F61]
      real faceTime2F69#2 = phi(faceTime2F65,faceTime2EE1)
      int face2F6A#2 = phi(face2F66,face2EDF)
      real time2F6B#3 = phi(time2F67,time2EDD)
      real _t2F6D#50 = 0.e0;
      tensor[3] _t2F6F#4 = <tensor[3]>[time2E05,_t2F6D,_t2F6D];
      real op1_e3_l_102F72#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,_t2E18);
      real op1_e3_l_252F80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,op1_e3_l_202E28);
      real op1_e3_l_262F81#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_102F72);
      real op1_e3_l_272F82#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_252F80);
      real _t2F71#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_262F81,op1_e3_l_272F82);
      bool _t2FA9#1 = GTE<real>(_t2F71,_t2F1F);
      bool _t2FAB#1 = GT<real>(time2F6B,_t2F71);
      real op1_e3_l_212FBB#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,op1_e3_l_202F32);
      real op1_e3_l_222FBC#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_212FBB);
      real _t2FAD#1 = λ(T0[])<Abs(T0)> (op1_e3_l_222FBC);
      bool _t2FE1#2 = GTE<real>(_t2FAD,_t2F59);
      bool _t2FE3#1 = BAnd(_t2FAB,_t2FE1);
      bool _t2FE5#1 = BAnd(_t2FA9,_t2FE3);
      if _t2FE5 then goto ASSIGN2FE9 else goto JOIN2FF4
    ASSIGN2FE9:  preds = [COND2FE7]
      int _t2FE8#2 = 1;
      bool _t2FEA#1 = NEQ<int>(_t2EDB,_t2FE8);
      if _t2FEA then goto JOIN2FF0 else goto JOIN2FF0
    JOIN2FF0:  preds = [COND2FEC,COND2FEC]
      real faceTime2FED#1 = phi(faceTime2F69,_t2F71)
      int face2FEE#1 = phi(_t2FE8,face2F6A)
      real time2FEF#1 = phi(_t2F71,time2F6B)
      goto JOIN2FF4
    JOIN2FF4:  preds = [JOIN2FF0,COND2FE7]
      real faceTime2FF1#2 = phi(faceTime2FED,faceTime2F69)
      int face2FF2#2 = phi(face2FEE,face2F6A)
      real time2FF3#3 = phi(time2FEF,time2F6B)
      real _t2FF5#14 = -0.1e1;
      tensor[3] _t2FF7#4 = <tensor[3]>[_t2F6D,_t2FF5,_t2F6D];
      real op1_e3_l_102FFA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,_t2E18);
      real op1_e3_l_253008#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,op1_e3_l_202E28);
      real op1_e3_l_263009#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_102FFA);
      real op1_e3_l_27300A#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_253008);
      real _t2FF9#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263009,op1_e3_l_27300A);
      bool _t3031#1 = GTE<real>(_t2FF9,_t2F1F);
      bool _t3033#1 = GT<real>(time2FF3,_t2FF9);
      real op1_e3_l_213043#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,op1_e3_l_202F32);
      real op1_e3_l_223044#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_213043);
      real _t3035#1 = λ(T0[])<Abs(T0)> (op1_e3_l_223044);
      bool _t3069#2 = GTE<real>(_t3035,_t2F59);
      bool _t306B#1 = BAnd(_t3033,_t3069);
      bool _t306D#1 = BAnd(_t3031,_t306B);
      if _t306D then goto ASSIGN3071 else goto JOIN307C
    ASSIGN3071:  preds = [COND306F]
      int _t3070#2 = 2;
      bool _t3072#1 = NEQ<int>(_t2EDB,_t3070);
      if _t3072 then goto JOIN3078 else goto JOIN3078
    JOIN3078:  preds = [COND3074,COND3074]
      real faceTime3075#1 = phi(faceTime2FF1,_t2FF9)
      int face3076#1 = phi(_t3070,face2FF2)
      real time3077#1 = phi(_t2FF9,time2FF3)
      goto JOIN307C
    JOIN307C:  preds = [JOIN3078,COND306F]
      real faceTime3079#2 = phi(faceTime3075,faceTime2FF1)
      int face307A#2 = phi(face3076,face2FF2)
      real time307B#3 = phi(time3077,time2FF3)
      tensor[3] _t307D#4 = <tensor[3]>[_t2F6D,_t2F6D,time2E05];
      real op1_e3_l_103080#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,_t2E18);
      real op1_e3_l_25308E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,op1_e3_l_202E28);
      real op1_e3_l_26308F#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103080);
      real op1_e3_l_273090#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_25308E);
      real _t307F#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_26308F,op1_e3_l_273090);
      bool _t30B7#1 = GTE<real>(_t307F,_t2F1F);
      bool _t30B9#1 = GT<real>(time307B,_t307F);
      real op1_e3_l_2130C9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,op1_e3_l_202F32);
      real op1_e3_l_2230CA#2 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,op1_e3_l_2130C9);
      real _t30BB#1 = λ(T0[])<Abs(T0)> (op1_e3_l_2230CA);
      bool _t30EF#2 = GTE<real>(_t30BB,_t2F59);
      bool _t30F1#1 = BAnd(_t30B9,_t30EF);
      bool _t30F3#1 = BAnd(_t30B7,_t30F1);
      if _t30F3 then goto ASSIGN30F7 else goto JOIN3102
    ASSIGN30F7:  preds = [COND30F5]
      int _t30F6#2 = 3;
      bool _t30F8#1 = NEQ<int>(_t2EDB,_t30F6);
      if _t30F8 then goto JOIN30FE else goto JOIN30FE
    JOIN30FE:  preds = [COND30FA,COND30FA]
      real faceTime30FB#1 = phi(faceTime3079,_t307F)
      int face30FC#1 = phi(_t30F6,face307A)
      real time30FD#1 = phi(_t307F,time307B)
      goto JOIN3102
    JOIN3102:  preds = [JOIN30FE,COND30F5]
      real faceTime30FF#2 = phi(faceTime30FB,faceTime3079)
      int face3100#2 = phi(face30FC,face307A)
      real time3101#1 = phi(time30FD,time307B)
      bool _t3103#1 = NEQ<int>(face3100,face2EDF);
      if _t3103 then goto ASSIGN3107 else goto ASSIGN33B8
    ASSIGN3107:  preds = [COND3105]
      real _t3106#1 = Max<real>(time3101,_t2F6D);
      real _t3108#1 = IntToReal(face3100);
      tensor[2] _t310A#1 = <tensor[2]>[_t3106,_t3108];
      goto JOIN310E
    JOIN310E:  preds = [ASSIGN310B,JOIN33BD]
      tensor[2] _t310C#1 = phi(_t310A,_t310D)
      real eTime310F#3 = TensorIndex<tensor[2],[0]>(_t310C);
      real op1_e3_l_33111#1 = λ(T0[],T1[])<(T0 * T1)> (time2E1B,eTime310F);
      real time2ED8#2 = λ(T0[],T1[])<(T0) - (T1)> (time2E1B,op1_e3_l_33111);
      int _t3114#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp2E0E);
      tensor[3] _t3116#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp2E0E);
      real op1_e3_l_103119#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2EE5,_t3116);
      real op1_e3_l_263128#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2EE3,op1_e3_l_103119);
      real _t3118#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263128,op1_e3_l_222F34);
      bool _t3150#1 = GTE<real>(_t3118,_t2F1F);
      bool _t3152#1 = GT<real>(time2EDD,_t3118);
      bool _t3154#1 = BAnd(_t3152,_t2F5B);
      bool _t3156#1 = BAnd(_t3150,_t3154);
      if _t3156 then goto ASSIGN315A else goto JOIN3163
    ASSIGN315A:  preds = [COND3158]
      bool _t3159#1 = NEQ<int>(_t2EDB,_t2E07);
      if _t3159 then goto JOIN315F else goto JOIN315F
    JOIN315F:  preds = [COND315B,COND315B]
      real faceTime315C#1 = phi(faceTime2EE1,_t3118)
      int face315D#1 = phi(_t2E07,face2EDF)
      real time315E#1 = phi(_t3118,time2EDD)
      goto JOIN3163
    JOIN3163:  preds = [JOIN315F,COND3158]
      real faceTime3160#2 = phi(faceTime315C,faceTime2EE1)
      int face3161#2 = phi(face315D,face2EDF)
      real time3162#3 = phi(time315E,time2EDD)
      real op1_e3_l_103165#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2F6F,_t3116);
      real op1_e3_l_263174#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103165);
      real _t3164#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263174,op1_e3_l_222FBC);
      bool _t319C#1 = GTE<real>(_t3164,_t2F1F);
      bool _t319E#1 = GT<real>(time3162,_t3164);
      bool _t31A0#1 = BAnd(_t319E,_t2FE1);
      bool _t31A2#1 = BAnd(_t319C,_t31A0);
      if _t31A2 then goto ASSIGN31A6 else goto JOIN31B1
    ASSIGN31A6:  preds = [COND31A4]
      int _t31A5#2 = 1;
      bool _t31A7#1 = NEQ<int>(_t2EDB,_t31A5);
      if _t31A7 then goto JOIN31AD else goto JOIN31AD
    JOIN31AD:  preds = [COND31A9,COND31A9]
      real faceTime31AA#1 = phi(faceTime3160,_t3164)
      int face31AB#1 = phi(_t31A5,face3161)
      real time31AC#1 = phi(_t3164,time3162)
      goto JOIN31B1
    JOIN31B1:  preds = [JOIN31AD,COND31A4]
      real faceTime31AE#2 = phi(faceTime31AA,faceTime3160)
      int face31AF#2 = phi(face31AB,face3161)
      real time31B0#3 = phi(time31AC,time3162)
      real op1_e3_l_1031B3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t2FF7,_t3116);
      real op1_e3_l_2631C2#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_1031B3);
      real _t31B2#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_2631C2,op1_e3_l_223044);
      bool _t31EA#1 = GTE<real>(_t31B2,_t2F1F);
      bool _t31EC#1 = GT<real>(time31B0,_t31B2);
      bool _t31EE#1 = BAnd(_t31EC,_t3069);
      bool _t31F0#1 = BAnd(_t31EA,_t31EE);
      if _t31F0 then goto ASSIGN31F4 else goto JOIN31FF
    ASSIGN31F4:  preds = [COND31F2]
      int _t31F3#2 = 2;
      bool _t31F5#1 = NEQ<int>(_t2EDB,_t31F3);
      if _t31F5 then goto JOIN31FB else goto JOIN31FB
    JOIN31FB:  preds = [COND31F7,COND31F7]
      real faceTime31F8#1 = phi(faceTime31AE,_t31B2)
      int face31F9#1 = phi(_t31F3,face31AF)
      real time31FA#1 = phi(_t31B2,time31B0)
      goto JOIN31FF
    JOIN31FF:  preds = [JOIN31FB,COND31F2]
      real faceTime31FC#2 = phi(faceTime31F8,faceTime31AE)
      int face31FD#2 = phi(face31F9,face31AF)
      real time31FE#3 = phi(time31FA,time31B0)
      real op1_e3_l_103201#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t307D,_t3116);
      real op1_e3_l_263210#1 = λ(T0[],T1[])<(T0) - (T1)> (_t2F6D,op1_e3_l_103201);
      real _t3200#4 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_263210,op1_e3_l_2230CA);
      bool _t3238#1 = GTE<real>(_t3200,_t2F1F);
      bool _t323A#1 = GT<real>(time31FE,_t3200);
      bool _t323C#1 = BAnd(_t323A,_t30EF);
      bool _t323E#1 = BAnd(_t3238,_t323C);
      if _t323E then goto ASSIGN3242 else goto JOIN324D
    ASSIGN3242:  preds = [COND3240]
      int _t3241#2 = 3;
      bool _t3243#1 = NEQ<int>(_t2EDB,_t3241);
      if _t3243 then goto JOIN3249 else goto JOIN3249
    JOIN3249:  preds = [COND3245,COND3245]
      real faceTime3246#1 = phi(faceTime31FC,_t3200)
      int face3247#1 = phi(_t3241,face31FD)
      real time3248#1 = phi(_t3200,time31FE)
      goto JOIN324D
    JOIN324D:  preds = [JOIN3249,COND3240]
      real faceTime324A#2 = phi(faceTime3246,faceTime31FC)
      int face324B#2 = phi(face3247,face31FD)
      real time324C#1 = phi(time3248,time31FE)
      bool _t324E#1 = NEQ<int>(face324B,face2EDF);
      if _t324E then goto ASSIGN3252 else goto ASSIGN33AE
    ASSIGN3252:  preds = [COND3250]
      real _t3251#1 = Max<real>(time324C,_t2F6D);
      real _t3253#1 = IntToReal(face324B);
      tensor[2] _t3255#1 = <tensor[2]>[_t3251,_t3253];
      goto JOIN3259
    JOIN3259:  preds = [ASSIGN3256,JOIN33B3]
      tensor[2] _t3257#3 = phi(_t3255,_t3258)
      real _t325A#1 = TensorIndex<tensor[2],[1]>(_t3257);
      real t325D#1 = Floor<1>(_t325A);
      int _t325C#6 = RealToInt<1>(t325D);
      int[2] _t3272#2 = nextCell43260 (_t325C,_t3114,_t2E0D);
      int _t3274#2 = Subscript<int[2]>(_t3272,_t2E07);
      bool _t3276#1 = NEQ<int>(face2EDF,_t3274);
      if _t3276 then goto ASSIGN327A else goto ASSIGN3379
    ASSIGN327A:  preds = [COND3278]
      string _t3279#1 = "face ";
      string _t327B#1 = " to ";
      int _t327D#1 = 1;
      int _t327F#6 = Subscript<int[2]>(_t3272,_t327D);
      string _t3281#2 = "\n";
      string _t3283#1 = "got: ";
      tensor[4] _t3285#7 = <tensor[4]>[time2E05,_t2F6D,_t2F6D,_t2F6D];
      tensor[4] _t3287#6 = <tensor[4]>[_t2F6D,time2E05,_t2F6D,_t2F6D];
      tensor[4] _t3289#7 = <tensor[4]>[_t2F6D,_t2F6D,time2E05,_t2F6D];
      real _t328B#1 = 0.971445146547e-16;
      tensor[4] _t328D#4 = <tensor[4]>[_t328B,_t2F6D,_t2F6D,time2E05];
      tensor[4,4] _t328F#4 = <tensor[4,4]>[_t3285,_t3287,_t3289,_t328D];
      real _t3291#7 = -0.57735026919e0;
      tensor[4] _t3293#2 = <tensor[4]>[_t2EE3,_t2EE3,_t2EE3,_t3291];
      real _t3295#4 = -0.333333333333e0;
      real _t3297#2 = 0.666666666667e0;
      real _t3299#2 = 0.333333333333e0;
      tensor[4] _t329B#3 = <tensor[4]>[_t3295,_t3297,_t3295,_t3299];
      tensor[4] _t329D#3 = <tensor[4]>[_t3295,_t3295,_t3297,_t3299];
      tensor[4,4] _t329F#4 = <tensor[4,4]>[_t3293,_t329B,_t329D,_t328D];
      tensor[4] _t32A1#1 = <tensor[4]>[_t3291,_t3291,_t3291,_t2EE3];
      tensor[4,4] _t32A3#4 = <tensor[4,4]>[_t329B,_t32A1,_t329D,_t328D];
      tensor[4,4] _t32A5#4 = <tensor[4,4]>[_t329B,_t329D,_t3293,_t328D];
      tensor[4,4][4] _t32A7#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4] _t32A9#1 = <tensor[4]>[_t2EE3,_t2FF5,_t2FF5,time2E05];
      tensor[4] _t32AB#1 = <tensor[4]>[_t2EE3,time2E05,_t2F6D,_t2F6D];
      tensor[4] _t32AD#1 = <tensor[4]>[_t2EE3,_t2F6D,time2E05,_t2F6D];
      tensor[4] _t32AF#10 = <tensor[4]>[_t2F6D,_t2F6D,_t2F6D,time2E05];
      tensor[4,4] _t32B1#4 = <tensor[4,4]>[_t32A9,_t32AB,_t32AD,_t32AF];
      tensor[4,4] _t32B3#12 = <tensor[4,4]>[_t3285,_t3287,_t3289,_t32AF];
      tensor[4] _t32B5#1 = <tensor[4]>[_t2FF5,_t2F6D,_t2F6D,_t2F6D];
      tensor[4,4] _t32B7#4 = <tensor[4,4]>[_t3287,_t32B5,_t3289,_t32AF];
      tensor[4,4] _t32B9#4 = <tensor[4,4]>[_t3287,_t3289,_t3285,_t32AF];
      tensor[4,4][4] _t32BB#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4] _t32BD#1 = <tensor[4]>[_t2FF5,_t3291,_t2FF5,time2E05];
      tensor[4] _t32BF#1 = <tensor[4]>[time2E05,_t3291,_t2F6D,_t2F6D];
      tensor[4] _t32C1#1 = <tensor[4]>[_t2F6D,_t3291,time2E05,_t2F6D];
      tensor[4,4] _t32C3#4 = <tensor[4,4]>[_t32BD,_t32BF,_t32C1,_t32AF];
      tensor[4] _t32C5#2 = <tensor[4]>[_t2F6D,_t2FF5,_t2F6D,_t2F6D];
      tensor[4,4] _t32C7#4 = <tensor[4,4]>[_t32C5,_t3285,_t3289,_t32AF];
      tensor[4,4] _t32C9#4 = <tensor[4,4]>[_t3285,_t3289,_t32C5,_t32AF];
      tensor[4,4][4] _t32CB#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4] _t32CD#1 = <tensor[4]>[_t2FF5,_t2FF5,_t2EE3,time2E05];
      tensor[4] _t32CF#1 = <tensor[4]>[time2E05,_t2F6D,_t2EE3,_t2F6D];
      tensor[4] _t32D1#1 = <tensor[4]>[_t2F6D,time2E05,_t2EE3,_t2F6D];
      tensor[4,4] _t32D3#4 = <tensor[4,4]>[_t32CD,_t32CF,_t32D1,_t32AF];
      tensor[4,4] _t32D5#4 = <tensor[4,4]>[_t3289,_t3285,_t3287,_t32AF];
      tensor[4] _t32D7#1 = <tensor[4]>[_t2F6D,_t2F6D,_t2FF5,_t2F6D];
      tensor[4,4] _t32D9#4 = <tensor[4,4]>[_t3285,_t32D7,_t3287,_t32AF];
      tensor[4,4][4] _t32DB#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t32DD#1 = <tensor[4,4][4][4]>{_t32A7,_t32BB,_t32CB,_t32DB};
      tensor[4,4][4] _t32DF#1 = Subscript<tensor[4,4][4][4]>(_t32DD,_t325C);
      tensor[4,4] _t32E1#1 = Subscript<tensor[4,4][4]>(_t32DF,_t327F);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t3279,_t325C,_t327B,_t327F,_t3281,_t3283,_t32E1,_t3281);
      tensor[4,4][4] _t32E4#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t32E6#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t32E8#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t32EA#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t32EC#1 = <tensor[4,4][4][4]>{_t32E4,_t32E6,_t32E8,_t32EA};
      tensor[4,4][4] _t32EE#1 = Subscript<tensor[4,4][4][4]>(_t32EC,_t325C);
      tensor[4,4] _t32F0#1 = Subscript<tensor[4,4][4]>(_t32EE,_t327F);
      real _t32F2#1 = TensorIndex<tensor[2],[0]>(_t3257);
      tensor[3] op1_e3_l_223302#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t32F2,time2E1B,op1_e3_l_202F32);
      tensor[3] _t32F4#3 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (_t3116,op1_e3_l_223302);
      real _t3326#1 = TensorIndex<tensor[3],[0]>(_t32F4);
      real _t3328#1 = TensorIndex<tensor[3],[1]>(_t32F4);
      real _t332A#1 = TensorIndex<tensor[3],[2]>(_t32F4);
      tensor[4] _t332C#3 = <tensor[4]>[_t3326,_t3328,_t332A,time2E05];
      tensor[4] _t332E#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t32F0,_t332C);
      real _t3330#1 = TensorIndex<tensor[4],[0]>(_t332E);
      tensor[4,4][4] _t3332#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t3334#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t3336#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t3338#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t333A#1 = <tensor[4,4][4][4]>{_t3332,_t3334,_t3336,_t3338};
      tensor[4,4][4] _t333C#1 = Subscript<tensor[4,4][4][4]>(_t333A,_t325C);
      tensor[4,4] _t333E#1 = Subscript<tensor[4,4][4]>(_t333C,_t327F);
      tensor[4] _t3340#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t333E,_t332C);
      real _t3342#1 = TensorIndex<tensor[4],[1]>(_t3340);
      tensor[4,4][4] _t3344#1 = <tensor[4,4][4]>{_t328F,_t329F,_t32A3,_t32A5};
      tensor[4,4][4] _t3346#1 = <tensor[4,4][4]>{_t32B1,_t32B3,_t32B7,_t32B9};
      tensor[4,4][4] _t3348#1 = <tensor[4,4][4]>{_t32C3,_t32C7,_t32B3,_t32C9};
      tensor[4,4][4] _t334A#1 = <tensor[4,4][4]>{_t32D3,_t32D5,_t32D9,_t32B3};
      tensor[4,4][4][4] _t334C#1 = <tensor[4,4][4][4]>{_t3344,_t3346,_t3348,_t334A};
      tensor[4,4][4] _t334E#1 = Subscript<tensor[4,4][4][4]>(_t334C,_t325C);
      tensor[4,4] _t3350#1 = Subscript<tensor[4,4][4]>(_t334E,_t327F);
      tensor[4] _t3352#1 = λ(T0[4 4],T1[4])<Σ(i1=0..3)<((T0_{i0,i1} * T1_{i1}))>(i1=0..3)>_{4} (_t3350,_t332C);
      real _t3354#1 = TensorIndex<tensor[4],[2]>(_t3352);
      tensor[3] _t3356#1 = <tensor[3]>[_t3330,_t3342,_t3354];
      femData:MeshPos _t3358#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t2E0D,_t3274,_t3356,_t327F);
      goto JOIN335B
    JOIN335B:  preds = [ASSIGN3359,ASSIGN33AC]
      femData:MeshPos nmp2ED6#3 = phi(_t3358,_t335A)
      bool _t335C#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp2ED6);
      bool _t335E#1 = BNot(_t335C);
      if _t335E then goto ASSIGN3362 else goto ASSIGN336A
    ASSIGN3362:  preds = [COND3360]
      bool _t3361#1 = true;
      goto JOIN3365
    JOIN3365:  preds = [ASSIGN3362,JOIN336F]
      bool _t3363#1 = phi(_t3361,_t3364)
      if _t3363 then goto RETURN(nmp2ED6)3367 else goto JOIN3368
    RETURN(nmp2ED6)3367:  preds = [COND3366]
      return nmp2ED6
      goto JOIN3368
    JOIN3368:  preds = [*RETURN(nmp2ED6)3367,COND3366]
      goto JOIN2ED9
    ASSIGN336A:  preds = [COND3360]
      bool _t3369#1 = LT<real>(eTime310F,_t2F6D);
      if _t3369 then goto ASSIGN336D else goto ASSIGN3371
    ASSIGN336D:  preds = [COND336B]
      bool _t336C#1 = true;
      goto JOIN336F
    JOIN336F:  preds = [ASSIGN336D,JOIN3376]
      bool _t3364#1 = phi(_t336C,_t336E)
      goto JOIN3365
    ASSIGN3371:  preds = [COND336B]
      bool _t3370#1 = GT<real>(eTime310F,time2E05);
      if _t3370 then goto ASSIGN3374 else goto ASSIGN3377
    ASSIGN3374:  preds = [COND3372]
      bool _t3373#1 = true;
      goto JOIN3376
    JOIN3376:  preds = [ASSIGN3374,ASSIGN3377]
      bool _t336E#1 = phi(_t3373,_t3375)
      goto JOIN336F
    ASSIGN3377:  preds = [COND3372]
      bool _t3375#1 = LT<real>(time2ED8,timeEps2DFC);
      goto JOIN3376
    ASSIGN3379:  preds = [COND3278]
      real _t3378#1 = TensorIndex<tensor[2],[0]>(_t3257);
      tensor[3] op1_e3_l_223388#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t3378,time2E1B,op1_e3_l_202F32);
      tensor[3] _t337A#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (_t3116,op1_e3_l_223388);
      femData:MeshPos _t335A#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t2E0D,_t337A);
      goto JOIN335B
    ASSIGN33AE:  preds = [COND3250]
      bool _t33AD#1 = EQ<real>(faceTime2EE1,faceTime324A);
      if _t33AD then goto ASSIGN33B1 else goto ASSIGN33B5
    ASSIGN33B1:  preds = [COND33AF]
      tensor[2] _t33B0#1 = <tensor[2]>[_t2FF5,_t2FF5];
      goto JOIN33B3
    JOIN33B3:  preds = [ASSIGN33B1,ASSIGN33B6]
      tensor[2] _t3258#1 = phi(_t33B0,_t33B2)
      goto JOIN3259
    ASSIGN33B5:  preds = [COND33AF]
      real _t33B4#1 = IntToReal(_t2EDB);
      tensor[2] _t33B2#1 = <tensor[2]>[faceTime324A,_t33B4];
      goto JOIN33B3
    ASSIGN33B8:  preds = [COND3105]
      bool _t33B7#1 = EQ<real>(faceTime2EE1,faceTime30FF);
      if _t33B7 then goto ASSIGN33BB else goto ASSIGN33BF
    ASSIGN33BB:  preds = [COND33B9]
      tensor[2] _t33BA#1 = <tensor[2]>[_t2FF5,_t2FF5];
      goto JOIN33BD
    JOIN33BD:  preds = [ASSIGN33BB,ASSIGN33C0]
      tensor[2] _t310D#1 = phi(_t33BA,_t33BC)
      goto JOIN310E
    ASSIGN33BF:  preds = [COND33B9]
      real _t33BE#1 = IntToReal(_t2EDB);
      tensor[2] _t33BC#1 = <tensor[2]>[faceTime30FF,_t33BE];
      goto JOIN33BD
    ASSIGN33C2:  preds = [FOREACH2E0C]
      string _t33C1#1 = "Took stupid way out!\n";
      Print<[string]>(_t33C1);
      tensor[3] _t33C4#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x2DF5);
      int _t33C6#2 = ExtractFemItem<int,CellIndex(MeshPos)>(x2DF5);
      femData:Mesh _t33C8#3 = ExtractFem<femData:Mesh,femData:MeshPos>(x2DF5);
      int[4] femIndicies33CD#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t33C8,_t33C6);
      tensor[4,3] femDofs33CE#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t33C8,femIndicies33CD);
      tensor[4] basisResult33CF#1 = EvaluateBasis<BasisArray(4)>(_t33C4);
      tensor[3] probe_l_533CB#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t33C6,_t33C8,_t33C4,femDofs33CE,basisResult33CF,_t33C4);
      tensor[3] _t33CA#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (dPos2DF6,probe_l_533CB);
      femData:MeshPos cmp33D6#1 = findPos2C4C (meshData2DF8,_t33CA);
      return cmp33D6
}
## input initialization
  ENTRY2C03:  preds = []
    int timeSteps2C04#1 = 32;
    globals.timeSteps2BFB = timeSteps2C04;
    real timeEps2C07#1 = 0.1e-6;
    globals.timeEps2BFC = timeEps2C07;
    real stepSize2C0A#1 = 0.1e-1;
    globals.stepSize2BFE = stepSize2C0A;
    int stepMax2C0D#1 = 100;
    globals.stepMax2BFF = stepMax2C0D;
    return
## global-variable initialization
  ENTRY2C11:  preds = []
    femData:Mesh meshData2C12#3 = globals.meshData2BF8;
    femData:Space 0space03AB_intermedateGlobal2C14#1 = globals.0space03AB_intermedateGlobal2BF9;
    femData:FemFunc 0data03AD_intermedateGlobal2C16#1 = globals.0data03AD_intermedateGlobal2BFA;
    int _t2C18#1 = 0;
    int _t2C1A#1 = 1;
    int _t2C1C#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData2C12);
    int _t2C1E#1 = ISub(_t2C1C,_t2C1A);
    int[] _t2C20#1 = Range(_t2C18,_t2C1E);
    femData:MeshCell[] _t2C22#1 = <femData:MeshCell[]>{};
  FOREACH2C25:  preds = [ASSIGN2C23,NEXT2C2B]
    foreach (_t2C24 in _t2C20) on exit goto ASSIGN2C2D
      femData:MeshCell[] _t2C29#1 = phi(_t2C22,_t2C28)
    femData:MeshCell _t2C26#1 = LoadFem<femData:MeshCell>(meshData2C12,_t2C24);
    femData:MeshCell[] _t2C28#1 = Append<femData:MeshCell>(_t2C29,_t2C26);
    goto FOREACH2C25
  ASSIGN2C2D:  preds = [FOREACH2C25]
    femData:Space space2C2C#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal2C14,meshData2C12);
    femData:FemFunc data2C2E#2 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal2C16,space2C2C);
    globals.data2C00 = data2C2E;
    femData:Space _t2C31#2 = ExtractFem<femData:Space,femData:FemFunc>(data2C2E);
    femData:Mesh _t2C33#1 = ExtractFem<femData:Mesh,femData:Space>(_t2C31);
    globals._t2C01 = _t2C33;
    globals._tX2C02 = _t2C31;
    return
## strand
  strand gg (tensor[3] startPos2C38#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY2C3F:  preds = []
        femData:Mesh meshData2C40#1 = globals.meshData2BF8;
        tensor[3][1] _t2C42#1 = <tensor[3][1]>{startPos2C38};
        tensor[3][] _t2C44#1 = MkDynamic<tensor[3],1>(_t2C42);
        tensor[3][1] _t2C46#1 = <tensor[3][1]>{startPos2C38};
        tensor[3][] _t2C48#1 = MkDynamic<tensor[3],1>(_t2C46);
        int step2C4A#1 = 0;
        femData:MeshPos cPos2D7C#1 = findPos2C4C (meshData2C40,startPos2C38);
        self.stream = _t2C44;
        self.newStream = _t2C48;
        self.step = step2C4A;
        self.cPos = cPos2D7C;
        self.altCPos = startPos2C38;
        self.startPos = startPos2C38;
        return
    end state init
    method update
        ENTRY2D85:  preds = []
          femData:Mesh _t2D86#4 = globals._t2C01;
          femData:Space _t2D88#4 = globals._tX2C02;
          femData:FemFunc data2D8A#6 = globals.data2C00;
          femData:Mesh meshData2D8C#2 = globals.meshData2BF8;
          real stepSize2D90#4 = globals.stepSize2BFE;
          int stepMax2D92#1 = globals.stepMax2BFF;
          tensor[3][] stream2D94#2 = self.stream;
          tensor[3][] newStream2D96#1 = self.newStream;
          int step2D98#3 = self.step;
          femData:MeshPos cPos2D9A#6 = self.cPos;
          tensor[3] altCPos2D9C#6 = self.altCPos;
          tensor[3] startPos2D9E#1 = self.startPos;
          bool _t2DA0#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos2D9A);
          bool _t2DA2#1 = BNot(_t2DA0);
          if _t2DA2 then goto ASSIGN2DA6 else goto ASSIGN34DD
        ASSIGN2DA6:  preds = [COND2DA4]
          bool _t2DA5#1 = true;
          goto JOIN2DA9
        JOIN2DA9:  preds = [ASSIGN2DA6,JOIN34E6]
          bool _t2DA7#1 = phi(_t2DA5,_t2DA8)
          if _t2DA7 then goto STABILIZE2DAB else goto JOIN2DAC
        STABILIZE2DAB:  preds = [COND2DAA]
          stabilize
          goto JOIN2DAC
        JOIN2DAC:  preds = [*STABILIZE2DAB,COND2DAA]
          tensor[3] _t2DAD#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos2D9A);
          int _t2DAF#4 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos2D9A);
          femData:Mesh _t2DB1#5 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos2D9A);
          int[4] femIndicies2DB8#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t2DB1,_t2DAF);
          tensor[4,3] femDofs2DB9#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t2DB1,femIndicies2DB8);
          tensor[4] basisResult2DBA#1 = EvaluateBasis<BasisArray(4)>(_t2DAD);
          tensor[3] probe_l_52DB4#1 = λ(INT0,FEM(mesh_t)1,T2[3],T3[4 3],T4[4],T5[3])<Σ(i1=0..3)<((T3_{i1,i0} * T4_{i1}))>(i1=0..3)>_{3} (_t2DAF,_t2DB1,_t2DAD,femDofs2DB9,basisResult2DBA,_t2DAD);
          tensor[3] op1_e3_l_72DB5#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (altCPos2D9C,probe_l_52DB4);
          real op1_e3_l_92DB6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_72DB5,op1_e3_l_72DB5);
          real _t2DB3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_92DB6);
          real _t2DC3#1 = 0.1e-5;
          bool _t2DC5#1 = GT<real>(_t2DB3,_t2DC3);
          if _t2DC5 then goto ASSIGN2DC9 else goto ASSIGN34D6
        ASSIGN2DC9:  preds = [COND2DC7]
          string _t2DC8#1 = "Error in tracing: At step:";
          string _t2DCA#1 = " with particle:";
          string _t2DCC#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t2DC8,step2D98,_t2DCA,startPos2D9E,_t2DCC);
          goto JOIN2DCF
        JOIN2DCF:  preds = [MASSIGN2DCE,MASSIGN34DB]
          real _t2DD0#2 = 0.5e0;
          if _t2DA0 then goto ASSIGN2DD4 else goto ASSIGN34D4
        ASSIGN2DD4:  preds = [COND2DD2]
          femData:MeshCell c2DD3#1 = LoadFem<femData:MeshCell>(_t2DB1,_t2DAF);
          int _t2DD5#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c2DD3);
          femData:FuncCell _t2DD7#2 = LoadFem<femData:FuncCell>(data2D8A,_t2DD5);
          femData:FemFunc _t2DD9#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t2DD7);
          femData:Space _t2DDB#2 = ExtractFem<femData:Space,femData:FemFunc>(_t2DD9);
          int _t2DDD#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t2DD7);
          int[10] femIndicies2DE4#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2DDB,_t2DDD);
          tensor[10,3] femDofs2DE5#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t2DD9,femIndicies2DE4);
          tensor[10] basisResult2DE6#1 = EvaluateBasis<BasisArray(10)>(_t2DAD);
          tensor[3] probe_l_82DE0#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2DDD,_t2DDB,_t2DD9,_t2DAD,femDofs2DE5,basisResult2DE6,_t2DAD);
          real op1_e3_l_112DE1#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_82DE0,probe_l_82DE0);
          real op1_e3_l_122DE2#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_112DE1);
          tensor[3] _t2DDF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_82DE0,op1_e3_l_122DE2);
          goto JOIN2DF1
        JOIN2DF1:  preds = [ASSIGN2DEE,ASSIGN34D4]
          tensor[3] _t2DEF#1 = phi(_t2DDF,_t2DF0)
          tensor[3] up12DF2#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2DD0,stepSize2D90,_t2DEF);
          femData:MeshPos intermed33D9#4 = posMove2DF4 (cPos2D9A,up12DF2);
          femData:MeshPos callFindPos33E6#2 = findPos2C4C (_t2D86,altCPos2D9C);
          int intPos33E7#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos33E6);
          tensor[3] refPos33E8#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos33E6);
          int[10] femIndicies33ED#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos33E7);
          tensor[10,3] femDofs33EE#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies33ED);
          tensor[10] basisResult33EF#1 = EvaluateBasis<BasisArray(10)>(refPos33E8);
          tensor[3] compositionl33DD#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,altCPos2D9C,femDofs33EE,basisResult33EF,refPos33E8);
          real op1_e3_l_2033E2#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl33DD,compositionl33DD);
          tensor[3] op1_e3_l_2133E3#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (_t2DD0,stepSize2D90,compositionl33DD);
          real op1_e3_l_2233E4#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2033E2);
          tensor[3] op1_e3_l_2333E5#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2133E3,op1_e3_l_2233E4);
          tensor[3] altIntermed33DB#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2D9C,op1_e3_l_2333E5);
          bool _t3421#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed33D9);
          bool _t3423#1 = BNot(_t3421);
          if _t3423 then goto ASSIGN3427 else goto ASSIGN34D0
        ASSIGN3427:  preds = [COND3425]
          bool _t3426#1 = true;
          goto JOIN342A
        JOIN342A:  preds = [ASSIGN3427,ASSIGN34D3]
          bool _t3428#1 = phi(_t3426,_t3429)
          if _t3428 then goto STABILIZE342C else goto JOIN342D
        STABILIZE342C:  preds = [COND342B]
          stabilize
          goto JOIN342D
        JOIN342D:  preds = [*STABILIZE342C,COND342B]
          if _t3421 then goto ASSIGN3430 else goto ASSIGN34CE
        ASSIGN3430:  preds = [COND342E]
          femData:Mesh _t342F#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed33D9);
          int _t3431#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed33D9);
          femData:MeshCell c3433#1 = LoadFem<femData:MeshCell>(_t342F,_t3431);
          tensor[3] ref3435#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed33D9);
          int _t3437#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3433);
          femData:FuncCell _t3439#2 = LoadFem<femData:FuncCell>(data2D8A,_t3437);
          femData:FemFunc _t343B#3 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3439);
          femData:Space _t343D#2 = ExtractFem<femData:Space,femData:FemFunc>(_t343B);
          int _t343F#2 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3439);
          int[10] femIndicies3446#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t343D,_t343F);
          tensor[10,3] femDofs3447#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(_t343B,femIndicies3446);
          tensor[10] basisResult3448#1 = EvaluateBasis<BasisArray(10)>(ref3435);
          tensor[3] probe_l_83442#3 = λ(INT0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t343F,_t343D,_t343B,ref3435,femDofs3447,basisResult3448,ref3435);
          real op1_e3_l_113443#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (probe_l_83442,probe_l_83442);
          real op1_e3_l_123444#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_113443);
          tensor[3] _t3441#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (probe_l_83442,op1_e3_l_123444);
          goto JOIN3453
        JOIN3453:  preds = [ASSIGN3450,ASSIGN34CE]
          tensor[3] _t3451#1 = phi(_t3441,_t3452)
          tensor[3] up23454#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2D90,_t3451);
          femData:MeshPos cPos3456#6 = posMove2DF4 (cPos2D9A,up23454);
          femData:MeshPos callFindPos3463#2 = findPos2C4C (_t2D86,altIntermed33DB);
          int intPos3464#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos3463);
          tensor[3] refPos3465#2 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos3463);
          int[10] femIndicies346A#1 = ExtractFemItem2<int,int[10],ExtractIndices(Space)>(_t2D88,intPos3464);
          tensor[10,3] femDofs346B#1 = ExtractFemItem2<int[10],tensor[10,3],ExtractDofsSeq(FemFunc)>(data2D8A,femIndicies346A);
          tensor[10] basisResult346C#1 = EvaluateBasis<BasisArray(10)>(refPos3465);
          tensor[3] compositionl345A#3 = λ(FEM(mesh_t)0,FEM(fns_t)1,FEM(func_t)2,T3[3],T4[10 3],T5[10],T6[3])<Σ(i1=0..9)<((T4_{i1,i0} * T5_{i1}))>(i1=0..9)>_{3} (_t2D86,_t2D88,data2D8A,altIntermed33DB,femDofs346B,basisResult346C,refPos3465);
          real op1_e3_l_19345F#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (compositionl345A,compositionl345A);
          tensor[3] op1_e3_l_203460#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (stepSize2D90,compositionl345A);
          real op1_e3_l_213461#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_19345F);
          tensor[3] op1_e3_l_223462#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_203460,op1_e3_l_213461);
          tensor[3] altCPos3458#3 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (altCPos2D9C,op1_e3_l_223462);
          bool _t349E#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos3456);
          bool _t34A0#1 = BNot(_t349E);
          if _t34A0 then goto MASSIGN34A3 else goto JOIN34A7
        MASSIGN34A3:  preds = [COND34A2]
          Print<[tensor[3][]]>(stream2D94);
          self.cPos = cPos3456;
          self.altCPos = altCPos3458;
          stabilize
          goto JOIN34A7
        JOIN34A7:  preds = [*STABILIZE34A6,COND34A2]
          tensor[3] _t34A8#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos3456);
          int _t34AA#2 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos3456);
          femData:Mesh _t34AC#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos3456);
          int[4] femIndicies34B0#1 = ExtractFemItem2<int,int[4],ExtractIndices(Mesh)>(_t34AC,_t34AA);
          tensor[4,3] femDofs34B1#1 = ExtractFemItem2<int[4],tensor[4,3],ExtractDofsSeq(Mesh)>(_t34AC,femIndicies34B0);
          tensor[4] basisResult34B2#1 = EvaluateBasis<BasisArray(4)>(_t34A8);
          tensor[3] _t34AE#1 = λ(INT0,FEM(mesh_t)1,FEM(mesh_t)2,T3[3],T4[4 3],T5[4],T6[3])<Σ(i1=0..3)<((T4_{i1,i0} * T5_{i1}))>(i1=0..3)>_{3} (_t34AA,_t34AC,_t34AC,_t34A8,femDofs34B1,basisResult34B2,_t34A8);
          tensor[3][1] _t34B8#1 = <tensor[3][1]>{_t34AE};
          tensor[3][] _t34BA#1 = MkDynamic<tensor[3],1>(_t34B8);
          tensor[3][] stream34BC#1 = Concat<tensor[3]>(stream2D94,_t34BA);
          tensor[3][1] _t34BE#1 = <tensor[3][1]>{altCPos3458};
          tensor[3][] _t34C0#1 = MkDynamic<tensor[3],1>(_t34BE);
          tensor[3][] newStream34C2#1 = Concat<tensor[3]>(newStream2D96,_t34C0);
          int _t34C4#1 = 1;
          int step34C6#1 = IAdd(step2D98,_t34C4);
          self.stream = stream34BC;
          self.newStream = newStream34C2;
          self.step = step34C6;
          self.cPos = cPos3456;
          self.altCPos = altCPos3458;
          active
        ASSIGN34CE:  preds = [COND342E]
          tensor[3] _t3452#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN3453
        ASSIGN34D0:  preds = [COND3425]
          femData:MeshPos _t34CF#1 = findPos2C4C (meshData2D8C,altIntermed33DB);
          bool _t34D1#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t34CF);
          bool _t3429#1 = BNot(_t34D1);
          goto JOIN342A
        ASSIGN34D4:  preds = [COND2DD2]
          tensor[3] _t2DF0#1 = λ()<Z_{i0}>_{3} ();
          goto JOIN2DF1
        ASSIGN34D6:  preds = [COND2DC7]
          string _t34D5#1 = "fine in cell:";
          femData:MeshCell _t34D7#1 = LoadFem<femData:MeshCell>(_t2DB1,_t2DAF);
          string _t34D9#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t34D5,_t34D7,_t34D9);
          goto JOIN2DCF
        ASSIGN34DD:  preds = [COND2DA4]
          femData:MeshPos _t34DC#1 = findPos2C4C (meshData2D8C,altCPos2D9C);
          bool _t34DE#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t34DC);
          bool _t34E0#1 = BNot(_t34DE);
          if _t34E0 then goto ASSIGN34E4 else goto ASSIGN34E7
        ASSIGN34E4:  preds = [COND34E2]
          bool _t34E3#1 = true;
          goto JOIN34E6
        JOIN34E6:  preds = [ASSIGN34E4,ASSIGN34E7]
          bool _t2DA8#1 = phi(_t34E3,_t34E5)
          goto JOIN2DA9
        ASSIGN34E7:  preds = [COND34E2]
          bool _t34E5#1 = EQ<int>(step2D98,stepMax2D92);
          goto JOIN34E6
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY34E8:  preds = []
      tensor[3][] startPoints34E9#1 = globals.startPoints2BFD;
    FOREACH34EC:  preds = [ASSIGN34EA,NEXT34EE]
      foreach (x34EB in startPoints34E9) on exit goto RETURN34EF
      new gg(x34EB);
      goto FOREACH34EC
    RETURN34EF:  preds = [FOREACH34EC]
      return
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData351F (meshData) = <no-default>
  input 0space03AB_intermedateGlobal3520 (space) = <no-default>
  input 0data03AD_intermedateGlobal3521 (data) = <no-default>
  input timeSteps3522 (timeSteps) = <default>
  input timeEps3523 (timeEps) = <default>
  input startPoints3524 (startPoints) = <no-default>
  input stepSize3525 (stepSize) = <default>
  input stepMax3526 (stepMax) = <default>
  global femData:FemFunc data3527
  global femData:Mesh _t3528
  global femData:Space _tX3529
## functions
  function femData:MeshPos findPos3574 (femData:Mesh mesh3575#19, tensor[3] pos3576#4) {
    ENTRY3577:  preds = []
      real _t3578#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn357A#4 = <tensor[3]>[_t3578,_t3578,_t3578];
      int newtonInt357C#1 = 0;
      int[] yayCells357E#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3575,pos3576);
    FOREACH3581:  preds = [ASSIGN357F,NEXT3CB5]
      foreach (cellItter3580 in yayCells357E) on exit goto ASSIGN3CB7
      int _t3582#1 = 16;
      int[] _t3584#1 = Range(newtonInt357C,_t3582);
    FOREACH3587:  preds = [ASSIGN3585,NEXT3CB4]
      foreach (newtonItter3586 in _t3584) on exit goto NEXT3CB5
        tensor[3] xn3B56#4 = phi(xn357A,xn3C1A)
      int ilit3589#1 = 4;
      int mulRes358A#4 = IMul(cellItter3580,ilit3589);
      int ilit358B#1 = 0;
      int addRes358C#1 = IAdd(mulRes358A,ilit358B);
      int idx358D#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes358C);
      int ilit358E#1 = 1;
      int addRes358F#1 = IAdd(mulRes358A,ilit358E);
      int idx3590#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes358F);
      int ilit3591#1 = 2;
      int addRes3592#1 = IAdd(mulRes358A,ilit3591);
      int idx3593#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes3592);
      int ilit3594#1 = 3;
      int addRes3595#1 = IAdd(mulRes358A,ilit3594);
      int idx3596#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes3595);
      int[4] seq3597#1 = <int[4]>{idx358D,idx3590,idx3593,idx3596};
      int[4] femIndicies3588#4 = seq3597;
      int ilit35A9#5 = 0;
      int ilit35AA#5 = 3;
      int idx35AB#1 = Subscript<int>(femIndicies3588,ilit35A9);
      int mulRes35AC#3 = IMul(ilit35AA,idx35AB);
      int addRes35AD#1 = IAdd(ilit35A9,mulRes35AC);
      int ilit35AE#5 = 1;
      int addRes35AF#1 = IAdd(ilit35AE,mulRes35AC);
      int ilit35B0#5 = 2;
      int addRes35B1#1 = IAdd(ilit35B0,mulRes35AC);
      real dof_load35B2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35AD);
      real dof_load35B3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35AF);
      real dof_load35B4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B1);
      tensor[3] interCons35B5#1 = <tensor[3]>[dof_load35B2,dof_load35B3,dof_load35B4];
      int idx35B6#1 = Subscript<int>(femIndicies3588,ilit35AE);
      int mulRes35B7#3 = IMul(ilit35AA,idx35B6);
      int addRes35B8#1 = IAdd(ilit35A9,mulRes35B7);
      int addRes35B9#1 = IAdd(ilit35AE,mulRes35B7);
      int addRes35BA#1 = IAdd(ilit35B0,mulRes35B7);
      real dof_load35BB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B8);
      real dof_load35BC#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B9);
      real dof_load35BD#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35BA);
      tensor[3] interCons35BE#1 = <tensor[3]>[dof_load35BB,dof_load35BC,dof_load35BD];
      int idx35BF#1 = Subscript<int>(femIndicies3588,ilit35B0);
      int mulRes35C0#3 = IMul(ilit35AA,idx35BF);
      int addRes35C1#1 = IAdd(ilit35A9,mulRes35C0);
      int addRes35C2#1 = IAdd(ilit35AE,mulRes35C0);
      int addRes35C3#1 = IAdd(ilit35B0,mulRes35C0);
      real dof_load35C4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C1);
      real dof_load35C5#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C2);
      real dof_load35C6#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C3);
      tensor[3] interCons35C7#1 = <tensor[3]>[dof_load35C4,dof_load35C5,dof_load35C6];
      int idx35C8#1 = Subscript<int>(femIndicies3588,ilit35AA);
      int mulRes35C9#3 = IMul(ilit35AA,idx35C8);
      int addRes35CA#1 = IAdd(ilit35A9,mulRes35C9);
      int addRes35CB#1 = IAdd(ilit35AE,mulRes35C9);
      int addRes35CC#1 = IAdd(ilit35B0,mulRes35C9);
      real dof_load35CD#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CA);
      real dof_load35CE#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CB);
      real dof_load35CF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CC);
      tensor[3] interCons35D0#1 = <tensor[3]>[dof_load35CD,dof_load35CE,dof_load35CF];
      tensor[4,3] dofs35D1#1 = <tensor[4,3]>[interCons35B5,interCons35BE,interCons35C7,interCons35D0];
      tensor[4,3] femDofs35A8#72 = dofs35D1;
      real varAcc35FD#0 = VIndex<3,0>(xn357A);
      real varAcc35FE#0 = VIndex<3,1>(xn357A);
      real varAcc35FF#0 = VIndex<3,2>(xn357A);
      real coeff3600#1 = -0.1e1;
      real one3601#4 = 0.1e1;
      real prod3602#1 = RMul(one3601,one3601);
      real prod3603#2 = RMul(one3601,prod3602);
      real basisEval3604#3 = RMul(coeff3600,prod3603);
      real basisEval3605#3 = RMul(one3601,prod3603);
      real basisEval3606#6 = 0.e0;
      tensor[4] intermediateCons3607#1 = <tensor[4]>[basisEval3604,basisEval3605,basisEval3606,basisEval3606];
      tensor[4] intermediateCons3608#1 = <tensor[4]>[basisEval3604,basisEval3606,basisEval3605,basisEval3606];
      tensor[4] intermediateCons3609#1 = <tensor[4]>[basisEval3604,basisEval3606,basisEval3606,basisEval3605];
      tensor[3,4] intermediateCons360A#1 = <tensor[3,4]>[intermediateCons3607,intermediateCons3608,intermediateCons3609];
      tensor[3,4] basisResult35FC#24 = intermediateCons360A;
      real r361B#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs35A8);
      real r361C#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult35FC);
      real r361D#1 = RMul(r361B,r361C);
      real r361E#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs35A8);
      real r361F#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult35FC);
      real r3620#1 = RMul(r361E,r361F);
      real r3621#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs35A8);
      real r3622#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult35FC);
      real r3623#1 = RMul(r3621,r3622);
      real r3624#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs35A8);
      real r3625#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult35FC);
      real r3626#1 = RMul(r3624,r3625);
      real r3627#1 = RAdd(r361D,r3620);
      real r3628#1 = RAdd(r3627,r3623);
      real r3629#1 = RAdd(r3628,r3626);
      real r362A#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult35FC);
      real r362B#1 = RMul(r361B,r362A);
      real r362C#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult35FC);
      real r362D#1 = RMul(r361E,r362C);
      real r362E#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult35FC);
      real r362F#1 = RMul(r3621,r362E);
      real r3630#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult35FC);
      real r3631#1 = RMul(r3624,r3630);
      real r3632#1 = RAdd(r362B,r362D);
      real r3633#1 = RAdd(r3632,r362F);
      real r3634#1 = RAdd(r3633,r3631);
      real r3635#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult35FC);
      real r3636#1 = RMul(r361B,r3635);
      real r3637#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult35FC);
      real r3638#1 = RMul(r361E,r3637);
      real r3639#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult35FC);
      real r363A#1 = RMul(r3621,r3639);
      real r363B#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult35FC);
      real r363C#1 = RMul(r3624,r363B);
      real r363D#1 = RAdd(r3636,r3638);
      real r363E#1 = RAdd(r363D,r363A);
      real r363F#1 = RAdd(r363E,r363C);
      tensor[3] tensor3640#1 = <tensor[3]>[r3629,r3634,r363F];
      real r3641#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs35A8);
      real r3642#1 = RMul(r3641,r361C);
      real r3643#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs35A8);
      real r3644#1 = RMul(r3643,r361F);
      real r3645#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs35A8);
      real r3646#1 = RMul(r3645,r3622);
      real r3647#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs35A8);
      real r3648#1 = RMul(r3647,r3625);
      real r3649#1 = RAdd(r3642,r3644);
      real r364A#1 = RAdd(r3649,r3646);
      real r364B#1 = RAdd(r364A,r3648);
      real r364C#1 = RMul(r3641,r362A);
      real r364D#1 = RMul(r3643,r362C);
      real r364E#1 = RMul(r3645,r362E);
      real r364F#1 = RMul(r3647,r3630);
      real r3650#1 = RAdd(r364C,r364D);
      real r3651#1 = RAdd(r3650,r364E);
      real r3652#1 = RAdd(r3651,r364F);
      real r3653#1 = RMul(r3641,r3635);
      real r3654#1 = RMul(r3643,r3637);
      real r3655#1 = RMul(r3645,r3639);
      real r3656#1 = RMul(r3647,r363B);
      real r3657#1 = RAdd(r3653,r3654);
      real r3658#1 = RAdd(r3657,r3655);
      real r3659#1 = RAdd(r3658,r3656);
      tensor[3] tensor365A#1 = <tensor[3]>[r364B,r3652,r3659];
      real r365B#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs35A8);
      real r365C#1 = RMul(r365B,r361C);
      real r365D#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs35A8);
      real r365E#1 = RMul(r365D,r361F);
      real r365F#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs35A8);
      real r3660#1 = RMul(r365F,r3622);
      real r3661#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs35A8);
      real r3662#1 = RMul(r3661,r3625);
      real r3663#1 = RAdd(r365C,r365E);
      real r3664#1 = RAdd(r3663,r3660);
      real r3665#1 = RAdd(r3664,r3662);
      real r3666#1 = RMul(r365B,r362A);
      real r3667#1 = RMul(r365D,r362C);
      real r3668#1 = RMul(r365F,r362E);
      real r3669#1 = RMul(r3661,r3630);
      real r366A#1 = RAdd(r3666,r3667);
      real r366B#1 = RAdd(r366A,r3668);
      real r366C#1 = RAdd(r366B,r3669);
      real r366D#1 = RMul(r365B,r3635);
      real r366E#1 = RMul(r365D,r3637);
      real r366F#1 = RMul(r365F,r3639);
      real r3670#1 = RMul(r3661,r363B);
      real r3671#1 = RAdd(r366D,r366E);
      real r3672#1 = RAdd(r3671,r366F);
      real r3673#1 = RAdd(r3672,r3670);
      tensor[3] tensor3674#1 = <tensor[3]>[r3665,r366C,r3673];
      tensor[3,3] probe_l_10361A#18 = <tensor[3,3]>[tensor3640,tensor365A,tensor3674];
      real realLit36D2#9 = 0.e0;
      real r36D3#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_10361A);
      real r36D4#3 = RMul(realLit36D2,r36D3);
      real r36D5#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_10361A);
      real r36D6#3 = RMul(realLit36D2,r36D5);
      real r36D7#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_10361A);
      real r36D8#5 = RMul(realLit36D2,r36D7);
      real r36D9#3 = RAdd(r36D4,r36D6);
      real r36DA#1 = RAdd(r36D9,r36D8);
      real r36DB#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_10361A);
      real r36DC#3 = RMul(realLit36D2,r36DB);
      real r36DD#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_10361A);
      real r36DE#3 = RMul(realLit36D2,r36DD);
      real r36DF#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_10361A);
      real r36E0#5 = RMul(realLit36D2,r36DF);
      real r36E1#3 = RAdd(r36DC,r36DE);
      real r36E2#1 = RAdd(r36E1,r36E0);
      real r36E3#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_10361A);
      real r36E4#3 = RMul(realLit36D2,r36E3);
      real r36E5#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_10361A);
      real r36E6#3 = RMul(realLit36D2,r36E5);
      real r36E7#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_10361A);
      real r36E8#5 = RMul(realLit36D2,r36E7);
      real r36E9#3 = RAdd(r36E4,r36E6);
      real r36EA#1 = RAdd(r36E9,r36E8);
      tensor[3] tensor36EB#3 = <tensor[3]>[r36DA,r36E2,r36EA];
      real realLit36EC#9 = -0.1e1;
      real r36ED#1 = RMul(realLit36EC,r36D7);
      real r36EE#1 = RAdd(r36D9,r36ED);
      real r36EF#1 = RMul(realLit36EC,r36DF);
      real r36F0#1 = RAdd(r36E1,r36EF);
      real r36F1#1 = RMul(realLit36EC,r36E7);
      real r36F2#1 = RAdd(r36E9,r36F1);
      tensor[3] tensor36F3#1 = <tensor[3]>[r36EE,r36F0,r36F2];
      real realLit36F4#9 = 0.1e1;
      real r36F5#1 = RMul(realLit36F4,r36D5);
      real r36F6#1 = RAdd(r36D4,r36F5);
      real r36F7#1 = RAdd(r36F6,r36D8);
      real r36F8#1 = RMul(realLit36F4,r36DD);
      real r36F9#1 = RAdd(r36DC,r36F8);
      real r36FA#1 = RAdd(r36F9,r36E0);
      real r36FB#1 = RMul(realLit36F4,r36E5);
      real r36FC#1 = RAdd(r36E4,r36FB);
      real r36FD#1 = RAdd(r36FC,r36E8);
      tensor[3] tensor36FE#1 = <tensor[3]>[r36F7,r36FA,r36FD];
      tensor[3,3] tensor36FF#1 = <tensor[3,3]>[tensor36EB,tensor36F3,tensor36FE];
      real r3700#1 = RMul(realLit36F4,r36D7);
      real r3701#1 = RAdd(r36D9,r3700);
      real r3702#1 = RMul(realLit36F4,r36DF);
      real r3703#1 = RAdd(r36E1,r3702);
      real r3704#1 = RMul(realLit36F4,r36E7);
      real r3705#1 = RAdd(r36E9,r3704);
      tensor[3] tensor3706#1 = <tensor[3]>[r3701,r3703,r3705];
      real r3707#1 = RMul(realLit36EC,r36D3);
      real r3708#1 = RAdd(r3707,r36D6);
      real r3709#1 = RAdd(r3708,r36D8);
      real r370A#1 = RMul(realLit36EC,r36DB);
      real r370B#1 = RAdd(r370A,r36DE);
      real r370C#1 = RAdd(r370B,r36E0);
      real r370D#1 = RMul(realLit36EC,r36E3);
      real r370E#1 = RAdd(r370D,r36E6);
      real r370F#1 = RAdd(r370E,r36E8);
      tensor[3] tensor3710#1 = <tensor[3]>[r3709,r370C,r370F];
      tensor[3,3] tensor3711#1 = <tensor[3,3]>[tensor3706,tensor36EB,tensor3710];
      real r3712#1 = RMul(realLit36EC,r36D5);
      real r3713#1 = RAdd(r36D4,r3712);
      real r3714#1 = RAdd(r3713,r36D8);
      real r3715#1 = RMul(realLit36EC,r36DD);
      real r3716#1 = RAdd(r36DC,r3715);
      real r3717#1 = RAdd(r3716,r36E0);
      real r3718#1 = RMul(realLit36EC,r36E5);
      real r3719#1 = RAdd(r36E4,r3718);
      real r371A#1 = RAdd(r3719,r36E8);
      tensor[3] tensor371B#1 = <tensor[3]>[r3714,r3717,r371A];
      real r371C#1 = RMul(realLit36F4,r36D3);
      real r371D#1 = RAdd(r371C,r36D6);
      real r371E#1 = RAdd(r371D,r36D8);
      real r371F#1 = RMul(realLit36F4,r36DB);
      real r3720#1 = RAdd(r371F,r36DE);
      real r3721#1 = RAdd(r3720,r36E0);
      real r3722#1 = RMul(realLit36F4,r36E3);
      real r3723#1 = RAdd(r3722,r36E6);
      real r3724#1 = RAdd(r3723,r36E8);
      tensor[3] tensor3725#1 = <tensor[3]>[r371E,r3721,r3724];
      tensor[3,3] tensor3726#1 = <tensor[3,3]>[tensor371B,tensor3725,tensor36EB];
      tensor[3,3,3] op1_e3_l_1236D1#27 = <tensor[3,3,3]>[tensor36FF,tensor3711,tensor3726];
      real r377F#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_10361A);
      real r3780#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_1236D1);
      real r3781#1 = RMul(r377F,r3780);
      real r3782#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_10361A);
      real r3783#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_1236D1);
      real r3784#1 = RMul(r3782,r3783);
      real r3785#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_10361A);
      real r3786#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_1236D1);
      real r3787#1 = RMul(r3785,r3786);
      real r3788#1 = RAdd(r3781,r3784);
      real r3789#1 = RAdd(r3788,r3787);
      real r378A#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_1236D1);
      real r378B#1 = RMul(r377F,r378A);
      real r378C#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_1236D1);
      real r378D#1 = RMul(r3782,r378C);
      real r378E#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_1236D1);
      real r378F#1 = RMul(r3785,r378E);
      real r3790#1 = RAdd(r378B,r378D);
      real r3791#1 = RAdd(r3790,r378F);
      real r3792#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_1236D1);
      real r3793#1 = RMul(r377F,r3792);
      real r3794#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_1236D1);
      real r3795#1 = RMul(r3782,r3794);
      real r3796#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_1236D1);
      real r3797#1 = RMul(r3785,r3796);
      real r3798#1 = RAdd(r3793,r3795);
      real r3799#1 = RAdd(r3798,r3797);
      tensor[3] tensor379A#1 = <tensor[3]>[r3789,r3791,r3799];
      real r379B#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_1236D1);
      real r379C#1 = RMul(r377F,r379B);
      real r379D#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_1236D1);
      real r379E#1 = RMul(r3782,r379D);
      real r379F#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_1236D1);
      real r37A0#1 = RMul(r3785,r379F);
      real r37A1#1 = RAdd(r379C,r379E);
      real r37A2#1 = RAdd(r37A1,r37A0);
      real r37A3#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_1236D1);
      real r37A4#1 = RMul(r377F,r37A3);
      real r37A5#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_1236D1);
      real r37A6#1 = RMul(r3782,r37A5);
      real r37A7#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_1236D1);
      real r37A8#1 = RMul(r3785,r37A7);
      real r37A9#1 = RAdd(r37A4,r37A6);
      real r37AA#1 = RAdd(r37A9,r37A8);
      real r37AB#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_1236D1);
      real r37AC#1 = RMul(r377F,r37AB);
      real r37AD#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_1236D1);
      real r37AE#1 = RMul(r3782,r37AD);
      real r37AF#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_1236D1);
      real r37B0#1 = RMul(r3785,r37AF);
      real r37B1#1 = RAdd(r37AC,r37AE);
      real r37B2#1 = RAdd(r37B1,r37B0);
      tensor[3] tensor37B3#1 = <tensor[3]>[r37A2,r37AA,r37B2];
      real r37B4#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_1236D1);
      real r37B5#1 = RMul(r377F,r37B4);
      real r37B6#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_1236D1);
      real r37B7#1 = RMul(r3782,r37B6);
      real r37B8#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_1236D1);
      real r37B9#1 = RMul(r3785,r37B8);
      real r37BA#1 = RAdd(r37B5,r37B7);
      real r37BB#1 = RAdd(r37BA,r37B9);
      real r37BC#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_1236D1);
      real r37BD#1 = RMul(r377F,r37BC);
      real r37BE#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_1236D1);
      real r37BF#1 = RMul(r3782,r37BE);
      real r37C0#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_1236D1);
      real r37C1#1 = RMul(r3785,r37C0);
      real r37C2#1 = RAdd(r37BD,r37BF);
      real r37C3#1 = RAdd(r37C2,r37C1);
      real r37C4#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_1236D1);
      real r37C5#1 = RMul(r377F,r37C4);
      real r37C6#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_1236D1);
      real r37C7#1 = RMul(r3782,r37C6);
      real r37C8#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_1236D1);
      real r37C9#1 = RMul(r3785,r37C8);
      real r37CA#1 = RAdd(r37C5,r37C7);
      real r37CB#1 = RAdd(r37CA,r37C9);
      tensor[3] tensor37CC#1 = <tensor[3]>[r37BB,r37C3,r37CB];
      tensor[3,3] tensor37CD#1 = <tensor[3,3]>[tensor379A,tensor37B3,tensor37CC];
      real r37CE#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_10361A);
      real r37CF#1 = RMul(r37CE,r3780);
      real r37D0#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_10361A);
      real r37D1#1 = RMul(r37D0,r3783);
      real r37D2#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_10361A);
      real r37D3#1 = RMul(r37D2,r3786);
      real r37D4#1 = RAdd(r37CF,r37D1);
      real r37D5#1 = RAdd(r37D4,r37D3);
      real r37D6#1 = RMul(r37CE,r378A);
      real r37D7#1 = RMul(r37D0,r378C);
      real r37D8#1 = RMul(r37D2,r378E);
      real r37D9#1 = RAdd(r37D6,r37D7);
      real r37DA#1 = RAdd(r37D9,r37D8);
      real r37DB#1 = RMul(r37CE,r3792);
      real r37DC#1 = RMul(r37D0,r3794);
      real r37DD#1 = RMul(r37D2,r3796);
      real r37DE#1 = RAdd(r37DB,r37DC);
      real r37DF#1 = RAdd(r37DE,r37DD);
      tensor[3] tensor37E0#1 = <tensor[3]>[r37D5,r37DA,r37DF];
      real r37E1#1 = RMul(r37CE,r379B);
      real r37E2#1 = RMul(r37D0,r379D);
      real r37E3#1 = RMul(r37D2,r379F);
      real r37E4#1 = RAdd(r37E1,r37E2);
      real r37E5#1 = RAdd(r37E4,r37E3);
      real r37E6#1 = RMul(r37CE,r37A3);
      real r37E7#1 = RMul(r37D0,r37A5);
      real r37E8#1 = RMul(r37D2,r37A7);
      real r37E9#1 = RAdd(r37E6,r37E7);
      real r37EA#1 = RAdd(r37E9,r37E8);
      real r37EB#1 = RMul(r37CE,r37AB);
      real r37EC#1 = RMul(r37D0,r37AD);
      real r37ED#1 = RMul(r37D2,r37AF);
      real r37EE#1 = RAdd(r37EB,r37EC);
      real r37EF#1 = RAdd(r37EE,r37ED);
      tensor[3] tensor37F0#1 = <tensor[3]>[r37E5,r37EA,r37EF];
      real r37F1#1 = RMul(r37CE,r37B4);
      real r37F2#1 = RMul(r37D0,r37B6);
      real r37F3#1 = RMul(r37D2,r37B8);
      real r37F4#1 = RAdd(r37F1,r37F2);
      real r37F5#1 = RAdd(r37F4,r37F3);
      real r37F6#1 = RMul(r37CE,r37BC);
      real r37F7#1 = RMul(r37D0,r37BE);
      real r37F8#1 = RMul(r37D2,r37C0);
      real r37F9#1 = RAdd(r37F6,r37F7);
      real r37FA#1 = RAdd(r37F9,r37F8);
      real r37FB#1 = RMul(r37CE,r37C4);
      real r37FC#1 = RMul(r37D0,r37C6);
      real r37FD#1 = RMul(r37D2,r37C8);
      real r37FE#1 = RAdd(r37FB,r37FC);
      real r37FF#1 = RAdd(r37FE,r37FD);
      tensor[3] tensor3800#1 = <tensor[3]>[r37F5,r37FA,r37FF];
      tensor[3,3] tensor3801#1 = <tensor[3,3]>[tensor37E0,tensor37F0,tensor3800];
      real r3802#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_10361A);
      real r3803#1 = RMul(r3802,r3780);
      real r3804#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_10361A);
      real r3805#1 = RMul(r3804,r3783);
      real r3806#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_10361A);
      real r3807#1 = RMul(r3806,r3786);
      real r3808#1 = RAdd(r3803,r3805);
      real r3809#1 = RAdd(r3808,r3807);
      real r380A#1 = RMul(r3802,r378A);
      real r380B#1 = RMul(r3804,r378C);
      real r380C#1 = RMul(r3806,r378E);
      real r380D#1 = RAdd(r380A,r380B);
      real r380E#1 = RAdd(r380D,r380C);
      real r380F#1 = RMul(r3802,r3792);
      real r3810#1 = RMul(r3804,r3794);
      real r3811#1 = RMul(r3806,r3796);
      real r3812#1 = RAdd(r380F,r3810);
      real r3813#1 = RAdd(r3812,r3811);
      tensor[3] tensor3814#1 = <tensor[3]>[r3809,r380E,r3813];
      real r3815#1 = RMul(r3802,r379B);
      real r3816#1 = RMul(r3804,r379D);
      real r3817#1 = RMul(r3806,r379F);
      real r3818#1 = RAdd(r3815,r3816);
      real r3819#1 = RAdd(r3818,r3817);
      real r381A#1 = RMul(r3802,r37A3);
      real r381B#1 = RMul(r3804,r37A5);
      real r381C#1 = RMul(r3806,r37A7);
      real r381D#1 = RAdd(r381A,r381B);
      real r381E#1 = RAdd(r381D,r381C);
      real r381F#1 = RMul(r3802,r37AB);
      real r3820#1 = RMul(r3804,r37AD);
      real r3821#1 = RMul(r3806,r37AF);
      real r3822#1 = RAdd(r381F,r3820);
      real r3823#1 = RAdd(r3822,r3821);
      tensor[3] tensor3824#1 = <tensor[3]>[r3819,r381E,r3823];
      real r3825#1 = RMul(r3802,r37B4);
      real r3826#1 = RMul(r3804,r37B6);
      real r3827#1 = RMul(r3806,r37B8);
      real r3828#1 = RAdd(r3825,r3826);
      real r3829#1 = RAdd(r3828,r3827);
      real r382A#1 = RMul(r3802,r37BC);
      real r382B#1 = RMul(r3804,r37BE);
      real r382C#1 = RMul(r3806,r37C0);
      real r382D#1 = RAdd(r382A,r382B);
      real r382E#1 = RAdd(r382D,r382C);
      real r382F#1 = RMul(r3802,r37C4);
      real r3830#1 = RMul(r3804,r37C6);
      real r3831#1 = RMul(r3806,r37C8);
      real r3832#1 = RAdd(r382F,r3830);
      real r3833#1 = RAdd(r3832,r3831);
      tensor[3] tensor3834#1 = <tensor[3]>[r3829,r382E,r3833];
      tensor[3,3] tensor3835#1 = <tensor[3,3]>[tensor3814,tensor3824,tensor3834];
      tensor[3,3,3] op1_e3_l_13377E#27 = <tensor[3,3,3]>[tensor37CD,tensor3801,tensor3835];
      real r38F0#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs35A8);
      real r38F1#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult35FC);
      real r38F2#1 = RMul(r38F0,r38F1);
      real r38F3#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs35A8);
      real r38F4#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult35FC);
      real r38F5#1 = RMul(r38F3,r38F4);
      real r38F6#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs35A8);
      real r38F7#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult35FC);
      real r38F8#1 = RMul(r38F6,r38F7);
      real r38F9#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs35A8);
      real r38FA#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult35FC);
      real r38FB#1 = RMul(r38F9,r38FA);
      real r38FC#1 = RAdd(r38F2,r38F5);
      real r38FD#1 = RAdd(r38FC,r38F8);
      real r38FE#1 = RAdd(r38FD,r38FB);
      real r38FF#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs35A8);
      real r3900#1 = RMul(r38FF,r38F1);
      real r3901#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs35A8);
      real r3902#1 = RMul(r3901,r38F4);
      real r3903#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs35A8);
      real r3904#1 = RMul(r3903,r38F7);
      real r3905#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs35A8);
      real r3906#1 = RMul(r3905,r38FA);
      real r3907#1 = RAdd(r3900,r3902);
      real r3908#1 = RAdd(r3907,r3904);
      real r3909#1 = RAdd(r3908,r3906);
      real r390A#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs35A8);
      real r390B#1 = RMul(r390A,r38F1);
      real r390C#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs35A8);
      real r390D#1 = RMul(r390C,r38F4);
      real r390E#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs35A8);
      real r390F#1 = RMul(r390E,r38F7);
      real r3910#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs35A8);
      real r3911#1 = RMul(r3910,r38FA);
      real r3912#1 = RAdd(r390B,r390D);
      real r3913#1 = RAdd(r3912,r390F);
      real r3914#1 = RAdd(r3913,r3911);
      tensor[3] probe_l_1438EF#1 = <tensor[3]>[r38FE,r3909,r3914];
      real r393D#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs35A8);
      real r393E#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult35FC);
      real r393F#1 = RMul(r393D,r393E);
      real r3940#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs35A8);
      real r3941#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult35FC);
      real r3942#1 = RMul(r3940,r3941);
      real r3943#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs35A8);
      real r3944#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult35FC);
      real r3945#1 = RMul(r3943,r3944);
      real r3946#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs35A8);
      real r3947#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult35FC);
      real r3948#1 = RMul(r3946,r3947);
      real r3949#1 = RAdd(r393F,r3942);
      real r394A#1 = RAdd(r3949,r3945);
      real r394B#1 = RAdd(r394A,r3948);
      real r394C#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs35A8);
      real r394D#1 = RMul(r394C,r393E);
      real r394E#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs35A8);
      real r394F#1 = RMul(r394E,r3941);
      real r3950#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs35A8);
      real r3951#1 = RMul(r3950,r3944);
      real r3952#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs35A8);
      real r3953#1 = RMul(r3952,r3947);
      real r3954#1 = RAdd(r394D,r394F);
      real r3955#1 = RAdd(r3954,r3951);
      real r3956#1 = RAdd(r3955,r3953);
      real r3957#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs35A8);
      real r3958#1 = RMul(r3957,r393E);
      real r3959#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs35A8);
      real r395A#1 = RMul(r3959,r3941);
      real r395B#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs35A8);
      real r395C#1 = RMul(r395B,r3944);
      real r395D#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs35A8);
      real r395E#1 = RMul(r395D,r3947);
      real r395F#1 = RAdd(r3958,r395A);
      real r3960#1 = RAdd(r395F,r395C);
      real r3961#1 = RAdd(r3960,r395E);
      tensor[3] probe_l_15393C#3 = <tensor[3]>[r394B,r3956,r3961];
      real r398A#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs35A8);
      real r398B#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult35FC);
      real r398C#1 = RMul(r398A,r398B);
      real r398D#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs35A8);
      real r398E#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult35FC);
      real r398F#1 = RMul(r398D,r398E);
      real r3990#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs35A8);
      real r3991#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult35FC);
      real r3992#1 = RMul(r3990,r3991);
      real r3993#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs35A8);
      real r3994#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult35FC);
      real r3995#1 = RMul(r3993,r3994);
      real r3996#1 = RAdd(r398C,r398F);
      real r3997#1 = RAdd(r3996,r3992);
      real r3998#1 = RAdd(r3997,r3995);
      real r3999#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs35A8);
      real r399A#1 = RMul(r3999,r398B);
      real r399B#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs35A8);
      real r399C#1 = RMul(r399B,r398E);
      real r399D#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs35A8);
      real r399E#1 = RMul(r399D,r3991);
      real r399F#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs35A8);
      real r39A0#1 = RMul(r399F,r3994);
      real r39A1#1 = RAdd(r399A,r399C);
      real r39A2#1 = RAdd(r39A1,r399E);
      real r39A3#1 = RAdd(r39A2,r39A0);
      real r39A4#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs35A8);
      real r39A5#1 = RMul(r39A4,r398B);
      real r39A6#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs35A8);
      real r39A7#1 = RMul(r39A6,r398E);
      real r39A8#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs35A8);
      real r39A9#1 = RMul(r39A8,r3991);
      real r39AA#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs35A8);
      real r39AB#1 = RMul(r39AA,r3994);
      real r39AC#1 = RAdd(r39A5,r39A7);
      real r39AD#1 = RAdd(r39AC,r39A9);
      real r39AE#1 = RAdd(r39AD,r39AB);
      tensor[3] probe_l_163989#3 = <tensor[3]>[r3998,r39A3,r39AE];
      real realLit39D7#3 = 0.e0;
      real r39D8#3 = TensorIndex<tensor[3],[0]>(probe_l_163989);
      real r39D9#3 = RMul(realLit39D7,r39D8);
      real r39DA#3 = TensorIndex<tensor[3],[1]>(probe_l_163989);
      real r39DB#3 = RMul(realLit39D7,r39DA);
      real r39DC#3 = TensorIndex<tensor[3],[2]>(probe_l_163989);
      real r39DD#5 = RMul(realLit39D7,r39DC);
      real r39DE#3 = RAdd(r39D9,r39DB);
      real r39DF#3 = RAdd(r39DE,r39DD);
      real realLit39E0#3 = 0.1e1;
      real r39E1#1 = RMul(realLit39E0,r39DC);
      real r39E2#1 = RAdd(r39DE,r39E1);
      real realLit39E3#3 = -0.1e1;
      real r39E4#1 = RMul(realLit39E3,r39DA);
      real r39E5#1 = RAdd(r39D9,r39E4);
      real r39E6#1 = RAdd(r39E5,r39DD);
      tensor[3] tensor39E7#1 = <tensor[3]>[r39DF,r39E2,r39E6];
      real r39E8#1 = RMul(realLit39E3,r39DC);
      real r39E9#1 = RAdd(r39DE,r39E8);
      real r39EA#1 = RMul(realLit39E0,r39D8);
      real r39EB#1 = RAdd(r39EA,r39DB);
      real r39EC#1 = RAdd(r39EB,r39DD);
      tensor[3] tensor39ED#1 = <tensor[3]>[r39E9,r39DF,r39EC];
      real r39EE#1 = RMul(realLit39E0,r39DA);
      real r39EF#1 = RAdd(r39D9,r39EE);
      real r39F0#1 = RAdd(r39EF,r39DD);
      real r39F1#1 = RMul(realLit39E3,r39D8);
      real r39F2#1 = RAdd(r39F1,r39DB);
      real r39F3#1 = RAdd(r39F2,r39DD);
      tensor[3] tensor39F4#1 = <tensor[3]>[r39F0,r39F3,r39DF];
      tensor[3,3] op1_e3_l_1739D6#3 = <tensor[3,3]>[tensor39E7,tensor39ED,tensor39F4];
      tensor[3] projParam3A16#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1739D6);
      real vdot3A17#1 = VDot<3>(probe_l_15393C,projParam3A16);
      tensor[3] projParam3A18#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1739D6);
      real vdot3A19#1 = VDot<3>(probe_l_15393C,projParam3A18);
      tensor[3] projParam3A1A#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1739D6);
      real vdot3A1B#1 = VDot<3>(probe_l_15393C,projParam3A1A);
      tensor[3] op1_e3_l_183A15#1 = <tensor[3]>[vdot3A17,vdot3A19,vdot3A1B];
      real op1_e3_l_193A24#1 = VDot<3>(probe_l_1438EF,op1_e3_l_183A15);
      real realLit3A28#27 = 0.e0;
      real r3A29#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_13377E);
      real r3A2A#2 = RMul(realLit3A28,r3A29);
      real r3A2B#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_13377E);
      real r3A2C#1 = RMul(realLit3A28,r3A2B);
      real r3A2D#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_13377E);
      real r3A2E#2 = RMul(realLit3A28,r3A2D);
      real r3A2F#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_13377E);
      real r3A30#2 = RMul(realLit3A28,r3A2F);
      real r3A31#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_13377E);
      real r3A32#3 = RMul(realLit3A28,r3A31);
      real realLit3A33#9 = 0.1e1;
      real r3A34#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_13377E);
      real r3A35#1 = RMul(realLit3A33,r3A34);
      real r3A36#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_13377E);
      real r3A37#2 = RMul(realLit3A28,r3A36);
      real realLit3A38#9 = -0.1e1;
      real r3A39#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_13377E);
      real r3A3A#1 = RMul(realLit3A38,r3A39);
      real r3A3B#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_13377E);
      real r3A3C#3 = RMul(realLit3A28,r3A3B);
      real r3A3D#2 = RAdd(r3A2A,r3A2C);
      real r3A3E#1 = RAdd(r3A3D,r3A2E);
      real r3A3F#1 = RAdd(r3A3E,r3A30);
      real r3A40#1 = RAdd(r3A3F,r3A32);
      real r3A41#1 = RAdd(r3A40,r3A35);
      real r3A42#1 = RAdd(r3A41,r3A37);
      real r3A43#1 = RAdd(r3A42,r3A3A);
      real r3A44#1 = RAdd(r3A43,r3A3C);
      real r3A45#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_13377E);
      real r3A46#2 = RMul(realLit3A28,r3A45);
      real r3A47#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_13377E);
      real r3A48#1 = RMul(realLit3A28,r3A47);
      real r3A49#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_13377E);
      real r3A4A#2 = RMul(realLit3A28,r3A49);
      real r3A4B#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_13377E);
      real r3A4C#2 = RMul(realLit3A28,r3A4B);
      real r3A4D#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_13377E);
      real r3A4E#3 = RMul(realLit3A28,r3A4D);
      real r3A4F#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_13377E);
      real r3A50#1 = RMul(realLit3A33,r3A4F);
      real r3A51#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_13377E);
      real r3A52#2 = RMul(realLit3A28,r3A51);
      real r3A53#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_13377E);
      real r3A54#1 = RMul(realLit3A38,r3A53);
      real r3A55#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_13377E);
      real r3A56#3 = RMul(realLit3A28,r3A55);
      real r3A57#2 = RAdd(r3A46,r3A48);
      real r3A58#1 = RAdd(r3A57,r3A4A);
      real r3A59#1 = RAdd(r3A58,r3A4C);
      real r3A5A#1 = RAdd(r3A59,r3A4E);
      real r3A5B#1 = RAdd(r3A5A,r3A50);
      real r3A5C#1 = RAdd(r3A5B,r3A52);
      real r3A5D#1 = RAdd(r3A5C,r3A54);
      real r3A5E#1 = RAdd(r3A5D,r3A56);
      real r3A5F#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_13377E);
      real r3A60#2 = RMul(realLit3A28,r3A5F);
      real r3A61#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_13377E);
      real r3A62#1 = RMul(realLit3A28,r3A61);
      real r3A63#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_13377E);
      real r3A64#2 = RMul(realLit3A28,r3A63);
      real r3A65#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_13377E);
      real r3A66#2 = RMul(realLit3A28,r3A65);
      real r3A67#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_13377E);
      real r3A68#3 = RMul(realLit3A28,r3A67);
      real r3A69#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_13377E);
      real r3A6A#1 = RMul(realLit3A33,r3A69);
      real r3A6B#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_13377E);
      real r3A6C#2 = RMul(realLit3A28,r3A6B);
      real r3A6D#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_13377E);
      real r3A6E#1 = RMul(realLit3A38,r3A6D);
      real r3A6F#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_13377E);
      real r3A70#3 = RMul(realLit3A28,r3A6F);
      real r3A71#2 = RAdd(r3A60,r3A62);
      real r3A72#1 = RAdd(r3A71,r3A64);
      real r3A73#1 = RAdd(r3A72,r3A66);
      real r3A74#1 = RAdd(r3A73,r3A68);
      real r3A75#1 = RAdd(r3A74,r3A6A);
      real r3A76#1 = RAdd(r3A75,r3A6C);
      real r3A77#1 = RAdd(r3A76,r3A6E);
      real r3A78#1 = RAdd(r3A77,r3A70);
      tensor[3] tensor3A79#1 = <tensor[3]>[r3A44,r3A5E,r3A78];
      real r3A7A#1 = RMul(realLit3A38,r3A2D);
      real r3A7B#2 = RMul(realLit3A28,r3A34);
      real r3A7C#1 = RMul(realLit3A33,r3A36);
      real r3A7D#2 = RMul(realLit3A28,r3A39);
      real r3A7E#1 = RAdd(r3A3D,r3A7A);
      real r3A7F#1 = RAdd(r3A7E,r3A30);
      real r3A80#1 = RAdd(r3A7F,r3A32);
      real r3A81#1 = RAdd(r3A80,r3A7B);
      real r3A82#1 = RAdd(r3A81,r3A7C);
      real r3A83#1 = RAdd(r3A82,r3A7D);
      real r3A84#1 = RAdd(r3A83,r3A3C);
      real r3A85#1 = RMul(realLit3A38,r3A49);
      real r3A86#2 = RMul(realLit3A28,r3A4F);
      real r3A87#1 = RMul(realLit3A33,r3A51);
      real r3A88#2 = RMul(realLit3A28,r3A53);
      real r3A89#1 = RAdd(r3A57,r3A85);
      real r3A8A#1 = RAdd(r3A89,r3A4C);
      real r3A8B#1 = RAdd(r3A8A,r3A4E);
      real r3A8C#1 = RAdd(r3A8B,r3A86);
      real r3A8D#1 = RAdd(r3A8C,r3A87);
      real r3A8E#1 = RAdd(r3A8D,r3A88);
      real r3A8F#1 = RAdd(r3A8E,r3A56);
      real r3A90#1 = RMul(realLit3A38,r3A63);
      real r3A91#2 = RMul(realLit3A28,r3A69);
      real r3A92#1 = RMul(realLit3A33,r3A6B);
      real r3A93#2 = RMul(realLit3A28,r3A6D);
      real r3A94#1 = RAdd(r3A71,r3A90);
      real r3A95#1 = RAdd(r3A94,r3A66);
      real r3A96#1 = RAdd(r3A95,r3A68);
      real r3A97#1 = RAdd(r3A96,r3A91);
      real r3A98#1 = RAdd(r3A97,r3A92);
      real r3A99#1 = RAdd(r3A98,r3A93);
      real r3A9A#1 = RAdd(r3A99,r3A70);
      tensor[3] tensor3A9B#1 = <tensor[3]>[r3A84,r3A8F,r3A9A];
      real r3A9C#1 = RMul(realLit3A33,r3A2B);
      real r3A9D#1 = RMul(realLit3A38,r3A2F);
      real r3A9E#1 = RAdd(r3A2A,r3A9C);
      real r3A9F#1 = RAdd(r3A9E,r3A2E);
      real r3AA0#1 = RAdd(r3A9F,r3A9D);
      real r3AA1#1 = RAdd(r3AA0,r3A32);
      real r3AA2#1 = RAdd(r3AA1,r3A7B);
      real r3AA3#1 = RAdd(r3AA2,r3A37);
      real r3AA4#1 = RAdd(r3AA3,r3A7D);
      real r3AA5#1 = RAdd(r3AA4,r3A3C);
      real r3AA6#1 = RMul(realLit3A33,r3A47);
      real r3AA7#1 = RMul(realLit3A38,r3A4B);
      real r3AA8#1 = RAdd(r3A46,r3AA6);
      real r3AA9#1 = RAdd(r3AA8,r3A4A);
      real r3AAA#1 = RAdd(r3AA9,r3AA7);
      real r3AAB#1 = RAdd(r3AAA,r3A4E);
      real r3AAC#1 = RAdd(r3AAB,r3A86);
      real r3AAD#1 = RAdd(r3AAC,r3A52);
      real r3AAE#1 = RAdd(r3AAD,r3A88);
      real r3AAF#1 = RAdd(r3AAE,r3A56);
      real r3AB0#1 = RMul(realLit3A33,r3A61);
      real r3AB1#1 = RMul(realLit3A38,r3A65);
      real r3AB2#1 = RAdd(r3A60,r3AB0);
      real r3AB3#1 = RAdd(r3AB2,r3A64);
      real r3AB4#1 = RAdd(r3AB3,r3AB1);
      real r3AB5#1 = RAdd(r3AB4,r3A68);
      real r3AB6#1 = RAdd(r3AB5,r3A91);
      real r3AB7#1 = RAdd(r3AB6,r3A6C);
      real r3AB8#1 = RAdd(r3AB7,r3A93);
      real r3AB9#1 = RAdd(r3AB8,r3A70);
      tensor[3] tensor3ABA#1 = <tensor[3]>[r3AA5,r3AAF,r3AB9];
      tensor[3,3] op1_e3_l_203A27#9 = <tensor[3,3]>[tensor3A79,tensor3A9B,tensor3ABA];
      real realLit3B51#1 = 0.2e1;
      real op1_e3_l_213B50#9 = RMul(realLit3B51,op1_e3_l_193A24);
      real varAcc3B57#1 = VIndex<3,0>(xn3B56);
      real varAcc3B58#1 = VIndex<3,1>(xn3B56);
      real varAcc3B59#1 = VIndex<3,2>(xn3B56);
      real coeff3B5A#3 = -0.1e1;
      real iden3B5B#1 = varAcc3B57;
      real one3B5C#11 = 0.1e1;
      real prod3B5D#2 = RMul(one3B5C,one3B5C);
      real prod3B5E#2 = RMul(iden3B5B,prod3B5D);
      real iden3B5F#1 = varAcc3B58;
      real prod3B60#1 = RMul(iden3B5F,one3B5C);
      real prod3B61#2 = RMul(one3B5C,prod3B60);
      real iden3B62#1 = varAcc3B59;
      real prod3B63#1 = RMul(one3B5C,iden3B62);
      real prod3B64#2 = RMul(one3B5C,prod3B63);
      real prod3B65#1 = RMul(one3B5C,prod3B5D);
      real mult3B66#1 = RMul(one3B5C,prod3B65);
      real mult3B67#1 = RMul(coeff3B5A,prod3B64);
      real mult3B68#1 = RMul(coeff3B5A,prod3B61);
      real mult3B69#1 = RMul(coeff3B5A,prod3B5E);
      real sum3B6A#1 = RAdd(mult3B68,mult3B69);
      real sum3B6B#1 = RAdd(mult3B67,sum3B6A);
      real sum3B6C#1 = RAdd(mult3B66,sum3B6B);
      real intermediate3B6D#1 = sum3B6C;
      real basisEval3B6E#1 = RMul(one3B5C,prod3B5E);
      real basisEval3B6F#1 = RMul(one3B5C,prod3B61);
      real basisEval3B70#1 = RMul(one3B5C,prod3B64);
      tensor[4] intermediateCons3B71#1 = <tensor[4]>[intermediate3B6D,basisEval3B6E,basisEval3B6F,basisEval3B70];
      tensor[4] basisResult3B55#8 = intermediateCons3B71;
      real r3B8F#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs35A8);
      real r3B90#3 = TensorIndex<tensor[4],[0]>(basisResult3B55);
      real r3B91#1 = RMul(r3B8F,r3B90);
      real r3B92#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs35A8);
      real r3B93#3 = TensorIndex<tensor[4],[1]>(basisResult3B55);
      real r3B94#1 = RMul(r3B92,r3B93);
      real r3B95#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs35A8);
      real r3B96#3 = TensorIndex<tensor[4],[2]>(basisResult3B55);
      real r3B97#1 = RMul(r3B95,r3B96);
      real r3B98#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs35A8);
      real r3B99#3 = TensorIndex<tensor[4],[3]>(basisResult3B55);
      real r3B9A#1 = RMul(r3B98,r3B99);
      real r3B9B#1 = RAdd(r3B91,r3B94);
      real r3B9C#1 = RAdd(r3B9B,r3B97);
      real r3B9D#1 = RAdd(r3B9C,r3B9A);
      real r3B9E#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs35A8);
      real r3B9F#1 = RMul(r3B9E,r3B90);
      real r3BA0#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs35A8);
      real r3BA1#1 = RMul(r3BA0,r3B93);
      real r3BA2#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs35A8);
      real r3BA3#1 = RMul(r3BA2,r3B96);
      real r3BA4#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs35A8);
      real r3BA5#1 = RMul(r3BA4,r3B99);
      real r3BA6#1 = RAdd(r3B9F,r3BA1);
      real r3BA7#1 = RAdd(r3BA6,r3BA3);
      real r3BA8#1 = RAdd(r3BA7,r3BA5);
      real r3BA9#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs35A8);
      real r3BAA#1 = RMul(r3BA9,r3B90);
      real r3BAB#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs35A8);
      real r3BAC#1 = RMul(r3BAB,r3B93);
      real r3BAD#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs35A8);
      real r3BAE#1 = RMul(r3BAD,r3B96);
      real r3BAF#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs35A8);
      real r3BB0#1 = RMul(r3BAF,r3B99);
      real r3BB1#1 = RAdd(r3BAA,r3BAC);
      real r3BB2#1 = RAdd(r3BB1,r3BAE);
      real r3BB3#1 = RAdd(r3BB2,r3BB0);
      tensor[3] probe_l_223B8E#1 = <tensor[3]>[r3B9D,r3BA8,r3BB3];
      real r3BDC#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_203A27);
      real r3BDD#1 = RDiv(r3BDC,op1_e3_l_213B50);
      real r3BDE#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_203A27);
      real r3BDF#1 = RDiv(r3BDE,op1_e3_l_213B50);
      real r3BE0#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_203A27);
      real r3BE1#1 = RDiv(r3BE0,op1_e3_l_213B50);
      tensor[3] tensor3BE2#1 = <tensor[3]>[r3BDD,r3BDF,r3BE1];
      real r3BE3#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_203A27);
      real r3BE4#1 = RDiv(r3BE3,op1_e3_l_213B50);
      real r3BE5#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_203A27);
      real r3BE6#1 = RDiv(r3BE5,op1_e3_l_213B50);
      real r3BE7#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_203A27);
      real r3BE8#1 = RDiv(r3BE7,op1_e3_l_213B50);
      tensor[3] tensor3BE9#1 = <tensor[3]>[r3BE4,r3BE6,r3BE8];
      real r3BEA#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_203A27);
      real r3BEB#1 = RDiv(r3BEA,op1_e3_l_213B50);
      real r3BEC#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_203A27);
      real r3BED#1 = RDiv(r3BEC,op1_e3_l_213B50);
      real r3BEE#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_203A27);
      real r3BEF#1 = RDiv(r3BEE,op1_e3_l_213B50);
      tensor[3] tensor3BF0#1 = <tensor[3]>[r3BEB,r3BED,r3BEF];
      tensor[3,3] op1_e3_l_233BDB#6 = <tensor[3,3]>[tensor3BE2,tensor3BE9,tensor3BF0];
      tensor[3] op1_e3_l_243C08#3 = VSub<3>(probe_l_223B8E,pos3576);
      tensor[3] projParam3C0C#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_233BDB);
      real vdot3C0D#1 = VDot<3>(projParam3C0C,op1_e3_l_243C08);
      tensor[3] projParam3C0E#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_233BDB);
      real vdot3C0F#1 = VDot<3>(projParam3C0E,op1_e3_l_243C08);
      tensor[3] projParam3C10#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_233BDB);
      real vdot3C11#1 = VDot<3>(projParam3C10,op1_e3_l_243C08);
      tensor[3] op1_e3_l_253C0B#1 = <tensor[3]>[vdot3C0D,vdot3C0F,vdot3C11];
      tensor[3] xn3C1A#4 = VSub<3>(xn3B56,op1_e3_l_253C0B);
      real _t3C1D#2 = 0.1e-7;
      real _t3C1F#1 = RMul(_t3C1D,_t3C1D);
      real r3C23#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs35A8);
      real r3C24#3 = TensorIndex<tensor[4],[0]>(basisResult3B55);
      real r3C25#1 = RMul(r3C23,r3C24);
      real r3C26#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs35A8);
      real r3C27#3 = TensorIndex<tensor[4],[1]>(basisResult3B55);
      real r3C28#1 = RMul(r3C26,r3C27);
      real r3C29#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs35A8);
      real r3C2A#3 = TensorIndex<tensor[4],[2]>(basisResult3B55);
      real r3C2B#1 = RMul(r3C29,r3C2A);
      real r3C2C#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs35A8);
      real r3C2D#3 = TensorIndex<tensor[4],[3]>(basisResult3B55);
      real r3C2E#1 = RMul(r3C2C,r3C2D);
      real r3C2F#1 = RAdd(r3C25,r3C28);
      real r3C30#1 = RAdd(r3C2F,r3C2B);
      real r3C31#1 = RAdd(r3C30,r3C2E);
      real r3C32#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs35A8);
      real r3C33#1 = RMul(r3C32,r3C24);
      real r3C34#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs35A8);
      real r3C35#1 = RMul(r3C34,r3C27);
      real r3C36#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs35A8);
      real r3C37#1 = RMul(r3C36,r3C2A);
      real r3C38#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs35A8);
      real r3C39#1 = RMul(r3C38,r3C2D);
      real r3C3A#1 = RAdd(r3C33,r3C35);
      real r3C3B#1 = RAdd(r3C3A,r3C37);
      real r3C3C#1 = RAdd(r3C3B,r3C39);
      real r3C3D#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs35A8);
      real r3C3E#1 = RMul(r3C3D,r3C24);
      real r3C3F#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs35A8);
      real r3C40#1 = RMul(r3C3F,r3C27);
      real r3C41#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs35A8);
      real r3C42#1 = RMul(r3C41,r3C2A);
      real r3C43#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs35A8);
      real r3C44#1 = RMul(r3C43,r3C2D);
      real r3C45#1 = RAdd(r3C3E,r3C40);
      real r3C46#1 = RAdd(r3C45,r3C42);
      real r3C47#1 = RAdd(r3C46,r3C44);
      tensor[3] probe_l_303C22#1 = <tensor[3]>[r3C31,r3C3C,r3C47];
      tensor[3] op1_e3_l_323C6F#3 = VSub<3>(probe_l_303C22,pos3576);
      tensor[3] projParam3C73#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_233BDB);
      real vdot3C74#1 = VDot<3>(projParam3C73,op1_e3_l_323C6F);
      tensor[3] projParam3C75#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_233BDB);
      real vdot3C76#1 = VDot<3>(projParam3C75,op1_e3_l_323C6F);
      tensor[3] projParam3C77#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_233BDB);
      real vdot3C78#1 = VDot<3>(projParam3C77,op1_e3_l_323C6F);
      tensor[3] op1_e3_l_483C72#2 = <tensor[3]>[vdot3C74,vdot3C76,vdot3C78];
      real _t3C81#1 = VDot<3>(op1_e3_l_483C72,op1_e3_l_483C72);
      bool _t3C84#1 = GTE<real>(_t3C1F,_t3C81);
      if _t3C84 then goto ASSIGN3C88 else goto JOIN3CB3
    ASSIGN3C88:  preds = [COND3C86]
      real _t3C87#4 = 0.1e1;
      real _t3C89#4 = 0.1e-8;
      real _t3C8B#1 = RAdd(_t3C87,_t3C89);
      tensor[3] _t3C8E#1 = <tensor[3]>[_t3C87,_t3C87,_t3C87];
      real _t3C90#1 = VDot<3>(_t3C8E,xn3C1A);
      bool _t3C93#1 = GT<real>(_t3C8B,_t3C90);
      tensor[3] _t3C95#1 = <tensor[3]>[_t3C89,_t3C89,_t3C89];
      tensor[3] _t3C97#3 = VAdd<3>(_t3C95,xn3C1A);
      real _t3C9A#1 = VIndex<3,0>(_t3C97);
      real _t3C9C#3 = -0.e0;
      bool _t3C9E#1 = GT<real>(_t3C9A,_t3C9C);
      real _t3CA0#1 = VIndex<3,1>(_t3C97);
      bool _t3CA2#1 = GT<real>(_t3CA0,_t3C9C);
      real _t3CA4#1 = VIndex<3,2>(_t3C97);
      bool _t3CA6#1 = GT<real>(_t3CA4,_t3C9C);
      bool _t3CA8#1 = BAnd(_t3CA2,_t3CA6);
      bool _t3CAA#1 = BAnd(_t3C9E,_t3CA8);
      bool _t3CAC#1 = BAnd(_t3C93,_t3CAA);
      if _t3CAC then goto ASSIGN3CB0 else goto JOIN3CB2
    ASSIGN3CB0:  preds = [COND3CAE]
      femData:MeshPos _t3CAF#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3575,cellItter3580,xn3C1A,pos3576);
      return _t3CAF
      goto JOIN3CB2
    JOIN3CB2:  preds = [*RETURN(_t3CAF)3CB1,COND3CAE]
      goto JOIN3CB3
    JOIN3CB3:  preds = [JOIN3CB2,COND3C86]
      goto FOREACH3587
    NEXT3CB5:  preds = [FOREACH3587]
      goto FOREACH3581
    ASSIGN3CB7:  preds = [FOREACH3581]
      string _t3CB6#1 = "Bad end 2";
      string _t3CB8#1 = "\n";
      Print<[string,string]>(_t3CB6,_t3CB8);
      femData:MeshPos _t3CBB#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3575);
      return _t3CBB
}
  function int[2] nextCell44E13 (int faceIdx4E14#1, int cell4E15#1, femData:Mesh mesh4E16#1) {
    ENTRY4E17:  preds = []
      int _t4E18#1 = 8;
      int _t4E1A#1 = IMul(cell4E15,_t4E18);
      int _t4E1C#1 = 2;
      int _t4E1E#1 = IMul(faceIdx4E14,_t4E1C);
      int _t4E20#1 = IAdd(_t4E1A,_t4E1E);
      int[2] _t4E22#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh4E16,_t4E20);
      return _t4E22
}
  function femData:MeshPos posMove40B9 (femData:MeshPos x40BA#6, tensor[3] dPos40BB#7) {
    ENTRY40BC:  preds = []
      femData:Mesh meshData40BD#1 = globals.meshData351F;
      int timeSteps40BF#1 = globals.timeSteps3522;
      real timeEps40C1#1 = globals.timeEps3523;
      bool _t40C3#1 = ExtractFemItem<bool,Valid(MeshPos)>(x40BA);
      bool _t40C5#1 = BNot(_t40C3);
      if _t40C5 then goto RETURN(x40BA)40C8 else goto JOIN40C9
    RETURN(x40BA)40C8:  preds = [COND40C7]
      return x40BA
      goto JOIN40C9
    JOIN40C9:  preds = [*RETURN(x40BA)40C8,COND40C7]
      real time40CA#23 = 0.1e1;
      int _t40CC#6 = 0;
      int[] _t40CE#1 = Range(_t40CC,timeSteps40BF);
    FOREACH40D1:  preds = [ASSIGN40CF,NEXT471F]
      foreach (i40D0 in _t40CE) on exit goto ASSIGN4F6B
        femData:MeshPos cmp40D3#6 = phi(x40BA,cmp471A)
        real time46E9#13 = phi(time40CA,time471C)
      femData:Mesh _t40D2#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp40D3);
      int _t40D5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp40D3);
      femData:MeshCell _t40D7#2 = LoadFem<femData:MeshCell>(_t40D2,_t40D5);
      femData:Mesh _t40D9#17 = ExtractFem<femData:Mesh,femData:MeshCell>(_t40D7);
      int _t40DB#2 = ExtractFemItem<int,CellIndex(MeshCell)>(_t40D7);
      tensor[3] _t40DD#9 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp40D3);
      int ilit40E0#1 = 4;
      int mulRes40E1#4 = IMul(_t40DB,ilit40E0);
      int ilit40E2#1 = 0;
      int addRes40E3#1 = IAdd(mulRes40E1,ilit40E2);
      int idx40E4#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E3);
      int ilit40E5#1 = 1;
      int addRes40E6#1 = IAdd(mulRes40E1,ilit40E5);
      int idx40E7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E6);
      int ilit40E8#1 = 2;
      int addRes40E9#1 = IAdd(mulRes40E1,ilit40E8);
      int idx40EA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E9);
      int ilit40EB#1 = 3;
      int addRes40EC#1 = IAdd(mulRes40E1,ilit40EB);
      int idx40ED#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40EC);
      int[4] seq40EE#1 = <int[4]>{idx40E4,idx40E7,idx40EA,idx40ED};
      int[4] femIndicies40DF#4 = seq40EE;
      int ilit4100#5 = 0;
      int ilit4101#5 = 3;
      int idx4102#1 = Subscript<int>(femIndicies40DF,ilit4100);
      int mulRes4103#3 = IMul(ilit4101,idx4102);
      int addRes4104#1 = IAdd(ilit4100,mulRes4103);
      int ilit4105#5 = 1;
      int addRes4106#1 = IAdd(ilit4105,mulRes4103);
      int ilit4107#5 = 2;
      int addRes4108#1 = IAdd(ilit4107,mulRes4103);
      real dof_load4109#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4104);
      real dof_load410A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4106);
      real dof_load410B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4108);
      tensor[3] interCons410C#1 = <tensor[3]>[dof_load4109,dof_load410A,dof_load410B];
      int idx410D#1 = Subscript<int>(femIndicies40DF,ilit4105);
      int mulRes410E#3 = IMul(ilit4101,idx410D);
      int addRes410F#1 = IAdd(ilit4100,mulRes410E);
      int addRes4110#1 = IAdd(ilit4105,mulRes410E);
      int addRes4111#1 = IAdd(ilit4107,mulRes410E);
      real dof_load4112#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes410F);
      real dof_load4113#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4110);
      real dof_load4114#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4111);
      tensor[3] interCons4115#1 = <tensor[3]>[dof_load4112,dof_load4113,dof_load4114];
      int idx4116#1 = Subscript<int>(femIndicies40DF,ilit4107);
      int mulRes4117#3 = IMul(ilit4101,idx4116);
      int addRes4118#1 = IAdd(ilit4100,mulRes4117);
      int addRes4119#1 = IAdd(ilit4105,mulRes4117);
      int addRes411A#1 = IAdd(ilit4107,mulRes4117);
      real dof_load411B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4118);
      real dof_load411C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4119);
      real dof_load411D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes411A);
      tensor[3] interCons411E#1 = <tensor[3]>[dof_load411B,dof_load411C,dof_load411D];
      int idx411F#1 = Subscript<int>(femIndicies40DF,ilit4101);
      int mulRes4120#3 = IMul(ilit4101,idx411F);
      int addRes4121#1 = IAdd(ilit4100,mulRes4120);
      int addRes4122#1 = IAdd(ilit4105,mulRes4120);
      int addRes4123#1 = IAdd(ilit4107,mulRes4120);
      real dof_load4124#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4121);
      real dof_load4125#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4122);
      real dof_load4126#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4123);
      tensor[3] interCons4127#1 = <tensor[3]>[dof_load4124,dof_load4125,dof_load4126];
      tensor[4,3] dofs4128#1 = <tensor[4,3]>[interCons410C,interCons4115,interCons411E,interCons4127];
      tensor[4,3] femDofs40FF#96 = dofs4128;
      real varAcc4154#0 = VIndex<3,0>(_t40DD);
      real varAcc4155#0 = VIndex<3,1>(_t40DD);
      real varAcc4156#0 = VIndex<3,2>(_t40DD);
      real coeff4157#1 = -0.1e1;
      real one4158#4 = 0.1e1;
      real prod4159#1 = RMul(one4158,one4158);
      real prod415A#2 = RMul(one4158,prod4159);
      real basisEval415B#3 = RMul(coeff4157,prod415A);
      real basisEval415C#3 = RMul(one4158,prod415A);
      real basisEval415D#6 = 0.e0;
      tensor[4] intermediateCons415E#1 = <tensor[4]>[basisEval415B,basisEval415C,basisEval415D,basisEval415D];
      tensor[4] intermediateCons415F#1 = <tensor[4]>[basisEval415B,basisEval415D,basisEval415C,basisEval415D];
      tensor[4] intermediateCons4160#1 = <tensor[4]>[basisEval415B,basisEval415D,basisEval415D,basisEval415C];
      tensor[3,4] intermediateCons4161#1 = <tensor[3,4]>[intermediateCons415E,intermediateCons415F,intermediateCons4160];
      tensor[3,4] basisResult4153#48 = intermediateCons4161;
      real r4172#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs40FF);
      real r4173#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult4153);
      real r4174#1 = RMul(r4172,r4173);
      real r4175#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs40FF);
      real r4176#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult4153);
      real r4177#1 = RMul(r4175,r4176);
      real r4178#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs40FF);
      real r4179#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult4153);
      real r417A#1 = RMul(r4178,r4179);
      real r417B#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs40FF);
      real r417C#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult4153);
      real r417D#1 = RMul(r417B,r417C);
      real r417E#1 = RAdd(r4174,r4177);
      real r417F#1 = RAdd(r417E,r417A);
      real r4180#1 = RAdd(r417F,r417D);
      real r4181#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult4153);
      real r4182#1 = RMul(r4172,r4181);
      real r4183#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult4153);
      real r4184#1 = RMul(r4175,r4183);
      real r4185#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult4153);
      real r4186#1 = RMul(r4178,r4185);
      real r4187#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult4153);
      real r4188#1 = RMul(r417B,r4187);
      real r4189#1 = RAdd(r4182,r4184);
      real r418A#1 = RAdd(r4189,r4186);
      real r418B#1 = RAdd(r418A,r4188);
      real r418C#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult4153);
      real r418D#1 = RMul(r4172,r418C);
      real r418E#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult4153);
      real r418F#1 = RMul(r4175,r418E);
      real r4190#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult4153);
      real r4191#1 = RMul(r4178,r4190);
      real r4192#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult4153);
      real r4193#1 = RMul(r417B,r4192);
      real r4194#1 = RAdd(r418D,r418F);
      real r4195#1 = RAdd(r4194,r4191);
      real r4196#1 = RAdd(r4195,r4193);
      tensor[3] tensor4197#1 = <tensor[3]>[r4180,r418B,r4196];
      real r4198#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs40FF);
      real r4199#1 = RMul(r4198,r4173);
      real r419A#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs40FF);
      real r419B#1 = RMul(r419A,r4176);
      real r419C#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs40FF);
      real r419D#1 = RMul(r419C,r4179);
      real r419E#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs40FF);
      real r419F#1 = RMul(r419E,r417C);
      real r41A0#1 = RAdd(r4199,r419B);
      real r41A1#1 = RAdd(r41A0,r419D);
      real r41A2#1 = RAdd(r41A1,r419F);
      real r41A3#1 = RMul(r4198,r4181);
      real r41A4#1 = RMul(r419A,r4183);
      real r41A5#1 = RMul(r419C,r4185);
      real r41A6#1 = RMul(r419E,r4187);
      real r41A7#1 = RAdd(r41A3,r41A4);
      real r41A8#1 = RAdd(r41A7,r41A5);
      real r41A9#1 = RAdd(r41A8,r41A6);
      real r41AA#1 = RMul(r4198,r418C);
      real r41AB#1 = RMul(r419A,r418E);
      real r41AC#1 = RMul(r419C,r4190);
      real r41AD#1 = RMul(r419E,r4192);
      real r41AE#1 = RAdd(r41AA,r41AB);
      real r41AF#1 = RAdd(r41AE,r41AC);
      real r41B0#1 = RAdd(r41AF,r41AD);
      tensor[3] tensor41B1#1 = <tensor[3]>[r41A2,r41A9,r41B0];
      real r41B2#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs40FF);
      real r41B3#1 = RMul(r41B2,r4173);
      real r41B4#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs40FF);
      real r41B5#1 = RMul(r41B4,r4176);
      real r41B6#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs40FF);
      real r41B7#1 = RMul(r41B6,r4179);
      real r41B8#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs40FF);
      real r41B9#1 = RMul(r41B8,r417C);
      real r41BA#1 = RAdd(r41B3,r41B5);
      real r41BB#1 = RAdd(r41BA,r41B7);
      real r41BC#1 = RAdd(r41BB,r41B9);
      real r41BD#1 = RMul(r41B2,r4181);
      real r41BE#1 = RMul(r41B4,r4183);
      real r41BF#1 = RMul(r41B6,r4185);
      real r41C0#1 = RMul(r41B8,r4187);
      real r41C1#1 = RAdd(r41BD,r41BE);
      real r41C2#1 = RAdd(r41C1,r41BF);
      real r41C3#1 = RAdd(r41C2,r41C0);
      real r41C4#1 = RMul(r41B2,r418C);
      real r41C5#1 = RMul(r41B4,r418E);
      real r41C6#1 = RMul(r41B6,r4190);
      real r41C7#1 = RMul(r41B8,r4192);
      real r41C8#1 = RAdd(r41C4,r41C5);
      real r41C9#1 = RAdd(r41C8,r41C6);
      real r41CA#1 = RAdd(r41C9,r41C7);
      tensor[3] tensor41CB#1 = <tensor[3]>[r41BC,r41C3,r41CA];
      tensor[3,3] probe_l_74171#18 = <tensor[3,3]>[tensor4197,tensor41B1,tensor41CB];
      real realLit4229#9 = 0.e0;
      real r422A#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_74171);
      real r422B#3 = RMul(realLit4229,r422A);
      real r422C#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_74171);
      real r422D#3 = RMul(realLit4229,r422C);
      real r422E#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_74171);
      real r422F#5 = RMul(realLit4229,r422E);
      real r4230#3 = RAdd(r422B,r422D);
      real r4231#1 = RAdd(r4230,r422F);
      real r4232#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_74171);
      real r4233#3 = RMul(realLit4229,r4232);
      real r4234#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_74171);
      real r4235#3 = RMul(realLit4229,r4234);
      real r4236#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_74171);
      real r4237#5 = RMul(realLit4229,r4236);
      real r4238#3 = RAdd(r4233,r4235);
      real r4239#1 = RAdd(r4238,r4237);
      real r423A#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_74171);
      real r423B#3 = RMul(realLit4229,r423A);
      real r423C#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_74171);
      real r423D#3 = RMul(realLit4229,r423C);
      real r423E#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_74171);
      real r423F#5 = RMul(realLit4229,r423E);
      real r4240#3 = RAdd(r423B,r423D);
      real r4241#1 = RAdd(r4240,r423F);
      tensor[3] tensor4242#3 = <tensor[3]>[r4231,r4239,r4241];
      real realLit4243#9 = -0.1e1;
      real r4244#1 = RMul(realLit4243,r422E);
      real r4245#1 = RAdd(r4230,r4244);
      real r4246#1 = RMul(realLit4243,r4236);
      real r4247#1 = RAdd(r4238,r4246);
      real r4248#1 = RMul(realLit4243,r423E);
      real r4249#1 = RAdd(r4240,r4248);
      tensor[3] tensor424A#1 = <tensor[3]>[r4245,r4247,r4249];
      real realLit424B#9 = 0.1e1;
      real r424C#1 = RMul(realLit424B,r422C);
      real r424D#1 = RAdd(r422B,r424C);
      real r424E#1 = RAdd(r424D,r422F);
      real r424F#1 = RMul(realLit424B,r4234);
      real r4250#1 = RAdd(r4233,r424F);
      real r4251#1 = RAdd(r4250,r4237);
      real r4252#1 = RMul(realLit424B,r423C);
      real r4253#1 = RAdd(r423B,r4252);
      real r4254#1 = RAdd(r4253,r423F);
      tensor[3] tensor4255#1 = <tensor[3]>[r424E,r4251,r4254];
      tensor[3,3] tensor4256#1 = <tensor[3,3]>[tensor4242,tensor424A,tensor4255];
      real r4257#1 = RMul(realLit424B,r422E);
      real r4258#1 = RAdd(r4230,r4257);
      real r4259#1 = RMul(realLit424B,r4236);
      real r425A#1 = RAdd(r4238,r4259);
      real r425B#1 = RMul(realLit424B,r423E);
      real r425C#1 = RAdd(r4240,r425B);
      tensor[3] tensor425D#1 = <tensor[3]>[r4258,r425A,r425C];
      real r425E#1 = RMul(realLit4243,r422A);
      real r425F#1 = RAdd(r425E,r422D);
      real r4260#1 = RAdd(r425F,r422F);
      real r4261#1 = RMul(realLit4243,r4232);
      real r4262#1 = RAdd(r4261,r4235);
      real r4263#1 = RAdd(r4262,r4237);
      real r4264#1 = RMul(realLit4243,r423A);
      real r4265#1 = RAdd(r4264,r423D);
      real r4266#1 = RAdd(r4265,r423F);
      tensor[3] tensor4267#1 = <tensor[3]>[r4260,r4263,r4266];
      tensor[3,3] tensor4268#1 = <tensor[3,3]>[tensor425D,tensor4242,tensor4267];
      real r4269#1 = RMul(realLit4243,r422C);
      real r426A#1 = RAdd(r422B,r4269);
      real r426B#1 = RAdd(r426A,r422F);
      real r426C#1 = RMul(realLit4243,r4234);
      real r426D#1 = RAdd(r4233,r426C);
      real r426E#1 = RAdd(r426D,r4237);
      real r426F#1 = RMul(realLit4243,r423C);
      real r4270#1 = RAdd(r423B,r426F);
      real r4271#1 = RAdd(r4270,r423F);
      tensor[3] tensor4272#1 = <tensor[3]>[r426B,r426E,r4271];
      real r4273#1 = RMul(realLit424B,r422A);
      real r4274#1 = RAdd(r4273,r422D);
      real r4275#1 = RAdd(r4274,r422F);
      real r4276#1 = RMul(realLit424B,r4232);
      real r4277#1 = RAdd(r4276,r4235);
      real r4278#1 = RAdd(r4277,r4237);
      real r4279#1 = RMul(realLit424B,r423A);
      real r427A#1 = RAdd(r4279,r423D);
      real r427B#1 = RAdd(r427A,r423F);
      tensor[3] tensor427C#1 = <tensor[3]>[r4275,r4278,r427B];
      tensor[3,3] tensor427D#1 = <tensor[3,3]>[tensor4272,tensor427C,tensor4242];
      tensor[3,3,3] op1_e3_l_94228#27 = <tensor[3,3,3]>[tensor4256,tensor4268,tensor427D];
      real r42D6#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_74171);
      real r42D7#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_94228);
      real r42D8#1 = RMul(r42D6,r42D7);
      real r42D9#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_74171);
      real r42DA#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_94228);
      real r42DB#1 = RMul(r42D9,r42DA);
      real r42DC#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_74171);
      real r42DD#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_94228);
      real r42DE#1 = RMul(r42DC,r42DD);
      real r42DF#1 = RAdd(r42D8,r42DB);
      real r42E0#1 = RAdd(r42DF,r42DE);
      real r42E1#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_94228);
      real r42E2#1 = RMul(r42D6,r42E1);
      real r42E3#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_94228);
      real r42E4#1 = RMul(r42D9,r42E3);
      real r42E5#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_94228);
      real r42E6#1 = RMul(r42DC,r42E5);
      real r42E7#1 = RAdd(r42E2,r42E4);
      real r42E8#1 = RAdd(r42E7,r42E6);
      real r42E9#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_94228);
      real r42EA#1 = RMul(r42D6,r42E9);
      real r42EB#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_94228);
      real r42EC#1 = RMul(r42D9,r42EB);
      real r42ED#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_94228);
      real r42EE#1 = RMul(r42DC,r42ED);
      real r42EF#1 = RAdd(r42EA,r42EC);
      real r42F0#1 = RAdd(r42EF,r42EE);
      tensor[3] tensor42F1#1 = <tensor[3]>[r42E0,r42E8,r42F0];
      real r42F2#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_94228);
      real r42F3#1 = RMul(r42D6,r42F2);
      real r42F4#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_94228);
      real r42F5#1 = RMul(r42D9,r42F4);
      real r42F6#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_94228);
      real r42F7#1 = RMul(r42DC,r42F6);
      real r42F8#1 = RAdd(r42F3,r42F5);
      real r42F9#1 = RAdd(r42F8,r42F7);
      real r42FA#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_94228);
      real r42FB#1 = RMul(r42D6,r42FA);
      real r42FC#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_94228);
      real r42FD#1 = RMul(r42D9,r42FC);
      real r42FE#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_94228);
      real r42FF#1 = RMul(r42DC,r42FE);
      real r4300#1 = RAdd(r42FB,r42FD);
      real r4301#1 = RAdd(r4300,r42FF);
      real r4302#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_94228);
      real r4303#1 = RMul(r42D6,r4302);
      real r4304#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_94228);
      real r4305#1 = RMul(r42D9,r4304);
      real r4306#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_94228);
      real r4307#1 = RMul(r42DC,r4306);
      real r4308#1 = RAdd(r4303,r4305);
      real r4309#1 = RAdd(r4308,r4307);
      tensor[3] tensor430A#1 = <tensor[3]>[r42F9,r4301,r4309];
      real r430B#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_94228);
      real r430C#1 = RMul(r42D6,r430B);
      real r430D#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_94228);
      real r430E#1 = RMul(r42D9,r430D);
      real r430F#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_94228);
      real r4310#1 = RMul(r42DC,r430F);
      real r4311#1 = RAdd(r430C,r430E);
      real r4312#1 = RAdd(r4311,r4310);
      real r4313#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_94228);
      real r4314#1 = RMul(r42D6,r4313);
      real r4315#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_94228);
      real r4316#1 = RMul(r42D9,r4315);
      real r4317#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_94228);
      real r4318#1 = RMul(r42DC,r4317);
      real r4319#1 = RAdd(r4314,r4316);
      real r431A#1 = RAdd(r4319,r4318);
      real r431B#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_94228);
      real r431C#1 = RMul(r42D6,r431B);
      real r431D#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_94228);
      real r431E#1 = RMul(r42D9,r431D);
      real r431F#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_94228);
      real r4320#1 = RMul(r42DC,r431F);
      real r4321#1 = RAdd(r431C,r431E);
      real r4322#1 = RAdd(r4321,r4320);
      tensor[3] tensor4323#1 = <tensor[3]>[r4312,r431A,r4322];
      tensor[3,3] tensor4324#1 = <tensor[3,3]>[tensor42F1,tensor430A,tensor4323];
      real r4325#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_74171);
      real r4326#1 = RMul(r4325,r42D7);
      real r4327#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_74171);
      real r4328#1 = RMul(r4327,r42DA);
      real r4329#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_74171);
      real r432A#1 = RMul(r4329,r42DD);
      real r432B#1 = RAdd(r4326,r4328);
      real r432C#1 = RAdd(r432B,r432A);
      real r432D#1 = RMul(r4325,r42E1);
      real r432E#1 = RMul(r4327,r42E3);
      real r432F#1 = RMul(r4329,r42E5);
      real r4330#1 = RAdd(r432D,r432E);
      real r4331#1 = RAdd(r4330,r432F);
      real r4332#1 = RMul(r4325,r42E9);
      real r4333#1 = RMul(r4327,r42EB);
      real r4334#1 = RMul(r4329,r42ED);
      real r4335#1 = RAdd(r4332,r4333);
      real r4336#1 = RAdd(r4335,r4334);
      tensor[3] tensor4337#1 = <tensor[3]>[r432C,r4331,r4336];
      real r4338#1 = RMul(r4325,r42F2);
      real r4339#1 = RMul(r4327,r42F4);
      real r433A#1 = RMul(r4329,r42F6);
      real r433B#1 = RAdd(r4338,r4339);
      real r433C#1 = RAdd(r433B,r433A);
      real r433D#1 = RMul(r4325,r42FA);
      real r433E#1 = RMul(r4327,r42FC);
      real r433F#1 = RMul(r4329,r42FE);
      real r4340#1 = RAdd(r433D,r433E);
      real r4341#1 = RAdd(r4340,r433F);
      real r4342#1 = RMul(r4325,r4302);
      real r4343#1 = RMul(r4327,r4304);
      real r4344#1 = RMul(r4329,r4306);
      real r4345#1 = RAdd(r4342,r4343);
      real r4346#1 = RAdd(r4345,r4344);
      tensor[3] tensor4347#1 = <tensor[3]>[r433C,r4341,r4346];
      real r4348#1 = RMul(r4325,r430B);
      real r4349#1 = RMul(r4327,r430D);
      real r434A#1 = RMul(r4329,r430F);
      real r434B#1 = RAdd(r4348,r4349);
      real r434C#1 = RAdd(r434B,r434A);
      real r434D#1 = RMul(r4325,r4313);
      real r434E#1 = RMul(r4327,r4315);
      real r434F#1 = RMul(r4329,r4317);
      real r4350#1 = RAdd(r434D,r434E);
      real r4351#1 = RAdd(r4350,r434F);
      real r4352#1 = RMul(r4325,r431B);
      real r4353#1 = RMul(r4327,r431D);
      real r4354#1 = RMul(r4329,r431F);
      real r4355#1 = RAdd(r4352,r4353);
      real r4356#1 = RAdd(r4355,r4354);
      tensor[3] tensor4357#1 = <tensor[3]>[r434C,r4351,r4356];
      tensor[3,3] tensor4358#1 = <tensor[3,3]>[tensor4337,tensor4347,tensor4357];
      real r4359#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_74171);
      real r435A#1 = RMul(r4359,r42D7);
      real r435B#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_74171);
      real r435C#1 = RMul(r435B,r42DA);
      real r435D#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_74171);
      real r435E#1 = RMul(r435D,r42DD);
      real r435F#1 = RAdd(r435A,r435C);
      real r4360#1 = RAdd(r435F,r435E);
      real r4361#1 = RMul(r4359,r42E1);
      real r4362#1 = RMul(r435B,r42E3);
      real r4363#1 = RMul(r435D,r42E5);
      real r4364#1 = RAdd(r4361,r4362);
      real r4365#1 = RAdd(r4364,r4363);
      real r4366#1 = RMul(r4359,r42E9);
      real r4367#1 = RMul(r435B,r42EB);
      real r4368#1 = RMul(r435D,r42ED);
      real r4369#1 = RAdd(r4366,r4367);
      real r436A#1 = RAdd(r4369,r4368);
      tensor[3] tensor436B#1 = <tensor[3]>[r4360,r4365,r436A];
      real r436C#1 = RMul(r4359,r42F2);
      real r436D#1 = RMul(r435B,r42F4);
      real r436E#1 = RMul(r435D,r42F6);
      real r436F#1 = RAdd(r436C,r436D);
      real r4370#1 = RAdd(r436F,r436E);
      real r4371#1 = RMul(r4359,r42FA);
      real r4372#1 = RMul(r435B,r42FC);
      real r4373#1 = RMul(r435D,r42FE);
      real r4374#1 = RAdd(r4371,r4372);
      real r4375#1 = RAdd(r4374,r4373);
      real r4376#1 = RMul(r4359,r4302);
      real r4377#1 = RMul(r435B,r4304);
      real r4378#1 = RMul(r435D,r4306);
      real r4379#1 = RAdd(r4376,r4377);
      real r437A#1 = RAdd(r4379,r4378);
      tensor[3] tensor437B#1 = <tensor[3]>[r4370,r4375,r437A];
      real r437C#1 = RMul(r4359,r430B);
      real r437D#1 = RMul(r435B,r430D);
      real r437E#1 = RMul(r435D,r430F);
      real r437F#1 = RAdd(r437C,r437D);
      real r4380#1 = RAdd(r437F,r437E);
      real r4381#1 = RMul(r4359,r4313);
      real r4382#1 = RMul(r435B,r4315);
      real r4383#1 = RMul(r435D,r4317);
      real r4384#1 = RAdd(r4381,r4382);
      real r4385#1 = RAdd(r4384,r4383);
      real r4386#1 = RMul(r4359,r431B);
      real r4387#1 = RMul(r435B,r431D);
      real r4388#1 = RMul(r435D,r431F);
      real r4389#1 = RAdd(r4386,r4387);
      real r438A#1 = RAdd(r4389,r4388);
      tensor[3] tensor438B#1 = <tensor[3]>[r4380,r4385,r438A];
      tensor[3,3] tensor438C#1 = <tensor[3,3]>[tensor436B,tensor437B,tensor438B];
      tensor[3,3,3] op1_e3_l_1042D5#27 = <tensor[3,3,3]>[tensor4324,tensor4358,tensor438C];
      real r4447#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs40FF);
      real r4448#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult4153);
      real r4449#1 = RMul(r4447,r4448);
      real r444A#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs40FF);
      real r444B#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult4153);
      real r444C#1 = RMul(r444A,r444B);
      real r444D#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs40FF);
      real r444E#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult4153);
      real r444F#1 = RMul(r444D,r444E);
      real r4450#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs40FF);
      real r4451#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult4153);
      real r4452#1 = RMul(r4450,r4451);
      real r4453#1 = RAdd(r4449,r444C);
      real r4454#1 = RAdd(r4453,r444F);
      real r4455#1 = RAdd(r4454,r4452);
      real r4456#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs40FF);
      real r4457#1 = RMul(r4456,r4448);
      real r4458#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs40FF);
      real r4459#1 = RMul(r4458,r444B);
      real r445A#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs40FF);
      real r445B#1 = RMul(r445A,r444E);
      real r445C#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs40FF);
      real r445D#1 = RMul(r445C,r4451);
      real r445E#1 = RAdd(r4457,r4459);
      real r445F#1 = RAdd(r445E,r445B);
      real r4460#1 = RAdd(r445F,r445D);
      real r4461#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs40FF);
      real r4462#1 = RMul(r4461,r4448);
      real r4463#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs40FF);
      real r4464#1 = RMul(r4463,r444B);
      real r4465#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs40FF);
      real r4466#1 = RMul(r4465,r444E);
      real r4467#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs40FF);
      real r4468#1 = RMul(r4467,r4451);
      real r4469#1 = RAdd(r4462,r4464);
      real r446A#1 = RAdd(r4469,r4466);
      real r446B#1 = RAdd(r446A,r4468);
      tensor[3] probe_l_114446#1 = <tensor[3]>[r4455,r4460,r446B];
      real r4494#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs40FF);
      real r4495#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult4153);
      real r4496#1 = RMul(r4494,r4495);
      real r4497#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs40FF);
      real r4498#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult4153);
      real r4499#1 = RMul(r4497,r4498);
      real r449A#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs40FF);
      real r449B#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult4153);
      real r449C#1 = RMul(r449A,r449B);
      real r449D#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs40FF);
      real r449E#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult4153);
      real r449F#1 = RMul(r449D,r449E);
      real r44A0#1 = RAdd(r4496,r4499);
      real r44A1#1 = RAdd(r44A0,r449C);
      real r44A2#1 = RAdd(r44A1,r449F);
      real r44A3#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs40FF);
      real r44A4#1 = RMul(r44A3,r4495);
      real r44A5#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs40FF);
      real r44A6#1 = RMul(r44A5,r4498);
      real r44A7#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs40FF);
      real r44A8#1 = RMul(r44A7,r449B);
      real r44A9#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs40FF);
      real r44AA#1 = RMul(r44A9,r449E);
      real r44AB#1 = RAdd(r44A4,r44A6);
      real r44AC#1 = RAdd(r44AB,r44A8);
      real r44AD#1 = RAdd(r44AC,r44AA);
      real r44AE#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs40FF);
      real r44AF#1 = RMul(r44AE,r4495);
      real r44B0#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs40FF);
      real r44B1#1 = RMul(r44B0,r4498);
      real r44B2#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs40FF);
      real r44B3#1 = RMul(r44B2,r449B);
      real r44B4#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs40FF);
      real r44B5#1 = RMul(r44B4,r449E);
      real r44B6#1 = RAdd(r44AF,r44B1);
      real r44B7#1 = RAdd(r44B6,r44B3);
      real r44B8#1 = RAdd(r44B7,r44B5);
      tensor[3] probe_l_124493#3 = <tensor[3]>[r44A2,r44AD,r44B8];
      real r44E1#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs40FF);
      real r44E2#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult4153);
      real r44E3#1 = RMul(r44E1,r44E2);
      real r44E4#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs40FF);
      real r44E5#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult4153);
      real r44E6#1 = RMul(r44E4,r44E5);
      real r44E7#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs40FF);
      real r44E8#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult4153);
      real r44E9#1 = RMul(r44E7,r44E8);
      real r44EA#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs40FF);
      real r44EB#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult4153);
      real r44EC#1 = RMul(r44EA,r44EB);
      real r44ED#1 = RAdd(r44E3,r44E6);
      real r44EE#1 = RAdd(r44ED,r44E9);
      real r44EF#1 = RAdd(r44EE,r44EC);
      real r44F0#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs40FF);
      real r44F1#1 = RMul(r44F0,r44E2);
      real r44F2#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs40FF);
      real r44F3#1 = RMul(r44F2,r44E5);
      real r44F4#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs40FF);
      real r44F5#1 = RMul(r44F4,r44E8);
      real r44F6#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs40FF);
      real r44F7#1 = RMul(r44F6,r44EB);
      real r44F8#1 = RAdd(r44F1,r44F3);
      real r44F9#1 = RAdd(r44F8,r44F5);
      real r44FA#1 = RAdd(r44F9,r44F7);
      real r44FB#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs40FF);
      real r44FC#1 = RMul(r44FB,r44E2);
      real r44FD#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs40FF);
      real r44FE#1 = RMul(r44FD,r44E5);
      real r44FF#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs40FF);
      real r4500#1 = RMul(r44FF,r44E8);
      real r4501#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs40FF);
      real r4502#1 = RMul(r4501,r44EB);
      real r4503#1 = RAdd(r44FC,r44FE);
      real r4504#1 = RAdd(r4503,r4500);
      real r4505#1 = RAdd(r4504,r4502);
      tensor[3] probe_l_1344E0#3 = <tensor[3]>[r44EF,r44FA,r4505];
      real realLit452E#3 = 0.e0;
      real r452F#3 = TensorIndex<tensor[3],[0]>(probe_l_1344E0);
      real r4530#3 = RMul(realLit452E,r452F);
      real r4531#3 = TensorIndex<tensor[3],[1]>(probe_l_1344E0);
      real r4532#3 = RMul(realLit452E,r4531);
      real r4533#3 = TensorIndex<tensor[3],[2]>(probe_l_1344E0);
      real r4534#5 = RMul(realLit452E,r4533);
      real r4535#3 = RAdd(r4530,r4532);
      real r4536#3 = RAdd(r4535,r4534);
      real realLit4537#3 = 0.1e1;
      real r4538#1 = RMul(realLit4537,r4533);
      real r4539#1 = RAdd(r4535,r4538);
      real realLit453A#3 = -0.1e1;
      real r453B#1 = RMul(realLit453A,r4531);
      real r453C#1 = RAdd(r4530,r453B);
      real r453D#1 = RAdd(r453C,r4534);
      tensor[3] tensor453E#1 = <tensor[3]>[r4536,r4539,r453D];
      real r453F#1 = RMul(realLit453A,r4533);
      real r4540#1 = RAdd(r4535,r453F);
      real r4541#1 = RMul(realLit4537,r452F);
      real r4542#1 = RAdd(r4541,r4532);
      real r4543#1 = RAdd(r4542,r4534);
      tensor[3] tensor4544#1 = <tensor[3]>[r4540,r4536,r4543];
      real r4545#1 = RMul(realLit4537,r4531);
      real r4546#1 = RAdd(r4530,r4545);
      real r4547#1 = RAdd(r4546,r4534);
      real r4548#1 = RMul(realLit453A,r452F);
      real r4549#1 = RAdd(r4548,r4532);
      real r454A#1 = RAdd(r4549,r4534);
      tensor[3] tensor454B#1 = <tensor[3]>[r4547,r454A,r4536];
      tensor[3,3] op1_e3_l_14452D#3 = <tensor[3,3]>[tensor453E,tensor4544,tensor454B];
      tensor[3] projParam456D#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_14452D);
      real vdot456E#1 = VDot<3>(probe_l_124493,projParam456D);
      tensor[3] projParam456F#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_14452D);
      real vdot4570#1 = VDot<3>(probe_l_124493,projParam456F);
      tensor[3] projParam4571#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_14452D);
      real vdot4572#1 = VDot<3>(probe_l_124493,projParam4571);
      tensor[3] op1_e3_l_15456C#1 = <tensor[3]>[vdot456E,vdot4570,vdot4572];
      real op1_e3_l_16457B#1 = VDot<3>(probe_l_114446,op1_e3_l_15456C);
      real realLit457F#27 = 0.e0;
      real r4580#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_1042D5);
      real r4581#2 = RMul(realLit457F,r4580);
      real r4582#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_1042D5);
      real r4583#1 = RMul(realLit457F,r4582);
      real r4584#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_1042D5);
      real r4585#2 = RMul(realLit457F,r4584);
      real r4586#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_1042D5);
      real r4587#2 = RMul(realLit457F,r4586);
      real r4588#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_1042D5);
      real r4589#3 = RMul(realLit457F,r4588);
      real realLit458A#9 = 0.1e1;
      real r458B#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_1042D5);
      real r458C#1 = RMul(realLit458A,r458B);
      real r458D#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_1042D5);
      real r458E#2 = RMul(realLit457F,r458D);
      real realLit458F#9 = -0.1e1;
      real r4590#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_1042D5);
      real r4591#1 = RMul(realLit458F,r4590);
      real r4592#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_1042D5);
      real r4593#3 = RMul(realLit457F,r4592);
      real r4594#2 = RAdd(r4581,r4583);
      real r4595#1 = RAdd(r4594,r4585);
      real r4596#1 = RAdd(r4595,r4587);
      real r4597#1 = RAdd(r4596,r4589);
      real r4598#1 = RAdd(r4597,r458C);
      real r4599#1 = RAdd(r4598,r458E);
      real r459A#1 = RAdd(r4599,r4591);
      real r459B#1 = RAdd(r459A,r4593);
      real r459C#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_1042D5);
      real r459D#2 = RMul(realLit457F,r459C);
      real r459E#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_1042D5);
      real r459F#1 = RMul(realLit457F,r459E);
      real r45A0#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_1042D5);
      real r45A1#2 = RMul(realLit457F,r45A0);
      real r45A2#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_1042D5);
      real r45A3#2 = RMul(realLit457F,r45A2);
      real r45A4#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_1042D5);
      real r45A5#3 = RMul(realLit457F,r45A4);
      real r45A6#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_1042D5);
      real r45A7#1 = RMul(realLit458A,r45A6);
      real r45A8#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_1042D5);
      real r45A9#2 = RMul(realLit457F,r45A8);
      real r45AA#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_1042D5);
      real r45AB#1 = RMul(realLit458F,r45AA);
      real r45AC#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_1042D5);
      real r45AD#3 = RMul(realLit457F,r45AC);
      real r45AE#2 = RAdd(r459D,r459F);
      real r45AF#1 = RAdd(r45AE,r45A1);
      real r45B0#1 = RAdd(r45AF,r45A3);
      real r45B1#1 = RAdd(r45B0,r45A5);
      real r45B2#1 = RAdd(r45B1,r45A7);
      real r45B3#1 = RAdd(r45B2,r45A9);
      real r45B4#1 = RAdd(r45B3,r45AB);
      real r45B5#1 = RAdd(r45B4,r45AD);
      real r45B6#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_1042D5);
      real r45B7#2 = RMul(realLit457F,r45B6);
      real r45B8#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_1042D5);
      real r45B9#1 = RMul(realLit457F,r45B8);
      real r45BA#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_1042D5);
      real r45BB#2 = RMul(realLit457F,r45BA);
      real r45BC#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_1042D5);
      real r45BD#2 = RMul(realLit457F,r45BC);
      real r45BE#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_1042D5);
      real r45BF#3 = RMul(realLit457F,r45BE);
      real r45C0#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_1042D5);
      real r45C1#1 = RMul(realLit458A,r45C0);
      real r45C2#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_1042D5);
      real r45C3#2 = RMul(realLit457F,r45C2);
      real r45C4#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_1042D5);
      real r45C5#1 = RMul(realLit458F,r45C4);
      real r45C6#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_1042D5);
      real r45C7#3 = RMul(realLit457F,r45C6);
      real r45C8#2 = RAdd(r45B7,r45B9);
      real r45C9#1 = RAdd(r45C8,r45BB);
      real r45CA#1 = RAdd(r45C9,r45BD);
      real r45CB#1 = RAdd(r45CA,r45BF);
      real r45CC#1 = RAdd(r45CB,r45C1);
      real r45CD#1 = RAdd(r45CC,r45C3);
      real r45CE#1 = RAdd(r45CD,r45C5);
      real r45CF#1 = RAdd(r45CE,r45C7);
      tensor[3] tensor45D0#1 = <tensor[3]>[r459B,r45B5,r45CF];
      real r45D1#1 = RMul(realLit458F,r4584);
      real r45D2#2 = RMul(realLit457F,r458B);
      real r45D3#1 = RMul(realLit458A,r458D);
      real r45D4#2 = RMul(realLit457F,r4590);
      real r45D5#1 = RAdd(r4594,r45D1);
      real r45D6#1 = RAdd(r45D5,r4587);
      real r45D7#1 = RAdd(r45D6,r4589);
      real r45D8#1 = RAdd(r45D7,r45D2);
      real r45D9#1 = RAdd(r45D8,r45D3);
      real r45DA#1 = RAdd(r45D9,r45D4);
      real r45DB#1 = RAdd(r45DA,r4593);
      real r45DC#1 = RMul(realLit458F,r45A0);
      real r45DD#2 = RMul(realLit457F,r45A6);
      real r45DE#1 = RMul(realLit458A,r45A8);
      real r45DF#2 = RMul(realLit457F,r45AA);
      real r45E0#1 = RAdd(r45AE,r45DC);
      real r45E1#1 = RAdd(r45E0,r45A3);
      real r45E2#1 = RAdd(r45E1,r45A5);
      real r45E3#1 = RAdd(r45E2,r45DD);
      real r45E4#1 = RAdd(r45E3,r45DE);
      real r45E5#1 = RAdd(r45E4,r45DF);
      real r45E6#1 = RAdd(r45E5,r45AD);
      real r45E7#1 = RMul(realLit458F,r45BA);
      real r45E8#2 = RMul(realLit457F,r45C0);
      real r45E9#1 = RMul(realLit458A,r45C2);
      real r45EA#2 = RMul(realLit457F,r45C4);
      real r45EB#1 = RAdd(r45C8,r45E7);
      real r45EC#1 = RAdd(r45EB,r45BD);
      real r45ED#1 = RAdd(r45EC,r45BF);
      real r45EE#1 = RAdd(r45ED,r45E8);
      real r45EF#1 = RAdd(r45EE,r45E9);
      real r45F0#1 = RAdd(r45EF,r45EA);
      real r45F1#1 = RAdd(r45F0,r45C7);
      tensor[3] tensor45F2#1 = <tensor[3]>[r45DB,r45E6,r45F1];
      real r45F3#1 = RMul(realLit458A,r4582);
      real r45F4#1 = RMul(realLit458F,r4586);
      real r45F5#1 = RAdd(r4581,r45F3);
      real r45F6#1 = RAdd(r45F5,r4585);
      real r45F7#1 = RAdd(r45F6,r45F4);
      real r45F8#1 = RAdd(r45F7,r4589);
      real r45F9#1 = RAdd(r45F8,r45D2);
      real r45FA#1 = RAdd(r45F9,r458E);
      real r45FB#1 = RAdd(r45FA,r45D4);
      real r45FC#1 = RAdd(r45FB,r4593);
      real r45FD#1 = RMul(realLit458A,r459E);
      real r45FE#1 = RMul(realLit458F,r45A2);
      real r45FF#1 = RAdd(r459D,r45FD);
      real r4600#1 = RAdd(r45FF,r45A1);
      real r4601#1 = RAdd(r4600,r45FE);
      real r4602#1 = RAdd(r4601,r45A5);
      real r4603#1 = RAdd(r4602,r45DD);
      real r4604#1 = RAdd(r4603,r45A9);
      real r4605#1 = RAdd(r4604,r45DF);
      real r4606#1 = RAdd(r4605,r45AD);
      real r4607#1 = RMul(realLit458A,r45B8);
      real r4608#1 = RMul(realLit458F,r45BC);
      real r4609#1 = RAdd(r45B7,r4607);
      real r460A#1 = RAdd(r4609,r45BB);
      real r460B#1 = RAdd(r460A,r4608);
      real r460C#1 = RAdd(r460B,r45BF);
      real r460D#1 = RAdd(r460C,r45E8);
      real r460E#1 = RAdd(r460D,r45C3);
      real r460F#1 = RAdd(r460E,r45EA);
      real r4610#1 = RAdd(r460F,r45C7);
      tensor[3] tensor4611#1 = <tensor[3]>[r45FC,r4606,r4610];
      tensor[3,3] op1_e3_l_17457E#9 = <tensor[3,3]>[tensor45D0,tensor45F2,tensor4611];
      real realLit46A8#1 = 0.2e1;
      real op1_e3_l_1846A7#9 = RMul(realLit46A8,op1_e3_l_16457B);
      real r46AD#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_17457E);
      real r46AE#1 = RDiv(r46AD,op1_e3_l_1846A7);
      real r46AF#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_17457E);
      real r46B0#1 = RDiv(r46AF,op1_e3_l_1846A7);
      real r46B1#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_17457E);
      real r46B2#1 = RDiv(r46B1,op1_e3_l_1846A7);
      tensor[3] tensor46B3#1 = <tensor[3]>[r46AE,r46B0,r46B2];
      real r46B4#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_17457E);
      real r46B5#1 = RDiv(r46B4,op1_e3_l_1846A7);
      real r46B6#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_17457E);
      real r46B7#1 = RDiv(r46B6,op1_e3_l_1846A7);
      real r46B8#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_17457E);
      real r46B9#1 = RDiv(r46B8,op1_e3_l_1846A7);
      tensor[3] tensor46BA#1 = <tensor[3]>[r46B5,r46B7,r46B9];
      real r46BB#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_17457E);
      real r46BC#1 = RDiv(r46BB,op1_e3_l_1846A7);
      real r46BD#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_17457E);
      real r46BE#1 = RDiv(r46BD,op1_e3_l_1846A7);
      real r46BF#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_17457E);
      real r46C0#1 = RDiv(r46BF,op1_e3_l_1846A7);
      tensor[3] tensor46C1#1 = <tensor[3]>[r46BC,r46BE,r46C0];
      tensor[3,3] op1_e3_l_1946AC#3 = <tensor[3,3]>[tensor46B3,tensor46BA,tensor46C1];
      tensor[3] projParam46DA#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1946AC);
      real vdot46DB#1 = VDot<3>(projParam46DA,dPos40BB);
      tensor[3] projParam46DC#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1946AC);
      real vdot46DD#1 = VDot<3>(projParam46DC,dPos40BB);
      tensor[3] projParam46DE#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1946AC);
      real vdot46DF#1 = VDot<3>(projParam46DE,dPos40BB);
      tensor[3] op1_e3_l_2046D9#5 = <tensor[3]>[vdot46DB,vdot46DD,vdot46DF];
      tensor[3] op1_e3_l_2146E8#2 = VScale<3>(time46E9,op1_e3_l_2046D9);
      tensor[3] newPos46EC#2 = VAdd<3>(_t40DD,op1_e3_l_2146E8);
      real _t46EF#4 = 0.1e-8;
      real _t46F1#1 = RAdd(time40CA,_t46EF);
      tensor[3] _t46F4#1 = <tensor[3]>[time40CA,time40CA,time40CA];
      real _t46F6#1 = VDot<3>(_t46F4,newPos46EC);
      bool _t46F9#1 = GT<real>(_t46F1,_t46F6);
      tensor[3] _t46FB#1 = <tensor[3]>[_t46EF,_t46EF,_t46EF];
      tensor[3] v46FE#1 = VAdd<3>(_t46FB,_t40DD);
      tensor[3] _t46FD#3 = VAdd<3>(v46FE,op1_e3_l_2146E8);
      real _t4702#1 = VIndex<3,0>(_t46FD);
      real _t4704#3 = -0.e0;
      bool _t4706#1 = GT<real>(_t4702,_t4704);
      real _t4708#1 = VIndex<3,1>(_t46FD);
      bool _t470A#1 = GT<real>(_t4708,_t4704);
      real _t470C#1 = VIndex<3,2>(_t46FD);
      bool _t470E#1 = GT<real>(_t470C,_t4704);
      bool _t4710#1 = BAnd(_t470A,_t470E);
      bool _t4712#1 = BAnd(_t4706,_t4710);
      bool _t4714#1 = BAnd(_t46F9,_t4712);
      if _t4714 then goto ASSIGN4718 else goto ASSIGN4721
    ASSIGN4718:  preds = [COND4716]
      femData:MeshPos nmp4717#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t40D9,_t40DB,newPos46EC);
      return nmp4717
      goto JOIN471E
    JOIN471E:  preds = [*RETURN(nmp4717)4719,JOIN4F2F]
      femData:MeshPos cmp471A#1 = phi(nmp471B)
      real time471C#1 = phi(time471D)
      goto FOREACH40D1
    ASSIGN4721:  preds = [COND4716]
      int _t4720#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp40D3);
      real time4722#6 = +inf;
      int face4724#7 = -1;
      real faceTime4726#6 = -inf;
      real _t4728#15 = 0.57735026919e0;
      tensor[3] _t472A#4 = <tensor[3]>[_t4728,_t4728,_t4728];
      real op1_e3_l_10472C#1 = VDot<3>(_t472A,_t40DD);
      real op1_e3_l_25472F#1 = VDot<3>(_t472A,op1_e3_l_2046D9);
      real op1_e3_l_264732#1 = RSub(_t4728,op1_e3_l_10472C);
      real op1_e3_l_274735#1 = RMul(time46E9,op1_e3_l_25472F);
      real _t4738#4 = RDiv(op1_e3_l_264732,op1_e3_l_274735);
      real _t473B#8 = -0.1e-15;
      bool _t473D#1 = GTE<real>(_t4738,_t473B);
      bool _t473F#1 = GT<real>(time4722,_t4738);
      real r4742#3 = TensorIndex<tensor[4,3],[0,0]>(femDofs40FF);
      real r4743#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult4153);
      real r4744#1 = RMul(r4742,r4743);
      real r4745#3 = TensorIndex<tensor[4,3],[1,0]>(femDofs40FF);
      real r4746#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult4153);
      real r4747#1 = RMul(r4745,r4746);
      real r4748#3 = TensorIndex<tensor[4,3],[2,0]>(femDofs40FF);
      real r4749#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult4153);
      real r474A#1 = RMul(r4748,r4749);
      real r474B#3 = TensorIndex<tensor[4,3],[3,0]>(femDofs40FF);
      real r474C#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult4153);
      real r474D#1 = RMul(r474B,r474C);
      real r474E#1 = RAdd(r4744,r4747);
      real r474F#1 = RAdd(r474E,r474A);
      real r4750#1 = RAdd(r474F,r474D);
      real r4751#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult4153);
      real r4752#1 = RMul(r4742,r4751);
      real r4753#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult4153);
      real r4754#1 = RMul(r4745,r4753);
      real r4755#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult4153);
      real r4756#1 = RMul(r4748,r4755);
      real r4757#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult4153);
      real r4758#1 = RMul(r474B,r4757);
      real r4759#1 = RAdd(r4752,r4754);
      real r475A#1 = RAdd(r4759,r4756);
      real r475B#1 = RAdd(r475A,r4758);
      real r475C#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult4153);
      real r475D#1 = RMul(r4742,r475C);
      real r475E#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult4153);
      real r475F#1 = RMul(r4745,r475E);
      real r4760#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult4153);
      real r4761#1 = RMul(r4748,r4760);
      real r4762#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult4153);
      real r4763#1 = RMul(r474B,r4762);
      real r4764#1 = RAdd(r475D,r475F);
      real r4765#1 = RAdd(r4764,r4761);
      real r4766#1 = RAdd(r4765,r4763);
      tensor[3] tensor4767#1 = <tensor[3]>[r4750,r475B,r4766];
      real r4768#3 = TensorIndex<tensor[4,3],[0,1]>(femDofs40FF);
      real r4769#1 = RMul(r4768,r4743);
      real r476A#3 = TensorIndex<tensor[4,3],[1,1]>(femDofs40FF);
      real r476B#1 = RMul(r476A,r4746);
      real r476C#3 = TensorIndex<tensor[4,3],[2,1]>(femDofs40FF);
      real r476D#1 = RMul(r476C,r4749);
      real r476E#3 = TensorIndex<tensor[4,3],[3,1]>(femDofs40FF);
      real r476F#1 = RMul(r476E,r474C);
      real r4770#1 = RAdd(r4769,r476B);
      real r4771#1 = RAdd(r4770,r476D);
      real r4772#1 = RAdd(r4771,r476F);
      real r4773#1 = RMul(r4768,r4751);
      real r4774#1 = RMul(r476A,r4753);
      real r4775#1 = RMul(r476C,r4755);
      real r4776#1 = RMul(r476E,r4757);
      real r4777#1 = RAdd(r4773,r4774);
      real r4778#1 = RAdd(r4777,r4775);
      real r4779#1 = RAdd(r4778,r4776);
      real r477A#1 = RMul(r4768,r475C);
      real r477B#1 = RMul(r476A,r475E);
      real r477C#1 = RMul(r476C,r4760);
      real r477D#1 = RMul(r476E,r4762);
      real r477E#1 = RAdd(r477A,r477B);
      real r477F#1 = RAdd(r477E,r477C);
      real r4780#1 = RAdd(r477F,r477D);
      tensor[3] tensor4781#1 = <tensor[3]>[r4772,r4779,r4780];
      real r4782#3 = TensorIndex<tensor[4,3],[0,2]>(femDofs40FF);
      real r4783#1 = RMul(r4782,r4743);
      real r4784#3 = TensorIndex<tensor[4,3],[1,2]>(femDofs40FF);
      real r4785#1 = RMul(r4784,r4746);
      real r4786#3 = TensorIndex<tensor[4,3],[2,2]>(femDofs40FF);
      real r4787#1 = RMul(r4786,r4749);
      real r4788#3 = TensorIndex<tensor[4,3],[3,2]>(femDofs40FF);
      real r4789#1 = RMul(r4788,r474C);
      real r478A#1 = RAdd(r4783,r4785);
      real r478B#1 = RAdd(r478A,r4787);
      real r478C#1 = RAdd(r478B,r4789);
      real r478D#1 = RMul(r4782,r4751);
      real r478E#1 = RMul(r4784,r4753);
      real r478F#1 = RMul(r4786,r4755);
      real r4790#1 = RMul(r4788,r4757);
      real r4791#1 = RAdd(r478D,r478E);
      real r4792#1 = RAdd(r4791,r478F);
      real r4793#1 = RAdd(r4792,r4790);
      real r4794#1 = RMul(r4782,r475C);
      real r4795#1 = RMul(r4784,r475E);
      real r4796#1 = RMul(r4786,r4760);
      real r4797#1 = RMul(r4788,r4762);
      real r4798#1 = RAdd(r4794,r4795);
      real r4799#1 = RAdd(r4798,r4796);
      real r479A#1 = RAdd(r4799,r4797);
      tensor[3] tensor479B#1 = <tensor[3]>[r478C,r4793,r479A];
      tensor[3,3] probe_l_74741#18 = <tensor[3,3]>[tensor4767,tensor4781,tensor479B];
      real realLit47F9#9 = 0.e0;
      real r47FA#3 = TensorIndex<tensor[3,3],[0,0]>(probe_l_74741);
      real r47FB#3 = RMul(realLit47F9,r47FA);
      real r47FC#3 = TensorIndex<tensor[3,3],[1,0]>(probe_l_74741);
      real r47FD#3 = RMul(realLit47F9,r47FC);
      real r47FE#3 = TensorIndex<tensor[3,3],[2,0]>(probe_l_74741);
      real r47FF#5 = RMul(realLit47F9,r47FE);
      real r4800#3 = RAdd(r47FB,r47FD);
      real r4801#1 = RAdd(r4800,r47FF);
      real r4802#3 = TensorIndex<tensor[3,3],[0,1]>(probe_l_74741);
      real r4803#3 = RMul(realLit47F9,r4802);
      real r4804#3 = TensorIndex<tensor[3,3],[1,1]>(probe_l_74741);
      real r4805#3 = RMul(realLit47F9,r4804);
      real r4806#3 = TensorIndex<tensor[3,3],[2,1]>(probe_l_74741);
      real r4807#5 = RMul(realLit47F9,r4806);
      real r4808#3 = RAdd(r4803,r4805);
      real r4809#1 = RAdd(r4808,r4807);
      real r480A#3 = TensorIndex<tensor[3,3],[0,2]>(probe_l_74741);
      real r480B#3 = RMul(realLit47F9,r480A);
      real r480C#3 = TensorIndex<tensor[3,3],[1,2]>(probe_l_74741);
      real r480D#3 = RMul(realLit47F9,r480C);
      real r480E#3 = TensorIndex<tensor[3,3],[2,2]>(probe_l_74741);
      real r480F#5 = RMul(realLit47F9,r480E);
      real r4810#3 = RAdd(r480B,r480D);
      real r4811#1 = RAdd(r4810,r480F);
      tensor[3] tensor4812#3 = <tensor[3]>[r4801,r4809,r4811];
      real realLit4813#9 = -0.1e1;
      real r4814#1 = RMul(realLit4813,r47FE);
      real r4815#1 = RAdd(r4800,r4814);
      real r4816#1 = RMul(realLit4813,r4806);
      real r4817#1 = RAdd(r4808,r4816);
      real r4818#1 = RMul(realLit4813,r480E);
      real r4819#1 = RAdd(r4810,r4818);
      tensor[3] tensor481A#1 = <tensor[3]>[r4815,r4817,r4819];
      real realLit481B#9 = 0.1e1;
      real r481C#1 = RMul(realLit481B,r47FC);
      real r481D#1 = RAdd(r47FB,r481C);
      real r481E#1 = RAdd(r481D,r47FF);
      real r481F#1 = RMul(realLit481B,r4804);
      real r4820#1 = RAdd(r4803,r481F);
      real r4821#1 = RAdd(r4820,r4807);
      real r4822#1 = RMul(realLit481B,r480C);
      real r4823#1 = RAdd(r480B,r4822);
      real r4824#1 = RAdd(r4823,r480F);
      tensor[3] tensor4825#1 = <tensor[3]>[r481E,r4821,r4824];
      tensor[3,3] tensor4826#1 = <tensor[3,3]>[tensor4812,tensor481A,tensor4825];
      real r4827#1 = RMul(realLit481B,r47FE);
      real r4828#1 = RAdd(r4800,r4827);
      real r4829#1 = RMul(realLit481B,r4806);
      real r482A#1 = RAdd(r4808,r4829);
      real r482B#1 = RMul(realLit481B,r480E);
      real r482C#1 = RAdd(r4810,r482B);
      tensor[3] tensor482D#1 = <tensor[3]>[r4828,r482A,r482C];
      real r482E#1 = RMul(realLit4813,r47FA);
      real r482F#1 = RAdd(r482E,r47FD);
      real r4830#1 = RAdd(r482F,r47FF);
      real r4831#1 = RMul(realLit4813,r4802);
      real r4832#1 = RAdd(r4831,r4805);
      real r4833#1 = RAdd(r4832,r4807);
      real r4834#1 = RMul(realLit4813,r480A);
      real r4835#1 = RAdd(r4834,r480D);
      real r4836#1 = RAdd(r4835,r480F);
      tensor[3] tensor4837#1 = <tensor[3]>[r4830,r4833,r4836];
      tensor[3,3] tensor4838#1 = <tensor[3,3]>[tensor482D,tensor4812,tensor4837];
      real r4839#1 = RMul(realLit4813,r47FC);
      real r483A#1 = RAdd(r47FB,r4839);
      real r483B#1 = RAdd(r483A,r47FF);
      real r483C#1 = RMul(realLit4813,r4804);
      real r483D#1 = RAdd(r4803,r483C);
      real r483E#1 = RAdd(r483D,r4807);
      real r483F#1 = RMul(realLit4813,r480C);
      real r4840#1 = RAdd(r480B,r483F);
      real r4841#1 = RAdd(r4840,r480F);
      tensor[3] tensor4842#1 = <tensor[3]>[r483B,r483E,r4841];
      real r4843#1 = RMul(realLit481B,r47FA);
      real r4844#1 = RAdd(r4843,r47FD);
      real r4845#1 = RAdd(r4844,r47FF);
      real r4846#1 = RMul(realLit481B,r4802);
      real r4847#1 = RAdd(r4846,r4805);
      real r4848#1 = RAdd(r4847,r4807);
      real r4849#1 = RMul(realLit481B,r480A);
      real r484A#1 = RAdd(r4849,r480D);
      real r484B#1 = RAdd(r484A,r480F);
      tensor[3] tensor484C#1 = <tensor[3]>[r4845,r4848,r484B];
      tensor[3,3] tensor484D#1 = <tensor[3,3]>[tensor4842,tensor484C,tensor4812];
      tensor[3,3,3] op1_e3_l_947F8#27 = <tensor[3,3,3]>[tensor4826,tensor4838,tensor484D];
      real r48A6#9 = TensorIndex<tensor[3,3],[0,0]>(probe_l_74741);
      real r48A7#3 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_947F8);
      real r48A8#1 = RMul(r48A6,r48A7);
      real r48A9#9 = TensorIndex<tensor[3,3],[1,0]>(probe_l_74741);
      real r48AA#3 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_947F8);
      real r48AB#1 = RMul(r48A9,r48AA);
      real r48AC#9 = TensorIndex<tensor[3,3],[2,0]>(probe_l_74741);
      real r48AD#3 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_947F8);
      real r48AE#1 = RMul(r48AC,r48AD);
      real r48AF#1 = RAdd(r48A8,r48AB);
      real r48B0#1 = RAdd(r48AF,r48AE);
      real r48B1#3 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_947F8);
      real r48B2#1 = RMul(r48A6,r48B1);
      real r48B3#3 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_947F8);
      real r48B4#1 = RMul(r48A9,r48B3);
      real r48B5#3 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_947F8);
      real r48B6#1 = RMul(r48AC,r48B5);
      real r48B7#1 = RAdd(r48B2,r48B4);
      real r48B8#1 = RAdd(r48B7,r48B6);
      real r48B9#3 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_947F8);
      real r48BA#1 = RMul(r48A6,r48B9);
      real r48BB#3 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_947F8);
      real r48BC#1 = RMul(r48A9,r48BB);
      real r48BD#3 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_947F8);
      real r48BE#1 = RMul(r48AC,r48BD);
      real r48BF#1 = RAdd(r48BA,r48BC);
      real r48C0#1 = RAdd(r48BF,r48BE);
      tensor[3] tensor48C1#1 = <tensor[3]>[r48B0,r48B8,r48C0];
      real r48C2#3 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_947F8);
      real r48C3#1 = RMul(r48A6,r48C2);
      real r48C4#3 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_947F8);
      real r48C5#1 = RMul(r48A9,r48C4);
      real r48C6#3 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_947F8);
      real r48C7#1 = RMul(r48AC,r48C6);
      real r48C8#1 = RAdd(r48C3,r48C5);
      real r48C9#1 = RAdd(r48C8,r48C7);
      real r48CA#3 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_947F8);
      real r48CB#1 = RMul(r48A6,r48CA);
      real r48CC#3 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_947F8);
      real r48CD#1 = RMul(r48A9,r48CC);
      real r48CE#3 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_947F8);
      real r48CF#1 = RMul(r48AC,r48CE);
      real r48D0#1 = RAdd(r48CB,r48CD);
      real r48D1#1 = RAdd(r48D0,r48CF);
      real r48D2#3 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_947F8);
      real r48D3#1 = RMul(r48A6,r48D2);
      real r48D4#3 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_947F8);
      real r48D5#1 = RMul(r48A9,r48D4);
      real r48D6#3 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_947F8);
      real r48D7#1 = RMul(r48AC,r48D6);
      real r48D8#1 = RAdd(r48D3,r48D5);
      real r48D9#1 = RAdd(r48D8,r48D7);
      tensor[3] tensor48DA#1 = <tensor[3]>[r48C9,r48D1,r48D9];
      real r48DB#3 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_947F8);
      real r48DC#1 = RMul(r48A6,r48DB);
      real r48DD#3 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_947F8);
      real r48DE#1 = RMul(r48A9,r48DD);
      real r48DF#3 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_947F8);
      real r48E0#1 = RMul(r48AC,r48DF);
      real r48E1#1 = RAdd(r48DC,r48DE);
      real r48E2#1 = RAdd(r48E1,r48E0);
      real r48E3#3 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_947F8);
      real r48E4#1 = RMul(r48A6,r48E3);
      real r48E5#3 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_947F8);
      real r48E6#1 = RMul(r48A9,r48E5);
      real r48E7#3 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_947F8);
      real r48E8#1 = RMul(r48AC,r48E7);
      real r48E9#1 = RAdd(r48E4,r48E6);
      real r48EA#1 = RAdd(r48E9,r48E8);
      real r48EB#3 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_947F8);
      real r48EC#1 = RMul(r48A6,r48EB);
      real r48ED#3 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_947F8);
      real r48EE#1 = RMul(r48A9,r48ED);
      real r48EF#3 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_947F8);
      real r48F0#1 = RMul(r48AC,r48EF);
      real r48F1#1 = RAdd(r48EC,r48EE);
      real r48F2#1 = RAdd(r48F1,r48F0);
      tensor[3] tensor48F3#1 = <tensor[3]>[r48E2,r48EA,r48F2];
      tensor[3,3] tensor48F4#1 = <tensor[3,3]>[tensor48C1,tensor48DA,tensor48F3];
      real r48F5#9 = TensorIndex<tensor[3,3],[0,1]>(probe_l_74741);
      real r48F6#1 = RMul(r48F5,r48A7);
      real r48F7#9 = TensorIndex<tensor[3,3],[1,1]>(probe_l_74741);
      real r48F8#1 = RMul(r48F7,r48AA);
      real r48F9#9 = TensorIndex<tensor[3,3],[2,1]>(probe_l_74741);
      real r48FA#1 = RMul(r48F9,r48AD);
      real r48FB#1 = RAdd(r48F6,r48F8);
      real r48FC#1 = RAdd(r48FB,r48FA);
      real r48FD#1 = RMul(r48F5,r48B1);
      real r48FE#1 = RMul(r48F7,r48B3);
      real r48FF#1 = RMul(r48F9,r48B5);
      real r4900#1 = RAdd(r48FD,r48FE);
      real r4901#1 = RAdd(r4900,r48FF);
      real r4902#1 = RMul(r48F5,r48B9);
      real r4903#1 = RMul(r48F7,r48BB);
      real r4904#1 = RMul(r48F9,r48BD);
      real r4905#1 = RAdd(r4902,r4903);
      real r4906#1 = RAdd(r4905,r4904);
      tensor[3] tensor4907#1 = <tensor[3]>[r48FC,r4901,r4906];
      real r4908#1 = RMul(r48F5,r48C2);
      real r4909#1 = RMul(r48F7,r48C4);
      real r490A#1 = RMul(r48F9,r48C6);
      real r490B#1 = RAdd(r4908,r4909);
      real r490C#1 = RAdd(r490B,r490A);
      real r490D#1 = RMul(r48F5,r48CA);
      real r490E#1 = RMul(r48F7,r48CC);
      real r490F#1 = RMul(r48F9,r48CE);
      real r4910#1 = RAdd(r490D,r490E);
      real r4911#1 = RAdd(r4910,r490F);
      real r4912#1 = RMul(r48F5,r48D2);
      real r4913#1 = RMul(r48F7,r48D4);
      real r4914#1 = RMul(r48F9,r48D6);
      real r4915#1 = RAdd(r4912,r4913);
      real r4916#1 = RAdd(r4915,r4914);
      tensor[3] tensor4917#1 = <tensor[3]>[r490C,r4911,r4916];
      real r4918#1 = RMul(r48F5,r48DB);
      real r4919#1 = RMul(r48F7,r48DD);
      real r491A#1 = RMul(r48F9,r48DF);
      real r491B#1 = RAdd(r4918,r4919);
      real r491C#1 = RAdd(r491B,r491A);
      real r491D#1 = RMul(r48F5,r48E3);
      real r491E#1 = RMul(r48F7,r48E5);
      real r491F#1 = RMul(r48F9,r48E7);
      real r4920#1 = RAdd(r491D,r491E);
      real r4921#1 = RAdd(r4920,r491F);
      real r4922#1 = RMul(r48F5,r48EB);
      real r4923#1 = RMul(r48F7,r48ED);
      real r4924#1 = RMul(r48F9,r48EF);
      real r4925#1 = RAdd(r4922,r4923);
      real r4926#1 = RAdd(r4925,r4924);
      tensor[3] tensor4927#1 = <tensor[3]>[r491C,r4921,r4926];
      tensor[3,3] tensor4928#1 = <tensor[3,3]>[tensor4907,tensor4917,tensor4927];
      real r4929#9 = TensorIndex<tensor[3,3],[0,2]>(probe_l_74741);
      real r492A#1 = RMul(r4929,r48A7);
      real r492B#9 = TensorIndex<tensor[3,3],[1,2]>(probe_l_74741);
      real r492C#1 = RMul(r492B,r48AA);
      real r492D#9 = TensorIndex<tensor[3,3],[2,2]>(probe_l_74741);
      real r492E#1 = RMul(r492D,r48AD);
      real r492F#1 = RAdd(r492A,r492C);
      real r4930#1 = RAdd(r492F,r492E);
      real r4931#1 = RMul(r4929,r48B1);
      real r4932#1 = RMul(r492B,r48B3);
      real r4933#1 = RMul(r492D,r48B5);
      real r4934#1 = RAdd(r4931,r4932);
      real r4935#1 = RAdd(r4934,r4933);
      real r4936#1 = RMul(r4929,r48B9);
      real r4937#1 = RMul(r492B,r48BB);
      real r4938#1 = RMul(r492D,r48BD);
      real r4939#1 = RAdd(r4936,r4937);
      real r493A#1 = RAdd(r4939,r4938);
      tensor[3] tensor493B#1 = <tensor[3]>[r4930,r4935,r493A];
      real r493C#1 = RMul(r4929,r48C2);
      real r493D#1 = RMul(r492B,r48C4);
      real r493E#1 = RMul(r492D,r48C6);
      real r493F#1 = RAdd(r493C,r493D);
      real r4940#1 = RAdd(r493F,r493E);
      real r4941#1 = RMul(r4929,r48CA);
      real r4942#1 = RMul(r492B,r48CC);
      real r4943#1 = RMul(r492D,r48CE);
      real r4944#1 = RAdd(r4941,r4942);
      real r4945#1 = RAdd(r4944,r4943);
      real r4946#1 = RMul(r4929,r48D2);
      real r4947#1 = RMul(r492B,r48D4);
      real r4948#1 = RMul(r492D,r48D6);
      real r4949#1 = RAdd(r4946,r4947);
      real r494A#1 = RAdd(r4949,r4948);
      tensor[3] tensor494B#1 = <tensor[3]>[r4940,r4945,r494A];
      real r494C#1 = RMul(r4929,r48DB);
      real r494D#1 = RMul(r492B,r48DD);
      real r494E#1 = RMul(r492D,r48DF);
      real r494F#1 = RAdd(r494C,r494D);
      real r4950#1 = RAdd(r494F,r494E);
      real r4951#1 = RMul(r4929,r48E3);
      real r4952#1 = RMul(r492B,r48E5);
      real r4953#1 = RMul(r492D,r48E7);
      real r4954#1 = RAdd(r4951,r4952);
      real r4955#1 = RAdd(r4954,r4953);
      real r4956#1 = RMul(r4929,r48EB);
      real r4957#1 = RMul(r492B,r48ED);
      real r4958#1 = RMul(r492D,r48EF);
      real r4959#1 = RAdd(r4956,r4957);
      real r495A#1 = RAdd(r4959,r4958);
      tensor[3] tensor495B#1 = <tensor[3]>[r4950,r4955,r495A];
      tensor[3,3] tensor495C#1 = <tensor[3,3]>[tensor493B,tensor494B,tensor495B];
      tensor[3,3,3] op1_e3_l_1048A5#27 = <tensor[3,3,3]>[tensor48F4,tensor4928,tensor495C];
      real r4A17#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs40FF);
      real r4A18#3 = TensorIndex<tensor[3,4],[0,0]>(basisResult4153);
      real r4A19#1 = RMul(r4A17,r4A18);
      real r4A1A#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs40FF);
      real r4A1B#3 = TensorIndex<tensor[3,4],[0,1]>(basisResult4153);
      real r4A1C#1 = RMul(r4A1A,r4A1B);
      real r4A1D#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs40FF);
      real r4A1E#3 = TensorIndex<tensor[3,4],[0,2]>(basisResult4153);
      real r4A1F#1 = RMul(r4A1D,r4A1E);
      real r4A20#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs40FF);
      real r4A21#3 = TensorIndex<tensor[3,4],[0,3]>(basisResult4153);
      real r4A22#1 = RMul(r4A20,r4A21);
      real r4A23#1 = RAdd(r4A19,r4A1C);
      real r4A24#1 = RAdd(r4A23,r4A1F);
      real r4A25#1 = RAdd(r4A24,r4A22);
      real r4A26#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs40FF);
      real r4A27#1 = RMul(r4A26,r4A18);
      real r4A28#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs40FF);
      real r4A29#1 = RMul(r4A28,r4A1B);
      real r4A2A#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs40FF);
      real r4A2B#1 = RMul(r4A2A,r4A1E);
      real r4A2C#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs40FF);
      real r4A2D#1 = RMul(r4A2C,r4A21);
      real r4A2E#1 = RAdd(r4A27,r4A29);
      real r4A2F#1 = RAdd(r4A2E,r4A2B);
      real r4A30#1 = RAdd(r4A2F,r4A2D);
      real r4A31#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs40FF);
      real r4A32#1 = RMul(r4A31,r4A18);
      real r4A33#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs40FF);
      real r4A34#1 = RMul(r4A33,r4A1B);
      real r4A35#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs40FF);
      real r4A36#1 = RMul(r4A35,r4A1E);
      real r4A37#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs40FF);
      real r4A38#1 = RMul(r4A37,r4A21);
      real r4A39#1 = RAdd(r4A32,r4A34);
      real r4A3A#1 = RAdd(r4A39,r4A36);
      real r4A3B#1 = RAdd(r4A3A,r4A38);
      tensor[3] probe_l_114A16#1 = <tensor[3]>[r4A25,r4A30,r4A3B];
      real r4A64#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs40FF);
      real r4A65#3 = TensorIndex<tensor[3,4],[1,0]>(basisResult4153);
      real r4A66#1 = RMul(r4A64,r4A65);
      real r4A67#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs40FF);
      real r4A68#3 = TensorIndex<tensor[3,4],[1,1]>(basisResult4153);
      real r4A69#1 = RMul(r4A67,r4A68);
      real r4A6A#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs40FF);
      real r4A6B#3 = TensorIndex<tensor[3,4],[1,2]>(basisResult4153);
      real r4A6C#1 = RMul(r4A6A,r4A6B);
      real r4A6D#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs40FF);
      real r4A6E#3 = TensorIndex<tensor[3,4],[1,3]>(basisResult4153);
      real r4A6F#1 = RMul(r4A6D,r4A6E);
      real r4A70#1 = RAdd(r4A66,r4A69);
      real r4A71#1 = RAdd(r4A70,r4A6C);
      real r4A72#1 = RAdd(r4A71,r4A6F);
      real r4A73#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs40FF);
      real r4A74#1 = RMul(r4A73,r4A65);
      real r4A75#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs40FF);
      real r4A76#1 = RMul(r4A75,r4A68);
      real r4A77#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs40FF);
      real r4A78#1 = RMul(r4A77,r4A6B);
      real r4A79#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs40FF);
      real r4A7A#1 = RMul(r4A79,r4A6E);
      real r4A7B#1 = RAdd(r4A74,r4A76);
      real r4A7C#1 = RAdd(r4A7B,r4A78);
      real r4A7D#1 = RAdd(r4A7C,r4A7A);
      real r4A7E#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs40FF);
      real r4A7F#1 = RMul(r4A7E,r4A65);
      real r4A80#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs40FF);
      real r4A81#1 = RMul(r4A80,r4A68);
      real r4A82#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs40FF);
      real r4A83#1 = RMul(r4A82,r4A6B);
      real r4A84#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs40FF);
      real r4A85#1 = RMul(r4A84,r4A6E);
      real r4A86#1 = RAdd(r4A7F,r4A81);
      real r4A87#1 = RAdd(r4A86,r4A83);
      real r4A88#1 = RAdd(r4A87,r4A85);
      tensor[3] probe_l_124A63#3 = <tensor[3]>[r4A72,r4A7D,r4A88];
      real r4AB1#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs40FF);
      real r4AB2#3 = TensorIndex<tensor[3,4],[2,0]>(basisResult4153);
      real r4AB3#1 = RMul(r4AB1,r4AB2);
      real r4AB4#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs40FF);
      real r4AB5#3 = TensorIndex<tensor[3,4],[2,1]>(basisResult4153);
      real r4AB6#1 = RMul(r4AB4,r4AB5);
      real r4AB7#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs40FF);
      real r4AB8#3 = TensorIndex<tensor[3,4],[2,2]>(basisResult4153);
      real r4AB9#1 = RMul(r4AB7,r4AB8);
      real r4ABA#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs40FF);
      real r4ABB#3 = TensorIndex<tensor[3,4],[2,3]>(basisResult4153);
      real r4ABC#1 = RMul(r4ABA,r4ABB);
      real r4ABD#1 = RAdd(r4AB3,r4AB6);
      real r4ABE#1 = RAdd(r4ABD,r4AB9);
      real r4ABF#1 = RAdd(r4ABE,r4ABC);
      real r4AC0#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs40FF);
      real r4AC1#1 = RMul(r4AC0,r4AB2);
      real r4AC2#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs40FF);
      real r4AC3#1 = RMul(r4AC2,r4AB5);
      real r4AC4#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs40FF);
      real r4AC5#1 = RMul(r4AC4,r4AB8);
      real r4AC6#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs40FF);
      real r4AC7#1 = RMul(r4AC6,r4ABB);
      real r4AC8#1 = RAdd(r4AC1,r4AC3);
      real r4AC9#1 = RAdd(r4AC8,r4AC5);
      real r4ACA#1 = RAdd(r4AC9,r4AC7);
      real r4ACB#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs40FF);
      real r4ACC#1 = RMul(r4ACB,r4AB2);
      real r4ACD#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs40FF);
      real r4ACE#1 = RMul(r4ACD,r4AB5);
      real r4ACF#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs40FF);
      real r4AD0#1 = RMul(r4ACF,r4AB8);
      real r4AD1#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs40FF);
      real r4AD2#1 = RMul(r4AD1,r4ABB);
      real r4AD3#1 = RAdd(r4ACC,r4ACE);
      real r4AD4#1 = RAdd(r4AD3,r4AD0);
      real r4AD5#1 = RAdd(r4AD4,r4AD2);
      tensor[3] probe_l_134AB0#3 = <tensor[3]>[r4ABF,r4ACA,r4AD5];
      real realLit4AFE#3 = 0.e0;
      real r4AFF#3 = TensorIndex<tensor[3],[0]>(probe_l_134AB0);
      real r4B00#3 = RMul(realLit4AFE,r4AFF);
      real r4B01#3 = TensorIndex<tensor[3],[1]>(probe_l_134AB0);
      real r4B02#3 = RMul(realLit4AFE,r4B01);
      real r4B03#3 = TensorIndex<tensor[3],[2]>(probe_l_134AB0);
      real r4B04#5 = RMul(realLit4AFE,r4B03);
      real r4B05#3 = RAdd(r4B00,r4B02);
      real r4B06#3 = RAdd(r4B05,r4B04);
      real realLit4B07#3 = 0.1e1;
      real r4B08#1 = RMul(realLit4B07,r4B03);
      real r4B09#1 = RAdd(r4B05,r4B08);
      real realLit4B0A#3 = -0.1e1;
      real r4B0B#1 = RMul(realLit4B0A,r4B01);
      real r4B0C#1 = RAdd(r4B00,r4B0B);
      real r4B0D#1 = RAdd(r4B0C,r4B04);
      tensor[3] tensor4B0E#1 = <tensor[3]>[r4B06,r4B09,r4B0D];
      real r4B0F#1 = RMul(realLit4B0A,r4B03);
      real r4B10#1 = RAdd(r4B05,r4B0F);
      real r4B11#1 = RMul(realLit4B07,r4AFF);
      real r4B12#1 = RAdd(r4B11,r4B02);
      real r4B13#1 = RAdd(r4B12,r4B04);
      tensor[3] tensor4B14#1 = <tensor[3]>[r4B10,r4B06,r4B13];
      real r4B15#1 = RMul(realLit4B07,r4B01);
      real r4B16#1 = RAdd(r4B00,r4B15);
      real r4B17#1 = RAdd(r4B16,r4B04);
      real r4B18#1 = RMul(realLit4B0A,r4AFF);
      real r4B19#1 = RAdd(r4B18,r4B02);
      real r4B1A#1 = RAdd(r4B19,r4B04);
      tensor[3] tensor4B1B#1 = <tensor[3]>[r4B17,r4B1A,r4B06];
      tensor[3,3] op1_e3_l_144AFD#3 = <tensor[3,3]>[tensor4B0E,tensor4B14,tensor4B1B];
      tensor[3] projParam4B3D#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_144AFD);
      real vdot4B3E#1 = VDot<3>(probe_l_124A63,projParam4B3D);
      tensor[3] projParam4B3F#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_144AFD);
      real vdot4B40#1 = VDot<3>(probe_l_124A63,projParam4B3F);
      tensor[3] projParam4B41#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_144AFD);
      real vdot4B42#1 = VDot<3>(probe_l_124A63,projParam4B41);
      tensor[3] op1_e3_l_154B3C#1 = <tensor[3]>[vdot4B3E,vdot4B40,vdot4B42];
      real op1_e3_l_164B4B#1 = VDot<3>(probe_l_114A16,op1_e3_l_154B3C);
      real realLit4B4F#27 = 0.e0;
      real r4B50#1 = TensorIndex<tensor[3,3,3],[0,0,0]>(op1_e3_l_1048A5);
      real r4B51#2 = RMul(realLit4B4F,r4B50);
      real r4B52#2 = TensorIndex<tensor[3,3,3],[0,0,1]>(op1_e3_l_1048A5);
      real r4B53#1 = RMul(realLit4B4F,r4B52);
      real r4B54#2 = TensorIndex<tensor[3,3,3],[0,0,2]>(op1_e3_l_1048A5);
      real r4B55#2 = RMul(realLit4B4F,r4B54);
      real r4B56#2 = TensorIndex<tensor[3,3,3],[1,0,0]>(op1_e3_l_1048A5);
      real r4B57#2 = RMul(realLit4B4F,r4B56);
      real r4B58#1 = TensorIndex<tensor[3,3,3],[1,0,1]>(op1_e3_l_1048A5);
      real r4B59#3 = RMul(realLit4B4F,r4B58);
      real realLit4B5A#9 = 0.1e1;
      real r4B5B#2 = TensorIndex<tensor[3,3,3],[1,0,2]>(op1_e3_l_1048A5);
      real r4B5C#1 = RMul(realLit4B5A,r4B5B);
      real r4B5D#2 = TensorIndex<tensor[3,3,3],[2,0,0]>(op1_e3_l_1048A5);
      real r4B5E#2 = RMul(realLit4B4F,r4B5D);
      real realLit4B5F#9 = -0.1e1;
      real r4B60#2 = TensorIndex<tensor[3,3,3],[2,0,1]>(op1_e3_l_1048A5);
      real r4B61#1 = RMul(realLit4B5F,r4B60);
      real r4B62#1 = TensorIndex<tensor[3,3,3],[2,0,2]>(op1_e3_l_1048A5);
      real r4B63#3 = RMul(realLit4B4F,r4B62);
      real r4B64#2 = RAdd(r4B51,r4B53);
      real r4B65#1 = RAdd(r4B64,r4B55);
      real r4B66#1 = RAdd(r4B65,r4B57);
      real r4B67#1 = RAdd(r4B66,r4B59);
      real r4B68#1 = RAdd(r4B67,r4B5C);
      real r4B69#1 = RAdd(r4B68,r4B5E);
      real r4B6A#1 = RAdd(r4B69,r4B61);
      real r4B6B#1 = RAdd(r4B6A,r4B63);
      real r4B6C#1 = TensorIndex<tensor[3,3,3],[0,1,0]>(op1_e3_l_1048A5);
      real r4B6D#2 = RMul(realLit4B4F,r4B6C);
      real r4B6E#2 = TensorIndex<tensor[3,3,3],[0,1,1]>(op1_e3_l_1048A5);
      real r4B6F#1 = RMul(realLit4B4F,r4B6E);
      real r4B70#2 = TensorIndex<tensor[3,3,3],[0,1,2]>(op1_e3_l_1048A5);
      real r4B71#2 = RMul(realLit4B4F,r4B70);
      real r4B72#2 = TensorIndex<tensor[3,3,3],[1,1,0]>(op1_e3_l_1048A5);
      real r4B73#2 = RMul(realLit4B4F,r4B72);
      real r4B74#1 = TensorIndex<tensor[3,3,3],[1,1,1]>(op1_e3_l_1048A5);
      real r4B75#3 = RMul(realLit4B4F,r4B74);
      real r4B76#2 = TensorIndex<tensor[3,3,3],[1,1,2]>(op1_e3_l_1048A5);
      real r4B77#1 = RMul(realLit4B5A,r4B76);
      real r4B78#2 = TensorIndex<tensor[3,3,3],[2,1,0]>(op1_e3_l_1048A5);
      real r4B79#2 = RMul(realLit4B4F,r4B78);
      real r4B7A#2 = TensorIndex<tensor[3,3,3],[2,1,1]>(op1_e3_l_1048A5);
      real r4B7B#1 = RMul(realLit4B5F,r4B7A);
      real r4B7C#1 = TensorIndex<tensor[3,3,3],[2,1,2]>(op1_e3_l_1048A5);
      real r4B7D#3 = RMul(realLit4B4F,r4B7C);
      real r4B7E#2 = RAdd(r4B6D,r4B6F);
      real r4B7F#1 = RAdd(r4B7E,r4B71);
      real r4B80#1 = RAdd(r4B7F,r4B73);
      real r4B81#1 = RAdd(r4B80,r4B75);
      real r4B82#1 = RAdd(r4B81,r4B77);
      real r4B83#1 = RAdd(r4B82,r4B79);
      real r4B84#1 = RAdd(r4B83,r4B7B);
      real r4B85#1 = RAdd(r4B84,r4B7D);
      real r4B86#1 = TensorIndex<tensor[3,3,3],[0,2,0]>(op1_e3_l_1048A5);
      real r4B87#2 = RMul(realLit4B4F,r4B86);
      real r4B88#2 = TensorIndex<tensor[3,3,3],[0,2,1]>(op1_e3_l_1048A5);
      real r4B89#1 = RMul(realLit4B4F,r4B88);
      real r4B8A#2 = TensorIndex<tensor[3,3,3],[0,2,2]>(op1_e3_l_1048A5);
      real r4B8B#2 = RMul(realLit4B4F,r4B8A);
      real r4B8C#2 = TensorIndex<tensor[3,3,3],[1,2,0]>(op1_e3_l_1048A5);
      real r4B8D#2 = RMul(realLit4B4F,r4B8C);
      real r4B8E#1 = TensorIndex<tensor[3,3,3],[1,2,1]>(op1_e3_l_1048A5);
      real r4B8F#3 = RMul(realLit4B4F,r4B8E);
      real r4B90#2 = TensorIndex<tensor[3,3,3],[1,2,2]>(op1_e3_l_1048A5);
      real r4B91#1 = RMul(realLit4B5A,r4B90);
      real r4B92#2 = TensorIndex<tensor[3,3,3],[2,2,0]>(op1_e3_l_1048A5);
      real r4B93#2 = RMul(realLit4B4F,r4B92);
      real r4B94#2 = TensorIndex<tensor[3,3,3],[2,2,1]>(op1_e3_l_1048A5);
      real r4B95#1 = RMul(realLit4B5F,r4B94);
      real r4B96#1 = TensorIndex<tensor[3,3,3],[2,2,2]>(op1_e3_l_1048A5);
      real r4B97#3 = RMul(realLit4B4F,r4B96);
      real r4B98#2 = RAdd(r4B87,r4B89);
      real r4B99#1 = RAdd(r4B98,r4B8B);
      real r4B9A#1 = RAdd(r4B99,r4B8D);
      real r4B9B#1 = RAdd(r4B9A,r4B8F);
      real r4B9C#1 = RAdd(r4B9B,r4B91);
      real r4B9D#1 = RAdd(r4B9C,r4B93);
      real r4B9E#1 = RAdd(r4B9D,r4B95);
      real r4B9F#1 = RAdd(r4B9E,r4B97);
      tensor[3] tensor4BA0#1 = <tensor[3]>[r4B6B,r4B85,r4B9F];
      real r4BA1#1 = RMul(realLit4B5F,r4B54);
      real r4BA2#2 = RMul(realLit4B4F,r4B5B);
      real r4BA3#1 = RMul(realLit4B5A,r4B5D);
      real r4BA4#2 = RMul(realLit4B4F,r4B60);
      real r4BA5#1 = RAdd(r4B64,r4BA1);
      real r4BA6#1 = RAdd(r4BA5,r4B57);
      real r4BA7#1 = RAdd(r4BA6,r4B59);
      real r4BA8#1 = RAdd(r4BA7,r4BA2);
      real r4BA9#1 = RAdd(r4BA8,r4BA3);
      real r4BAA#1 = RAdd(r4BA9,r4BA4);
      real r4BAB#1 = RAdd(r4BAA,r4B63);
      real r4BAC#1 = RMul(realLit4B5F,r4B70);
      real r4BAD#2 = RMul(realLit4B4F,r4B76);
      real r4BAE#1 = RMul(realLit4B5A,r4B78);
      real r4BAF#2 = RMul(realLit4B4F,r4B7A);
      real r4BB0#1 = RAdd(r4B7E,r4BAC);
      real r4BB1#1 = RAdd(r4BB0,r4B73);
      real r4BB2#1 = RAdd(r4BB1,r4B75);
      real r4BB3#1 = RAdd(r4BB2,r4BAD);
      real r4BB4#1 = RAdd(r4BB3,r4BAE);
      real r4BB5#1 = RAdd(r4BB4,r4BAF);
      real r4BB6#1 = RAdd(r4BB5,r4B7D);
      real r4BB7#1 = RMul(realLit4B5F,r4B8A);
      real r4BB8#2 = RMul(realLit4B4F,r4B90);
      real r4BB9#1 = RMul(realLit4B5A,r4B92);
      real r4BBA#2 = RMul(realLit4B4F,r4B94);
      real r4BBB#1 = RAdd(r4B98,r4BB7);
      real r4BBC#1 = RAdd(r4BBB,r4B8D);
      real r4BBD#1 = RAdd(r4BBC,r4B8F);
      real r4BBE#1 = RAdd(r4BBD,r4BB8);
      real r4BBF#1 = RAdd(r4BBE,r4BB9);
      real r4BC0#1 = RAdd(r4BBF,r4BBA);
      real r4BC1#1 = RAdd(r4BC0,r4B97);
      tensor[3] tensor4BC2#1 = <tensor[3]>[r4BAB,r4BB6,r4BC1];
      real r4BC3#1 = RMul(realLit4B5A,r4B52);
      real r4BC4#1 = RMul(realLit4B5F,r4B56);
      real r4BC5#1 = RAdd(r4B51,r4BC3);
      real r4BC6#1 = RAdd(r4BC5,r4B55);
      real r4BC7#1 = RAdd(r4BC6,r4BC4);
      real r4BC8#1 = RAdd(r4BC7,r4B59);
      real r4BC9#1 = RAdd(r4BC8,r4BA2);
      real r4BCA#1 = RAdd(r4BC9,r4B5E);
      real r4BCB#1 = RAdd(r4BCA,r4BA4);
      real r4BCC#1 = RAdd(r4BCB,r4B63);
      real r4BCD#1 = RMul(realLit4B5A,r4B6E);
      real r4BCE#1 = RMul(realLit4B5F,r4B72);
      real r4BCF#1 = RAdd(r4B6D,r4BCD);
      real r4BD0#1 = RAdd(r4BCF,r4B71);
      real r4BD1#1 = RAdd(r4BD0,r4BCE);
      real r4BD2#1 = RAdd(r4BD1,r4B75);
      real r4BD3#1 = RAdd(r4BD2,r4BAD);
      real r4BD4#1 = RAdd(r4BD3,r4B79);
      real r4BD5#1 = RAdd(r4BD4,r4BAF);
      real r4BD6#1 = RAdd(r4BD5,r4B7D);
      real r4BD7#1 = RMul(realLit4B5A,r4B88);
      real r4BD8#1 = RMul(realLit4B5F,r4B8C);
      real r4BD9#1 = RAdd(r4B87,r4BD7);
      real r4BDA#1 = RAdd(r4BD9,r4B8B);
      real r4BDB#1 = RAdd(r4BDA,r4BD8);
      real r4BDC#1 = RAdd(r4BDB,r4B8F);
      real r4BDD#1 = RAdd(r4BDC,r4BB8);
      real r4BDE#1 = RAdd(r4BDD,r4B93);
      real r4BDF#1 = RAdd(r4BDE,r4BBA);
      real r4BE0#1 = RAdd(r4BDF,r4B97);
      tensor[3] tensor4BE1#1 = <tensor[3]>[r4BCC,r4BD6,r4BE0];
      tensor[3,3] op1_e3_l_174B4E#9 = <tensor[3,3]>[tensor4BA0,tensor4BC2,tensor4BE1];
      real realLit4C78#1 = 0.2e1;
      real op1_e3_l_184C77#9 = RMul(realLit4C78,op1_e3_l_164B4B);
      real r4C7D#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_174B4E);
      real r4C7E#1 = RDiv(r4C7D,op1_e3_l_184C77);
      real r4C7F#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_174B4E);
      real r4C80#1 = RDiv(r4C7F,op1_e3_l_184C77);
      real r4C81#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_174B4E);
      real r4C82#1 = RDiv(r4C81,op1_e3_l_184C77);
      tensor[3] tensor4C83#1 = <tensor[3]>[r4C7E,r4C80,r4C82];
      real r4C84#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_174B4E);
      real r4C85#1 = RDiv(r4C84,op1_e3_l_184C77);
      real r4C86#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_174B4E);
      real r4C87#1 = RDiv(r4C86,op1_e3_l_184C77);
      real r4C88#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_174B4E);
      real r4C89#1 = RDiv(r4C88,op1_e3_l_184C77);
      tensor[3] tensor4C8A#1 = <tensor[3]>[r4C85,r4C87,r4C89];
      real r4C8B#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_174B4E);
      real r4C8C#1 = RDiv(r4C8B,op1_e3_l_184C77);
      real r4C8D#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_174B4E);
      real r4C8E#1 = RDiv(r4C8D,op1_e3_l_184C77);
      real r4C8F#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_174B4E);
      real r4C90#1 = RDiv(r4C8F,op1_e3_l_184C77);
      tensor[3] tensor4C91#1 = <tensor[3]>[r4C8C,r4C8E,r4C90];
      tensor[3,3] op1_e3_l_194C7C#3 = <tensor[3,3]>[tensor4C83,tensor4C8A,tensor4C91];
      tensor[3] projParam4CAA#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_194C7C);
      real vdot4CAB#1 = VDot<3>(projParam4CAA,dPos40BB);
      tensor[3] projParam4CAC#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_194C7C);
      real vdot4CAD#1 = VDot<3>(projParam4CAC,dPos40BB);
      tensor[3] projParam4CAE#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_194C7C);
      real vdot4CAF#1 = VDot<3>(projParam4CAE,dPos40BB);
      tensor[3] op1_e3_l_204CA9#10 = <tensor[3]>[vdot4CAB,vdot4CAD,vdot4CAF];
      real op1_e3_l_214CB8#1 = VDot<3>(_t472A,op1_e3_l_204CA9);
      real op1_e3_l_224CBB#2 = RMul(time46E9,op1_e3_l_214CB8);
      real _t4CBE#1 = Abs<real>(op1_e3_l_224CBB);
      real _t4CC1#4 = 0.1e-20;
      bool _t4CC3#2 = GTE<real>(_t4CBE,_t4CC1);
      bool _t4CC5#1 = BAnd(_t473F,_t4CC3);
      bool _t4CC7#1 = BAnd(_t473D,_t4CC5);
      if _t4CC7 then goto ASSIGN4CCB else goto JOIN4CD4
    ASSIGN4CCB:  preds = [COND4CC9]
      bool _t4CCA#1 = NEQ<int>(_t4720,_t40CC);
      if _t4CCA then goto JOIN4CD0 else goto JOIN4CD0
    JOIN4CD0:  preds = [COND4CCC,COND4CCC]
      real faceTime4CCD#1 = phi(faceTime4726,_t4738)
      int face4CCE#1 = phi(_t40CC,face4724)
      real time4CCF#1 = phi(_t4738,time4722)
      goto JOIN4CD4
    JOIN4CD4:  preds = [JOIN4CD0,COND4CC9]
      real faceTime4CD1#2 = phi(faceTime4CCD,faceTime4726)
      int face4CD2#2 = phi(face4CCE,face4724)
      real time4CD3#3 = phi(time4CCF,time4722)
      real _t4CD5#50 = 0.e0;
      tensor[3] _t4CD7#4 = <tensor[3]>[time40CA,_t4CD5,_t4CD5];
      real op1_e3_l_104CD9#1 = VDot<3>(_t4CD7,_t40DD);
      real op1_e3_l_254CDC#1 = VDot<3>(_t4CD7,op1_e3_l_2046D9);
      real op1_e3_l_264CDF#1 = RSub(_t4CD5,op1_e3_l_104CD9);
      real op1_e3_l_274CE2#1 = RMul(time46E9,op1_e3_l_254CDC);
      real _t4CE5#4 = RDiv(op1_e3_l_264CDF,op1_e3_l_274CE2);
      bool _t4CE8#1 = GTE<real>(_t4CE5,_t473B);
      bool _t4CEA#1 = GT<real>(time4CD3,_t4CE5);
      real op1_e3_l_214CEC#1 = VDot<3>(_t4CD7,op1_e3_l_204CA9);
      real op1_e3_l_224CEF#2 = RMul(time46E9,op1_e3_l_214CEC);
      real _t4CF2#1 = Abs<real>(op1_e3_l_224CEF);
      bool _t4CF5#2 = GTE<real>(_t4CF2,_t4CC1);
      bool _t4CF7#1 = BAnd(_t4CEA,_t4CF5);
      bool _t4CF9#1 = BAnd(_t4CE8,_t4CF7);
      if _t4CF9 then goto ASSIGN4CFD else goto JOIN4D08
    ASSIGN4CFD:  preds = [COND4CFB]
      int _t4CFC#2 = 1;
      bool _t4CFE#1 = NEQ<int>(_t4720,_t4CFC);
      if _t4CFE then goto JOIN4D04 else goto JOIN4D04
    JOIN4D04:  preds = [COND4D00,COND4D00]
      real faceTime4D01#1 = phi(faceTime4CD1,_t4CE5)
      int face4D02#1 = phi(_t4CFC,face4CD2)
      real time4D03#1 = phi(_t4CE5,time4CD3)
      goto JOIN4D08
    JOIN4D08:  preds = [JOIN4D04,COND4CFB]
      real faceTime4D05#2 = phi(faceTime4D01,faceTime4CD1)
      int face4D06#2 = phi(face4D02,face4CD2)
      real time4D07#3 = phi(time4D03,time4CD3)
      real _t4D09#14 = -0.1e1;
      tensor[3] _t4D0B#4 = <tensor[3]>[_t4CD5,_t4D09,_t4CD5];
      real op1_e3_l_104D0D#1 = VDot<3>(_t4D0B,_t40DD);
      real op1_e3_l_254D10#1 = VDot<3>(_t4D0B,op1_e3_l_2046D9);
      real op1_e3_l_264D13#1 = RSub(_t4CD5,op1_e3_l_104D0D);
      real op1_e3_l_274D16#1 = RMul(time46E9,op1_e3_l_254D10);
      real _t4D19#4 = RDiv(op1_e3_l_264D13,op1_e3_l_274D16);
      bool _t4D1C#1 = GTE<real>(_t4D19,_t473B);
      bool _t4D1E#1 = GT<real>(time4D07,_t4D19);
      real op1_e3_l_214D20#1 = VDot<3>(_t4D0B,op1_e3_l_204CA9);
      real op1_e3_l_224D23#2 = RMul(time46E9,op1_e3_l_214D20);
      real _t4D26#1 = Abs<real>(op1_e3_l_224D23);
      bool _t4D29#2 = GTE<real>(_t4D26,_t4CC1);
      bool _t4D2B#1 = BAnd(_t4D1E,_t4D29);
      bool _t4D2D#1 = BAnd(_t4D1C,_t4D2B);
      if _t4D2D then goto ASSIGN4D31 else goto JOIN4D3C
    ASSIGN4D31:  preds = [COND4D2F]
      int _t4D30#2 = 2;
      bool _t4D32#1 = NEQ<int>(_t4720,_t4D30);
      if _t4D32 then goto JOIN4D38 else goto JOIN4D38
    JOIN4D38:  preds = [COND4D34,COND4D34]
      real faceTime4D35#1 = phi(faceTime4D05,_t4D19)
      int face4D36#1 = phi(_t4D30,face4D06)
      real time4D37#1 = phi(_t4D19,time4D07)
      goto JOIN4D3C
    JOIN4D3C:  preds = [JOIN4D38,COND4D2F]
      real faceTime4D39#2 = phi(faceTime4D35,faceTime4D05)
      int face4D3A#2 = phi(face4D36,face4D06)
      real time4D3B#3 = phi(time4D37,time4D07)
      tensor[3] _t4D3D#4 = <tensor[3]>[_t4CD5,_t4CD5,time40CA];
      real op1_e3_l_104D3F#1 = VDot<3>(_t4D3D,_t40DD);
      real op1_e3_l_254D42#1 = VDot<3>(_t4D3D,op1_e3_l_2046D9);
      real op1_e3_l_264D45#1 = RSub(_t4CD5,op1_e3_l_104D3F);
      real op1_e3_l_274D48#1 = RMul(time46E9,op1_e3_l_254D42);
      real _t4D4B#4 = RDiv(op1_e3_l_264D45,op1_e3_l_274D48);
      bool _t4D4E#1 = GTE<real>(_t4D4B,_t473B);
      bool _t4D50#1 = GT<real>(time4D3B,_t4D4B);
      real op1_e3_l_214D52#1 = VDot<3>(_t4D3D,op1_e3_l_204CA9);
      real op1_e3_l_224D55#2 = RMul(time46E9,op1_e3_l_214D52);
      real _t4D58#1 = Abs<real>(op1_e3_l_224D55);
      bool _t4D5B#2 = GTE<real>(_t4D58,_t4CC1);
      bool _t4D5D#1 = BAnd(_t4D50,_t4D5B);
      bool _t4D5F#1 = BAnd(_t4D4E,_t4D5D);
      if _t4D5F then goto ASSIGN4D63 else goto JOIN4D6E
    ASSIGN4D63:  preds = [COND4D61]
      int _t4D62#2 = 3;
      bool _t4D64#1 = NEQ<int>(_t4720,_t4D62);
      if _t4D64 then goto JOIN4D6A else goto JOIN4D6A
    JOIN4D6A:  preds = [COND4D66,COND4D66]
      real faceTime4D67#1 = phi(faceTime4D39,_t4D4B)
      int face4D68#1 = phi(_t4D62,face4D3A)
      real time4D69#1 = phi(_t4D4B,time4D3B)
      goto JOIN4D6E
    JOIN4D6E:  preds = [JOIN4D6A,COND4D61]
      real faceTime4D6B#2 = phi(faceTime4D67,faceTime4D39)
      int face4D6C#2 = phi(face4D68,face4D3A)
      real time4D6D#1 = phi(time4D69,time4D3B)
      bool _t4D6F#1 = NEQ<int>(face4D6C,face4724);
      if _t4D6F then goto ASSIGN4D73 else goto ASSIGN4F61
    ASSIGN4D73:  preds = [COND4D71]
      real _t4D72#1 = Max<real>(time4D6D,_t4CD5);
      real _t4D74#1 = IntToReal(face4D6C);
      tensor[2] _t4D76#1 = <tensor[2]>[_t4D72,_t4D74];
      goto JOIN4D7A
    JOIN4D7A:  preds = [ASSIGN4D77,JOIN4F66]
      tensor[2] _t4D78#1 = phi(_t4D76,_t4D79)
      real eTime4D7B#3 = VIndex<2,0>(_t4D78);
      real op1_e3_l_34D7D#1 = RMul(time46E9,eTime4D7B);
      real time471D#2 = RSub(time46E9,op1_e3_l_34D7D);
      int _t4D82#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp40D3);
      tensor[3] _t4D84#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp40D3);
      real op1_e3_l_104D86#1 = VDot<3>(_t472A,_t4D84);
      real op1_e3_l_264D89#1 = RSub(_t4728,op1_e3_l_104D86);
      real _t4D8C#4 = RDiv(op1_e3_l_264D89,op1_e3_l_224CBB);
      bool _t4D8F#1 = GTE<real>(_t4D8C,_t473B);
      bool _t4D91#1 = GT<real>(time4722,_t4D8C);
      bool _t4D93#1 = BAnd(_t4D91,_t4CC3);
      bool _t4D95#1 = BAnd(_t4D8F,_t4D93);
      if _t4D95 then goto ASSIGN4D99 else goto JOIN4DA2
    ASSIGN4D99:  preds = [COND4D97]
      bool _t4D98#1 = NEQ<int>(_t4720,_t40CC);
      if _t4D98 then goto JOIN4D9E else goto JOIN4D9E
    JOIN4D9E:  preds = [COND4D9A,COND4D9A]
      real faceTime4D9B#1 = phi(faceTime4726,_t4D8C)
      int face4D9C#1 = phi(_t40CC,face4724)
      real time4D9D#1 = phi(_t4D8C,time4722)
      goto JOIN4DA2
    JOIN4DA2:  preds = [JOIN4D9E,COND4D97]
      real faceTime4D9F#2 = phi(faceTime4D9B,faceTime4726)
      int face4DA0#2 = phi(face4D9C,face4724)
      real time4DA1#3 = phi(time4D9D,time4722)
      real op1_e3_l_104DA3#1 = VDot<3>(_t4CD7,_t4D84);
      real op1_e3_l_264DA6#1 = RSub(_t4CD5,op1_e3_l_104DA3);
      real _t4DA9#4 = RDiv(op1_e3_l_264DA6,op1_e3_l_224CEF);
      bool _t4DAC#1 = GTE<real>(_t4DA9,_t473B);
      bool _t4DAE#1 = GT<real>(time4DA1,_t4DA9);
      bool _t4DB0#1 = BAnd(_t4DAE,_t4CF5);
      bool _t4DB2#1 = BAnd(_t4DAC,_t4DB0);
      if _t4DB2 then goto ASSIGN4DB6 else goto JOIN4DC1
    ASSIGN4DB6:  preds = [COND4DB4]
      int _t4DB5#2 = 1;
      bool _t4DB7#1 = NEQ<int>(_t4720,_t4DB5);
      if _t4DB7 then goto JOIN4DBD else goto JOIN4DBD
    JOIN4DBD:  preds = [COND4DB9,COND4DB9]
      real faceTime4DBA#1 = phi(faceTime4D9F,_t4DA9)
      int face4DBB#1 = phi(_t4DB5,face4DA0)
      real time4DBC#1 = phi(_t4DA9,time4DA1)
      goto JOIN4DC1
    JOIN4DC1:  preds = [JOIN4DBD,COND4DB4]
      real faceTime4DBE#2 = phi(faceTime4DBA,faceTime4D9F)
      int face4DBF#2 = phi(face4DBB,face4DA0)
      real time4DC0#3 = phi(time4DBC,time4DA1)
      real op1_e3_l_104DC2#1 = VDot<3>(_t4D0B,_t4D84);
      real op1_e3_l_264DC5#1 = RSub(_t4CD5,op1_e3_l_104DC2);
      real _t4DC8#4 = RDiv(op1_e3_l_264DC5,op1_e3_l_224D23);
      bool _t4DCB#1 = GTE<real>(_t4DC8,_t473B);
      bool _t4DCD#1 = GT<real>(time4DC0,_t4DC8);
      bool _t4DCF#1 = BAnd(_t4DCD,_t4D29);
      bool _t4DD1#1 = BAnd(_t4DCB,_t4DCF);
      if _t4DD1 then goto ASSIGN4DD5 else goto JOIN4DE0
    ASSIGN4DD5:  preds = [COND4DD3]
      int _t4DD4#2 = 2;
      bool _t4DD6#1 = NEQ<int>(_t4720,_t4DD4);
      if _t4DD6 then goto JOIN4DDC else goto JOIN4DDC
    JOIN4DDC:  preds = [COND4DD8,COND4DD8]
      real faceTime4DD9#1 = phi(faceTime4DBE,_t4DC8)
      int face4DDA#1 = phi(_t4DD4,face4DBF)
      real time4DDB#1 = phi(_t4DC8,time4DC0)
      goto JOIN4DE0
    JOIN4DE0:  preds = [JOIN4DDC,COND4DD3]
      real faceTime4DDD#2 = phi(faceTime4DD9,faceTime4DBE)
      int face4DDE#2 = phi(face4DDA,face4DBF)
      real time4DDF#3 = phi(time4DDB,time4DC0)
      real op1_e3_l_104DE1#1 = VDot<3>(_t4D3D,_t4D84);
      real op1_e3_l_264DE4#1 = RSub(_t4CD5,op1_e3_l_104DE1);
      real _t4DE7#4 = RDiv(op1_e3_l_264DE4,op1_e3_l_224D55);
      bool _t4DEA#1 = GTE<real>(_t4DE7,_t473B);
      bool _t4DEC#1 = GT<real>(time4DDF,_t4DE7);
      bool _t4DEE#1 = BAnd(_t4DEC,_t4D5B);
      bool _t4DF0#1 = BAnd(_t4DEA,_t4DEE);
      if _t4DF0 then goto ASSIGN4DF4 else goto JOIN4DFF
    ASSIGN4DF4:  preds = [COND4DF2]
      int _t4DF3#2 = 3;
      bool _t4DF5#1 = NEQ<int>(_t4720,_t4DF3);
      if _t4DF5 then goto JOIN4DFB else goto JOIN4DFB
    JOIN4DFB:  preds = [COND4DF7,COND4DF7]
      real faceTime4DF8#1 = phi(faceTime4DDD,_t4DE7)
      int face4DF9#1 = phi(_t4DF3,face4DDE)
      real time4DFA#1 = phi(_t4DE7,time4DDF)
      goto JOIN4DFF
    JOIN4DFF:  preds = [JOIN4DFB,COND4DF2]
      real faceTime4DFC#2 = phi(faceTime4DF8,faceTime4DDD)
      int face4DFD#2 = phi(face4DF9,face4DDE)
      real time4DFE#1 = phi(time4DFA,time4DDF)
      bool _t4E00#1 = NEQ<int>(face4DFD,face4724);
      if _t4E00 then goto ASSIGN4E04 else goto ASSIGN4F57
    ASSIGN4E04:  preds = [COND4E02]
      real _t4E03#1 = Max<real>(time4DFE,_t4CD5);
      real _t4E05#1 = IntToReal(face4DFD);
      tensor[2] _t4E07#1 = <tensor[2]>[_t4E03,_t4E05];
      goto JOIN4E0B
    JOIN4E0B:  preds = [ASSIGN4E08,JOIN4F5C]
      tensor[2] _t4E09#3 = phi(_t4E07,_t4E0A)
      real _t4E0C#1 = VIndex<2,1>(_t4E09);
      real t4E0E#1 = Floor<1>(_t4E0C);
      int _t4E10#6 = RealToInt<1>(t4E0E);
      int[2] _t4E12#2 = nextCell44E13 (_t4E10,_t4D82,_t40D2);
      int _t4E26#2 = Subscript<int[2]>(_t4E12,_t40CC);
      bool _t4E28#1 = NEQ<int>(face4724,_t4E26);
      if _t4E28 then goto ASSIGN4E2C else goto ASSIGN4F40
    ASSIGN4E2C:  preds = [COND4E2A]
      string _t4E2B#1 = "face ";
      string _t4E2D#1 = " to ";
      int _t4E2F#1 = 1;
      int _t4E31#6 = Subscript<int[2]>(_t4E12,_t4E2F);
      string _t4E33#2 = "\n";
      string _t4E35#1 = "got: ";
      tensor[4] _t4E37#7 = <tensor[4]>[time40CA,_t4CD5,_t4CD5,_t4CD5];
      tensor[4] _t4E39#6 = <tensor[4]>[_t4CD5,time40CA,_t4CD5,_t4CD5];
      tensor[4] _t4E3B#7 = <tensor[4]>[_t4CD5,_t4CD5,time40CA,_t4CD5];
      real _t4E3D#1 = 0.971445146547e-16;
      tensor[4] _t4E3F#4 = <tensor[4]>[_t4E3D,_t4CD5,_t4CD5,time40CA];
      tensor[4,4] _t4E41#4 = <tensor[4,4]>[_t4E37,_t4E39,_t4E3B,_t4E3F];
      real _t4E43#7 = -0.57735026919e0;
      tensor[4] _t4E45#2 = <tensor[4]>[_t4728,_t4728,_t4728,_t4E43];
      real _t4E47#4 = -0.333333333333e0;
      real _t4E49#2 = 0.666666666667e0;
      real _t4E4B#2 = 0.333333333333e0;
      tensor[4] _t4E4D#3 = <tensor[4]>[_t4E47,_t4E49,_t4E47,_t4E4B];
      tensor[4] _t4E4F#3 = <tensor[4]>[_t4E47,_t4E47,_t4E49,_t4E4B];
      tensor[4,4] _t4E51#4 = <tensor[4,4]>[_t4E45,_t4E4D,_t4E4F,_t4E3F];
      tensor[4] _t4E53#1 = <tensor[4]>[_t4E43,_t4E43,_t4E43,_t4728];
      tensor[4,4] _t4E55#4 = <tensor[4,4]>[_t4E4D,_t4E53,_t4E4F,_t4E3F];
      tensor[4,4] _t4E57#4 = <tensor[4,4]>[_t4E4D,_t4E4F,_t4E45,_t4E3F];
      tensor[4,4][4] _t4E59#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4] _t4E5B#1 = <tensor[4]>[_t4728,_t4D09,_t4D09,time40CA];
      tensor[4] _t4E5D#1 = <tensor[4]>[_t4728,time40CA,_t4CD5,_t4CD5];
      tensor[4] _t4E5F#1 = <tensor[4]>[_t4728,_t4CD5,time40CA,_t4CD5];
      tensor[4] _t4E61#10 = <tensor[4]>[_t4CD5,_t4CD5,_t4CD5,time40CA];
      tensor[4,4] _t4E63#4 = <tensor[4,4]>[_t4E5B,_t4E5D,_t4E5F,_t4E61];
      tensor[4,4] _t4E65#12 = <tensor[4,4]>[_t4E37,_t4E39,_t4E3B,_t4E61];
      tensor[4] _t4E67#1 = <tensor[4]>[_t4D09,_t4CD5,_t4CD5,_t4CD5];
      tensor[4,4] _t4E69#4 = <tensor[4,4]>[_t4E39,_t4E67,_t4E3B,_t4E61];
      tensor[4,4] _t4E6B#4 = <tensor[4,4]>[_t4E39,_t4E3B,_t4E37,_t4E61];
      tensor[4,4][4] _t4E6D#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4] _t4E6F#1 = <tensor[4]>[_t4D09,_t4E43,_t4D09,time40CA];
      tensor[4] _t4E71#1 = <tensor[4]>[time40CA,_t4E43,_t4CD5,_t4CD5];
      tensor[4] _t4E73#1 = <tensor[4]>[_t4CD5,_t4E43,time40CA,_t4CD5];
      tensor[4,4] _t4E75#4 = <tensor[4,4]>[_t4E6F,_t4E71,_t4E73,_t4E61];
      tensor[4] _t4E77#2 = <tensor[4]>[_t4CD5,_t4D09,_t4CD5,_t4CD5];
      tensor[4,4] _t4E79#4 = <tensor[4,4]>[_t4E77,_t4E37,_t4E3B,_t4E61];
      tensor[4,4] _t4E7B#4 = <tensor[4,4]>[_t4E37,_t4E3B,_t4E77,_t4E61];
      tensor[4,4][4] _t4E7D#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4] _t4E7F#1 = <tensor[4]>[_t4D09,_t4D09,_t4728,time40CA];
      tensor[4] _t4E81#1 = <tensor[4]>[time40CA,_t4CD5,_t4728,_t4CD5];
      tensor[4] _t4E83#1 = <tensor[4]>[_t4CD5,time40CA,_t4728,_t4CD5];
      tensor[4,4] _t4E85#4 = <tensor[4,4]>[_t4E7F,_t4E81,_t4E83,_t4E61];
      tensor[4,4] _t4E87#4 = <tensor[4,4]>[_t4E3B,_t4E37,_t4E39,_t4E61];
      tensor[4] _t4E89#1 = <tensor[4]>[_t4CD5,_t4CD5,_t4D09,_t4CD5];
      tensor[4,4] _t4E8B#4 = <tensor[4,4]>[_t4E37,_t4E89,_t4E39,_t4E61];
      tensor[4,4][4] _t4E8D#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4E8F#1 = <tensor[4,4][4][4]>{_t4E59,_t4E6D,_t4E7D,_t4E8D};
      tensor[4,4][4] _t4E91#1 = Subscript<tensor[4,4][4][4]>(_t4E8F,_t4E10);
      tensor[4,4] _t4E93#1 = Subscript<tensor[4,4][4]>(_t4E91,_t4E31);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t4E2B,_t4E10,_t4E2D,_t4E31,_t4E33,_t4E35,_t4E93,_t4E33);
      tensor[4,4][4] _t4E96#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4E98#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4E9A#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4E9C#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4E9E#1 = <tensor[4,4][4][4]>{_t4E96,_t4E98,_t4E9A,_t4E9C};
      tensor[4,4][4] _t4EA0#1 = Subscript<tensor[4,4][4][4]>(_t4E9E,_t4E10);
      tensor[4,4] _t4EA2#4 = Subscript<tensor[4,4][4]>(_t4EA0,_t4E31);
      real _t4EA4#1 = VIndex<2,0>(_t4E09);
      real r4EA7#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_204CA9);
      real r4EA8#3 = RMul(_t4EA4,time46E9);
      real r4EA9#1 = RMul(r4EA8,r4EA7);
      real r4EAA#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_204CA9);
      real r4EAB#1 = RMul(r4EA8,r4EAA);
      real r4EAC#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_204CA9);
      real r4EAD#1 = RMul(r4EA8,r4EAC);
      tensor[3] op1_e3_l_224EA6#1 = <tensor[3]>[r4EA9,r4EAB,r4EAD];
      tensor[3] _t4EB7#3 = VAdd<3>(op1_e3_l_224EA6,_t4D84);
      real _t4EBA#1 = VIndex<3,0>(_t4EB7);
      real _t4EBC#1 = VIndex<3,1>(_t4EB7);
      real _t4EBE#1 = VIndex<3,2>(_t4EB7);
      tensor[4] _t4EC0#12 = <tensor[4]>[_t4EBA,_t4EBC,_t4EBE,time40CA];
      tensor[4] projParam4EC3#1 = ProjectLast<tensor[4,4],[0]>(_t4EA2);
      real vdot4EC4#1 = VDot<4>(projParam4EC3,_t4EC0);
      tensor[4] projParam4EC5#1 = ProjectLast<tensor[4,4],[1]>(_t4EA2);
      real vdot4EC6#1 = VDot<4>(projParam4EC5,_t4EC0);
      tensor[4] projParam4EC7#1 = ProjectLast<tensor[4,4],[2]>(_t4EA2);
      real vdot4EC8#1 = VDot<4>(projParam4EC7,_t4EC0);
      tensor[4] projParam4EC9#1 = ProjectLast<tensor[4,4],[3]>(_t4EA2);
      real vdot4ECA#1 = VDot<4>(projParam4EC9,_t4EC0);
      tensor[4] _t4EC2#1 = <tensor[4]>[vdot4EC4,vdot4EC6,vdot4EC8,vdot4ECA];
      real _t4ED5#1 = VIndex<4,0>(_t4EC2);
      tensor[4,4][4] _t4ED7#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4ED9#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4EDB#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4EDD#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4EDF#1 = <tensor[4,4][4][4]>{_t4ED7,_t4ED9,_t4EDB,_t4EDD};
      tensor[4,4][4] _t4EE1#1 = Subscript<tensor[4,4][4][4]>(_t4EDF,_t4E10);
      tensor[4,4] _t4EE3#4 = Subscript<tensor[4,4][4]>(_t4EE1,_t4E31);
      tensor[4] projParam4EE6#1 = ProjectLast<tensor[4,4],[0]>(_t4EE3);
      real vdot4EE7#1 = VDot<4>(projParam4EE6,_t4EC0);
      tensor[4] projParam4EE8#1 = ProjectLast<tensor[4,4],[1]>(_t4EE3);
      real vdot4EE9#1 = VDot<4>(projParam4EE8,_t4EC0);
      tensor[4] projParam4EEA#1 = ProjectLast<tensor[4,4],[2]>(_t4EE3);
      real vdot4EEB#1 = VDot<4>(projParam4EEA,_t4EC0);
      tensor[4] projParam4EEC#1 = ProjectLast<tensor[4,4],[3]>(_t4EE3);
      real vdot4EED#1 = VDot<4>(projParam4EEC,_t4EC0);
      tensor[4] _t4EE5#1 = <tensor[4]>[vdot4EE7,vdot4EE9,vdot4EEB,vdot4EED];
      real _t4EF8#1 = VIndex<4,1>(_t4EE5);
      tensor[4,4][4] _t4EFA#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4EFC#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4EFE#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4F00#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4F02#1 = <tensor[4,4][4][4]>{_t4EFA,_t4EFC,_t4EFE,_t4F00};
      tensor[4,4][4] _t4F04#1 = Subscript<tensor[4,4][4][4]>(_t4F02,_t4E10);
      tensor[4,4] _t4F06#4 = Subscript<tensor[4,4][4]>(_t4F04,_t4E31);
      tensor[4] projParam4F09#1 = ProjectLast<tensor[4,4],[0]>(_t4F06);
      real vdot4F0A#1 = VDot<4>(projParam4F09,_t4EC0);
      tensor[4] projParam4F0B#1 = ProjectLast<tensor[4,4],[1]>(_t4F06);
      real vdot4F0C#1 = VDot<4>(projParam4F0B,_t4EC0);
      tensor[4] projParam4F0D#1 = ProjectLast<tensor[4,4],[2]>(_t4F06);
      real vdot4F0E#1 = VDot<4>(projParam4F0D,_t4EC0);
      tensor[4] projParam4F0F#1 = ProjectLast<tensor[4,4],[3]>(_t4F06);
      real vdot4F10#1 = VDot<4>(projParam4F0F,_t4EC0);
      tensor[4] _t4F08#1 = <tensor[4]>[vdot4F0A,vdot4F0C,vdot4F0E,vdot4F10];
      real _t4F1B#1 = VIndex<4,2>(_t4F08);
      tensor[3] _t4F1D#1 = <tensor[3]>[_t4ED5,_t4EF8,_t4F1B];
      femData:MeshPos _t4F1F#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t40D2,_t4E26,_t4F1D,_t4E31);
      goto JOIN4F22
    JOIN4F22:  preds = [ASSIGN4F20,ASSIGN4F55]
      femData:MeshPos nmp471B#3 = phi(_t4F1F,_t4F21)
      bool _t4F23#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp471B);
      bool _t4F25#1 = BNot(_t4F23);
      if _t4F25 then goto ASSIGN4F29 else goto ASSIGN4F31
    ASSIGN4F29:  preds = [COND4F27]
      bool _t4F28#1 = true;
      goto JOIN4F2C
    JOIN4F2C:  preds = [ASSIGN4F29,JOIN4F36]
      bool _t4F2A#1 = phi(_t4F28,_t4F2B)
      if _t4F2A then goto RETURN(nmp471B)4F2E else goto JOIN4F2F
    RETURN(nmp471B)4F2E:  preds = [COND4F2D]
      return nmp471B
      goto JOIN4F2F
    JOIN4F2F:  preds = [*RETURN(nmp471B)4F2E,COND4F2D]
      goto JOIN471E
    ASSIGN4F31:  preds = [COND4F27]
      bool _t4F30#1 = LT<real>(eTime4D7B,_t4CD5);
      if _t4F30 then goto ASSIGN4F34 else goto ASSIGN4F38
    ASSIGN4F34:  preds = [COND4F32]
      bool _t4F33#1 = true;
      goto JOIN4F36
    JOIN4F36:  preds = [ASSIGN4F34,JOIN4F3D]
      bool _t4F2B#1 = phi(_t4F33,_t4F35)
      goto JOIN4F2C
    ASSIGN4F38:  preds = [COND4F32]
      bool _t4F37#1 = GT<real>(eTime4D7B,time40CA);
      if _t4F37 then goto ASSIGN4F3B else goto ASSIGN4F3E
    ASSIGN4F3B:  preds = [COND4F39]
      bool _t4F3A#1 = true;
      goto JOIN4F3D
    JOIN4F3D:  preds = [ASSIGN4F3B,ASSIGN4F3E]
      bool _t4F35#1 = phi(_t4F3A,_t4F3C)
      goto JOIN4F36
    ASSIGN4F3E:  preds = [COND4F39]
      bool _t4F3C#1 = LT<real>(time471D,timeEps40C1);
      goto JOIN4F3D
    ASSIGN4F40:  preds = [COND4E2A]
      real _t4F3F#1 = VIndex<2,0>(_t4E09);
      real r4F42#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_204CA9);
      real r4F43#3 = RMul(_t4F3F,time46E9);
      real r4F44#1 = RMul(r4F43,r4F42);
      real r4F45#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_204CA9);
      real r4F46#1 = RMul(r4F43,r4F45);
      real r4F47#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_204CA9);
      real r4F48#1 = RMul(r4F43,r4F47);
      tensor[3] op1_e3_l_224F41#1 = <tensor[3]>[r4F44,r4F46,r4F48];
      tensor[3] _t4F52#1 = VAdd<3>(op1_e3_l_224F41,_t4D84);
      femData:MeshPos _t4F21#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t40D2,_t4F52);
      goto JOIN4F22
    ASSIGN4F57:  preds = [COND4E02]
      bool _t4F56#1 = EQ<real>(faceTime4726,faceTime4DFC);
      if _t4F56 then goto ASSIGN4F5A else goto ASSIGN4F5E
    ASSIGN4F5A:  preds = [COND4F58]
      tensor[2] _t4F59#1 = <tensor[2]>[_t4D09,_t4D09];
      goto JOIN4F5C
    JOIN4F5C:  preds = [ASSIGN4F5A,ASSIGN4F5F]
      tensor[2] _t4E0A#1 = phi(_t4F59,_t4F5B)
      goto JOIN4E0B
    ASSIGN4F5E:  preds = [COND4F58]
      real _t4F5D#1 = IntToReal(_t4720);
      tensor[2] _t4F5B#1 = <tensor[2]>[faceTime4DFC,_t4F5D];
      goto JOIN4F5C
    ASSIGN4F61:  preds = [COND4D71]
      bool _t4F60#1 = EQ<real>(faceTime4726,faceTime4D6B);
      if _t4F60 then goto ASSIGN4F64 else goto ASSIGN4F68
    ASSIGN4F64:  preds = [COND4F62]
      tensor[2] _t4F63#1 = <tensor[2]>[_t4D09,_t4D09];
      goto JOIN4F66
    JOIN4F66:  preds = [ASSIGN4F64,ASSIGN4F69]
      tensor[2] _t4D79#1 = phi(_t4F63,_t4F65)
      goto JOIN4D7A
    ASSIGN4F68:  preds = [COND4F62]
      real _t4F67#1 = IntToReal(_t4720);
      tensor[2] _t4F65#1 = <tensor[2]>[faceTime4D6B,_t4F67];
      goto JOIN4F66
    ASSIGN4F6B:  preds = [FOREACH40D1]
      string _t4F6A#1 = "Took stupid way out!\n";
      Print<[string]>(_t4F6A);
      tensor[3] _t4F6D#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x40BA);
      int _t4F6F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x40BA);
      femData:Mesh _t4F71#16 = ExtractFem<femData:Mesh,femData:MeshPos>(x40BA);
      int ilit4F74#1 = 4;
      int mulRes4F75#4 = IMul(_t4F6F,ilit4F74);
      int ilit4F76#1 = 0;
      int addRes4F77#1 = IAdd(mulRes4F75,ilit4F76);
      int idx4F78#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F77);
      int ilit4F79#1 = 1;
      int addRes4F7A#1 = IAdd(mulRes4F75,ilit4F79);
      int idx4F7B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F7A);
      int ilit4F7C#1 = 2;
      int addRes4F7D#1 = IAdd(mulRes4F75,ilit4F7C);
      int idx4F7E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F7D);
      int ilit4F7F#1 = 3;
      int addRes4F80#1 = IAdd(mulRes4F75,ilit4F7F);
      int idx4F81#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F80);
      int[4] seq4F82#1 = <int[4]>{idx4F78,idx4F7B,idx4F7E,idx4F81};
      int[4] femIndicies4F73#4 = seq4F82;
      int ilit4F94#5 = 0;
      int ilit4F95#5 = 3;
      int idx4F96#1 = Subscript<int>(femIndicies4F73,ilit4F94);
      int mulRes4F97#3 = IMul(ilit4F95,idx4F96);
      int addRes4F98#1 = IAdd(ilit4F94,mulRes4F97);
      int ilit4F99#5 = 1;
      int addRes4F9A#1 = IAdd(ilit4F99,mulRes4F97);
      int ilit4F9B#5 = 2;
      int addRes4F9C#1 = IAdd(ilit4F9B,mulRes4F97);
      real dof_load4F9D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F98);
      real dof_load4F9E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F9A);
      real dof_load4F9F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F9C);
      tensor[3] interCons4FA0#1 = <tensor[3]>[dof_load4F9D,dof_load4F9E,dof_load4F9F];
      int idx4FA1#1 = Subscript<int>(femIndicies4F73,ilit4F99);
      int mulRes4FA2#3 = IMul(ilit4F95,idx4FA1);
      int addRes4FA3#1 = IAdd(ilit4F94,mulRes4FA2);
      int addRes4FA4#1 = IAdd(ilit4F99,mulRes4FA2);
      int addRes4FA5#1 = IAdd(ilit4F9B,mulRes4FA2);
      real dof_load4FA6#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA3);
      real dof_load4FA7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA4);
      real dof_load4FA8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA5);
      tensor[3] interCons4FA9#1 = <tensor[3]>[dof_load4FA6,dof_load4FA7,dof_load4FA8];
      int idx4FAA#1 = Subscript<int>(femIndicies4F73,ilit4F9B);
      int mulRes4FAB#3 = IMul(ilit4F95,idx4FAA);
      int addRes4FAC#1 = IAdd(ilit4F94,mulRes4FAB);
      int addRes4FAD#1 = IAdd(ilit4F99,mulRes4FAB);
      int addRes4FAE#1 = IAdd(ilit4F9B,mulRes4FAB);
      real dof_load4FAF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAC);
      real dof_load4FB0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAD);
      real dof_load4FB1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAE);
      tensor[3] interCons4FB2#1 = <tensor[3]>[dof_load4FAF,dof_load4FB0,dof_load4FB1];
      int idx4FB3#1 = Subscript<int>(femIndicies4F73,ilit4F95);
      int mulRes4FB4#3 = IMul(ilit4F95,idx4FB3);
      int addRes4FB5#1 = IAdd(ilit4F94,mulRes4FB4);
      int addRes4FB6#1 = IAdd(ilit4F99,mulRes4FB4);
      int addRes4FB7#1 = IAdd(ilit4F9B,mulRes4FB4);
      real dof_load4FB8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB5);
      real dof_load4FB9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB6);
      real dof_load4FBA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB7);
      tensor[3] interCons4FBB#1 = <tensor[3]>[dof_load4FB8,dof_load4FB9,dof_load4FBA];
      tensor[4,3] dofs4FBC#1 = <tensor[4,3]>[interCons4FA0,interCons4FA9,interCons4FB2,interCons4FBB];
      tensor[4,3] femDofs4F93#12 = dofs4FBC;
      real varAcc4FE8#1 = VIndex<3,0>(_t4F6D);
      real varAcc4FE9#1 = VIndex<3,1>(_t4F6D);
      real varAcc4FEA#1 = VIndex<3,2>(_t4F6D);
      real coeff4FEB#3 = -0.1e1;
      real iden4FEC#1 = varAcc4FE8;
      real one4FED#11 = 0.1e1;
      real prod4FEE#2 = RMul(one4FED,one4FED);
      real prod4FEF#2 = RMul(iden4FEC,prod4FEE);
      real iden4FF0#1 = varAcc4FE9;
      real prod4FF1#1 = RMul(iden4FF0,one4FED);
      real prod4FF2#2 = RMul(one4FED,prod4FF1);
      real iden4FF3#1 = varAcc4FEA;
      real prod4FF4#1 = RMul(one4FED,iden4FF3);
      real prod4FF5#2 = RMul(one4FED,prod4FF4);
      real prod4FF6#1 = RMul(one4FED,prod4FEE);
      real mult4FF7#1 = RMul(one4FED,prod4FF6);
      real mult4FF8#1 = RMul(coeff4FEB,prod4FF5);
      real mult4FF9#1 = RMul(coeff4FEB,prod4FF2);
      real mult4FFA#1 = RMul(coeff4FEB,prod4FEF);
      real sum4FFB#1 = RAdd(mult4FF9,mult4FFA);
      real sum4FFC#1 = RAdd(mult4FF8,sum4FFB);
      real sum4FFD#1 = RAdd(mult4FF7,sum4FFC);
      real intermediate4FFE#1 = sum4FFD;
      real basisEval4FFF#1 = RMul(one4FED,prod4FEF);
      real basisEval5000#1 = RMul(one4FED,prod4FF2);
      real basisEval5001#1 = RMul(one4FED,prod4FF5);
      tensor[4] intermediateCons5002#1 = <tensor[4]>[intermediate4FFE,basisEval4FFF,basisEval5000,basisEval5001];
      tensor[4] basisResult4FE7#4 = intermediateCons5002;
      real r5020#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs4F93);
      real r5021#3 = TensorIndex<tensor[4],[0]>(basisResult4FE7);
      real r5022#1 = RMul(r5020,r5021);
      real r5023#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs4F93);
      real r5024#3 = TensorIndex<tensor[4],[1]>(basisResult4FE7);
      real r5025#1 = RMul(r5023,r5024);
      real r5026#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs4F93);
      real r5027#3 = TensorIndex<tensor[4],[2]>(basisResult4FE7);
      real r5028#1 = RMul(r5026,r5027);
      real r5029#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs4F93);
      real r502A#3 = TensorIndex<tensor[4],[3]>(basisResult4FE7);
      real r502B#1 = RMul(r5029,r502A);
      real r502C#1 = RAdd(r5022,r5025);
      real r502D#1 = RAdd(r502C,r5028);
      real r502E#1 = RAdd(r502D,r502B);
      real r502F#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs4F93);
      real r5030#1 = RMul(r502F,r5021);
      real r5031#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs4F93);
      real r5032#1 = RMul(r5031,r5024);
      real r5033#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs4F93);
      real r5034#1 = RMul(r5033,r5027);
      real r5035#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs4F93);
      real r5036#1 = RMul(r5035,r502A);
      real r5037#1 = RAdd(r5030,r5032);
      real r5038#1 = RAdd(r5037,r5034);
      real r5039#1 = RAdd(r5038,r5036);
      real r503A#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs4F93);
      real r503B#1 = RMul(r503A,r5021);
      real r503C#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs4F93);
      real r503D#1 = RMul(r503C,r5024);
      real r503E#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs4F93);
      real r503F#1 = RMul(r503E,r5027);
      real r5040#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs4F93);
      real r5041#1 = RMul(r5040,r502A);
      real r5042#1 = RAdd(r503B,r503D);
      real r5043#1 = RAdd(r5042,r503F);
      real r5044#1 = RAdd(r5043,r5041);
      tensor[3] probe_l_5501F#1 = <tensor[3]>[r502E,r5039,r5044];
      tensor[3] _t506C#1 = VAdd<3>(probe_l_5501F,dPos40BB);
      femData:MeshPos cmp506F#1 = findPos3574 (meshData40BD,_t506C);
      return cmp506F
}
## input initialization
  ENTRY352A:  preds = []
    int timeSteps352B#1 = 32;
    globals.timeSteps3522 = timeSteps352B;
    real timeEps352E#1 = 0.1e-6;
    globals.timeEps3523 = timeEps352E;
    real stepSize3531#1 = 0.1e-1;
    globals.stepSize3525 = stepSize3531;
    int stepMax3534#1 = 100;
    globals.stepMax3526 = stepMax3534;
    return
## global-variable initialization
  ENTRY3538:  preds = []
    femData:Mesh meshData3539#3 = globals.meshData351F;
    femData:Space 0space03AB_intermedateGlobal353B#1 = globals.0space03AB_intermedateGlobal3520;
    femData:FemFunc 0data03AD_intermedateGlobal353D#1 = globals.0data03AD_intermedateGlobal3521;
    int _t353F#1 = 0;
    int _t3541#1 = 1;
    int _t3543#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3539);
    int _t3545#1 = ISub(_t3543,_t3541);
    int[] _t3547#1 = Range(_t353F,_t3545);
    femData:MeshCell[] _t3549#1 = <femData:MeshCell[]>{};
  FOREACH354C:  preds = [ASSIGN354A,NEXT3552]
    foreach (_t354B in _t3547) on exit goto ASSIGN3554
      femData:MeshCell[] _t3550#1 = phi(_t3549,_t354F)
    femData:MeshCell _t354D#1 = LoadFem<femData:MeshCell>(meshData3539,_t354B);
    femData:MeshCell[] _t354F#1 = Append<femData:MeshCell>(_t3550,_t354D);
    goto FOREACH354C
  ASSIGN3554:  preds = [FOREACH354C]
    femData:Space space3553#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal353B,meshData3539);
    femData:FemFunc data3555#2 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal353D,space3553);
    globals.data3527 = data3555;
    femData:Space _t3558#2 = ExtractFem<femData:Space,femData:FemFunc>(data3555);
    femData:Mesh _t355A#1 = ExtractFem<femData:Mesh,femData:Space>(_t3558);
    globals._t3528 = _t355A;
    globals._tX3529 = _t3558;
    return
## strand
  strand gg (tensor[3] startPos355F#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3566:  preds = []
        femData:Mesh meshData3567#1 = globals.meshData351F;
        tensor[3][1] _t3569#1 = <tensor[3][1]>{startPos355F};
        tensor[3][] _t356B#1 = MkDynamic<tensor[3],1>(_t3569);
        tensor[3][1] _t356D#1 = <tensor[3][1]>{startPos355F};
        tensor[3][] _t356F#1 = MkDynamic<tensor[3],1>(_t356D);
        int step3571#1 = 0;
        femData:MeshPos cPos3573#1 = findPos3574 (meshData3567,startPos355F);
        self.stream = _t356B;
        self.newStream = _t356F;
        self.step = step3571;
        self.cPos = cPos3573;
        self.altCPos = startPos355F;
        self.startPos = startPos355F;
        return
    end state init
    method update
        ENTRY3CC6:  preds = []
          femData:Mesh _t3CC7#2 = globals._t3528;
          femData:Space _t3CC9#20 = globals._tX3529;
          femData:FemFunc data3CCB#62 = globals.data3527;
          femData:Mesh meshData3CCD#2 = globals.meshData351F;
          real stepSize3CCF#4 = globals.stepSize3525;
          int stepMax3CD1#1 = globals.stepMax3526;
          tensor[3][] stream3CD3#2 = self.stream;
          tensor[3][] newStream3CD5#1 = self.newStream;
          int step3CD7#3 = self.step;
          femData:MeshPos cPos3CD9#6 = self.cPos;
          tensor[3] altCPos3CDB#5 = self.altCPos;
          tensor[3] startPos3CDD#1 = self.startPos;
          bool _t3CDF#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos3CD9);
          bool _t3CE1#1 = BNot(_t3CDF);
          if _t3CE1 then goto ASSIGN3CE5 else goto ASSIGN59B1
        ASSIGN3CE5:  preds = [COND3CE3]
          bool _t3CE4#1 = true;
          goto JOIN3CE8
        JOIN3CE8:  preds = [ASSIGN3CE5,JOIN59BA]
          bool _t3CE6#1 = phi(_t3CE4,_t3CE7)
          if _t3CE6 then goto STABILIZE3CEA else goto JOIN3CEB
        STABILIZE3CEA:  preds = [COND3CE9]
          stabilize
          goto JOIN3CEB
        JOIN3CEB:  preds = [*STABILIZE3CEA,COND3CE9]
          tensor[3] _t3CEC#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos3CD9);
          int _t3CEE#3 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos3CD9);
          femData:Mesh _t3CF0#18 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos3CD9);
          int ilit3CF3#1 = 4;
          int mulRes3CF4#4 = IMul(_t3CEE,ilit3CF3);
          int ilit3CF5#1 = 0;
          int addRes3CF6#1 = IAdd(mulRes3CF4,ilit3CF5);
          int idx3CF7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CF6);
          int ilit3CF8#1 = 1;
          int addRes3CF9#1 = IAdd(mulRes3CF4,ilit3CF8);
          int idx3CFA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CF9);
          int ilit3CFB#1 = 2;
          int addRes3CFC#1 = IAdd(mulRes3CF4,ilit3CFB);
          int idx3CFD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CFC);
          int ilit3CFE#1 = 3;
          int addRes3CFF#1 = IAdd(mulRes3CF4,ilit3CFE);
          int idx3D00#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CFF);
          int[4] seq3D01#1 = <int[4]>{idx3CF7,idx3CFA,idx3CFD,idx3D00};
          int[4] femIndicies3CF2#4 = seq3D01;
          int ilit3D13#5 = 0;
          int ilit3D14#5 = 3;
          int idx3D15#1 = Subscript<int>(femIndicies3CF2,ilit3D13);
          int mulRes3D16#3 = IMul(ilit3D14,idx3D15);
          int addRes3D17#1 = IAdd(ilit3D13,mulRes3D16);
          int ilit3D18#5 = 1;
          int addRes3D19#1 = IAdd(ilit3D18,mulRes3D16);
          int ilit3D1A#5 = 2;
          int addRes3D1B#1 = IAdd(ilit3D1A,mulRes3D16);
          real dof_load3D1C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D17);
          real dof_load3D1D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D19);
          real dof_load3D1E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D1B);
          tensor[3] interCons3D1F#1 = <tensor[3]>[dof_load3D1C,dof_load3D1D,dof_load3D1E];
          int idx3D20#1 = Subscript<int>(femIndicies3CF2,ilit3D18);
          int mulRes3D21#3 = IMul(ilit3D14,idx3D20);
          int addRes3D22#1 = IAdd(ilit3D13,mulRes3D21);
          int addRes3D23#1 = IAdd(ilit3D18,mulRes3D21);
          int addRes3D24#1 = IAdd(ilit3D1A,mulRes3D21);
          real dof_load3D25#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D22);
          real dof_load3D26#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D23);
          real dof_load3D27#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D24);
          tensor[3] interCons3D28#1 = <tensor[3]>[dof_load3D25,dof_load3D26,dof_load3D27];
          int idx3D29#1 = Subscript<int>(femIndicies3CF2,ilit3D1A);
          int mulRes3D2A#3 = IMul(ilit3D14,idx3D29);
          int addRes3D2B#1 = IAdd(ilit3D13,mulRes3D2A);
          int addRes3D2C#1 = IAdd(ilit3D18,mulRes3D2A);
          int addRes3D2D#1 = IAdd(ilit3D1A,mulRes3D2A);
          real dof_load3D2E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2B);
          real dof_load3D2F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2C);
          real dof_load3D30#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2D);
          tensor[3] interCons3D31#1 = <tensor[3]>[dof_load3D2E,dof_load3D2F,dof_load3D30];
          int idx3D32#1 = Subscript<int>(femIndicies3CF2,ilit3D14);
          int mulRes3D33#3 = IMul(ilit3D14,idx3D32);
          int addRes3D34#1 = IAdd(ilit3D13,mulRes3D33);
          int addRes3D35#1 = IAdd(ilit3D18,mulRes3D33);
          int addRes3D36#1 = IAdd(ilit3D1A,mulRes3D33);
          real dof_load3D37#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D34);
          real dof_load3D38#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D35);
          real dof_load3D39#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D36);
          tensor[3] interCons3D3A#1 = <tensor[3]>[dof_load3D37,dof_load3D38,dof_load3D39];
          tensor[4,3] dofs3D3B#1 = <tensor[4,3]>[interCons3D1F,interCons3D28,interCons3D31,interCons3D3A];
          tensor[4,3] femDofs3D12#12 = dofs3D3B;
          real varAcc3D67#1 = VIndex<3,0>(_t3CEC);
          real varAcc3D68#1 = VIndex<3,1>(_t3CEC);
          real varAcc3D69#1 = VIndex<3,2>(_t3CEC);
          real coeff3D6A#3 = -0.1e1;
          real iden3D6B#1 = varAcc3D67;
          real one3D6C#11 = 0.1e1;
          real prod3D6D#2 = RMul(one3D6C,one3D6C);
          real prod3D6E#2 = RMul(iden3D6B,prod3D6D);
          real iden3D6F#1 = varAcc3D68;
          real prod3D70#1 = RMul(iden3D6F,one3D6C);
          real prod3D71#2 = RMul(one3D6C,prod3D70);
          real iden3D72#1 = varAcc3D69;
          real prod3D73#1 = RMul(one3D6C,iden3D72);
          real prod3D74#2 = RMul(one3D6C,prod3D73);
          real prod3D75#1 = RMul(one3D6C,prod3D6D);
          real mult3D76#1 = RMul(one3D6C,prod3D75);
          real mult3D77#1 = RMul(coeff3D6A,prod3D74);
          real mult3D78#1 = RMul(coeff3D6A,prod3D71);
          real mult3D79#1 = RMul(coeff3D6A,prod3D6E);
          real sum3D7A#1 = RAdd(mult3D78,mult3D79);
          real sum3D7B#1 = RAdd(mult3D77,sum3D7A);
          real sum3D7C#1 = RAdd(mult3D76,sum3D7B);
          real intermediate3D7D#1 = sum3D7C;
          real basisEval3D7E#1 = RMul(one3D6C,prod3D6E);
          real basisEval3D7F#1 = RMul(one3D6C,prod3D71);
          real basisEval3D80#1 = RMul(one3D6C,prod3D74);
          tensor[4] intermediateCons3D81#1 = <tensor[4]>[intermediate3D7D,basisEval3D7E,basisEval3D7F,basisEval3D80];
          tensor[4] basisResult3D66#4 = intermediateCons3D81;
          real r3D9F#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs3D12);
          real r3DA0#3 = TensorIndex<tensor[4],[0]>(basisResult3D66);
          real r3DA1#1 = RMul(r3D9F,r3DA0);
          real r3DA2#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs3D12);
          real r3DA3#3 = TensorIndex<tensor[4],[1]>(basisResult3D66);
          real r3DA4#1 = RMul(r3DA2,r3DA3);
          real r3DA5#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs3D12);
          real r3DA6#3 = TensorIndex<tensor[4],[2]>(basisResult3D66);
          real r3DA7#1 = RMul(r3DA5,r3DA6);
          real r3DA8#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs3D12);
          real r3DA9#3 = TensorIndex<tensor[4],[3]>(basisResult3D66);
          real r3DAA#1 = RMul(r3DA8,r3DA9);
          real r3DAB#1 = RAdd(r3DA1,r3DA4);
          real r3DAC#1 = RAdd(r3DAB,r3DA7);
          real r3DAD#1 = RAdd(r3DAC,r3DAA);
          real r3DAE#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs3D12);
          real r3DAF#1 = RMul(r3DAE,r3DA0);
          real r3DB0#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs3D12);
          real r3DB1#1 = RMul(r3DB0,r3DA3);
          real r3DB2#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs3D12);
          real r3DB3#1 = RMul(r3DB2,r3DA6);
          real r3DB4#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs3D12);
          real r3DB5#1 = RMul(r3DB4,r3DA9);
          real r3DB6#1 = RAdd(r3DAF,r3DB1);
          real r3DB7#1 = RAdd(r3DB6,r3DB3);
          real r3DB8#1 = RAdd(r3DB7,r3DB5);
          real r3DB9#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs3D12);
          real r3DBA#1 = RMul(r3DB9,r3DA0);
          real r3DBB#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs3D12);
          real r3DBC#1 = RMul(r3DBB,r3DA3);
          real r3DBD#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs3D12);
          real r3DBE#1 = RMul(r3DBD,r3DA6);
          real r3DBF#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs3D12);
          real r3DC0#1 = RMul(r3DBF,r3DA9);
          real r3DC1#1 = RAdd(r3DBA,r3DBC);
          real r3DC2#1 = RAdd(r3DC1,r3DBE);
          real r3DC3#1 = RAdd(r3DC2,r3DC0);
          tensor[3] probe_l_53D9E#1 = <tensor[3]>[r3DAD,r3DB8,r3DC3];
          tensor[3] op1_e3_l_73DEB#2 = VSub<3>(probe_l_53D9E,altCPos3CDB);
          real op1_e3_l_93DEE#1 = VDot<3>(op1_e3_l_73DEB,op1_e3_l_73DEB);
          real _t3DF1#1 = Sqrt(op1_e3_l_93DEE);
          real _t3DF4#1 = 0.1e-5;
          bool _t3DF6#1 = GT<real>(_t3DF1,_t3DF4);
          if _t3DF6 then goto ASSIGN3DFA else goto ASSIGN59AA
        ASSIGN3DFA:  preds = [COND3DF8]
          string _t3DF9#1 = "Error in tracing: At step:";
          string _t3DFB#1 = " with particle:";
          string _t3DFD#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t3DF9,step3CD7,_t3DFB,startPos3CDD,_t3DFD);
          goto JOIN3E00
        JOIN3E00:  preds = [MASSIGN3DFF,MASSIGN59AF]
          real _t3E01#2 = 0.5e0;
          if _t3CDF then goto ASSIGN3E05 else goto ASSIGN59A7
        ASSIGN3E05:  preds = [COND3E03]
          femData:MeshCell c3E04#1 = LoadFem<femData:MeshCell>(_t3CF0,_t3CEE);
          int _t3E06#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3E04);
          femData:FuncCell _t3E08#2 = LoadFem<femData:FuncCell>(data3CCB,_t3E06);
          femData:FemFunc _t3E0A#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3E08);
          femData:Space _t3E0C#10 = ExtractFem<femData:Space,femData:FemFunc>(_t3E0A);
          int _t3E0E#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3E08);
          int ilit3E11#1 = 10;
          int mulRes3E12#10 = IMul(_t3E0E,ilit3E11);
          int ilit3E13#1 = 0;
          int addRes3E14#1 = IAdd(mulRes3E12,ilit3E13);
          int idx3E15#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E14);
          int ilit3E16#1 = 1;
          int addRes3E17#1 = IAdd(mulRes3E12,ilit3E16);
          int idx3E18#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E17);
          int ilit3E19#1 = 2;
          int addRes3E1A#1 = IAdd(mulRes3E12,ilit3E19);
          int idx3E1B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E1A);
          int ilit3E1C#1 = 3;
          int addRes3E1D#1 = IAdd(mulRes3E12,ilit3E1C);
          int idx3E1E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E1D);
          int ilit3E1F#1 = 4;
          int addRes3E20#1 = IAdd(mulRes3E12,ilit3E1F);
          int idx3E21#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E20);
          int ilit3E22#1 = 5;
          int addRes3E23#1 = IAdd(mulRes3E12,ilit3E22);
          int idx3E24#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E23);
          int ilit3E25#1 = 6;
          int addRes3E26#1 = IAdd(mulRes3E12,ilit3E25);
          int idx3E27#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E26);
          int ilit3E28#1 = 7;
          int addRes3E29#1 = IAdd(mulRes3E12,ilit3E28);
          int idx3E2A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E29);
          int ilit3E2B#1 = 8;
          int addRes3E2C#1 = IAdd(mulRes3E12,ilit3E2B);
          int idx3E2D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E2C);
          int ilit3E2E#1 = 9;
          int addRes3E2F#1 = IAdd(mulRes3E12,ilit3E2E);
          int idx3E30#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E2F);
          int[10] seq3E31#1 = <int[10]>{idx3E15,idx3E18,idx3E1B,idx3E1E,idx3E21,idx3E24,idx3E27,idx3E2A,idx3E2D,idx3E30};
          int[10] femIndicies3E10#10 = seq3E31;
          int ilit3E55#11 = 0;
          int ilit3E56#11 = 3;
          int idx3E57#1 = Subscript<int>(femIndicies3E10,ilit3E55);
          int mulRes3E58#3 = IMul(ilit3E56,idx3E57);
          int addRes3E59#1 = IAdd(ilit3E55,mulRes3E58);
          int ilit3E5A#11 = 1;
          int addRes3E5B#1 = IAdd(ilit3E5A,mulRes3E58);
          int ilit3E5C#11 = 2;
          int addRes3E5D#1 = IAdd(ilit3E5C,mulRes3E58);
          real dof_load3E5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E59);
          real dof_load3E5F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E5B);
          real dof_load3E60#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E5D);
          tensor[3] interCons3E61#1 = <tensor[3]>[dof_load3E5E,dof_load3E5F,dof_load3E60];
          int idx3E62#1 = Subscript<int>(femIndicies3E10,ilit3E5A);
          int mulRes3E63#3 = IMul(ilit3E56,idx3E62);
          int addRes3E64#1 = IAdd(ilit3E55,mulRes3E63);
          int addRes3E65#1 = IAdd(ilit3E5A,mulRes3E63);
          int addRes3E66#1 = IAdd(ilit3E5C,mulRes3E63);
          real dof_load3E67#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E64);
          real dof_load3E68#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E65);
          real dof_load3E69#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E66);
          tensor[3] interCons3E6A#1 = <tensor[3]>[dof_load3E67,dof_load3E68,dof_load3E69];
          int idx3E6B#1 = Subscript<int>(femIndicies3E10,ilit3E5C);
          int mulRes3E6C#3 = IMul(ilit3E56,idx3E6B);
          int addRes3E6D#1 = IAdd(ilit3E55,mulRes3E6C);
          int addRes3E6E#1 = IAdd(ilit3E5A,mulRes3E6C);
          int addRes3E6F#1 = IAdd(ilit3E5C,mulRes3E6C);
          real dof_load3E70#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6D);
          real dof_load3E71#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6E);
          real dof_load3E72#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6F);
          tensor[3] interCons3E73#1 = <tensor[3]>[dof_load3E70,dof_load3E71,dof_load3E72];
          int idx3E74#1 = Subscript<int>(femIndicies3E10,ilit3E56);
          int mulRes3E75#3 = IMul(ilit3E56,idx3E74);
          int addRes3E76#1 = IAdd(ilit3E55,mulRes3E75);
          int addRes3E77#1 = IAdd(ilit3E5A,mulRes3E75);
          int addRes3E78#1 = IAdd(ilit3E5C,mulRes3E75);
          real dof_load3E79#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E76);
          real dof_load3E7A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E77);
          real dof_load3E7B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E78);
          tensor[3] interCons3E7C#1 = <tensor[3]>[dof_load3E79,dof_load3E7A,dof_load3E7B];
          int ilit3E7D#1 = 4;
          int idx3E7E#1 = Subscript<int>(femIndicies3E10,ilit3E7D);
          int mulRes3E7F#3 = IMul(ilit3E56,idx3E7E);
          int addRes3E80#1 = IAdd(ilit3E55,mulRes3E7F);
          int addRes3E81#1 = IAdd(ilit3E5A,mulRes3E7F);
          int addRes3E82#1 = IAdd(ilit3E5C,mulRes3E7F);
          real dof_load3E83#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E80);
          real dof_load3E84#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E81);
          real dof_load3E85#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E82);
          tensor[3] interCons3E86#1 = <tensor[3]>[dof_load3E83,dof_load3E84,dof_load3E85];
          int ilit3E87#1 = 5;
          int idx3E88#1 = Subscript<int>(femIndicies3E10,ilit3E87);
          int mulRes3E89#3 = IMul(ilit3E56,idx3E88);
          int addRes3E8A#1 = IAdd(ilit3E55,mulRes3E89);
          int addRes3E8B#1 = IAdd(ilit3E5A,mulRes3E89);
          int addRes3E8C#1 = IAdd(ilit3E5C,mulRes3E89);
          real dof_load3E8D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8A);
          real dof_load3E8E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8B);
          real dof_load3E8F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8C);
          tensor[3] interCons3E90#1 = <tensor[3]>[dof_load3E8D,dof_load3E8E,dof_load3E8F];
          int ilit3E91#1 = 6;
          int idx3E92#1 = Subscript<int>(femIndicies3E10,ilit3E91);
          int mulRes3E93#3 = IMul(ilit3E56,idx3E92);
          int addRes3E94#1 = IAdd(ilit3E55,mulRes3E93);
          int addRes3E95#1 = IAdd(ilit3E5A,mulRes3E93);
          int addRes3E96#1 = IAdd(ilit3E5C,mulRes3E93);
          real dof_load3E97#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E94);
          real dof_load3E98#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E95);
          real dof_load3E99#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E96);
          tensor[3] interCons3E9A#1 = <tensor[3]>[dof_load3E97,dof_load3E98,dof_load3E99];
          int ilit3E9B#1 = 7;
          int idx3E9C#1 = Subscript<int>(femIndicies3E10,ilit3E9B);
          int mulRes3E9D#3 = IMul(ilit3E56,idx3E9C);
          int addRes3E9E#1 = IAdd(ilit3E55,mulRes3E9D);
          int addRes3E9F#1 = IAdd(ilit3E5A,mulRes3E9D);
          int addRes3EA0#1 = IAdd(ilit3E5C,mulRes3E9D);
          real dof_load3EA1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E9E);
          real dof_load3EA2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E9F);
          real dof_load3EA3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA0);
          tensor[3] interCons3EA4#1 = <tensor[3]>[dof_load3EA1,dof_load3EA2,dof_load3EA3];
          int ilit3EA5#1 = 8;
          int idx3EA6#1 = Subscript<int>(femIndicies3E10,ilit3EA5);
          int mulRes3EA7#3 = IMul(ilit3E56,idx3EA6);
          int addRes3EA8#1 = IAdd(ilit3E55,mulRes3EA7);
          int addRes3EA9#1 = IAdd(ilit3E5A,mulRes3EA7);
          int addRes3EAA#1 = IAdd(ilit3E5C,mulRes3EA7);
          real dof_load3EAB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA8);
          real dof_load3EAC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA9);
          real dof_load3EAD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EAA);
          tensor[3] interCons3EAE#1 = <tensor[3]>[dof_load3EAB,dof_load3EAC,dof_load3EAD];
          int ilit3EAF#1 = 9;
          int idx3EB0#1 = Subscript<int>(femIndicies3E10,ilit3EAF);
          int mulRes3EB1#3 = IMul(ilit3E56,idx3EB0);
          int addRes3EB2#1 = IAdd(ilit3E55,mulRes3EB1);
          int addRes3EB3#1 = IAdd(ilit3E5A,mulRes3EB1);
          int addRes3EB4#1 = IAdd(ilit3E5C,mulRes3EB1);
          real dof_load3EB5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB2);
          real dof_load3EB6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB3);
          real dof_load3EB7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB4);
          tensor[3] interCons3EB8#1 = <tensor[3]>[dof_load3EB5,dof_load3EB6,dof_load3EB7];
          tensor[10,3] dofs3EB9#1 = <tensor[10,3]>[interCons3E61,interCons3E6A,interCons3E73,interCons3E7C,interCons3E86,interCons3E90,interCons3E9A,interCons3EA4,interCons3EAE,interCons3EB8];
          tensor[10,3] femDofs3E54#30 = dofs3EB9;
          real varAcc3F21#2 = VIndex<3,0>(_t3CEC);
          real varAcc3F22#2 = VIndex<3,1>(_t3CEC);
          real varAcc3F23#2 = VIndex<3,2>(_t3CEC);
          real coeff3F24#3 = 0.2e1;
          real iden3F25#4 = varAcc3F21;
          real prod23F26#1 = RMul(iden3F25,varAcc3F21);
          real one3F27#13 = 0.1e1;
          real prod3F28#3 = RMul(one3F27,one3F27);
          real prod3F29#2 = RMul(prod23F26,prod3F28);
          real coeff3F2A#6 = 0.4e1;
          real iden3F2B#3 = varAcc3F22;
          real prod3F2C#2 = RMul(iden3F2B,one3F27);
          real prod3F2D#2 = RMul(iden3F25,prod3F2C);
          real iden3F2E#3 = varAcc3F23;
          real prod3F2F#2 = RMul(one3F27,iden3F2E);
          real prod3F30#2 = RMul(iden3F25,prod3F2F);
          real coeff3F31#3 = -0.3e1;
          real prod3F32#3 = RMul(iden3F25,prod3F28);
          real prod23F33#1 = RMul(iden3F2B,varAcc3F22);
          real prod3F34#1 = RMul(prod23F33,one3F27);
          real prod3F35#2 = RMul(one3F27,prod3F34);
          real prod3F36#1 = RMul(iden3F2B,iden3F2E);
          real prod3F37#2 = RMul(one3F27,prod3F36);
          real prod3F38#3 = RMul(one3F27,prod3F2C);
          real prod23F39#1 = RMul(iden3F2E,varAcc3F23);
          real prod3F3A#1 = RMul(one3F27,prod23F39);
          real prod3F3B#2 = RMul(one3F27,prod3F3A);
          real prod3F3C#3 = RMul(one3F27,prod3F2F);
          real prod3F3D#1 = RMul(one3F27,prod3F28);
          real mult3F3E#1 = RMul(one3F27,prod3F3D);
          real mult3F3F#1 = RMul(coeff3F31,prod3F3C);
          real mult3F40#2 = RMul(coeff3F24,prod3F3B);
          real mult3F41#1 = RMul(coeff3F31,prod3F38);
          real mult3F42#2 = RMul(coeff3F2A,prod3F37);
          real mult3F43#2 = RMul(coeff3F24,prod3F35);
          real mult3F44#1 = RMul(coeff3F31,prod3F32);
          real mult3F45#2 = RMul(coeff3F2A,prod3F30);
          real mult3F46#2 = RMul(coeff3F2A,prod3F2D);
          real mult3F47#2 = RMul(coeff3F24,prod3F29);
          real sum3F48#1 = RAdd(mult3F46,mult3F47);
          real sum3F49#1 = RAdd(mult3F45,sum3F48);
          real sum3F4A#1 = RAdd(mult3F44,sum3F49);
          real sum3F4B#1 = RAdd(mult3F43,sum3F4A);
          real sum3F4C#1 = RAdd(mult3F42,sum3F4B);
          real sum3F4D#1 = RAdd(mult3F41,sum3F4C);
          real sum3F4E#1 = RAdd(mult3F40,sum3F4D);
          real sum3F4F#1 = RAdd(mult3F3F,sum3F4E);
          real sum3F50#1 = RAdd(mult3F3E,sum3F4F);
          real intermediate3F51#1 = sum3F50;
          real coeff3F52#3 = -0.1e1;
          real mult3F53#1 = RMul(coeff3F52,prod3F32);
          real sum3F54#1 = RAdd(mult3F53,mult3F47);
          real intermediate3F55#1 = sum3F54;
          real mult3F56#1 = RMul(coeff3F52,prod3F38);
          real sum3F57#1 = RAdd(mult3F56,mult3F43);
          real intermediate3F58#1 = sum3F57;
          real mult3F59#1 = RMul(coeff3F52,prod3F3C);
          real sum3F5A#1 = RAdd(mult3F59,mult3F40);
          real intermediate3F5B#1 = sum3F5A;
          real coeff3F5C#6 = -0.4e1;
          real mult3F5D#1 = RMul(coeff3F2A,prod3F3C);
          real mult3F5E#1 = RMul(coeff3F5C,prod3F3B);
          real mult3F5F#2 = RMul(coeff3F5C,prod3F37);
          real mult3F60#2 = RMul(coeff3F5C,prod3F30);
          real sum3F61#1 = RAdd(mult3F5F,mult3F60);
          real sum3F62#1 = RAdd(mult3F5E,sum3F61);
          real sum3F63#1 = RAdd(mult3F5D,sum3F62);
          real intermediate3F64#1 = sum3F63;
          real mult3F65#1 = RMul(coeff3F2A,prod3F38);
          real mult3F66#1 = RMul(coeff3F5C,prod3F35);
          real mult3F67#2 = RMul(coeff3F5C,prod3F2D);
          real sum3F68#1 = RAdd(mult3F66,mult3F67);
          real sum3F69#1 = RAdd(mult3F5F,sum3F68);
          real sum3F6A#1 = RAdd(mult3F65,sum3F69);
          real intermediate3F6B#1 = sum3F6A;
          real mult3F6C#1 = RMul(coeff3F2A,prod3F32);
          real mult3F6D#1 = RMul(coeff3F5C,prod3F29);
          real sum3F6E#1 = RAdd(mult3F67,mult3F6D);
          real sum3F6F#1 = RAdd(mult3F60,sum3F6E);
          real sum3F70#1 = RAdd(mult3F6C,sum3F6F);
          real intermediate3F71#1 = sum3F70;
          tensor[10] intermediateCons3F72#1 = <tensor[10]>[intermediate3F51,intermediate3F55,intermediate3F58,intermediate3F5B,mult3F42,mult3F45,mult3F46,intermediate3F64,intermediate3F6B,intermediate3F71];
          tensor[10] basisResult3F20#10 = intermediateCons3F72;
          real r3FC7#1 = TensorIndex<tensor[10,3],[0,0]>(femDofs3E54);
          real r3FC8#3 = TensorIndex<tensor[10],[0]>(basisResult3F20);
          real r3FC9#1 = RMul(r3FC7,r3FC8);
          real r3FCA#1 = TensorIndex<tensor[10,3],[1,0]>(femDofs3E54);
          real r3FCB#3 = TensorIndex<tensor[10],[1]>(basisResult3F20);
          real r3FCC#1 = RMul(r3FCA,r3FCB);
          real r3FCD#1 = TensorIndex<tensor[10,3],[2,0]>(femDofs3E54);
          real r3FCE#3 = TensorIndex<tensor[10],[2]>(basisResult3F20);
          real r3FCF#1 = RMul(r3FCD,r3FCE);
          real r3FD0#1 = TensorIndex<tensor[10,3],[3,0]>(femDofs3E54);
          real r3FD1#3 = TensorIndex<tensor[10],[3]>(basisResult3F20);
          real r3FD2#1 = RMul(r3FD0,r3FD1);
          real r3FD3#1 = TensorIndex<tensor[10,3],[4,0]>(femDofs3E54);
          real r3FD4#3 = TensorIndex<tensor[10],[4]>(basisResult3F20);
          real r3FD5#1 = RMul(r3FD3,r3FD4);
          real r3FD6#1 = TensorIndex<tensor[10,3],[5,0]>(femDofs3E54);
          real r3FD7#3 = TensorIndex<tensor[10],[5]>(basisResult3F20);
          real r3FD8#1 = RMul(r3FD6,r3FD7);
          real r3FD9#1 = TensorIndex<tensor[10,3],[6,0]>(femDofs3E54);
          real r3FDA#3 = TensorIndex<tensor[10],[6]>(basisResult3F20);
          real r3FDB#1 = RMul(r3FD9,r3FDA);
          real r3FDC#1 = TensorIndex<tensor[10,3],[7,0]>(femDofs3E54);
          real r3FDD#3 = TensorIndex<tensor[10],[7]>(basisResult3F20);
          real r3FDE#1 = RMul(r3FDC,r3FDD);
          real r3FDF#1 = TensorIndex<tensor[10,3],[8,0]>(femDofs3E54);
          real r3FE0#3 = TensorIndex<tensor[10],[8]>(basisResult3F20);
          real r3FE1#1 = RMul(r3FDF,r3FE0);
          real r3FE2#1 = TensorIndex<tensor[10,3],[9,0]>(femDofs3E54);
          real r3FE3#3 = TensorIndex<tensor[10],[9]>(basisResult3F20);
          real r3FE4#1 = RMul(r3FE2,r3FE3);
          real r3FE5#1 = RAdd(r3FC9,r3FCC);
          real r3FE6#1 = RAdd(r3FE5,r3FCF);
          real r3FE7#1 = RAdd(r3FE6,r3FD2);
          real r3FE8#1 = RAdd(r3FE7,r3FD5);
          real r3FE9#1 = RAdd(r3FE8,r3FD8);
          real r3FEA#1 = RAdd(r3FE9,r3FDB);
          real r3FEB#1 = RAdd(r3FEA,r3FDE);
          real r3FEC#1 = RAdd(r3FEB,r3FE1);
          real r3FED#1 = RAdd(r3FEC,r3FE4);
          real r3FEE#1 = TensorIndex<tensor[10,3],[0,1]>(femDofs3E54);
          real r3FEF#1 = RMul(r3FEE,r3FC8);
          real r3FF0#1 = TensorIndex<tensor[10,3],[1,1]>(femDofs3E54);
          real r3FF1#1 = RMul(r3FF0,r3FCB);
          real r3FF2#1 = TensorIndex<tensor[10,3],[2,1]>(femDofs3E54);
          real r3FF3#1 = RMul(r3FF2,r3FCE);
          real r3FF4#1 = TensorIndex<tensor[10,3],[3,1]>(femDofs3E54);
          real r3FF5#1 = RMul(r3FF4,r3FD1);
          real r3FF6#1 = TensorIndex<tensor[10,3],[4,1]>(femDofs3E54);
          real r3FF7#1 = RMul(r3FF6,r3FD4);
          real r3FF8#1 = TensorIndex<tensor[10,3],[5,1]>(femDofs3E54);
          real r3FF9#1 = RMul(r3FF8,r3FD7);
          real r3FFA#1 = TensorIndex<tensor[10,3],[6,1]>(femDofs3E54);
          real r3FFB#1 = RMul(r3FFA,r3FDA);
          real r3FFC#1 = TensorIndex<tensor[10,3],[7,1]>(femDofs3E54);
          real r3FFD#1 = RMul(r3FFC,r3FDD);
          real r3FFE#1 = TensorIndex<tensor[10,3],[8,1]>(femDofs3E54);
          real r3FFF#1 = RMul(r3FFE,r3FE0);
          real r4000#1 = TensorIndex<tensor[10,3],[9,1]>(femDofs3E54);
          real r4001#1 = RMul(r4000,r3FE3);
          real r4002#1 = RAdd(r3FEF,r3FF1);
          real r4003#1 = RAdd(r4002,r3FF3);
          real r4004#1 = RAdd(r4003,r3FF5);
          real r4005#1 = RAdd(r4004,r3FF7);
          real r4006#1 = RAdd(r4005,r3FF9);
          real r4007#1 = RAdd(r4006,r3FFB);
          real r4008#1 = RAdd(r4007,r3FFD);
          real r4009#1 = RAdd(r4008,r3FFF);
          real r400A#1 = RAdd(r4009,r4001);
          real r400B#1 = TensorIndex<tensor[10,3],[0,2]>(femDofs3E54);
          real r400C#1 = RMul(r400B,r3FC8);
          real r400D#1 = TensorIndex<tensor[10,3],[1,2]>(femDofs3E54);
          real r400E#1 = RMul(r400D,r3FCB);
          real r400F#1 = TensorIndex<tensor[10,3],[2,2]>(femDofs3E54);
          real r4010#1 = RMul(r400F,r3FCE);
          real r4011#1 = TensorIndex<tensor[10,3],[3,2]>(femDofs3E54);
          real r4012#1 = RMul(r4011,r3FD1);
          real r4013#1 = TensorIndex<tensor[10,3],[4,2]>(femDofs3E54);
          real r4014#1 = RMul(r4013,r3FD4);
          real r4015#1 = TensorIndex<tensor[10,3],[5,2]>(femDofs3E54);
          real r4016#1 = RMul(r4015,r3FD7);
          real r4017#1 = TensorIndex<tensor[10,3],[6,2]>(femDofs3E54);
          real r4018#1 = RMul(r4017,r3FDA);
          real r4019#1 = TensorIndex<tensor[10,3],[7,2]>(femDofs3E54);
          real r401A#1 = RMul(r4019,r3FDD);
          real r401B#1 = TensorIndex<tensor[10,3],[8,2]>(femDofs3E54);
          real r401C#1 = RMul(r401B,r3FE0);
          real r401D#1 = TensorIndex<tensor[10,3],[9,2]>(femDofs3E54);
          real r401E#1 = RMul(r401D,r3FE3);
          real r401F#1 = RAdd(r400C,r400E);
          real r4020#1 = RAdd(r401F,r4010);
          real r4021#1 = RAdd(r4020,r4012);
          real r4022#1 = RAdd(r4021,r4014);
          real r4023#1 = RAdd(r4022,r4016);
          real r4024#1 = RAdd(r4023,r4018);
          real r4025#1 = RAdd(r4024,r401A);
          real r4026#1 = RAdd(r4025,r401C);
          real r4027#1 = RAdd(r4026,r401E);
          tensor[3] probe_l_83FC6#5 = <tensor[3]>[r3FED,r400A,r4027];
          real op1_e3_l_11408B#1 = VDot<3>(probe_l_83FC6,probe_l_83FC6);
          real op1_e3_l_12408E#1 = Sqrt(op1_e3_l_11408B);
          real realLit4092#1 = 0.1e1;
          real r4093#3 = RDiv(realLit4092,op1_e3_l_12408E);
          real r4094#1 = TensorIndex<tensor[3],[0]>(probe_l_83FC6);
          real r4095#1 = RMul(r4093,r4094);
          real r4096#1 = TensorIndex<tensor[3],[1]>(probe_l_83FC6);
          real r4097#1 = RMul(r4093,r4096);
          real r4098#1 = TensorIndex<tensor[3],[2]>(probe_l_83FC6);
          real r4099#1 = RMul(r4093,r4098);
          tensor[3] _t4091#1 = <tensor[3]>[r4095,r4097,r4099];
          goto JOIN40A6
        JOIN40A6:  preds = [ASSIGN40A3,ASSIGN59A8]
          tensor[3] _t40A4#3 = phi(_t4091,_t40A5)
          real r40A8#1 = TensorIndex<tensor[3],[0]>(_t40A4);
          real r40A9#3 = RMul(_t3E01,stepSize3CCF);
          real r40AA#1 = RMul(r40A9,r40A8);
          real r40AB#1 = TensorIndex<tensor[3],[1]>(_t40A4);
          real r40AC#1 = RMul(r40A9,r40AB);
          real r40AD#1 = TensorIndex<tensor[3],[2]>(_t40A4);
          real r40AE#1 = RMul(r40A9,r40AD);
          tensor[3] up140A7#1 = <tensor[3]>[r40AA,r40AC,r40AE];
          femData:MeshPos intermed40B8#4 = posMove40B9 (cPos3CD9,up140A7);
          femData:MeshPos callFindPos5073#2 = findPos3574 (_t3CC7,altCPos3CDB);
          int intPos5075#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5073);
          tensor[3] refPos5077#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5073);
          int ilit507A#1 = 10;
          int mulRes507B#10 = IMul(intPos5075,ilit507A);
          int ilit507C#1 = 0;
          int addRes507D#1 = IAdd(mulRes507B,ilit507C);
          int idx507E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes507D);
          int ilit507F#1 = 1;
          int addRes5080#1 = IAdd(mulRes507B,ilit507F);
          int idx5081#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5080);
          int ilit5082#1 = 2;
          int addRes5083#1 = IAdd(mulRes507B,ilit5082);
          int idx5084#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5083);
          int ilit5085#1 = 3;
          int addRes5086#1 = IAdd(mulRes507B,ilit5085);
          int idx5087#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5086);
          int ilit5088#1 = 4;
          int addRes5089#1 = IAdd(mulRes507B,ilit5088);
          int idx508A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5089);
          int ilit508B#1 = 5;
          int addRes508C#1 = IAdd(mulRes507B,ilit508B);
          int idx508D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes508C);
          int ilit508E#1 = 6;
          int addRes508F#1 = IAdd(mulRes507B,ilit508E);
          int idx5090#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes508F);
          int ilit5091#1 = 7;
          int addRes5092#1 = IAdd(mulRes507B,ilit5091);
          int idx5093#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5092);
          int ilit5094#1 = 8;
          int addRes5095#1 = IAdd(mulRes507B,ilit5094);
          int idx5096#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5095);
          int ilit5097#1 = 9;
          int addRes5098#1 = IAdd(mulRes507B,ilit5097);
          int idx5099#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5098);
          int[10] seq509A#1 = <int[10]>{idx507E,idx5081,idx5084,idx5087,idx508A,idx508D,idx5090,idx5093,idx5096,idx5099};
          int[10] femIndicies5079#10 = seq509A;
          int ilit50BE#11 = 0;
          int ilit50BF#11 = 3;
          int idx50C0#1 = Subscript<int>(femIndicies5079,ilit50BE);
          int mulRes50C1#3 = IMul(ilit50BF,idx50C0);
          int addRes50C2#1 = IAdd(ilit50BE,mulRes50C1);
          int ilit50C3#11 = 1;
          int addRes50C4#1 = IAdd(ilit50C3,mulRes50C1);
          int ilit50C5#11 = 2;
          int addRes50C6#1 = IAdd(ilit50C5,mulRes50C1);
          real dof_load50C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C2);
          real dof_load50C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C4);
          real dof_load50C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C6);
          tensor[3] interCons50CA#1 = <tensor[3]>[dof_load50C7,dof_load50C8,dof_load50C9];
          int idx50CB#1 = Subscript<int>(femIndicies5079,ilit50C3);
          int mulRes50CC#3 = IMul(ilit50BF,idx50CB);
          int addRes50CD#1 = IAdd(ilit50BE,mulRes50CC);
          int addRes50CE#1 = IAdd(ilit50C3,mulRes50CC);
          int addRes50CF#1 = IAdd(ilit50C5,mulRes50CC);
          real dof_load50D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CD);
          real dof_load50D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CE);
          real dof_load50D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CF);
          tensor[3] interCons50D3#1 = <tensor[3]>[dof_load50D0,dof_load50D1,dof_load50D2];
          int idx50D4#1 = Subscript<int>(femIndicies5079,ilit50C5);
          int mulRes50D5#3 = IMul(ilit50BF,idx50D4);
          int addRes50D6#1 = IAdd(ilit50BE,mulRes50D5);
          int addRes50D7#1 = IAdd(ilit50C3,mulRes50D5);
          int addRes50D8#1 = IAdd(ilit50C5,mulRes50D5);
          real dof_load50D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D6);
          real dof_load50DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D7);
          real dof_load50DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D8);
          tensor[3] interCons50DC#1 = <tensor[3]>[dof_load50D9,dof_load50DA,dof_load50DB];
          int idx50DD#1 = Subscript<int>(femIndicies5079,ilit50BF);
          int mulRes50DE#3 = IMul(ilit50BF,idx50DD);
          int addRes50DF#1 = IAdd(ilit50BE,mulRes50DE);
          int addRes50E0#1 = IAdd(ilit50C3,mulRes50DE);
          int addRes50E1#1 = IAdd(ilit50C5,mulRes50DE);
          real dof_load50E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50DF);
          real dof_load50E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E0);
          real dof_load50E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E1);
          tensor[3] interCons50E5#1 = <tensor[3]>[dof_load50E2,dof_load50E3,dof_load50E4];
          int ilit50E6#1 = 4;
          int idx50E7#1 = Subscript<int>(femIndicies5079,ilit50E6);
          int mulRes50E8#3 = IMul(ilit50BF,idx50E7);
          int addRes50E9#1 = IAdd(ilit50BE,mulRes50E8);
          int addRes50EA#1 = IAdd(ilit50C3,mulRes50E8);
          int addRes50EB#1 = IAdd(ilit50C5,mulRes50E8);
          real dof_load50EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E9);
          real dof_load50ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50EA);
          real dof_load50EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50EB);
          tensor[3] interCons50EF#1 = <tensor[3]>[dof_load50EC,dof_load50ED,dof_load50EE];
          int ilit50F0#1 = 5;
          int idx50F1#1 = Subscript<int>(femIndicies5079,ilit50F0);
          int mulRes50F2#3 = IMul(ilit50BF,idx50F1);
          int addRes50F3#1 = IAdd(ilit50BE,mulRes50F2);
          int addRes50F4#1 = IAdd(ilit50C3,mulRes50F2);
          int addRes50F5#1 = IAdd(ilit50C5,mulRes50F2);
          real dof_load50F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F3);
          real dof_load50F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F4);
          real dof_load50F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F5);
          tensor[3] interCons50F9#1 = <tensor[3]>[dof_load50F6,dof_load50F7,dof_load50F8];
          int ilit50FA#1 = 6;
          int idx50FB#1 = Subscript<int>(femIndicies5079,ilit50FA);
          int mulRes50FC#3 = IMul(ilit50BF,idx50FB);
          int addRes50FD#1 = IAdd(ilit50BE,mulRes50FC);
          int addRes50FE#1 = IAdd(ilit50C3,mulRes50FC);
          int addRes50FF#1 = IAdd(ilit50C5,mulRes50FC);
          real dof_load5100#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FD);
          real dof_load5101#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FE);
          real dof_load5102#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FF);
          tensor[3] interCons5103#1 = <tensor[3]>[dof_load5100,dof_load5101,dof_load5102];
          int ilit5104#1 = 7;
          int idx5105#1 = Subscript<int>(femIndicies5079,ilit5104);
          int mulRes5106#3 = IMul(ilit50BF,idx5105);
          int addRes5107#1 = IAdd(ilit50BE,mulRes5106);
          int addRes5108#1 = IAdd(ilit50C3,mulRes5106);
          int addRes5109#1 = IAdd(ilit50C5,mulRes5106);
          real dof_load510A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5107);
          real dof_load510B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5108);
          real dof_load510C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5109);
          tensor[3] interCons510D#1 = <tensor[3]>[dof_load510A,dof_load510B,dof_load510C];
          int ilit510E#1 = 8;
          int idx510F#1 = Subscript<int>(femIndicies5079,ilit510E);
          int mulRes5110#3 = IMul(ilit50BF,idx510F);
          int addRes5111#1 = IAdd(ilit50BE,mulRes5110);
          int addRes5112#1 = IAdd(ilit50C3,mulRes5110);
          int addRes5113#1 = IAdd(ilit50C5,mulRes5110);
          real dof_load5114#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5111);
          real dof_load5115#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5112);
          real dof_load5116#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5113);
          tensor[3] interCons5117#1 = <tensor[3]>[dof_load5114,dof_load5115,dof_load5116];
          int ilit5118#1 = 9;
          int idx5119#1 = Subscript<int>(femIndicies5079,ilit5118);
          int mulRes511A#3 = IMul(ilit50BF,idx5119);
          int addRes511B#1 = IAdd(ilit50BE,mulRes511A);
          int addRes511C#1 = IAdd(ilit50C3,mulRes511A);
          int addRes511D#1 = IAdd(ilit50C5,mulRes511A);
          real dof_load511E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511B);
          real dof_load511F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511C);
          real dof_load5120#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511D);
          tensor[3] interCons5121#1 = <tensor[3]>[dof_load511E,dof_load511F,dof_load5120];
          tensor[10,3] dofs5122#1 = <tensor[10,3]>[interCons50CA,interCons50D3,interCons50DC,interCons50E5,interCons50EF,interCons50F9,interCons5103,interCons510D,interCons5117,interCons5121];
          tensor[10,3] femDofs50BD#30 = dofs5122;
          real varAcc518A#2 = VIndex<3,0>(refPos5077);
          real varAcc518B#2 = VIndex<3,1>(refPos5077);
          real varAcc518C#2 = VIndex<3,2>(refPos5077);
          real coeff518D#3 = 0.2e1;
          real iden518E#4 = varAcc518A;
          real prod2518F#1 = RMul(iden518E,varAcc518A);
          real one5190#13 = 0.1e1;
          real prod5191#3 = RMul(one5190,one5190);
          real prod5192#2 = RMul(prod2518F,prod5191);
          real coeff5193#6 = 0.4e1;
          real iden5194#3 = varAcc518B;
          real prod5195#2 = RMul(iden5194,one5190);
          real prod5196#2 = RMul(iden518E,prod5195);
          real iden5197#3 = varAcc518C;
          real prod5198#2 = RMul(one5190,iden5197);
          real prod5199#2 = RMul(iden518E,prod5198);
          real coeff519A#3 = -0.3e1;
          real prod519B#3 = RMul(iden518E,prod5191);
          real prod2519C#1 = RMul(iden5194,varAcc518B);
          real prod519D#1 = RMul(prod2519C,one5190);
          real prod519E#2 = RMul(one5190,prod519D);
          real prod519F#1 = RMul(iden5194,iden5197);
          real prod51A0#2 = RMul(one5190,prod519F);
          real prod51A1#3 = RMul(one5190,prod5195);
          real prod251A2#1 = RMul(iden5197,varAcc518C);
          real prod51A3#1 = RMul(one5190,prod251A2);
          real prod51A4#2 = RMul(one5190,prod51A3);
          real prod51A5#3 = RMul(one5190,prod5198);
          real prod51A6#1 = RMul(one5190,prod5191);
          real mult51A7#1 = RMul(one5190,prod51A6);
          real mult51A8#1 = RMul(coeff519A,prod51A5);
          real mult51A9#2 = RMul(coeff518D,prod51A4);
          real mult51AA#1 = RMul(coeff519A,prod51A1);
          real mult51AB#2 = RMul(coeff5193,prod51A0);
          real mult51AC#2 = RMul(coeff518D,prod519E);
          real mult51AD#1 = RMul(coeff519A,prod519B);
          real mult51AE#2 = RMul(coeff5193,prod5199);
          real mult51AF#2 = RMul(coeff5193,prod5196);
          real mult51B0#2 = RMul(coeff518D,prod5192);
          real sum51B1#1 = RAdd(mult51AF,mult51B0);
          real sum51B2#1 = RAdd(mult51AE,sum51B1);
          real sum51B3#1 = RAdd(mult51AD,sum51B2);
          real sum51B4#1 = RAdd(mult51AC,sum51B3);
          real sum51B5#1 = RAdd(mult51AB,sum51B4);
          real sum51B6#1 = RAdd(mult51AA,sum51B5);
          real sum51B7#1 = RAdd(mult51A9,sum51B6);
          real sum51B8#1 = RAdd(mult51A8,sum51B7);
          real sum51B9#1 = RAdd(mult51A7,sum51B8);
          real intermediate51BA#1 = sum51B9;
          real coeff51BB#3 = -0.1e1;
          real mult51BC#1 = RMul(coeff51BB,prod519B);
          real sum51BD#1 = RAdd(mult51BC,mult51B0);
          real intermediate51BE#1 = sum51BD;
          real mult51BF#1 = RMul(coeff51BB,prod51A1);
          real sum51C0#1 = RAdd(mult51BF,mult51AC);
          real intermediate51C1#1 = sum51C0;
          real mult51C2#1 = RMul(coeff51BB,prod51A5);
          real sum51C3#1 = RAdd(mult51C2,mult51A9);
          real intermediate51C4#1 = sum51C3;
          real coeff51C5#6 = -0.4e1;
          real mult51C6#1 = RMul(coeff5193,prod51A5);
          real mult51C7#1 = RMul(coeff51C5,prod51A4);
          real mult51C8#2 = RMul(coeff51C5,prod51A0);
          real mult51C9#2 = RMul(coeff51C5,prod5199);
          real sum51CA#1 = RAdd(mult51C8,mult51C9);
          real sum51CB#1 = RAdd(mult51C7,sum51CA);
          real sum51CC#1 = RAdd(mult51C6,sum51CB);
          real intermediate51CD#1 = sum51CC;
          real mult51CE#1 = RMul(coeff5193,prod51A1);
          real mult51CF#1 = RMul(coeff51C5,prod519E);
          real mult51D0#2 = RMul(coeff51C5,prod5196);
          real sum51D1#1 = RAdd(mult51CF,mult51D0);
          real sum51D2#1 = RAdd(mult51C8,sum51D1);
          real sum51D3#1 = RAdd(mult51CE,sum51D2);
          real intermediate51D4#1 = sum51D3;
          real mult51D5#1 = RMul(coeff5193,prod519B);
          real mult51D6#1 = RMul(coeff51C5,prod5192);
          real sum51D7#1 = RAdd(mult51D0,mult51D6);
          real sum51D8#1 = RAdd(mult51C9,sum51D7);
          real sum51D9#1 = RAdd(mult51D5,sum51D8);
          real intermediate51DA#1 = sum51D9;
          tensor[10] intermediateCons51DB#1 = <tensor[10]>[intermediate51BA,intermediate51BE,intermediate51C1,intermediate51C4,mult51AB,mult51AE,mult51AF,intermediate51CD,intermediate51D4,intermediate51DA];
          tensor[10] basisResult5189#10 = intermediateCons51DB;
          real r5230#1 = TensorIndex<tensor[10,3],[0,0]>(femDofs50BD);
          real r5231#3 = TensorIndex<tensor[10],[0]>(basisResult5189);
          real r5232#1 = RMul(r5230,r5231);
          real r5233#1 = TensorIndex<tensor[10,3],[1,0]>(femDofs50BD);
          real r5234#3 = TensorIndex<tensor[10],[1]>(basisResult5189);
          real r5235#1 = RMul(r5233,r5234);
          real r5236#1 = TensorIndex<tensor[10,3],[2,0]>(femDofs50BD);
          real r5237#3 = TensorIndex<tensor[10],[2]>(basisResult5189);
          real r5238#1 = RMul(r5236,r5237);
          real r5239#1 = TensorIndex<tensor[10,3],[3,0]>(femDofs50BD);
          real r523A#3 = TensorIndex<tensor[10],[3]>(basisResult5189);
          real r523B#1 = RMul(r5239,r523A);
          real r523C#1 = TensorIndex<tensor[10,3],[4,0]>(femDofs50BD);
          real r523D#3 = TensorIndex<tensor[10],[4]>(basisResult5189);
          real r523E#1 = RMul(r523C,r523D);
          real r523F#1 = TensorIndex<tensor[10,3],[5,0]>(femDofs50BD);
          real r5240#3 = TensorIndex<tensor[10],[5]>(basisResult5189);
          real r5241#1 = RMul(r523F,r5240);
          real r5242#1 = TensorIndex<tensor[10,3],[6,0]>(femDofs50BD);
          real r5243#3 = TensorIndex<tensor[10],[6]>(basisResult5189);
          real r5244#1 = RMul(r5242,r5243);
          real r5245#1 = TensorIndex<tensor[10,3],[7,0]>(femDofs50BD);
          real r5246#3 = TensorIndex<tensor[10],[7]>(basisResult5189);
          real r5247#1 = RMul(r5245,r5246);
          real r5248#1 = TensorIndex<tensor[10,3],[8,0]>(femDofs50BD);
          real r5249#3 = TensorIndex<tensor[10],[8]>(basisResult5189);
          real r524A#1 = RMul(r5248,r5249);
          real r524B#1 = TensorIndex<tensor[10,3],[9,0]>(femDofs50BD);
          real r524C#3 = TensorIndex<tensor[10],[9]>(basisResult5189);
          real r524D#1 = RMul(r524B,r524C);
          real r524E#1 = RAdd(r5232,r5235);
          real r524F#1 = RAdd(r524E,r5238);
          real r5250#1 = RAdd(r524F,r523B);
          real r5251#1 = RAdd(r5250,r523E);
          real r5252#1 = RAdd(r5251,r5241);
          real r5253#1 = RAdd(r5252,r5244);
          real r5254#1 = RAdd(r5253,r5247);
          real r5255#1 = RAdd(r5254,r524A);
          real r5256#1 = RAdd(r5255,r524D);
          real r5257#1 = TensorIndex<tensor[10,3],[0,1]>(femDofs50BD);
          real r5258#1 = RMul(r5257,r5231);
          real r5259#1 = TensorIndex<tensor[10,3],[1,1]>(femDofs50BD);
          real r525A#1 = RMul(r5259,r5234);
          real r525B#1 = TensorIndex<tensor[10,3],[2,1]>(femDofs50BD);
          real r525C#1 = RMul(r525B,r5237);
          real r525D#1 = TensorIndex<tensor[10,3],[3,1]>(femDofs50BD);
          real r525E#1 = RMul(r525D,r523A);
          real r525F#1 = TensorIndex<tensor[10,3],[4,1]>(femDofs50BD);
          real r5260#1 = RMul(r525F,r523D);
          real r5261#1 = TensorIndex<tensor[10,3],[5,1]>(femDofs50BD);
          real r5262#1 = RMul(r5261,r5240);
          real r5263#1 = TensorIndex<tensor[10,3],[6,1]>(femDofs50BD);
          real r5264#1 = RMul(r5263,r5243);
          real r5265#1 = TensorIndex<tensor[10,3],[7,1]>(femDofs50BD);
          real r5266#1 = RMul(r5265,r5246);
          real r5267#1 = TensorIndex<tensor[10,3],[8,1]>(femDofs50BD);
          real r5268#1 = RMul(r5267,r5249);
          real r5269#1 = TensorIndex<tensor[10,3],[9,1]>(femDofs50BD);
          real r526A#1 = RMul(r5269,r524C);
          real r526B#1 = RAdd(r5258,r525A);
          real r526C#1 = RAdd(r526B,r525C);
          real r526D#1 = RAdd(r526C,r525E);
          real r526E#1 = RAdd(r526D,r5260);
          real r526F#1 = RAdd(r526E,r5262);
          real r5270#1 = RAdd(r526F,r5264);
          real r5271#1 = RAdd(r5270,r5266);
          real r5272#1 = RAdd(r5271,r5268);
          real r5273#1 = RAdd(r5272,r526A);
          real r5274#1 = TensorIndex<tensor[10,3],[0,2]>(femDofs50BD);
          real r5275#1 = RMul(r5274,r5231);
          real r5276#1 = TensorIndex<tensor[10,3],[1,2]>(femDofs50BD);
          real r5277#1 = RMul(r5276,r5234);
          real r5278#1 = TensorIndex<tensor[10,3],[2,2]>(femDofs50BD);
          real r5279#1 = RMul(r5278,r5237);
          real r527A#1 = TensorIndex<tensor[10,3],[3,2]>(femDofs50BD);
          real r527B#1 = RMul(r527A,r523A);
          real r527C#1 = TensorIndex<tensor[10,3],[4,2]>(femDofs50BD);
          real r527D#1 = RMul(r527C,r523D);
          real r527E#1 = TensorIndex<tensor[10,3],[5,2]>(femDofs50BD);
          real r527F#1 = RMul(r527E,r5240);
          real r5280#1 = TensorIndex<tensor[10,3],[6,2]>(femDofs50BD);
          real r5281#1 = RMul(r5280,r5243);
          real r5282#1 = TensorIndex<tensor[10,3],[7,2]>(femDofs50BD);
          real r5283#1 = RMul(r5282,r5246);
          real r5284#1 = TensorIndex<tensor[10,3],[8,2]>(femDofs50BD);
          real r5285#1 = RMul(r5284,r5249);
          real r5286#1 = TensorIndex<tensor[10,3],[9,2]>(femDofs50BD);
          real r5287#1 = RMul(r5286,r524C);
          real r5288#1 = RAdd(r5275,r5277);
          real r5289#1 = RAdd(r5288,r5279);
          real r528A#1 = RAdd(r5289,r527B);
          real r528B#1 = RAdd(r528A,r527D);
          real r528C#1 = RAdd(r528B,r527F);
          real r528D#1 = RAdd(r528C,r5281);
          real r528E#1 = RAdd(r528D,r5283);
          real r528F#1 = RAdd(r528E,r5285);
          real r5290#1 = RAdd(r528F,r5287);
          tensor[3] compositionl522F#5 = <tensor[3]>[r5256,r5273,r5290];
          real op1_e3_l_2052F4#1 = VDot<3>(compositionl522F,compositionl522F);
          real r52F8#1 = TensorIndex<tensor[3],[0]>(compositionl522F);
          real r52F9#3 = RMul(_t3E01,stepSize3CCF);
          real r52FA#1 = RMul(r52F9,r52F8);
          real r52FB#1 = TensorIndex<tensor[3],[1]>(compositionl522F);
          real r52FC#1 = RMul(r52F9,r52FB);
          real r52FD#1 = TensorIndex<tensor[3],[2]>(compositionl522F);
          real r52FE#1 = RMul(r52F9,r52FD);
          tensor[3] op1_e3_l_2152F7#3 = <tensor[3]>[r52FA,r52FC,r52FE];
          real op1_e3_l_225308#1 = Sqrt(op1_e3_l_2052F4);
          real realLit530C#1 = 0.1e1;
          real r530D#3 = RDiv(realLit530C,op1_e3_l_225308);
          real r530E#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_2152F7);
          real r530F#1 = RMul(r530D,r530E);
          real r5310#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_2152F7);
          real r5311#1 = RMul(r530D,r5310);
          real r5312#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_2152F7);
          real r5313#1 = RMul(r530D,r5312);
          tensor[3] op1_e3_l_23530B#1 = <tensor[3]>[r530F,r5311,r5313];
          tensor[3] altIntermed531E#2 = VAdd<3>(altCPos3CDB,op1_e3_l_23530B);
          bool _t5321#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed40B8);
          bool _t5323#1 = BNot(_t5321);
          if _t5323 then goto ASSIGN5327 else goto ASSIGN59A1
        ASSIGN5327:  preds = [COND5325]
          bool _t5326#1 = true;
          goto JOIN532A
        JOIN532A:  preds = [ASSIGN5327,ASSIGN59A4]
          bool _t5328#1 = phi(_t5326,_t5329)
          if _t5328 then goto STABILIZE532C else goto JOIN532D
        STABILIZE532C:  preds = [COND532B]
          stabilize
          goto JOIN532D
        JOIN532D:  preds = [*STABILIZE532C,COND532B]
          if _t5321 then goto ASSIGN5330 else goto ASSIGN599E
        ASSIGN5330:  preds = [COND532E]
          femData:Mesh _t532F#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed40B8);
          int _t5331#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed40B8);
          femData:MeshCell c5333#1 = LoadFem<femData:MeshCell>(_t532F,_t5331);
          tensor[3] ref5335#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed40B8);
          int _t5337#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c5333);
          femData:FuncCell _t5339#2 = LoadFem<femData:FuncCell>(data3CCB,_t5337);
          femData:FemFunc _t533B#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t5339);
          femData:Space _t533D#10 = ExtractFem<femData:Space,femData:FemFunc>(_t533B);
          int _t533F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t5339);
          int ilit5342#1 = 10;
          int mulRes5343#10 = IMul(_t533F,ilit5342);
          int ilit5344#1 = 0;
          int addRes5345#1 = IAdd(mulRes5343,ilit5344);
          int idx5346#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5345);
          int ilit5347#1 = 1;
          int addRes5348#1 = IAdd(mulRes5343,ilit5347);
          int idx5349#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5348);
          int ilit534A#1 = 2;
          int addRes534B#1 = IAdd(mulRes5343,ilit534A);
          int idx534C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes534B);
          int ilit534D#1 = 3;
          int addRes534E#1 = IAdd(mulRes5343,ilit534D);
          int idx534F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes534E);
          int ilit5350#1 = 4;
          int addRes5351#1 = IAdd(mulRes5343,ilit5350);
          int idx5352#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5351);
          int ilit5353#1 = 5;
          int addRes5354#1 = IAdd(mulRes5343,ilit5353);
          int idx5355#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5354);
          int ilit5356#1 = 6;
          int addRes5357#1 = IAdd(mulRes5343,ilit5356);
          int idx5358#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5357);
          int ilit5359#1 = 7;
          int addRes535A#1 = IAdd(mulRes5343,ilit5359);
          int idx535B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes535A);
          int ilit535C#1 = 8;
          int addRes535D#1 = IAdd(mulRes5343,ilit535C);
          int idx535E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes535D);
          int ilit535F#1 = 9;
          int addRes5360#1 = IAdd(mulRes5343,ilit535F);
          int idx5361#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5360);
          int[10] seq5362#1 = <int[10]>{idx5346,idx5349,idx534C,idx534F,idx5352,idx5355,idx5358,idx535B,idx535E,idx5361};
          int[10] femIndicies5341#10 = seq5362;
          int ilit5386#11 = 0;
          int ilit5387#11 = 3;
          int idx5388#1 = Subscript<int>(femIndicies5341,ilit5386);
          int mulRes5389#3 = IMul(ilit5387,idx5388);
          int addRes538A#1 = IAdd(ilit5386,mulRes5389);
          int ilit538B#11 = 1;
          int addRes538C#1 = IAdd(ilit538B,mulRes5389);
          int ilit538D#11 = 2;
          int addRes538E#1 = IAdd(ilit538D,mulRes5389);
          real dof_load538F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538A);
          real dof_load5390#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538C);
          real dof_load5391#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538E);
          tensor[3] interCons5392#1 = <tensor[3]>[dof_load538F,dof_load5390,dof_load5391];
          int idx5393#1 = Subscript<int>(femIndicies5341,ilit538B);
          int mulRes5394#3 = IMul(ilit5387,idx5393);
          int addRes5395#1 = IAdd(ilit5386,mulRes5394);
          int addRes5396#1 = IAdd(ilit538B,mulRes5394);
          int addRes5397#1 = IAdd(ilit538D,mulRes5394);
          real dof_load5398#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5395);
          real dof_load5399#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5396);
          real dof_load539A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5397);
          tensor[3] interCons539B#1 = <tensor[3]>[dof_load5398,dof_load5399,dof_load539A];
          int idx539C#1 = Subscript<int>(femIndicies5341,ilit538D);
          int mulRes539D#3 = IMul(ilit5387,idx539C);
          int addRes539E#1 = IAdd(ilit5386,mulRes539D);
          int addRes539F#1 = IAdd(ilit538B,mulRes539D);
          int addRes53A0#1 = IAdd(ilit538D,mulRes539D);
          real dof_load53A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes539E);
          real dof_load53A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes539F);
          real dof_load53A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A0);
          tensor[3] interCons53A4#1 = <tensor[3]>[dof_load53A1,dof_load53A2,dof_load53A3];
          int idx53A5#1 = Subscript<int>(femIndicies5341,ilit5387);
          int mulRes53A6#3 = IMul(ilit5387,idx53A5);
          int addRes53A7#1 = IAdd(ilit5386,mulRes53A6);
          int addRes53A8#1 = IAdd(ilit538B,mulRes53A6);
          int addRes53A9#1 = IAdd(ilit538D,mulRes53A6);
          real dof_load53AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A7);
          real dof_load53AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A8);
          real dof_load53AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A9);
          tensor[3] interCons53AD#1 = <tensor[3]>[dof_load53AA,dof_load53AB,dof_load53AC];
          int ilit53AE#1 = 4;
          int idx53AF#1 = Subscript<int>(femIndicies5341,ilit53AE);
          int mulRes53B0#3 = IMul(ilit5387,idx53AF);
          int addRes53B1#1 = IAdd(ilit5386,mulRes53B0);
          int addRes53B2#1 = IAdd(ilit538B,mulRes53B0);
          int addRes53B3#1 = IAdd(ilit538D,mulRes53B0);
          real dof_load53B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B1);
          real dof_load53B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B2);
          real dof_load53B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B3);
          tensor[3] interCons53B7#1 = <tensor[3]>[dof_load53B4,dof_load53B5,dof_load53B6];
          int ilit53B8#1 = 5;
          int idx53B9#1 = Subscript<int>(femIndicies5341,ilit53B8);
          int mulRes53BA#3 = IMul(ilit5387,idx53B9);
          int addRes53BB#1 = IAdd(ilit5386,mulRes53BA);
          int addRes53BC#1 = IAdd(ilit538B,mulRes53BA);
          int addRes53BD#1 = IAdd(ilit538D,mulRes53BA);
          real dof_load53BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BB);
          real dof_load53BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BC);
          real dof_load53C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BD);
          tensor[3] interCons53C1#1 = <tensor[3]>[dof_load53BE,dof_load53BF,dof_load53C0];
          int ilit53C2#1 = 6;
          int idx53C3#1 = Subscript<int>(femIndicies5341,ilit53C2);
          int mulRes53C4#3 = IMul(ilit5387,idx53C3);
          int addRes53C5#1 = IAdd(ilit5386,mulRes53C4);
          int addRes53C6#1 = IAdd(ilit538B,mulRes53C4);
          int addRes53C7#1 = IAdd(ilit538D,mulRes53C4);
          real dof_load53C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C5);
          real dof_load53C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C6);
          real dof_load53CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C7);
          tensor[3] interCons53CB#1 = <tensor[3]>[dof_load53C8,dof_load53C9,dof_load53CA];
          int ilit53CC#1 = 7;
          int idx53CD#1 = Subscript<int>(femIndicies5341,ilit53CC);
          int mulRes53CE#3 = IMul(ilit5387,idx53CD);
          int addRes53CF#1 = IAdd(ilit5386,mulRes53CE);
          int addRes53D0#1 = IAdd(ilit538B,mulRes53CE);
          int addRes53D1#1 = IAdd(ilit538D,mulRes53CE);
          real dof_load53D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53CF);
          real dof_load53D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D0);
          real dof_load53D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D1);
          tensor[3] interCons53D5#1 = <tensor[3]>[dof_load53D2,dof_load53D3,dof_load53D4];
          int ilit53D6#1 = 8;
          int idx53D7#1 = Subscript<int>(femIndicies5341,ilit53D6);
          int mulRes53D8#3 = IMul(ilit5387,idx53D7);
          int addRes53D9#1 = IAdd(ilit5386,mulRes53D8);
          int addRes53DA#1 = IAdd(ilit538B,mulRes53D8);
          int addRes53DB#1 = IAdd(ilit538D,mulRes53D8);
          real dof_load53DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D9);
          real dof_load53DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53DA);
          real dof_load53DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53DB);
          tensor[3] interCons53DF#1 = <tensor[3]>[dof_load53DC,dof_load53DD,dof_load53DE];
          int ilit53E0#1 = 9;
          int idx53E1#1 = Subscript<int>(femIndicies5341,ilit53E0);
          int mulRes53E2#3 = IMul(ilit5387,idx53E1);
          int addRes53E3#1 = IAdd(ilit5386,mulRes53E2);
          int addRes53E4#1 = IAdd(ilit538B,mulRes53E2);
          int addRes53E5#1 = IAdd(ilit538D,mulRes53E2);
          real dof_load53E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E3);
          real dof_load53E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E4);
          real dof_load53E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E5);
          tensor[3] interCons53E9#1 = <tensor[3]>[dof_load53E6,dof_load53E7,dof_load53E8];
          tensor[10,3] dofs53EA#1 = <tensor[10,3]>[interCons5392,interCons539B,interCons53A4,interCons53AD,interCons53B7,interCons53C1,interCons53CB,interCons53D5,interCons53DF,interCons53E9];
          tensor[10,3] femDofs5385#30 = dofs53EA;
          real varAcc5452#2 = VIndex<3,0>(ref5335);
          real varAcc5453#2 = VIndex<3,1>(ref5335);
          real varAcc5454#2 = VIndex<3,2>(ref5335);
          real coeff5455#3 = 0.2e1;
          real iden5456#4 = varAcc5452;
          real prod25457#1 = RMul(iden5456,varAcc5452);
          real one5458#13 = 0.1e1;
          real prod5459#3 = RMul(one5458,one5458);
          real prod545A#2 = RMul(prod25457,prod5459);
          real coeff545B#6 = 0.4e1;
          real iden545C#3 = varAcc5453;
          real prod545D#2 = RMul(iden545C,one5458);
          real prod545E#2 = RMul(iden5456,prod545D);
          real iden545F#3 = varAcc5454;
          real prod5460#2 = RMul(one5458,iden545F);
          real prod5461#2 = RMul(iden5456,prod5460);
          real coeff5462#3 = -0.3e1;
          real prod5463#3 = RMul(iden5456,prod5459);
          real prod25464#1 = RMul(iden545C,varAcc5453);
          real prod5465#1 = RMul(prod25464,one5458);
          real prod5466#2 = RMul(one5458,prod5465);
          real prod5467#1 = RMul(iden545C,iden545F);
          real prod5468#2 = RMul(one5458,prod5467);
          real prod5469#3 = RMul(one5458,prod545D);
          real prod2546A#1 = RMul(iden545F,varAcc5454);
          real prod546B#1 = RMul(one5458,prod2546A);
          real prod546C#2 = RMul(one5458,prod546B);
          real prod546D#3 = RMul(one5458,prod5460);
          real prod546E#1 = RMul(one5458,prod5459);
          real mult546F#1 = RMul(one5458,prod546E);
          real mult5470#1 = RMul(coeff5462,prod546D);
          real mult5471#2 = RMul(coeff5455,prod546C);
          real mult5472#1 = RMul(coeff5462,prod5469);
          real mult5473#2 = RMul(coeff545B,prod5468);
          real mult5474#2 = RMul(coeff5455,prod5466);
          real mult5475#1 = RMul(coeff5462,prod5463);
          real mult5476#2 = RMul(coeff545B,prod5461);
          real mult5477#2 = RMul(coeff545B,prod545E);
          real mult5478#2 = RMul(coeff5455,prod545A);
          real sum5479#1 = RAdd(mult5477,mult5478);
          real sum547A#1 = RAdd(mult5476,sum5479);
          real sum547B#1 = RAdd(mult5475,sum547A);
          real sum547C#1 = RAdd(mult5474,sum547B);
          real sum547D#1 = RAdd(mult5473,sum547C);
          real sum547E#1 = RAdd(mult5472,sum547D);
          real sum547F#1 = RAdd(mult5471,sum547E);
          real sum5480#1 = RAdd(mult5470,sum547F);
          real sum5481#1 = RAdd(mult546F,sum5480);
          real intermediate5482#1 = sum5481;
          real coeff5483#3 = -0.1e1;
          real mult5484#1 = RMul(coeff5483,prod5463);
          real sum5485#1 = RAdd(mult5484,mult5478);
          real intermediate5486#1 = sum5485;
          real mult5487#1 = RMul(coeff5483,prod5469);
          real sum5488#1 = RAdd(mult5487,mult5474);
          real intermediate5489#1 = sum5488;
          real mult548A#1 = RMul(coeff5483,prod546D);
          real sum548B#1 = RAdd(mult548A,mult5471);
          real intermediate548C#1 = sum548B;
          real coeff548D#6 = -0.4e1;
          real mult548E#1 = RMul(coeff545B,prod546D);
          real mult548F#1 = RMul(coeff548D,prod546C);
          real mult5490#2 = RMul(coeff548D,prod5468);
          real mult5491#2 = RMul(coeff548D,prod5461);
          real sum5492#1 = RAdd(mult5490,mult5491);
          real sum5493#1 = RAdd(mult548F,sum5492);
          real sum5494#1 = RAdd(mult548E,sum5493);
          real intermediate5495#1 = sum5494;
          real mult5496#1 = RMul(coeff545B,prod5469);
          real mult5497#1 = RMul(coeff548D,prod5466);
          real mult5498#2 = RMul(coeff548D,prod545E);
          real sum5499#1 = RAdd(mult5497,mult5498);
          real sum549A#1 = RAdd(mult5490,sum5499);
          real sum549B#1 = RAdd(mult5496,sum549A);
          real intermediate549C#1 = sum549B;
          real mult549D#1 = RMul(coeff545B,prod5463);
          real mult549E#1 = RMul(coeff548D,prod545A);
          real sum549F#1 = RAdd(mult5498,mult549E);
          real sum54A0#1 = RAdd(mult5491,sum549F);
          real sum54A1#1 = RAdd(mult549D,sum54A0);
          real intermediate54A2#1 = sum54A1;
          tensor[10] intermediateCons54A3#1 = <tensor[10]>[intermediate5482,intermediate5486,intermediate5489,intermediate548C,mult5473,mult5476,mult5477,intermediate5495,intermediate549C,intermediate54A2];
          tensor[10] basisResult5451#10 = intermediateCons54A3;
          real r54F8#1 = TensorIndex<tensor[10,3],[0,0]>(femDofs5385);
          real r54F9#3 = TensorIndex<tensor[10],[0]>(basisResult5451);
          real r54FA#1 = RMul(r54F8,r54F9);
          real r54FB#1 = TensorIndex<tensor[10,3],[1,0]>(femDofs5385);
          real r54FC#3 = TensorIndex<tensor[10],[1]>(basisResult5451);
          real r54FD#1 = RMul(r54FB,r54FC);
          real r54FE#1 = TensorIndex<tensor[10,3],[2,0]>(femDofs5385);
          real r54FF#3 = TensorIndex<tensor[10],[2]>(basisResult5451);
          real r5500#1 = RMul(r54FE,r54FF);
          real r5501#1 = TensorIndex<tensor[10,3],[3,0]>(femDofs5385);
          real r5502#3 = TensorIndex<tensor[10],[3]>(basisResult5451);
          real r5503#1 = RMul(r5501,r5502);
          real r5504#1 = TensorIndex<tensor[10,3],[4,0]>(femDofs5385);
          real r5505#3 = TensorIndex<tensor[10],[4]>(basisResult5451);
          real r5506#1 = RMul(r5504,r5505);
          real r5507#1 = TensorIndex<tensor[10,3],[5,0]>(femDofs5385);
          real r5508#3 = TensorIndex<tensor[10],[5]>(basisResult5451);
          real r5509#1 = RMul(r5507,r5508);
          real r550A#1 = TensorIndex<tensor[10,3],[6,0]>(femDofs5385);
          real r550B#3 = TensorIndex<tensor[10],[6]>(basisResult5451);
          real r550C#1 = RMul(r550A,r550B);
          real r550D#1 = TensorIndex<tensor[10,3],[7,0]>(femDofs5385);
          real r550E#3 = TensorIndex<tensor[10],[7]>(basisResult5451);
          real r550F#1 = RMul(r550D,r550E);
          real r5510#1 = TensorIndex<tensor[10,3],[8,0]>(femDofs5385);
          real r5511#3 = TensorIndex<tensor[10],[8]>(basisResult5451);
          real r5512#1 = RMul(r5510,r5511);
          real r5513#1 = TensorIndex<tensor[10,3],[9,0]>(femDofs5385);
          real r5514#3 = TensorIndex<tensor[10],[9]>(basisResult5451);
          real r5515#1 = RMul(r5513,r5514);
          real r5516#1 = RAdd(r54FA,r54FD);
          real r5517#1 = RAdd(r5516,r5500);
          real r5518#1 = RAdd(r5517,r5503);
          real r5519#1 = RAdd(r5518,r5506);
          real r551A#1 = RAdd(r5519,r5509);
          real r551B#1 = RAdd(r551A,r550C);
          real r551C#1 = RAdd(r551B,r550F);
          real r551D#1 = RAdd(r551C,r5512);
          real r551E#1 = RAdd(r551D,r5515);
          real r551F#1 = TensorIndex<tensor[10,3],[0,1]>(femDofs5385);
          real r5520#1 = RMul(r551F,r54F9);
          real r5521#1 = TensorIndex<tensor[10,3],[1,1]>(femDofs5385);
          real r5522#1 = RMul(r5521,r54FC);
          real r5523#1 = TensorIndex<tensor[10,3],[2,1]>(femDofs5385);
          real r5524#1 = RMul(r5523,r54FF);
          real r5525#1 = TensorIndex<tensor[10,3],[3,1]>(femDofs5385);
          real r5526#1 = RMul(r5525,r5502);
          real r5527#1 = TensorIndex<tensor[10,3],[4,1]>(femDofs5385);
          real r5528#1 = RMul(r5527,r5505);
          real r5529#1 = TensorIndex<tensor[10,3],[5,1]>(femDofs5385);
          real r552A#1 = RMul(r5529,r5508);
          real r552B#1 = TensorIndex<tensor[10,3],[6,1]>(femDofs5385);
          real r552C#1 = RMul(r552B,r550B);
          real r552D#1 = TensorIndex<tensor[10,3],[7,1]>(femDofs5385);
          real r552E#1 = RMul(r552D,r550E);
          real r552F#1 = TensorIndex<tensor[10,3],[8,1]>(femDofs5385);
          real r5530#1 = RMul(r552F,r5511);
          real r5531#1 = TensorIndex<tensor[10,3],[9,1]>(femDofs5385);
          real r5532#1 = RMul(r5531,r5514);
          real r5533#1 = RAdd(r5520,r5522);
          real r5534#1 = RAdd(r5533,r5524);
          real r5535#1 = RAdd(r5534,r5526);
          real r5536#1 = RAdd(r5535,r5528);
          real r5537#1 = RAdd(r5536,r552A);
          real r5538#1 = RAdd(r5537,r552C);
          real r5539#1 = RAdd(r5538,r552E);
          real r553A#1 = RAdd(r5539,r5530);
          real r553B#1 = RAdd(r553A,r5532);
          real r553C#1 = TensorIndex<tensor[10,3],[0,2]>(femDofs5385);
          real r553D#1 = RMul(r553C,r54F9);
          real r553E#1 = TensorIndex<tensor[10,3],[1,2]>(femDofs5385);
          real r553F#1 = RMul(r553E,r54FC);
          real r5540#1 = TensorIndex<tensor[10,3],[2,2]>(femDofs5385);
          real r5541#1 = RMul(r5540,r54FF);
          real r5542#1 = TensorIndex<tensor[10,3],[3,2]>(femDofs5385);
          real r5543#1 = RMul(r5542,r5502);
          real r5544#1 = TensorIndex<tensor[10,3],[4,2]>(femDofs5385);
          real r5545#1 = RMul(r5544,r5505);
          real r5546#1 = TensorIndex<tensor[10,3],[5,2]>(femDofs5385);
          real r5547#1 = RMul(r5546,r5508);
          real r5548#1 = TensorIndex<tensor[10,3],[6,2]>(femDofs5385);
          real r5549#1 = RMul(r5548,r550B);
          real r554A#1 = TensorIndex<tensor[10,3],[7,2]>(femDofs5385);
          real r554B#1 = RMul(r554A,r550E);
          real r554C#1 = TensorIndex<tensor[10,3],[8,2]>(femDofs5385);
          real r554D#1 = RMul(r554C,r5511);
          real r554E#1 = TensorIndex<tensor[10,3],[9,2]>(femDofs5385);
          real r554F#1 = RMul(r554E,r5514);
          real r5550#1 = RAdd(r553D,r553F);
          real r5551#1 = RAdd(r5550,r5541);
          real r5552#1 = RAdd(r5551,r5543);
          real r5553#1 = RAdd(r5552,r5545);
          real r5554#1 = RAdd(r5553,r5547);
          real r5555#1 = RAdd(r5554,r5549);
          real r5556#1 = RAdd(r5555,r554B);
          real r5557#1 = RAdd(r5556,r554D);
          real r5558#1 = RAdd(r5557,r554F);
          tensor[3] probe_l_854F7#5 = <tensor[3]>[r551E,r553B,r5558];
          real op1_e3_l_1155BC#1 = VDot<3>(probe_l_854F7,probe_l_854F7);
          real op1_e3_l_1255BF#1 = Sqrt(op1_e3_l_1155BC);
          real realLit55C3#1 = 0.1e1;
          real r55C4#3 = RDiv(realLit55C3,op1_e3_l_1255BF);
          real r55C5#1 = TensorIndex<tensor[3],[0]>(probe_l_854F7);
          real r55C6#1 = RMul(r55C4,r55C5);
          real r55C7#1 = TensorIndex<tensor[3],[1]>(probe_l_854F7);
          real r55C8#1 = RMul(r55C4,r55C7);
          real r55C9#1 = TensorIndex<tensor[3],[2]>(probe_l_854F7);
          real r55CA#1 = RMul(r55C4,r55C9);
          tensor[3] _t55C2#1 = <tensor[3]>[r55C6,r55C8,r55CA];
          goto JOIN55D7
        JOIN55D7:  preds = [ASSIGN55D4,ASSIGN599F]
          tensor[3] _t55D5#1 = phi(_t55C2,_t55D6)
          tensor[3] up255D8#1 = VScale<3>(stepSize3CCF,_t55D5);
          femData:MeshPos cPos55DB#6 = posMove40B9 (cPos3CD9,up255D8);
          femData:MeshPos callFindPos55DD#2 = findPos3574 (_t3CC7,altIntermed531E);
          int intPos55DF#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos55DD);
          tensor[3] refPos55E1#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos55DD);
          int ilit55E4#1 = 10;
          int mulRes55E5#10 = IMul(intPos55DF,ilit55E4);
          int ilit55E6#1 = 0;
          int addRes55E7#1 = IAdd(mulRes55E5,ilit55E6);
          int idx55E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55E7);
          int ilit55E9#1 = 1;
          int addRes55EA#1 = IAdd(mulRes55E5,ilit55E9);
          int idx55EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55EA);
          int ilit55EC#1 = 2;
          int addRes55ED#1 = IAdd(mulRes55E5,ilit55EC);
          int idx55EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55ED);
          int ilit55EF#1 = 3;
          int addRes55F0#1 = IAdd(mulRes55E5,ilit55EF);
          int idx55F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F0);
          int ilit55F2#1 = 4;
          int addRes55F3#1 = IAdd(mulRes55E5,ilit55F2);
          int idx55F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F3);
          int ilit55F5#1 = 5;
          int addRes55F6#1 = IAdd(mulRes55E5,ilit55F5);
          int idx55F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F6);
          int ilit55F8#1 = 6;
          int addRes55F9#1 = IAdd(mulRes55E5,ilit55F8);
          int idx55FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F9);
          int ilit55FB#1 = 7;
          int addRes55FC#1 = IAdd(mulRes55E5,ilit55FB);
          int idx55FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55FC);
          int ilit55FE#1 = 8;
          int addRes55FF#1 = IAdd(mulRes55E5,ilit55FE);
          int idx5600#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55FF);
          int ilit5601#1 = 9;
          int addRes5602#1 = IAdd(mulRes55E5,ilit5601);
          int idx5603#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5602);
          int[10] seq5604#1 = <int[10]>{idx55E8,idx55EB,idx55EE,idx55F1,idx55F4,idx55F7,idx55FA,idx55FD,idx5600,idx5603};
          int[10] femIndicies55E3#10 = seq5604;
          int ilit5628#11 = 0;
          int ilit5629#11 = 3;
          int idx562A#1 = Subscript<int>(femIndicies55E3,ilit5628);
          int mulRes562B#3 = IMul(ilit5629,idx562A);
          int addRes562C#1 = IAdd(ilit5628,mulRes562B);
          int ilit562D#11 = 1;
          int addRes562E#1 = IAdd(ilit562D,mulRes562B);
          int ilit562F#11 = 2;
          int addRes5630#1 = IAdd(ilit562F,mulRes562B);
          real dof_load5631#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes562C);
          real dof_load5632#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes562E);
          real dof_load5633#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5630);
          tensor[3] interCons5634#1 = <tensor[3]>[dof_load5631,dof_load5632,dof_load5633];
          int idx5635#1 = Subscript<int>(femIndicies55E3,ilit562D);
          int mulRes5636#3 = IMul(ilit5629,idx5635);
          int addRes5637#1 = IAdd(ilit5628,mulRes5636);
          int addRes5638#1 = IAdd(ilit562D,mulRes5636);
          int addRes5639#1 = IAdd(ilit562F,mulRes5636);
          real dof_load563A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5637);
          real dof_load563B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5638);
          real dof_load563C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5639);
          tensor[3] interCons563D#1 = <tensor[3]>[dof_load563A,dof_load563B,dof_load563C];
          int idx563E#1 = Subscript<int>(femIndicies55E3,ilit562F);
          int mulRes563F#3 = IMul(ilit5629,idx563E);
          int addRes5640#1 = IAdd(ilit5628,mulRes563F);
          int addRes5641#1 = IAdd(ilit562D,mulRes563F);
          int addRes5642#1 = IAdd(ilit562F,mulRes563F);
          real dof_load5643#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5640);
          real dof_load5644#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5641);
          real dof_load5645#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5642);
          tensor[3] interCons5646#1 = <tensor[3]>[dof_load5643,dof_load5644,dof_load5645];
          int idx5647#1 = Subscript<int>(femIndicies55E3,ilit5629);
          int mulRes5648#3 = IMul(ilit5629,idx5647);
          int addRes5649#1 = IAdd(ilit5628,mulRes5648);
          int addRes564A#1 = IAdd(ilit562D,mulRes5648);
          int addRes564B#1 = IAdd(ilit562F,mulRes5648);
          real dof_load564C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5649);
          real dof_load564D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes564A);
          real dof_load564E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes564B);
          tensor[3] interCons564F#1 = <tensor[3]>[dof_load564C,dof_load564D,dof_load564E];
          int ilit5650#1 = 4;
          int idx5651#1 = Subscript<int>(femIndicies55E3,ilit5650);
          int mulRes5652#3 = IMul(ilit5629,idx5651);
          int addRes5653#1 = IAdd(ilit5628,mulRes5652);
          int addRes5654#1 = IAdd(ilit562D,mulRes5652);
          int addRes5655#1 = IAdd(ilit562F,mulRes5652);
          real dof_load5656#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5653);
          real dof_load5657#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5654);
          real dof_load5658#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5655);
          tensor[3] interCons5659#1 = <tensor[3]>[dof_load5656,dof_load5657,dof_load5658];
          int ilit565A#1 = 5;
          int idx565B#1 = Subscript<int>(femIndicies55E3,ilit565A);
          int mulRes565C#3 = IMul(ilit5629,idx565B);
          int addRes565D#1 = IAdd(ilit5628,mulRes565C);
          int addRes565E#1 = IAdd(ilit562D,mulRes565C);
          int addRes565F#1 = IAdd(ilit562F,mulRes565C);
          real dof_load5660#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565D);
          real dof_load5661#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565E);
          real dof_load5662#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565F);
          tensor[3] interCons5663#1 = <tensor[3]>[dof_load5660,dof_load5661,dof_load5662];
          int ilit5664#1 = 6;
          int idx5665#1 = Subscript<int>(femIndicies55E3,ilit5664);
          int mulRes5666#3 = IMul(ilit5629,idx5665);
          int addRes5667#1 = IAdd(ilit5628,mulRes5666);
          int addRes5668#1 = IAdd(ilit562D,mulRes5666);
          int addRes5669#1 = IAdd(ilit562F,mulRes5666);
          real dof_load566A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5667);
          real dof_load566B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5668);
          real dof_load566C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5669);
          tensor[3] interCons566D#1 = <tensor[3]>[dof_load566A,dof_load566B,dof_load566C];
          int ilit566E#1 = 7;
          int idx566F#1 = Subscript<int>(femIndicies55E3,ilit566E);
          int mulRes5670#3 = IMul(ilit5629,idx566F);
          int addRes5671#1 = IAdd(ilit5628,mulRes5670);
          int addRes5672#1 = IAdd(ilit562D,mulRes5670);
          int addRes5673#1 = IAdd(ilit562F,mulRes5670);
          real dof_load5674#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5671);
          real dof_load5675#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5672);
          real dof_load5676#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5673);
          tensor[3] interCons5677#1 = <tensor[3]>[dof_load5674,dof_load5675,dof_load5676];
          int ilit5678#1 = 8;
          int idx5679#1 = Subscript<int>(femIndicies55E3,ilit5678);
          int mulRes567A#3 = IMul(ilit5629,idx5679);
          int addRes567B#1 = IAdd(ilit5628,mulRes567A);
          int addRes567C#1 = IAdd(ilit562D,mulRes567A);
          int addRes567D#1 = IAdd(ilit562F,mulRes567A);
          real dof_load567E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567B);
          real dof_load567F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567C);
          real dof_load5680#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567D);
          tensor[3] interCons5681#1 = <tensor[3]>[dof_load567E,dof_load567F,dof_load5680];
          int ilit5682#1 = 9;
          int idx5683#1 = Subscript<int>(femIndicies55E3,ilit5682);
          int mulRes5684#3 = IMul(ilit5629,idx5683);
          int addRes5685#1 = IAdd(ilit5628,mulRes5684);
          int addRes5686#1 = IAdd(ilit562D,mulRes5684);
          int addRes5687#1 = IAdd(ilit562F,mulRes5684);
          real dof_load5688#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5685);
          real dof_load5689#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5686);
          real dof_load568A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5687);
          tensor[3] interCons568B#1 = <tensor[3]>[dof_load5688,dof_load5689,dof_load568A];
          tensor[10,3] dofs568C#1 = <tensor[10,3]>[interCons5634,interCons563D,interCons5646,interCons564F,interCons5659,interCons5663,interCons566D,interCons5677,interCons5681,interCons568B];
          tensor[10,3] femDofs5627#30 = dofs568C;
          real varAcc56F4#2 = VIndex<3,0>(refPos55E1);
          real varAcc56F5#2 = VIndex<3,1>(refPos55E1);
          real varAcc56F6#2 = VIndex<3,2>(refPos55E1);
          real coeff56F7#3 = 0.2e1;
          real iden56F8#4 = varAcc56F4;
          real prod256F9#1 = RMul(iden56F8,varAcc56F4);
          real one56FA#13 = 0.1e1;
          real prod56FB#3 = RMul(one56FA,one56FA);
          real prod56FC#2 = RMul(prod256F9,prod56FB);
          real coeff56FD#6 = 0.4e1;
          real iden56FE#3 = varAcc56F5;
          real prod56FF#2 = RMul(iden56FE,one56FA);
          real prod5700#2 = RMul(iden56F8,prod56FF);
          real iden5701#3 = varAcc56F6;
          real prod5702#2 = RMul(one56FA,iden5701);
          real prod5703#2 = RMul(iden56F8,prod5702);
          real coeff5704#3 = -0.3e1;
          real prod5705#3 = RMul(iden56F8,prod56FB);
          real prod25706#1 = RMul(iden56FE,varAcc56F5);
          real prod5707#1 = RMul(prod25706,one56FA);
          real prod5708#2 = RMul(one56FA,prod5707);
          real prod5709#1 = RMul(iden56FE,iden5701);
          real prod570A#2 = RMul(one56FA,prod5709);
          real prod570B#3 = RMul(one56FA,prod56FF);
          real prod2570C#1 = RMul(iden5701,varAcc56F6);
          real prod570D#1 = RMul(one56FA,prod2570C);
          real prod570E#2 = RMul(one56FA,prod570D);
          real prod570F#3 = RMul(one56FA,prod5702);
          real prod5710#1 = RMul(one56FA,prod56FB);
          real mult5711#1 = RMul(one56FA,prod5710);
          real mult5712#1 = RMul(coeff5704,prod570F);
          real mult5713#2 = RMul(coeff56F7,prod570E);
          real mult5714#1 = RMul(coeff5704,prod570B);
          real mult5715#2 = RMul(coeff56FD,prod570A);
          real mult5716#2 = RMul(coeff56F7,prod5708);
          real mult5717#1 = RMul(coeff5704,prod5705);
          real mult5718#2 = RMul(coeff56FD,prod5703);
          real mult5719#2 = RMul(coeff56FD,prod5700);
          real mult571A#2 = RMul(coeff56F7,prod56FC);
          real sum571B#1 = RAdd(mult5719,mult571A);
          real sum571C#1 = RAdd(mult5718,sum571B);
          real sum571D#1 = RAdd(mult5717,sum571C);
          real sum571E#1 = RAdd(mult5716,sum571D);
          real sum571F#1 = RAdd(mult5715,sum571E);
          real sum5720#1 = RAdd(mult5714,sum571F);
          real sum5721#1 = RAdd(mult5713,sum5720);
          real sum5722#1 = RAdd(mult5712,sum5721);
          real sum5723#1 = RAdd(mult5711,sum5722);
          real intermediate5724#1 = sum5723;
          real coeff5725#3 = -0.1e1;
          real mult5726#1 = RMul(coeff5725,prod5705);
          real sum5727#1 = RAdd(mult5726,mult571A);
          real intermediate5728#1 = sum5727;
          real mult5729#1 = RMul(coeff5725,prod570B);
          real sum572A#1 = RAdd(mult5729,mult5716);
          real intermediate572B#1 = sum572A;
          real mult572C#1 = RMul(coeff5725,prod570F);
          real sum572D#1 = RAdd(mult572C,mult5713);
          real intermediate572E#1 = sum572D;
          real coeff572F#6 = -0.4e1;
          real mult5730#1 = RMul(coeff56FD,prod570F);
          real mult5731#1 = RMul(coeff572F,prod570E);
          real mult5732#2 = RMul(coeff572F,prod570A);
          real mult5733#2 = RMul(coeff572F,prod5703);
          real sum5734#1 = RAdd(mult5732,mult5733);
          real sum5735#1 = RAdd(mult5731,sum5734);
          real sum5736#1 = RAdd(mult5730,sum5735);
          real intermediate5737#1 = sum5736;
          real mult5738#1 = RMul(coeff56FD,prod570B);
          real mult5739#1 = RMul(coeff572F,prod5708);
          real mult573A#2 = RMul(coeff572F,prod5700);
          real sum573B#1 = RAdd(mult5739,mult573A);
          real sum573C#1 = RAdd(mult5732,sum573B);
          real sum573D#1 = RAdd(mult5738,sum573C);
          real intermediate573E#1 = sum573D;
          real mult573F#1 = RMul(coeff56FD,prod5705);
          real mult5740#1 = RMul(coeff572F,prod56FC);
          real sum5741#1 = RAdd(mult573A,mult5740);
          real sum5742#1 = RAdd(mult5733,sum5741);
          real sum5743#1 = RAdd(mult573F,sum5742);
          real intermediate5744#1 = sum5743;
          tensor[10] intermediateCons5745#1 = <tensor[10]>[intermediate5724,intermediate5728,intermediate572B,intermediate572E,mult5715,mult5718,mult5719,intermediate5737,intermediate573E,intermediate5744];
          tensor[10] basisResult56F3#10 = intermediateCons5745;
          real r579A#1 = TensorIndex<tensor[10,3],[0,0]>(femDofs5627);
          real r579B#3 = TensorIndex<tensor[10],[0]>(basisResult56F3);
          real r579C#1 = RMul(r579A,r579B);
          real r579D#1 = TensorIndex<tensor[10,3],[1,0]>(femDofs5627);
          real r579E#3 = TensorIndex<tensor[10],[1]>(basisResult56F3);
          real r579F#1 = RMul(r579D,r579E);
          real r57A0#1 = TensorIndex<tensor[10,3],[2,0]>(femDofs5627);
          real r57A1#3 = TensorIndex<tensor[10],[2]>(basisResult56F3);
          real r57A2#1 = RMul(r57A0,r57A1);
          real r57A3#1 = TensorIndex<tensor[10,3],[3,0]>(femDofs5627);
          real r57A4#3 = TensorIndex<tensor[10],[3]>(basisResult56F3);
          real r57A5#1 = RMul(r57A3,r57A4);
          real r57A6#1 = TensorIndex<tensor[10,3],[4,0]>(femDofs5627);
          real r57A7#3 = TensorIndex<tensor[10],[4]>(basisResult56F3);
          real r57A8#1 = RMul(r57A6,r57A7);
          real r57A9#1 = TensorIndex<tensor[10,3],[5,0]>(femDofs5627);
          real r57AA#3 = TensorIndex<tensor[10],[5]>(basisResult56F3);
          real r57AB#1 = RMul(r57A9,r57AA);
          real r57AC#1 = TensorIndex<tensor[10,3],[6,0]>(femDofs5627);
          real r57AD#3 = TensorIndex<tensor[10],[6]>(basisResult56F3);
          real r57AE#1 = RMul(r57AC,r57AD);
          real r57AF#1 = TensorIndex<tensor[10,3],[7,0]>(femDofs5627);
          real r57B0#3 = TensorIndex<tensor[10],[7]>(basisResult56F3);
          real r57B1#1 = RMul(r57AF,r57B0);
          real r57B2#1 = TensorIndex<tensor[10,3],[8,0]>(femDofs5627);
          real r57B3#3 = TensorIndex<tensor[10],[8]>(basisResult56F3);
          real r57B4#1 = RMul(r57B2,r57B3);
          real r57B5#1 = TensorIndex<tensor[10,3],[9,0]>(femDofs5627);
          real r57B6#3 = TensorIndex<tensor[10],[9]>(basisResult56F3);
          real r57B7#1 = RMul(r57B5,r57B6);
          real r57B8#1 = RAdd(r579C,r579F);
          real r57B9#1 = RAdd(r57B8,r57A2);
          real r57BA#1 = RAdd(r57B9,r57A5);
          real r57BB#1 = RAdd(r57BA,r57A8);
          real r57BC#1 = RAdd(r57BB,r57AB);
          real r57BD#1 = RAdd(r57BC,r57AE);
          real r57BE#1 = RAdd(r57BD,r57B1);
          real r57BF#1 = RAdd(r57BE,r57B4);
          real r57C0#1 = RAdd(r57BF,r57B7);
          real r57C1#1 = TensorIndex<tensor[10,3],[0,1]>(femDofs5627);
          real r57C2#1 = RMul(r57C1,r579B);
          real r57C3#1 = TensorIndex<tensor[10,3],[1,1]>(femDofs5627);
          real r57C4#1 = RMul(r57C3,r579E);
          real r57C5#1 = TensorIndex<tensor[10,3],[2,1]>(femDofs5627);
          real r57C6#1 = RMul(r57C5,r57A1);
          real r57C7#1 = TensorIndex<tensor[10,3],[3,1]>(femDofs5627);
          real r57C8#1 = RMul(r57C7,r57A4);
          real r57C9#1 = TensorIndex<tensor[10,3],[4,1]>(femDofs5627);
          real r57CA#1 = RMul(r57C9,r57A7);
          real r57CB#1 = TensorIndex<tensor[10,3],[5,1]>(femDofs5627);
          real r57CC#1 = RMul(r57CB,r57AA);
          real r57CD#1 = TensorIndex<tensor[10,3],[6,1]>(femDofs5627);
          real r57CE#1 = RMul(r57CD,r57AD);
          real r57CF#1 = TensorIndex<tensor[10,3],[7,1]>(femDofs5627);
          real r57D0#1 = RMul(r57CF,r57B0);
          real r57D1#1 = TensorIndex<tensor[10,3],[8,1]>(femDofs5627);
          real r57D2#1 = RMul(r57D1,r57B3);
          real r57D3#1 = TensorIndex<tensor[10,3],[9,1]>(femDofs5627);
          real r57D4#1 = RMul(r57D3,r57B6);
          real r57D5#1 = RAdd(r57C2,r57C4);
          real r57D6#1 = RAdd(r57D5,r57C6);
          real r57D7#1 = RAdd(r57D6,r57C8);
          real r57D8#1 = RAdd(r57D7,r57CA);
          real r57D9#1 = RAdd(r57D8,r57CC);
          real r57DA#1 = RAdd(r57D9,r57CE);
          real r57DB#1 = RAdd(r57DA,r57D0);
          real r57DC#1 = RAdd(r57DB,r57D2);
          real r57DD#1 = RAdd(r57DC,r57D4);
          real r57DE#1 = TensorIndex<tensor[10,3],[0,2]>(femDofs5627);
          real r57DF#1 = RMul(r57DE,r579B);
          real r57E0#1 = TensorIndex<tensor[10,3],[1,2]>(femDofs5627);
          real r57E1#1 = RMul(r57E0,r579E);
          real r57E2#1 = TensorIndex<tensor[10,3],[2,2]>(femDofs5627);
          real r57E3#1 = RMul(r57E2,r57A1);
          real r57E4#1 = TensorIndex<tensor[10,3],[3,2]>(femDofs5627);
          real r57E5#1 = RMul(r57E4,r57A4);
          real r57E6#1 = TensorIndex<tensor[10,3],[4,2]>(femDofs5627);
          real r57E7#1 = RMul(r57E6,r57A7);
          real r57E8#1 = TensorIndex<tensor[10,3],[5,2]>(femDofs5627);
          real r57E9#1 = RMul(r57E8,r57AA);
          real r57EA#1 = TensorIndex<tensor[10,3],[6,2]>(femDofs5627);
          real r57EB#1 = RMul(r57EA,r57AD);
          real r57EC#1 = TensorIndex<tensor[10,3],[7,2]>(femDofs5627);
          real r57ED#1 = RMul(r57EC,r57B0);
          real r57EE#1 = TensorIndex<tensor[10,3],[8,2]>(femDofs5627);
          real r57EF#1 = RMul(r57EE,r57B3);
          real r57F0#1 = TensorIndex<tensor[10,3],[9,2]>(femDofs5627);
          real r57F1#1 = RMul(r57F0,r57B6);
          real r57F2#1 = RAdd(r57DF,r57E1);
          real r57F3#1 = RAdd(r57F2,r57E3);
          real r57F4#1 = RAdd(r57F3,r57E5);
          real r57F5#1 = RAdd(r57F4,r57E7);
          real r57F6#1 = RAdd(r57F5,r57E9);
          real r57F7#1 = RAdd(r57F6,r57EB);
          real r57F8#1 = RAdd(r57F7,r57ED);
          real r57F9#1 = RAdd(r57F8,r57EF);
          real r57FA#1 = RAdd(r57F9,r57F1);
          tensor[3] compositionl5799#3 = <tensor[3]>[r57C0,r57DD,r57FA];
          real op1_e3_l_19585E#1 = VDot<3>(compositionl5799,compositionl5799);
          tensor[3] op1_e3_l_205861#3 = VScale<3>(stepSize3CCF,compositionl5799);
          real op1_e3_l_215864#1 = Sqrt(op1_e3_l_19585E);
          real realLit5868#1 = 0.1e1;
          real r5869#3 = RDiv(realLit5868,op1_e3_l_215864);
          real r586A#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_205861);
          real r586B#1 = RMul(r5869,r586A);
          real r586C#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_205861);
          real r586D#1 = RMul(r5869,r586C);
          real r586E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_205861);
          real r586F#1 = RMul(r5869,r586E);
          tensor[3] op1_e3_l_225867#1 = <tensor[3]>[r586B,r586D,r586F];
          tensor[3] altCPos587A#3 = VAdd<3>(altCPos3CDB,op1_e3_l_225867);
          bool _t587D#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos55DB);
          bool _t587F#1 = BNot(_t587D);
          if _t587F then goto MASSIGN5882 else goto JOIN5886
        MASSIGN5882:  preds = [COND5881]
          Print<[tensor[3][]]>(stream3CD3);
          self.cPos = cPos55DB;
          self.altCPos = altCPos587A;
          stabilize
          goto JOIN5886
        JOIN5886:  preds = [*STABILIZE5885,COND5881]
          tensor[3] _t5887#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos55DB);
          int _t5889#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos55DB);
          femData:Mesh _t588B#16 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos55DB);
          int ilit588E#1 = 4;
          int mulRes588F#4 = IMul(_t5889,ilit588E);
          int ilit5890#1 = 0;
          int addRes5891#1 = IAdd(mulRes588F,ilit5890);
          int idx5892#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5891);
          int ilit5893#1 = 1;
          int addRes5894#1 = IAdd(mulRes588F,ilit5893);
          int idx5895#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5894);
          int ilit5896#1 = 2;
          int addRes5897#1 = IAdd(mulRes588F,ilit5896);
          int idx5898#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5897);
          int ilit5899#1 = 3;
          int addRes589A#1 = IAdd(mulRes588F,ilit5899);
          int idx589B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes589A);
          int[4] seq589C#1 = <int[4]>{idx5892,idx5895,idx5898,idx589B};
          int[4] femIndicies588D#4 = seq589C;
          int ilit58AE#5 = 0;
          int ilit58AF#5 = 3;
          int idx58B0#1 = Subscript<int>(femIndicies588D,ilit58AE);
          int mulRes58B1#3 = IMul(ilit58AF,idx58B0);
          int addRes58B2#1 = IAdd(ilit58AE,mulRes58B1);
          int ilit58B3#5 = 1;
          int addRes58B4#1 = IAdd(ilit58B3,mulRes58B1);
          int ilit58B5#5 = 2;
          int addRes58B6#1 = IAdd(ilit58B5,mulRes58B1);
          real dof_load58B7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B2);
          real dof_load58B8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B4);
          real dof_load58B9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B6);
          tensor[3] interCons58BA#1 = <tensor[3]>[dof_load58B7,dof_load58B8,dof_load58B9];
          int idx58BB#1 = Subscript<int>(femIndicies588D,ilit58B3);
          int mulRes58BC#3 = IMul(ilit58AF,idx58BB);
          int addRes58BD#1 = IAdd(ilit58AE,mulRes58BC);
          int addRes58BE#1 = IAdd(ilit58B3,mulRes58BC);
          int addRes58BF#1 = IAdd(ilit58B5,mulRes58BC);
          real dof_load58C0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BD);
          real dof_load58C1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BE);
          real dof_load58C2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BF);
          tensor[3] interCons58C3#1 = <tensor[3]>[dof_load58C0,dof_load58C1,dof_load58C2];
          int idx58C4#1 = Subscript<int>(femIndicies588D,ilit58B5);
          int mulRes58C5#3 = IMul(ilit58AF,idx58C4);
          int addRes58C6#1 = IAdd(ilit58AE,mulRes58C5);
          int addRes58C7#1 = IAdd(ilit58B3,mulRes58C5);
          int addRes58C8#1 = IAdd(ilit58B5,mulRes58C5);
          real dof_load58C9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C6);
          real dof_load58CA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C7);
          real dof_load58CB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C8);
          tensor[3] interCons58CC#1 = <tensor[3]>[dof_load58C9,dof_load58CA,dof_load58CB];
          int idx58CD#1 = Subscript<int>(femIndicies588D,ilit58AF);
          int mulRes58CE#3 = IMul(ilit58AF,idx58CD);
          int addRes58CF#1 = IAdd(ilit58AE,mulRes58CE);
          int addRes58D0#1 = IAdd(ilit58B3,mulRes58CE);
          int addRes58D1#1 = IAdd(ilit58B5,mulRes58CE);
          real dof_load58D2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58CF);
          real dof_load58D3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58D0);
          real dof_load58D4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58D1);
          tensor[3] interCons58D5#1 = <tensor[3]>[dof_load58D2,dof_load58D3,dof_load58D4];
          tensor[4,3] dofs58D6#1 = <tensor[4,3]>[interCons58BA,interCons58C3,interCons58CC,interCons58D5];
          tensor[4,3] femDofs58AD#12 = dofs58D6;
          real varAcc5902#1 = VIndex<3,0>(_t5887);
          real varAcc5903#1 = VIndex<3,1>(_t5887);
          real varAcc5904#1 = VIndex<3,2>(_t5887);
          real coeff5905#3 = -0.1e1;
          real iden5906#1 = varAcc5902;
          real one5907#11 = 0.1e1;
          real prod5908#2 = RMul(one5907,one5907);
          real prod5909#2 = RMul(iden5906,prod5908);
          real iden590A#1 = varAcc5903;
          real prod590B#1 = RMul(iden590A,one5907);
          real prod590C#2 = RMul(one5907,prod590B);
          real iden590D#1 = varAcc5904;
          real prod590E#1 = RMul(one5907,iden590D);
          real prod590F#2 = RMul(one5907,prod590E);
          real prod5910#1 = RMul(one5907,prod5908);
          real mult5911#1 = RMul(one5907,prod5910);
          real mult5912#1 = RMul(coeff5905,prod590F);
          real mult5913#1 = RMul(coeff5905,prod590C);
          real mult5914#1 = RMul(coeff5905,prod5909);
          real sum5915#1 = RAdd(mult5913,mult5914);
          real sum5916#1 = RAdd(mult5912,sum5915);
          real sum5917#1 = RAdd(mult5911,sum5916);
          real intermediate5918#1 = sum5917;
          real basisEval5919#1 = RMul(one5907,prod5909);
          real basisEval591A#1 = RMul(one5907,prod590C);
          real basisEval591B#1 = RMul(one5907,prod590F);
          tensor[4] intermediateCons591C#1 = <tensor[4]>[intermediate5918,basisEval5919,basisEval591A,basisEval591B];
          tensor[4] basisResult5901#4 = intermediateCons591C;
          real r593A#1 = TensorIndex<tensor[4,3],[0,0]>(femDofs58AD);
          real r593B#3 = TensorIndex<tensor[4],[0]>(basisResult5901);
          real r593C#1 = RMul(r593A,r593B);
          real r593D#1 = TensorIndex<tensor[4,3],[1,0]>(femDofs58AD);
          real r593E#3 = TensorIndex<tensor[4],[1]>(basisResult5901);
          real r593F#1 = RMul(r593D,r593E);
          real r5940#1 = TensorIndex<tensor[4,3],[2,0]>(femDofs58AD);
          real r5941#3 = TensorIndex<tensor[4],[2]>(basisResult5901);
          real r5942#1 = RMul(r5940,r5941);
          real r5943#1 = TensorIndex<tensor[4,3],[3,0]>(femDofs58AD);
          real r5944#3 = TensorIndex<tensor[4],[3]>(basisResult5901);
          real r5945#1 = RMul(r5943,r5944);
          real r5946#1 = RAdd(r593C,r593F);
          real r5947#1 = RAdd(r5946,r5942);
          real r5948#1 = RAdd(r5947,r5945);
          real r5949#1 = TensorIndex<tensor[4,3],[0,1]>(femDofs58AD);
          real r594A#1 = RMul(r5949,r593B);
          real r594B#1 = TensorIndex<tensor[4,3],[1,1]>(femDofs58AD);
          real r594C#1 = RMul(r594B,r593E);
          real r594D#1 = TensorIndex<tensor[4,3],[2,1]>(femDofs58AD);
          real r594E#1 = RMul(r594D,r5941);
          real r594F#1 = TensorIndex<tensor[4,3],[3,1]>(femDofs58AD);
          real r5950#1 = RMul(r594F,r5944);
          real r5951#1 = RAdd(r594A,r594C);
          real r5952#1 = RAdd(r5951,r594E);
          real r5953#1 = RAdd(r5952,r5950);
          real r5954#1 = TensorIndex<tensor[4,3],[0,2]>(femDofs58AD);
          real r5955#1 = RMul(r5954,r593B);
          real r5956#1 = TensorIndex<tensor[4,3],[1,2]>(femDofs58AD);
          real r5957#1 = RMul(r5956,r593E);
          real r5958#1 = TensorIndex<tensor[4,3],[2,2]>(femDofs58AD);
          real r5959#1 = RMul(r5958,r5941);
          real r595A#1 = TensorIndex<tensor[4,3],[3,2]>(femDofs58AD);
          real r595B#1 = RMul(r595A,r5944);
          real r595C#1 = RAdd(r5955,r5957);
          real r595D#1 = RAdd(r595C,r5959);
          real r595E#1 = RAdd(r595D,r595B);
          tensor[3] _t5939#1 = <tensor[3]>[r5948,r5953,r595E];
          tensor[3][1] _t5986#1 = <tensor[3][1]>{_t5939};
          tensor[3][] _t5988#1 = MkDynamic<tensor[3],1>(_t5986);
          tensor[3][] stream598A#1 = Concat<tensor[3]>(stream3CD3,_t5988);
          tensor[3][1] _t598C#1 = <tensor[3][1]>{altCPos587A};
          tensor[3][] _t598E#1 = MkDynamic<tensor[3],1>(_t598C);
          tensor[3][] newStream5990#1 = Concat<tensor[3]>(newStream3CD5,_t598E);
          int _t5992#1 = 1;
          int step5994#1 = IAdd(step3CD7,_t5992);
          self.stream = stream598A;
          self.newStream = newStream5990;
          self.step = step5994;
          self.cPos = cPos55DB;
          self.altCPos = altCPos587A;
          active
        ASSIGN599E:  preds = [COND532E]
          real realLit599C#3 = 0.e0;
          tensor[3] _t55D6#1 = <tensor[3]>[realLit599C,realLit599C,realLit599C];
          goto JOIN55D7
        ASSIGN59A1:  preds = [COND5325]
          femData:MeshPos _t59A0#1 = findPos3574 (meshData3CCD,altIntermed531E);
          bool _t59A2#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t59A0);
          bool _t5329#1 = BNot(_t59A2);
          goto JOIN532A
        ASSIGN59A7:  preds = [COND3E03]
          real realLit59A5#3 = 0.e0;
          tensor[3] _t40A5#1 = <tensor[3]>[realLit59A5,realLit59A5,realLit59A5];
          goto JOIN40A6
        ASSIGN59AA:  preds = [COND3DF8]
          string _t59A9#1 = "fine in cell:";
          femData:MeshCell _t59AB#1 = LoadFem<femData:MeshCell>(_t3CF0,_t3CEE);
          string _t59AD#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t59A9,_t59AB,_t59AD);
          goto JOIN3E00
        ASSIGN59B1:  preds = [COND3CE3]
          femData:MeshPos _t59B0#1 = findPos3574 (meshData3CCD,altCPos3CDB);
          bool _t59B2#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t59B0);
          bool _t59B4#1 = BNot(_t59B2);
          if _t59B4 then goto ASSIGN59B8 else goto ASSIGN59BB
        ASSIGN59B8:  preds = [COND59B6]
          bool _t59B7#1 = true;
          goto JOIN59BA
        JOIN59BA:  preds = [ASSIGN59B8,ASSIGN59BB]
          bool _t3CE7#1 = phi(_t59B7,_t59B9)
          goto JOIN3CE8
        ASSIGN59BB:  preds = [COND59B6]
          bool _t59B9#1 = EQ<int>(step3CD7,stepMax3CD1);
          goto JOIN59BA
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY59BC:  preds = []
      tensor[3][] startPoints59BD#1 = globals.startPoints3524;
    FOREACH59C0:  preds = [ASSIGN59BE,NEXT59C2]
      foreach (x59BF in startPoints59BD) on exit goto RETURN59C3
      new gg(x59BF);
      goto FOREACH59C0
    RETURN59C3:  preds = [FOREACH59C0]
      return
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData351F (meshData) = <no-default>
  input 0space03AB_intermedateGlobal3520 (space) = <no-default>
  input 0data03AD_intermedateGlobal3521 (data) = <no-default>
  input timeSteps3522 (timeSteps) = <default>
  input timeEps3523 (timeEps) = <default>
  input startPoints3524 (startPoints) = <no-default>
  input stepSize3525 (stepSize) = <default>
  input stepMax3526 (stepMax) = <default>
  global femData:FemFunc data3527
  global femData:Mesh _t3528
  global femData:Space _tX3529
## functions
  function femData:MeshPos findPos3574 (femData:Mesh mesh3575#19, tensor[3] pos3576#4) {
    ENTRY3577:  preds = []
      real _t3578#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn357A#1 = <tensor[3]>[_t3578,_t3578,_t3578];
      int newtonInt357C#1 = 0;
      int[] yayCells357E#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3575,pos3576);
    FOREACH3581:  preds = [ASSIGN357F,NEXT3CB5]
      foreach (cellItter3580 in yayCells357E) on exit goto ASSIGN3CB7
      int _t3582#1 = 16;
      int[] _t3584#1 = Range(newtonInt357C,_t3582);
    FOREACH3587:  preds = [ASSIGN3585,NEXT3CB4]
      foreach (newtonItter3586 in _t3584) on exit goto NEXT3CB5
        tensor[3] xn3B56#4 = phi(xn357A,xn3C1A)
      int ilit3589#1 = 4;
      int mulRes358A#4 = IMul(cellItter3580,ilit3589);
      int addRes358C#1 = mulRes358A;
      int idx358D#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes358C);
      int ilit358E#1 = 1;
      int addRes358F#1 = IAdd(mulRes358A,ilit358E);
      int idx3590#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes358F);
      int ilit3591#1 = 2;
      int addRes3592#1 = IAdd(mulRes358A,ilit3591);
      int idx3593#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes3592);
      int ilit3594#1 = 3;
      int addRes3595#1 = IAdd(mulRes358A,ilit3594);
      int idx3596#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes3595);
      int ilit35AA#4 = 3;
      int idx35AB#1 = idx358D;
      int mulRes35AC#3 = IMul(ilit35AA,idx35AB);
      int addRes35AD#1 = mulRes35AC;
      int ilit35AE#4 = 1;
      int addRes35AF#1 = IAdd(ilit35AE,mulRes35AC);
      int ilit35B0#4 = 2;
      int addRes35B1#1 = IAdd(ilit35B0,mulRes35AC);
      real dof_load35B2#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35AD);
      real dof_load35B3#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35AF);
      real dof_load35B4#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B1);
      int idx35B6#1 = idx3590;
      int mulRes35B7#3 = IMul(ilit35AA,idx35B6);
      int addRes35B8#1 = mulRes35B7;
      int addRes35B9#1 = IAdd(ilit35AE,mulRes35B7);
      int addRes35BA#1 = IAdd(ilit35B0,mulRes35B7);
      real dof_load35BB#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B8);
      real dof_load35BC#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B9);
      real dof_load35BD#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35BA);
      int idx35BF#1 = idx3593;
      int mulRes35C0#3 = IMul(ilit35AA,idx35BF);
      int addRes35C1#1 = mulRes35C0;
      int addRes35C2#1 = IAdd(ilit35AE,mulRes35C0);
      int addRes35C3#1 = IAdd(ilit35B0,mulRes35C0);
      real dof_load35C4#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C1);
      real dof_load35C5#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C2);
      real dof_load35C6#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C3);
      int idx35C8#1 = idx3596;
      int mulRes35C9#3 = IMul(ilit35AA,idx35C8);
      int addRes35CA#1 = mulRes35C9;
      int addRes35CB#1 = IAdd(ilit35AE,mulRes35C9);
      int addRes35CC#1 = IAdd(ilit35B0,mulRes35C9);
      real dof_load35CD#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CA);
      real dof_load35CE#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CB);
      real dof_load35CF#6 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CC);
      real coeff3600#1 = -0.1e1;
      real one3601#4 = 0.1e1;
      real prod3602#1 = RMul(one3601,one3601);
      real prod3603#2 = RMul(one3601,prod3602);
      real basisEval3604#6 = RMul(coeff3600,prod3603);
      real basisEval3605#6 = RMul(one3601,prod3603);
      real basisEval3606#12 = 0.e0;
      real r361B#3 = dof_load35B2;
      real r361C#3 = basisEval3604;
      real r361D#1 = RMul(r361B,r361C);
      real r361E#3 = dof_load35BB;
      real r361F#3 = basisEval3605;
      real r3620#1 = RMul(r361E,r361F);
      real r3621#3 = dof_load35C4;
      real r3622#3 = basisEval3606;
      real r3623#1 = RMul(r3621,r3622);
      real r3624#3 = dof_load35CD;
      real r3625#3 = basisEval3606;
      real r3626#1 = RMul(r3624,r3625);
      real r3627#1 = RAdd(r361D,r3620);
      real r3628#1 = RAdd(r3627,r3623);
      real r3629#2 = RAdd(r3628,r3626);
      real r362A#3 = basisEval3604;
      real r362B#1 = RMul(r361B,r362A);
      real r362C#3 = basisEval3606;
      real r362D#1 = RMul(r361E,r362C);
      real r362E#3 = basisEval3605;
      real r362F#1 = RMul(r3621,r362E);
      real r3630#3 = basisEval3606;
      real r3631#1 = RMul(r3624,r3630);
      real r3632#1 = RAdd(r362B,r362D);
      real r3633#1 = RAdd(r3632,r362F);
      real r3634#2 = RAdd(r3633,r3631);
      real r3635#3 = basisEval3604;
      real r3636#1 = RMul(r361B,r3635);
      real r3637#3 = basisEval3606;
      real r3638#1 = RMul(r361E,r3637);
      real r3639#3 = basisEval3606;
      real r363A#1 = RMul(r3621,r3639);
      real r363B#3 = basisEval3605;
      real r363C#1 = RMul(r3624,r363B);
      real r363D#1 = RAdd(r3636,r3638);
      real r363E#1 = RAdd(r363D,r363A);
      real r363F#2 = RAdd(r363E,r363C);
      real r3641#3 = dof_load35B3;
      real r3642#1 = RMul(r3641,r361C);
      real r3643#3 = dof_load35BC;
      real r3644#1 = RMul(r3643,r361F);
      real r3645#3 = dof_load35C5;
      real r3646#1 = RMul(r3645,r3622);
      real r3647#3 = dof_load35CE;
      real r3648#1 = RMul(r3647,r3625);
      real r3649#1 = RAdd(r3642,r3644);
      real r364A#1 = RAdd(r3649,r3646);
      real r364B#2 = RAdd(r364A,r3648);
      real r364C#1 = RMul(r3641,r362A);
      real r364D#1 = RMul(r3643,r362C);
      real r364E#1 = RMul(r3645,r362E);
      real r364F#1 = RMul(r3647,r3630);
      real r3650#1 = RAdd(r364C,r364D);
      real r3651#1 = RAdd(r3650,r364E);
      real r3652#2 = RAdd(r3651,r364F);
      real r3653#1 = RMul(r3641,r3635);
      real r3654#1 = RMul(r3643,r3637);
      real r3655#1 = RMul(r3645,r3639);
      real r3656#1 = RMul(r3647,r363B);
      real r3657#1 = RAdd(r3653,r3654);
      real r3658#1 = RAdd(r3657,r3655);
      real r3659#2 = RAdd(r3658,r3656);
      real r365B#3 = dof_load35B4;
      real r365C#1 = RMul(r365B,r361C);
      real r365D#3 = dof_load35BD;
      real r365E#1 = RMul(r365D,r361F);
      real r365F#3 = dof_load35C6;
      real r3660#1 = RMul(r365F,r3622);
      real r3661#3 = dof_load35CF;
      real r3662#1 = RMul(r3661,r3625);
      real r3663#1 = RAdd(r365C,r365E);
      real r3664#1 = RAdd(r3663,r3660);
      real r3665#2 = RAdd(r3664,r3662);
      real r3666#1 = RMul(r365B,r362A);
      real r3667#1 = RMul(r365D,r362C);
      real r3668#1 = RMul(r365F,r362E);
      real r3669#1 = RMul(r3661,r3630);
      real r366A#1 = RAdd(r3666,r3667);
      real r366B#1 = RAdd(r366A,r3668);
      real r366C#2 = RAdd(r366B,r3669);
      real r366D#1 = RMul(r365B,r3635);
      real r366E#1 = RMul(r365D,r3637);
      real r366F#1 = RMul(r365F,r3639);
      real r3670#1 = RMul(r3661,r363B);
      real r3671#1 = RAdd(r366D,r366E);
      real r3672#1 = RAdd(r3671,r366F);
      real r3673#2 = RAdd(r3672,r3670);
      real realLit36D2#9 = 0.e0;
      real r36D3#3 = r3629;
      real r36D4#3 = RMul(realLit36D2,r36D3);
      real r36D5#3 = r364B;
      real r36D6#3 = RMul(realLit36D2,r36D5);
      real r36D7#3 = r3665;
      real r36D8#5 = RMul(realLit36D2,r36D7);
      real r36D9#3 = RAdd(r36D4,r36D6);
      real r36DA#3 = RAdd(r36D9,r36D8);
      real r36DB#3 = r3634;
      real r36DC#3 = RMul(realLit36D2,r36DB);
      real r36DD#3 = r3652;
      real r36DE#3 = RMul(realLit36D2,r36DD);
      real r36DF#3 = r366C;
      real r36E0#5 = RMul(realLit36D2,r36DF);
      real r36E1#3 = RAdd(r36DC,r36DE);
      real r36E2#3 = RAdd(r36E1,r36E0);
      real r36E3#3 = r363F;
      real r36E4#3 = RMul(realLit36D2,r36E3);
      real r36E5#3 = r3659;
      real r36E6#3 = RMul(realLit36D2,r36E5);
      real r36E7#3 = r3673;
      real r36E8#5 = RMul(realLit36D2,r36E7);
      real r36E9#3 = RAdd(r36E4,r36E6);
      real r36EA#3 = RAdd(r36E9,r36E8);
      real realLit36EC#9 = -0.1e1;
      real r36ED#1 = RMul(realLit36EC,r36D7);
      real r36EE#1 = RAdd(r36D9,r36ED);
      real r36EF#1 = RMul(realLit36EC,r36DF);
      real r36F0#1 = RAdd(r36E1,r36EF);
      real r36F1#1 = RMul(realLit36EC,r36E7);
      real r36F2#1 = RAdd(r36E9,r36F1);
      real realLit36F4#9 = 0.1e1;
      real r36F5#1 = RMul(realLit36F4,r36D5);
      real r36F6#1 = RAdd(r36D4,r36F5);
      real r36F7#1 = RAdd(r36F6,r36D8);
      real r36F8#1 = RMul(realLit36F4,r36DD);
      real r36F9#1 = RAdd(r36DC,r36F8);
      real r36FA#1 = RAdd(r36F9,r36E0);
      real r36FB#1 = RMul(realLit36F4,r36E5);
      real r36FC#1 = RAdd(r36E4,r36FB);
      real r36FD#1 = RAdd(r36FC,r36E8);
      real r3700#1 = RMul(realLit36F4,r36D7);
      real r3701#1 = RAdd(r36D9,r3700);
      real r3702#1 = RMul(realLit36F4,r36DF);
      real r3703#1 = RAdd(r36E1,r3702);
      real r3704#1 = RMul(realLit36F4,r36E7);
      real r3705#1 = RAdd(r36E9,r3704);
      real r3707#1 = RMul(realLit36EC,r36D3);
      real r3708#1 = RAdd(r3707,r36D6);
      real r3709#1 = RAdd(r3708,r36D8);
      real r370A#1 = RMul(realLit36EC,r36DB);
      real r370B#1 = RAdd(r370A,r36DE);
      real r370C#1 = RAdd(r370B,r36E0);
      real r370D#1 = RMul(realLit36EC,r36E3);
      real r370E#1 = RAdd(r370D,r36E6);
      real r370F#1 = RAdd(r370E,r36E8);
      real r3712#1 = RMul(realLit36EC,r36D5);
      real r3713#1 = RAdd(r36D4,r3712);
      real r3714#1 = RAdd(r3713,r36D8);
      real r3715#1 = RMul(realLit36EC,r36DD);
      real r3716#1 = RAdd(r36DC,r3715);
      real r3717#1 = RAdd(r3716,r36E0);
      real r3718#1 = RMul(realLit36EC,r36E5);
      real r3719#1 = RAdd(r36E4,r3718);
      real r371A#1 = RAdd(r3719,r36E8);
      real r371C#1 = RMul(realLit36F4,r36D3);
      real r371D#1 = RAdd(r371C,r36D6);
      real r371E#1 = RAdd(r371D,r36D8);
      real r371F#1 = RMul(realLit36F4,r36DB);
      real r3720#1 = RAdd(r371F,r36DE);
      real r3721#1 = RAdd(r3720,r36E0);
      real r3722#1 = RMul(realLit36F4,r36E3);
      real r3723#1 = RAdd(r3722,r36E6);
      real r3724#1 = RAdd(r3723,r36E8);
      real r377F#9 = r3629;
      real r3780#3 = r36DA;
      real r3781#1 = RMul(r377F,r3780);
      real r3782#9 = r364B;
      real r3783#3 = r3701;
      real r3784#1 = RMul(r3782,r3783);
      real r3785#9 = r3665;
      real r3786#3 = r3714;
      real r3787#1 = RMul(r3785,r3786);
      real r3788#1 = RAdd(r3781,r3784);
      real r3789#1 = RAdd(r3788,r3787);
      real r378A#3 = r36E2;
      real r378B#1 = RMul(r377F,r378A);
      real r378C#3 = r3703;
      real r378D#1 = RMul(r3782,r378C);
      real r378E#3 = r3717;
      real r378F#1 = RMul(r3785,r378E);
      real r3790#1 = RAdd(r378B,r378D);
      real r3791#1 = RAdd(r3790,r378F);
      real r3792#3 = r36EA;
      real r3793#1 = RMul(r377F,r3792);
      real r3794#3 = r3705;
      real r3795#1 = RMul(r3782,r3794);
      real r3796#3 = r371A;
      real r3797#1 = RMul(r3785,r3796);
      real r3798#1 = RAdd(r3793,r3795);
      real r3799#1 = RAdd(r3798,r3797);
      real r379B#3 = r36EE;
      real r379C#1 = RMul(r377F,r379B);
      real r379D#3 = r36DA;
      real r379E#1 = RMul(r3782,r379D);
      real r379F#3 = r371E;
      real r37A0#1 = RMul(r3785,r379F);
      real r37A1#1 = RAdd(r379C,r379E);
      real r37A2#1 = RAdd(r37A1,r37A0);
      real r37A3#3 = r36F0;
      real r37A4#1 = RMul(r377F,r37A3);
      real r37A5#3 = r36E2;
      real r37A6#1 = RMul(r3782,r37A5);
      real r37A7#3 = r3721;
      real r37A8#1 = RMul(r3785,r37A7);
      real r37A9#1 = RAdd(r37A4,r37A6);
      real r37AA#1 = RAdd(r37A9,r37A8);
      real r37AB#3 = r36F2;
      real r37AC#1 = RMul(r377F,r37AB);
      real r37AD#3 = r36EA;
      real r37AE#1 = RMul(r3782,r37AD);
      real r37AF#3 = r3724;
      real r37B0#1 = RMul(r3785,r37AF);
      real r37B1#1 = RAdd(r37AC,r37AE);
      real r37B2#1 = RAdd(r37B1,r37B0);
      real r37B4#3 = r36F7;
      real r37B5#1 = RMul(r377F,r37B4);
      real r37B6#3 = r3709;
      real r37B7#1 = RMul(r3782,r37B6);
      real r37B8#3 = r36DA;
      real r37B9#1 = RMul(r3785,r37B8);
      real r37BA#1 = RAdd(r37B5,r37B7);
      real r37BB#1 = RAdd(r37BA,r37B9);
      real r37BC#3 = r36FA;
      real r37BD#1 = RMul(r377F,r37BC);
      real r37BE#3 = r370C;
      real r37BF#1 = RMul(r3782,r37BE);
      real r37C0#3 = r36E2;
      real r37C1#1 = RMul(r3785,r37C0);
      real r37C2#1 = RAdd(r37BD,r37BF);
      real r37C3#1 = RAdd(r37C2,r37C1);
      real r37C4#3 = r36FD;
      real r37C5#1 = RMul(r377F,r37C4);
      real r37C6#3 = r370F;
      real r37C7#1 = RMul(r3782,r37C6);
      real r37C8#3 = r36EA;
      real r37C9#1 = RMul(r3785,r37C8);
      real r37CA#1 = RAdd(r37C5,r37C7);
      real r37CB#1 = RAdd(r37CA,r37C9);
      real r37CE#9 = r3634;
      real r37CF#1 = RMul(r37CE,r3780);
      real r37D0#9 = r3652;
      real r37D1#1 = RMul(r37D0,r3783);
      real r37D2#9 = r366C;
      real r37D3#1 = RMul(r37D2,r3786);
      real r37D4#1 = RAdd(r37CF,r37D1);
      real r37D5#1 = RAdd(r37D4,r37D3);
      real r37D6#1 = RMul(r37CE,r378A);
      real r37D7#1 = RMul(r37D0,r378C);
      real r37D8#1 = RMul(r37D2,r378E);
      real r37D9#1 = RAdd(r37D6,r37D7);
      real r37DA#1 = RAdd(r37D9,r37D8);
      real r37DB#1 = RMul(r37CE,r3792);
      real r37DC#1 = RMul(r37D0,r3794);
      real r37DD#1 = RMul(r37D2,r3796);
      real r37DE#1 = RAdd(r37DB,r37DC);
      real r37DF#1 = RAdd(r37DE,r37DD);
      real r37E1#1 = RMul(r37CE,r379B);
      real r37E2#1 = RMul(r37D0,r379D);
      real r37E3#1 = RMul(r37D2,r379F);
      real r37E4#1 = RAdd(r37E1,r37E2);
      real r37E5#1 = RAdd(r37E4,r37E3);
      real r37E6#1 = RMul(r37CE,r37A3);
      real r37E7#1 = RMul(r37D0,r37A5);
      real r37E8#1 = RMul(r37D2,r37A7);
      real r37E9#1 = RAdd(r37E6,r37E7);
      real r37EA#1 = RAdd(r37E9,r37E8);
      real r37EB#1 = RMul(r37CE,r37AB);
      real r37EC#1 = RMul(r37D0,r37AD);
      real r37ED#1 = RMul(r37D2,r37AF);
      real r37EE#1 = RAdd(r37EB,r37EC);
      real r37EF#1 = RAdd(r37EE,r37ED);
      real r37F1#1 = RMul(r37CE,r37B4);
      real r37F2#1 = RMul(r37D0,r37B6);
      real r37F3#1 = RMul(r37D2,r37B8);
      real r37F4#1 = RAdd(r37F1,r37F2);
      real r37F5#1 = RAdd(r37F4,r37F3);
      real r37F6#1 = RMul(r37CE,r37BC);
      real r37F7#1 = RMul(r37D0,r37BE);
      real r37F8#1 = RMul(r37D2,r37C0);
      real r37F9#1 = RAdd(r37F6,r37F7);
      real r37FA#1 = RAdd(r37F9,r37F8);
      real r37FB#1 = RMul(r37CE,r37C4);
      real r37FC#1 = RMul(r37D0,r37C6);
      real r37FD#1 = RMul(r37D2,r37C8);
      real r37FE#1 = RAdd(r37FB,r37FC);
      real r37FF#1 = RAdd(r37FE,r37FD);
      real r3802#9 = r363F;
      real r3803#1 = RMul(r3802,r3780);
      real r3804#9 = r3659;
      real r3805#1 = RMul(r3804,r3783);
      real r3806#9 = r3673;
      real r3807#1 = RMul(r3806,r3786);
      real r3808#1 = RAdd(r3803,r3805);
      real r3809#1 = RAdd(r3808,r3807);
      real r380A#1 = RMul(r3802,r378A);
      real r380B#1 = RMul(r3804,r378C);
      real r380C#1 = RMul(r3806,r378E);
      real r380D#1 = RAdd(r380A,r380B);
      real r380E#1 = RAdd(r380D,r380C);
      real r380F#1 = RMul(r3802,r3792);
      real r3810#1 = RMul(r3804,r3794);
      real r3811#1 = RMul(r3806,r3796);
      real r3812#1 = RAdd(r380F,r3810);
      real r3813#1 = RAdd(r3812,r3811);
      real r3815#1 = RMul(r3802,r379B);
      real r3816#1 = RMul(r3804,r379D);
      real r3817#1 = RMul(r3806,r379F);
      real r3818#1 = RAdd(r3815,r3816);
      real r3819#1 = RAdd(r3818,r3817);
      real r381A#1 = RMul(r3802,r37A3);
      real r381B#1 = RMul(r3804,r37A5);
      real r381C#1 = RMul(r3806,r37A7);
      real r381D#1 = RAdd(r381A,r381B);
      real r381E#1 = RAdd(r381D,r381C);
      real r381F#1 = RMul(r3802,r37AB);
      real r3820#1 = RMul(r3804,r37AD);
      real r3821#1 = RMul(r3806,r37AF);
      real r3822#1 = RAdd(r381F,r3820);
      real r3823#1 = RAdd(r3822,r3821);
      real r3825#1 = RMul(r3802,r37B4);
      real r3826#1 = RMul(r3804,r37B6);
      real r3827#1 = RMul(r3806,r37B8);
      real r3828#1 = RAdd(r3825,r3826);
      real r3829#1 = RAdd(r3828,r3827);
      real r382A#1 = RMul(r3802,r37BC);
      real r382B#1 = RMul(r3804,r37BE);
      real r382C#1 = RMul(r3806,r37C0);
      real r382D#1 = RAdd(r382A,r382B);
      real r382E#1 = RAdd(r382D,r382C);
      real r382F#1 = RMul(r3802,r37C4);
      real r3830#1 = RMul(r3804,r37C6);
      real r3831#1 = RMul(r3806,r37C8);
      real r3832#1 = RAdd(r382F,r3830);
      real r3833#1 = RAdd(r3832,r3831);
      real r38F0#1 = dof_load35B2;
      real r38F1#3 = basisEval3604;
      real r38F2#1 = RMul(r38F0,r38F1);
      real r38F3#1 = dof_load35BB;
      real r38F4#3 = basisEval3605;
      real r38F5#1 = RMul(r38F3,r38F4);
      real r38F6#1 = dof_load35C4;
      real r38F7#3 = basisEval3606;
      real r38F8#1 = RMul(r38F6,r38F7);
      real r38F9#1 = dof_load35CD;
      real r38FA#3 = basisEval3606;
      real r38FB#1 = RMul(r38F9,r38FA);
      real r38FC#1 = RAdd(r38F2,r38F5);
      real r38FD#1 = RAdd(r38FC,r38F8);
      real r38FE#1 = RAdd(r38FD,r38FB);
      real r38FF#1 = dof_load35B3;
      real r3900#1 = RMul(r38FF,r38F1);
      real r3901#1 = dof_load35BC;
      real r3902#1 = RMul(r3901,r38F4);
      real r3903#1 = dof_load35C5;
      real r3904#1 = RMul(r3903,r38F7);
      real r3905#1 = dof_load35CE;
      real r3906#1 = RMul(r3905,r38FA);
      real r3907#1 = RAdd(r3900,r3902);
      real r3908#1 = RAdd(r3907,r3904);
      real r3909#1 = RAdd(r3908,r3906);
      real r390A#1 = dof_load35B4;
      real r390B#1 = RMul(r390A,r38F1);
      real r390C#1 = dof_load35BD;
      real r390D#1 = RMul(r390C,r38F4);
      real r390E#1 = dof_load35C6;
      real r390F#1 = RMul(r390E,r38F7);
      real r3910#1 = dof_load35CF;
      real r3911#1 = RMul(r3910,r38FA);
      real r3912#1 = RAdd(r390B,r390D);
      real r3913#1 = RAdd(r3912,r390F);
      real r3914#1 = RAdd(r3913,r3911);
      tensor[3] probe_l_1438EF#1 = <tensor[3]>[r38FE,r3909,r3914];
      real r393D#1 = dof_load35B2;
      real r393E#3 = basisEval3604;
      real r393F#1 = RMul(r393D,r393E);
      real r3940#1 = dof_load35BB;
      real r3941#3 = basisEval3606;
      real r3942#1 = RMul(r3940,r3941);
      real r3943#1 = dof_load35C4;
      real r3944#3 = basisEval3605;
      real r3945#1 = RMul(r3943,r3944);
      real r3946#1 = dof_load35CD;
      real r3947#3 = basisEval3606;
      real r3948#1 = RMul(r3946,r3947);
      real r3949#1 = RAdd(r393F,r3942);
      real r394A#1 = RAdd(r3949,r3945);
      real r394B#1 = RAdd(r394A,r3948);
      real r394C#1 = dof_load35B3;
      real r394D#1 = RMul(r394C,r393E);
      real r394E#1 = dof_load35BC;
      real r394F#1 = RMul(r394E,r3941);
      real r3950#1 = dof_load35C5;
      real r3951#1 = RMul(r3950,r3944);
      real r3952#1 = dof_load35CE;
      real r3953#1 = RMul(r3952,r3947);
      real r3954#1 = RAdd(r394D,r394F);
      real r3955#1 = RAdd(r3954,r3951);
      real r3956#1 = RAdd(r3955,r3953);
      real r3957#1 = dof_load35B4;
      real r3958#1 = RMul(r3957,r393E);
      real r3959#1 = dof_load35BD;
      real r395A#1 = RMul(r3959,r3941);
      real r395B#1 = dof_load35C6;
      real r395C#1 = RMul(r395B,r3944);
      real r395D#1 = dof_load35CF;
      real r395E#1 = RMul(r395D,r3947);
      real r395F#1 = RAdd(r3958,r395A);
      real r3960#1 = RAdd(r395F,r395C);
      real r3961#1 = RAdd(r3960,r395E);
      tensor[3] probe_l_15393C#3 = <tensor[3]>[r394B,r3956,r3961];
      real r398A#1 = dof_load35B2;
      real r398B#3 = basisEval3604;
      real r398C#1 = RMul(r398A,r398B);
      real r398D#1 = dof_load35BB;
      real r398E#3 = basisEval3606;
      real r398F#1 = RMul(r398D,r398E);
      real r3990#1 = dof_load35C4;
      real r3991#3 = basisEval3606;
      real r3992#1 = RMul(r3990,r3991);
      real r3993#1 = dof_load35CD;
      real r3994#3 = basisEval3605;
      real r3995#1 = RMul(r3993,r3994);
      real r3996#1 = RAdd(r398C,r398F);
      real r3997#1 = RAdd(r3996,r3992);
      real r3998#1 = RAdd(r3997,r3995);
      real r3999#1 = dof_load35B3;
      real r399A#1 = RMul(r3999,r398B);
      real r399B#1 = dof_load35BC;
      real r399C#1 = RMul(r399B,r398E);
      real r399D#1 = dof_load35C5;
      real r399E#1 = RMul(r399D,r3991);
      real r399F#1 = dof_load35CE;
      real r39A0#1 = RMul(r399F,r3994);
      real r39A1#1 = RAdd(r399A,r399C);
      real r39A2#1 = RAdd(r39A1,r399E);
      real r39A3#1 = RAdd(r39A2,r39A0);
      real r39A4#1 = dof_load35B4;
      real r39A5#1 = RMul(r39A4,r398B);
      real r39A6#1 = dof_load35BD;
      real r39A7#1 = RMul(r39A6,r398E);
      real r39A8#1 = dof_load35C6;
      real r39A9#1 = RMul(r39A8,r3991);
      real r39AA#1 = dof_load35CF;
      real r39AB#1 = RMul(r39AA,r3994);
      real r39AC#1 = RAdd(r39A5,r39A7);
      real r39AD#1 = RAdd(r39AC,r39A9);
      real r39AE#1 = RAdd(r39AD,r39AB);
      real realLit39D7#3 = 0.e0;
      real r39D8#3 = r3998;
      real r39D9#3 = RMul(realLit39D7,r39D8);
      real r39DA#3 = r39A3;
      real r39DB#3 = RMul(realLit39D7,r39DA);
      real r39DC#3 = r39AE;
      real r39DD#5 = RMul(realLit39D7,r39DC);
      real r39DE#3 = RAdd(r39D9,r39DB);
      real r39DF#3 = RAdd(r39DE,r39DD);
      real realLit39E0#3 = 0.1e1;
      real r39E1#1 = RMul(realLit39E0,r39DC);
      real r39E2#1 = RAdd(r39DE,r39E1);
      real realLit39E3#3 = -0.1e1;
      real r39E4#1 = RMul(realLit39E3,r39DA);
      real r39E5#1 = RAdd(r39D9,r39E4);
      real r39E6#1 = RAdd(r39E5,r39DD);
      tensor[3] tensor39E7#1 = <tensor[3]>[r39DF,r39E2,r39E6];
      real r39E8#1 = RMul(realLit39E3,r39DC);
      real r39E9#1 = RAdd(r39DE,r39E8);
      real r39EA#1 = RMul(realLit39E0,r39D8);
      real r39EB#1 = RAdd(r39EA,r39DB);
      real r39EC#1 = RAdd(r39EB,r39DD);
      tensor[3] tensor39ED#1 = <tensor[3]>[r39E9,r39DF,r39EC];
      real r39EE#1 = RMul(realLit39E0,r39DA);
      real r39EF#1 = RAdd(r39D9,r39EE);
      real r39F0#1 = RAdd(r39EF,r39DD);
      real r39F1#1 = RMul(realLit39E3,r39D8);
      real r39F2#1 = RAdd(r39F1,r39DB);
      real r39F3#1 = RAdd(r39F2,r39DD);
      tensor[3] tensor39F4#1 = <tensor[3]>[r39F0,r39F3,r39DF];
      tensor[3] projParam3A16#1 = tensor39E7;
      real vdot3A17#1 = VDot<3>(probe_l_15393C,projParam3A16);
      tensor[3] projParam3A18#1 = tensor39ED;
      real vdot3A19#1 = VDot<3>(probe_l_15393C,projParam3A18);
      tensor[3] projParam3A1A#1 = tensor39F4;
      real vdot3A1B#1 = VDot<3>(probe_l_15393C,projParam3A1A);
      tensor[3] op1_e3_l_183A15#1 = <tensor[3]>[vdot3A17,vdot3A19,vdot3A1B];
      real op1_e3_l_193A24#1 = VDot<3>(probe_l_1438EF,op1_e3_l_183A15);
      real realLit3A28#27 = 0.e0;
      real r3A29#1 = r3789;
      real r3A2A#2 = RMul(realLit3A28,r3A29);
      real r3A2B#2 = r3791;
      real r3A2C#1 = RMul(realLit3A28,r3A2B);
      real r3A2D#2 = r3799;
      real r3A2E#2 = RMul(realLit3A28,r3A2D);
      real r3A2F#2 = r37D5;
      real r3A30#2 = RMul(realLit3A28,r3A2F);
      real r3A31#1 = r37DA;
      real r3A32#3 = RMul(realLit3A28,r3A31);
      real realLit3A33#9 = 0.1e1;
      real r3A34#2 = r37DF;
      real r3A35#1 = RMul(realLit3A33,r3A34);
      real r3A36#2 = r3809;
      real r3A37#2 = RMul(realLit3A28,r3A36);
      real realLit3A38#9 = -0.1e1;
      real r3A39#2 = r380E;
      real r3A3A#1 = RMul(realLit3A38,r3A39);
      real r3A3B#1 = r3813;
      real r3A3C#3 = RMul(realLit3A28,r3A3B);
      real r3A3D#2 = RAdd(r3A2A,r3A2C);
      real r3A3E#1 = RAdd(r3A3D,r3A2E);
      real r3A3F#1 = RAdd(r3A3E,r3A30);
      real r3A40#1 = RAdd(r3A3F,r3A32);
      real r3A41#1 = RAdd(r3A40,r3A35);
      real r3A42#1 = RAdd(r3A41,r3A37);
      real r3A43#1 = RAdd(r3A42,r3A3A);
      real r3A44#1 = RAdd(r3A43,r3A3C);
      real r3A45#1 = r37A2;
      real r3A46#2 = RMul(realLit3A28,r3A45);
      real r3A47#2 = r37AA;
      real r3A48#1 = RMul(realLit3A28,r3A47);
      real r3A49#2 = r37B2;
      real r3A4A#2 = RMul(realLit3A28,r3A49);
      real r3A4B#2 = r37E5;
      real r3A4C#2 = RMul(realLit3A28,r3A4B);
      real r3A4D#1 = r37EA;
      real r3A4E#3 = RMul(realLit3A28,r3A4D);
      real r3A4F#2 = r37EF;
      real r3A50#1 = RMul(realLit3A33,r3A4F);
      real r3A51#2 = r3819;
      real r3A52#2 = RMul(realLit3A28,r3A51);
      real r3A53#2 = r381E;
      real r3A54#1 = RMul(realLit3A38,r3A53);
      real r3A55#1 = r3823;
      real r3A56#3 = RMul(realLit3A28,r3A55);
      real r3A57#2 = RAdd(r3A46,r3A48);
      real r3A58#1 = RAdd(r3A57,r3A4A);
      real r3A59#1 = RAdd(r3A58,r3A4C);
      real r3A5A#1 = RAdd(r3A59,r3A4E);
      real r3A5B#1 = RAdd(r3A5A,r3A50);
      real r3A5C#1 = RAdd(r3A5B,r3A52);
      real r3A5D#1 = RAdd(r3A5C,r3A54);
      real r3A5E#1 = RAdd(r3A5D,r3A56);
      real r3A5F#1 = r37BB;
      real r3A60#2 = RMul(realLit3A28,r3A5F);
      real r3A61#2 = r37C3;
      real r3A62#1 = RMul(realLit3A28,r3A61);
      real r3A63#2 = r37CB;
      real r3A64#2 = RMul(realLit3A28,r3A63);
      real r3A65#2 = r37F5;
      real r3A66#2 = RMul(realLit3A28,r3A65);
      real r3A67#1 = r37FA;
      real r3A68#3 = RMul(realLit3A28,r3A67);
      real r3A69#2 = r37FF;
      real r3A6A#1 = RMul(realLit3A33,r3A69);
      real r3A6B#2 = r3829;
      real r3A6C#2 = RMul(realLit3A28,r3A6B);
      real r3A6D#2 = r382E;
      real r3A6E#1 = RMul(realLit3A38,r3A6D);
      real r3A6F#1 = r3833;
      real r3A70#3 = RMul(realLit3A28,r3A6F);
      real r3A71#2 = RAdd(r3A60,r3A62);
      real r3A72#1 = RAdd(r3A71,r3A64);
      real r3A73#1 = RAdd(r3A72,r3A66);
      real r3A74#1 = RAdd(r3A73,r3A68);
      real r3A75#1 = RAdd(r3A74,r3A6A);
      real r3A76#1 = RAdd(r3A75,r3A6C);
      real r3A77#1 = RAdd(r3A76,r3A6E);
      real r3A78#1 = RAdd(r3A77,r3A70);
      real r3A7A#1 = RMul(realLit3A38,r3A2D);
      real r3A7B#2 = RMul(realLit3A28,r3A34);
      real r3A7C#1 = RMul(realLit3A33,r3A36);
      real r3A7D#2 = RMul(realLit3A28,r3A39);
      real r3A7E#1 = RAdd(r3A3D,r3A7A);
      real r3A7F#1 = RAdd(r3A7E,r3A30);
      real r3A80#1 = RAdd(r3A7F,r3A32);
      real r3A81#1 = RAdd(r3A80,r3A7B);
      real r3A82#1 = RAdd(r3A81,r3A7C);
      real r3A83#1 = RAdd(r3A82,r3A7D);
      real r3A84#1 = RAdd(r3A83,r3A3C);
      real r3A85#1 = RMul(realLit3A38,r3A49);
      real r3A86#2 = RMul(realLit3A28,r3A4F);
      real r3A87#1 = RMul(realLit3A33,r3A51);
      real r3A88#2 = RMul(realLit3A28,r3A53);
      real r3A89#1 = RAdd(r3A57,r3A85);
      real r3A8A#1 = RAdd(r3A89,r3A4C);
      real r3A8B#1 = RAdd(r3A8A,r3A4E);
      real r3A8C#1 = RAdd(r3A8B,r3A86);
      real r3A8D#1 = RAdd(r3A8C,r3A87);
      real r3A8E#1 = RAdd(r3A8D,r3A88);
      real r3A8F#1 = RAdd(r3A8E,r3A56);
      real r3A90#1 = RMul(realLit3A38,r3A63);
      real r3A91#2 = RMul(realLit3A28,r3A69);
      real r3A92#1 = RMul(realLit3A33,r3A6B);
      real r3A93#2 = RMul(realLit3A28,r3A6D);
      real r3A94#1 = RAdd(r3A71,r3A90);
      real r3A95#1 = RAdd(r3A94,r3A66);
      real r3A96#1 = RAdd(r3A95,r3A68);
      real r3A97#1 = RAdd(r3A96,r3A91);
      real r3A98#1 = RAdd(r3A97,r3A92);
      real r3A99#1 = RAdd(r3A98,r3A93);
      real r3A9A#1 = RAdd(r3A99,r3A70);
      real r3A9C#1 = RMul(realLit3A33,r3A2B);
      real r3A9D#1 = RMul(realLit3A38,r3A2F);
      real r3A9E#1 = RAdd(r3A2A,r3A9C);
      real r3A9F#1 = RAdd(r3A9E,r3A2E);
      real r3AA0#1 = RAdd(r3A9F,r3A9D);
      real r3AA1#1 = RAdd(r3AA0,r3A32);
      real r3AA2#1 = RAdd(r3AA1,r3A7B);
      real r3AA3#1 = RAdd(r3AA2,r3A37);
      real r3AA4#1 = RAdd(r3AA3,r3A7D);
      real r3AA5#1 = RAdd(r3AA4,r3A3C);
      real r3AA6#1 = RMul(realLit3A33,r3A47);
      real r3AA7#1 = RMul(realLit3A38,r3A4B);
      real r3AA8#1 = RAdd(r3A46,r3AA6);
      real r3AA9#1 = RAdd(r3AA8,r3A4A);
      real r3AAA#1 = RAdd(r3AA9,r3AA7);
      real r3AAB#1 = RAdd(r3AAA,r3A4E);
      real r3AAC#1 = RAdd(r3AAB,r3A86);
      real r3AAD#1 = RAdd(r3AAC,r3A52);
      real r3AAE#1 = RAdd(r3AAD,r3A88);
      real r3AAF#1 = RAdd(r3AAE,r3A56);
      real r3AB0#1 = RMul(realLit3A33,r3A61);
      real r3AB1#1 = RMul(realLit3A38,r3A65);
      real r3AB2#1 = RAdd(r3A60,r3AB0);
      real r3AB3#1 = RAdd(r3AB2,r3A64);
      real r3AB4#1 = RAdd(r3AB3,r3AB1);
      real r3AB5#1 = RAdd(r3AB4,r3A68);
      real r3AB6#1 = RAdd(r3AB5,r3A91);
      real r3AB7#1 = RAdd(r3AB6,r3A6C);
      real r3AB8#1 = RAdd(r3AB7,r3A93);
      real r3AB9#1 = RAdd(r3AB8,r3A70);
      real realLit3B51#1 = 0.2e1;
      real op1_e3_l_213B50#9 = RMul(realLit3B51,op1_e3_l_193A24);
      real varAcc3B57#1 = VIndex<3,0>(xn3B56);
      real varAcc3B58#1 = VIndex<3,1>(xn3B56);
      real varAcc3B59#1 = VIndex<3,2>(xn3B56);
      real coeff3B5A#3 = -0.1e1;
      real iden3B5B#1 = varAcc3B57;
      real one3B5C#11 = 0.1e1;
      real prod3B5D#2 = RMul(one3B5C,one3B5C);
      real prod3B5E#2 = RMul(iden3B5B,prod3B5D);
      real iden3B5F#1 = varAcc3B58;
      real prod3B60#1 = RMul(iden3B5F,one3B5C);
      real prod3B61#2 = RMul(one3B5C,prod3B60);
      real iden3B62#1 = varAcc3B59;
      real prod3B63#1 = RMul(one3B5C,iden3B62);
      real prod3B64#2 = RMul(one3B5C,prod3B63);
      real prod3B65#1 = RMul(one3B5C,prod3B5D);
      real mult3B66#1 = RMul(one3B5C,prod3B65);
      real mult3B67#1 = RMul(coeff3B5A,prod3B64);
      real mult3B68#1 = RMul(coeff3B5A,prod3B61);
      real mult3B69#1 = RMul(coeff3B5A,prod3B5E);
      real sum3B6A#1 = RAdd(mult3B68,mult3B69);
      real sum3B6B#1 = RAdd(mult3B67,sum3B6A);
      real sum3B6C#1 = RAdd(mult3B66,sum3B6B);
      real intermediate3B6D#2 = sum3B6C;
      real basisEval3B6E#2 = RMul(one3B5C,prod3B5E);
      real basisEval3B6F#2 = RMul(one3B5C,prod3B61);
      real basisEval3B70#2 = RMul(one3B5C,prod3B64);
      real r3B8F#1 = dof_load35B2;
      real r3B90#3 = intermediate3B6D;
      real r3B91#1 = RMul(r3B8F,r3B90);
      real r3B92#1 = dof_load35BB;
      real r3B93#3 = basisEval3B6E;
      real r3B94#1 = RMul(r3B92,r3B93);
      real r3B95#1 = dof_load35C4;
      real r3B96#3 = basisEval3B6F;
      real r3B97#1 = RMul(r3B95,r3B96);
      real r3B98#1 = dof_load35CD;
      real r3B99#3 = basisEval3B70;
      real r3B9A#1 = RMul(r3B98,r3B99);
      real r3B9B#1 = RAdd(r3B91,r3B94);
      real r3B9C#1 = RAdd(r3B9B,r3B97);
      real r3B9D#1 = RAdd(r3B9C,r3B9A);
      real r3B9E#1 = dof_load35B3;
      real r3B9F#1 = RMul(r3B9E,r3B90);
      real r3BA0#1 = dof_load35BC;
      real r3BA1#1 = RMul(r3BA0,r3B93);
      real r3BA2#1 = dof_load35C5;
      real r3BA3#1 = RMul(r3BA2,r3B96);
      real r3BA4#1 = dof_load35CE;
      real r3BA5#1 = RMul(r3BA4,r3B99);
      real r3BA6#1 = RAdd(r3B9F,r3BA1);
      real r3BA7#1 = RAdd(r3BA6,r3BA3);
      real r3BA8#1 = RAdd(r3BA7,r3BA5);
      real r3BA9#1 = dof_load35B4;
      real r3BAA#1 = RMul(r3BA9,r3B90);
      real r3BAB#1 = dof_load35BD;
      real r3BAC#1 = RMul(r3BAB,r3B93);
      real r3BAD#1 = dof_load35C6;
      real r3BAE#1 = RMul(r3BAD,r3B96);
      real r3BAF#1 = dof_load35CF;
      real r3BB0#1 = RMul(r3BAF,r3B99);
      real r3BB1#1 = RAdd(r3BAA,r3BAC);
      real r3BB2#1 = RAdd(r3BB1,r3BAE);
      real r3BB3#1 = RAdd(r3BB2,r3BB0);
      tensor[3] probe_l_223B8E#1 = <tensor[3]>[r3B9D,r3BA8,r3BB3];
      real r3BDC#1 = r3A44;
      real r3BDD#1 = RDiv(r3BDC,op1_e3_l_213B50);
      real r3BDE#1 = r3A5E;
      real r3BDF#1 = RDiv(r3BDE,op1_e3_l_213B50);
      real r3BE0#1 = r3A78;
      real r3BE1#1 = RDiv(r3BE0,op1_e3_l_213B50);
      tensor[3] tensor3BE2#2 = <tensor[3]>[r3BDD,r3BDF,r3BE1];
      real r3BE3#1 = r3A84;
      real r3BE4#1 = RDiv(r3BE3,op1_e3_l_213B50);
      real r3BE5#1 = r3A8F;
      real r3BE6#1 = RDiv(r3BE5,op1_e3_l_213B50);
      real r3BE7#1 = r3A9A;
      real r3BE8#1 = RDiv(r3BE7,op1_e3_l_213B50);
      tensor[3] tensor3BE9#2 = <tensor[3]>[r3BE4,r3BE6,r3BE8];
      real r3BEA#1 = r3AA5;
      real r3BEB#1 = RDiv(r3BEA,op1_e3_l_213B50);
      real r3BEC#1 = r3AAF;
      real r3BED#1 = RDiv(r3BEC,op1_e3_l_213B50);
      real r3BEE#1 = r3AB9;
      real r3BEF#1 = RDiv(r3BEE,op1_e3_l_213B50);
      tensor[3] tensor3BF0#2 = <tensor[3]>[r3BEB,r3BED,r3BEF];
      tensor[3] op1_e3_l_243C08#3 = VSub<3>(probe_l_223B8E,pos3576);
      tensor[3] projParam3C0C#1 = tensor3BE2;
      real vdot3C0D#1 = VDot<3>(projParam3C0C,op1_e3_l_243C08);
      tensor[3] projParam3C0E#1 = tensor3BE9;
      real vdot3C0F#1 = VDot<3>(projParam3C0E,op1_e3_l_243C08);
      tensor[3] projParam3C10#1 = tensor3BF0;
      real vdot3C11#1 = VDot<3>(projParam3C10,op1_e3_l_243C08);
      tensor[3] op1_e3_l_253C0B#1 = <tensor[3]>[vdot3C0D,vdot3C0F,vdot3C11];
      tensor[3] xn3C1A#4 = VSub<3>(xn3B56,op1_e3_l_253C0B);
      real _t3C1D#2 = 0.1e-7;
      real _t3C1F#1 = RMul(_t3C1D,_t3C1D);
      real r3C23#1 = dof_load35B2;
      real r3C24#3 = intermediate3B6D;
      real r3C25#1 = RMul(r3C23,r3C24);
      real r3C26#1 = dof_load35BB;
      real r3C27#3 = basisEval3B6E;
      real r3C28#1 = RMul(r3C26,r3C27);
      real r3C29#1 = dof_load35C4;
      real r3C2A#3 = basisEval3B6F;
      real r3C2B#1 = RMul(r3C29,r3C2A);
      real r3C2C#1 = dof_load35CD;
      real r3C2D#3 = basisEval3B70;
      real r3C2E#1 = RMul(r3C2C,r3C2D);
      real r3C2F#1 = RAdd(r3C25,r3C28);
      real r3C30#1 = RAdd(r3C2F,r3C2B);
      real r3C31#1 = RAdd(r3C30,r3C2E);
      real r3C32#1 = dof_load35B3;
      real r3C33#1 = RMul(r3C32,r3C24);
      real r3C34#1 = dof_load35BC;
      real r3C35#1 = RMul(r3C34,r3C27);
      real r3C36#1 = dof_load35C5;
      real r3C37#1 = RMul(r3C36,r3C2A);
      real r3C38#1 = dof_load35CE;
      real r3C39#1 = RMul(r3C38,r3C2D);
      real r3C3A#1 = RAdd(r3C33,r3C35);
      real r3C3B#1 = RAdd(r3C3A,r3C37);
      real r3C3C#1 = RAdd(r3C3B,r3C39);
      real r3C3D#1 = dof_load35B4;
      real r3C3E#1 = RMul(r3C3D,r3C24);
      real r3C3F#1 = dof_load35BD;
      real r3C40#1 = RMul(r3C3F,r3C27);
      real r3C41#1 = dof_load35C6;
      real r3C42#1 = RMul(r3C41,r3C2A);
      real r3C43#1 = dof_load35CF;
      real r3C44#1 = RMul(r3C43,r3C2D);
      real r3C45#1 = RAdd(r3C3E,r3C40);
      real r3C46#1 = RAdd(r3C45,r3C42);
      real r3C47#1 = RAdd(r3C46,r3C44);
      tensor[3] probe_l_303C22#1 = <tensor[3]>[r3C31,r3C3C,r3C47];
      tensor[3] op1_e3_l_323C6F#3 = VSub<3>(probe_l_303C22,pos3576);
      tensor[3] projParam3C73#1 = tensor3BE2;
      real vdot3C74#1 = VDot<3>(projParam3C73,op1_e3_l_323C6F);
      tensor[3] projParam3C75#1 = tensor3BE9;
      real vdot3C76#1 = VDot<3>(projParam3C75,op1_e3_l_323C6F);
      tensor[3] projParam3C77#1 = tensor3BF0;
      real vdot3C78#1 = VDot<3>(projParam3C77,op1_e3_l_323C6F);
      tensor[3] op1_e3_l_483C72#2 = <tensor[3]>[vdot3C74,vdot3C76,vdot3C78];
      real _t3C81#1 = VDot<3>(op1_e3_l_483C72,op1_e3_l_483C72);
      bool _t3C84#1 = GTE<real>(_t3C1F,_t3C81);
      if _t3C84 then goto ASSIGN3C88 else goto JOIN3CB3
    ASSIGN3C88:  preds = [COND3C86]
      real _t3C87#4 = 0.1e1;
      real _t3C89#4 = 0.1e-8;
      real _t3C8B#1 = RAdd(_t3C87,_t3C89);
      tensor[3] _t3C8E#1 = <tensor[3]>[_t3C87,_t3C87,_t3C87];
      real _t3C90#1 = VDot<3>(_t3C8E,xn3C1A);
      bool _t3C93#1 = GT<real>(_t3C8B,_t3C90);
      tensor[3] _t3C95#1 = <tensor[3]>[_t3C89,_t3C89,_t3C89];
      tensor[3] _t3C97#3 = VAdd<3>(_t3C95,xn3C1A);
      real _t3C9A#1 = VIndex<3,0>(_t3C97);
      real _t3C9C#3 = -0.e0;
      bool _t3C9E#1 = GT<real>(_t3C9A,_t3C9C);
      real _t3CA0#1 = VIndex<3,1>(_t3C97);
      bool _t3CA2#1 = GT<real>(_t3CA0,_t3C9C);
      real _t3CA4#1 = VIndex<3,2>(_t3C97);
      bool _t3CA6#1 = GT<real>(_t3CA4,_t3C9C);
      bool _t3CA8#1 = BAnd(_t3CA2,_t3CA6);
      bool _t3CAA#1 = BAnd(_t3C9E,_t3CA8);
      bool _t3CAC#1 = BAnd(_t3C93,_t3CAA);
      if _t3CAC then goto ASSIGN3CB0 else goto JOIN3CB2
    ASSIGN3CB0:  preds = [COND3CAE]
      femData:MeshPos _t3CAF#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3575,cellItter3580,xn3C1A,pos3576);
      return _t3CAF
      goto JOIN3CB2
    JOIN3CB2:  preds = [*RETURN(_t3CAF)3CB1,COND3CAE]
      goto JOIN3CB3
    JOIN3CB3:  preds = [JOIN3CB2,COND3C86]
      goto FOREACH3587
    NEXT3CB5:  preds = [FOREACH3587]
      goto FOREACH3581
    ASSIGN3CB7:  preds = [FOREACH3581]
      string _t3CB6#1 = "Bad end 2";
      string _t3CB8#1 = "\n";
      Print<[string,string]>(_t3CB6,_t3CB8);
      femData:MeshPos _t3CBB#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3575);
      return _t3CBB
}
  function int[2] nextCell44E13 (int faceIdx4E14#1, int cell4E15#1, femData:Mesh mesh4E16#1) {
    ENTRY4E17:  preds = []
      int _t4E18#1 = 8;
      int _t4E1A#1 = IMul(cell4E15,_t4E18);
      int _t4E1C#1 = 2;
      int _t4E1E#1 = IMul(faceIdx4E14,_t4E1C);
      int _t4E20#1 = IAdd(_t4E1A,_t4E1E);
      int[2] _t4E22#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh4E16,_t4E20);
      return _t4E22
}
  function femData:MeshPos posMove40B9 (femData:MeshPos x40BA#6, tensor[3] dPos40BB#7) {
    ENTRY40BC:  preds = []
      femData:Mesh meshData40BD#1 = globals.meshData351F;
      int timeSteps40BF#1 = globals.timeSteps3522;
      real timeEps40C1#1 = globals.timeEps3523;
      bool _t40C3#1 = ExtractFemItem<bool,Valid(MeshPos)>(x40BA);
      bool _t40C5#1 = BNot(_t40C3);
      if _t40C5 then goto RETURN(x40BA)40C8 else goto JOIN40C9
    RETURN(x40BA)40C8:  preds = [COND40C7]
      return x40BA
      goto JOIN40C9
    JOIN40C9:  preds = [*RETURN(x40BA)40C8,COND40C7]
      real time40CA#23 = 0.1e1;
      int _t40CC#6 = 0;
      int[] _t40CE#1 = Range(_t40CC,timeSteps40BF);
    FOREACH40D1:  preds = [ASSIGN40CF,NEXT471F]
      foreach (i40D0 in _t40CE) on exit goto ASSIGN4F6B
        femData:MeshPos cmp40D3#6 = phi(x40BA,cmp471A)
        real time46E9#13 = phi(time40CA,time471C)
      femData:Mesh _t40D2#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp40D3);
      int _t40D5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp40D3);
      femData:MeshCell _t40D7#2 = LoadFem<femData:MeshCell>(_t40D2,_t40D5);
      femData:Mesh _t40D9#17 = ExtractFem<femData:Mesh,femData:MeshCell>(_t40D7);
      int _t40DB#2 = ExtractFemItem<int,CellIndex(MeshCell)>(_t40D7);
      tensor[3] _t40DD#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp40D3);
      int ilit40E0#1 = 4;
      int mulRes40E1#4 = IMul(_t40DB,ilit40E0);
      int addRes40E3#1 = mulRes40E1;
      int idx40E4#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E3);
      int ilit40E5#1 = 1;
      int addRes40E6#1 = IAdd(mulRes40E1,ilit40E5);
      int idx40E7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E6);
      int ilit40E8#1 = 2;
      int addRes40E9#1 = IAdd(mulRes40E1,ilit40E8);
      int idx40EA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E9);
      int ilit40EB#1 = 3;
      int addRes40EC#1 = IAdd(mulRes40E1,ilit40EB);
      int idx40ED#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40EC);
      int ilit4101#4 = 3;
      int idx4102#1 = idx40E4;
      int mulRes4103#3 = IMul(ilit4101,idx4102);
      int addRes4104#1 = mulRes4103;
      int ilit4105#4 = 1;
      int addRes4106#1 = IAdd(ilit4105,mulRes4103);
      int ilit4107#4 = 2;
      int addRes4108#1 = IAdd(ilit4107,mulRes4103);
      real dof_load4109#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4104);
      real dof_load410A#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4106);
      real dof_load410B#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4108);
      int idx410D#1 = idx40E7;
      int mulRes410E#3 = IMul(ilit4101,idx410D);
      int addRes410F#1 = mulRes410E;
      int addRes4110#1 = IAdd(ilit4105,mulRes410E);
      int addRes4111#1 = IAdd(ilit4107,mulRes410E);
      real dof_load4112#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes410F);
      real dof_load4113#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4110);
      real dof_load4114#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4111);
      int idx4116#1 = idx40EA;
      int mulRes4117#3 = IMul(ilit4101,idx4116);
      int addRes4118#1 = mulRes4117;
      int addRes4119#1 = IAdd(ilit4105,mulRes4117);
      int addRes411A#1 = IAdd(ilit4107,mulRes4117);
      real dof_load411B#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4118);
      real dof_load411C#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4119);
      real dof_load411D#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes411A);
      int idx411F#1 = idx40ED;
      int mulRes4120#3 = IMul(ilit4101,idx411F);
      int addRes4121#1 = mulRes4120;
      int addRes4122#1 = IAdd(ilit4105,mulRes4120);
      int addRes4123#1 = IAdd(ilit4107,mulRes4120);
      real dof_load4124#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4121);
      real dof_load4125#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4122);
      real dof_load4126#8 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4123);
      real coeff4157#1 = -0.1e1;
      real one4158#4 = 0.1e1;
      real prod4159#1 = RMul(one4158,one4158);
      real prod415A#2 = RMul(one4158,prod4159);
      real basisEval415B#12 = RMul(coeff4157,prod415A);
      real basisEval415C#12 = RMul(one4158,prod415A);
      real basisEval415D#24 = 0.e0;
      real r4172#3 = dof_load4109;
      real r4173#3 = basisEval415B;
      real r4174#1 = RMul(r4172,r4173);
      real r4175#3 = dof_load4112;
      real r4176#3 = basisEval415C;
      real r4177#1 = RMul(r4175,r4176);
      real r4178#3 = dof_load411B;
      real r4179#3 = basisEval415D;
      real r417A#1 = RMul(r4178,r4179);
      real r417B#3 = dof_load4124;
      real r417C#3 = basisEval415D;
      real r417D#1 = RMul(r417B,r417C);
      real r417E#1 = RAdd(r4174,r4177);
      real r417F#1 = RAdd(r417E,r417A);
      real r4180#2 = RAdd(r417F,r417D);
      real r4181#3 = basisEval415B;
      real r4182#1 = RMul(r4172,r4181);
      real r4183#3 = basisEval415D;
      real r4184#1 = RMul(r4175,r4183);
      real r4185#3 = basisEval415C;
      real r4186#1 = RMul(r4178,r4185);
      real r4187#3 = basisEval415D;
      real r4188#1 = RMul(r417B,r4187);
      real r4189#1 = RAdd(r4182,r4184);
      real r418A#1 = RAdd(r4189,r4186);
      real r418B#2 = RAdd(r418A,r4188);
      real r418C#3 = basisEval415B;
      real r418D#1 = RMul(r4172,r418C);
      real r418E#3 = basisEval415D;
      real r418F#1 = RMul(r4175,r418E);
      real r4190#3 = basisEval415D;
      real r4191#1 = RMul(r4178,r4190);
      real r4192#3 = basisEval415C;
      real r4193#1 = RMul(r417B,r4192);
      real r4194#1 = RAdd(r418D,r418F);
      real r4195#1 = RAdd(r4194,r4191);
      real r4196#2 = RAdd(r4195,r4193);
      real r4198#3 = dof_load410A;
      real r4199#1 = RMul(r4198,r4173);
      real r419A#3 = dof_load4113;
      real r419B#1 = RMul(r419A,r4176);
      real r419C#3 = dof_load411C;
      real r419D#1 = RMul(r419C,r4179);
      real r419E#3 = dof_load4125;
      real r419F#1 = RMul(r419E,r417C);
      real r41A0#1 = RAdd(r4199,r419B);
      real r41A1#1 = RAdd(r41A0,r419D);
      real r41A2#2 = RAdd(r41A1,r419F);
      real r41A3#1 = RMul(r4198,r4181);
      real r41A4#1 = RMul(r419A,r4183);
      real r41A5#1 = RMul(r419C,r4185);
      real r41A6#1 = RMul(r419E,r4187);
      real r41A7#1 = RAdd(r41A3,r41A4);
      real r41A8#1 = RAdd(r41A7,r41A5);
      real r41A9#2 = RAdd(r41A8,r41A6);
      real r41AA#1 = RMul(r4198,r418C);
      real r41AB#1 = RMul(r419A,r418E);
      real r41AC#1 = RMul(r419C,r4190);
      real r41AD#1 = RMul(r419E,r4192);
      real r41AE#1 = RAdd(r41AA,r41AB);
      real r41AF#1 = RAdd(r41AE,r41AC);
      real r41B0#2 = RAdd(r41AF,r41AD);
      real r41B2#3 = dof_load410B;
      real r41B3#1 = RMul(r41B2,r4173);
      real r41B4#3 = dof_load4114;
      real r41B5#1 = RMul(r41B4,r4176);
      real r41B6#3 = dof_load411D;
      real r41B7#1 = RMul(r41B6,r4179);
      real r41B8#3 = dof_load4126;
      real r41B9#1 = RMul(r41B8,r417C);
      real r41BA#1 = RAdd(r41B3,r41B5);
      real r41BB#1 = RAdd(r41BA,r41B7);
      real r41BC#2 = RAdd(r41BB,r41B9);
      real r41BD#1 = RMul(r41B2,r4181);
      real r41BE#1 = RMul(r41B4,r4183);
      real r41BF#1 = RMul(r41B6,r4185);
      real r41C0#1 = RMul(r41B8,r4187);
      real r41C1#1 = RAdd(r41BD,r41BE);
      real r41C2#1 = RAdd(r41C1,r41BF);
      real r41C3#2 = RAdd(r41C2,r41C0);
      real r41C4#1 = RMul(r41B2,r418C);
      real r41C5#1 = RMul(r41B4,r418E);
      real r41C6#1 = RMul(r41B6,r4190);
      real r41C7#1 = RMul(r41B8,r4192);
      real r41C8#1 = RAdd(r41C4,r41C5);
      real r41C9#1 = RAdd(r41C8,r41C6);
      real r41CA#2 = RAdd(r41C9,r41C7);
      real realLit4229#9 = 0.e0;
      real r422A#3 = r4180;
      real r422B#3 = RMul(realLit4229,r422A);
      real r422C#3 = r41A2;
      real r422D#3 = RMul(realLit4229,r422C);
      real r422E#3 = r41BC;
      real r422F#5 = RMul(realLit4229,r422E);
      real r4230#3 = RAdd(r422B,r422D);
      real r4231#3 = RAdd(r4230,r422F);
      real r4232#3 = r418B;
      real r4233#3 = RMul(realLit4229,r4232);
      real r4234#3 = r41A9;
      real r4235#3 = RMul(realLit4229,r4234);
      real r4236#3 = r41C3;
      real r4237#5 = RMul(realLit4229,r4236);
      real r4238#3 = RAdd(r4233,r4235);
      real r4239#3 = RAdd(r4238,r4237);
      real r423A#3 = r4196;
      real r423B#3 = RMul(realLit4229,r423A);
      real r423C#3 = r41B0;
      real r423D#3 = RMul(realLit4229,r423C);
      real r423E#3 = r41CA;
      real r423F#5 = RMul(realLit4229,r423E);
      real r4240#3 = RAdd(r423B,r423D);
      real r4241#3 = RAdd(r4240,r423F);
      real realLit4243#9 = -0.1e1;
      real r4244#1 = RMul(realLit4243,r422E);
      real r4245#1 = RAdd(r4230,r4244);
      real r4246#1 = RMul(realLit4243,r4236);
      real r4247#1 = RAdd(r4238,r4246);
      real r4248#1 = RMul(realLit4243,r423E);
      real r4249#1 = RAdd(r4240,r4248);
      real realLit424B#9 = 0.1e1;
      real r424C#1 = RMul(realLit424B,r422C);
      real r424D#1 = RAdd(r422B,r424C);
      real r424E#1 = RAdd(r424D,r422F);
      real r424F#1 = RMul(realLit424B,r4234);
      real r4250#1 = RAdd(r4233,r424F);
      real r4251#1 = RAdd(r4250,r4237);
      real r4252#1 = RMul(realLit424B,r423C);
      real r4253#1 = RAdd(r423B,r4252);
      real r4254#1 = RAdd(r4253,r423F);
      real r4257#1 = RMul(realLit424B,r422E);
      real r4258#1 = RAdd(r4230,r4257);
      real r4259#1 = RMul(realLit424B,r4236);
      real r425A#1 = RAdd(r4238,r4259);
      real r425B#1 = RMul(realLit424B,r423E);
      real r425C#1 = RAdd(r4240,r425B);
      real r425E#1 = RMul(realLit4243,r422A);
      real r425F#1 = RAdd(r425E,r422D);
      real r4260#1 = RAdd(r425F,r422F);
      real r4261#1 = RMul(realLit4243,r4232);
      real r4262#1 = RAdd(r4261,r4235);
      real r4263#1 = RAdd(r4262,r4237);
      real r4264#1 = RMul(realLit4243,r423A);
      real r4265#1 = RAdd(r4264,r423D);
      real r4266#1 = RAdd(r4265,r423F);
      real r4269#1 = RMul(realLit4243,r422C);
      real r426A#1 = RAdd(r422B,r4269);
      real r426B#1 = RAdd(r426A,r422F);
      real r426C#1 = RMul(realLit4243,r4234);
      real r426D#1 = RAdd(r4233,r426C);
      real r426E#1 = RAdd(r426D,r4237);
      real r426F#1 = RMul(realLit4243,r423C);
      real r4270#1 = RAdd(r423B,r426F);
      real r4271#1 = RAdd(r4270,r423F);
      real r4273#1 = RMul(realLit424B,r422A);
      real r4274#1 = RAdd(r4273,r422D);
      real r4275#1 = RAdd(r4274,r422F);
      real r4276#1 = RMul(realLit424B,r4232);
      real r4277#1 = RAdd(r4276,r4235);
      real r4278#1 = RAdd(r4277,r4237);
      real r4279#1 = RMul(realLit424B,r423A);
      real r427A#1 = RAdd(r4279,r423D);
      real r427B#1 = RAdd(r427A,r423F);
      real r42D6#9 = r4180;
      real r42D7#3 = r4231;
      real r42D8#1 = RMul(r42D6,r42D7);
      real r42D9#9 = r41A2;
      real r42DA#3 = r4258;
      real r42DB#1 = RMul(r42D9,r42DA);
      real r42DC#9 = r41BC;
      real r42DD#3 = r426B;
      real r42DE#1 = RMul(r42DC,r42DD);
      real r42DF#1 = RAdd(r42D8,r42DB);
      real r42E0#1 = RAdd(r42DF,r42DE);
      real r42E1#3 = r4239;
      real r42E2#1 = RMul(r42D6,r42E1);
      real r42E3#3 = r425A;
      real r42E4#1 = RMul(r42D9,r42E3);
      real r42E5#3 = r426E;
      real r42E6#1 = RMul(r42DC,r42E5);
      real r42E7#1 = RAdd(r42E2,r42E4);
      real r42E8#1 = RAdd(r42E7,r42E6);
      real r42E9#3 = r4241;
      real r42EA#1 = RMul(r42D6,r42E9);
      real r42EB#3 = r425C;
      real r42EC#1 = RMul(r42D9,r42EB);
      real r42ED#3 = r4271;
      real r42EE#1 = RMul(r42DC,r42ED);
      real r42EF#1 = RAdd(r42EA,r42EC);
      real r42F0#1 = RAdd(r42EF,r42EE);
      real r42F2#3 = r4245;
      real r42F3#1 = RMul(r42D6,r42F2);
      real r42F4#3 = r4231;
      real r42F5#1 = RMul(r42D9,r42F4);
      real r42F6#3 = r4275;
      real r42F7#1 = RMul(r42DC,r42F6);
      real r42F8#1 = RAdd(r42F3,r42F5);
      real r42F9#1 = RAdd(r42F8,r42F7);
      real r42FA#3 = r4247;
      real r42FB#1 = RMul(r42D6,r42FA);
      real r42FC#3 = r4239;
      real r42FD#1 = RMul(r42D9,r42FC);
      real r42FE#3 = r4278;
      real r42FF#1 = RMul(r42DC,r42FE);
      real r4300#1 = RAdd(r42FB,r42FD);
      real r4301#1 = RAdd(r4300,r42FF);
      real r4302#3 = r4249;
      real r4303#1 = RMul(r42D6,r4302);
      real r4304#3 = r4241;
      real r4305#1 = RMul(r42D9,r4304);
      real r4306#3 = r427B;
      real r4307#1 = RMul(r42DC,r4306);
      real r4308#1 = RAdd(r4303,r4305);
      real r4309#1 = RAdd(r4308,r4307);
      real r430B#3 = r424E;
      real r430C#1 = RMul(r42D6,r430B);
      real r430D#3 = r4260;
      real r430E#1 = RMul(r42D9,r430D);
      real r430F#3 = r4231;
      real r4310#1 = RMul(r42DC,r430F);
      real r4311#1 = RAdd(r430C,r430E);
      real r4312#1 = RAdd(r4311,r4310);
      real r4313#3 = r4251;
      real r4314#1 = RMul(r42D6,r4313);
      real r4315#3 = r4263;
      real r4316#1 = RMul(r42D9,r4315);
      real r4317#3 = r4239;
      real r4318#1 = RMul(r42DC,r4317);
      real r4319#1 = RAdd(r4314,r4316);
      real r431A#1 = RAdd(r4319,r4318);
      real r431B#3 = r4254;
      real r431C#1 = RMul(r42D6,r431B);
      real r431D#3 = r4266;
      real r431E#1 = RMul(r42D9,r431D);
      real r431F#3 = r4241;
      real r4320#1 = RMul(r42DC,r431F);
      real r4321#1 = RAdd(r431C,r431E);
      real r4322#1 = RAdd(r4321,r4320);
      real r4325#9 = r418B;
      real r4326#1 = RMul(r4325,r42D7);
      real r4327#9 = r41A9;
      real r4328#1 = RMul(r4327,r42DA);
      real r4329#9 = r41C3;
      real r432A#1 = RMul(r4329,r42DD);
      real r432B#1 = RAdd(r4326,r4328);
      real r432C#1 = RAdd(r432B,r432A);
      real r432D#1 = RMul(r4325,r42E1);
      real r432E#1 = RMul(r4327,r42E3);
      real r432F#1 = RMul(r4329,r42E5);
      real r4330#1 = RAdd(r432D,r432E);
      real r4331#1 = RAdd(r4330,r432F);
      real r4332#1 = RMul(r4325,r42E9);
      real r4333#1 = RMul(r4327,r42EB);
      real r4334#1 = RMul(r4329,r42ED);
      real r4335#1 = RAdd(r4332,r4333);
      real r4336#1 = RAdd(r4335,r4334);
      real r4338#1 = RMul(r4325,r42F2);
      real r4339#1 = RMul(r4327,r42F4);
      real r433A#1 = RMul(r4329,r42F6);
      real r433B#1 = RAdd(r4338,r4339);
      real r433C#1 = RAdd(r433B,r433A);
      real r433D#1 = RMul(r4325,r42FA);
      real r433E#1 = RMul(r4327,r42FC);
      real r433F#1 = RMul(r4329,r42FE);
      real r4340#1 = RAdd(r433D,r433E);
      real r4341#1 = RAdd(r4340,r433F);
      real r4342#1 = RMul(r4325,r4302);
      real r4343#1 = RMul(r4327,r4304);
      real r4344#1 = RMul(r4329,r4306);
      real r4345#1 = RAdd(r4342,r4343);
      real r4346#1 = RAdd(r4345,r4344);
      real r4348#1 = RMul(r4325,r430B);
      real r4349#1 = RMul(r4327,r430D);
      real r434A#1 = RMul(r4329,r430F);
      real r434B#1 = RAdd(r4348,r4349);
      real r434C#1 = RAdd(r434B,r434A);
      real r434D#1 = RMul(r4325,r4313);
      real r434E#1 = RMul(r4327,r4315);
      real r434F#1 = RMul(r4329,r4317);
      real r4350#1 = RAdd(r434D,r434E);
      real r4351#1 = RAdd(r4350,r434F);
      real r4352#1 = RMul(r4325,r431B);
      real r4353#1 = RMul(r4327,r431D);
      real r4354#1 = RMul(r4329,r431F);
      real r4355#1 = RAdd(r4352,r4353);
      real r4356#1 = RAdd(r4355,r4354);
      real r4359#9 = r4196;
      real r435A#1 = RMul(r4359,r42D7);
      real r435B#9 = r41B0;
      real r435C#1 = RMul(r435B,r42DA);
      real r435D#9 = r41CA;
      real r435E#1 = RMul(r435D,r42DD);
      real r435F#1 = RAdd(r435A,r435C);
      real r4360#1 = RAdd(r435F,r435E);
      real r4361#1 = RMul(r4359,r42E1);
      real r4362#1 = RMul(r435B,r42E3);
      real r4363#1 = RMul(r435D,r42E5);
      real r4364#1 = RAdd(r4361,r4362);
      real r4365#1 = RAdd(r4364,r4363);
      real r4366#1 = RMul(r4359,r42E9);
      real r4367#1 = RMul(r435B,r42EB);
      real r4368#1 = RMul(r435D,r42ED);
      real r4369#1 = RAdd(r4366,r4367);
      real r436A#1 = RAdd(r4369,r4368);
      real r436C#1 = RMul(r4359,r42F2);
      real r436D#1 = RMul(r435B,r42F4);
      real r436E#1 = RMul(r435D,r42F6);
      real r436F#1 = RAdd(r436C,r436D);
      real r4370#1 = RAdd(r436F,r436E);
      real r4371#1 = RMul(r4359,r42FA);
      real r4372#1 = RMul(r435B,r42FC);
      real r4373#1 = RMul(r435D,r42FE);
      real r4374#1 = RAdd(r4371,r4372);
      real r4375#1 = RAdd(r4374,r4373);
      real r4376#1 = RMul(r4359,r4302);
      real r4377#1 = RMul(r435B,r4304);
      real r4378#1 = RMul(r435D,r4306);
      real r4379#1 = RAdd(r4376,r4377);
      real r437A#1 = RAdd(r4379,r4378);
      real r437C#1 = RMul(r4359,r430B);
      real r437D#1 = RMul(r435B,r430D);
      real r437E#1 = RMul(r435D,r430F);
      real r437F#1 = RAdd(r437C,r437D);
      real r4380#1 = RAdd(r437F,r437E);
      real r4381#1 = RMul(r4359,r4313);
      real r4382#1 = RMul(r435B,r4315);
      real r4383#1 = RMul(r435D,r4317);
      real r4384#1 = RAdd(r4381,r4382);
      real r4385#1 = RAdd(r4384,r4383);
      real r4386#1 = RMul(r4359,r431B);
      real r4387#1 = RMul(r435B,r431D);
      real r4388#1 = RMul(r435D,r431F);
      real r4389#1 = RAdd(r4386,r4387);
      real r438A#1 = RAdd(r4389,r4388);
      real r4447#1 = dof_load4109;
      real r4448#3 = basisEval415B;
      real r4449#1 = RMul(r4447,r4448);
      real r444A#1 = dof_load4112;
      real r444B#3 = basisEval415C;
      real r444C#1 = RMul(r444A,r444B);
      real r444D#1 = dof_load411B;
      real r444E#3 = basisEval415D;
      real r444F#1 = RMul(r444D,r444E);
      real r4450#1 = dof_load4124;
      real r4451#3 = basisEval415D;
      real r4452#1 = RMul(r4450,r4451);
      real r4453#1 = RAdd(r4449,r444C);
      real r4454#1 = RAdd(r4453,r444F);
      real r4455#1 = RAdd(r4454,r4452);
      real r4456#1 = dof_load410A;
      real r4457#1 = RMul(r4456,r4448);
      real r4458#1 = dof_load4113;
      real r4459#1 = RMul(r4458,r444B);
      real r445A#1 = dof_load411C;
      real r445B#1 = RMul(r445A,r444E);
      real r445C#1 = dof_load4125;
      real r445D#1 = RMul(r445C,r4451);
      real r445E#1 = RAdd(r4457,r4459);
      real r445F#1 = RAdd(r445E,r445B);
      real r4460#1 = RAdd(r445F,r445D);
      real r4461#1 = dof_load410B;
      real r4462#1 = RMul(r4461,r4448);
      real r4463#1 = dof_load4114;
      real r4464#1 = RMul(r4463,r444B);
      real r4465#1 = dof_load411D;
      real r4466#1 = RMul(r4465,r444E);
      real r4467#1 = dof_load4126;
      real r4468#1 = RMul(r4467,r4451);
      real r4469#1 = RAdd(r4462,r4464);
      real r446A#1 = RAdd(r4469,r4466);
      real r446B#1 = RAdd(r446A,r4468);
      tensor[3] probe_l_114446#1 = <tensor[3]>[r4455,r4460,r446B];
      real r4494#1 = dof_load4109;
      real r4495#3 = basisEval415B;
      real r4496#1 = RMul(r4494,r4495);
      real r4497#1 = dof_load4112;
      real r4498#3 = basisEval415D;
      real r4499#1 = RMul(r4497,r4498);
      real r449A#1 = dof_load411B;
      real r449B#3 = basisEval415C;
      real r449C#1 = RMul(r449A,r449B);
      real r449D#1 = dof_load4124;
      real r449E#3 = basisEval415D;
      real r449F#1 = RMul(r449D,r449E);
      real r44A0#1 = RAdd(r4496,r4499);
      real r44A1#1 = RAdd(r44A0,r449C);
      real r44A2#1 = RAdd(r44A1,r449F);
      real r44A3#1 = dof_load410A;
      real r44A4#1 = RMul(r44A3,r4495);
      real r44A5#1 = dof_load4113;
      real r44A6#1 = RMul(r44A5,r4498);
      real r44A7#1 = dof_load411C;
      real r44A8#1 = RMul(r44A7,r449B);
      real r44A9#1 = dof_load4125;
      real r44AA#1 = RMul(r44A9,r449E);
      real r44AB#1 = RAdd(r44A4,r44A6);
      real r44AC#1 = RAdd(r44AB,r44A8);
      real r44AD#1 = RAdd(r44AC,r44AA);
      real r44AE#1 = dof_load410B;
      real r44AF#1 = RMul(r44AE,r4495);
      real r44B0#1 = dof_load4114;
      real r44B1#1 = RMul(r44B0,r4498);
      real r44B2#1 = dof_load411D;
      real r44B3#1 = RMul(r44B2,r449B);
      real r44B4#1 = dof_load4126;
      real r44B5#1 = RMul(r44B4,r449E);
      real r44B6#1 = RAdd(r44AF,r44B1);
      real r44B7#1 = RAdd(r44B6,r44B3);
      real r44B8#1 = RAdd(r44B7,r44B5);
      tensor[3] probe_l_124493#3 = <tensor[3]>[r44A2,r44AD,r44B8];
      real r44E1#1 = dof_load4109;
      real r44E2#3 = basisEval415B;
      real r44E3#1 = RMul(r44E1,r44E2);
      real r44E4#1 = dof_load4112;
      real r44E5#3 = basisEval415D;
      real r44E6#1 = RMul(r44E4,r44E5);
      real r44E7#1 = dof_load411B;
      real r44E8#3 = basisEval415D;
      real r44E9#1 = RMul(r44E7,r44E8);
      real r44EA#1 = dof_load4124;
      real r44EB#3 = basisEval415C;
      real r44EC#1 = RMul(r44EA,r44EB);
      real r44ED#1 = RAdd(r44E3,r44E6);
      real r44EE#1 = RAdd(r44ED,r44E9);
      real r44EF#1 = RAdd(r44EE,r44EC);
      real r44F0#1 = dof_load410A;
      real r44F1#1 = RMul(r44F0,r44E2);
      real r44F2#1 = dof_load4113;
      real r44F3#1 = RMul(r44F2,r44E5);
      real r44F4#1 = dof_load411C;
      real r44F5#1 = RMul(r44F4,r44E8);
      real r44F6#1 = dof_load4125;
      real r44F7#1 = RMul(r44F6,r44EB);
      real r44F8#1 = RAdd(r44F1,r44F3);
      real r44F9#1 = RAdd(r44F8,r44F5);
      real r44FA#1 = RAdd(r44F9,r44F7);
      real r44FB#1 = dof_load410B;
      real r44FC#1 = RMul(r44FB,r44E2);
      real r44FD#1 = dof_load4114;
      real r44FE#1 = RMul(r44FD,r44E5);
      real r44FF#1 = dof_load411D;
      real r4500#1 = RMul(r44FF,r44E8);
      real r4501#1 = dof_load4126;
      real r4502#1 = RMul(r4501,r44EB);
      real r4503#1 = RAdd(r44FC,r44FE);
      real r4504#1 = RAdd(r4503,r4500);
      real r4505#1 = RAdd(r4504,r4502);
      real realLit452E#3 = 0.e0;
      real r452F#3 = r44EF;
      real r4530#3 = RMul(realLit452E,r452F);
      real r4531#3 = r44FA;
      real r4532#3 = RMul(realLit452E,r4531);
      real r4533#3 = r4505;
      real r4534#5 = RMul(realLit452E,r4533);
      real r4535#3 = RAdd(r4530,r4532);
      real r4536#3 = RAdd(r4535,r4534);
      real realLit4537#3 = 0.1e1;
      real r4538#1 = RMul(realLit4537,r4533);
      real r4539#1 = RAdd(r4535,r4538);
      real realLit453A#3 = -0.1e1;
      real r453B#1 = RMul(realLit453A,r4531);
      real r453C#1 = RAdd(r4530,r453B);
      real r453D#1 = RAdd(r453C,r4534);
      tensor[3] tensor453E#1 = <tensor[3]>[r4536,r4539,r453D];
      real r453F#1 = RMul(realLit453A,r4533);
      real r4540#1 = RAdd(r4535,r453F);
      real r4541#1 = RMul(realLit4537,r452F);
      real r4542#1 = RAdd(r4541,r4532);
      real r4543#1 = RAdd(r4542,r4534);
      tensor[3] tensor4544#1 = <tensor[3]>[r4540,r4536,r4543];
      real r4545#1 = RMul(realLit4537,r4531);
      real r4546#1 = RAdd(r4530,r4545);
      real r4547#1 = RAdd(r4546,r4534);
      real r4548#1 = RMul(realLit453A,r452F);
      real r4549#1 = RAdd(r4548,r4532);
      real r454A#1 = RAdd(r4549,r4534);
      tensor[3] tensor454B#1 = <tensor[3]>[r4547,r454A,r4536];
      tensor[3] projParam456D#1 = tensor453E;
      real vdot456E#1 = VDot<3>(probe_l_124493,projParam456D);
      tensor[3] projParam456F#1 = tensor4544;
      real vdot4570#1 = VDot<3>(probe_l_124493,projParam456F);
      tensor[3] projParam4571#1 = tensor454B;
      real vdot4572#1 = VDot<3>(probe_l_124493,projParam4571);
      tensor[3] op1_e3_l_15456C#1 = <tensor[3]>[vdot456E,vdot4570,vdot4572];
      real op1_e3_l_16457B#1 = VDot<3>(probe_l_114446,op1_e3_l_15456C);
      real realLit457F#27 = 0.e0;
      real r4580#1 = r42E0;
      real r4581#2 = RMul(realLit457F,r4580);
      real r4582#2 = r42E8;
      real r4583#1 = RMul(realLit457F,r4582);
      real r4584#2 = r42F0;
      real r4585#2 = RMul(realLit457F,r4584);
      real r4586#2 = r432C;
      real r4587#2 = RMul(realLit457F,r4586);
      real r4588#1 = r4331;
      real r4589#3 = RMul(realLit457F,r4588);
      real realLit458A#9 = 0.1e1;
      real r458B#2 = r4336;
      real r458C#1 = RMul(realLit458A,r458B);
      real r458D#2 = r4360;
      real r458E#2 = RMul(realLit457F,r458D);
      real realLit458F#9 = -0.1e1;
      real r4590#2 = r4365;
      real r4591#1 = RMul(realLit458F,r4590);
      real r4592#1 = r436A;
      real r4593#3 = RMul(realLit457F,r4592);
      real r4594#2 = RAdd(r4581,r4583);
      real r4595#1 = RAdd(r4594,r4585);
      real r4596#1 = RAdd(r4595,r4587);
      real r4597#1 = RAdd(r4596,r4589);
      real r4598#1 = RAdd(r4597,r458C);
      real r4599#1 = RAdd(r4598,r458E);
      real r459A#1 = RAdd(r4599,r4591);
      real r459B#1 = RAdd(r459A,r4593);
      real r459C#1 = r42F9;
      real r459D#2 = RMul(realLit457F,r459C);
      real r459E#2 = r4301;
      real r459F#1 = RMul(realLit457F,r459E);
      real r45A0#2 = r4309;
      real r45A1#2 = RMul(realLit457F,r45A0);
      real r45A2#2 = r433C;
      real r45A3#2 = RMul(realLit457F,r45A2);
      real r45A4#1 = r4341;
      real r45A5#3 = RMul(realLit457F,r45A4);
      real r45A6#2 = r4346;
      real r45A7#1 = RMul(realLit458A,r45A6);
      real r45A8#2 = r4370;
      real r45A9#2 = RMul(realLit457F,r45A8);
      real r45AA#2 = r4375;
      real r45AB#1 = RMul(realLit458F,r45AA);
      real r45AC#1 = r437A;
      real r45AD#3 = RMul(realLit457F,r45AC);
      real r45AE#2 = RAdd(r459D,r459F);
      real r45AF#1 = RAdd(r45AE,r45A1);
      real r45B0#1 = RAdd(r45AF,r45A3);
      real r45B1#1 = RAdd(r45B0,r45A5);
      real r45B2#1 = RAdd(r45B1,r45A7);
      real r45B3#1 = RAdd(r45B2,r45A9);
      real r45B4#1 = RAdd(r45B3,r45AB);
      real r45B5#1 = RAdd(r45B4,r45AD);
      real r45B6#1 = r4312;
      real r45B7#2 = RMul(realLit457F,r45B6);
      real r45B8#2 = r431A;
      real r45B9#1 = RMul(realLit457F,r45B8);
      real r45BA#2 = r4322;
      real r45BB#2 = RMul(realLit457F,r45BA);
      real r45BC#2 = r434C;
      real r45BD#2 = RMul(realLit457F,r45BC);
      real r45BE#1 = r4351;
      real r45BF#3 = RMul(realLit457F,r45BE);
      real r45C0#2 = r4356;
      real r45C1#1 = RMul(realLit458A,r45C0);
      real r45C2#2 = r4380;
      real r45C3#2 = RMul(realLit457F,r45C2);
      real r45C4#2 = r4385;
      real r45C5#1 = RMul(realLit458F,r45C4);
      real r45C6#1 = r438A;
      real r45C7#3 = RMul(realLit457F,r45C6);
      real r45C8#2 = RAdd(r45B7,r45B9);
      real r45C9#1 = RAdd(r45C8,r45BB);
      real r45CA#1 = RAdd(r45C9,r45BD);
      real r45CB#1 = RAdd(r45CA,r45BF);
      real r45CC#1 = RAdd(r45CB,r45C1);
      real r45CD#1 = RAdd(r45CC,r45C3);
      real r45CE#1 = RAdd(r45CD,r45C5);
      real r45CF#1 = RAdd(r45CE,r45C7);
      real r45D1#1 = RMul(realLit458F,r4584);
      real r45D2#2 = RMul(realLit457F,r458B);
      real r45D3#1 = RMul(realLit458A,r458D);
      real r45D4#2 = RMul(realLit457F,r4590);
      real r45D5#1 = RAdd(r4594,r45D1);
      real r45D6#1 = RAdd(r45D5,r4587);
      real r45D7#1 = RAdd(r45D6,r4589);
      real r45D8#1 = RAdd(r45D7,r45D2);
      real r45D9#1 = RAdd(r45D8,r45D3);
      real r45DA#1 = RAdd(r45D9,r45D4);
      real r45DB#1 = RAdd(r45DA,r4593);
      real r45DC#1 = RMul(realLit458F,r45A0);
      real r45DD#2 = RMul(realLit457F,r45A6);
      real r45DE#1 = RMul(realLit458A,r45A8);
      real r45DF#2 = RMul(realLit457F,r45AA);
      real r45E0#1 = RAdd(r45AE,r45DC);
      real r45E1#1 = RAdd(r45E0,r45A3);
      real r45E2#1 = RAdd(r45E1,r45A5);
      real r45E3#1 = RAdd(r45E2,r45DD);
      real r45E4#1 = RAdd(r45E3,r45DE);
      real r45E5#1 = RAdd(r45E4,r45DF);
      real r45E6#1 = RAdd(r45E5,r45AD);
      real r45E7#1 = RMul(realLit458F,r45BA);
      real r45E8#2 = RMul(realLit457F,r45C0);
      real r45E9#1 = RMul(realLit458A,r45C2);
      real r45EA#2 = RMul(realLit457F,r45C4);
      real r45EB#1 = RAdd(r45C8,r45E7);
      real r45EC#1 = RAdd(r45EB,r45BD);
      real r45ED#1 = RAdd(r45EC,r45BF);
      real r45EE#1 = RAdd(r45ED,r45E8);
      real r45EF#1 = RAdd(r45EE,r45E9);
      real r45F0#1 = RAdd(r45EF,r45EA);
      real r45F1#1 = RAdd(r45F0,r45C7);
      real r45F3#1 = RMul(realLit458A,r4582);
      real r45F4#1 = RMul(realLit458F,r4586);
      real r45F5#1 = RAdd(r4581,r45F3);
      real r45F6#1 = RAdd(r45F5,r4585);
      real r45F7#1 = RAdd(r45F6,r45F4);
      real r45F8#1 = RAdd(r45F7,r4589);
      real r45F9#1 = RAdd(r45F8,r45D2);
      real r45FA#1 = RAdd(r45F9,r458E);
      real r45FB#1 = RAdd(r45FA,r45D4);
      real r45FC#1 = RAdd(r45FB,r4593);
      real r45FD#1 = RMul(realLit458A,r459E);
      real r45FE#1 = RMul(realLit458F,r45A2);
      real r45FF#1 = RAdd(r459D,r45FD);
      real r4600#1 = RAdd(r45FF,r45A1);
      real r4601#1 = RAdd(r4600,r45FE);
      real r4602#1 = RAdd(r4601,r45A5);
      real r4603#1 = RAdd(r4602,r45DD);
      real r4604#1 = RAdd(r4603,r45A9);
      real r4605#1 = RAdd(r4604,r45DF);
      real r4606#1 = RAdd(r4605,r45AD);
      real r4607#1 = RMul(realLit458A,r45B8);
      real r4608#1 = RMul(realLit458F,r45BC);
      real r4609#1 = RAdd(r45B7,r4607);
      real r460A#1 = RAdd(r4609,r45BB);
      real r460B#1 = RAdd(r460A,r4608);
      real r460C#1 = RAdd(r460B,r45BF);
      real r460D#1 = RAdd(r460C,r45E8);
      real r460E#1 = RAdd(r460D,r45C3);
      real r460F#1 = RAdd(r460E,r45EA);
      real r4610#1 = RAdd(r460F,r45C7);
      real realLit46A8#1 = 0.2e1;
      real op1_e3_l_1846A7#9 = RMul(realLit46A8,op1_e3_l_16457B);
      real r46AD#1 = r459B;
      real r46AE#1 = RDiv(r46AD,op1_e3_l_1846A7);
      real r46AF#1 = r45B5;
      real r46B0#1 = RDiv(r46AF,op1_e3_l_1846A7);
      real r46B1#1 = r45CF;
      real r46B2#1 = RDiv(r46B1,op1_e3_l_1846A7);
      tensor[3] tensor46B3#1 = <tensor[3]>[r46AE,r46B0,r46B2];
      real r46B4#1 = r45DB;
      real r46B5#1 = RDiv(r46B4,op1_e3_l_1846A7);
      real r46B6#1 = r45E6;
      real r46B7#1 = RDiv(r46B6,op1_e3_l_1846A7);
      real r46B8#1 = r45F1;
      real r46B9#1 = RDiv(r46B8,op1_e3_l_1846A7);
      tensor[3] tensor46BA#1 = <tensor[3]>[r46B5,r46B7,r46B9];
      real r46BB#1 = r45FC;
      real r46BC#1 = RDiv(r46BB,op1_e3_l_1846A7);
      real r46BD#1 = r4606;
      real r46BE#1 = RDiv(r46BD,op1_e3_l_1846A7);
      real r46BF#1 = r4610;
      real r46C0#1 = RDiv(r46BF,op1_e3_l_1846A7);
      tensor[3] tensor46C1#1 = <tensor[3]>[r46BC,r46BE,r46C0];
      tensor[3] projParam46DA#1 = tensor46B3;
      real vdot46DB#1 = VDot<3>(projParam46DA,dPos40BB);
      tensor[3] projParam46DC#1 = tensor46BA;
      real vdot46DD#1 = VDot<3>(projParam46DC,dPos40BB);
      tensor[3] projParam46DE#1 = tensor46C1;
      real vdot46DF#1 = VDot<3>(projParam46DE,dPos40BB);
      tensor[3] op1_e3_l_2046D9#5 = <tensor[3]>[vdot46DB,vdot46DD,vdot46DF];
      tensor[3] op1_e3_l_2146E8#2 = VScale<3>(time46E9,op1_e3_l_2046D9);
      tensor[3] newPos46EC#2 = VAdd<3>(_t40DD,op1_e3_l_2146E8);
      real _t46EF#4 = 0.1e-8;
      real _t46F1#1 = RAdd(time40CA,_t46EF);
      tensor[3] _t46F4#1 = <tensor[3]>[time40CA,time40CA,time40CA];
      real _t46F6#1 = VDot<3>(_t46F4,newPos46EC);
      bool _t46F9#1 = GT<real>(_t46F1,_t46F6);
      tensor[3] _t46FB#1 = <tensor[3]>[_t46EF,_t46EF,_t46EF];
      tensor[3] v46FE#1 = VAdd<3>(_t46FB,_t40DD);
      tensor[3] _t46FD#3 = VAdd<3>(v46FE,op1_e3_l_2146E8);
      real _t4702#1 = VIndex<3,0>(_t46FD);
      real _t4704#3 = -0.e0;
      bool _t4706#1 = GT<real>(_t4702,_t4704);
      real _t4708#1 = VIndex<3,1>(_t46FD);
      bool _t470A#1 = GT<real>(_t4708,_t4704);
      real _t470C#1 = VIndex<3,2>(_t46FD);
      bool _t470E#1 = GT<real>(_t470C,_t4704);
      bool _t4710#1 = BAnd(_t470A,_t470E);
      bool _t4712#1 = BAnd(_t4706,_t4710);
      bool _t4714#1 = BAnd(_t46F9,_t4712);
      if _t4714 then goto ASSIGN4718 else goto ASSIGN4721
    ASSIGN4718:  preds = [COND4716]
      femData:MeshPos nmp4717#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t40D9,_t40DB,newPos46EC);
      return nmp4717
      goto JOIN471E
    JOIN471E:  preds = [*RETURN(nmp4717)4719,JOIN4F2F]
      femData:MeshPos cmp471A#1 = phi(nmp471B)
      real time471C#1 = phi(time471D)
      goto FOREACH40D1
    ASSIGN4721:  preds = [COND4716]
      int _t4720#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp40D3);
      real time4722#6 = +inf;
      int face4724#7 = -1;
      real faceTime4726#6 = -inf;
      real _t4728#15 = 0.57735026919e0;
      tensor[3] _t472A#4 = <tensor[3]>[_t4728,_t4728,_t4728];
      real op1_e3_l_10472C#1 = VDot<3>(_t472A,_t40DD);
      real op1_e3_l_25472F#1 = VDot<3>(_t472A,op1_e3_l_2046D9);
      real op1_e3_l_264732#1 = RSub(_t4728,op1_e3_l_10472C);
      real op1_e3_l_274735#1 = RMul(time46E9,op1_e3_l_25472F);
      real _t4738#4 = RDiv(op1_e3_l_264732,op1_e3_l_274735);
      real _t473B#8 = -0.1e-15;
      bool _t473D#1 = GTE<real>(_t4738,_t473B);
      bool _t473F#1 = GT<real>(time4722,_t4738);
      real r4742#3 = dof_load4109;
      real r4743#3 = basisEval415B;
      real r4744#1 = RMul(r4742,r4743);
      real r4745#3 = dof_load4112;
      real r4746#3 = basisEval415C;
      real r4747#1 = RMul(r4745,r4746);
      real r4748#3 = dof_load411B;
      real r4749#3 = basisEval415D;
      real r474A#1 = RMul(r4748,r4749);
      real r474B#3 = dof_load4124;
      real r474C#3 = basisEval415D;
      real r474D#1 = RMul(r474B,r474C);
      real r474E#1 = RAdd(r4744,r4747);
      real r474F#1 = RAdd(r474E,r474A);
      real r4750#2 = RAdd(r474F,r474D);
      real r4751#3 = basisEval415B;
      real r4752#1 = RMul(r4742,r4751);
      real r4753#3 = basisEval415D;
      real r4754#1 = RMul(r4745,r4753);
      real r4755#3 = basisEval415C;
      real r4756#1 = RMul(r4748,r4755);
      real r4757#3 = basisEval415D;
      real r4758#1 = RMul(r474B,r4757);
      real r4759#1 = RAdd(r4752,r4754);
      real r475A#1 = RAdd(r4759,r4756);
      real r475B#2 = RAdd(r475A,r4758);
      real r475C#3 = basisEval415B;
      real r475D#1 = RMul(r4742,r475C);
      real r475E#3 = basisEval415D;
      real r475F#1 = RMul(r4745,r475E);
      real r4760#3 = basisEval415D;
      real r4761#1 = RMul(r4748,r4760);
      real r4762#3 = basisEval415C;
      real r4763#1 = RMul(r474B,r4762);
      real r4764#1 = RAdd(r475D,r475F);
      real r4765#1 = RAdd(r4764,r4761);
      real r4766#2 = RAdd(r4765,r4763);
      real r4768#3 = dof_load410A;
      real r4769#1 = RMul(r4768,r4743);
      real r476A#3 = dof_load4113;
      real r476B#1 = RMul(r476A,r4746);
      real r476C#3 = dof_load411C;
      real r476D#1 = RMul(r476C,r4749);
      real r476E#3 = dof_load4125;
      real r476F#1 = RMul(r476E,r474C);
      real r4770#1 = RAdd(r4769,r476B);
      real r4771#1 = RAdd(r4770,r476D);
      real r4772#2 = RAdd(r4771,r476F);
      real r4773#1 = RMul(r4768,r4751);
      real r4774#1 = RMul(r476A,r4753);
      real r4775#1 = RMul(r476C,r4755);
      real r4776#1 = RMul(r476E,r4757);
      real r4777#1 = RAdd(r4773,r4774);
      real r4778#1 = RAdd(r4777,r4775);
      real r4779#2 = RAdd(r4778,r4776);
      real r477A#1 = RMul(r4768,r475C);
      real r477B#1 = RMul(r476A,r475E);
      real r477C#1 = RMul(r476C,r4760);
      real r477D#1 = RMul(r476E,r4762);
      real r477E#1 = RAdd(r477A,r477B);
      real r477F#1 = RAdd(r477E,r477C);
      real r4780#2 = RAdd(r477F,r477D);
      real r4782#3 = dof_load410B;
      real r4783#1 = RMul(r4782,r4743);
      real r4784#3 = dof_load4114;
      real r4785#1 = RMul(r4784,r4746);
      real r4786#3 = dof_load411D;
      real r4787#1 = RMul(r4786,r4749);
      real r4788#3 = dof_load4126;
      real r4789#1 = RMul(r4788,r474C);
      real r478A#1 = RAdd(r4783,r4785);
      real r478B#1 = RAdd(r478A,r4787);
      real r478C#2 = RAdd(r478B,r4789);
      real r478D#1 = RMul(r4782,r4751);
      real r478E#1 = RMul(r4784,r4753);
      real r478F#1 = RMul(r4786,r4755);
      real r4790#1 = RMul(r4788,r4757);
      real r4791#1 = RAdd(r478D,r478E);
      real r4792#1 = RAdd(r4791,r478F);
      real r4793#2 = RAdd(r4792,r4790);
      real r4794#1 = RMul(r4782,r475C);
      real r4795#1 = RMul(r4784,r475E);
      real r4796#1 = RMul(r4786,r4760);
      real r4797#1 = RMul(r4788,r4762);
      real r4798#1 = RAdd(r4794,r4795);
      real r4799#1 = RAdd(r4798,r4796);
      real r479A#2 = RAdd(r4799,r4797);
      real realLit47F9#9 = 0.e0;
      real r47FA#3 = r4750;
      real r47FB#3 = RMul(realLit47F9,r47FA);
      real r47FC#3 = r4772;
      real r47FD#3 = RMul(realLit47F9,r47FC);
      real r47FE#3 = r478C;
      real r47FF#5 = RMul(realLit47F9,r47FE);
      real r4800#3 = RAdd(r47FB,r47FD);
      real r4801#3 = RAdd(r4800,r47FF);
      real r4802#3 = r475B;
      real r4803#3 = RMul(realLit47F9,r4802);
      real r4804#3 = r4779;
      real r4805#3 = RMul(realLit47F9,r4804);
      real r4806#3 = r4793;
      real r4807#5 = RMul(realLit47F9,r4806);
      real r4808#3 = RAdd(r4803,r4805);
      real r4809#3 = RAdd(r4808,r4807);
      real r480A#3 = r4766;
      real r480B#3 = RMul(realLit47F9,r480A);
      real r480C#3 = r4780;
      real r480D#3 = RMul(realLit47F9,r480C);
      real r480E#3 = r479A;
      real r480F#5 = RMul(realLit47F9,r480E);
      real r4810#3 = RAdd(r480B,r480D);
      real r4811#3 = RAdd(r4810,r480F);
      real realLit4813#9 = -0.1e1;
      real r4814#1 = RMul(realLit4813,r47FE);
      real r4815#1 = RAdd(r4800,r4814);
      real r4816#1 = RMul(realLit4813,r4806);
      real r4817#1 = RAdd(r4808,r4816);
      real r4818#1 = RMul(realLit4813,r480E);
      real r4819#1 = RAdd(r4810,r4818);
      real realLit481B#9 = 0.1e1;
      real r481C#1 = RMul(realLit481B,r47FC);
      real r481D#1 = RAdd(r47FB,r481C);
      real r481E#1 = RAdd(r481D,r47FF);
      real r481F#1 = RMul(realLit481B,r4804);
      real r4820#1 = RAdd(r4803,r481F);
      real r4821#1 = RAdd(r4820,r4807);
      real r4822#1 = RMul(realLit481B,r480C);
      real r4823#1 = RAdd(r480B,r4822);
      real r4824#1 = RAdd(r4823,r480F);
      real r4827#1 = RMul(realLit481B,r47FE);
      real r4828#1 = RAdd(r4800,r4827);
      real r4829#1 = RMul(realLit481B,r4806);
      real r482A#1 = RAdd(r4808,r4829);
      real r482B#1 = RMul(realLit481B,r480E);
      real r482C#1 = RAdd(r4810,r482B);
      real r482E#1 = RMul(realLit4813,r47FA);
      real r482F#1 = RAdd(r482E,r47FD);
      real r4830#1 = RAdd(r482F,r47FF);
      real r4831#1 = RMul(realLit4813,r4802);
      real r4832#1 = RAdd(r4831,r4805);
      real r4833#1 = RAdd(r4832,r4807);
      real r4834#1 = RMul(realLit4813,r480A);
      real r4835#1 = RAdd(r4834,r480D);
      real r4836#1 = RAdd(r4835,r480F);
      real r4839#1 = RMul(realLit4813,r47FC);
      real r483A#1 = RAdd(r47FB,r4839);
      real r483B#1 = RAdd(r483A,r47FF);
      real r483C#1 = RMul(realLit4813,r4804);
      real r483D#1 = RAdd(r4803,r483C);
      real r483E#1 = RAdd(r483D,r4807);
      real r483F#1 = RMul(realLit4813,r480C);
      real r4840#1 = RAdd(r480B,r483F);
      real r4841#1 = RAdd(r4840,r480F);
      real r4843#1 = RMul(realLit481B,r47FA);
      real r4844#1 = RAdd(r4843,r47FD);
      real r4845#1 = RAdd(r4844,r47FF);
      real r4846#1 = RMul(realLit481B,r4802);
      real r4847#1 = RAdd(r4846,r4805);
      real r4848#1 = RAdd(r4847,r4807);
      real r4849#1 = RMul(realLit481B,r480A);
      real r484A#1 = RAdd(r4849,r480D);
      real r484B#1 = RAdd(r484A,r480F);
      real r48A6#9 = r4750;
      real r48A7#3 = r4801;
      real r48A8#1 = RMul(r48A6,r48A7);
      real r48A9#9 = r4772;
      real r48AA#3 = r4828;
      real r48AB#1 = RMul(r48A9,r48AA);
      real r48AC#9 = r478C;
      real r48AD#3 = r483B;
      real r48AE#1 = RMul(r48AC,r48AD);
      real r48AF#1 = RAdd(r48A8,r48AB);
      real r48B0#1 = RAdd(r48AF,r48AE);
      real r48B1#3 = r4809;
      real r48B2#1 = RMul(r48A6,r48B1);
      real r48B3#3 = r482A;
      real r48B4#1 = RMul(r48A9,r48B3);
      real r48B5#3 = r483E;
      real r48B6#1 = RMul(r48AC,r48B5);
      real r48B7#1 = RAdd(r48B2,r48B4);
      real r48B8#1 = RAdd(r48B7,r48B6);
      real r48B9#3 = r4811;
      real r48BA#1 = RMul(r48A6,r48B9);
      real r48BB#3 = r482C;
      real r48BC#1 = RMul(r48A9,r48BB);
      real r48BD#3 = r4841;
      real r48BE#1 = RMul(r48AC,r48BD);
      real r48BF#1 = RAdd(r48BA,r48BC);
      real r48C0#1 = RAdd(r48BF,r48BE);
      real r48C2#3 = r4815;
      real r48C3#1 = RMul(r48A6,r48C2);
      real r48C4#3 = r4801;
      real r48C5#1 = RMul(r48A9,r48C4);
      real r48C6#3 = r4845;
      real r48C7#1 = RMul(r48AC,r48C6);
      real r48C8#1 = RAdd(r48C3,r48C5);
      real r48C9#1 = RAdd(r48C8,r48C7);
      real r48CA#3 = r4817;
      real r48CB#1 = RMul(r48A6,r48CA);
      real r48CC#3 = r4809;
      real r48CD#1 = RMul(r48A9,r48CC);
      real r48CE#3 = r4848;
      real r48CF#1 = RMul(r48AC,r48CE);
      real r48D0#1 = RAdd(r48CB,r48CD);
      real r48D1#1 = RAdd(r48D0,r48CF);
      real r48D2#3 = r4819;
      real r48D3#1 = RMul(r48A6,r48D2);
      real r48D4#3 = r4811;
      real r48D5#1 = RMul(r48A9,r48D4);
      real r48D6#3 = r484B;
      real r48D7#1 = RMul(r48AC,r48D6);
      real r48D8#1 = RAdd(r48D3,r48D5);
      real r48D9#1 = RAdd(r48D8,r48D7);
      real r48DB#3 = r481E;
      real r48DC#1 = RMul(r48A6,r48DB);
      real r48DD#3 = r4830;
      real r48DE#1 = RMul(r48A9,r48DD);
      real r48DF#3 = r4801;
      real r48E0#1 = RMul(r48AC,r48DF);
      real r48E1#1 = RAdd(r48DC,r48DE);
      real r48E2#1 = RAdd(r48E1,r48E0);
      real r48E3#3 = r4821;
      real r48E4#1 = RMul(r48A6,r48E3);
      real r48E5#3 = r4833;
      real r48E6#1 = RMul(r48A9,r48E5);
      real r48E7#3 = r4809;
      real r48E8#1 = RMul(r48AC,r48E7);
      real r48E9#1 = RAdd(r48E4,r48E6);
      real r48EA#1 = RAdd(r48E9,r48E8);
      real r48EB#3 = r4824;
      real r48EC#1 = RMul(r48A6,r48EB);
      real r48ED#3 = r4836;
      real r48EE#1 = RMul(r48A9,r48ED);
      real r48EF#3 = r4811;
      real r48F0#1 = RMul(r48AC,r48EF);
      real r48F1#1 = RAdd(r48EC,r48EE);
      real r48F2#1 = RAdd(r48F1,r48F0);
      real r48F5#9 = r475B;
      real r48F6#1 = RMul(r48F5,r48A7);
      real r48F7#9 = r4779;
      real r48F8#1 = RMul(r48F7,r48AA);
      real r48F9#9 = r4793;
      real r48FA#1 = RMul(r48F9,r48AD);
      real r48FB#1 = RAdd(r48F6,r48F8);
      real r48FC#1 = RAdd(r48FB,r48FA);
      real r48FD#1 = RMul(r48F5,r48B1);
      real r48FE#1 = RMul(r48F7,r48B3);
      real r48FF#1 = RMul(r48F9,r48B5);
      real r4900#1 = RAdd(r48FD,r48FE);
      real r4901#1 = RAdd(r4900,r48FF);
      real r4902#1 = RMul(r48F5,r48B9);
      real r4903#1 = RMul(r48F7,r48BB);
      real r4904#1 = RMul(r48F9,r48BD);
      real r4905#1 = RAdd(r4902,r4903);
      real r4906#1 = RAdd(r4905,r4904);
      real r4908#1 = RMul(r48F5,r48C2);
      real r4909#1 = RMul(r48F7,r48C4);
      real r490A#1 = RMul(r48F9,r48C6);
      real r490B#1 = RAdd(r4908,r4909);
      real r490C#1 = RAdd(r490B,r490A);
      real r490D#1 = RMul(r48F5,r48CA);
      real r490E#1 = RMul(r48F7,r48CC);
      real r490F#1 = RMul(r48F9,r48CE);
      real r4910#1 = RAdd(r490D,r490E);
      real r4911#1 = RAdd(r4910,r490F);
      real r4912#1 = RMul(r48F5,r48D2);
      real r4913#1 = RMul(r48F7,r48D4);
      real r4914#1 = RMul(r48F9,r48D6);
      real r4915#1 = RAdd(r4912,r4913);
      real r4916#1 = RAdd(r4915,r4914);
      real r4918#1 = RMul(r48F5,r48DB);
      real r4919#1 = RMul(r48F7,r48DD);
      real r491A#1 = RMul(r48F9,r48DF);
      real r491B#1 = RAdd(r4918,r4919);
      real r491C#1 = RAdd(r491B,r491A);
      real r491D#1 = RMul(r48F5,r48E3);
      real r491E#1 = RMul(r48F7,r48E5);
      real r491F#1 = RMul(r48F9,r48E7);
      real r4920#1 = RAdd(r491D,r491E);
      real r4921#1 = RAdd(r4920,r491F);
      real r4922#1 = RMul(r48F5,r48EB);
      real r4923#1 = RMul(r48F7,r48ED);
      real r4924#1 = RMul(r48F9,r48EF);
      real r4925#1 = RAdd(r4922,r4923);
      real r4926#1 = RAdd(r4925,r4924);
      real r4929#9 = r4766;
      real r492A#1 = RMul(r4929,r48A7);
      real r492B#9 = r4780;
      real r492C#1 = RMul(r492B,r48AA);
      real r492D#9 = r479A;
      real r492E#1 = RMul(r492D,r48AD);
      real r492F#1 = RAdd(r492A,r492C);
      real r4930#1 = RAdd(r492F,r492E);
      real r4931#1 = RMul(r4929,r48B1);
      real r4932#1 = RMul(r492B,r48B3);
      real r4933#1 = RMul(r492D,r48B5);
      real r4934#1 = RAdd(r4931,r4932);
      real r4935#1 = RAdd(r4934,r4933);
      real r4936#1 = RMul(r4929,r48B9);
      real r4937#1 = RMul(r492B,r48BB);
      real r4938#1 = RMul(r492D,r48BD);
      real r4939#1 = RAdd(r4936,r4937);
      real r493A#1 = RAdd(r4939,r4938);
      real r493C#1 = RMul(r4929,r48C2);
      real r493D#1 = RMul(r492B,r48C4);
      real r493E#1 = RMul(r492D,r48C6);
      real r493F#1 = RAdd(r493C,r493D);
      real r4940#1 = RAdd(r493F,r493E);
      real r4941#1 = RMul(r4929,r48CA);
      real r4942#1 = RMul(r492B,r48CC);
      real r4943#1 = RMul(r492D,r48CE);
      real r4944#1 = RAdd(r4941,r4942);
      real r4945#1 = RAdd(r4944,r4943);
      real r4946#1 = RMul(r4929,r48D2);
      real r4947#1 = RMul(r492B,r48D4);
      real r4948#1 = RMul(r492D,r48D6);
      real r4949#1 = RAdd(r4946,r4947);
      real r494A#1 = RAdd(r4949,r4948);
      real r494C#1 = RMul(r4929,r48DB);
      real r494D#1 = RMul(r492B,r48DD);
      real r494E#1 = RMul(r492D,r48DF);
      real r494F#1 = RAdd(r494C,r494D);
      real r4950#1 = RAdd(r494F,r494E);
      real r4951#1 = RMul(r4929,r48E3);
      real r4952#1 = RMul(r492B,r48E5);
      real r4953#1 = RMul(r492D,r48E7);
      real r4954#1 = RAdd(r4951,r4952);
      real r4955#1 = RAdd(r4954,r4953);
      real r4956#1 = RMul(r4929,r48EB);
      real r4957#1 = RMul(r492B,r48ED);
      real r4958#1 = RMul(r492D,r48EF);
      real r4959#1 = RAdd(r4956,r4957);
      real r495A#1 = RAdd(r4959,r4958);
      real r4A17#1 = dof_load4109;
      real r4A18#3 = basisEval415B;
      real r4A19#1 = RMul(r4A17,r4A18);
      real r4A1A#1 = dof_load4112;
      real r4A1B#3 = basisEval415C;
      real r4A1C#1 = RMul(r4A1A,r4A1B);
      real r4A1D#1 = dof_load411B;
      real r4A1E#3 = basisEval415D;
      real r4A1F#1 = RMul(r4A1D,r4A1E);
      real r4A20#1 = dof_load4124;
      real r4A21#3 = basisEval415D;
      real r4A22#1 = RMul(r4A20,r4A21);
      real r4A23#1 = RAdd(r4A19,r4A1C);
      real r4A24#1 = RAdd(r4A23,r4A1F);
      real r4A25#1 = RAdd(r4A24,r4A22);
      real r4A26#1 = dof_load410A;
      real r4A27#1 = RMul(r4A26,r4A18);
      real r4A28#1 = dof_load4113;
      real r4A29#1 = RMul(r4A28,r4A1B);
      real r4A2A#1 = dof_load411C;
      real r4A2B#1 = RMul(r4A2A,r4A1E);
      real r4A2C#1 = dof_load4125;
      real r4A2D#1 = RMul(r4A2C,r4A21);
      real r4A2E#1 = RAdd(r4A27,r4A29);
      real r4A2F#1 = RAdd(r4A2E,r4A2B);
      real r4A30#1 = RAdd(r4A2F,r4A2D);
      real r4A31#1 = dof_load410B;
      real r4A32#1 = RMul(r4A31,r4A18);
      real r4A33#1 = dof_load4114;
      real r4A34#1 = RMul(r4A33,r4A1B);
      real r4A35#1 = dof_load411D;
      real r4A36#1 = RMul(r4A35,r4A1E);
      real r4A37#1 = dof_load4126;
      real r4A38#1 = RMul(r4A37,r4A21);
      real r4A39#1 = RAdd(r4A32,r4A34);
      real r4A3A#1 = RAdd(r4A39,r4A36);
      real r4A3B#1 = RAdd(r4A3A,r4A38);
      tensor[3] probe_l_114A16#1 = <tensor[3]>[r4A25,r4A30,r4A3B];
      real r4A64#1 = dof_load4109;
      real r4A65#3 = basisEval415B;
      real r4A66#1 = RMul(r4A64,r4A65);
      real r4A67#1 = dof_load4112;
      real r4A68#3 = basisEval415D;
      real r4A69#1 = RMul(r4A67,r4A68);
      real r4A6A#1 = dof_load411B;
      real r4A6B#3 = basisEval415C;
      real r4A6C#1 = RMul(r4A6A,r4A6B);
      real r4A6D#1 = dof_load4124;
      real r4A6E#3 = basisEval415D;
      real r4A6F#1 = RMul(r4A6D,r4A6E);
      real r4A70#1 = RAdd(r4A66,r4A69);
      real r4A71#1 = RAdd(r4A70,r4A6C);
      real r4A72#1 = RAdd(r4A71,r4A6F);
      real r4A73#1 = dof_load410A;
      real r4A74#1 = RMul(r4A73,r4A65);
      real r4A75#1 = dof_load4113;
      real r4A76#1 = RMul(r4A75,r4A68);
      real r4A77#1 = dof_load411C;
      real r4A78#1 = RMul(r4A77,r4A6B);
      real r4A79#1 = dof_load4125;
      real r4A7A#1 = RMul(r4A79,r4A6E);
      real r4A7B#1 = RAdd(r4A74,r4A76);
      real r4A7C#1 = RAdd(r4A7B,r4A78);
      real r4A7D#1 = RAdd(r4A7C,r4A7A);
      real r4A7E#1 = dof_load410B;
      real r4A7F#1 = RMul(r4A7E,r4A65);
      real r4A80#1 = dof_load4114;
      real r4A81#1 = RMul(r4A80,r4A68);
      real r4A82#1 = dof_load411D;
      real r4A83#1 = RMul(r4A82,r4A6B);
      real r4A84#1 = dof_load4126;
      real r4A85#1 = RMul(r4A84,r4A6E);
      real r4A86#1 = RAdd(r4A7F,r4A81);
      real r4A87#1 = RAdd(r4A86,r4A83);
      real r4A88#1 = RAdd(r4A87,r4A85);
      tensor[3] probe_l_124A63#3 = <tensor[3]>[r4A72,r4A7D,r4A88];
      real r4AB1#1 = dof_load4109;
      real r4AB2#3 = basisEval415B;
      real r4AB3#1 = RMul(r4AB1,r4AB2);
      real r4AB4#1 = dof_load4112;
      real r4AB5#3 = basisEval415D;
      real r4AB6#1 = RMul(r4AB4,r4AB5);
      real r4AB7#1 = dof_load411B;
      real r4AB8#3 = basisEval415D;
      real r4AB9#1 = RMul(r4AB7,r4AB8);
      real r4ABA#1 = dof_load4124;
      real r4ABB#3 = basisEval415C;
      real r4ABC#1 = RMul(r4ABA,r4ABB);
      real r4ABD#1 = RAdd(r4AB3,r4AB6);
      real r4ABE#1 = RAdd(r4ABD,r4AB9);
      real r4ABF#1 = RAdd(r4ABE,r4ABC);
      real r4AC0#1 = dof_load410A;
      real r4AC1#1 = RMul(r4AC0,r4AB2);
      real r4AC2#1 = dof_load4113;
      real r4AC3#1 = RMul(r4AC2,r4AB5);
      real r4AC4#1 = dof_load411C;
      real r4AC5#1 = RMul(r4AC4,r4AB8);
      real r4AC6#1 = dof_load4125;
      real r4AC7#1 = RMul(r4AC6,r4ABB);
      real r4AC8#1 = RAdd(r4AC1,r4AC3);
      real r4AC9#1 = RAdd(r4AC8,r4AC5);
      real r4ACA#1 = RAdd(r4AC9,r4AC7);
      real r4ACB#1 = dof_load410B;
      real r4ACC#1 = RMul(r4ACB,r4AB2);
      real r4ACD#1 = dof_load4114;
      real r4ACE#1 = RMul(r4ACD,r4AB5);
      real r4ACF#1 = dof_load411D;
      real r4AD0#1 = RMul(r4ACF,r4AB8);
      real r4AD1#1 = dof_load4126;
      real r4AD2#1 = RMul(r4AD1,r4ABB);
      real r4AD3#1 = RAdd(r4ACC,r4ACE);
      real r4AD4#1 = RAdd(r4AD3,r4AD0);
      real r4AD5#1 = RAdd(r4AD4,r4AD2);
      real realLit4AFE#3 = 0.e0;
      real r4AFF#3 = r4ABF;
      real r4B00#3 = RMul(realLit4AFE,r4AFF);
      real r4B01#3 = r4ACA;
      real r4B02#3 = RMul(realLit4AFE,r4B01);
      real r4B03#3 = r4AD5;
      real r4B04#5 = RMul(realLit4AFE,r4B03);
      real r4B05#3 = RAdd(r4B00,r4B02);
      real r4B06#3 = RAdd(r4B05,r4B04);
      real realLit4B07#3 = 0.1e1;
      real r4B08#1 = RMul(realLit4B07,r4B03);
      real r4B09#1 = RAdd(r4B05,r4B08);
      real realLit4B0A#3 = -0.1e1;
      real r4B0B#1 = RMul(realLit4B0A,r4B01);
      real r4B0C#1 = RAdd(r4B00,r4B0B);
      real r4B0D#1 = RAdd(r4B0C,r4B04);
      tensor[3] tensor4B0E#1 = <tensor[3]>[r4B06,r4B09,r4B0D];
      real r4B0F#1 = RMul(realLit4B0A,r4B03);
      real r4B10#1 = RAdd(r4B05,r4B0F);
      real r4B11#1 = RMul(realLit4B07,r4AFF);
      real r4B12#1 = RAdd(r4B11,r4B02);
      real r4B13#1 = RAdd(r4B12,r4B04);
      tensor[3] tensor4B14#1 = <tensor[3]>[r4B10,r4B06,r4B13];
      real r4B15#1 = RMul(realLit4B07,r4B01);
      real r4B16#1 = RAdd(r4B00,r4B15);
      real r4B17#1 = RAdd(r4B16,r4B04);
      real r4B18#1 = RMul(realLit4B0A,r4AFF);
      real r4B19#1 = RAdd(r4B18,r4B02);
      real r4B1A#1 = RAdd(r4B19,r4B04);
      tensor[3] tensor4B1B#1 = <tensor[3]>[r4B17,r4B1A,r4B06];
      tensor[3] projParam4B3D#1 = tensor4B0E;
      real vdot4B3E#1 = VDot<3>(probe_l_124A63,projParam4B3D);
      tensor[3] projParam4B3F#1 = tensor4B14;
      real vdot4B40#1 = VDot<3>(probe_l_124A63,projParam4B3F);
      tensor[3] projParam4B41#1 = tensor4B1B;
      real vdot4B42#1 = VDot<3>(probe_l_124A63,projParam4B41);
      tensor[3] op1_e3_l_154B3C#1 = <tensor[3]>[vdot4B3E,vdot4B40,vdot4B42];
      real op1_e3_l_164B4B#1 = VDot<3>(probe_l_114A16,op1_e3_l_154B3C);
      real realLit4B4F#27 = 0.e0;
      real r4B50#1 = r48B0;
      real r4B51#2 = RMul(realLit4B4F,r4B50);
      real r4B52#2 = r48B8;
      real r4B53#1 = RMul(realLit4B4F,r4B52);
      real r4B54#2 = r48C0;
      real r4B55#2 = RMul(realLit4B4F,r4B54);
      real r4B56#2 = r48FC;
      real r4B57#2 = RMul(realLit4B4F,r4B56);
      real r4B58#1 = r4901;
      real r4B59#3 = RMul(realLit4B4F,r4B58);
      real realLit4B5A#9 = 0.1e1;
      real r4B5B#2 = r4906;
      real r4B5C#1 = RMul(realLit4B5A,r4B5B);
      real r4B5D#2 = r4930;
      real r4B5E#2 = RMul(realLit4B4F,r4B5D);
      real realLit4B5F#9 = -0.1e1;
      real r4B60#2 = r4935;
      real r4B61#1 = RMul(realLit4B5F,r4B60);
      real r4B62#1 = r493A;
      real r4B63#3 = RMul(realLit4B4F,r4B62);
      real r4B64#2 = RAdd(r4B51,r4B53);
      real r4B65#1 = RAdd(r4B64,r4B55);
      real r4B66#1 = RAdd(r4B65,r4B57);
      real r4B67#1 = RAdd(r4B66,r4B59);
      real r4B68#1 = RAdd(r4B67,r4B5C);
      real r4B69#1 = RAdd(r4B68,r4B5E);
      real r4B6A#1 = RAdd(r4B69,r4B61);
      real r4B6B#1 = RAdd(r4B6A,r4B63);
      real r4B6C#1 = r48C9;
      real r4B6D#2 = RMul(realLit4B4F,r4B6C);
      real r4B6E#2 = r48D1;
      real r4B6F#1 = RMul(realLit4B4F,r4B6E);
      real r4B70#2 = r48D9;
      real r4B71#2 = RMul(realLit4B4F,r4B70);
      real r4B72#2 = r490C;
      real r4B73#2 = RMul(realLit4B4F,r4B72);
      real r4B74#1 = r4911;
      real r4B75#3 = RMul(realLit4B4F,r4B74);
      real r4B76#2 = r4916;
      real r4B77#1 = RMul(realLit4B5A,r4B76);
      real r4B78#2 = r4940;
      real r4B79#2 = RMul(realLit4B4F,r4B78);
      real r4B7A#2 = r4945;
      real r4B7B#1 = RMul(realLit4B5F,r4B7A);
      real r4B7C#1 = r494A;
      real r4B7D#3 = RMul(realLit4B4F,r4B7C);
      real r4B7E#2 = RAdd(r4B6D,r4B6F);
      real r4B7F#1 = RAdd(r4B7E,r4B71);
      real r4B80#1 = RAdd(r4B7F,r4B73);
      real r4B81#1 = RAdd(r4B80,r4B75);
      real r4B82#1 = RAdd(r4B81,r4B77);
      real r4B83#1 = RAdd(r4B82,r4B79);
      real r4B84#1 = RAdd(r4B83,r4B7B);
      real r4B85#1 = RAdd(r4B84,r4B7D);
      real r4B86#1 = r48E2;
      real r4B87#2 = RMul(realLit4B4F,r4B86);
      real r4B88#2 = r48EA;
      real r4B89#1 = RMul(realLit4B4F,r4B88);
      real r4B8A#2 = r48F2;
      real r4B8B#2 = RMul(realLit4B4F,r4B8A);
      real r4B8C#2 = r491C;
      real r4B8D#2 = RMul(realLit4B4F,r4B8C);
      real r4B8E#1 = r4921;
      real r4B8F#3 = RMul(realLit4B4F,r4B8E);
      real r4B90#2 = r4926;
      real r4B91#1 = RMul(realLit4B5A,r4B90);
      real r4B92#2 = r4950;
      real r4B93#2 = RMul(realLit4B4F,r4B92);
      real r4B94#2 = r4955;
      real r4B95#1 = RMul(realLit4B5F,r4B94);
      real r4B96#1 = r495A;
      real r4B97#3 = RMul(realLit4B4F,r4B96);
      real r4B98#2 = RAdd(r4B87,r4B89);
      real r4B99#1 = RAdd(r4B98,r4B8B);
      real r4B9A#1 = RAdd(r4B99,r4B8D);
      real r4B9B#1 = RAdd(r4B9A,r4B8F);
      real r4B9C#1 = RAdd(r4B9B,r4B91);
      real r4B9D#1 = RAdd(r4B9C,r4B93);
      real r4B9E#1 = RAdd(r4B9D,r4B95);
      real r4B9F#1 = RAdd(r4B9E,r4B97);
      real r4BA1#1 = RMul(realLit4B5F,r4B54);
      real r4BA2#2 = RMul(realLit4B4F,r4B5B);
      real r4BA3#1 = RMul(realLit4B5A,r4B5D);
      real r4BA4#2 = RMul(realLit4B4F,r4B60);
      real r4BA5#1 = RAdd(r4B64,r4BA1);
      real r4BA6#1 = RAdd(r4BA5,r4B57);
      real r4BA7#1 = RAdd(r4BA6,r4B59);
      real r4BA8#1 = RAdd(r4BA7,r4BA2);
      real r4BA9#1 = RAdd(r4BA8,r4BA3);
      real r4BAA#1 = RAdd(r4BA9,r4BA4);
      real r4BAB#1 = RAdd(r4BAA,r4B63);
      real r4BAC#1 = RMul(realLit4B5F,r4B70);
      real r4BAD#2 = RMul(realLit4B4F,r4B76);
      real r4BAE#1 = RMul(realLit4B5A,r4B78);
      real r4BAF#2 = RMul(realLit4B4F,r4B7A);
      real r4BB0#1 = RAdd(r4B7E,r4BAC);
      real r4BB1#1 = RAdd(r4BB0,r4B73);
      real r4BB2#1 = RAdd(r4BB1,r4B75);
      real r4BB3#1 = RAdd(r4BB2,r4BAD);
      real r4BB4#1 = RAdd(r4BB3,r4BAE);
      real r4BB5#1 = RAdd(r4BB4,r4BAF);
      real r4BB6#1 = RAdd(r4BB5,r4B7D);
      real r4BB7#1 = RMul(realLit4B5F,r4B8A);
      real r4BB8#2 = RMul(realLit4B4F,r4B90);
      real r4BB9#1 = RMul(realLit4B5A,r4B92);
      real r4BBA#2 = RMul(realLit4B4F,r4B94);
      real r4BBB#1 = RAdd(r4B98,r4BB7);
      real r4BBC#1 = RAdd(r4BBB,r4B8D);
      real r4BBD#1 = RAdd(r4BBC,r4B8F);
      real r4BBE#1 = RAdd(r4BBD,r4BB8);
      real r4BBF#1 = RAdd(r4BBE,r4BB9);
      real r4BC0#1 = RAdd(r4BBF,r4BBA);
      real r4BC1#1 = RAdd(r4BC0,r4B97);
      real r4BC3#1 = RMul(realLit4B5A,r4B52);
      real r4BC4#1 = RMul(realLit4B5F,r4B56);
      real r4BC5#1 = RAdd(r4B51,r4BC3);
      real r4BC6#1 = RAdd(r4BC5,r4B55);
      real r4BC7#1 = RAdd(r4BC6,r4BC4);
      real r4BC8#1 = RAdd(r4BC7,r4B59);
      real r4BC9#1 = RAdd(r4BC8,r4BA2);
      real r4BCA#1 = RAdd(r4BC9,r4B5E);
      real r4BCB#1 = RAdd(r4BCA,r4BA4);
      real r4BCC#1 = RAdd(r4BCB,r4B63);
      real r4BCD#1 = RMul(realLit4B5A,r4B6E);
      real r4BCE#1 = RMul(realLit4B5F,r4B72);
      real r4BCF#1 = RAdd(r4B6D,r4BCD);
      real r4BD0#1 = RAdd(r4BCF,r4B71);
      real r4BD1#1 = RAdd(r4BD0,r4BCE);
      real r4BD2#1 = RAdd(r4BD1,r4B75);
      real r4BD3#1 = RAdd(r4BD2,r4BAD);
      real r4BD4#1 = RAdd(r4BD3,r4B79);
      real r4BD5#1 = RAdd(r4BD4,r4BAF);
      real r4BD6#1 = RAdd(r4BD5,r4B7D);
      real r4BD7#1 = RMul(realLit4B5A,r4B88);
      real r4BD8#1 = RMul(realLit4B5F,r4B8C);
      real r4BD9#1 = RAdd(r4B87,r4BD7);
      real r4BDA#1 = RAdd(r4BD9,r4B8B);
      real r4BDB#1 = RAdd(r4BDA,r4BD8);
      real r4BDC#1 = RAdd(r4BDB,r4B8F);
      real r4BDD#1 = RAdd(r4BDC,r4BB8);
      real r4BDE#1 = RAdd(r4BDD,r4B93);
      real r4BDF#1 = RAdd(r4BDE,r4BBA);
      real r4BE0#1 = RAdd(r4BDF,r4B97);
      real realLit4C78#1 = 0.2e1;
      real op1_e3_l_184C77#9 = RMul(realLit4C78,op1_e3_l_164B4B);
      real r4C7D#1 = r4B6B;
      real r4C7E#1 = RDiv(r4C7D,op1_e3_l_184C77);
      real r4C7F#1 = r4B85;
      real r4C80#1 = RDiv(r4C7F,op1_e3_l_184C77);
      real r4C81#1 = r4B9F;
      real r4C82#1 = RDiv(r4C81,op1_e3_l_184C77);
      tensor[3] tensor4C83#1 = <tensor[3]>[r4C7E,r4C80,r4C82];
      real r4C84#1 = r4BAB;
      real r4C85#1 = RDiv(r4C84,op1_e3_l_184C77);
      real r4C86#1 = r4BB6;
      real r4C87#1 = RDiv(r4C86,op1_e3_l_184C77);
      real r4C88#1 = r4BC1;
      real r4C89#1 = RDiv(r4C88,op1_e3_l_184C77);
      tensor[3] tensor4C8A#1 = <tensor[3]>[r4C85,r4C87,r4C89];
      real r4C8B#1 = r4BCC;
      real r4C8C#1 = RDiv(r4C8B,op1_e3_l_184C77);
      real r4C8D#1 = r4BD6;
      real r4C8E#1 = RDiv(r4C8D,op1_e3_l_184C77);
      real r4C8F#1 = r4BE0;
      real r4C90#1 = RDiv(r4C8F,op1_e3_l_184C77);
      tensor[3] tensor4C91#1 = <tensor[3]>[r4C8C,r4C8E,r4C90];
      tensor[3] projParam4CAA#1 = tensor4C83;
      real vdot4CAB#3 = VDot<3>(projParam4CAA,dPos40BB);
      tensor[3] projParam4CAC#1 = tensor4C8A;
      real vdot4CAD#3 = VDot<3>(projParam4CAC,dPos40BB);
      tensor[3] projParam4CAE#1 = tensor4C91;
      real vdot4CAF#3 = VDot<3>(projParam4CAE,dPos40BB);
      tensor[3] op1_e3_l_204CA9#4 = <tensor[3]>[vdot4CAB,vdot4CAD,vdot4CAF];
      real op1_e3_l_214CB8#1 = VDot<3>(_t472A,op1_e3_l_204CA9);
      real op1_e3_l_224CBB#2 = RMul(time46E9,op1_e3_l_214CB8);
      real _t4CBE#1 = Abs<real>(op1_e3_l_224CBB);
      real _t4CC1#4 = 0.1e-20;
      bool _t4CC3#2 = GTE<real>(_t4CBE,_t4CC1);
      bool _t4CC5#1 = BAnd(_t473F,_t4CC3);
      bool _t4CC7#1 = BAnd(_t473D,_t4CC5);
      if _t4CC7 then goto ASSIGN4CCB else goto JOIN4CD4
    ASSIGN4CCB:  preds = [COND4CC9]
      bool _t4CCA#1 = NEQ<int>(_t4720,_t40CC);
      if _t4CCA then goto JOIN4CD0 else goto JOIN4CD0
    JOIN4CD0:  preds = [COND4CCC,COND4CCC]
      real faceTime4CCD#1 = phi(faceTime4726,_t4738)
      int face4CCE#1 = phi(_t40CC,face4724)
      real time4CCF#1 = phi(_t4738,time4722)
      goto JOIN4CD4
    JOIN4CD4:  preds = [JOIN4CD0,COND4CC9]
      real faceTime4CD1#2 = phi(faceTime4CCD,faceTime4726)
      int face4CD2#2 = phi(face4CCE,face4724)
      real time4CD3#3 = phi(time4CCF,time4722)
      real _t4CD5#50 = 0.e0;
      tensor[3] _t4CD7#4 = <tensor[3]>[time40CA,_t4CD5,_t4CD5];
      real op1_e3_l_104CD9#1 = VDot<3>(_t4CD7,_t40DD);
      real op1_e3_l_254CDC#1 = VDot<3>(_t4CD7,op1_e3_l_2046D9);
      real op1_e3_l_264CDF#1 = RSub(_t4CD5,op1_e3_l_104CD9);
      real op1_e3_l_274CE2#1 = RMul(time46E9,op1_e3_l_254CDC);
      real _t4CE5#4 = RDiv(op1_e3_l_264CDF,op1_e3_l_274CE2);
      bool _t4CE8#1 = GTE<real>(_t4CE5,_t473B);
      bool _t4CEA#1 = GT<real>(time4CD3,_t4CE5);
      real op1_e3_l_214CEC#1 = VDot<3>(_t4CD7,op1_e3_l_204CA9);
      real op1_e3_l_224CEF#2 = RMul(time46E9,op1_e3_l_214CEC);
      real _t4CF2#1 = Abs<real>(op1_e3_l_224CEF);
      bool _t4CF5#2 = GTE<real>(_t4CF2,_t4CC1);
      bool _t4CF7#1 = BAnd(_t4CEA,_t4CF5);
      bool _t4CF9#1 = BAnd(_t4CE8,_t4CF7);
      if _t4CF9 then goto ASSIGN4CFD else goto JOIN4D08
    ASSIGN4CFD:  preds = [COND4CFB]
      int _t4CFC#2 = 1;
      bool _t4CFE#1 = NEQ<int>(_t4720,_t4CFC);
      if _t4CFE then goto JOIN4D04 else goto JOIN4D04
    JOIN4D04:  preds = [COND4D00,COND4D00]
      real faceTime4D01#1 = phi(faceTime4CD1,_t4CE5)
      int face4D02#1 = phi(_t4CFC,face4CD2)
      real time4D03#1 = phi(_t4CE5,time4CD3)
      goto JOIN4D08
    JOIN4D08:  preds = [JOIN4D04,COND4CFB]
      real faceTime4D05#2 = phi(faceTime4D01,faceTime4CD1)
      int face4D06#2 = phi(face4D02,face4CD2)
      real time4D07#3 = phi(time4D03,time4CD3)
      real _t4D09#14 = -0.1e1;
      tensor[3] _t4D0B#4 = <tensor[3]>[_t4CD5,_t4D09,_t4CD5];
      real op1_e3_l_104D0D#1 = VDot<3>(_t4D0B,_t40DD);
      real op1_e3_l_254D10#1 = VDot<3>(_t4D0B,op1_e3_l_2046D9);
      real op1_e3_l_264D13#1 = RSub(_t4CD5,op1_e3_l_104D0D);
      real op1_e3_l_274D16#1 = RMul(time46E9,op1_e3_l_254D10);
      real _t4D19#4 = RDiv(op1_e3_l_264D13,op1_e3_l_274D16);
      bool _t4D1C#1 = GTE<real>(_t4D19,_t473B);
      bool _t4D1E#1 = GT<real>(time4D07,_t4D19);
      real op1_e3_l_214D20#1 = VDot<3>(_t4D0B,op1_e3_l_204CA9);
      real op1_e3_l_224D23#2 = RMul(time46E9,op1_e3_l_214D20);
      real _t4D26#1 = Abs<real>(op1_e3_l_224D23);
      bool _t4D29#2 = GTE<real>(_t4D26,_t4CC1);
      bool _t4D2B#1 = BAnd(_t4D1E,_t4D29);
      bool _t4D2D#1 = BAnd(_t4D1C,_t4D2B);
      if _t4D2D then goto ASSIGN4D31 else goto JOIN4D3C
    ASSIGN4D31:  preds = [COND4D2F]
      int _t4D30#2 = 2;
      bool _t4D32#1 = NEQ<int>(_t4720,_t4D30);
      if _t4D32 then goto JOIN4D38 else goto JOIN4D38
    JOIN4D38:  preds = [COND4D34,COND4D34]
      real faceTime4D35#1 = phi(faceTime4D05,_t4D19)
      int face4D36#1 = phi(_t4D30,face4D06)
      real time4D37#1 = phi(_t4D19,time4D07)
      goto JOIN4D3C
    JOIN4D3C:  preds = [JOIN4D38,COND4D2F]
      real faceTime4D39#2 = phi(faceTime4D35,faceTime4D05)
      int face4D3A#2 = phi(face4D36,face4D06)
      real time4D3B#3 = phi(time4D37,time4D07)
      tensor[3] _t4D3D#4 = <tensor[3]>[_t4CD5,_t4CD5,time40CA];
      real op1_e3_l_104D3F#1 = VDot<3>(_t4D3D,_t40DD);
      real op1_e3_l_254D42#1 = VDot<3>(_t4D3D,op1_e3_l_2046D9);
      real op1_e3_l_264D45#1 = RSub(_t4CD5,op1_e3_l_104D3F);
      real op1_e3_l_274D48#1 = RMul(time46E9,op1_e3_l_254D42);
      real _t4D4B#4 = RDiv(op1_e3_l_264D45,op1_e3_l_274D48);
      bool _t4D4E#1 = GTE<real>(_t4D4B,_t473B);
      bool _t4D50#1 = GT<real>(time4D3B,_t4D4B);
      real op1_e3_l_214D52#1 = VDot<3>(_t4D3D,op1_e3_l_204CA9);
      real op1_e3_l_224D55#2 = RMul(time46E9,op1_e3_l_214D52);
      real _t4D58#1 = Abs<real>(op1_e3_l_224D55);
      bool _t4D5B#2 = GTE<real>(_t4D58,_t4CC1);
      bool _t4D5D#1 = BAnd(_t4D50,_t4D5B);
      bool _t4D5F#1 = BAnd(_t4D4E,_t4D5D);
      if _t4D5F then goto ASSIGN4D63 else goto JOIN4D6E
    ASSIGN4D63:  preds = [COND4D61]
      int _t4D62#2 = 3;
      bool _t4D64#1 = NEQ<int>(_t4720,_t4D62);
      if _t4D64 then goto JOIN4D6A else goto JOIN4D6A
    JOIN4D6A:  preds = [COND4D66,COND4D66]
      real faceTime4D67#1 = phi(faceTime4D39,_t4D4B)
      int face4D68#1 = phi(_t4D62,face4D3A)
      real time4D69#1 = phi(_t4D4B,time4D3B)
      goto JOIN4D6E
    JOIN4D6E:  preds = [JOIN4D6A,COND4D61]
      real faceTime4D6B#2 = phi(faceTime4D67,faceTime4D39)
      int face4D6C#2 = phi(face4D68,face4D3A)
      real time4D6D#1 = phi(time4D69,time4D3B)
      bool _t4D6F#1 = NEQ<int>(face4D6C,face4724);
      if _t4D6F then goto ASSIGN4D73 else goto ASSIGN4F61
    ASSIGN4D73:  preds = [COND4D71]
      real _t4D72#1 = Max<real>(time4D6D,_t4CD5);
      real _t4D74#1 = IntToReal(face4D6C);
      tensor[2] _t4D76#1 = <tensor[2]>[_t4D72,_t4D74];
      goto JOIN4D7A
    JOIN4D7A:  preds = [ASSIGN4D77,JOIN4F66]
      tensor[2] _t4D78#1 = phi(_t4D76,_t4D79)
      real eTime4D7B#3 = VIndex<2,0>(_t4D78);
      real op1_e3_l_34D7D#1 = RMul(time46E9,eTime4D7B);
      real time471D#2 = RSub(time46E9,op1_e3_l_34D7D);
      int _t4D82#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp40D3);
      tensor[3] _t4D84#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp40D3);
      real op1_e3_l_104D86#1 = VDot<3>(_t472A,_t4D84);
      real op1_e3_l_264D89#1 = RSub(_t4728,op1_e3_l_104D86);
      real _t4D8C#4 = RDiv(op1_e3_l_264D89,op1_e3_l_224CBB);
      bool _t4D8F#1 = GTE<real>(_t4D8C,_t473B);
      bool _t4D91#1 = GT<real>(time4722,_t4D8C);
      bool _t4D93#1 = BAnd(_t4D91,_t4CC3);
      bool _t4D95#1 = BAnd(_t4D8F,_t4D93);
      if _t4D95 then goto ASSIGN4D99 else goto JOIN4DA2
    ASSIGN4D99:  preds = [COND4D97]
      bool _t4D98#1 = NEQ<int>(_t4720,_t40CC);
      if _t4D98 then goto JOIN4D9E else goto JOIN4D9E
    JOIN4D9E:  preds = [COND4D9A,COND4D9A]
      real faceTime4D9B#1 = phi(faceTime4726,_t4D8C)
      int face4D9C#1 = phi(_t40CC,face4724)
      real time4D9D#1 = phi(_t4D8C,time4722)
      goto JOIN4DA2
    JOIN4DA2:  preds = [JOIN4D9E,COND4D97]
      real faceTime4D9F#2 = phi(faceTime4D9B,faceTime4726)
      int face4DA0#2 = phi(face4D9C,face4724)
      real time4DA1#3 = phi(time4D9D,time4722)
      real op1_e3_l_104DA3#1 = VDot<3>(_t4CD7,_t4D84);
      real op1_e3_l_264DA6#1 = RSub(_t4CD5,op1_e3_l_104DA3);
      real _t4DA9#4 = RDiv(op1_e3_l_264DA6,op1_e3_l_224CEF);
      bool _t4DAC#1 = GTE<real>(_t4DA9,_t473B);
      bool _t4DAE#1 = GT<real>(time4DA1,_t4DA9);
      bool _t4DB0#1 = BAnd(_t4DAE,_t4CF5);
      bool _t4DB2#1 = BAnd(_t4DAC,_t4DB0);
      if _t4DB2 then goto ASSIGN4DB6 else goto JOIN4DC1
    ASSIGN4DB6:  preds = [COND4DB4]
      int _t4DB5#2 = 1;
      bool _t4DB7#1 = NEQ<int>(_t4720,_t4DB5);
      if _t4DB7 then goto JOIN4DBD else goto JOIN4DBD
    JOIN4DBD:  preds = [COND4DB9,COND4DB9]
      real faceTime4DBA#1 = phi(faceTime4D9F,_t4DA9)
      int face4DBB#1 = phi(_t4DB5,face4DA0)
      real time4DBC#1 = phi(_t4DA9,time4DA1)
      goto JOIN4DC1
    JOIN4DC1:  preds = [JOIN4DBD,COND4DB4]
      real faceTime4DBE#2 = phi(faceTime4DBA,faceTime4D9F)
      int face4DBF#2 = phi(face4DBB,face4DA0)
      real time4DC0#3 = phi(time4DBC,time4DA1)
      real op1_e3_l_104DC2#1 = VDot<3>(_t4D0B,_t4D84);
      real op1_e3_l_264DC5#1 = RSub(_t4CD5,op1_e3_l_104DC2);
      real _t4DC8#4 = RDiv(op1_e3_l_264DC5,op1_e3_l_224D23);
      bool _t4DCB#1 = GTE<real>(_t4DC8,_t473B);
      bool _t4DCD#1 = GT<real>(time4DC0,_t4DC8);
      bool _t4DCF#1 = BAnd(_t4DCD,_t4D29);
      bool _t4DD1#1 = BAnd(_t4DCB,_t4DCF);
      if _t4DD1 then goto ASSIGN4DD5 else goto JOIN4DE0
    ASSIGN4DD5:  preds = [COND4DD3]
      int _t4DD4#2 = 2;
      bool _t4DD6#1 = NEQ<int>(_t4720,_t4DD4);
      if _t4DD6 then goto JOIN4DDC else goto JOIN4DDC
    JOIN4DDC:  preds = [COND4DD8,COND4DD8]
      real faceTime4DD9#1 = phi(faceTime4DBE,_t4DC8)
      int face4DDA#1 = phi(_t4DD4,face4DBF)
      real time4DDB#1 = phi(_t4DC8,time4DC0)
      goto JOIN4DE0
    JOIN4DE0:  preds = [JOIN4DDC,COND4DD3]
      real faceTime4DDD#2 = phi(faceTime4DD9,faceTime4DBE)
      int face4DDE#2 = phi(face4DDA,face4DBF)
      real time4DDF#3 = phi(time4DDB,time4DC0)
      real op1_e3_l_104DE1#1 = VDot<3>(_t4D3D,_t4D84);
      real op1_e3_l_264DE4#1 = RSub(_t4CD5,op1_e3_l_104DE1);
      real _t4DE7#4 = RDiv(op1_e3_l_264DE4,op1_e3_l_224D55);
      bool _t4DEA#1 = GTE<real>(_t4DE7,_t473B);
      bool _t4DEC#1 = GT<real>(time4DDF,_t4DE7);
      bool _t4DEE#1 = BAnd(_t4DEC,_t4D5B);
      bool _t4DF0#1 = BAnd(_t4DEA,_t4DEE);
      if _t4DF0 then goto ASSIGN4DF4 else goto JOIN4DFF
    ASSIGN4DF4:  preds = [COND4DF2]
      int _t4DF3#2 = 3;
      bool _t4DF5#1 = NEQ<int>(_t4720,_t4DF3);
      if _t4DF5 then goto JOIN4DFB else goto JOIN4DFB
    JOIN4DFB:  preds = [COND4DF7,COND4DF7]
      real faceTime4DF8#1 = phi(faceTime4DDD,_t4DE7)
      int face4DF9#1 = phi(_t4DF3,face4DDE)
      real time4DFA#1 = phi(_t4DE7,time4DDF)
      goto JOIN4DFF
    JOIN4DFF:  preds = [JOIN4DFB,COND4DF2]
      real faceTime4DFC#2 = phi(faceTime4DF8,faceTime4DDD)
      int face4DFD#2 = phi(face4DF9,face4DDE)
      real time4DFE#1 = phi(time4DFA,time4DDF)
      bool _t4E00#1 = NEQ<int>(face4DFD,face4724);
      if _t4E00 then goto ASSIGN4E04 else goto ASSIGN4F57
    ASSIGN4E04:  preds = [COND4E02]
      real _t4E03#1 = Max<real>(time4DFE,_t4CD5);
      real _t4E05#1 = IntToReal(face4DFD);
      tensor[2] _t4E07#1 = <tensor[2]>[_t4E03,_t4E05];
      goto JOIN4E0B
    JOIN4E0B:  preds = [ASSIGN4E08,JOIN4F5C]
      tensor[2] _t4E09#3 = phi(_t4E07,_t4E0A)
      real _t4E0C#1 = VIndex<2,1>(_t4E09);
      real t4E0E#1 = Floor<1>(_t4E0C);
      int _t4E10#6 = RealToInt<1>(t4E0E);
      int[2] _t4E12#2 = nextCell44E13 (_t4E10,_t4D82,_t40D2);
      int _t4E26#2 = Subscript<int[2]>(_t4E12,_t40CC);
      bool _t4E28#1 = NEQ<int>(face4724,_t4E26);
      if _t4E28 then goto ASSIGN4E2C else goto ASSIGN4F40
    ASSIGN4E2C:  preds = [COND4E2A]
      string _t4E2B#1 = "face ";
      string _t4E2D#1 = " to ";
      int _t4E2F#1 = 1;
      int _t4E31#6 = Subscript<int[2]>(_t4E12,_t4E2F);
      string _t4E33#2 = "\n";
      string _t4E35#1 = "got: ";
      tensor[4] _t4E37#7 = <tensor[4]>[time40CA,_t4CD5,_t4CD5,_t4CD5];
      tensor[4] _t4E39#6 = <tensor[4]>[_t4CD5,time40CA,_t4CD5,_t4CD5];
      tensor[4] _t4E3B#7 = <tensor[4]>[_t4CD5,_t4CD5,time40CA,_t4CD5];
      real _t4E3D#1 = 0.971445146547e-16;
      tensor[4] _t4E3F#4 = <tensor[4]>[_t4E3D,_t4CD5,_t4CD5,time40CA];
      tensor[4,4] _t4E41#4 = <tensor[4,4]>[_t4E37,_t4E39,_t4E3B,_t4E3F];
      real _t4E43#7 = -0.57735026919e0;
      tensor[4] _t4E45#2 = <tensor[4]>[_t4728,_t4728,_t4728,_t4E43];
      real _t4E47#4 = -0.333333333333e0;
      real _t4E49#2 = 0.666666666667e0;
      real _t4E4B#2 = 0.333333333333e0;
      tensor[4] _t4E4D#3 = <tensor[4]>[_t4E47,_t4E49,_t4E47,_t4E4B];
      tensor[4] _t4E4F#3 = <tensor[4]>[_t4E47,_t4E47,_t4E49,_t4E4B];
      tensor[4,4] _t4E51#4 = <tensor[4,4]>[_t4E45,_t4E4D,_t4E4F,_t4E3F];
      tensor[4] _t4E53#1 = <tensor[4]>[_t4E43,_t4E43,_t4E43,_t4728];
      tensor[4,4] _t4E55#4 = <tensor[4,4]>[_t4E4D,_t4E53,_t4E4F,_t4E3F];
      tensor[4,4] _t4E57#4 = <tensor[4,4]>[_t4E4D,_t4E4F,_t4E45,_t4E3F];
      tensor[4,4][4] _t4E59#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4] _t4E5B#1 = <tensor[4]>[_t4728,_t4D09,_t4D09,time40CA];
      tensor[4] _t4E5D#1 = <tensor[4]>[_t4728,time40CA,_t4CD5,_t4CD5];
      tensor[4] _t4E5F#1 = <tensor[4]>[_t4728,_t4CD5,time40CA,_t4CD5];
      tensor[4] _t4E61#10 = <tensor[4]>[_t4CD5,_t4CD5,_t4CD5,time40CA];
      tensor[4,4] _t4E63#4 = <tensor[4,4]>[_t4E5B,_t4E5D,_t4E5F,_t4E61];
      tensor[4,4] _t4E65#12 = <tensor[4,4]>[_t4E37,_t4E39,_t4E3B,_t4E61];
      tensor[4] _t4E67#1 = <tensor[4]>[_t4D09,_t4CD5,_t4CD5,_t4CD5];
      tensor[4,4] _t4E69#4 = <tensor[4,4]>[_t4E39,_t4E67,_t4E3B,_t4E61];
      tensor[4,4] _t4E6B#4 = <tensor[4,4]>[_t4E39,_t4E3B,_t4E37,_t4E61];
      tensor[4,4][4] _t4E6D#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4] _t4E6F#1 = <tensor[4]>[_t4D09,_t4E43,_t4D09,time40CA];
      tensor[4] _t4E71#1 = <tensor[4]>[time40CA,_t4E43,_t4CD5,_t4CD5];
      tensor[4] _t4E73#1 = <tensor[4]>[_t4CD5,_t4E43,time40CA,_t4CD5];
      tensor[4,4] _t4E75#4 = <tensor[4,4]>[_t4E6F,_t4E71,_t4E73,_t4E61];
      tensor[4] _t4E77#2 = <tensor[4]>[_t4CD5,_t4D09,_t4CD5,_t4CD5];
      tensor[4,4] _t4E79#4 = <tensor[4,4]>[_t4E77,_t4E37,_t4E3B,_t4E61];
      tensor[4,4] _t4E7B#4 = <tensor[4,4]>[_t4E37,_t4E3B,_t4E77,_t4E61];
      tensor[4,4][4] _t4E7D#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4] _t4E7F#1 = <tensor[4]>[_t4D09,_t4D09,_t4728,time40CA];
      tensor[4] _t4E81#1 = <tensor[4]>[time40CA,_t4CD5,_t4728,_t4CD5];
      tensor[4] _t4E83#1 = <tensor[4]>[_t4CD5,time40CA,_t4728,_t4CD5];
      tensor[4,4] _t4E85#4 = <tensor[4,4]>[_t4E7F,_t4E81,_t4E83,_t4E61];
      tensor[4,4] _t4E87#4 = <tensor[4,4]>[_t4E3B,_t4E37,_t4E39,_t4E61];
      tensor[4] _t4E89#1 = <tensor[4]>[_t4CD5,_t4CD5,_t4D09,_t4CD5];
      tensor[4,4] _t4E8B#4 = <tensor[4,4]>[_t4E37,_t4E89,_t4E39,_t4E61];
      tensor[4,4][4] _t4E8D#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4E8F#1 = <tensor[4,4][4][4]>{_t4E59,_t4E6D,_t4E7D,_t4E8D};
      tensor[4,4][4] _t4E91#1 = Subscript<tensor[4,4][4][4]>(_t4E8F,_t4E10);
      tensor[4,4] _t4E93#1 = Subscript<tensor[4,4][4]>(_t4E91,_t4E31);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t4E2B,_t4E10,_t4E2D,_t4E31,_t4E33,_t4E35,_t4E93,_t4E33);
      tensor[4,4][4] _t4E96#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4E98#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4E9A#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4E9C#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4E9E#1 = <tensor[4,4][4][4]>{_t4E96,_t4E98,_t4E9A,_t4E9C};
      tensor[4,4][4] _t4EA0#1 = Subscript<tensor[4,4][4][4]>(_t4E9E,_t4E10);
      tensor[4,4] _t4EA2#4 = Subscript<tensor[4,4][4]>(_t4EA0,_t4E31);
      real _t4EA4#1 = VIndex<2,0>(_t4E09);
      real r4EA7#1 = vdot4CAB;
      real r4EA8#3 = RMul(_t4EA4,time46E9);
      real r4EA9#1 = RMul(r4EA8,r4EA7);
      real r4EAA#1 = vdot4CAD;
      real r4EAB#1 = RMul(r4EA8,r4EAA);
      real r4EAC#1 = vdot4CAF;
      real r4EAD#1 = RMul(r4EA8,r4EAC);
      tensor[3] op1_e3_l_224EA6#1 = <tensor[3]>[r4EA9,r4EAB,r4EAD];
      tensor[3] _t4EB7#3 = VAdd<3>(op1_e3_l_224EA6,_t4D84);
      real _t4EBA#1 = VIndex<3,0>(_t4EB7);
      real _t4EBC#1 = VIndex<3,1>(_t4EB7);
      real _t4EBE#1 = VIndex<3,2>(_t4EB7);
      tensor[4] _t4EC0#12 = <tensor[4]>[_t4EBA,_t4EBC,_t4EBE,time40CA];
      tensor[4] projParam4EC3#1 = ProjectLast<tensor[4,4],[0]>(_t4EA2);
      real vdot4EC4#1 = VDot<4>(projParam4EC3,_t4EC0);
      tensor[4] projParam4EC5#1 = ProjectLast<tensor[4,4],[1]>(_t4EA2);
      real vdot4EC6#1 = VDot<4>(projParam4EC5,_t4EC0);
      tensor[4] projParam4EC7#1 = ProjectLast<tensor[4,4],[2]>(_t4EA2);
      real vdot4EC8#1 = VDot<4>(projParam4EC7,_t4EC0);
      tensor[4] projParam4EC9#1 = ProjectLast<tensor[4,4],[3]>(_t4EA2);
      real vdot4ECA#1 = VDot<4>(projParam4EC9,_t4EC0);
      tensor[4] _t4EC2#1 = <tensor[4]>[vdot4EC4,vdot4EC6,vdot4EC8,vdot4ECA];
      real _t4ED5#1 = VIndex<4,0>(_t4EC2);
      tensor[4,4][4] _t4ED7#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4ED9#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4EDB#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4EDD#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4EDF#1 = <tensor[4,4][4][4]>{_t4ED7,_t4ED9,_t4EDB,_t4EDD};
      tensor[4,4][4] _t4EE1#1 = Subscript<tensor[4,4][4][4]>(_t4EDF,_t4E10);
      tensor[4,4] _t4EE3#4 = Subscript<tensor[4,4][4]>(_t4EE1,_t4E31);
      tensor[4] projParam4EE6#1 = ProjectLast<tensor[4,4],[0]>(_t4EE3);
      real vdot4EE7#1 = VDot<4>(projParam4EE6,_t4EC0);
      tensor[4] projParam4EE8#1 = ProjectLast<tensor[4,4],[1]>(_t4EE3);
      real vdot4EE9#1 = VDot<4>(projParam4EE8,_t4EC0);
      tensor[4] projParam4EEA#1 = ProjectLast<tensor[4,4],[2]>(_t4EE3);
      real vdot4EEB#1 = VDot<4>(projParam4EEA,_t4EC0);
      tensor[4] projParam4EEC#1 = ProjectLast<tensor[4,4],[3]>(_t4EE3);
      real vdot4EED#1 = VDot<4>(projParam4EEC,_t4EC0);
      tensor[4] _t4EE5#1 = <tensor[4]>[vdot4EE7,vdot4EE9,vdot4EEB,vdot4EED];
      real _t4EF8#1 = VIndex<4,1>(_t4EE5);
      tensor[4,4][4] _t4EFA#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4EFC#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4EFE#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4F00#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4F02#1 = <tensor[4,4][4][4]>{_t4EFA,_t4EFC,_t4EFE,_t4F00};
      tensor[4,4][4] _t4F04#1 = Subscript<tensor[4,4][4][4]>(_t4F02,_t4E10);
      tensor[4,4] _t4F06#4 = Subscript<tensor[4,4][4]>(_t4F04,_t4E31);
      tensor[4] projParam4F09#1 = ProjectLast<tensor[4,4],[0]>(_t4F06);
      real vdot4F0A#1 = VDot<4>(projParam4F09,_t4EC0);
      tensor[4] projParam4F0B#1 = ProjectLast<tensor[4,4],[1]>(_t4F06);
      real vdot4F0C#1 = VDot<4>(projParam4F0B,_t4EC0);
      tensor[4] projParam4F0D#1 = ProjectLast<tensor[4,4],[2]>(_t4F06);
      real vdot4F0E#1 = VDot<4>(projParam4F0D,_t4EC0);
      tensor[4] projParam4F0F#1 = ProjectLast<tensor[4,4],[3]>(_t4F06);
      real vdot4F10#1 = VDot<4>(projParam4F0F,_t4EC0);
      tensor[4] _t4F08#1 = <tensor[4]>[vdot4F0A,vdot4F0C,vdot4F0E,vdot4F10];
      real _t4F1B#1 = VIndex<4,2>(_t4F08);
      tensor[3] _t4F1D#1 = <tensor[3]>[_t4ED5,_t4EF8,_t4F1B];
      femData:MeshPos _t4F1F#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t40D2,_t4E26,_t4F1D,_t4E31);
      goto JOIN4F22
    JOIN4F22:  preds = [ASSIGN4F20,ASSIGN4F55]
      femData:MeshPos nmp471B#3 = phi(_t4F1F,_t4F21)
      bool _t4F23#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp471B);
      bool _t4F25#1 = BNot(_t4F23);
      if _t4F25 then goto ASSIGN4F29 else goto ASSIGN4F31
    ASSIGN4F29:  preds = [COND4F27]
      bool _t4F28#1 = true;
      goto JOIN4F2C
    JOIN4F2C:  preds = [ASSIGN4F29,JOIN4F36]
      bool _t4F2A#1 = phi(_t4F28,_t4F2B)
      if _t4F2A then goto RETURN(nmp471B)4F2E else goto JOIN4F2F
    RETURN(nmp471B)4F2E:  preds = [COND4F2D]
      return nmp471B
      goto JOIN4F2F
    JOIN4F2F:  preds = [*RETURN(nmp471B)4F2E,COND4F2D]
      goto JOIN471E
    ASSIGN4F31:  preds = [COND4F27]
      bool _t4F30#1 = LT<real>(eTime4D7B,_t4CD5);
      if _t4F30 then goto ASSIGN4F34 else goto ASSIGN4F38
    ASSIGN4F34:  preds = [COND4F32]
      bool _t4F33#1 = true;
      goto JOIN4F36
    JOIN4F36:  preds = [ASSIGN4F34,JOIN4F3D]
      bool _t4F2B#1 = phi(_t4F33,_t4F35)
      goto JOIN4F2C
    ASSIGN4F38:  preds = [COND4F32]
      bool _t4F37#1 = GT<real>(eTime4D7B,time40CA);
      if _t4F37 then goto ASSIGN4F3B else goto ASSIGN4F3E
    ASSIGN4F3B:  preds = [COND4F39]
      bool _t4F3A#1 = true;
      goto JOIN4F3D
    JOIN4F3D:  preds = [ASSIGN4F3B,ASSIGN4F3E]
      bool _t4F35#1 = phi(_t4F3A,_t4F3C)
      goto JOIN4F36
    ASSIGN4F3E:  preds = [COND4F39]
      bool _t4F3C#1 = LT<real>(time471D,timeEps40C1);
      goto JOIN4F3D
    ASSIGN4F40:  preds = [COND4E2A]
      real _t4F3F#1 = VIndex<2,0>(_t4E09);
      real r4F42#1 = vdot4CAB;
      real r4F43#3 = RMul(_t4F3F,time46E9);
      real r4F44#1 = RMul(r4F43,r4F42);
      real r4F45#1 = vdot4CAD;
      real r4F46#1 = RMul(r4F43,r4F45);
      real r4F47#1 = vdot4CAF;
      real r4F48#1 = RMul(r4F43,r4F47);
      tensor[3] op1_e3_l_224F41#1 = <tensor[3]>[r4F44,r4F46,r4F48];
      tensor[3] _t4F52#1 = VAdd<3>(op1_e3_l_224F41,_t4D84);
      femData:MeshPos _t4F21#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t40D2,_t4F52);
      goto JOIN4F22
    ASSIGN4F57:  preds = [COND4E02]
      bool _t4F56#1 = EQ<real>(faceTime4726,faceTime4DFC);
      if _t4F56 then goto ASSIGN4F5A else goto ASSIGN4F5E
    ASSIGN4F5A:  preds = [COND4F58]
      tensor[2] _t4F59#1 = <tensor[2]>[_t4D09,_t4D09];
      goto JOIN4F5C
    JOIN4F5C:  preds = [ASSIGN4F5A,ASSIGN4F5F]
      tensor[2] _t4E0A#1 = phi(_t4F59,_t4F5B)
      goto JOIN4E0B
    ASSIGN4F5E:  preds = [COND4F58]
      real _t4F5D#1 = IntToReal(_t4720);
      tensor[2] _t4F5B#1 = <tensor[2]>[faceTime4DFC,_t4F5D];
      goto JOIN4F5C
    ASSIGN4F61:  preds = [COND4D71]
      bool _t4F60#1 = EQ<real>(faceTime4726,faceTime4D6B);
      if _t4F60 then goto ASSIGN4F64 else goto ASSIGN4F68
    ASSIGN4F64:  preds = [COND4F62]
      tensor[2] _t4F63#1 = <tensor[2]>[_t4D09,_t4D09];
      goto JOIN4F66
    JOIN4F66:  preds = [ASSIGN4F64,ASSIGN4F69]
      tensor[2] _t4D79#1 = phi(_t4F63,_t4F65)
      goto JOIN4D7A
    ASSIGN4F68:  preds = [COND4F62]
      real _t4F67#1 = IntToReal(_t4720);
      tensor[2] _t4F65#1 = <tensor[2]>[faceTime4D6B,_t4F67];
      goto JOIN4F66
    ASSIGN4F6B:  preds = [FOREACH40D1]
      string _t4F6A#1 = "Took stupid way out!\n";
      Print<[string]>(_t4F6A);
      tensor[3] _t4F6D#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x40BA);
      int _t4F6F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x40BA);
      femData:Mesh _t4F71#16 = ExtractFem<femData:Mesh,femData:MeshPos>(x40BA);
      int ilit4F74#1 = 4;
      int mulRes4F75#4 = IMul(_t4F6F,ilit4F74);
      int addRes4F77#1 = mulRes4F75;
      int idx4F78#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F77);
      int ilit4F79#1 = 1;
      int addRes4F7A#1 = IAdd(mulRes4F75,ilit4F79);
      int idx4F7B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F7A);
      int ilit4F7C#1 = 2;
      int addRes4F7D#1 = IAdd(mulRes4F75,ilit4F7C);
      int idx4F7E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F7D);
      int ilit4F7F#1 = 3;
      int addRes4F80#1 = IAdd(mulRes4F75,ilit4F7F);
      int idx4F81#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F80);
      int ilit4F95#4 = 3;
      int idx4F96#1 = idx4F78;
      int mulRes4F97#3 = IMul(ilit4F95,idx4F96);
      int addRes4F98#1 = mulRes4F97;
      int ilit4F99#4 = 1;
      int addRes4F9A#1 = IAdd(ilit4F99,mulRes4F97);
      int ilit4F9B#4 = 2;
      int addRes4F9C#1 = IAdd(ilit4F9B,mulRes4F97);
      real dof_load4F9D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F98);
      real dof_load4F9E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F9A);
      real dof_load4F9F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F9C);
      int idx4FA1#1 = idx4F7B;
      int mulRes4FA2#3 = IMul(ilit4F95,idx4FA1);
      int addRes4FA3#1 = mulRes4FA2;
      int addRes4FA4#1 = IAdd(ilit4F99,mulRes4FA2);
      int addRes4FA5#1 = IAdd(ilit4F9B,mulRes4FA2);
      real dof_load4FA6#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA3);
      real dof_load4FA7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA4);
      real dof_load4FA8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA5);
      int idx4FAA#1 = idx4F7E;
      int mulRes4FAB#3 = IMul(ilit4F95,idx4FAA);
      int addRes4FAC#1 = mulRes4FAB;
      int addRes4FAD#1 = IAdd(ilit4F99,mulRes4FAB);
      int addRes4FAE#1 = IAdd(ilit4F9B,mulRes4FAB);
      real dof_load4FAF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAC);
      real dof_load4FB0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAD);
      real dof_load4FB1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAE);
      int idx4FB3#1 = idx4F81;
      int mulRes4FB4#3 = IMul(ilit4F95,idx4FB3);
      int addRes4FB5#1 = mulRes4FB4;
      int addRes4FB6#1 = IAdd(ilit4F99,mulRes4FB4);
      int addRes4FB7#1 = IAdd(ilit4F9B,mulRes4FB4);
      real dof_load4FB8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB5);
      real dof_load4FB9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB6);
      real dof_load4FBA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB7);
      real varAcc4FE8#1 = VIndex<3,0>(_t4F6D);
      real varAcc4FE9#1 = VIndex<3,1>(_t4F6D);
      real varAcc4FEA#1 = VIndex<3,2>(_t4F6D);
      real coeff4FEB#3 = -0.1e1;
      real iden4FEC#1 = varAcc4FE8;
      real one4FED#11 = 0.1e1;
      real prod4FEE#2 = RMul(one4FED,one4FED);
      real prod4FEF#2 = RMul(iden4FEC,prod4FEE);
      real iden4FF0#1 = varAcc4FE9;
      real prod4FF1#1 = RMul(iden4FF0,one4FED);
      real prod4FF2#2 = RMul(one4FED,prod4FF1);
      real iden4FF3#1 = varAcc4FEA;
      real prod4FF4#1 = RMul(one4FED,iden4FF3);
      real prod4FF5#2 = RMul(one4FED,prod4FF4);
      real prod4FF6#1 = RMul(one4FED,prod4FEE);
      real mult4FF7#1 = RMul(one4FED,prod4FF6);
      real mult4FF8#1 = RMul(coeff4FEB,prod4FF5);
      real mult4FF9#1 = RMul(coeff4FEB,prod4FF2);
      real mult4FFA#1 = RMul(coeff4FEB,prod4FEF);
      real sum4FFB#1 = RAdd(mult4FF9,mult4FFA);
      real sum4FFC#1 = RAdd(mult4FF8,sum4FFB);
      real sum4FFD#1 = RAdd(mult4FF7,sum4FFC);
      real intermediate4FFE#1 = sum4FFD;
      real basisEval4FFF#1 = RMul(one4FED,prod4FEF);
      real basisEval5000#1 = RMul(one4FED,prod4FF2);
      real basisEval5001#1 = RMul(one4FED,prod4FF5);
      real r5020#1 = dof_load4F9D;
      real r5021#3 = intermediate4FFE;
      real r5022#1 = RMul(r5020,r5021);
      real r5023#1 = dof_load4FA6;
      real r5024#3 = basisEval4FFF;
      real r5025#1 = RMul(r5023,r5024);
      real r5026#1 = dof_load4FAF;
      real r5027#3 = basisEval5000;
      real r5028#1 = RMul(r5026,r5027);
      real r5029#1 = dof_load4FB8;
      real r502A#3 = basisEval5001;
      real r502B#1 = RMul(r5029,r502A);
      real r502C#1 = RAdd(r5022,r5025);
      real r502D#1 = RAdd(r502C,r5028);
      real r502E#1 = RAdd(r502D,r502B);
      real r502F#1 = dof_load4F9E;
      real r5030#1 = RMul(r502F,r5021);
      real r5031#1 = dof_load4FA7;
      real r5032#1 = RMul(r5031,r5024);
      real r5033#1 = dof_load4FB0;
      real r5034#1 = RMul(r5033,r5027);
      real r5035#1 = dof_load4FB9;
      real r5036#1 = RMul(r5035,r502A);
      real r5037#1 = RAdd(r5030,r5032);
      real r5038#1 = RAdd(r5037,r5034);
      real r5039#1 = RAdd(r5038,r5036);
      real r503A#1 = dof_load4F9F;
      real r503B#1 = RMul(r503A,r5021);
      real r503C#1 = dof_load4FA8;
      real r503D#1 = RMul(r503C,r5024);
      real r503E#1 = dof_load4FB1;
      real r503F#1 = RMul(r503E,r5027);
      real r5040#1 = dof_load4FBA;
      real r5041#1 = RMul(r5040,r502A);
      real r5042#1 = RAdd(r503B,r503D);
      real r5043#1 = RAdd(r5042,r503F);
      real r5044#1 = RAdd(r5043,r5041);
      tensor[3] probe_l_5501F#1 = <tensor[3]>[r502E,r5039,r5044];
      tensor[3] _t506C#1 = VAdd<3>(probe_l_5501F,dPos40BB);
      femData:MeshPos cmp506F#1 = findPos3574 (meshData40BD,_t506C);
      return cmp506F
}
## input initialization
  ENTRY352A:  preds = []
    int timeSteps352B#1 = 32;
    globals.timeSteps3522 = timeSteps352B;
    real timeEps352E#1 = 0.1e-6;
    globals.timeEps3523 = timeEps352E;
    real stepSize3531#1 = 0.1e-1;
    globals.stepSize3525 = stepSize3531;
    int stepMax3534#1 = 100;
    globals.stepMax3526 = stepMax3534;
    return
## global-variable initialization
  ENTRY3538:  preds = []
    femData:Mesh meshData3539#3 = globals.meshData351F;
    femData:Space 0space03AB_intermedateGlobal353B#1 = globals.0space03AB_intermedateGlobal3520;
    femData:FemFunc 0data03AD_intermedateGlobal353D#1 = globals.0data03AD_intermedateGlobal3521;
    int _t353F#1 = 0;
    int _t3541#1 = 1;
    int _t3543#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3539);
    int _t3545#1 = ISub(_t3543,_t3541);
    int[] _t3547#1 = Range(_t353F,_t3545);
    femData:MeshCell[] _t3549#1 = <femData:MeshCell[]>{};
  FOREACH354C:  preds = [ASSIGN354A,NEXT3552]
    foreach (_t354B in _t3547) on exit goto ASSIGN3554
      femData:MeshCell[] _t3550#1 = phi(_t3549,_t354F)
    femData:MeshCell _t354D#1 = LoadFem<femData:MeshCell>(meshData3539,_t354B);
    femData:MeshCell[] _t354F#1 = Append<femData:MeshCell>(_t3550,_t354D);
    goto FOREACH354C
  ASSIGN3554:  preds = [FOREACH354C]
    femData:Space space3553#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal353B,meshData3539);
    femData:FemFunc data3555#2 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal353D,space3553);
    globals.data3527 = data3555;
    femData:Space _t3558#2 = ExtractFem<femData:Space,femData:FemFunc>(data3555);
    femData:Mesh _t355A#1 = ExtractFem<femData:Mesh,femData:Space>(_t3558);
    globals._t3528 = _t355A;
    globals._tX3529 = _t3558;
    return
## strand
  strand gg (tensor[3] startPos355F#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3566:  preds = []
        femData:Mesh meshData3567#1 = globals.meshData351F;
        tensor[3][1] _t3569#1 = <tensor[3][1]>{startPos355F};
        tensor[3][] _t356B#1 = MkDynamic<tensor[3],1>(_t3569);
        tensor[3][1] _t356D#1 = <tensor[3][1]>{startPos355F};
        tensor[3][] _t356F#1 = MkDynamic<tensor[3],1>(_t356D);
        int step3571#1 = 0;
        femData:MeshPos cPos3573#1 = findPos3574 (meshData3567,startPos355F);
        self.stream = _t356B;
        self.newStream = _t356F;
        self.step = step3571;
        self.cPos = cPos3573;
        self.altCPos = startPos355F;
        self.startPos = startPos355F;
        return
    end state init
    method update
        ENTRY3CC6:  preds = []
          femData:Mesh _t3CC7#2 = globals._t3528;
          femData:Space _t3CC9#20 = globals._tX3529;
          femData:FemFunc data3CCB#62 = globals.data3527;
          femData:Mesh meshData3CCD#2 = globals.meshData351F;
          real stepSize3CCF#4 = globals.stepSize3525;
          int stepMax3CD1#1 = globals.stepMax3526;
          tensor[3][] stream3CD3#2 = self.stream;
          tensor[3][] newStream3CD5#1 = self.newStream;
          int step3CD7#3 = self.step;
          femData:MeshPos cPos3CD9#6 = self.cPos;
          tensor[3] altCPos3CDB#5 = self.altCPos;
          tensor[3] startPos3CDD#1 = self.startPos;
          bool _t3CDF#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos3CD9);
          bool _t3CE1#1 = BNot(_t3CDF);
          if _t3CE1 then goto ASSIGN3CE5 else goto ASSIGN59B1
        ASSIGN3CE5:  preds = [COND3CE3]
          bool _t3CE4#1 = true;
          goto JOIN3CE8
        JOIN3CE8:  preds = [ASSIGN3CE5,JOIN59BA]
          bool _t3CE6#1 = phi(_t3CE4,_t3CE7)
          if _t3CE6 then goto STABILIZE3CEA else goto JOIN3CEB
        STABILIZE3CEA:  preds = [COND3CE9]
          stabilize
          goto JOIN3CEB
        JOIN3CEB:  preds = [*STABILIZE3CEA,COND3CE9]
          tensor[3] _t3CEC#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos3CD9);
          int _t3CEE#3 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos3CD9);
          femData:Mesh _t3CF0#18 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos3CD9);
          int ilit3CF3#1 = 4;
          int mulRes3CF4#4 = IMul(_t3CEE,ilit3CF3);
          int addRes3CF6#1 = mulRes3CF4;
          int idx3CF7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CF6);
          int ilit3CF8#1 = 1;
          int addRes3CF9#1 = IAdd(mulRes3CF4,ilit3CF8);
          int idx3CFA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CF9);
          int ilit3CFB#1 = 2;
          int addRes3CFC#1 = IAdd(mulRes3CF4,ilit3CFB);
          int idx3CFD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CFC);
          int ilit3CFE#1 = 3;
          int addRes3CFF#1 = IAdd(mulRes3CF4,ilit3CFE);
          int idx3D00#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CFF);
          int ilit3D14#4 = 3;
          int idx3D15#1 = idx3CF7;
          int mulRes3D16#3 = IMul(ilit3D14,idx3D15);
          int addRes3D17#1 = mulRes3D16;
          int ilit3D18#4 = 1;
          int addRes3D19#1 = IAdd(ilit3D18,mulRes3D16);
          int ilit3D1A#4 = 2;
          int addRes3D1B#1 = IAdd(ilit3D1A,mulRes3D16);
          real dof_load3D1C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D17);
          real dof_load3D1D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D19);
          real dof_load3D1E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D1B);
          int idx3D20#1 = idx3CFA;
          int mulRes3D21#3 = IMul(ilit3D14,idx3D20);
          int addRes3D22#1 = mulRes3D21;
          int addRes3D23#1 = IAdd(ilit3D18,mulRes3D21);
          int addRes3D24#1 = IAdd(ilit3D1A,mulRes3D21);
          real dof_load3D25#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D22);
          real dof_load3D26#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D23);
          real dof_load3D27#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D24);
          int idx3D29#1 = idx3CFD;
          int mulRes3D2A#3 = IMul(ilit3D14,idx3D29);
          int addRes3D2B#1 = mulRes3D2A;
          int addRes3D2C#1 = IAdd(ilit3D18,mulRes3D2A);
          int addRes3D2D#1 = IAdd(ilit3D1A,mulRes3D2A);
          real dof_load3D2E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2B);
          real dof_load3D2F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2C);
          real dof_load3D30#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2D);
          int idx3D32#1 = idx3D00;
          int mulRes3D33#3 = IMul(ilit3D14,idx3D32);
          int addRes3D34#1 = mulRes3D33;
          int addRes3D35#1 = IAdd(ilit3D18,mulRes3D33);
          int addRes3D36#1 = IAdd(ilit3D1A,mulRes3D33);
          real dof_load3D37#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D34);
          real dof_load3D38#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D35);
          real dof_load3D39#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D36);
          real varAcc3D67#1 = VIndex<3,0>(_t3CEC);
          real varAcc3D68#1 = VIndex<3,1>(_t3CEC);
          real varAcc3D69#1 = VIndex<3,2>(_t3CEC);
          real coeff3D6A#3 = -0.1e1;
          real iden3D6B#1 = varAcc3D67;
          real one3D6C#11 = 0.1e1;
          real prod3D6D#2 = RMul(one3D6C,one3D6C);
          real prod3D6E#2 = RMul(iden3D6B,prod3D6D);
          real iden3D6F#1 = varAcc3D68;
          real prod3D70#1 = RMul(iden3D6F,one3D6C);
          real prod3D71#2 = RMul(one3D6C,prod3D70);
          real iden3D72#1 = varAcc3D69;
          real prod3D73#1 = RMul(one3D6C,iden3D72);
          real prod3D74#2 = RMul(one3D6C,prod3D73);
          real prod3D75#1 = RMul(one3D6C,prod3D6D);
          real mult3D76#1 = RMul(one3D6C,prod3D75);
          real mult3D77#1 = RMul(coeff3D6A,prod3D74);
          real mult3D78#1 = RMul(coeff3D6A,prod3D71);
          real mult3D79#1 = RMul(coeff3D6A,prod3D6E);
          real sum3D7A#1 = RAdd(mult3D78,mult3D79);
          real sum3D7B#1 = RAdd(mult3D77,sum3D7A);
          real sum3D7C#1 = RAdd(mult3D76,sum3D7B);
          real intermediate3D7D#1 = sum3D7C;
          real basisEval3D7E#1 = RMul(one3D6C,prod3D6E);
          real basisEval3D7F#1 = RMul(one3D6C,prod3D71);
          real basisEval3D80#1 = RMul(one3D6C,prod3D74);
          real r3D9F#1 = dof_load3D1C;
          real r3DA0#3 = intermediate3D7D;
          real r3DA1#1 = RMul(r3D9F,r3DA0);
          real r3DA2#1 = dof_load3D25;
          real r3DA3#3 = basisEval3D7E;
          real r3DA4#1 = RMul(r3DA2,r3DA3);
          real r3DA5#1 = dof_load3D2E;
          real r3DA6#3 = basisEval3D7F;
          real r3DA7#1 = RMul(r3DA5,r3DA6);
          real r3DA8#1 = dof_load3D37;
          real r3DA9#3 = basisEval3D80;
          real r3DAA#1 = RMul(r3DA8,r3DA9);
          real r3DAB#1 = RAdd(r3DA1,r3DA4);
          real r3DAC#1 = RAdd(r3DAB,r3DA7);
          real r3DAD#1 = RAdd(r3DAC,r3DAA);
          real r3DAE#1 = dof_load3D1D;
          real r3DAF#1 = RMul(r3DAE,r3DA0);
          real r3DB0#1 = dof_load3D26;
          real r3DB1#1 = RMul(r3DB0,r3DA3);
          real r3DB2#1 = dof_load3D2F;
          real r3DB3#1 = RMul(r3DB2,r3DA6);
          real r3DB4#1 = dof_load3D38;
          real r3DB5#1 = RMul(r3DB4,r3DA9);
          real r3DB6#1 = RAdd(r3DAF,r3DB1);
          real r3DB7#1 = RAdd(r3DB6,r3DB3);
          real r3DB8#1 = RAdd(r3DB7,r3DB5);
          real r3DB9#1 = dof_load3D1E;
          real r3DBA#1 = RMul(r3DB9,r3DA0);
          real r3DBB#1 = dof_load3D27;
          real r3DBC#1 = RMul(r3DBB,r3DA3);
          real r3DBD#1 = dof_load3D30;
          real r3DBE#1 = RMul(r3DBD,r3DA6);
          real r3DBF#1 = dof_load3D39;
          real r3DC0#1 = RMul(r3DBF,r3DA9);
          real r3DC1#1 = RAdd(r3DBA,r3DBC);
          real r3DC2#1 = RAdd(r3DC1,r3DBE);
          real r3DC3#1 = RAdd(r3DC2,r3DC0);
          tensor[3] probe_l_53D9E#1 = <tensor[3]>[r3DAD,r3DB8,r3DC3];
          tensor[3] op1_e3_l_73DEB#2 = VSub<3>(probe_l_53D9E,altCPos3CDB);
          real op1_e3_l_93DEE#1 = VDot<3>(op1_e3_l_73DEB,op1_e3_l_73DEB);
          real _t3DF1#1 = Sqrt(op1_e3_l_93DEE);
          real _t3DF4#1 = 0.1e-5;
          bool _t3DF6#1 = GT<real>(_t3DF1,_t3DF4);
          if _t3DF6 then goto ASSIGN3DFA else goto ASSIGN59AA
        ASSIGN3DFA:  preds = [COND3DF8]
          string _t3DF9#1 = "Error in tracing: At step:";
          string _t3DFB#1 = " with particle:";
          string _t3DFD#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t3DF9,step3CD7,_t3DFB,startPos3CDD,_t3DFD);
          goto JOIN3E00
        JOIN3E00:  preds = [MASSIGN3DFF,MASSIGN59AF]
          real _t3E01#2 = 0.5e0;
          if _t3CDF then goto ASSIGN3E05 else goto ASSIGN59A7
        ASSIGN3E05:  preds = [COND3E03]
          femData:MeshCell c3E04#1 = LoadFem<femData:MeshCell>(_t3CF0,_t3CEE);
          int _t3E06#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3E04);
          femData:FuncCell _t3E08#2 = LoadFem<femData:FuncCell>(data3CCB,_t3E06);
          femData:FemFunc _t3E0A#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3E08);
          femData:Space _t3E0C#10 = ExtractFem<femData:Space,femData:FemFunc>(_t3E0A);
          int _t3E0E#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3E08);
          int ilit3E11#1 = 10;
          int mulRes3E12#10 = IMul(_t3E0E,ilit3E11);
          int addRes3E14#1 = mulRes3E12;
          int idx3E15#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E14);
          int ilit3E16#1 = 1;
          int addRes3E17#1 = IAdd(mulRes3E12,ilit3E16);
          int idx3E18#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E17);
          int ilit3E19#1 = 2;
          int addRes3E1A#1 = IAdd(mulRes3E12,ilit3E19);
          int idx3E1B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E1A);
          int ilit3E1C#1 = 3;
          int addRes3E1D#1 = IAdd(mulRes3E12,ilit3E1C);
          int idx3E1E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E1D);
          int ilit3E1F#1 = 4;
          int addRes3E20#1 = IAdd(mulRes3E12,ilit3E1F);
          int idx3E21#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E20);
          int ilit3E22#1 = 5;
          int addRes3E23#1 = IAdd(mulRes3E12,ilit3E22);
          int idx3E24#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E23);
          int ilit3E25#1 = 6;
          int addRes3E26#1 = IAdd(mulRes3E12,ilit3E25);
          int idx3E27#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E26);
          int ilit3E28#1 = 7;
          int addRes3E29#1 = IAdd(mulRes3E12,ilit3E28);
          int idx3E2A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E29);
          int ilit3E2B#1 = 8;
          int addRes3E2C#1 = IAdd(mulRes3E12,ilit3E2B);
          int idx3E2D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E2C);
          int ilit3E2E#1 = 9;
          int addRes3E2F#1 = IAdd(mulRes3E12,ilit3E2E);
          int idx3E30#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E2F);
          int ilit3E56#10 = 3;
          int idx3E57#1 = idx3E15;
          int mulRes3E58#3 = IMul(ilit3E56,idx3E57);
          int addRes3E59#1 = mulRes3E58;
          int ilit3E5A#10 = 1;
          int addRes3E5B#1 = IAdd(ilit3E5A,mulRes3E58);
          int ilit3E5C#10 = 2;
          int addRes3E5D#1 = IAdd(ilit3E5C,mulRes3E58);
          real dof_load3E5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E59);
          real dof_load3E5F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E5B);
          real dof_load3E60#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E5D);
          int idx3E62#1 = idx3E18;
          int mulRes3E63#3 = IMul(ilit3E56,idx3E62);
          int addRes3E64#1 = mulRes3E63;
          int addRes3E65#1 = IAdd(ilit3E5A,mulRes3E63);
          int addRes3E66#1 = IAdd(ilit3E5C,mulRes3E63);
          real dof_load3E67#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E64);
          real dof_load3E68#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E65);
          real dof_load3E69#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E66);
          int idx3E6B#1 = idx3E1B;
          int mulRes3E6C#3 = IMul(ilit3E56,idx3E6B);
          int addRes3E6D#1 = mulRes3E6C;
          int addRes3E6E#1 = IAdd(ilit3E5A,mulRes3E6C);
          int addRes3E6F#1 = IAdd(ilit3E5C,mulRes3E6C);
          real dof_load3E70#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6D);
          real dof_load3E71#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6E);
          real dof_load3E72#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6F);
          int idx3E74#1 = idx3E1E;
          int mulRes3E75#3 = IMul(ilit3E56,idx3E74);
          int addRes3E76#1 = mulRes3E75;
          int addRes3E77#1 = IAdd(ilit3E5A,mulRes3E75);
          int addRes3E78#1 = IAdd(ilit3E5C,mulRes3E75);
          real dof_load3E79#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E76);
          real dof_load3E7A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E77);
          real dof_load3E7B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E78);
          int idx3E7E#1 = idx3E21;
          int mulRes3E7F#3 = IMul(ilit3E56,idx3E7E);
          int addRes3E80#1 = mulRes3E7F;
          int addRes3E81#1 = IAdd(ilit3E5A,mulRes3E7F);
          int addRes3E82#1 = IAdd(ilit3E5C,mulRes3E7F);
          real dof_load3E83#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E80);
          real dof_load3E84#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E81);
          real dof_load3E85#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E82);
          int idx3E88#1 = idx3E24;
          int mulRes3E89#3 = IMul(ilit3E56,idx3E88);
          int addRes3E8A#1 = mulRes3E89;
          int addRes3E8B#1 = IAdd(ilit3E5A,mulRes3E89);
          int addRes3E8C#1 = IAdd(ilit3E5C,mulRes3E89);
          real dof_load3E8D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8A);
          real dof_load3E8E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8B);
          real dof_load3E8F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8C);
          int idx3E92#1 = idx3E27;
          int mulRes3E93#3 = IMul(ilit3E56,idx3E92);
          int addRes3E94#1 = mulRes3E93;
          int addRes3E95#1 = IAdd(ilit3E5A,mulRes3E93);
          int addRes3E96#1 = IAdd(ilit3E5C,mulRes3E93);
          real dof_load3E97#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E94);
          real dof_load3E98#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E95);
          real dof_load3E99#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E96);
          int idx3E9C#1 = idx3E2A;
          int mulRes3E9D#3 = IMul(ilit3E56,idx3E9C);
          int addRes3E9E#1 = mulRes3E9D;
          int addRes3E9F#1 = IAdd(ilit3E5A,mulRes3E9D);
          int addRes3EA0#1 = IAdd(ilit3E5C,mulRes3E9D);
          real dof_load3EA1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E9E);
          real dof_load3EA2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E9F);
          real dof_load3EA3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA0);
          int idx3EA6#1 = idx3E2D;
          int mulRes3EA7#3 = IMul(ilit3E56,idx3EA6);
          int addRes3EA8#1 = mulRes3EA7;
          int addRes3EA9#1 = IAdd(ilit3E5A,mulRes3EA7);
          int addRes3EAA#1 = IAdd(ilit3E5C,mulRes3EA7);
          real dof_load3EAB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA8);
          real dof_load3EAC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA9);
          real dof_load3EAD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EAA);
          int idx3EB0#1 = idx3E30;
          int mulRes3EB1#3 = IMul(ilit3E56,idx3EB0);
          int addRes3EB2#1 = mulRes3EB1;
          int addRes3EB3#1 = IAdd(ilit3E5A,mulRes3EB1);
          int addRes3EB4#1 = IAdd(ilit3E5C,mulRes3EB1);
          real dof_load3EB5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB2);
          real dof_load3EB6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB3);
          real dof_load3EB7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB4);
          real varAcc3F21#2 = VIndex<3,0>(_t3CEC);
          real varAcc3F22#2 = VIndex<3,1>(_t3CEC);
          real varAcc3F23#2 = VIndex<3,2>(_t3CEC);
          real coeff3F24#3 = 0.2e1;
          real iden3F25#4 = varAcc3F21;
          real prod23F26#1 = RMul(iden3F25,varAcc3F21);
          real one3F27#13 = 0.1e1;
          real prod3F28#3 = RMul(one3F27,one3F27);
          real prod3F29#2 = RMul(prod23F26,prod3F28);
          real coeff3F2A#6 = 0.4e1;
          real iden3F2B#3 = varAcc3F22;
          real prod3F2C#2 = RMul(iden3F2B,one3F27);
          real prod3F2D#2 = RMul(iden3F25,prod3F2C);
          real iden3F2E#3 = varAcc3F23;
          real prod3F2F#2 = RMul(one3F27,iden3F2E);
          real prod3F30#2 = RMul(iden3F25,prod3F2F);
          real coeff3F31#3 = -0.3e1;
          real prod3F32#3 = RMul(iden3F25,prod3F28);
          real prod23F33#1 = RMul(iden3F2B,varAcc3F22);
          real prod3F34#1 = RMul(prod23F33,one3F27);
          real prod3F35#2 = RMul(one3F27,prod3F34);
          real prod3F36#1 = RMul(iden3F2B,iden3F2E);
          real prod3F37#2 = RMul(one3F27,prod3F36);
          real prod3F38#3 = RMul(one3F27,prod3F2C);
          real prod23F39#1 = RMul(iden3F2E,varAcc3F23);
          real prod3F3A#1 = RMul(one3F27,prod23F39);
          real prod3F3B#2 = RMul(one3F27,prod3F3A);
          real prod3F3C#3 = RMul(one3F27,prod3F2F);
          real prod3F3D#1 = RMul(one3F27,prod3F28);
          real mult3F3E#1 = RMul(one3F27,prod3F3D);
          real mult3F3F#1 = RMul(coeff3F31,prod3F3C);
          real mult3F40#2 = RMul(coeff3F24,prod3F3B);
          real mult3F41#1 = RMul(coeff3F31,prod3F38);
          real mult3F42#2 = RMul(coeff3F2A,prod3F37);
          real mult3F43#2 = RMul(coeff3F24,prod3F35);
          real mult3F44#1 = RMul(coeff3F31,prod3F32);
          real mult3F45#2 = RMul(coeff3F2A,prod3F30);
          real mult3F46#2 = RMul(coeff3F2A,prod3F2D);
          real mult3F47#2 = RMul(coeff3F24,prod3F29);
          real sum3F48#1 = RAdd(mult3F46,mult3F47);
          real sum3F49#1 = RAdd(mult3F45,sum3F48);
          real sum3F4A#1 = RAdd(mult3F44,sum3F49);
          real sum3F4B#1 = RAdd(mult3F43,sum3F4A);
          real sum3F4C#1 = RAdd(mult3F42,sum3F4B);
          real sum3F4D#1 = RAdd(mult3F41,sum3F4C);
          real sum3F4E#1 = RAdd(mult3F40,sum3F4D);
          real sum3F4F#1 = RAdd(mult3F3F,sum3F4E);
          real sum3F50#1 = RAdd(mult3F3E,sum3F4F);
          real intermediate3F51#1 = sum3F50;
          real coeff3F52#3 = -0.1e1;
          real mult3F53#1 = RMul(coeff3F52,prod3F32);
          real sum3F54#1 = RAdd(mult3F53,mult3F47);
          real intermediate3F55#1 = sum3F54;
          real mult3F56#1 = RMul(coeff3F52,prod3F38);
          real sum3F57#1 = RAdd(mult3F56,mult3F43);
          real intermediate3F58#1 = sum3F57;
          real mult3F59#1 = RMul(coeff3F52,prod3F3C);
          real sum3F5A#1 = RAdd(mult3F59,mult3F40);
          real intermediate3F5B#1 = sum3F5A;
          real coeff3F5C#6 = -0.4e1;
          real mult3F5D#1 = RMul(coeff3F2A,prod3F3C);
          real mult3F5E#1 = RMul(coeff3F5C,prod3F3B);
          real mult3F5F#2 = RMul(coeff3F5C,prod3F37);
          real mult3F60#2 = RMul(coeff3F5C,prod3F30);
          real sum3F61#1 = RAdd(mult3F5F,mult3F60);
          real sum3F62#1 = RAdd(mult3F5E,sum3F61);
          real sum3F63#1 = RAdd(mult3F5D,sum3F62);
          real intermediate3F64#1 = sum3F63;
          real mult3F65#1 = RMul(coeff3F2A,prod3F38);
          real mult3F66#1 = RMul(coeff3F5C,prod3F35);
          real mult3F67#2 = RMul(coeff3F5C,prod3F2D);
          real sum3F68#1 = RAdd(mult3F66,mult3F67);
          real sum3F69#1 = RAdd(mult3F5F,sum3F68);
          real sum3F6A#1 = RAdd(mult3F65,sum3F69);
          real intermediate3F6B#1 = sum3F6A;
          real mult3F6C#1 = RMul(coeff3F2A,prod3F32);
          real mult3F6D#1 = RMul(coeff3F5C,prod3F29);
          real sum3F6E#1 = RAdd(mult3F67,mult3F6D);
          real sum3F6F#1 = RAdd(mult3F60,sum3F6E);
          real sum3F70#1 = RAdd(mult3F6C,sum3F6F);
          real intermediate3F71#1 = sum3F70;
          real r3FC7#1 = dof_load3E5E;
          real r3FC8#3 = intermediate3F51;
          real r3FC9#1 = RMul(r3FC7,r3FC8);
          real r3FCA#1 = dof_load3E67;
          real r3FCB#3 = intermediate3F55;
          real r3FCC#1 = RMul(r3FCA,r3FCB);
          real r3FCD#1 = dof_load3E70;
          real r3FCE#3 = intermediate3F58;
          real r3FCF#1 = RMul(r3FCD,r3FCE);
          real r3FD0#1 = dof_load3E79;
          real r3FD1#3 = intermediate3F5B;
          real r3FD2#1 = RMul(r3FD0,r3FD1);
          real r3FD3#1 = dof_load3E83;
          real r3FD4#3 = mult3F42;
          real r3FD5#1 = RMul(r3FD3,r3FD4);
          real r3FD6#1 = dof_load3E8D;
          real r3FD7#3 = mult3F45;
          real r3FD8#1 = RMul(r3FD6,r3FD7);
          real r3FD9#1 = dof_load3E97;
          real r3FDA#3 = mult3F46;
          real r3FDB#1 = RMul(r3FD9,r3FDA);
          real r3FDC#1 = dof_load3EA1;
          real r3FDD#3 = intermediate3F64;
          real r3FDE#1 = RMul(r3FDC,r3FDD);
          real r3FDF#1 = dof_load3EAB;
          real r3FE0#3 = intermediate3F6B;
          real r3FE1#1 = RMul(r3FDF,r3FE0);
          real r3FE2#1 = dof_load3EB5;
          real r3FE3#3 = intermediate3F71;
          real r3FE4#1 = RMul(r3FE2,r3FE3);
          real r3FE5#1 = RAdd(r3FC9,r3FCC);
          real r3FE6#1 = RAdd(r3FE5,r3FCF);
          real r3FE7#1 = RAdd(r3FE6,r3FD2);
          real r3FE8#1 = RAdd(r3FE7,r3FD5);
          real r3FE9#1 = RAdd(r3FE8,r3FD8);
          real r3FEA#1 = RAdd(r3FE9,r3FDB);
          real r3FEB#1 = RAdd(r3FEA,r3FDE);
          real r3FEC#1 = RAdd(r3FEB,r3FE1);
          real r3FED#2 = RAdd(r3FEC,r3FE4);
          real r3FEE#1 = dof_load3E5F;
          real r3FEF#1 = RMul(r3FEE,r3FC8);
          real r3FF0#1 = dof_load3E68;
          real r3FF1#1 = RMul(r3FF0,r3FCB);
          real r3FF2#1 = dof_load3E71;
          real r3FF3#1 = RMul(r3FF2,r3FCE);
          real r3FF4#1 = dof_load3E7A;
          real r3FF5#1 = RMul(r3FF4,r3FD1);
          real r3FF6#1 = dof_load3E84;
          real r3FF7#1 = RMul(r3FF6,r3FD4);
          real r3FF8#1 = dof_load3E8E;
          real r3FF9#1 = RMul(r3FF8,r3FD7);
          real r3FFA#1 = dof_load3E98;
          real r3FFB#1 = RMul(r3FFA,r3FDA);
          real r3FFC#1 = dof_load3EA2;
          real r3FFD#1 = RMul(r3FFC,r3FDD);
          real r3FFE#1 = dof_load3EAC;
          real r3FFF#1 = RMul(r3FFE,r3FE0);
          real r4000#1 = dof_load3EB6;
          real r4001#1 = RMul(r4000,r3FE3);
          real r4002#1 = RAdd(r3FEF,r3FF1);
          real r4003#1 = RAdd(r4002,r3FF3);
          real r4004#1 = RAdd(r4003,r3FF5);
          real r4005#1 = RAdd(r4004,r3FF7);
          real r4006#1 = RAdd(r4005,r3FF9);
          real r4007#1 = RAdd(r4006,r3FFB);
          real r4008#1 = RAdd(r4007,r3FFD);
          real r4009#1 = RAdd(r4008,r3FFF);
          real r400A#2 = RAdd(r4009,r4001);
          real r400B#1 = dof_load3E60;
          real r400C#1 = RMul(r400B,r3FC8);
          real r400D#1 = dof_load3E69;
          real r400E#1 = RMul(r400D,r3FCB);
          real r400F#1 = dof_load3E72;
          real r4010#1 = RMul(r400F,r3FCE);
          real r4011#1 = dof_load3E7B;
          real r4012#1 = RMul(r4011,r3FD1);
          real r4013#1 = dof_load3E85;
          real r4014#1 = RMul(r4013,r3FD4);
          real r4015#1 = dof_load3E8F;
          real r4016#1 = RMul(r4015,r3FD7);
          real r4017#1 = dof_load3E99;
          real r4018#1 = RMul(r4017,r3FDA);
          real r4019#1 = dof_load3EA3;
          real r401A#1 = RMul(r4019,r3FDD);
          real r401B#1 = dof_load3EAD;
          real r401C#1 = RMul(r401B,r3FE0);
          real r401D#1 = dof_load3EB7;
          real r401E#1 = RMul(r401D,r3FE3);
          real r401F#1 = RAdd(r400C,r400E);
          real r4020#1 = RAdd(r401F,r4010);
          real r4021#1 = RAdd(r4020,r4012);
          real r4022#1 = RAdd(r4021,r4014);
          real r4023#1 = RAdd(r4022,r4016);
          real r4024#1 = RAdd(r4023,r4018);
          real r4025#1 = RAdd(r4024,r401A);
          real r4026#1 = RAdd(r4025,r401C);
          real r4027#2 = RAdd(r4026,r401E);
          tensor[3] probe_l_83FC6#2 = <tensor[3]>[r3FED,r400A,r4027];
          real op1_e3_l_11408B#1 = VDot<3>(probe_l_83FC6,probe_l_83FC6);
          real op1_e3_l_12408E#1 = Sqrt(op1_e3_l_11408B);
          real realLit4092#1 = 0.1e1;
          real r4093#3 = RDiv(realLit4092,op1_e3_l_12408E);
          real r4094#1 = r3FED;
          real r4095#1 = RMul(r4093,r4094);
          real r4096#1 = r400A;
          real r4097#1 = RMul(r4093,r4096);
          real r4098#1 = r4027;
          real r4099#1 = RMul(r4093,r4098);
          tensor[3] _t4091#1 = <tensor[3]>[r4095,r4097,r4099];
          goto JOIN40A6
        JOIN40A6:  preds = [ASSIGN40A3,ASSIGN59A8]
          tensor[3] _t40A4#3 = phi(_t4091,_t40A5)
          real r40A8#1 = TensorIndex<tensor[3],[0]>(_t40A4);
          real r40A9#3 = RMul(_t3E01,stepSize3CCF);
          real r40AA#1 = RMul(r40A9,r40A8);
          real r40AB#1 = TensorIndex<tensor[3],[1]>(_t40A4);
          real r40AC#1 = RMul(r40A9,r40AB);
          real r40AD#1 = TensorIndex<tensor[3],[2]>(_t40A4);
          real r40AE#1 = RMul(r40A9,r40AD);
          tensor[3] up140A7#1 = <tensor[3]>[r40AA,r40AC,r40AE];
          femData:MeshPos intermed40B8#4 = posMove40B9 (cPos3CD9,up140A7);
          femData:MeshPos callFindPos5073#2 = findPos3574 (_t3CC7,altCPos3CDB);
          int intPos5075#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5073);
          tensor[3] refPos5077#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5073);
          int ilit507A#1 = 10;
          int mulRes507B#10 = IMul(intPos5075,ilit507A);
          int addRes507D#1 = mulRes507B;
          int idx507E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes507D);
          int ilit507F#1 = 1;
          int addRes5080#1 = IAdd(mulRes507B,ilit507F);
          int idx5081#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5080);
          int ilit5082#1 = 2;
          int addRes5083#1 = IAdd(mulRes507B,ilit5082);
          int idx5084#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5083);
          int ilit5085#1 = 3;
          int addRes5086#1 = IAdd(mulRes507B,ilit5085);
          int idx5087#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5086);
          int ilit5088#1 = 4;
          int addRes5089#1 = IAdd(mulRes507B,ilit5088);
          int idx508A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5089);
          int ilit508B#1 = 5;
          int addRes508C#1 = IAdd(mulRes507B,ilit508B);
          int idx508D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes508C);
          int ilit508E#1 = 6;
          int addRes508F#1 = IAdd(mulRes507B,ilit508E);
          int idx5090#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes508F);
          int ilit5091#1 = 7;
          int addRes5092#1 = IAdd(mulRes507B,ilit5091);
          int idx5093#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5092);
          int ilit5094#1 = 8;
          int addRes5095#1 = IAdd(mulRes507B,ilit5094);
          int idx5096#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5095);
          int ilit5097#1 = 9;
          int addRes5098#1 = IAdd(mulRes507B,ilit5097);
          int idx5099#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5098);
          int ilit50BF#10 = 3;
          int idx50C0#1 = idx507E;
          int mulRes50C1#3 = IMul(ilit50BF,idx50C0);
          int addRes50C2#1 = mulRes50C1;
          int ilit50C3#10 = 1;
          int addRes50C4#1 = IAdd(ilit50C3,mulRes50C1);
          int ilit50C5#10 = 2;
          int addRes50C6#1 = IAdd(ilit50C5,mulRes50C1);
          real dof_load50C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C2);
          real dof_load50C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C4);
          real dof_load50C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C6);
          int idx50CB#1 = idx5081;
          int mulRes50CC#3 = IMul(ilit50BF,idx50CB);
          int addRes50CD#1 = mulRes50CC;
          int addRes50CE#1 = IAdd(ilit50C3,mulRes50CC);
          int addRes50CF#1 = IAdd(ilit50C5,mulRes50CC);
          real dof_load50D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CD);
          real dof_load50D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CE);
          real dof_load50D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CF);
          int idx50D4#1 = idx5084;
          int mulRes50D5#3 = IMul(ilit50BF,idx50D4);
          int addRes50D6#1 = mulRes50D5;
          int addRes50D7#1 = IAdd(ilit50C3,mulRes50D5);
          int addRes50D8#1 = IAdd(ilit50C5,mulRes50D5);
          real dof_load50D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D6);
          real dof_load50DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D7);
          real dof_load50DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D8);
          int idx50DD#1 = idx5087;
          int mulRes50DE#3 = IMul(ilit50BF,idx50DD);
          int addRes50DF#1 = mulRes50DE;
          int addRes50E0#1 = IAdd(ilit50C3,mulRes50DE);
          int addRes50E1#1 = IAdd(ilit50C5,mulRes50DE);
          real dof_load50E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50DF);
          real dof_load50E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E0);
          real dof_load50E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E1);
          int idx50E7#1 = idx508A;
          int mulRes50E8#3 = IMul(ilit50BF,idx50E7);
          int addRes50E9#1 = mulRes50E8;
          int addRes50EA#1 = IAdd(ilit50C3,mulRes50E8);
          int addRes50EB#1 = IAdd(ilit50C5,mulRes50E8);
          real dof_load50EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E9);
          real dof_load50ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50EA);
          real dof_load50EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50EB);
          int idx50F1#1 = idx508D;
          int mulRes50F2#3 = IMul(ilit50BF,idx50F1);
          int addRes50F3#1 = mulRes50F2;
          int addRes50F4#1 = IAdd(ilit50C3,mulRes50F2);
          int addRes50F5#1 = IAdd(ilit50C5,mulRes50F2);
          real dof_load50F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F3);
          real dof_load50F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F4);
          real dof_load50F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F5);
          int idx50FB#1 = idx5090;
          int mulRes50FC#3 = IMul(ilit50BF,idx50FB);
          int addRes50FD#1 = mulRes50FC;
          int addRes50FE#1 = IAdd(ilit50C3,mulRes50FC);
          int addRes50FF#1 = IAdd(ilit50C5,mulRes50FC);
          real dof_load5100#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FD);
          real dof_load5101#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FE);
          real dof_load5102#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FF);
          int idx5105#1 = idx5093;
          int mulRes5106#3 = IMul(ilit50BF,idx5105);
          int addRes5107#1 = mulRes5106;
          int addRes5108#1 = IAdd(ilit50C3,mulRes5106);
          int addRes5109#1 = IAdd(ilit50C5,mulRes5106);
          real dof_load510A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5107);
          real dof_load510B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5108);
          real dof_load510C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5109);
          int idx510F#1 = idx5096;
          int mulRes5110#3 = IMul(ilit50BF,idx510F);
          int addRes5111#1 = mulRes5110;
          int addRes5112#1 = IAdd(ilit50C3,mulRes5110);
          int addRes5113#1 = IAdd(ilit50C5,mulRes5110);
          real dof_load5114#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5111);
          real dof_load5115#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5112);
          real dof_load5116#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5113);
          int idx5119#1 = idx5099;
          int mulRes511A#3 = IMul(ilit50BF,idx5119);
          int addRes511B#1 = mulRes511A;
          int addRes511C#1 = IAdd(ilit50C3,mulRes511A);
          int addRes511D#1 = IAdd(ilit50C5,mulRes511A);
          real dof_load511E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511B);
          real dof_load511F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511C);
          real dof_load5120#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511D);
          real varAcc518A#2 = VIndex<3,0>(refPos5077);
          real varAcc518B#2 = VIndex<3,1>(refPos5077);
          real varAcc518C#2 = VIndex<3,2>(refPos5077);
          real coeff518D#3 = 0.2e1;
          real iden518E#4 = varAcc518A;
          real prod2518F#1 = RMul(iden518E,varAcc518A);
          real one5190#13 = 0.1e1;
          real prod5191#3 = RMul(one5190,one5190);
          real prod5192#2 = RMul(prod2518F,prod5191);
          real coeff5193#6 = 0.4e1;
          real iden5194#3 = varAcc518B;
          real prod5195#2 = RMul(iden5194,one5190);
          real prod5196#2 = RMul(iden518E,prod5195);
          real iden5197#3 = varAcc518C;
          real prod5198#2 = RMul(one5190,iden5197);
          real prod5199#2 = RMul(iden518E,prod5198);
          real coeff519A#3 = -0.3e1;
          real prod519B#3 = RMul(iden518E,prod5191);
          real prod2519C#1 = RMul(iden5194,varAcc518B);
          real prod519D#1 = RMul(prod2519C,one5190);
          real prod519E#2 = RMul(one5190,prod519D);
          real prod519F#1 = RMul(iden5194,iden5197);
          real prod51A0#2 = RMul(one5190,prod519F);
          real prod51A1#3 = RMul(one5190,prod5195);
          real prod251A2#1 = RMul(iden5197,varAcc518C);
          real prod51A3#1 = RMul(one5190,prod251A2);
          real prod51A4#2 = RMul(one5190,prod51A3);
          real prod51A5#3 = RMul(one5190,prod5198);
          real prod51A6#1 = RMul(one5190,prod5191);
          real mult51A7#1 = RMul(one5190,prod51A6);
          real mult51A8#1 = RMul(coeff519A,prod51A5);
          real mult51A9#2 = RMul(coeff518D,prod51A4);
          real mult51AA#1 = RMul(coeff519A,prod51A1);
          real mult51AB#2 = RMul(coeff5193,prod51A0);
          real mult51AC#2 = RMul(coeff518D,prod519E);
          real mult51AD#1 = RMul(coeff519A,prod519B);
          real mult51AE#2 = RMul(coeff5193,prod5199);
          real mult51AF#2 = RMul(coeff5193,prod5196);
          real mult51B0#2 = RMul(coeff518D,prod5192);
          real sum51B1#1 = RAdd(mult51AF,mult51B0);
          real sum51B2#1 = RAdd(mult51AE,sum51B1);
          real sum51B3#1 = RAdd(mult51AD,sum51B2);
          real sum51B4#1 = RAdd(mult51AC,sum51B3);
          real sum51B5#1 = RAdd(mult51AB,sum51B4);
          real sum51B6#1 = RAdd(mult51AA,sum51B5);
          real sum51B7#1 = RAdd(mult51A9,sum51B6);
          real sum51B8#1 = RAdd(mult51A8,sum51B7);
          real sum51B9#1 = RAdd(mult51A7,sum51B8);
          real intermediate51BA#1 = sum51B9;
          real coeff51BB#3 = -0.1e1;
          real mult51BC#1 = RMul(coeff51BB,prod519B);
          real sum51BD#1 = RAdd(mult51BC,mult51B0);
          real intermediate51BE#1 = sum51BD;
          real mult51BF#1 = RMul(coeff51BB,prod51A1);
          real sum51C0#1 = RAdd(mult51BF,mult51AC);
          real intermediate51C1#1 = sum51C0;
          real mult51C2#1 = RMul(coeff51BB,prod51A5);
          real sum51C3#1 = RAdd(mult51C2,mult51A9);
          real intermediate51C4#1 = sum51C3;
          real coeff51C5#6 = -0.4e1;
          real mult51C6#1 = RMul(coeff5193,prod51A5);
          real mult51C7#1 = RMul(coeff51C5,prod51A4);
          real mult51C8#2 = RMul(coeff51C5,prod51A0);
          real mult51C9#2 = RMul(coeff51C5,prod5199);
          real sum51CA#1 = RAdd(mult51C8,mult51C9);
          real sum51CB#1 = RAdd(mult51C7,sum51CA);
          real sum51CC#1 = RAdd(mult51C6,sum51CB);
          real intermediate51CD#1 = sum51CC;
          real mult51CE#1 = RMul(coeff5193,prod51A1);
          real mult51CF#1 = RMul(coeff51C5,prod519E);
          real mult51D0#2 = RMul(coeff51C5,prod5196);
          real sum51D1#1 = RAdd(mult51CF,mult51D0);
          real sum51D2#1 = RAdd(mult51C8,sum51D1);
          real sum51D3#1 = RAdd(mult51CE,sum51D2);
          real intermediate51D4#1 = sum51D3;
          real mult51D5#1 = RMul(coeff5193,prod519B);
          real mult51D6#1 = RMul(coeff51C5,prod5192);
          real sum51D7#1 = RAdd(mult51D0,mult51D6);
          real sum51D8#1 = RAdd(mult51C9,sum51D7);
          real sum51D9#1 = RAdd(mult51D5,sum51D8);
          real intermediate51DA#1 = sum51D9;
          real r5230#1 = dof_load50C7;
          real r5231#3 = intermediate51BA;
          real r5232#1 = RMul(r5230,r5231);
          real r5233#1 = dof_load50D0;
          real r5234#3 = intermediate51BE;
          real r5235#1 = RMul(r5233,r5234);
          real r5236#1 = dof_load50D9;
          real r5237#3 = intermediate51C1;
          real r5238#1 = RMul(r5236,r5237);
          real r5239#1 = dof_load50E2;
          real r523A#3 = intermediate51C4;
          real r523B#1 = RMul(r5239,r523A);
          real r523C#1 = dof_load50EC;
          real r523D#3 = mult51AB;
          real r523E#1 = RMul(r523C,r523D);
          real r523F#1 = dof_load50F6;
          real r5240#3 = mult51AE;
          real r5241#1 = RMul(r523F,r5240);
          real r5242#1 = dof_load5100;
          real r5243#3 = mult51AF;
          real r5244#1 = RMul(r5242,r5243);
          real r5245#1 = dof_load510A;
          real r5246#3 = intermediate51CD;
          real r5247#1 = RMul(r5245,r5246);
          real r5248#1 = dof_load5114;
          real r5249#3 = intermediate51D4;
          real r524A#1 = RMul(r5248,r5249);
          real r524B#1 = dof_load511E;
          real r524C#3 = intermediate51DA;
          real r524D#1 = RMul(r524B,r524C);
          real r524E#1 = RAdd(r5232,r5235);
          real r524F#1 = RAdd(r524E,r5238);
          real r5250#1 = RAdd(r524F,r523B);
          real r5251#1 = RAdd(r5250,r523E);
          real r5252#1 = RAdd(r5251,r5241);
          real r5253#1 = RAdd(r5252,r5244);
          real r5254#1 = RAdd(r5253,r5247);
          real r5255#1 = RAdd(r5254,r524A);
          real r5256#2 = RAdd(r5255,r524D);
          real r5257#1 = dof_load50C8;
          real r5258#1 = RMul(r5257,r5231);
          real r5259#1 = dof_load50D1;
          real r525A#1 = RMul(r5259,r5234);
          real r525B#1 = dof_load50DA;
          real r525C#1 = RMul(r525B,r5237);
          real r525D#1 = dof_load50E3;
          real r525E#1 = RMul(r525D,r523A);
          real r525F#1 = dof_load50ED;
          real r5260#1 = RMul(r525F,r523D);
          real r5261#1 = dof_load50F7;
          real r5262#1 = RMul(r5261,r5240);
          real r5263#1 = dof_load5101;
          real r5264#1 = RMul(r5263,r5243);
          real r5265#1 = dof_load510B;
          real r5266#1 = RMul(r5265,r5246);
          real r5267#1 = dof_load5115;
          real r5268#1 = RMul(r5267,r5249);
          real r5269#1 = dof_load511F;
          real r526A#1 = RMul(r5269,r524C);
          real r526B#1 = RAdd(r5258,r525A);
          real r526C#1 = RAdd(r526B,r525C);
          real r526D#1 = RAdd(r526C,r525E);
          real r526E#1 = RAdd(r526D,r5260);
          real r526F#1 = RAdd(r526E,r5262);
          real r5270#1 = RAdd(r526F,r5264);
          real r5271#1 = RAdd(r5270,r5266);
          real r5272#1 = RAdd(r5271,r5268);
          real r5273#2 = RAdd(r5272,r526A);
          real r5274#1 = dof_load50C9;
          real r5275#1 = RMul(r5274,r5231);
          real r5276#1 = dof_load50D2;
          real r5277#1 = RMul(r5276,r5234);
          real r5278#1 = dof_load50DB;
          real r5279#1 = RMul(r5278,r5237);
          real r527A#1 = dof_load50E4;
          real r527B#1 = RMul(r527A,r523A);
          real r527C#1 = dof_load50EE;
          real r527D#1 = RMul(r527C,r523D);
          real r527E#1 = dof_load50F8;
          real r527F#1 = RMul(r527E,r5240);
          real r5280#1 = dof_load5102;
          real r5281#1 = RMul(r5280,r5243);
          real r5282#1 = dof_load510C;
          real r5283#1 = RMul(r5282,r5246);
          real r5284#1 = dof_load5116;
          real r5285#1 = RMul(r5284,r5249);
          real r5286#1 = dof_load5120;
          real r5287#1 = RMul(r5286,r524C);
          real r5288#1 = RAdd(r5275,r5277);
          real r5289#1 = RAdd(r5288,r5279);
          real r528A#1 = RAdd(r5289,r527B);
          real r528B#1 = RAdd(r528A,r527D);
          real r528C#1 = RAdd(r528B,r527F);
          real r528D#1 = RAdd(r528C,r5281);
          real r528E#1 = RAdd(r528D,r5283);
          real r528F#1 = RAdd(r528E,r5285);
          real r5290#2 = RAdd(r528F,r5287);
          tensor[3] compositionl522F#2 = <tensor[3]>[r5256,r5273,r5290];
          real op1_e3_l_2052F4#1 = VDot<3>(compositionl522F,compositionl522F);
          real r52F8#1 = r5256;
          real r52F9#3 = RMul(_t3E01,stepSize3CCF);
          real r52FA#1 = RMul(r52F9,r52F8);
          real r52FB#1 = r5273;
          real r52FC#1 = RMul(r52F9,r52FB);
          real r52FD#1 = r5290;
          real r52FE#1 = RMul(r52F9,r52FD);
          real op1_e3_l_225308#1 = Sqrt(op1_e3_l_2052F4);
          real realLit530C#1 = 0.1e1;
          real r530D#3 = RDiv(realLit530C,op1_e3_l_225308);
          real r530E#1 = r52FA;
          real r530F#1 = RMul(r530D,r530E);
          real r5310#1 = r52FC;
          real r5311#1 = RMul(r530D,r5310);
          real r5312#1 = r52FE;
          real r5313#1 = RMul(r530D,r5312);
          tensor[3] op1_e3_l_23530B#1 = <tensor[3]>[r530F,r5311,r5313];
          tensor[3] altIntermed531E#2 = VAdd<3>(altCPos3CDB,op1_e3_l_23530B);
          bool _t5321#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed40B8);
          bool _t5323#1 = BNot(_t5321);
          if _t5323 then goto ASSIGN5327 else goto ASSIGN59A1
        ASSIGN5327:  preds = [COND5325]
          bool _t5326#1 = true;
          goto JOIN532A
        JOIN532A:  preds = [ASSIGN5327,ASSIGN59A4]
          bool _t5328#1 = phi(_t5326,_t5329)
          if _t5328 then goto STABILIZE532C else goto JOIN532D
        STABILIZE532C:  preds = [COND532B]
          stabilize
          goto JOIN532D
        JOIN532D:  preds = [*STABILIZE532C,COND532B]
          if _t5321 then goto ASSIGN5330 else goto ASSIGN599E
        ASSIGN5330:  preds = [COND532E]
          femData:Mesh _t532F#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed40B8);
          int _t5331#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed40B8);
          femData:MeshCell c5333#1 = LoadFem<femData:MeshCell>(_t532F,_t5331);
          tensor[3] ref5335#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed40B8);
          int _t5337#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c5333);
          femData:FuncCell _t5339#2 = LoadFem<femData:FuncCell>(data3CCB,_t5337);
          femData:FemFunc _t533B#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t5339);
          femData:Space _t533D#10 = ExtractFem<femData:Space,femData:FemFunc>(_t533B);
          int _t533F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t5339);
          int ilit5342#1 = 10;
          int mulRes5343#10 = IMul(_t533F,ilit5342);
          int addRes5345#1 = mulRes5343;
          int idx5346#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5345);
          int ilit5347#1 = 1;
          int addRes5348#1 = IAdd(mulRes5343,ilit5347);
          int idx5349#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5348);
          int ilit534A#1 = 2;
          int addRes534B#1 = IAdd(mulRes5343,ilit534A);
          int idx534C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes534B);
          int ilit534D#1 = 3;
          int addRes534E#1 = IAdd(mulRes5343,ilit534D);
          int idx534F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes534E);
          int ilit5350#1 = 4;
          int addRes5351#1 = IAdd(mulRes5343,ilit5350);
          int idx5352#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5351);
          int ilit5353#1 = 5;
          int addRes5354#1 = IAdd(mulRes5343,ilit5353);
          int idx5355#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5354);
          int ilit5356#1 = 6;
          int addRes5357#1 = IAdd(mulRes5343,ilit5356);
          int idx5358#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5357);
          int ilit5359#1 = 7;
          int addRes535A#1 = IAdd(mulRes5343,ilit5359);
          int idx535B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes535A);
          int ilit535C#1 = 8;
          int addRes535D#1 = IAdd(mulRes5343,ilit535C);
          int idx535E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes535D);
          int ilit535F#1 = 9;
          int addRes5360#1 = IAdd(mulRes5343,ilit535F);
          int idx5361#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5360);
          int ilit5387#10 = 3;
          int idx5388#1 = idx5346;
          int mulRes5389#3 = IMul(ilit5387,idx5388);
          int addRes538A#1 = mulRes5389;
          int ilit538B#10 = 1;
          int addRes538C#1 = IAdd(ilit538B,mulRes5389);
          int ilit538D#10 = 2;
          int addRes538E#1 = IAdd(ilit538D,mulRes5389);
          real dof_load538F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538A);
          real dof_load5390#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538C);
          real dof_load5391#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538E);
          int idx5393#1 = idx5349;
          int mulRes5394#3 = IMul(ilit5387,idx5393);
          int addRes5395#1 = mulRes5394;
          int addRes5396#1 = IAdd(ilit538B,mulRes5394);
          int addRes5397#1 = IAdd(ilit538D,mulRes5394);
          real dof_load5398#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5395);
          real dof_load5399#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5396);
          real dof_load539A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5397);
          int idx539C#1 = idx534C;
          int mulRes539D#3 = IMul(ilit5387,idx539C);
          int addRes539E#1 = mulRes539D;
          int addRes539F#1 = IAdd(ilit538B,mulRes539D);
          int addRes53A0#1 = IAdd(ilit538D,mulRes539D);
          real dof_load53A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes539E);
          real dof_load53A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes539F);
          real dof_load53A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A0);
          int idx53A5#1 = idx534F;
          int mulRes53A6#3 = IMul(ilit5387,idx53A5);
          int addRes53A7#1 = mulRes53A6;
          int addRes53A8#1 = IAdd(ilit538B,mulRes53A6);
          int addRes53A9#1 = IAdd(ilit538D,mulRes53A6);
          real dof_load53AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A7);
          real dof_load53AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A8);
          real dof_load53AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A9);
          int idx53AF#1 = idx5352;
          int mulRes53B0#3 = IMul(ilit5387,idx53AF);
          int addRes53B1#1 = mulRes53B0;
          int addRes53B2#1 = IAdd(ilit538B,mulRes53B0);
          int addRes53B3#1 = IAdd(ilit538D,mulRes53B0);
          real dof_load53B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B1);
          real dof_load53B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B2);
          real dof_load53B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B3);
          int idx53B9#1 = idx5355;
          int mulRes53BA#3 = IMul(ilit5387,idx53B9);
          int addRes53BB#1 = mulRes53BA;
          int addRes53BC#1 = IAdd(ilit538B,mulRes53BA);
          int addRes53BD#1 = IAdd(ilit538D,mulRes53BA);
          real dof_load53BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BB);
          real dof_load53BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BC);
          real dof_load53C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BD);
          int idx53C3#1 = idx5358;
          int mulRes53C4#3 = IMul(ilit5387,idx53C3);
          int addRes53C5#1 = mulRes53C4;
          int addRes53C6#1 = IAdd(ilit538B,mulRes53C4);
          int addRes53C7#1 = IAdd(ilit538D,mulRes53C4);
          real dof_load53C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C5);
          real dof_load53C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C6);
          real dof_load53CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C7);
          int idx53CD#1 = idx535B;
          int mulRes53CE#3 = IMul(ilit5387,idx53CD);
          int addRes53CF#1 = mulRes53CE;
          int addRes53D0#1 = IAdd(ilit538B,mulRes53CE);
          int addRes53D1#1 = IAdd(ilit538D,mulRes53CE);
          real dof_load53D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53CF);
          real dof_load53D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D0);
          real dof_load53D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D1);
          int idx53D7#1 = idx535E;
          int mulRes53D8#3 = IMul(ilit5387,idx53D7);
          int addRes53D9#1 = mulRes53D8;
          int addRes53DA#1 = IAdd(ilit538B,mulRes53D8);
          int addRes53DB#1 = IAdd(ilit538D,mulRes53D8);
          real dof_load53DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D9);
          real dof_load53DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53DA);
          real dof_load53DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53DB);
          int idx53E1#1 = idx5361;
          int mulRes53E2#3 = IMul(ilit5387,idx53E1);
          int addRes53E3#1 = mulRes53E2;
          int addRes53E4#1 = IAdd(ilit538B,mulRes53E2);
          int addRes53E5#1 = IAdd(ilit538D,mulRes53E2);
          real dof_load53E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E3);
          real dof_load53E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E4);
          real dof_load53E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E5);
          real varAcc5452#2 = VIndex<3,0>(ref5335);
          real varAcc5453#2 = VIndex<3,1>(ref5335);
          real varAcc5454#2 = VIndex<3,2>(ref5335);
          real coeff5455#3 = 0.2e1;
          real iden5456#4 = varAcc5452;
          real prod25457#1 = RMul(iden5456,varAcc5452);
          real one5458#13 = 0.1e1;
          real prod5459#3 = RMul(one5458,one5458);
          real prod545A#2 = RMul(prod25457,prod5459);
          real coeff545B#6 = 0.4e1;
          real iden545C#3 = varAcc5453;
          real prod545D#2 = RMul(iden545C,one5458);
          real prod545E#2 = RMul(iden5456,prod545D);
          real iden545F#3 = varAcc5454;
          real prod5460#2 = RMul(one5458,iden545F);
          real prod5461#2 = RMul(iden5456,prod5460);
          real coeff5462#3 = -0.3e1;
          real prod5463#3 = RMul(iden5456,prod5459);
          real prod25464#1 = RMul(iden545C,varAcc5453);
          real prod5465#1 = RMul(prod25464,one5458);
          real prod5466#2 = RMul(one5458,prod5465);
          real prod5467#1 = RMul(iden545C,iden545F);
          real prod5468#2 = RMul(one5458,prod5467);
          real prod5469#3 = RMul(one5458,prod545D);
          real prod2546A#1 = RMul(iden545F,varAcc5454);
          real prod546B#1 = RMul(one5458,prod2546A);
          real prod546C#2 = RMul(one5458,prod546B);
          real prod546D#3 = RMul(one5458,prod5460);
          real prod546E#1 = RMul(one5458,prod5459);
          real mult546F#1 = RMul(one5458,prod546E);
          real mult5470#1 = RMul(coeff5462,prod546D);
          real mult5471#2 = RMul(coeff5455,prod546C);
          real mult5472#1 = RMul(coeff5462,prod5469);
          real mult5473#2 = RMul(coeff545B,prod5468);
          real mult5474#2 = RMul(coeff5455,prod5466);
          real mult5475#1 = RMul(coeff5462,prod5463);
          real mult5476#2 = RMul(coeff545B,prod5461);
          real mult5477#2 = RMul(coeff545B,prod545E);
          real mult5478#2 = RMul(coeff5455,prod545A);
          real sum5479#1 = RAdd(mult5477,mult5478);
          real sum547A#1 = RAdd(mult5476,sum5479);
          real sum547B#1 = RAdd(mult5475,sum547A);
          real sum547C#1 = RAdd(mult5474,sum547B);
          real sum547D#1 = RAdd(mult5473,sum547C);
          real sum547E#1 = RAdd(mult5472,sum547D);
          real sum547F#1 = RAdd(mult5471,sum547E);
          real sum5480#1 = RAdd(mult5470,sum547F);
          real sum5481#1 = RAdd(mult546F,sum5480);
          real intermediate5482#1 = sum5481;
          real coeff5483#3 = -0.1e1;
          real mult5484#1 = RMul(coeff5483,prod5463);
          real sum5485#1 = RAdd(mult5484,mult5478);
          real intermediate5486#1 = sum5485;
          real mult5487#1 = RMul(coeff5483,prod5469);
          real sum5488#1 = RAdd(mult5487,mult5474);
          real intermediate5489#1 = sum5488;
          real mult548A#1 = RMul(coeff5483,prod546D);
          real sum548B#1 = RAdd(mult548A,mult5471);
          real intermediate548C#1 = sum548B;
          real coeff548D#6 = -0.4e1;
          real mult548E#1 = RMul(coeff545B,prod546D);
          real mult548F#1 = RMul(coeff548D,prod546C);
          real mult5490#2 = RMul(coeff548D,prod5468);
          real mult5491#2 = RMul(coeff548D,prod5461);
          real sum5492#1 = RAdd(mult5490,mult5491);
          real sum5493#1 = RAdd(mult548F,sum5492);
          real sum5494#1 = RAdd(mult548E,sum5493);
          real intermediate5495#1 = sum5494;
          real mult5496#1 = RMul(coeff545B,prod5469);
          real mult5497#1 = RMul(coeff548D,prod5466);
          real mult5498#2 = RMul(coeff548D,prod545E);
          real sum5499#1 = RAdd(mult5497,mult5498);
          real sum549A#1 = RAdd(mult5490,sum5499);
          real sum549B#1 = RAdd(mult5496,sum549A);
          real intermediate549C#1 = sum549B;
          real mult549D#1 = RMul(coeff545B,prod5463);
          real mult549E#1 = RMul(coeff548D,prod545A);
          real sum549F#1 = RAdd(mult5498,mult549E);
          real sum54A0#1 = RAdd(mult5491,sum549F);
          real sum54A1#1 = RAdd(mult549D,sum54A0);
          real intermediate54A2#1 = sum54A1;
          real r54F8#1 = dof_load538F;
          real r54F9#3 = intermediate5482;
          real r54FA#1 = RMul(r54F8,r54F9);
          real r54FB#1 = dof_load5398;
          real r54FC#3 = intermediate5486;
          real r54FD#1 = RMul(r54FB,r54FC);
          real r54FE#1 = dof_load53A1;
          real r54FF#3 = intermediate5489;
          real r5500#1 = RMul(r54FE,r54FF);
          real r5501#1 = dof_load53AA;
          real r5502#3 = intermediate548C;
          real r5503#1 = RMul(r5501,r5502);
          real r5504#1 = dof_load53B4;
          real r5505#3 = mult5473;
          real r5506#1 = RMul(r5504,r5505);
          real r5507#1 = dof_load53BE;
          real r5508#3 = mult5476;
          real r5509#1 = RMul(r5507,r5508);
          real r550A#1 = dof_load53C8;
          real r550B#3 = mult5477;
          real r550C#1 = RMul(r550A,r550B);
          real r550D#1 = dof_load53D2;
          real r550E#3 = intermediate5495;
          real r550F#1 = RMul(r550D,r550E);
          real r5510#1 = dof_load53DC;
          real r5511#3 = intermediate549C;
          real r5512#1 = RMul(r5510,r5511);
          real r5513#1 = dof_load53E6;
          real r5514#3 = intermediate54A2;
          real r5515#1 = RMul(r5513,r5514);
          real r5516#1 = RAdd(r54FA,r54FD);
          real r5517#1 = RAdd(r5516,r5500);
          real r5518#1 = RAdd(r5517,r5503);
          real r5519#1 = RAdd(r5518,r5506);
          real r551A#1 = RAdd(r5519,r5509);
          real r551B#1 = RAdd(r551A,r550C);
          real r551C#1 = RAdd(r551B,r550F);
          real r551D#1 = RAdd(r551C,r5512);
          real r551E#2 = RAdd(r551D,r5515);
          real r551F#1 = dof_load5390;
          real r5520#1 = RMul(r551F,r54F9);
          real r5521#1 = dof_load5399;
          real r5522#1 = RMul(r5521,r54FC);
          real r5523#1 = dof_load53A2;
          real r5524#1 = RMul(r5523,r54FF);
          real r5525#1 = dof_load53AB;
          real r5526#1 = RMul(r5525,r5502);
          real r5527#1 = dof_load53B5;
          real r5528#1 = RMul(r5527,r5505);
          real r5529#1 = dof_load53BF;
          real r552A#1 = RMul(r5529,r5508);
          real r552B#1 = dof_load53C9;
          real r552C#1 = RMul(r552B,r550B);
          real r552D#1 = dof_load53D3;
          real r552E#1 = RMul(r552D,r550E);
          real r552F#1 = dof_load53DD;
          real r5530#1 = RMul(r552F,r5511);
          real r5531#1 = dof_load53E7;
          real r5532#1 = RMul(r5531,r5514);
          real r5533#1 = RAdd(r5520,r5522);
          real r5534#1 = RAdd(r5533,r5524);
          real r5535#1 = RAdd(r5534,r5526);
          real r5536#1 = RAdd(r5535,r5528);
          real r5537#1 = RAdd(r5536,r552A);
          real r5538#1 = RAdd(r5537,r552C);
          real r5539#1 = RAdd(r5538,r552E);
          real r553A#1 = RAdd(r5539,r5530);
          real r553B#2 = RAdd(r553A,r5532);
          real r553C#1 = dof_load5391;
          real r553D#1 = RMul(r553C,r54F9);
          real r553E#1 = dof_load539A;
          real r553F#1 = RMul(r553E,r54FC);
          real r5540#1 = dof_load53A3;
          real r5541#1 = RMul(r5540,r54FF);
          real r5542#1 = dof_load53AC;
          real r5543#1 = RMul(r5542,r5502);
          real r5544#1 = dof_load53B6;
          real r5545#1 = RMul(r5544,r5505);
          real r5546#1 = dof_load53C0;
          real r5547#1 = RMul(r5546,r5508);
          real r5548#1 = dof_load53CA;
          real r5549#1 = RMul(r5548,r550B);
          real r554A#1 = dof_load53D4;
          real r554B#1 = RMul(r554A,r550E);
          real r554C#1 = dof_load53DE;
          real r554D#1 = RMul(r554C,r5511);
          real r554E#1 = dof_load53E8;
          real r554F#1 = RMul(r554E,r5514);
          real r5550#1 = RAdd(r553D,r553F);
          real r5551#1 = RAdd(r5550,r5541);
          real r5552#1 = RAdd(r5551,r5543);
          real r5553#1 = RAdd(r5552,r5545);
          real r5554#1 = RAdd(r5553,r5547);
          real r5555#1 = RAdd(r5554,r5549);
          real r5556#1 = RAdd(r5555,r554B);
          real r5557#1 = RAdd(r5556,r554D);
          real r5558#2 = RAdd(r5557,r554F);
          tensor[3] probe_l_854F7#2 = <tensor[3]>[r551E,r553B,r5558];
          real op1_e3_l_1155BC#1 = VDot<3>(probe_l_854F7,probe_l_854F7);
          real op1_e3_l_1255BF#1 = Sqrt(op1_e3_l_1155BC);
          real realLit55C3#1 = 0.1e1;
          real r55C4#3 = RDiv(realLit55C3,op1_e3_l_1255BF);
          real r55C5#1 = r551E;
          real r55C6#1 = RMul(r55C4,r55C5);
          real r55C7#1 = r553B;
          real r55C8#1 = RMul(r55C4,r55C7);
          real r55C9#1 = r5558;
          real r55CA#1 = RMul(r55C4,r55C9);
          tensor[3] _t55C2#1 = <tensor[3]>[r55C6,r55C8,r55CA];
          goto JOIN55D7
        JOIN55D7:  preds = [ASSIGN55D4,ASSIGN599F]
          tensor[3] _t55D5#1 = phi(_t55C2,_t55D6)
          tensor[3] up255D8#1 = VScale<3>(stepSize3CCF,_t55D5);
          femData:MeshPos cPos55DB#6 = posMove40B9 (cPos3CD9,up255D8);
          femData:MeshPos callFindPos55DD#2 = findPos3574 (_t3CC7,altIntermed531E);
          int intPos55DF#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos55DD);
          tensor[3] refPos55E1#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos55DD);
          int ilit55E4#1 = 10;
          int mulRes55E5#10 = IMul(intPos55DF,ilit55E4);
          int addRes55E7#1 = mulRes55E5;
          int idx55E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55E7);
          int ilit55E9#1 = 1;
          int addRes55EA#1 = IAdd(mulRes55E5,ilit55E9);
          int idx55EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55EA);
          int ilit55EC#1 = 2;
          int addRes55ED#1 = IAdd(mulRes55E5,ilit55EC);
          int idx55EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55ED);
          int ilit55EF#1 = 3;
          int addRes55F0#1 = IAdd(mulRes55E5,ilit55EF);
          int idx55F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F0);
          int ilit55F2#1 = 4;
          int addRes55F3#1 = IAdd(mulRes55E5,ilit55F2);
          int idx55F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F3);
          int ilit55F5#1 = 5;
          int addRes55F6#1 = IAdd(mulRes55E5,ilit55F5);
          int idx55F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F6);
          int ilit55F8#1 = 6;
          int addRes55F9#1 = IAdd(mulRes55E5,ilit55F8);
          int idx55FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F9);
          int ilit55FB#1 = 7;
          int addRes55FC#1 = IAdd(mulRes55E5,ilit55FB);
          int idx55FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55FC);
          int ilit55FE#1 = 8;
          int addRes55FF#1 = IAdd(mulRes55E5,ilit55FE);
          int idx5600#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55FF);
          int ilit5601#1 = 9;
          int addRes5602#1 = IAdd(mulRes55E5,ilit5601);
          int idx5603#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5602);
          int ilit5629#10 = 3;
          int idx562A#1 = idx55E8;
          int mulRes562B#3 = IMul(ilit5629,idx562A);
          int addRes562C#1 = mulRes562B;
          int ilit562D#10 = 1;
          int addRes562E#1 = IAdd(ilit562D,mulRes562B);
          int ilit562F#10 = 2;
          int addRes5630#1 = IAdd(ilit562F,mulRes562B);
          real dof_load5631#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes562C);
          real dof_load5632#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes562E);
          real dof_load5633#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5630);
          int idx5635#1 = idx55EB;
          int mulRes5636#3 = IMul(ilit5629,idx5635);
          int addRes5637#1 = mulRes5636;
          int addRes5638#1 = IAdd(ilit562D,mulRes5636);
          int addRes5639#1 = IAdd(ilit562F,mulRes5636);
          real dof_load563A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5637);
          real dof_load563B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5638);
          real dof_load563C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5639);
          int idx563E#1 = idx55EE;
          int mulRes563F#3 = IMul(ilit5629,idx563E);
          int addRes5640#1 = mulRes563F;
          int addRes5641#1 = IAdd(ilit562D,mulRes563F);
          int addRes5642#1 = IAdd(ilit562F,mulRes563F);
          real dof_load5643#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5640);
          real dof_load5644#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5641);
          real dof_load5645#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5642);
          int idx5647#1 = idx55F1;
          int mulRes5648#3 = IMul(ilit5629,idx5647);
          int addRes5649#1 = mulRes5648;
          int addRes564A#1 = IAdd(ilit562D,mulRes5648);
          int addRes564B#1 = IAdd(ilit562F,mulRes5648);
          real dof_load564C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5649);
          real dof_load564D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes564A);
          real dof_load564E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes564B);
          int idx5651#1 = idx55F4;
          int mulRes5652#3 = IMul(ilit5629,idx5651);
          int addRes5653#1 = mulRes5652;
          int addRes5654#1 = IAdd(ilit562D,mulRes5652);
          int addRes5655#1 = IAdd(ilit562F,mulRes5652);
          real dof_load5656#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5653);
          real dof_load5657#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5654);
          real dof_load5658#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5655);
          int idx565B#1 = idx55F7;
          int mulRes565C#3 = IMul(ilit5629,idx565B);
          int addRes565D#1 = mulRes565C;
          int addRes565E#1 = IAdd(ilit562D,mulRes565C);
          int addRes565F#1 = IAdd(ilit562F,mulRes565C);
          real dof_load5660#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565D);
          real dof_load5661#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565E);
          real dof_load5662#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565F);
          int idx5665#1 = idx55FA;
          int mulRes5666#3 = IMul(ilit5629,idx5665);
          int addRes5667#1 = mulRes5666;
          int addRes5668#1 = IAdd(ilit562D,mulRes5666);
          int addRes5669#1 = IAdd(ilit562F,mulRes5666);
          real dof_load566A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5667);
          real dof_load566B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5668);
          real dof_load566C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5669);
          int idx566F#1 = idx55FD;
          int mulRes5670#3 = IMul(ilit5629,idx566F);
          int addRes5671#1 = mulRes5670;
          int addRes5672#1 = IAdd(ilit562D,mulRes5670);
          int addRes5673#1 = IAdd(ilit562F,mulRes5670);
          real dof_load5674#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5671);
          real dof_load5675#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5672);
          real dof_load5676#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5673);
          int idx5679#1 = idx5600;
          int mulRes567A#3 = IMul(ilit5629,idx5679);
          int addRes567B#1 = mulRes567A;
          int addRes567C#1 = IAdd(ilit562D,mulRes567A);
          int addRes567D#1 = IAdd(ilit562F,mulRes567A);
          real dof_load567E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567B);
          real dof_load567F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567C);
          real dof_load5680#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567D);
          int idx5683#1 = idx5603;
          int mulRes5684#3 = IMul(ilit5629,idx5683);
          int addRes5685#1 = mulRes5684;
          int addRes5686#1 = IAdd(ilit562D,mulRes5684);
          int addRes5687#1 = IAdd(ilit562F,mulRes5684);
          real dof_load5688#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5685);
          real dof_load5689#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5686);
          real dof_load568A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5687);
          real varAcc56F4#2 = VIndex<3,0>(refPos55E1);
          real varAcc56F5#2 = VIndex<3,1>(refPos55E1);
          real varAcc56F6#2 = VIndex<3,2>(refPos55E1);
          real coeff56F7#3 = 0.2e1;
          real iden56F8#4 = varAcc56F4;
          real prod256F9#1 = RMul(iden56F8,varAcc56F4);
          real one56FA#13 = 0.1e1;
          real prod56FB#3 = RMul(one56FA,one56FA);
          real prod56FC#2 = RMul(prod256F9,prod56FB);
          real coeff56FD#6 = 0.4e1;
          real iden56FE#3 = varAcc56F5;
          real prod56FF#2 = RMul(iden56FE,one56FA);
          real prod5700#2 = RMul(iden56F8,prod56FF);
          real iden5701#3 = varAcc56F6;
          real prod5702#2 = RMul(one56FA,iden5701);
          real prod5703#2 = RMul(iden56F8,prod5702);
          real coeff5704#3 = -0.3e1;
          real prod5705#3 = RMul(iden56F8,prod56FB);
          real prod25706#1 = RMul(iden56FE,varAcc56F5);
          real prod5707#1 = RMul(prod25706,one56FA);
          real prod5708#2 = RMul(one56FA,prod5707);
          real prod5709#1 = RMul(iden56FE,iden5701);
          real prod570A#2 = RMul(one56FA,prod5709);
          real prod570B#3 = RMul(one56FA,prod56FF);
          real prod2570C#1 = RMul(iden5701,varAcc56F6);
          real prod570D#1 = RMul(one56FA,prod2570C);
          real prod570E#2 = RMul(one56FA,prod570D);
          real prod570F#3 = RMul(one56FA,prod5702);
          real prod5710#1 = RMul(one56FA,prod56FB);
          real mult5711#1 = RMul(one56FA,prod5710);
          real mult5712#1 = RMul(coeff5704,prod570F);
          real mult5713#2 = RMul(coeff56F7,prod570E);
          real mult5714#1 = RMul(coeff5704,prod570B);
          real mult5715#2 = RMul(coeff56FD,prod570A);
          real mult5716#2 = RMul(coeff56F7,prod5708);
          real mult5717#1 = RMul(coeff5704,prod5705);
          real mult5718#2 = RMul(coeff56FD,prod5703);
          real mult5719#2 = RMul(coeff56FD,prod5700);
          real mult571A#2 = RMul(coeff56F7,prod56FC);
          real sum571B#1 = RAdd(mult5719,mult571A);
          real sum571C#1 = RAdd(mult5718,sum571B);
          real sum571D#1 = RAdd(mult5717,sum571C);
          real sum571E#1 = RAdd(mult5716,sum571D);
          real sum571F#1 = RAdd(mult5715,sum571E);
          real sum5720#1 = RAdd(mult5714,sum571F);
          real sum5721#1 = RAdd(mult5713,sum5720);
          real sum5722#1 = RAdd(mult5712,sum5721);
          real sum5723#1 = RAdd(mult5711,sum5722);
          real intermediate5724#1 = sum5723;
          real coeff5725#3 = -0.1e1;
          real mult5726#1 = RMul(coeff5725,prod5705);
          real sum5727#1 = RAdd(mult5726,mult571A);
          real intermediate5728#1 = sum5727;
          real mult5729#1 = RMul(coeff5725,prod570B);
          real sum572A#1 = RAdd(mult5729,mult5716);
          real intermediate572B#1 = sum572A;
          real mult572C#1 = RMul(coeff5725,prod570F);
          real sum572D#1 = RAdd(mult572C,mult5713);
          real intermediate572E#1 = sum572D;
          real coeff572F#6 = -0.4e1;
          real mult5730#1 = RMul(coeff56FD,prod570F);
          real mult5731#1 = RMul(coeff572F,prod570E);
          real mult5732#2 = RMul(coeff572F,prod570A);
          real mult5733#2 = RMul(coeff572F,prod5703);
          real sum5734#1 = RAdd(mult5732,mult5733);
          real sum5735#1 = RAdd(mult5731,sum5734);
          real sum5736#1 = RAdd(mult5730,sum5735);
          real intermediate5737#1 = sum5736;
          real mult5738#1 = RMul(coeff56FD,prod570B);
          real mult5739#1 = RMul(coeff572F,prod5708);
          real mult573A#2 = RMul(coeff572F,prod5700);
          real sum573B#1 = RAdd(mult5739,mult573A);
          real sum573C#1 = RAdd(mult5732,sum573B);
          real sum573D#1 = RAdd(mult5738,sum573C);
          real intermediate573E#1 = sum573D;
          real mult573F#1 = RMul(coeff56FD,prod5705);
          real mult5740#1 = RMul(coeff572F,prod56FC);
          real sum5741#1 = RAdd(mult573A,mult5740);
          real sum5742#1 = RAdd(mult5733,sum5741);
          real sum5743#1 = RAdd(mult573F,sum5742);
          real intermediate5744#1 = sum5743;
          real r579A#1 = dof_load5631;
          real r579B#3 = intermediate5724;
          real r579C#1 = RMul(r579A,r579B);
          real r579D#1 = dof_load563A;
          real r579E#3 = intermediate5728;
          real r579F#1 = RMul(r579D,r579E);
          real r57A0#1 = dof_load5643;
          real r57A1#3 = intermediate572B;
          real r57A2#1 = RMul(r57A0,r57A1);
          real r57A3#1 = dof_load564C;
          real r57A4#3 = intermediate572E;
          real r57A5#1 = RMul(r57A3,r57A4);
          real r57A6#1 = dof_load5656;
          real r57A7#3 = mult5715;
          real r57A8#1 = RMul(r57A6,r57A7);
          real r57A9#1 = dof_load5660;
          real r57AA#3 = mult5718;
          real r57AB#1 = RMul(r57A9,r57AA);
          real r57AC#1 = dof_load566A;
          real r57AD#3 = mult5719;
          real r57AE#1 = RMul(r57AC,r57AD);
          real r57AF#1 = dof_load5674;
          real r57B0#3 = intermediate5737;
          real r57B1#1 = RMul(r57AF,r57B0);
          real r57B2#1 = dof_load567E;
          real r57B3#3 = intermediate573E;
          real r57B4#1 = RMul(r57B2,r57B3);
          real r57B5#1 = dof_load5688;
          real r57B6#3 = intermediate5744;
          real r57B7#1 = RMul(r57B5,r57B6);
          real r57B8#1 = RAdd(r579C,r579F);
          real r57B9#1 = RAdd(r57B8,r57A2);
          real r57BA#1 = RAdd(r57B9,r57A5);
          real r57BB#1 = RAdd(r57BA,r57A8);
          real r57BC#1 = RAdd(r57BB,r57AB);
          real r57BD#1 = RAdd(r57BC,r57AE);
          real r57BE#1 = RAdd(r57BD,r57B1);
          real r57BF#1 = RAdd(r57BE,r57B4);
          real r57C0#1 = RAdd(r57BF,r57B7);
          real r57C1#1 = dof_load5632;
          real r57C2#1 = RMul(r57C1,r579B);
          real r57C3#1 = dof_load563B;
          real r57C4#1 = RMul(r57C3,r579E);
          real r57C5#1 = dof_load5644;
          real r57C6#1 = RMul(r57C5,r57A1);
          real r57C7#1 = dof_load564D;
          real r57C8#1 = RMul(r57C7,r57A4);
          real r57C9#1 = dof_load5657;
          real r57CA#1 = RMul(r57C9,r57A7);
          real r57CB#1 = dof_load5661;
          real r57CC#1 = RMul(r57CB,r57AA);
          real r57CD#1 = dof_load566B;
          real r57CE#1 = RMul(r57CD,r57AD);
          real r57CF#1 = dof_load5675;
          real r57D0#1 = RMul(r57CF,r57B0);
          real r57D1#1 = dof_load567F;
          real r57D2#1 = RMul(r57D1,r57B3);
          real r57D3#1 = dof_load5689;
          real r57D4#1 = RMul(r57D3,r57B6);
          real r57D5#1 = RAdd(r57C2,r57C4);
          real r57D6#1 = RAdd(r57D5,r57C6);
          real r57D7#1 = RAdd(r57D6,r57C8);
          real r57D8#1 = RAdd(r57D7,r57CA);
          real r57D9#1 = RAdd(r57D8,r57CC);
          real r57DA#1 = RAdd(r57D9,r57CE);
          real r57DB#1 = RAdd(r57DA,r57D0);
          real r57DC#1 = RAdd(r57DB,r57D2);
          real r57DD#1 = RAdd(r57DC,r57D4);
          real r57DE#1 = dof_load5633;
          real r57DF#1 = RMul(r57DE,r579B);
          real r57E0#1 = dof_load563C;
          real r57E1#1 = RMul(r57E0,r579E);
          real r57E2#1 = dof_load5645;
          real r57E3#1 = RMul(r57E2,r57A1);
          real r57E4#1 = dof_load564E;
          real r57E5#1 = RMul(r57E4,r57A4);
          real r57E6#1 = dof_load5658;
          real r57E7#1 = RMul(r57E6,r57A7);
          real r57E8#1 = dof_load5662;
          real r57E9#1 = RMul(r57E8,r57AA);
          real r57EA#1 = dof_load566C;
          real r57EB#1 = RMul(r57EA,r57AD);
          real r57EC#1 = dof_load5676;
          real r57ED#1 = RMul(r57EC,r57B0);
          real r57EE#1 = dof_load5680;
          real r57EF#1 = RMul(r57EE,r57B3);
          real r57F0#1 = dof_load568A;
          real r57F1#1 = RMul(r57F0,r57B6);
          real r57F2#1 = RAdd(r57DF,r57E1);
          real r57F3#1 = RAdd(r57F2,r57E3);
          real r57F4#1 = RAdd(r57F3,r57E5);
          real r57F5#1 = RAdd(r57F4,r57E7);
          real r57F6#1 = RAdd(r57F5,r57E9);
          real r57F7#1 = RAdd(r57F6,r57EB);
          real r57F8#1 = RAdd(r57F7,r57ED);
          real r57F9#1 = RAdd(r57F8,r57EF);
          real r57FA#1 = RAdd(r57F9,r57F1);
          tensor[3] compositionl5799#3 = <tensor[3]>[r57C0,r57DD,r57FA];
          real op1_e3_l_19585E#1 = VDot<3>(compositionl5799,compositionl5799);
          tensor[3] op1_e3_l_205861#3 = VScale<3>(stepSize3CCF,compositionl5799);
          real op1_e3_l_215864#1 = Sqrt(op1_e3_l_19585E);
          real realLit5868#1 = 0.1e1;
          real r5869#3 = RDiv(realLit5868,op1_e3_l_215864);
          real r586A#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_205861);
          real r586B#1 = RMul(r5869,r586A);
          real r586C#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_205861);
          real r586D#1 = RMul(r5869,r586C);
          real r586E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_205861);
          real r586F#1 = RMul(r5869,r586E);
          tensor[3] op1_e3_l_225867#1 = <tensor[3]>[r586B,r586D,r586F];
          tensor[3] altCPos587A#3 = VAdd<3>(altCPos3CDB,op1_e3_l_225867);
          bool _t587D#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos55DB);
          bool _t587F#1 = BNot(_t587D);
          if _t587F then goto MASSIGN5882 else goto JOIN5886
        MASSIGN5882:  preds = [COND5881]
          Print<[tensor[3][]]>(stream3CD3);
          self.cPos = cPos55DB;
          self.altCPos = altCPos587A;
          stabilize
          goto JOIN5886
        JOIN5886:  preds = [*STABILIZE5885,COND5881]
          tensor[3] _t5887#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos55DB);
          int _t5889#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos55DB);
          femData:Mesh _t588B#16 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos55DB);
          int ilit588E#1 = 4;
          int mulRes588F#4 = IMul(_t5889,ilit588E);
          int addRes5891#1 = mulRes588F;
          int idx5892#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5891);
          int ilit5893#1 = 1;
          int addRes5894#1 = IAdd(mulRes588F,ilit5893);
          int idx5895#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5894);
          int ilit5896#1 = 2;
          int addRes5897#1 = IAdd(mulRes588F,ilit5896);
          int idx5898#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5897);
          int ilit5899#1 = 3;
          int addRes589A#1 = IAdd(mulRes588F,ilit5899);
          int idx589B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes589A);
          int ilit58AF#4 = 3;
          int idx58B0#1 = idx5892;
          int mulRes58B1#3 = IMul(ilit58AF,idx58B0);
          int addRes58B2#1 = mulRes58B1;
          int ilit58B3#4 = 1;
          int addRes58B4#1 = IAdd(ilit58B3,mulRes58B1);
          int ilit58B5#4 = 2;
          int addRes58B6#1 = IAdd(ilit58B5,mulRes58B1);
          real dof_load58B7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B2);
          real dof_load58B8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B4);
          real dof_load58B9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B6);
          int idx58BB#1 = idx5895;
          int mulRes58BC#3 = IMul(ilit58AF,idx58BB);
          int addRes58BD#1 = mulRes58BC;
          int addRes58BE#1 = IAdd(ilit58B3,mulRes58BC);
          int addRes58BF#1 = IAdd(ilit58B5,mulRes58BC);
          real dof_load58C0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BD);
          real dof_load58C1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BE);
          real dof_load58C2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BF);
          int idx58C4#1 = idx5898;
          int mulRes58C5#3 = IMul(ilit58AF,idx58C4);
          int addRes58C6#1 = mulRes58C5;
          int addRes58C7#1 = IAdd(ilit58B3,mulRes58C5);
          int addRes58C8#1 = IAdd(ilit58B5,mulRes58C5);
          real dof_load58C9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C6);
          real dof_load58CA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C7);
          real dof_load58CB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C8);
          int idx58CD#1 = idx589B;
          int mulRes58CE#3 = IMul(ilit58AF,idx58CD);
          int addRes58CF#1 = mulRes58CE;
          int addRes58D0#1 = IAdd(ilit58B3,mulRes58CE);
          int addRes58D1#1 = IAdd(ilit58B5,mulRes58CE);
          real dof_load58D2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58CF);
          real dof_load58D3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58D0);
          real dof_load58D4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58D1);
          real varAcc5902#1 = VIndex<3,0>(_t5887);
          real varAcc5903#1 = VIndex<3,1>(_t5887);
          real varAcc5904#1 = VIndex<3,2>(_t5887);
          real coeff5905#3 = -0.1e1;
          real iden5906#1 = varAcc5902;
          real one5907#11 = 0.1e1;
          real prod5908#2 = RMul(one5907,one5907);
          real prod5909#2 = RMul(iden5906,prod5908);
          real iden590A#1 = varAcc5903;
          real prod590B#1 = RMul(iden590A,one5907);
          real prod590C#2 = RMul(one5907,prod590B);
          real iden590D#1 = varAcc5904;
          real prod590E#1 = RMul(one5907,iden590D);
          real prod590F#2 = RMul(one5907,prod590E);
          real prod5910#1 = RMul(one5907,prod5908);
          real mult5911#1 = RMul(one5907,prod5910);
          real mult5912#1 = RMul(coeff5905,prod590F);
          real mult5913#1 = RMul(coeff5905,prod590C);
          real mult5914#1 = RMul(coeff5905,prod5909);
          real sum5915#1 = RAdd(mult5913,mult5914);
          real sum5916#1 = RAdd(mult5912,sum5915);
          real sum5917#1 = RAdd(mult5911,sum5916);
          real intermediate5918#1 = sum5917;
          real basisEval5919#1 = RMul(one5907,prod5909);
          real basisEval591A#1 = RMul(one5907,prod590C);
          real basisEval591B#1 = RMul(one5907,prod590F);
          real r593A#1 = dof_load58B7;
          real r593B#3 = intermediate5918;
          real r593C#1 = RMul(r593A,r593B);
          real r593D#1 = dof_load58C0;
          real r593E#3 = basisEval5919;
          real r593F#1 = RMul(r593D,r593E);
          real r5940#1 = dof_load58C9;
          real r5941#3 = basisEval591A;
          real r5942#1 = RMul(r5940,r5941);
          real r5943#1 = dof_load58D2;
          real r5944#3 = basisEval591B;
          real r5945#1 = RMul(r5943,r5944);
          real r5946#1 = RAdd(r593C,r593F);
          real r5947#1 = RAdd(r5946,r5942);
          real r5948#1 = RAdd(r5947,r5945);
          real r5949#1 = dof_load58B8;
          real r594A#1 = RMul(r5949,r593B);
          real r594B#1 = dof_load58C1;
          real r594C#1 = RMul(r594B,r593E);
          real r594D#1 = dof_load58CA;
          real r594E#1 = RMul(r594D,r5941);
          real r594F#1 = dof_load58D3;
          real r5950#1 = RMul(r594F,r5944);
          real r5951#1 = RAdd(r594A,r594C);
          real r5952#1 = RAdd(r5951,r594E);
          real r5953#1 = RAdd(r5952,r5950);
          real r5954#1 = dof_load58B9;
          real r5955#1 = RMul(r5954,r593B);
          real r5956#1 = dof_load58C2;
          real r5957#1 = RMul(r5956,r593E);
          real r5958#1 = dof_load58CB;
          real r5959#1 = RMul(r5958,r5941);
          real r595A#1 = dof_load58D4;
          real r595B#1 = RMul(r595A,r5944);
          real r595C#1 = RAdd(r5955,r5957);
          real r595D#1 = RAdd(r595C,r5959);
          real r595E#1 = RAdd(r595D,r595B);
          tensor[3] _t5939#1 = <tensor[3]>[r5948,r5953,r595E];
          tensor[3][1] _t5986#1 = <tensor[3][1]>{_t5939};
          tensor[3][] _t5988#1 = MkDynamic<tensor[3],1>(_t5986);
          tensor[3][] stream598A#1 = Concat<tensor[3]>(stream3CD3,_t5988);
          tensor[3][1] _t598C#1 = <tensor[3][1]>{altCPos587A};
          tensor[3][] _t598E#1 = MkDynamic<tensor[3],1>(_t598C);
          tensor[3][] newStream5990#1 = Concat<tensor[3]>(newStream3CD5,_t598E);
          int _t5992#1 = 1;
          int step5994#1 = IAdd(step3CD7,_t5992);
          self.stream = stream598A;
          self.newStream = newStream5990;
          self.step = step5994;
          self.cPos = cPos55DB;
          self.altCPos = altCPos587A;
          active
        ASSIGN599E:  preds = [COND532E]
          real realLit599C#3 = 0.e0;
          tensor[3] _t55D6#1 = <tensor[3]>[realLit599C,realLit599C,realLit599C];
          goto JOIN55D7
        ASSIGN59A1:  preds = [COND5325]
          femData:MeshPos _t59A0#1 = findPos3574 (meshData3CCD,altIntermed531E);
          bool _t59A2#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t59A0);
          bool _t5329#1 = BNot(_t59A2);
          goto JOIN532A
        ASSIGN59A7:  preds = [COND3E03]
          real realLit59A5#3 = 0.e0;
          tensor[3] _t40A5#1 = <tensor[3]>[realLit59A5,realLit59A5,realLit59A5];
          goto JOIN40A6
        ASSIGN59AA:  preds = [COND3DF8]
          string _t59A9#1 = "fine in cell:";
          femData:MeshCell _t59AB#1 = LoadFem<femData:MeshCell>(_t3CF0,_t3CEE);
          string _t59AD#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t59A9,_t59AB,_t59AD);
          goto JOIN3E00
        ASSIGN59B1:  preds = [COND3CE3]
          femData:MeshPos _t59B0#1 = findPos3574 (meshData3CCD,altCPos3CDB);
          bool _t59B2#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t59B0);
          bool _t59B4#1 = BNot(_t59B2);
          if _t59B4 then goto ASSIGN59B8 else goto ASSIGN59BB
        ASSIGN59B8:  preds = [COND59B6]
          bool _t59B7#1 = true;
          goto JOIN59BA
        JOIN59BA:  preds = [ASSIGN59B8,ASSIGN59BB]
          bool _t3CE7#1 = phi(_t59B7,_t59B9)
          goto JOIN3CE8
        ASSIGN59BB:  preds = [COND59B6]
          bool _t59B9#1 = EQ<int>(step3CD7,stepMax3CD1);
          goto JOIN59BA
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY59BC:  preds = []
      tensor[3][] startPoints59BD#1 = globals.startPoints3524;
    FOREACH59C0:  preds = [ASSIGN59BE,NEXT59C2]
      foreach (x59BF in startPoints59BD) on exit goto RETURN59C3
      new gg(x59BF);
      goto FOREACH59C0
    RETURN59C3:  preds = [FOREACH59C0]
      return
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData351F (meshData) = <no-default>
  input 0space03AB_intermedateGlobal3520 (space) = <no-default>
  input 0data03AD_intermedateGlobal3521 (data) = <no-default>
  input timeSteps3522 (timeSteps) = <default>
  input timeEps3523 (timeEps) = <default>
  input startPoints3524 (startPoints) = <no-default>
  input stepSize3525 (stepSize) = <default>
  input stepMax3526 (stepMax) = <default>
  global femData:FemFunc data3527
  global femData:Mesh _t3528
  global femData:Space _tX3529
## functions
  function femData:MeshPos findPos3574 (femData:Mesh mesh3575#19, tensor[3] pos3576#3) {
    ENTRY3577:  preds = []
      real _t3578#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn357A#1 = <tensor[3]>[_t3578,_t3578,_t3578];
      int newtonInt357C#1 = 0;
      int[] yayCells357E#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3575,pos3576);
    FOREACH3581:  preds = [ASSIGN357F,NEXT3CB5]
      foreach (cellItter3580 in yayCells357E) on exit goto ASSIGN3CB7
      int _t3582#1 = 16;
      int[] _t3584#1 = Range(newtonInt357C,_t3582);
    FOREACH3587:  preds = [ASSIGN3585,NEXT3CB4]
      foreach (newtonItter3586 in _t3584) on exit goto NEXT3CB5
        tensor[3] xn3B56#4 = phi(xn357A,xn3C1A)
      int ilit3589#1 = 4;
      int mulRes358A#4 = IMul(cellItter3580,ilit3589);
      int idx358D#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,mulRes358A);
      int ilit358E#5 = 1;
      int addRes358F#1 = IAdd(mulRes358A,ilit358E);
      int idx3590#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes358F);
      int ilit3591#5 = 2;
      int addRes3592#1 = IAdd(mulRes358A,ilit3591);
      int idx3593#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes3592);
      int ilit3594#5 = 3;
      int addRes3595#1 = IAdd(mulRes358A,ilit3594);
      int idx3596#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes3595);
      int mulRes35AC#3 = IMul(ilit3594,idx358D);
      int addRes35AF#1 = IAdd(ilit358E,mulRes35AC);
      int addRes35B1#1 = IAdd(ilit3591,mulRes35AC);
      real dof_load35B2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35AC);
      real dof_load35B3#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35AF);
      real dof_load35B4#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B1);
      int mulRes35B7#3 = IMul(ilit3594,idx3590);
      int addRes35B9#1 = IAdd(ilit358E,mulRes35B7);
      int addRes35BA#1 = IAdd(ilit3591,mulRes35B7);
      real dof_load35BB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35B7);
      real dof_load35BC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B9);
      real dof_load35BD#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35BA);
      int mulRes35C0#3 = IMul(ilit3594,idx3593);
      int addRes35C2#1 = IAdd(ilit358E,mulRes35C0);
      int addRes35C3#1 = IAdd(ilit3591,mulRes35C0);
      real dof_load35C4#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35C0);
      real dof_load35C5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C2);
      real dof_load35C6#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C3);
      int mulRes35C9#3 = IMul(ilit3594,idx3596);
      int addRes35CB#1 = IAdd(ilit358E,mulRes35C9);
      int addRes35CC#1 = IAdd(ilit3591,mulRes35C9);
      real dof_load35CD#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35C9);
      real dof_load35CE#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CB);
      real dof_load35CF#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CC);
      real coeff3600#22 = -0.1e1;
      real one3601#33 = 0.1e1;
      real prod3602#2 = RMul(one3601,one3601);
      real prod3603#2 = RMul(one3601,prod3602);
      real basisEval3604#3 = RMul(coeff3600,prod3603);
      real basisEval3605#10 = RMul(one3601,prod3603);
      real basisEval3606#45 = 0.e0;
      real r361D#2 = RMul(dof_load35B2,basisEval3604);
      real r3620#1 = RMul(dof_load35BB,basisEval3605);
      real r3623#2 = RMul(dof_load35C4,basisEval3606);
      real r3626#2 = RMul(dof_load35CD,basisEval3606);
      real r3627#1 = RAdd(r361D,r3620);
      real r3628#1 = RAdd(r3627,r3623);
      real r3629#13 = RAdd(r3628,r3626);
      real r362D#1 = RMul(dof_load35BB,basisEval3606);
      real r362F#1 = RMul(dof_load35C4,basisEval3605);
      real r3632#2 = RAdd(r361D,r362D);
      real r3633#1 = RAdd(r3632,r362F);
      real r3634#13 = RAdd(r3633,r3626);
      real r363C#1 = RMul(dof_load35CD,basisEval3605);
      real r363E#1 = RAdd(r3632,r3623);
      real r363F#12 = RAdd(r363E,r363C);
      real r3642#2 = RMul(dof_load35B3,basisEval3604);
      real r3644#1 = RMul(dof_load35BC,basisEval3605);
      real r3646#2 = RMul(dof_load35C5,basisEval3606);
      real r3648#2 = RMul(dof_load35CE,basisEval3606);
      real r3649#1 = RAdd(r3642,r3644);
      real r364A#1 = RAdd(r3649,r3646);
      real r364B#13 = RAdd(r364A,r3648);
      real r364D#1 = RMul(dof_load35BC,basisEval3606);
      real r364E#1 = RMul(dof_load35C5,basisEval3605);
      real r3650#2 = RAdd(r3642,r364D);
      real r3651#1 = RAdd(r3650,r364E);
      real r3652#13 = RAdd(r3651,r3648);
      real r3656#1 = RMul(dof_load35CE,basisEval3605);
      real r3658#1 = RAdd(r3650,r3646);
      real r3659#12 = RAdd(r3658,r3656);
      real r365C#2 = RMul(dof_load35B4,basisEval3604);
      real r365E#1 = RMul(dof_load35BD,basisEval3605);
      real r3660#2 = RMul(dof_load35C6,basisEval3606);
      real r3662#2 = RMul(dof_load35CF,basisEval3606);
      real r3663#1 = RAdd(r365C,r365E);
      real r3664#1 = RAdd(r3663,r3660);
      real r3665#13 = RAdd(r3664,r3662);
      real r3667#1 = RMul(dof_load35BD,basisEval3606);
      real r3668#1 = RMul(dof_load35C6,basisEval3605);
      real r366A#2 = RAdd(r365C,r3667);
      real r366B#1 = RAdd(r366A,r3668);
      real r366C#13 = RAdd(r366B,r3662);
      real r3670#1 = RMul(dof_load35CF,basisEval3605);
      real r3672#1 = RAdd(r366A,r3660);
      real r3673#12 = RAdd(r3672,r3670);
      real r36D4#3 = RMul(basisEval3606,r3629);
      real r36D6#3 = RMul(basisEval3606,r364B);
      real r36D8#5 = RMul(basisEval3606,r3665);
      real r36D9#3 = RAdd(r36D4,r36D6);
      real r36DA#9 = RAdd(r36D9,r36D8);
      real r36DC#3 = RMul(basisEval3606,r3634);
      real r36DE#3 = RMul(basisEval3606,r3652);
      real r36E0#5 = RMul(basisEval3606,r366C);
      real r36E1#3 = RAdd(r36DC,r36DE);
      real r36E2#9 = RAdd(r36E1,r36E0);
      real r36E4#3 = RMul(basisEval3606,r363F);
      real r36E6#3 = RMul(basisEval3606,r3659);
      real r36E8#5 = RMul(basisEval3606,r3673);
      real r36E9#3 = RAdd(r36E4,r36E6);
      real r36EA#12 = RAdd(r36E9,r36E8);
      real r36ED#1 = RMul(coeff3600,r3665);
      real r36EE#3 = RAdd(r36D9,r36ED);
      real r36EF#1 = RMul(coeff3600,r366C);
      real r36F0#3 = RAdd(r36E1,r36EF);
      real r36F1#1 = RMul(coeff3600,r3673);
      real r36F2#4 = RAdd(r36E9,r36F1);
      real r36F5#1 = RMul(one3601,r364B);
      real r36F6#1 = RAdd(r36D4,r36F5);
      real r36F7#3 = RAdd(r36F6,r36D8);
      real r36F8#1 = RMul(one3601,r3652);
      real r36F9#1 = RAdd(r36DC,r36F8);
      real r36FA#3 = RAdd(r36F9,r36E0);
      real r36FB#1 = RMul(one3601,r3659);
      real r36FC#1 = RAdd(r36E4,r36FB);
      real r36FD#4 = RAdd(r36FC,r36E8);
      real r3700#1 = RMul(one3601,r3665);
      real r3701#3 = RAdd(r36D9,r3700);
      real r3702#1 = RMul(one3601,r366C);
      real r3703#3 = RAdd(r36E1,r3702);
      real r3704#1 = RMul(one3601,r3673);
      real r3705#4 = RAdd(r36E9,r3704);
      real r3707#1 = RMul(coeff3600,r3629);
      real r3708#1 = RAdd(r3707,r36D6);
      real r3709#3 = RAdd(r3708,r36D8);
      real r370A#1 = RMul(coeff3600,r3634);
      real r370B#1 = RAdd(r370A,r36DE);
      real r370C#3 = RAdd(r370B,r36E0);
      real r370D#1 = RMul(coeff3600,r363F);
      real r370E#1 = RAdd(r370D,r36E6);
      real r370F#4 = RAdd(r370E,r36E8);
      real r3712#1 = RMul(coeff3600,r364B);
      real r3713#1 = RAdd(r36D4,r3712);
      real r3714#3 = RAdd(r3713,r36D8);
      real r3715#1 = RMul(coeff3600,r3652);
      real r3716#1 = RAdd(r36DC,r3715);
      real r3717#3 = RAdd(r3716,r36E0);
      real r3718#1 = RMul(coeff3600,r3659);
      real r3719#1 = RAdd(r36E4,r3718);
      real r371A#4 = RAdd(r3719,r36E8);
      real r371C#1 = RMul(one3601,r3629);
      real r371D#1 = RAdd(r371C,r36D6);
      real r371E#3 = RAdd(r371D,r36D8);
      real r371F#1 = RMul(one3601,r3634);
      real r3720#1 = RAdd(r371F,r36DE);
      real r3721#3 = RAdd(r3720,r36E0);
      real r3722#1 = RMul(one3601,r363F);
      real r3723#1 = RAdd(r3722,r36E6);
      real r3724#4 = RAdd(r3723,r36E8);
      real r3781#1 = RMul(r3629,r36DA);
      real r3784#1 = RMul(r364B,r3701);
      real r3787#1 = RMul(r3665,r3714);
      real r3788#1 = RAdd(r3781,r3784);
      real r3789#1 = RAdd(r3788,r3787);
      real r378B#1 = RMul(r3629,r36E2);
      real r378D#1 = RMul(r364B,r3703);
      real r378F#1 = RMul(r3665,r3717);
      real r3790#1 = RAdd(r378B,r378D);
      real r3791#2 = RAdd(r3790,r378F);
      real r3793#1 = RMul(r3629,r36EA);
      real r3795#1 = RMul(r364B,r3705);
      real r3797#1 = RMul(r3665,r371A);
      real r3798#1 = RAdd(r3793,r3795);
      real r3799#2 = RAdd(r3798,r3797);
      real r379C#1 = RMul(r3629,r36EE);
      real r379E#1 = RMul(r364B,r36DA);
      real r37A0#1 = RMul(r3665,r371E);
      real r37A1#1 = RAdd(r379C,r379E);
      real r37A2#1 = RAdd(r37A1,r37A0);
      real r37A4#1 = RMul(r3629,r36F0);
      real r37A6#1 = RMul(r364B,r36E2);
      real r37A8#1 = RMul(r3665,r3721);
      real r37A9#1 = RAdd(r37A4,r37A6);
      real r37AA#2 = RAdd(r37A9,r37A8);
      real r37AC#1 = RMul(r3629,r36F2);
      real r37AE#1 = RMul(r364B,r36EA);
      real r37B0#1 = RMul(r3665,r3724);
      real r37B1#1 = RAdd(r37AC,r37AE);
      real r37B2#2 = RAdd(r37B1,r37B0);
      real r37B5#1 = RMul(r3629,r36F7);
      real r37B7#1 = RMul(r364B,r3709);
      real r37B9#1 = RMul(r3665,r36DA);
      real r37BA#1 = RAdd(r37B5,r37B7);
      real r37BB#1 = RAdd(r37BA,r37B9);
      real r37BD#1 = RMul(r3629,r36FA);
      real r37BF#1 = RMul(r364B,r370C);
      real r37C1#1 = RMul(r3665,r36E2);
      real r37C2#1 = RAdd(r37BD,r37BF);
      real r37C3#2 = RAdd(r37C2,r37C1);
      real r37C5#1 = RMul(r3629,r36FD);
      real r37C7#1 = RMul(r364B,r370F);
      real r37C9#1 = RMul(r3665,r36EA);
      real r37CA#1 = RAdd(r37C5,r37C7);
      real r37CB#2 = RAdd(r37CA,r37C9);
      real r37CF#1 = RMul(r3634,r36DA);
      real r37D1#1 = RMul(r3652,r3701);
      real r37D3#1 = RMul(r366C,r3714);
      real r37D4#1 = RAdd(r37CF,r37D1);
      real r37D5#2 = RAdd(r37D4,r37D3);
      real r37D6#1 = RMul(r3634,r36E2);
      real r37D7#1 = RMul(r3652,r3703);
      real r37D8#1 = RMul(r366C,r3717);
      real r37D9#1 = RAdd(r37D6,r37D7);
      real r37DA#1 = RAdd(r37D9,r37D8);
      real r37DB#1 = RMul(r3634,r36EA);
      real r37DC#1 = RMul(r3652,r3705);
      real r37DD#1 = RMul(r366C,r371A);
      real r37DE#1 = RAdd(r37DB,r37DC);
      real r37DF#2 = RAdd(r37DE,r37DD);
      real r37E1#1 = RMul(r3634,r36EE);
      real r37E2#1 = RMul(r3652,r36DA);
      real r37E3#1 = RMul(r366C,r371E);
      real r37E4#1 = RAdd(r37E1,r37E2);
      real r37E5#2 = RAdd(r37E4,r37E3);
      real r37E6#1 = RMul(r3634,r36F0);
      real r37E7#1 = RMul(r3652,r36E2);
      real r37E8#1 = RMul(r366C,r3721);
      real r37E9#1 = RAdd(r37E6,r37E7);
      real r37EA#1 = RAdd(r37E9,r37E8);
      real r37EB#1 = RMul(r3634,r36F2);
      real r37EC#1 = RMul(r3652,r36EA);
      real r37ED#1 = RMul(r366C,r3724);
      real r37EE#1 = RAdd(r37EB,r37EC);
      real r37EF#2 = RAdd(r37EE,r37ED);
      real r37F1#1 = RMul(r3634,r36F7);
      real r37F2#1 = RMul(r3652,r3709);
      real r37F3#1 = RMul(r366C,r36DA);
      real r37F4#1 = RAdd(r37F1,r37F2);
      real r37F5#2 = RAdd(r37F4,r37F3);
      real r37F6#1 = RMul(r3634,r36FA);
      real r37F7#1 = RMul(r3652,r370C);
      real r37F8#1 = RMul(r366C,r36E2);
      real r37F9#1 = RAdd(r37F6,r37F7);
      real r37FA#1 = RAdd(r37F9,r37F8);
      real r37FB#1 = RMul(r3634,r36FD);
      real r37FC#1 = RMul(r3652,r370F);
      real r37FD#1 = RMul(r366C,r36EA);
      real r37FE#1 = RAdd(r37FB,r37FC);
      real r37FF#2 = RAdd(r37FE,r37FD);
      real r3803#1 = RMul(r363F,r36DA);
      real r3805#1 = RMul(r3659,r3701);
      real r3807#1 = RMul(r3673,r3714);
      real r3808#1 = RAdd(r3803,r3805);
      real r3809#2 = RAdd(r3808,r3807);
      real r380A#1 = RMul(r363F,r36E2);
      real r380B#1 = RMul(r3659,r3703);
      real r380C#1 = RMul(r3673,r3717);
      real r380D#1 = RAdd(r380A,r380B);
      real r380E#2 = RAdd(r380D,r380C);
      real r380F#1 = RMul(r363F,r36EA);
      real r3810#1 = RMul(r3659,r3705);
      real r3811#1 = RMul(r3673,r371A);
      real r3812#1 = RAdd(r380F,r3810);
      real r3813#1 = RAdd(r3812,r3811);
      real r3815#1 = RMul(r363F,r36EE);
      real r3816#1 = RMul(r3659,r36DA);
      real r3817#1 = RMul(r3673,r371E);
      real r3818#1 = RAdd(r3815,r3816);
      real r3819#2 = RAdd(r3818,r3817);
      real r381A#1 = RMul(r363F,r36F0);
      real r381B#1 = RMul(r3659,r36E2);
      real r381C#1 = RMul(r3673,r3721);
      real r381D#1 = RAdd(r381A,r381B);
      real r381E#2 = RAdd(r381D,r381C);
      real r381F#1 = RMul(r363F,r36F2);
      real r3820#1 = RMul(r3659,r36EA);
      real r3821#1 = RMul(r3673,r3724);
      real r3822#1 = RAdd(r381F,r3820);
      real r3823#1 = RAdd(r3822,r3821);
      real r3825#1 = RMul(r363F,r36F7);
      real r3826#1 = RMul(r3659,r3709);
      real r3827#1 = RMul(r3673,r36DA);
      real r3828#1 = RAdd(r3825,r3826);
      real r3829#2 = RAdd(r3828,r3827);
      real r382A#1 = RMul(r363F,r36FA);
      real r382B#1 = RMul(r3659,r370C);
      real r382C#1 = RMul(r3673,r36E2);
      real r382D#1 = RAdd(r382A,r382B);
      real r382E#2 = RAdd(r382D,r382C);
      real r382F#1 = RMul(r363F,r36FD);
      real r3830#1 = RMul(r3659,r370F);
      real r3831#1 = RMul(r3673,r36EA);
      real r3832#1 = RAdd(r382F,r3830);
      real r3833#1 = RAdd(r3832,r3831);
      tensor[3] probe_l_1438EF#1 = <tensor[3]>[r3629,r364B,r3665];
      tensor[3] probe_l_15393C#3 = <tensor[3]>[r3634,r3652,r366C];
      tensor[3] tensor39E7#1 = <tensor[3]>[r36EA,r3705,r371A];
      tensor[3] tensor39ED#1 = <tensor[3]>[r36F2,r36EA,r3724];
      tensor[3] tensor39F4#1 = <tensor[3]>[r36FD,r370F,r36EA];
      real vdot3A17#1 = VDot<3>(probe_l_15393C,tensor39E7);
      real vdot3A19#1 = VDot<3>(probe_l_15393C,tensor39ED);
      real vdot3A1B#1 = VDot<3>(probe_l_15393C,tensor39F4);
      tensor[3] op1_e3_l_183A15#1 = <tensor[3]>[vdot3A17,vdot3A19,vdot3A1B];
      real op1_e3_l_193A24#1 = VDot<3>(probe_l_1438EF,op1_e3_l_183A15);
      real r3A2A#2 = RMul(basisEval3606,r3789);
      real r3A2C#1 = RMul(basisEval3606,r3791);
      real r3A2E#2 = RMul(basisEval3606,r3799);
      real r3A30#2 = RMul(basisEval3606,r37D5);
      real r3A32#3 = RMul(basisEval3606,r37DA);
      real r3A35#1 = RMul(one3601,r37DF);
      real r3A37#2 = RMul(basisEval3606,r3809);
      real r3A3A#1 = RMul(coeff3600,r380E);
      real r3A3C#3 = RMul(basisEval3606,r3813);
      real r3A3D#2 = RAdd(r3A2A,r3A2C);
      real r3A3E#1 = RAdd(r3A3D,r3A2E);
      real r3A3F#1 = RAdd(r3A3E,r3A30);
      real r3A40#1 = RAdd(r3A3F,r3A32);
      real r3A41#1 = RAdd(r3A40,r3A35);
      real r3A42#1 = RAdd(r3A41,r3A37);
      real r3A43#1 = RAdd(r3A42,r3A3A);
      real r3A44#1 = RAdd(r3A43,r3A3C);
      real r3A46#2 = RMul(basisEval3606,r37A2);
      real r3A48#1 = RMul(basisEval3606,r37AA);
      real r3A4A#2 = RMul(basisEval3606,r37B2);
      real r3A4C#2 = RMul(basisEval3606,r37E5);
      real r3A4E#3 = RMul(basisEval3606,r37EA);
      real r3A50#1 = RMul(one3601,r37EF);
      real r3A52#2 = RMul(basisEval3606,r3819);
      real r3A54#1 = RMul(coeff3600,r381E);
      real r3A56#3 = RMul(basisEval3606,r3823);
      real r3A57#2 = RAdd(r3A46,r3A48);
      real r3A58#1 = RAdd(r3A57,r3A4A);
      real r3A59#1 = RAdd(r3A58,r3A4C);
      real r3A5A#1 = RAdd(r3A59,r3A4E);
      real r3A5B#1 = RAdd(r3A5A,r3A50);
      real r3A5C#1 = RAdd(r3A5B,r3A52);
      real r3A5D#1 = RAdd(r3A5C,r3A54);
      real r3A5E#1 = RAdd(r3A5D,r3A56);
      real r3A60#2 = RMul(basisEval3606,r37BB);
      real r3A62#1 = RMul(basisEval3606,r37C3);
      real r3A64#2 = RMul(basisEval3606,r37CB);
      real r3A66#2 = RMul(basisEval3606,r37F5);
      real r3A68#3 = RMul(basisEval3606,r37FA);
      real r3A6A#1 = RMul(one3601,r37FF);
      real r3A6C#2 = RMul(basisEval3606,r3829);
      real r3A6E#1 = RMul(coeff3600,r382E);
      real r3A70#3 = RMul(basisEval3606,r3833);
      real r3A71#2 = RAdd(r3A60,r3A62);
      real r3A72#1 = RAdd(r3A71,r3A64);
      real r3A73#1 = RAdd(r3A72,r3A66);
      real r3A74#1 = RAdd(r3A73,r3A68);
      real r3A75#1 = RAdd(r3A74,r3A6A);
      real r3A76#1 = RAdd(r3A75,r3A6C);
      real r3A77#1 = RAdd(r3A76,r3A6E);
      real r3A78#1 = RAdd(r3A77,r3A70);
      real r3A7A#1 = RMul(coeff3600,r3799);
      real r3A7B#2 = RMul(basisEval3606,r37DF);
      real r3A7C#1 = RMul(one3601,r3809);
      real r3A7D#2 = RMul(basisEval3606,r380E);
      real r3A7E#1 = RAdd(r3A3D,r3A7A);
      real r3A7F#1 = RAdd(r3A7E,r3A30);
      real r3A80#1 = RAdd(r3A7F,r3A32);
      real r3A81#1 = RAdd(r3A80,r3A7B);
      real r3A82#1 = RAdd(r3A81,r3A7C);
      real r3A83#1 = RAdd(r3A82,r3A7D);
      real r3A84#1 = RAdd(r3A83,r3A3C);
      real r3A85#1 = RMul(coeff3600,r37B2);
      real r3A86#2 = RMul(basisEval3606,r37EF);
      real r3A87#1 = RMul(one3601,r3819);
      real r3A88#2 = RMul(basisEval3606,r381E);
      real r3A89#1 = RAdd(r3A57,r3A85);
      real r3A8A#1 = RAdd(r3A89,r3A4C);
      real r3A8B#1 = RAdd(r3A8A,r3A4E);
      real r3A8C#1 = RAdd(r3A8B,r3A86);
      real r3A8D#1 = RAdd(r3A8C,r3A87);
      real r3A8E#1 = RAdd(r3A8D,r3A88);
      real r3A8F#1 = RAdd(r3A8E,r3A56);
      real r3A90#1 = RMul(coeff3600,r37CB);
      real r3A91#2 = RMul(basisEval3606,r37FF);
      real r3A92#1 = RMul(one3601,r3829);
      real r3A93#2 = RMul(basisEval3606,r382E);
      real r3A94#1 = RAdd(r3A71,r3A90);
      real r3A95#1 = RAdd(r3A94,r3A66);
      real r3A96#1 = RAdd(r3A95,r3A68);
      real r3A97#1 = RAdd(r3A96,r3A91);
      real r3A98#1 = RAdd(r3A97,r3A92);
      real r3A99#1 = RAdd(r3A98,r3A93);
      real r3A9A#1 = RAdd(r3A99,r3A70);
      real r3A9C#1 = RMul(one3601,r3791);
      real r3A9D#1 = RMul(coeff3600,r37D5);
      real r3A9E#1 = RAdd(r3A2A,r3A9C);
      real r3A9F#1 = RAdd(r3A9E,r3A2E);
      real r3AA0#1 = RAdd(r3A9F,r3A9D);
      real r3AA1#1 = RAdd(r3AA0,r3A32);
      real r3AA2#1 = RAdd(r3AA1,r3A7B);
      real r3AA3#1 = RAdd(r3AA2,r3A37);
      real r3AA4#1 = RAdd(r3AA3,r3A7D);
      real r3AA5#1 = RAdd(r3AA4,r3A3C);
      real r3AA6#1 = RMul(one3601,r37AA);
      real r3AA7#1 = RMul(coeff3600,r37E5);
      real r3AA8#1 = RAdd(r3A46,r3AA6);
      real r3AA9#1 = RAdd(r3AA8,r3A4A);
      real r3AAA#1 = RAdd(r3AA9,r3AA7);
      real r3AAB#1 = RAdd(r3AAA,r3A4E);
      real r3AAC#1 = RAdd(r3AAB,r3A86);
      real r3AAD#1 = RAdd(r3AAC,r3A52);
      real r3AAE#1 = RAdd(r3AAD,r3A88);
      real r3AAF#1 = RAdd(r3AAE,r3A56);
      real r3AB0#1 = RMul(one3601,r37C3);
      real r3AB1#1 = RMul(coeff3600,r37F5);
      real r3AB2#1 = RAdd(r3A60,r3AB0);
      real r3AB3#1 = RAdd(r3AB2,r3A64);
      real r3AB4#1 = RAdd(r3AB3,r3AB1);
      real r3AB5#1 = RAdd(r3AB4,r3A68);
      real r3AB6#1 = RAdd(r3AB5,r3A91);
      real r3AB7#1 = RAdd(r3AB6,r3A6C);
      real r3AB8#1 = RAdd(r3AB7,r3A93);
      real r3AB9#1 = RAdd(r3AB8,r3A70);
      real realLit3B51#1 = 0.2e1;
      real op1_e3_l_213B50#9 = RMul(realLit3B51,op1_e3_l_193A24);
      real varAcc3B57#1 = VIndex<3,0>(xn3B56);
      real varAcc3B58#1 = VIndex<3,1>(xn3B56);
      real varAcc3B59#1 = VIndex<3,2>(xn3B56);
      real prod3B5E#2 = RMul(varAcc3B57,prod3602);
      real prod3B60#1 = RMul(varAcc3B58,one3601);
      real prod3B61#2 = RMul(one3601,prod3B60);
      real prod3B63#1 = RMul(one3601,varAcc3B59);
      real prod3B64#2 = RMul(one3601,prod3B63);
      real mult3B67#1 = RMul(coeff3600,prod3B64);
      real mult3B68#1 = RMul(coeff3600,prod3B61);
      real mult3B69#1 = RMul(coeff3600,prod3B5E);
      real sum3B6A#1 = RAdd(mult3B68,mult3B69);
      real sum3B6B#1 = RAdd(mult3B67,sum3B6A);
      real sum3B6C#3 = RAdd(basisEval3605,sum3B6B);
      real basisEval3B6E#3 = RMul(one3601,prod3B5E);
      real basisEval3B6F#3 = RMul(one3601,prod3B61);
      real basisEval3B70#3 = RMul(one3601,prod3B64);
      real r3B91#1 = RMul(dof_load35B2,sum3B6C);
      real r3B94#1 = RMul(dof_load35BB,basisEval3B6E);
      real r3B97#1 = RMul(dof_load35C4,basisEval3B6F);
      real r3B9A#1 = RMul(dof_load35CD,basisEval3B70);
      real r3B9B#1 = RAdd(r3B91,r3B94);
      real r3B9C#1 = RAdd(r3B9B,r3B97);
      real r3B9D#1 = RAdd(r3B9C,r3B9A);
      real r3B9F#1 = RMul(dof_load35B3,sum3B6C);
      real r3BA1#1 = RMul(dof_load35BC,basisEval3B6E);
      real r3BA3#1 = RMul(dof_load35C5,basisEval3B6F);
      real r3BA5#1 = RMul(dof_load35CE,basisEval3B70);
      real r3BA6#1 = RAdd(r3B9F,r3BA1);
      real r3BA7#1 = RAdd(r3BA6,r3BA3);
      real r3BA8#1 = RAdd(r3BA7,r3BA5);
      real r3BAA#1 = RMul(dof_load35B4,sum3B6C);
      real r3BAC#1 = RMul(dof_load35BD,basisEval3B6E);
      real r3BAE#1 = RMul(dof_load35C6,basisEval3B6F);
      real r3BB0#1 = RMul(dof_load35CF,basisEval3B70);
      real r3BB1#1 = RAdd(r3BAA,r3BAC);
      real r3BB2#1 = RAdd(r3BB1,r3BAE);
      real r3BB3#1 = RAdd(r3BB2,r3BB0);
      tensor[3] probe_l_223B8E#1 = <tensor[3]>[r3B9D,r3BA8,r3BB3];
      real r3BDD#1 = RDiv(r3A44,op1_e3_l_213B50);
      real r3BDF#1 = RDiv(r3A5E,op1_e3_l_213B50);
      real r3BE1#1 = RDiv(r3A78,op1_e3_l_213B50);
      tensor[3] tensor3BE2#1 = <tensor[3]>[r3BDD,r3BDF,r3BE1];
      real r3BE4#1 = RDiv(r3A84,op1_e3_l_213B50);
      real r3BE6#1 = RDiv(r3A8F,op1_e3_l_213B50);
      real r3BE8#1 = RDiv(r3A9A,op1_e3_l_213B50);
      tensor[3] tensor3BE9#1 = <tensor[3]>[r3BE4,r3BE6,r3BE8];
      real r3BEB#1 = RDiv(r3AA5,op1_e3_l_213B50);
      real r3BED#1 = RDiv(r3AAF,op1_e3_l_213B50);
      real r3BEF#1 = RDiv(r3AB9,op1_e3_l_213B50);
      tensor[3] tensor3BF0#1 = <tensor[3]>[r3BEB,r3BED,r3BEF];
      tensor[3] op1_e3_l_243C08#3 = VSub<3>(probe_l_223B8E,pos3576);
      real vdot3C0D#1 = VDot<3>(tensor3BE2,op1_e3_l_243C08);
      real vdot3C0F#1 = VDot<3>(tensor3BE9,op1_e3_l_243C08);
      real vdot3C11#1 = VDot<3>(tensor3BF0,op1_e3_l_243C08);
      tensor[3] op1_e3_l_253C0B#3 = <tensor[3]>[vdot3C0D,vdot3C0F,vdot3C11];
      tensor[3] xn3C1A#4 = VSub<3>(xn3B56,op1_e3_l_253C0B);
      real _t3C1D#2 = 0.1e-7;
      real _t3C1F#1 = RMul(_t3C1D,_t3C1D);
      real _t3C81#1 = VDot<3>(op1_e3_l_253C0B,op1_e3_l_253C0B);
      bool _t3C84#1 = GTE<real>(_t3C1F,_t3C81);
      if _t3C84 then goto ASSIGN3C8A else goto JOIN3CB3
    ASSIGN3C8A:  preds = [COND3C86]
      real _t3C89#4 = 0.1e-8;
      real _t3C8B#1 = RAdd(one3601,_t3C89);
      tensor[3] _t3C8E#1 = <tensor[3]>[one3601,one3601,one3601];
      real _t3C90#1 = VDot<3>(_t3C8E,xn3C1A);
      bool _t3C93#1 = GT<real>(_t3C8B,_t3C90);
      tensor[3] _t3C95#1 = <tensor[3]>[_t3C89,_t3C89,_t3C89];
      tensor[3] _t3C97#3 = VAdd<3>(_t3C95,xn3C1A);
      real _t3C9A#1 = VIndex<3,0>(_t3C97);
      real _t3C9C#3 = -0.e0;
      bool _t3C9E#1 = GT<real>(_t3C9A,_t3C9C);
      real _t3CA0#1 = VIndex<3,1>(_t3C97);
      bool _t3CA2#1 = GT<real>(_t3CA0,_t3C9C);
      real _t3CA4#1 = VIndex<3,2>(_t3C97);
      bool _t3CA6#1 = GT<real>(_t3CA4,_t3C9C);
      bool _t3CA8#1 = BAnd(_t3CA2,_t3CA6);
      bool _t3CAA#1 = BAnd(_t3C9E,_t3CA8);
      bool _t3CAC#1 = BAnd(_t3C93,_t3CAA);
      if _t3CAC then goto ASSIGN3CB0 else goto JOIN3CB2
    ASSIGN3CB0:  preds = [COND3CAE]
      femData:MeshPos _t3CAF#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3575,cellItter3580,xn3C1A,pos3576);
      return _t3CAF
      goto JOIN3CB2
    JOIN3CB2:  preds = [*RETURN(_t3CAF)3CB1,COND3CAE]
      goto JOIN3CB3
    JOIN3CB3:  preds = [JOIN3CB2,COND3C86]
      goto FOREACH3587
    NEXT3CB5:  preds = [FOREACH3587]
      goto FOREACH3581
    ASSIGN3CB7:  preds = [FOREACH3581]
      string _t3CB6#1 = "Bad end 2";
      string _t3CB8#1 = "\n";
      Print<[string,string]>(_t3CB6,_t3CB8);
      femData:MeshPos _t3CBB#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3575);
      return _t3CBB
}
  function int[2] nextCell44E13 (int faceIdx4E14#1, int cell4E15#1, femData:Mesh mesh4E16#1) {
    ENTRY4E17:  preds = []
      int _t4E18#1 = 8;
      int _t4E1A#1 = IMul(cell4E15,_t4E18);
      int _t4E1C#1 = 2;
      int _t4E1E#1 = IMul(faceIdx4E14,_t4E1C);
      int _t4E20#1 = IAdd(_t4E1A,_t4E1E);
      int[2] _t4E22#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh4E16,_t4E20);
      return _t4E22
}
  function femData:MeshPos posMove40B9 (femData:MeshPos x40BA#6, tensor[3] dPos40BB#4) {
    ENTRY40BC:  preds = []
      femData:Mesh meshData40BD#1 = globals.meshData351F;
      int timeSteps40BF#1 = globals.timeSteps3522;
      real timeEps40C1#1 = globals.timeEps3523;
      bool _t40C3#1 = ExtractFemItem<bool,Valid(MeshPos)>(x40BA);
      bool _t40C5#1 = BNot(_t40C3);
      if _t40C5 then goto RETURN(x40BA)40C8 else goto JOIN40C9
    RETURN(x40BA)40C8:  preds = [COND40C7]
      return x40BA
      goto JOIN40C9
    JOIN40C9:  preds = [*RETURN(x40BA)40C8,COND40C7]
      real time40CA#56 = 0.1e1;
      int _t40CC#6 = 0;
      int[] _t40CE#1 = Range(_t40CC,timeSteps40BF);
    FOREACH40D1:  preds = [ASSIGN40CF,NEXT471F]
      foreach (i40D0 in _t40CE) on exit goto ASSIGN4F6B
        femData:MeshPos cmp40D3#6 = phi(x40BA,cmp471A)
        real time46E9#9 = phi(time40CA,time471C)
      femData:Mesh _t40D2#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp40D3);
      int _t40D5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp40D3);
      femData:MeshCell _t40D7#2 = LoadFem<femData:MeshCell>(_t40D2,_t40D5);
      femData:Mesh _t40D9#17 = ExtractFem<femData:Mesh,femData:MeshCell>(_t40D7);
      int _t40DB#2 = ExtractFemItem<int,CellIndex(MeshCell)>(_t40D7);
      tensor[3] _t40DD#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp40D3);
      int ilit40E0#1 = 4;
      int mulRes40E1#4 = IMul(_t40DB,ilit40E0);
      int idx40E4#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,mulRes40E1);
      int ilit40E5#10 = 1;
      int addRes40E6#1 = IAdd(mulRes40E1,ilit40E5);
      int idx40E7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E6);
      int ilit40E8#9 = 2;
      int addRes40E9#1 = IAdd(mulRes40E1,ilit40E8);
      int idx40EA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E9);
      int ilit40EB#9 = 3;
      int addRes40EC#1 = IAdd(mulRes40E1,ilit40EB);
      int idx40ED#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40EC);
      int mulRes4103#3 = IMul(ilit40EB,idx40E4);
      int addRes4106#1 = IAdd(ilit40E5,mulRes4103);
      int addRes4108#1 = IAdd(ilit40E8,mulRes4103);
      real dof_load4109#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes4103);
      real dof_load410A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4106);
      real dof_load410B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4108);
      int mulRes410E#3 = IMul(ilit40EB,idx40E7);
      int addRes4110#1 = IAdd(ilit40E5,mulRes410E);
      int addRes4111#1 = IAdd(ilit40E8,mulRes410E);
      real dof_load4112#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes410E);
      real dof_load4113#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4110);
      real dof_load4114#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4111);
      int mulRes4117#3 = IMul(ilit40EB,idx40EA);
      int addRes4119#1 = IAdd(ilit40E5,mulRes4117);
      int addRes411A#1 = IAdd(ilit40E8,mulRes4117);
      real dof_load411B#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes4117);
      real dof_load411C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4119);
      real dof_load411D#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes411A);
      int mulRes4120#3 = IMul(ilit40EB,idx40ED);
      int addRes4122#1 = IAdd(ilit40E5,mulRes4120);
      int addRes4123#1 = IAdd(ilit40E8,mulRes4120);
      real dof_load4124#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes4120);
      real dof_load4125#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4122);
      real dof_load4126#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4123);
      real coeff4157#33 = -0.1e1;
      real prod4159#1 = RMul(time40CA,time40CA);
      real prod415A#2 = RMul(time40CA,prod4159);
      real basisEval415B#3 = RMul(coeff4157,prod415A);
      real basisEval415C#9 = RMul(time40CA,prod415A);
      real basisEval415D#95 = 0.e0;
      real r4174#2 = RMul(dof_load4109,basisEval415B);
      real r4177#1 = RMul(dof_load4112,basisEval415C);
      real r417A#2 = RMul(dof_load411B,basisEval415D);
      real r417D#2 = RMul(dof_load4124,basisEval415D);
      real r417E#1 = RAdd(r4174,r4177);
      real r417F#1 = RAdd(r417E,r417A);
      real r4180#13 = RAdd(r417F,r417D);
      real r4184#1 = RMul(dof_load4112,basisEval415D);
      real r4186#1 = RMul(dof_load411B,basisEval415C);
      real r4189#2 = RAdd(r4174,r4184);
      real r418A#1 = RAdd(r4189,r4186);
      real r418B#13 = RAdd(r418A,r417D);
      real r4193#1 = RMul(dof_load4124,basisEval415C);
      real r4195#1 = RAdd(r4189,r417A);
      real r4196#12 = RAdd(r4195,r4193);
      real r4199#2 = RMul(dof_load410A,basisEval415B);
      real r419B#1 = RMul(dof_load4113,basisEval415C);
      real r419D#2 = RMul(dof_load411C,basisEval415D);
      real r419F#2 = RMul(dof_load4125,basisEval415D);
      real r41A0#1 = RAdd(r4199,r419B);
      real r41A1#1 = RAdd(r41A0,r419D);
      real r41A2#13 = RAdd(r41A1,r419F);
      real r41A4#1 = RMul(dof_load4113,basisEval415D);
      real r41A5#1 = RMul(dof_load411C,basisEval415C);
      real r41A7#2 = RAdd(r4199,r41A4);
      real r41A8#1 = RAdd(r41A7,r41A5);
      real r41A9#13 = RAdd(r41A8,r419F);
      real r41AD#1 = RMul(dof_load4125,basisEval415C);
      real r41AF#1 = RAdd(r41A7,r419D);
      real r41B0#12 = RAdd(r41AF,r41AD);
      real r41B3#2 = RMul(dof_load410B,basisEval415B);
      real r41B5#1 = RMul(dof_load4114,basisEval415C);
      real r41B7#2 = RMul(dof_load411D,basisEval415D);
      real r41B9#2 = RMul(dof_load4126,basisEval415D);
      real r41BA#1 = RAdd(r41B3,r41B5);
      real r41BB#1 = RAdd(r41BA,r41B7);
      real r41BC#13 = RAdd(r41BB,r41B9);
      real r41BE#1 = RMul(dof_load4114,basisEval415D);
      real r41BF#1 = RMul(dof_load411D,basisEval415C);
      real r41C1#2 = RAdd(r41B3,r41BE);
      real r41C2#1 = RAdd(r41C1,r41BF);
      real r41C3#13 = RAdd(r41C2,r41B9);
      real r41C7#1 = RMul(dof_load4126,basisEval415C);
      real r41C9#1 = RAdd(r41C1,r41B7);
      real r41CA#12 = RAdd(r41C9,r41C7);
      real r422B#3 = RMul(basisEval415D,r4180);
      real r422D#3 = RMul(basisEval415D,r41A2);
      real r422F#5 = RMul(basisEval415D,r41BC);
      real r4230#3 = RAdd(r422B,r422D);
      real r4231#9 = RAdd(r4230,r422F);
      real r4233#3 = RMul(basisEval415D,r418B);
      real r4235#3 = RMul(basisEval415D,r41A9);
      real r4237#5 = RMul(basisEval415D,r41C3);
      real r4238#3 = RAdd(r4233,r4235);
      real r4239#9 = RAdd(r4238,r4237);
      real r423B#3 = RMul(basisEval415D,r4196);
      real r423D#3 = RMul(basisEval415D,r41B0);
      real r423F#5 = RMul(basisEval415D,r41CA);
      real r4240#3 = RAdd(r423B,r423D);
      real r4241#12 = RAdd(r4240,r423F);
      real r4244#1 = RMul(coeff4157,r41BC);
      real r4245#3 = RAdd(r4230,r4244);
      real r4246#1 = RMul(coeff4157,r41C3);
      real r4247#3 = RAdd(r4238,r4246);
      real r4248#1 = RMul(coeff4157,r41CA);
      real r4249#4 = RAdd(r4240,r4248);
      real r424C#1 = RMul(time40CA,r41A2);
      real r424D#1 = RAdd(r422B,r424C);
      real r424E#3 = RAdd(r424D,r422F);
      real r424F#1 = RMul(time40CA,r41A9);
      real r4250#1 = RAdd(r4233,r424F);
      real r4251#3 = RAdd(r4250,r4237);
      real r4252#1 = RMul(time40CA,r41B0);
      real r4253#1 = RAdd(r423B,r4252);
      real r4254#4 = RAdd(r4253,r423F);
      real r4257#1 = RMul(time40CA,r41BC);
      real r4258#3 = RAdd(r4230,r4257);
      real r4259#1 = RMul(time40CA,r41C3);
      real r425A#3 = RAdd(r4238,r4259);
      real r425B#1 = RMul(time40CA,r41CA);
      real r425C#4 = RAdd(r4240,r425B);
      real r425E#1 = RMul(coeff4157,r4180);
      real r425F#1 = RAdd(r425E,r422D);
      real r4260#3 = RAdd(r425F,r422F);
      real r4261#1 = RMul(coeff4157,r418B);
      real r4262#1 = RAdd(r4261,r4235);
      real r4263#3 = RAdd(r4262,r4237);
      real r4264#1 = RMul(coeff4157,r4196);
      real r4265#1 = RAdd(r4264,r423D);
      real r4266#4 = RAdd(r4265,r423F);
      real r4269#1 = RMul(coeff4157,r41A2);
      real r426A#1 = RAdd(r422B,r4269);
      real r426B#3 = RAdd(r426A,r422F);
      real r426C#1 = RMul(coeff4157,r41A9);
      real r426D#1 = RAdd(r4233,r426C);
      real r426E#3 = RAdd(r426D,r4237);
      real r426F#1 = RMul(coeff4157,r41B0);
      real r4270#1 = RAdd(r423B,r426F);
      real r4271#4 = RAdd(r4270,r423F);
      real r4273#1 = RMul(time40CA,r4180);
      real r4274#1 = RAdd(r4273,r422D);
      real r4275#3 = RAdd(r4274,r422F);
      real r4276#1 = RMul(time40CA,r418B);
      real r4277#1 = RAdd(r4276,r4235);
      real r4278#3 = RAdd(r4277,r4237);
      real r4279#1 = RMul(time40CA,r4196);
      real r427A#1 = RAdd(r4279,r423D);
      real r427B#4 = RAdd(r427A,r423F);
      real r42D8#1 = RMul(r4180,r4231);
      real r42DB#1 = RMul(r41A2,r4258);
      real r42DE#1 = RMul(r41BC,r426B);
      real r42DF#1 = RAdd(r42D8,r42DB);
      real r42E0#1 = RAdd(r42DF,r42DE);
      real r42E2#1 = RMul(r4180,r4239);
      real r42E4#1 = RMul(r41A2,r425A);
      real r42E6#1 = RMul(r41BC,r426E);
      real r42E7#1 = RAdd(r42E2,r42E4);
      real r42E8#2 = RAdd(r42E7,r42E6);
      real r42EA#1 = RMul(r4180,r4241);
      real r42EC#1 = RMul(r41A2,r425C);
      real r42EE#1 = RMul(r41BC,r4271);
      real r42EF#1 = RAdd(r42EA,r42EC);
      real r42F0#2 = RAdd(r42EF,r42EE);
      real r42F3#1 = RMul(r4180,r4245);
      real r42F5#1 = RMul(r41A2,r4231);
      real r42F7#1 = RMul(r41BC,r4275);
      real r42F8#1 = RAdd(r42F3,r42F5);
      real r42F9#1 = RAdd(r42F8,r42F7);
      real r42FB#1 = RMul(r4180,r4247);
      real r42FD#1 = RMul(r41A2,r4239);
      real r42FF#1 = RMul(r41BC,r4278);
      real r4300#1 = RAdd(r42FB,r42FD);
      real r4301#2 = RAdd(r4300,r42FF);
      real r4303#1 = RMul(r4180,r4249);
      real r4305#1 = RMul(r41A2,r4241);
      real r4307#1 = RMul(r41BC,r427B);
      real r4308#1 = RAdd(r4303,r4305);
      real r4309#2 = RAdd(r4308,r4307);
      real r430C#1 = RMul(r4180,r424E);
      real r430E#1 = RMul(r41A2,r4260);
      real r4310#1 = RMul(r41BC,r4231);
      real r4311#1 = RAdd(r430C,r430E);
      real r4312#1 = RAdd(r4311,r4310);
      real r4314#1 = RMul(r4180,r4251);
      real r4316#1 = RMul(r41A2,r4263);
      real r4318#1 = RMul(r41BC,r4239);
      real r4319#1 = RAdd(r4314,r4316);
      real r431A#2 = RAdd(r4319,r4318);
      real r431C#1 = RMul(r4180,r4254);
      real r431E#1 = RMul(r41A2,r4266);
      real r4320#1 = RMul(r41BC,r4241);
      real r4321#1 = RAdd(r431C,r431E);
      real r4322#2 = RAdd(r4321,r4320);
      real r4326#1 = RMul(r418B,r4231);
      real r4328#1 = RMul(r41A9,r4258);
      real r432A#1 = RMul(r41C3,r426B);
      real r432B#1 = RAdd(r4326,r4328);
      real r432C#2 = RAdd(r432B,r432A);
      real r432D#1 = RMul(r418B,r4239);
      real r432E#1 = RMul(r41A9,r425A);
      real r432F#1 = RMul(r41C3,r426E);
      real r4330#1 = RAdd(r432D,r432E);
      real r4331#1 = RAdd(r4330,r432F);
      real r4332#1 = RMul(r418B,r4241);
      real r4333#1 = RMul(r41A9,r425C);
      real r4334#1 = RMul(r41C3,r4271);
      real r4335#1 = RAdd(r4332,r4333);
      real r4336#2 = RAdd(r4335,r4334);
      real r4338#1 = RMul(r418B,r4245);
      real r4339#1 = RMul(r41A9,r4231);
      real r433A#1 = RMul(r41C3,r4275);
      real r433B#1 = RAdd(r4338,r4339);
      real r433C#2 = RAdd(r433B,r433A);
      real r433D#1 = RMul(r418B,r4247);
      real r433E#1 = RMul(r41A9,r4239);
      real r433F#1 = RMul(r41C3,r4278);
      real r4340#1 = RAdd(r433D,r433E);
      real r4341#1 = RAdd(r4340,r433F);
      real r4342#1 = RMul(r418B,r4249);
      real r4343#1 = RMul(r41A9,r4241);
      real r4344#1 = RMul(r41C3,r427B);
      real r4345#1 = RAdd(r4342,r4343);
      real r4346#2 = RAdd(r4345,r4344);
      real r4348#1 = RMul(r418B,r424E);
      real r4349#1 = RMul(r41A9,r4260);
      real r434A#1 = RMul(r41C3,r4231);
      real r434B#1 = RAdd(r4348,r4349);
      real r434C#2 = RAdd(r434B,r434A);
      real r434D#1 = RMul(r418B,r4251);
      real r434E#1 = RMul(r41A9,r4263);
      real r434F#1 = RMul(r41C3,r4239);
      real r4350#1 = RAdd(r434D,r434E);
      real r4351#1 = RAdd(r4350,r434F);
      real r4352#1 = RMul(r418B,r4254);
      real r4353#1 = RMul(r41A9,r4266);
      real r4354#1 = RMul(r41C3,r4241);
      real r4355#1 = RAdd(r4352,r4353);
      real r4356#2 = RAdd(r4355,r4354);
      real r435A#1 = RMul(r4196,r4231);
      real r435C#1 = RMul(r41B0,r4258);
      real r435E#1 = RMul(r41CA,r426B);
      real r435F#1 = RAdd(r435A,r435C);
      real r4360#2 = RAdd(r435F,r435E);
      real r4361#1 = RMul(r4196,r4239);
      real r4362#1 = RMul(r41B0,r425A);
      real r4363#1 = RMul(r41CA,r426E);
      real r4364#1 = RAdd(r4361,r4362);
      real r4365#2 = RAdd(r4364,r4363);
      real r4366#1 = RMul(r4196,r4241);
      real r4367#1 = RMul(r41B0,r425C);
      real r4368#1 = RMul(r41CA,r4271);
      real r4369#1 = RAdd(r4366,r4367);
      real r436A#1 = RAdd(r4369,r4368);
      real r436C#1 = RMul(r4196,r4245);
      real r436D#1 = RMul(r41B0,r4231);
      real r436E#1 = RMul(r41CA,r4275);
      real r436F#1 = RAdd(r436C,r436D);
      real r4370#2 = RAdd(r436F,r436E);
      real r4371#1 = RMul(r4196,r4247);
      real r4372#1 = RMul(r41B0,r4239);
      real r4373#1 = RMul(r41CA,r4278);
      real r4374#1 = RAdd(r4371,r4372);
      real r4375#2 = RAdd(r4374,r4373);
      real r4376#1 = RMul(r4196,r4249);
      real r4377#1 = RMul(r41B0,r4241);
      real r4378#1 = RMul(r41CA,r427B);
      real r4379#1 = RAdd(r4376,r4377);
      real r437A#1 = RAdd(r4379,r4378);
      real r437C#1 = RMul(r4196,r424E);
      real r437D#1 = RMul(r41B0,r4260);
      real r437E#1 = RMul(r41CA,r4231);
      real r437F#1 = RAdd(r437C,r437D);
      real r4380#2 = RAdd(r437F,r437E);
      real r4381#1 = RMul(r4196,r4251);
      real r4382#1 = RMul(r41B0,r4263);
      real r4383#1 = RMul(r41CA,r4239);
      real r4384#1 = RAdd(r4381,r4382);
      real r4385#2 = RAdd(r4384,r4383);
      real r4386#1 = RMul(r4196,r4254);
      real r4387#1 = RMul(r41B0,r4266);
      real r4388#1 = RMul(r41CA,r4241);
      real r4389#1 = RAdd(r4386,r4387);
      real r438A#1 = RAdd(r4389,r4388);
      tensor[3] probe_l_114446#1 = <tensor[3]>[r4180,r41A2,r41BC];
      tensor[3] probe_l_124493#3 = <tensor[3]>[r418B,r41A9,r41C3];
      tensor[3] tensor453E#1 = <tensor[3]>[r4241,r425C,r4271];
      tensor[3] tensor4544#1 = <tensor[3]>[r4249,r4241,r427B];
      tensor[3] tensor454B#1 = <tensor[3]>[r4254,r4266,r4241];
      real vdot456E#1 = VDot<3>(probe_l_124493,tensor453E);
      real vdot4570#1 = VDot<3>(probe_l_124493,tensor4544);
      real vdot4572#1 = VDot<3>(probe_l_124493,tensor454B);
      tensor[3] op1_e3_l_15456C#1 = <tensor[3]>[vdot456E,vdot4570,vdot4572];
      real op1_e3_l_16457B#1 = VDot<3>(probe_l_114446,op1_e3_l_15456C);
      real r4581#2 = RMul(basisEval415D,r42E0);
      real r4583#1 = RMul(basisEval415D,r42E8);
      real r4585#2 = RMul(basisEval415D,r42F0);
      real r4587#2 = RMul(basisEval415D,r432C);
      real r4589#3 = RMul(basisEval415D,r4331);
      real r458C#1 = RMul(time40CA,r4336);
      real r458E#2 = RMul(basisEval415D,r4360);
      real r4591#1 = RMul(coeff4157,r4365);
      real r4593#3 = RMul(basisEval415D,r436A);
      real r4594#2 = RAdd(r4581,r4583);
      real r4595#1 = RAdd(r4594,r4585);
      real r4596#1 = RAdd(r4595,r4587);
      real r4597#1 = RAdd(r4596,r4589);
      real r4598#1 = RAdd(r4597,r458C);
      real r4599#1 = RAdd(r4598,r458E);
      real r459A#1 = RAdd(r4599,r4591);
      real r459B#1 = RAdd(r459A,r4593);
      real r459D#2 = RMul(basisEval415D,r42F9);
      real r459F#1 = RMul(basisEval415D,r4301);
      real r45A1#2 = RMul(basisEval415D,r4309);
      real r45A3#2 = RMul(basisEval415D,r433C);
      real r45A5#3 = RMul(basisEval415D,r4341);
      real r45A7#1 = RMul(time40CA,r4346);
      real r45A9#2 = RMul(basisEval415D,r4370);
      real r45AB#1 = RMul(coeff4157,r4375);
      real r45AD#3 = RMul(basisEval415D,r437A);
      real r45AE#2 = RAdd(r459D,r459F);
      real r45AF#1 = RAdd(r45AE,r45A1);
      real r45B0#1 = RAdd(r45AF,r45A3);
      real r45B1#1 = RAdd(r45B0,r45A5);
      real r45B2#1 = RAdd(r45B1,r45A7);
      real r45B3#1 = RAdd(r45B2,r45A9);
      real r45B4#1 = RAdd(r45B3,r45AB);
      real r45B5#1 = RAdd(r45B4,r45AD);
      real r45B7#2 = RMul(basisEval415D,r4312);
      real r45B9#1 = RMul(basisEval415D,r431A);
      real r45BB#2 = RMul(basisEval415D,r4322);
      real r45BD#2 = RMul(basisEval415D,r434C);
      real r45BF#3 = RMul(basisEval415D,r4351);
      real r45C1#1 = RMul(time40CA,r4356);
      real r45C3#2 = RMul(basisEval415D,r4380);
      real r45C5#1 = RMul(coeff4157,r4385);
      real r45C7#3 = RMul(basisEval415D,r438A);
      real r45C8#2 = RAdd(r45B7,r45B9);
      real r45C9#1 = RAdd(r45C8,r45BB);
      real r45CA#1 = RAdd(r45C9,r45BD);
      real r45CB#1 = RAdd(r45CA,r45BF);
      real r45CC#1 = RAdd(r45CB,r45C1);
      real r45CD#1 = RAdd(r45CC,r45C3);
      real r45CE#1 = RAdd(r45CD,r45C5);
      real r45CF#1 = RAdd(r45CE,r45C7);
      real r45D1#1 = RMul(coeff4157,r42F0);
      real r45D2#2 = RMul(basisEval415D,r4336);
      real r45D3#1 = RMul(time40CA,r4360);
      real r45D4#2 = RMul(basisEval415D,r4365);
      real r45D5#1 = RAdd(r4594,r45D1);
      real r45D6#1 = RAdd(r45D5,r4587);
      real r45D7#1 = RAdd(r45D6,r4589);
      real r45D8#1 = RAdd(r45D7,r45D2);
      real r45D9#1 = RAdd(r45D8,r45D3);
      real r45DA#1 = RAdd(r45D9,r45D4);
      real r45DB#1 = RAdd(r45DA,r4593);
      real r45DC#1 = RMul(coeff4157,r4309);
      real r45DD#2 = RMul(basisEval415D,r4346);
      real r45DE#1 = RMul(time40CA,r4370);
      real r45DF#2 = RMul(basisEval415D,r4375);
      real r45E0#1 = RAdd(r45AE,r45DC);
      real r45E1#1 = RAdd(r45E0,r45A3);
      real r45E2#1 = RAdd(r45E1,r45A5);
      real r45E3#1 = RAdd(r45E2,r45DD);
      real r45E4#1 = RAdd(r45E3,r45DE);
      real r45E5#1 = RAdd(r45E4,r45DF);
      real r45E6#1 = RAdd(r45E5,r45AD);
      real r45E7#1 = RMul(coeff4157,r4322);
      real r45E8#2 = RMul(basisEval415D,r4356);
      real r45E9#1 = RMul(time40CA,r4380);
      real r45EA#2 = RMul(basisEval415D,r4385);
      real r45EB#1 = RAdd(r45C8,r45E7);
      real r45EC#1 = RAdd(r45EB,r45BD);
      real r45ED#1 = RAdd(r45EC,r45BF);
      real r45EE#1 = RAdd(r45ED,r45E8);
      real r45EF#1 = RAdd(r45EE,r45E9);
      real r45F0#1 = RAdd(r45EF,r45EA);
      real r45F1#1 = RAdd(r45F0,r45C7);
      real r45F3#1 = RMul(time40CA,r42E8);
      real r45F4#1 = RMul(coeff4157,r432C);
      real r45F5#1 = RAdd(r4581,r45F3);
      real r45F6#1 = RAdd(r45F5,r4585);
      real r45F7#1 = RAdd(r45F6,r45F4);
      real r45F8#1 = RAdd(r45F7,r4589);
      real r45F9#1 = RAdd(r45F8,r45D2);
      real r45FA#1 = RAdd(r45F9,r458E);
      real r45FB#1 = RAdd(r45FA,r45D4);
      real r45FC#1 = RAdd(r45FB,r4593);
      real r45FD#1 = RMul(time40CA,r4301);
      real r45FE#1 = RMul(coeff4157,r433C);
      real r45FF#1 = RAdd(r459D,r45FD);
      real r4600#1 = RAdd(r45FF,r45A1);
      real r4601#1 = RAdd(r4600,r45FE);
      real r4602#1 = RAdd(r4601,r45A5);
      real r4603#1 = RAdd(r4602,r45DD);
      real r4604#1 = RAdd(r4603,r45A9);
      real r4605#1 = RAdd(r4604,r45DF);
      real r4606#1 = RAdd(r4605,r45AD);
      real r4607#1 = RMul(time40CA,r431A);
      real r4608#1 = RMul(coeff4157,r434C);
      real r4609#1 = RAdd(r45B7,r4607);
      real r460A#1 = RAdd(r4609,r45BB);
      real r460B#1 = RAdd(r460A,r4608);
      real r460C#1 = RAdd(r460B,r45BF);
      real r460D#1 = RAdd(r460C,r45E8);
      real r460E#1 = RAdd(r460D,r45C3);
      real r460F#1 = RAdd(r460E,r45EA);
      real r4610#1 = RAdd(r460F,r45C7);
      real realLit46A8#1 = 0.2e1;
      real op1_e3_l_1846A7#9 = RMul(realLit46A8,op1_e3_l_16457B);
      real r46AE#1 = RDiv(r459B,op1_e3_l_1846A7);
      real r46B0#1 = RDiv(r45B5,op1_e3_l_1846A7);
      real r46B2#1 = RDiv(r45CF,op1_e3_l_1846A7);
      tensor[3] tensor46B3#1 = <tensor[3]>[r46AE,r46B0,r46B2];
      real r46B5#1 = RDiv(r45DB,op1_e3_l_1846A7);
      real r46B7#1 = RDiv(r45E6,op1_e3_l_1846A7);
      real r46B9#1 = RDiv(r45F1,op1_e3_l_1846A7);
      tensor[3] tensor46BA#1 = <tensor[3]>[r46B5,r46B7,r46B9];
      real r46BC#1 = RDiv(r45FC,op1_e3_l_1846A7);
      real r46BE#1 = RDiv(r4606,op1_e3_l_1846A7);
      real r46C0#1 = RDiv(r4610,op1_e3_l_1846A7);
      tensor[3] tensor46C1#1 = <tensor[3]>[r46BC,r46BE,r46C0];
      real vdot46DB#3 = VDot<3>(tensor46B3,dPos40BB);
      real vdot46DD#3 = VDot<3>(tensor46BA,dPos40BB);
      real vdot46DF#3 = VDot<3>(tensor46C1,dPos40BB);
      tensor[3] op1_e3_l_2046D9#5 = <tensor[3]>[vdot46DB,vdot46DD,vdot46DF];
      tensor[3] op1_e3_l_2146E8#2 = VScale<3>(time46E9,op1_e3_l_2046D9);
      tensor[3] newPos46EC#2 = VAdd<3>(_t40DD,op1_e3_l_2146E8);
      real _t46EF#4 = 0.1e-8;
      real _t46F1#1 = RAdd(time40CA,_t46EF);
      tensor[3] _t46F4#1 = <tensor[3]>[time40CA,time40CA,time40CA];
      real _t46F6#1 = VDot<3>(_t46F4,newPos46EC);
      bool _t46F9#1 = GT<real>(_t46F1,_t46F6);
      tensor[3] _t46FB#1 = <tensor[3]>[_t46EF,_t46EF,_t46EF];
      tensor[3] v46FE#1 = VAdd<3>(_t46FB,_t40DD);
      tensor[3] _t46FD#3 = VAdd<3>(v46FE,op1_e3_l_2146E8);
      real _t4702#1 = VIndex<3,0>(_t46FD);
      real _t4704#3 = -0.e0;
      bool _t4706#1 = GT<real>(_t4702,_t4704);
      real _t4708#1 = VIndex<3,1>(_t46FD);
      bool _t470A#1 = GT<real>(_t4708,_t4704);
      real _t470C#1 = VIndex<3,2>(_t46FD);
      bool _t470E#1 = GT<real>(_t470C,_t4704);
      bool _t4710#1 = BAnd(_t470A,_t470E);
      bool _t4712#1 = BAnd(_t4706,_t4710);
      bool _t4714#1 = BAnd(_t46F9,_t4712);
      if _t4714 then goto ASSIGN4718 else goto ASSIGN4721
    ASSIGN4718:  preds = [COND4716]
      femData:MeshPos nmp4717#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t40D9,_t40DB,newPos46EC);
      return nmp4717
      goto JOIN471E
    JOIN471E:  preds = [*RETURN(nmp4717)4719,JOIN4F2F]
      femData:MeshPos cmp471A#1 = phi(nmp471B)
      real time471C#1 = phi(time471D)
      goto FOREACH40D1
    ASSIGN4721:  preds = [COND4716]
      int _t4720#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp40D3);
      real time4722#6 = +inf;
      int face4724#7 = -1;
      real faceTime4726#6 = -inf;
      real _t4728#15 = 0.57735026919e0;
      tensor[3] _t472A#3 = <tensor[3]>[_t4728,_t4728,_t4728];
      real op1_e3_l_10472C#1 = VDot<3>(_t472A,_t40DD);
      real op1_e3_l_25472F#1 = VDot<3>(_t472A,op1_e3_l_2046D9);
      real op1_e3_l_264732#1 = RSub(_t4728,op1_e3_l_10472C);
      real op1_e3_l_274735#3 = RMul(time46E9,op1_e3_l_25472F);
      real _t4738#4 = RDiv(op1_e3_l_264732,op1_e3_l_274735);
      real _t473B#8 = -0.1e-15;
      bool _t473D#1 = GTE<real>(_t4738,_t473B);
      bool _t473F#1 = GT<real>(time4722,_t4738);
      real _t4CBE#1 = Abs<real>(op1_e3_l_274735);
      real _t4CC1#4 = 0.1e-20;
      bool _t4CC3#2 = GTE<real>(_t4CBE,_t4CC1);
      bool _t4CC5#1 = BAnd(_t473F,_t4CC3);
      bool _t4CC7#1 = BAnd(_t473D,_t4CC5);
      if _t4CC7 then goto ASSIGN4CCB else goto JOIN4CD4
    ASSIGN4CCB:  preds = [COND4CC9]
      bool _t4CCA#1 = NEQ<int>(_t4720,_t40CC);
      if _t4CCA then goto JOIN4CD0 else goto JOIN4CD0
    JOIN4CD0:  preds = [COND4CCC,COND4CCC]
      real faceTime4CCD#1 = phi(faceTime4726,_t4738)
      int face4CCE#1 = phi(_t40CC,face4724)
      real time4CCF#1 = phi(_t4738,time4722)
      goto JOIN4CD4
    JOIN4CD4:  preds = [JOIN4CD0,COND4CC9]
      real faceTime4CD1#2 = phi(faceTime4CCD,faceTime4726)
      int face4CD2#2 = phi(face4CCE,face4724)
      real time4CD3#3 = phi(time4CCF,time4722)
      tensor[3] _t4CD7#3 = <tensor[3]>[time40CA,basisEval415D,basisEval415D];
      real op1_e3_l_104CD9#1 = VDot<3>(_t4CD7,_t40DD);
      real op1_e3_l_254CDC#1 = VDot<3>(_t4CD7,op1_e3_l_2046D9);
      real op1_e3_l_264CDF#1 = RSub(basisEval415D,op1_e3_l_104CD9);
      real op1_e3_l_274CE2#3 = RMul(time46E9,op1_e3_l_254CDC);
      real _t4CE5#4 = RDiv(op1_e3_l_264CDF,op1_e3_l_274CE2);
      bool _t4CE8#1 = GTE<real>(_t4CE5,_t473B);
      bool _t4CEA#1 = GT<real>(time4CD3,_t4CE5);
      real _t4CF2#1 = Abs<real>(op1_e3_l_274CE2);
      bool _t4CF5#2 = GTE<real>(_t4CF2,_t4CC1);
      bool _t4CF7#1 = BAnd(_t4CEA,_t4CF5);
      bool _t4CF9#1 = BAnd(_t4CE8,_t4CF7);
      if _t4CF9 then goto ASSIGN5F32 else goto JOIN4D08
    ASSIGN5F32:  preds = [COND4CFB]
      bool _t4CFE#1 = NEQ<int>(_t4720,ilit40E5);
      if _t4CFE then goto JOIN4D04 else goto JOIN4D04
    JOIN4D04:  preds = [COND4D00,COND4D00]
      real faceTime4D01#1 = phi(faceTime4CD1,_t4CE5)
      int face4D02#1 = phi(ilit40E5,face4CD2)
      real time4D03#1 = phi(_t4CE5,time4CD3)
      goto JOIN4D08
    JOIN4D08:  preds = [JOIN4D04,COND4CFB]
      real faceTime4D05#2 = phi(faceTime4D01,faceTime4CD1)
      int face4D06#2 = phi(face4D02,face4CD2)
      real time4D07#3 = phi(time4D03,time4CD3)
      tensor[3] _t4D0B#3 = <tensor[3]>[basisEval415D,coeff4157,basisEval415D];
      real op1_e3_l_104D0D#1 = VDot<3>(_t4D0B,_t40DD);
      real op1_e3_l_254D10#1 = VDot<3>(_t4D0B,op1_e3_l_2046D9);
      real op1_e3_l_264D13#1 = RSub(basisEval415D,op1_e3_l_104D0D);
      real op1_e3_l_274D16#3 = RMul(time46E9,op1_e3_l_254D10);
      real _t4D19#4 = RDiv(op1_e3_l_264D13,op1_e3_l_274D16);
      bool _t4D1C#1 = GTE<real>(_t4D19,_t473B);
      bool _t4D1E#1 = GT<real>(time4D07,_t4D19);
      real _t4D26#1 = Abs<real>(op1_e3_l_274D16);
      bool _t4D29#2 = GTE<real>(_t4D26,_t4CC1);
      bool _t4D2B#1 = BAnd(_t4D1E,_t4D29);
      bool _t4D2D#1 = BAnd(_t4D1C,_t4D2B);
      if _t4D2D then goto ASSIGN5F36 else goto JOIN4D3C
    ASSIGN5F36:  preds = [COND4D2F]
      bool _t4D32#1 = NEQ<int>(_t4720,ilit40E8);
      if _t4D32 then goto JOIN4D38 else goto JOIN4D38
    JOIN4D38:  preds = [COND4D34,COND4D34]
      real faceTime4D35#1 = phi(faceTime4D05,_t4D19)
      int face4D36#1 = phi(ilit40E8,face4D06)
      real time4D37#1 = phi(_t4D19,time4D07)
      goto JOIN4D3C
    JOIN4D3C:  preds = [JOIN4D38,COND4D2F]
      real faceTime4D39#2 = phi(faceTime4D35,faceTime4D05)
      int face4D3A#2 = phi(face4D36,face4D06)
      real time4D3B#3 = phi(time4D37,time4D07)
      tensor[3] _t4D3D#3 = <tensor[3]>[basisEval415D,basisEval415D,time40CA];
      real op1_e3_l_104D3F#1 = VDot<3>(_t4D3D,_t40DD);
      real op1_e3_l_254D42#1 = VDot<3>(_t4D3D,op1_e3_l_2046D9);
      real op1_e3_l_264D45#1 = RSub(basisEval415D,op1_e3_l_104D3F);
      real op1_e3_l_274D48#3 = RMul(time46E9,op1_e3_l_254D42);
      real _t4D4B#4 = RDiv(op1_e3_l_264D45,op1_e3_l_274D48);
      bool _t4D4E#1 = GTE<real>(_t4D4B,_t473B);
      bool _t4D50#1 = GT<real>(time4D3B,_t4D4B);
      real _t4D58#1 = Abs<real>(op1_e3_l_274D48);
      bool _t4D5B#2 = GTE<real>(_t4D58,_t4CC1);
      bool _t4D5D#1 = BAnd(_t4D50,_t4D5B);
      bool _t4D5F#1 = BAnd(_t4D4E,_t4D5D);
      if _t4D5F then goto ASSIGN5F3A else goto JOIN4D6E
    ASSIGN5F3A:  preds = [COND4D61]
      bool _t4D64#1 = NEQ<int>(_t4720,ilit40EB);
      if _t4D64 then goto JOIN4D6A else goto JOIN4D6A
    JOIN4D6A:  preds = [COND4D66,COND4D66]
      real faceTime4D67#1 = phi(faceTime4D39,_t4D4B)
      int face4D68#1 = phi(ilit40EB,face4D3A)
      real time4D69#1 = phi(_t4D4B,time4D3B)
      goto JOIN4D6E
    JOIN4D6E:  preds = [JOIN4D6A,COND4D61]
      real faceTime4D6B#2 = phi(faceTime4D67,faceTime4D39)
      int face4D6C#2 = phi(face4D68,face4D3A)
      real time4D6D#1 = phi(time4D69,time4D3B)
      bool _t4D6F#1 = NEQ<int>(face4D6C,face4724);
      if _t4D6F then goto ASSIGN5F3C else goto ASSIGN4F61
    ASSIGN5F3C:  preds = [COND4D71]
      real _t4D72#1 = Max<real>(time4D6D,basisEval415D);
      real _t4D74#1 = IntToReal(face4D6C);
      tensor[2] _t4D76#1 = <tensor[2]>[_t4D72,_t4D74];
      goto JOIN4D7A
    JOIN4D7A:  preds = [ASSIGN4D77,JOIN4F66]
      tensor[2] _t4D78#1 = phi(_t4D76,_t4D79)
      real eTime4D7B#3 = VIndex<2,0>(_t4D78);
      real op1_e3_l_34D7D#1 = RMul(time46E9,eTime4D7B);
      real time471D#2 = RSub(time46E9,op1_e3_l_34D7D);
      int _t4D82#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp40D3);
      tensor[3] _t4D84#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp40D3);
      real op1_e3_l_104D86#1 = VDot<3>(_t472A,_t4D84);
      real op1_e3_l_264D89#1 = RSub(_t4728,op1_e3_l_104D86);
      real _t4D8C#4 = RDiv(op1_e3_l_264D89,op1_e3_l_274735);
      bool _t4D8F#1 = GTE<real>(_t4D8C,_t473B);
      bool _t4D91#1 = GT<real>(time4722,_t4D8C);
      bool _t4D93#1 = BAnd(_t4D91,_t4CC3);
      bool _t4D95#1 = BAnd(_t4D8F,_t4D93);
      if _t4D95 then goto ASSIGN4D99 else goto JOIN4DA2
    ASSIGN4D99:  preds = [COND4D97]
      bool _t4D98#1 = NEQ<int>(_t4720,_t40CC);
      if _t4D98 then goto JOIN4D9E else goto JOIN4D9E
    JOIN4D9E:  preds = [COND4D9A,COND4D9A]
      real faceTime4D9B#1 = phi(faceTime4726,_t4D8C)
      int face4D9C#1 = phi(_t40CC,face4724)
      real time4D9D#1 = phi(_t4D8C,time4722)
      goto JOIN4DA2
    JOIN4DA2:  preds = [JOIN4D9E,COND4D97]
      real faceTime4D9F#2 = phi(faceTime4D9B,faceTime4726)
      int face4DA0#2 = phi(face4D9C,face4724)
      real time4DA1#3 = phi(time4D9D,time4722)
      real op1_e3_l_104DA3#1 = VDot<3>(_t4CD7,_t4D84);
      real op1_e3_l_264DA6#1 = RSub(basisEval415D,op1_e3_l_104DA3);
      real _t4DA9#4 = RDiv(op1_e3_l_264DA6,op1_e3_l_274CE2);
      bool _t4DAC#1 = GTE<real>(_t4DA9,_t473B);
      bool _t4DAE#1 = GT<real>(time4DA1,_t4DA9);
      bool _t4DB0#1 = BAnd(_t4DAE,_t4CF5);
      bool _t4DB2#1 = BAnd(_t4DAC,_t4DB0);
      if _t4DB2 then goto ASSIGN5F40 else goto JOIN4DC1
    ASSIGN5F40:  preds = [COND4DB4]
      bool _t4DB7#1 = NEQ<int>(_t4720,ilit40E5);
      if _t4DB7 then goto JOIN4DBD else goto JOIN4DBD
    JOIN4DBD:  preds = [COND4DB9,COND4DB9]
      real faceTime4DBA#1 = phi(faceTime4D9F,_t4DA9)
      int face4DBB#1 = phi(ilit40E5,face4DA0)
      real time4DBC#1 = phi(_t4DA9,time4DA1)
      goto JOIN4DC1
    JOIN4DC1:  preds = [JOIN4DBD,COND4DB4]
      real faceTime4DBE#2 = phi(faceTime4DBA,faceTime4D9F)
      int face4DBF#2 = phi(face4DBB,face4DA0)
      real time4DC0#3 = phi(time4DBC,time4DA1)
      real op1_e3_l_104DC2#1 = VDot<3>(_t4D0B,_t4D84);
      real op1_e3_l_264DC5#1 = RSub(basisEval415D,op1_e3_l_104DC2);
      real _t4DC8#4 = RDiv(op1_e3_l_264DC5,op1_e3_l_274D16);
      bool _t4DCB#1 = GTE<real>(_t4DC8,_t473B);
      bool _t4DCD#1 = GT<real>(time4DC0,_t4DC8);
      bool _t4DCF#1 = BAnd(_t4DCD,_t4D29);
      bool _t4DD1#1 = BAnd(_t4DCB,_t4DCF);
      if _t4DD1 then goto ASSIGN5F43 else goto JOIN4DE0
    ASSIGN5F43:  preds = [COND4DD3]
      bool _t4DD6#1 = NEQ<int>(_t4720,ilit40E8);
      if _t4DD6 then goto JOIN4DDC else goto JOIN4DDC
    JOIN4DDC:  preds = [COND4DD8,COND4DD8]
      real faceTime4DD9#1 = phi(faceTime4DBE,_t4DC8)
      int face4DDA#1 = phi(ilit40E8,face4DBF)
      real time4DDB#1 = phi(_t4DC8,time4DC0)
      goto JOIN4DE0
    JOIN4DE0:  preds = [JOIN4DDC,COND4DD3]
      real faceTime4DDD#2 = phi(faceTime4DD9,faceTime4DBE)
      int face4DDE#2 = phi(face4DDA,face4DBF)
      real time4DDF#3 = phi(time4DDB,time4DC0)
      real op1_e3_l_104DE1#1 = VDot<3>(_t4D3D,_t4D84);
      real op1_e3_l_264DE4#1 = RSub(basisEval415D,op1_e3_l_104DE1);
      real _t4DE7#4 = RDiv(op1_e3_l_264DE4,op1_e3_l_274D48);
      bool _t4DEA#1 = GTE<real>(_t4DE7,_t473B);
      bool _t4DEC#1 = GT<real>(time4DDF,_t4DE7);
      bool _t4DEE#1 = BAnd(_t4DEC,_t4D5B);
      bool _t4DF0#1 = BAnd(_t4DEA,_t4DEE);
      if _t4DF0 then goto ASSIGN5F46 else goto JOIN4DFF
    ASSIGN5F46:  preds = [COND4DF2]
      bool _t4DF5#1 = NEQ<int>(_t4720,ilit40EB);
      if _t4DF5 then goto JOIN4DFB else goto JOIN4DFB
    JOIN4DFB:  preds = [COND4DF7,COND4DF7]
      real faceTime4DF8#1 = phi(faceTime4DDD,_t4DE7)
      int face4DF9#1 = phi(ilit40EB,face4DDE)
      real time4DFA#1 = phi(_t4DE7,time4DDF)
      goto JOIN4DFF
    JOIN4DFF:  preds = [JOIN4DFB,COND4DF2]
      real faceTime4DFC#2 = phi(faceTime4DF8,faceTime4DDD)
      int face4DFD#2 = phi(face4DF9,face4DDE)
      real time4DFE#1 = phi(time4DFA,time4DDF)
      bool _t4E00#1 = NEQ<int>(face4DFD,face4724);
      if _t4E00 then goto ASSIGN5F48 else goto ASSIGN4F57
    ASSIGN5F48:  preds = [COND4E02]
      real _t4E03#1 = Max<real>(time4DFE,basisEval415D);
      real _t4E05#1 = IntToReal(face4DFD);
      tensor[2] _t4E07#1 = <tensor[2]>[_t4E03,_t4E05];
      goto JOIN4E0B
    JOIN4E0B:  preds = [ASSIGN4E08,JOIN4F5C]
      tensor[2] _t4E09#3 = phi(_t4E07,_t4E0A)
      real _t4E0C#1 = VIndex<2,1>(_t4E09);
      real t4E0E#1 = Floor<1>(_t4E0C);
      int _t4E10#6 = RealToInt<1>(t4E0E);
      int[2] _t4E12#2 = nextCell44E13 (_t4E10,_t4D82,_t40D2);
      int _t4E26#2 = Subscript<int[2]>(_t4E12,_t40CC);
      bool _t4E28#1 = NEQ<int>(face4724,_t4E26);
      if _t4E28 then goto ASSIGN4E2C else goto ASSIGN4F40
    ASSIGN4E2C:  preds = [COND4E2A]
      string _t4E2B#1 = "face ";
      string _t4E2D#1 = " to ";
      int _t4E31#6 = Subscript<int[2]>(_t4E12,ilit40E5);
      string _t4E33#2 = "\n";
      string _t4E35#1 = "got: ";
      tensor[4] _t4E37#7 = <tensor[4]>[time40CA,basisEval415D,basisEval415D,basisEval415D];
      tensor[4] _t4E39#6 = <tensor[4]>[basisEval415D,time40CA,basisEval415D,basisEval415D];
      tensor[4] _t4E3B#7 = <tensor[4]>[basisEval415D,basisEval415D,time40CA,basisEval415D];
      real _t4E3D#1 = 0.971445146547e-16;
      tensor[4] _t4E3F#4 = <tensor[4]>[_t4E3D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E41#4 = <tensor[4,4]>[_t4E37,_t4E39,_t4E3B,_t4E3F];
      real _t4E43#7 = -0.57735026919e0;
      tensor[4] _t4E45#2 = <tensor[4]>[_t4728,_t4728,_t4728,_t4E43];
      real _t4E47#4 = -0.333333333333e0;
      real _t4E49#2 = 0.666666666667e0;
      real _t4E4B#2 = 0.333333333333e0;
      tensor[4] _t4E4D#3 = <tensor[4]>[_t4E47,_t4E49,_t4E47,_t4E4B];
      tensor[4] _t4E4F#3 = <tensor[4]>[_t4E47,_t4E47,_t4E49,_t4E4B];
      tensor[4,4] _t4E51#4 = <tensor[4,4]>[_t4E45,_t4E4D,_t4E4F,_t4E3F];
      tensor[4] _t4E53#1 = <tensor[4]>[_t4E43,_t4E43,_t4E43,_t4728];
      tensor[4,4] _t4E55#4 = <tensor[4,4]>[_t4E4D,_t4E53,_t4E4F,_t4E3F];
      tensor[4,4] _t4E57#4 = <tensor[4,4]>[_t4E4D,_t4E4F,_t4E45,_t4E3F];
      tensor[4,4][4] _t4E59#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4] _t4E5B#1 = <tensor[4]>[_t4728,coeff4157,coeff4157,time40CA];
      tensor[4] _t4E5D#1 = <tensor[4]>[_t4728,time40CA,basisEval415D,basisEval415D];
      tensor[4] _t4E5F#1 = <tensor[4]>[_t4728,basisEval415D,time40CA,basisEval415D];
      tensor[4] _t4E61#10 = <tensor[4]>[basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E63#4 = <tensor[4,4]>[_t4E5B,_t4E5D,_t4E5F,_t4E61];
      tensor[4,4] _t4E65#12 = <tensor[4,4]>[_t4E37,_t4E39,_t4E3B,_t4E61];
      tensor[4] _t4E67#1 = <tensor[4]>[coeff4157,basisEval415D,basisEval415D,basisEval415D];
      tensor[4,4] _t4E69#4 = <tensor[4,4]>[_t4E39,_t4E67,_t4E3B,_t4E61];
      tensor[4,4] _t4E6B#4 = <tensor[4,4]>[_t4E39,_t4E3B,_t4E37,_t4E61];
      tensor[4,4][4] _t4E6D#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4] _t4E6F#1 = <tensor[4]>[coeff4157,_t4E43,coeff4157,time40CA];
      tensor[4] _t4E71#1 = <tensor[4]>[time40CA,_t4E43,basisEval415D,basisEval415D];
      tensor[4] _t4E73#1 = <tensor[4]>[basisEval415D,_t4E43,time40CA,basisEval415D];
      tensor[4,4] _t4E75#4 = <tensor[4,4]>[_t4E6F,_t4E71,_t4E73,_t4E61];
      tensor[4] _t4E77#2 = <tensor[4]>[basisEval415D,coeff4157,basisEval415D,basisEval415D];
      tensor[4,4] _t4E79#4 = <tensor[4,4]>[_t4E77,_t4E37,_t4E3B,_t4E61];
      tensor[4,4] _t4E7B#4 = <tensor[4,4]>[_t4E37,_t4E3B,_t4E77,_t4E61];
      tensor[4,4][4] _t4E7D#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4] _t4E7F#1 = <tensor[4]>[coeff4157,coeff4157,_t4728,time40CA];
      tensor[4] _t4E81#1 = <tensor[4]>[time40CA,basisEval415D,_t4728,basisEval415D];
      tensor[4] _t4E83#1 = <tensor[4]>[basisEval415D,time40CA,_t4728,basisEval415D];
      tensor[4,4] _t4E85#4 = <tensor[4,4]>[_t4E7F,_t4E81,_t4E83,_t4E61];
      tensor[4,4] _t4E87#4 = <tensor[4,4]>[_t4E3B,_t4E37,_t4E39,_t4E61];
      tensor[4] _t4E89#1 = <tensor[4]>[basisEval415D,basisEval415D,coeff4157,basisEval415D];
      tensor[4,4] _t4E8B#4 = <tensor[4,4]>[_t4E37,_t4E89,_t4E39,_t4E61];
      tensor[4,4][4] _t4E8D#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4E8F#1 = <tensor[4,4][4][4]>{_t4E59,_t4E6D,_t4E7D,_t4E8D};
      tensor[4,4][4] _t4E91#1 = Subscript<tensor[4,4][4][4]>(_t4E8F,_t4E10);
      tensor[4,4] _t4E93#1 = Subscript<tensor[4,4][4]>(_t4E91,_t4E31);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t4E2B,_t4E10,_t4E2D,_t4E31,_t4E33,_t4E35,_t4E93,_t4E33);
      tensor[4,4][4] _t4E96#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4E98#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4E9A#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4E9C#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4E9E#1 = <tensor[4,4][4][4]>{_t4E96,_t4E98,_t4E9A,_t4E9C};
      tensor[4,4][4] _t4EA0#1 = Subscript<tensor[4,4][4][4]>(_t4E9E,_t4E10);
      tensor[4,4] _t4EA2#4 = Subscript<tensor[4,4][4]>(_t4EA0,_t4E31);
      real _t4EA4#1 = VIndex<2,0>(_t4E09);
      real r4EA8#3 = RMul(_t4EA4,time46E9);
      real r4EA9#1 = RMul(r4EA8,vdot46DB);
      real r4EAB#1 = RMul(r4EA8,vdot46DD);
      real r4EAD#1 = RMul(r4EA8,vdot46DF);
      tensor[3] op1_e3_l_224EA6#1 = <tensor[3]>[r4EA9,r4EAB,r4EAD];
      tensor[3] _t4EB7#3 = VAdd<3>(op1_e3_l_224EA6,_t4D84);
      real _t4EBA#1 = VIndex<3,0>(_t4EB7);
      real _t4EBC#1 = VIndex<3,1>(_t4EB7);
      real _t4EBE#1 = VIndex<3,2>(_t4EB7);
      tensor[4] _t4EC0#12 = <tensor[4]>[_t4EBA,_t4EBC,_t4EBE,time40CA];
      tensor[4] projParam4EC3#1 = ProjectLast<tensor[4,4],[0]>(_t4EA2);
      real vdot4EC4#1 = VDot<4>(projParam4EC3,_t4EC0);
      tensor[4] projParam4EC5#1 = ProjectLast<tensor[4,4],[1]>(_t4EA2);
      real vdot4EC6#1 = VDot<4>(projParam4EC5,_t4EC0);
      tensor[4] projParam4EC7#1 = ProjectLast<tensor[4,4],[2]>(_t4EA2);
      real vdot4EC8#1 = VDot<4>(projParam4EC7,_t4EC0);
      tensor[4] projParam4EC9#1 = ProjectLast<tensor[4,4],[3]>(_t4EA2);
      real vdot4ECA#1 = VDot<4>(projParam4EC9,_t4EC0);
      tensor[4] _t4EC2#1 = <tensor[4]>[vdot4EC4,vdot4EC6,vdot4EC8,vdot4ECA];
      real _t4ED5#1 = VIndex<4,0>(_t4EC2);
      tensor[4,4][4] _t4ED7#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4ED9#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4EDB#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4EDD#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4EDF#1 = <tensor[4,4][4][4]>{_t4ED7,_t4ED9,_t4EDB,_t4EDD};
      tensor[4,4][4] _t4EE1#1 = Subscript<tensor[4,4][4][4]>(_t4EDF,_t4E10);
      tensor[4,4] _t4EE3#4 = Subscript<tensor[4,4][4]>(_t4EE1,_t4E31);
      tensor[4] projParam4EE6#1 = ProjectLast<tensor[4,4],[0]>(_t4EE3);
      real vdot4EE7#1 = VDot<4>(projParam4EE6,_t4EC0);
      tensor[4] projParam4EE8#1 = ProjectLast<tensor[4,4],[1]>(_t4EE3);
      real vdot4EE9#1 = VDot<4>(projParam4EE8,_t4EC0);
      tensor[4] projParam4EEA#1 = ProjectLast<tensor[4,4],[2]>(_t4EE3);
      real vdot4EEB#1 = VDot<4>(projParam4EEA,_t4EC0);
      tensor[4] projParam4EEC#1 = ProjectLast<tensor[4,4],[3]>(_t4EE3);
      real vdot4EED#1 = VDot<4>(projParam4EEC,_t4EC0);
      tensor[4] _t4EE5#1 = <tensor[4]>[vdot4EE7,vdot4EE9,vdot4EEB,vdot4EED];
      real _t4EF8#1 = VIndex<4,1>(_t4EE5);
      tensor[4,4][4] _t4EFA#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4EFC#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4EFE#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4F00#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4F02#1 = <tensor[4,4][4][4]>{_t4EFA,_t4EFC,_t4EFE,_t4F00};
      tensor[4,4][4] _t4F04#1 = Subscript<tensor[4,4][4][4]>(_t4F02,_t4E10);
      tensor[4,4] _t4F06#4 = Subscript<tensor[4,4][4]>(_t4F04,_t4E31);
      tensor[4] projParam4F09#1 = ProjectLast<tensor[4,4],[0]>(_t4F06);
      real vdot4F0A#1 = VDot<4>(projParam4F09,_t4EC0);
      tensor[4] projParam4F0B#1 = ProjectLast<tensor[4,4],[1]>(_t4F06);
      real vdot4F0C#1 = VDot<4>(projParam4F0B,_t4EC0);
      tensor[4] projParam4F0D#1 = ProjectLast<tensor[4,4],[2]>(_t4F06);
      real vdot4F0E#1 = VDot<4>(projParam4F0D,_t4EC0);
      tensor[4] projParam4F0F#1 = ProjectLast<tensor[4,4],[3]>(_t4F06);
      real vdot4F10#1 = VDot<4>(projParam4F0F,_t4EC0);
      tensor[4] _t4F08#1 = <tensor[4]>[vdot4F0A,vdot4F0C,vdot4F0E,vdot4F10];
      real _t4F1B#1 = VIndex<4,2>(_t4F08);
      tensor[3] _t4F1D#1 = <tensor[3]>[_t4ED5,_t4EF8,_t4F1B];
      femData:MeshPos _t4F1F#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t40D2,_t4E26,_t4F1D,_t4E31);
      goto JOIN4F22
    JOIN4F22:  preds = [ASSIGN4F20,ASSIGN4F55]
      femData:MeshPos nmp471B#3 = phi(_t4F1F,_t4F21)
      bool _t4F23#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp471B);
      bool _t4F25#1 = BNot(_t4F23);
      if _t4F25 then goto ASSIGN4F29 else goto ASSIGN5F61
    ASSIGN4F29:  preds = [COND4F27]
      bool _t4F28#1 = true;
      goto JOIN4F2C
    JOIN4F2C:  preds = [ASSIGN4F29,JOIN4F36]
      bool _t4F2A#1 = phi(_t4F28,_t4F2B)
      if _t4F2A then goto RETURN(nmp471B)4F2E else goto JOIN4F2F
    RETURN(nmp471B)4F2E:  preds = [COND4F2D]
      return nmp471B
      goto JOIN4F2F
    JOIN4F2F:  preds = [*RETURN(nmp471B)4F2E,COND4F2D]
      goto JOIN471E
    ASSIGN5F61:  preds = [COND4F27]
      bool _t4F30#1 = LT<real>(eTime4D7B,basisEval415D);
      if _t4F30 then goto ASSIGN4F34 else goto ASSIGN4F38
    ASSIGN4F34:  preds = [COND4F32]
      bool _t4F33#1 = true;
      goto JOIN4F36
    JOIN4F36:  preds = [ASSIGN4F34,JOIN4F3D]
      bool _t4F2B#1 = phi(_t4F33,_t4F35)
      goto JOIN4F2C
    ASSIGN4F38:  preds = [COND4F32]
      bool _t4F37#1 = GT<real>(eTime4D7B,time40CA);
      if _t4F37 then goto ASSIGN4F3B else goto ASSIGN4F3E
    ASSIGN4F3B:  preds = [COND4F39]
      bool _t4F3A#1 = true;
      goto JOIN4F3D
    JOIN4F3D:  preds = [ASSIGN4F3B,ASSIGN4F3E]
      bool _t4F35#1 = phi(_t4F3A,_t4F3C)
      goto JOIN4F36
    ASSIGN4F3E:  preds = [COND4F39]
      bool _t4F3C#1 = LT<real>(time471D,timeEps40C1);
      goto JOIN4F3D
    ASSIGN4F40:  preds = [COND4E2A]
      real _t4F3F#1 = VIndex<2,0>(_t4E09);
      real r4F43#3 = RMul(_t4F3F,time46E9);
      real r4F44#1 = RMul(r4F43,vdot46DB);
      real r4F46#1 = RMul(r4F43,vdot46DD);
      real r4F48#1 = RMul(r4F43,vdot46DF);
      tensor[3] op1_e3_l_224F41#1 = <tensor[3]>[r4F44,r4F46,r4F48];
      tensor[3] _t4F52#1 = VAdd<3>(op1_e3_l_224F41,_t4D84);
      femData:MeshPos _t4F21#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t40D2,_t4F52);
      goto JOIN4F22
    ASSIGN4F57:  preds = [COND4E02]
      bool _t4F56#1 = EQ<real>(faceTime4726,faceTime4DFC);
      if _t4F56 then goto ASSIGN5F47 else goto ASSIGN4F5E
    ASSIGN5F47:  preds = [COND4F58]
      tensor[2] _t4F59#1 = <tensor[2]>[coeff4157,coeff4157];
      goto JOIN4F5C
    JOIN4F5C:  preds = [ASSIGN5F47,ASSIGN4F5F]
      tensor[2] _t4E0A#1 = phi(_t4F59,_t4F5B)
      goto JOIN4E0B
    ASSIGN4F5E:  preds = [COND4F58]
      real _t4F5D#1 = IntToReal(_t4720);
      tensor[2] _t4F5B#1 = <tensor[2]>[faceTime4DFC,_t4F5D];
      goto JOIN4F5C
    ASSIGN4F61:  preds = [COND4D71]
      bool _t4F60#1 = EQ<real>(faceTime4726,faceTime4D6B);
      if _t4F60 then goto ASSIGN5F3B else goto ASSIGN4F68
    ASSIGN5F3B:  preds = [COND4F62]
      tensor[2] _t4F63#1 = <tensor[2]>[coeff4157,coeff4157];
      goto JOIN4F66
    JOIN4F66:  preds = [ASSIGN5F3B,ASSIGN4F69]
      tensor[2] _t4D79#1 = phi(_t4F63,_t4F65)
      goto JOIN4D7A
    ASSIGN4F68:  preds = [COND4F62]
      real _t4F67#1 = IntToReal(_t4720);
      tensor[2] _t4F65#1 = <tensor[2]>[faceTime4D6B,_t4F67];
      goto JOIN4F66
    ASSIGN4F6B:  preds = [FOREACH40D1]
      string _t4F6A#1 = "Took stupid way out!\n";
      Print<[string]>(_t4F6A);
      tensor[3] _t4F6D#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x40BA);
      int _t4F6F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x40BA);
      femData:Mesh _t4F71#16 = ExtractFem<femData:Mesh,femData:MeshPos>(x40BA);
      int ilit4F74#1 = 4;
      int mulRes4F75#4 = IMul(_t4F6F,ilit4F74);
      int idx4F78#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,mulRes4F75);
      int ilit4F79#5 = 1;
      int addRes4F7A#1 = IAdd(mulRes4F75,ilit4F79);
      int idx4F7B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F7A);
      int ilit4F7C#5 = 2;
      int addRes4F7D#1 = IAdd(mulRes4F75,ilit4F7C);
      int idx4F7E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F7D);
      int ilit4F7F#5 = 3;
      int addRes4F80#1 = IAdd(mulRes4F75,ilit4F7F);
      int idx4F81#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F80);
      int mulRes4F97#3 = IMul(ilit4F7F,idx4F78);
      int addRes4F9A#1 = IAdd(ilit4F79,mulRes4F97);
      int addRes4F9C#1 = IAdd(ilit4F7C,mulRes4F97);
      real dof_load4F9D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4F97);
      real dof_load4F9E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F9A);
      real dof_load4F9F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F9C);
      int mulRes4FA2#3 = IMul(ilit4F7F,idx4F7B);
      int addRes4FA4#1 = IAdd(ilit4F79,mulRes4FA2);
      int addRes4FA5#1 = IAdd(ilit4F7C,mulRes4FA2);
      real dof_load4FA6#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4FA2);
      real dof_load4FA7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA4);
      real dof_load4FA8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA5);
      int mulRes4FAB#3 = IMul(ilit4F7F,idx4F7E);
      int addRes4FAD#1 = IAdd(ilit4F79,mulRes4FAB);
      int addRes4FAE#1 = IAdd(ilit4F7C,mulRes4FAB);
      real dof_load4FAF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4FAB);
      real dof_load4FB0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAD);
      real dof_load4FB1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAE);
      int mulRes4FB4#3 = IMul(ilit4F7F,idx4F81);
      int addRes4FB6#1 = IAdd(ilit4F79,mulRes4FB4);
      int addRes4FB7#1 = IAdd(ilit4F7C,mulRes4FB4);
      real dof_load4FB8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4FB4);
      real dof_load4FB9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB6);
      real dof_load4FBA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB7);
      real varAcc4FE8#1 = VIndex<3,0>(_t4F6D);
      real varAcc4FE9#1 = VIndex<3,1>(_t4F6D);
      real varAcc4FEA#1 = VIndex<3,2>(_t4F6D);
      real coeff4FEB#3 = -0.1e1;
      real prod4FEE#2 = RMul(time40CA,time40CA);
      real prod4FEF#2 = RMul(varAcc4FE8,prod4FEE);
      real prod4FF1#1 = RMul(varAcc4FE9,time40CA);
      real prod4FF2#2 = RMul(time40CA,prod4FF1);
      real prod4FF4#1 = RMul(time40CA,varAcc4FEA);
      real prod4FF5#2 = RMul(time40CA,prod4FF4);
      real prod4FF6#1 = RMul(time40CA,prod4FEE);
      real mult4FF7#1 = RMul(time40CA,prod4FF6);
      real mult4FF8#1 = RMul(coeff4FEB,prod4FF5);
      real mult4FF9#1 = RMul(coeff4FEB,prod4FF2);
      real mult4FFA#1 = RMul(coeff4FEB,prod4FEF);
      real sum4FFB#1 = RAdd(mult4FF9,mult4FFA);
      real sum4FFC#1 = RAdd(mult4FF8,sum4FFB);
      real sum4FFD#3 = RAdd(mult4FF7,sum4FFC);
      real basisEval4FFF#3 = RMul(time40CA,prod4FEF);
      real basisEval5000#3 = RMul(time40CA,prod4FF2);
      real basisEval5001#3 = RMul(time40CA,prod4FF5);
      real r5022#1 = RMul(dof_load4F9D,sum4FFD);
      real r5025#1 = RMul(dof_load4FA6,basisEval4FFF);
      real r5028#1 = RMul(dof_load4FAF,basisEval5000);
      real r502B#1 = RMul(dof_load4FB8,basisEval5001);
      real r502C#1 = RAdd(r5022,r5025);
      real r502D#1 = RAdd(r502C,r5028);
      real r502E#1 = RAdd(r502D,r502B);
      real r5030#1 = RMul(dof_load4F9E,sum4FFD);
      real r5032#1 = RMul(dof_load4FA7,basisEval4FFF);
      real r5034#1 = RMul(dof_load4FB0,basisEval5000);
      real r5036#1 = RMul(dof_load4FB9,basisEval5001);
      real r5037#1 = RAdd(r5030,r5032);
      real r5038#1 = RAdd(r5037,r5034);
      real r5039#1 = RAdd(r5038,r5036);
      real r503B#1 = RMul(dof_load4F9F,sum4FFD);
      real r503D#1 = RMul(dof_load4FA8,basisEval4FFF);
      real r503F#1 = RMul(dof_load4FB1,basisEval5000);
      real r5041#1 = RMul(dof_load4FBA,basisEval5001);
      real r5042#1 = RAdd(r503B,r503D);
      real r5043#1 = RAdd(r5042,r503F);
      real r5044#1 = RAdd(r5043,r5041);
      tensor[3] probe_l_5501F#1 = <tensor[3]>[r502E,r5039,r5044];
      tensor[3] _t506C#1 = VAdd<3>(probe_l_5501F,dPos40BB);
      femData:MeshPos cmp506F#1 = findPos3574 (meshData40BD,_t506C);
      return cmp506F
}
## input initialization
  ENTRY352A:  preds = []
    int timeSteps352B#1 = 32;
    globals.timeSteps3522 = timeSteps352B;
    real timeEps352E#1 = 0.1e-6;
    globals.timeEps3523 = timeEps352E;
    real stepSize3531#1 = 0.1e-1;
    globals.stepSize3525 = stepSize3531;
    int stepMax3534#1 = 100;
    globals.stepMax3526 = stepMax3534;
    return
## global-variable initialization
  ENTRY3538:  preds = []
    femData:Mesh meshData3539#3 = globals.meshData351F;
    femData:Space 0space03AB_intermedateGlobal353B#1 = globals.0space03AB_intermedateGlobal3520;
    femData:FemFunc 0data03AD_intermedateGlobal353D#1 = globals.0data03AD_intermedateGlobal3521;
    int _t353F#1 = 0;
    int _t3541#1 = 1;
    int _t3543#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3539);
    int _t3545#1 = ISub(_t3543,_t3541);
    int[] _t3547#1 = Range(_t353F,_t3545);
    femData:MeshCell[] _t3549#1 = <femData:MeshCell[]>{};
  FOREACH354C:  preds = [ASSIGN354A,NEXT3552]
    foreach (_t354B in _t3547) on exit goto ASSIGN3554
      femData:MeshCell[] _t3550#1 = phi(_t3549,_t354F)
    femData:MeshCell _t354D#1 = LoadFem<femData:MeshCell>(meshData3539,_t354B);
    femData:MeshCell[] _t354F#1 = Append<femData:MeshCell>(_t3550,_t354D);
    goto FOREACH354C
  ASSIGN3554:  preds = [FOREACH354C]
    femData:Space space3553#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal353B,meshData3539);
    femData:FemFunc data3555#2 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal353D,space3553);
    globals.data3527 = data3555;
    femData:Space _t3558#2 = ExtractFem<femData:Space,femData:FemFunc>(data3555);
    femData:Mesh _t355A#1 = ExtractFem<femData:Mesh,femData:Space>(_t3558);
    globals._t3528 = _t355A;
    globals._tX3529 = _t3558;
    return
## strand
  strand gg (tensor[3] startPos355F#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3566:  preds = []
        femData:Mesh meshData3567#1 = globals.meshData351F;
        tensor[3][1] _t3569#1 = <tensor[3][1]>{startPos355F};
        tensor[3][] _t356B#1 = MkDynamic<tensor[3],1>(_t3569);
        tensor[3][1] _t356D#1 = <tensor[3][1]>{startPos355F};
        tensor[3][] _t356F#1 = MkDynamic<tensor[3],1>(_t356D);
        int step3571#1 = 0;
        femData:MeshPos cPos3573#1 = findPos3574 (meshData3567,startPos355F);
        self.stream = _t356B;
        self.newStream = _t356F;
        self.step = step3571;
        self.cPos = cPos3573;
        self.altCPos = startPos355F;
        self.startPos = startPos355F;
        return
    end state init
    method update
        ENTRY3CC6:  preds = []
          femData:Mesh _t3CC7#2 = globals._t3528;
          femData:Space _t3CC9#20 = globals._tX3529;
          femData:FemFunc data3CCB#62 = globals.data3527;
          femData:Mesh meshData3CCD#2 = globals.meshData351F;
          real stepSize3CCF#3 = globals.stepSize3525;
          int stepMax3CD1#1 = globals.stepMax3526;
          tensor[3][] stream3CD3#2 = self.stream;
          tensor[3][] newStream3CD5#1 = self.newStream;
          int step3CD7#3 = self.step;
          femData:MeshPos cPos3CD9#6 = self.cPos;
          tensor[3] altCPos3CDB#5 = self.altCPos;
          tensor[3] startPos3CDD#1 = self.startPos;
          bool _t3CDF#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos3CD9);
          bool _t3CE1#1 = BNot(_t3CDF);
          if _t3CE1 then goto ASSIGN3CE5 else goto ASSIGN59B1
        ASSIGN3CE5:  preds = [COND3CE3]
          bool _t3CE4#1 = true;
          goto JOIN3CE8
        JOIN3CE8:  preds = [ASSIGN3CE5,JOIN59BA]
          bool _t3CE6#1 = phi(_t3CE4,_t3CE7)
          if _t3CE6 then goto STABILIZE3CEA else goto JOIN3CEB
        STABILIZE3CEA:  preds = [COND3CE9]
          stabilize
          goto JOIN3CEB
        JOIN3CEB:  preds = [*STABILIZE3CEA,COND3CE9]
          tensor[3] _t3CEC#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos3CD9);
          int _t3CEE#3 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos3CD9);
          femData:Mesh _t3CF0#18 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos3CD9);
          int ilit3CF3#6 = 4;
          int mulRes3CF4#4 = IMul(_t3CEE,ilit3CF3);
          int idx3CF7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,mulRes3CF4);
          int ilit3CF8#55 = 1;
          int addRes3CF9#1 = IAdd(mulRes3CF4,ilit3CF8);
          int idx3CFA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CF9);
          int ilit3CFB#54 = 2;
          int addRes3CFC#1 = IAdd(mulRes3CF4,ilit3CFB);
          int idx3CFD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CFC);
          int ilit3CFE#54 = 3;
          int addRes3CFF#1 = IAdd(mulRes3CF4,ilit3CFE);
          int idx3D00#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CFF);
          int mulRes3D16#3 = IMul(ilit3CFE,idx3CF7);
          int addRes3D19#1 = IAdd(ilit3CF8,mulRes3D16);
          int addRes3D1B#1 = IAdd(ilit3CFB,mulRes3D16);
          real dof_load3D1C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D16);
          real dof_load3D1D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D19);
          real dof_load3D1E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D1B);
          int mulRes3D21#3 = IMul(ilit3CFE,idx3CFA);
          int addRes3D23#1 = IAdd(ilit3CF8,mulRes3D21);
          int addRes3D24#1 = IAdd(ilit3CFB,mulRes3D21);
          real dof_load3D25#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D21);
          real dof_load3D26#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D23);
          real dof_load3D27#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D24);
          int mulRes3D2A#3 = IMul(ilit3CFE,idx3CFD);
          int addRes3D2C#1 = IAdd(ilit3CF8,mulRes3D2A);
          int addRes3D2D#1 = IAdd(ilit3CFB,mulRes3D2A);
          real dof_load3D2E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D2A);
          real dof_load3D2F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2C);
          real dof_load3D30#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2D);
          int mulRes3D33#3 = IMul(ilit3CFE,idx3D00);
          int addRes3D35#1 = IAdd(ilit3CF8,mulRes3D33);
          int addRes3D36#1 = IAdd(ilit3CFB,mulRes3D33);
          real dof_load3D37#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D33);
          real dof_load3D38#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D35);
          real dof_load3D39#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D36);
          real varAcc3D67#5 = VIndex<3,0>(_t3CEC);
          real varAcc3D68#4 = VIndex<3,1>(_t3CEC);
          real varAcc3D69#4 = VIndex<3,2>(_t3CEC);
          real coeff3D6A#15 = -0.1e1;
          real one3D6C#54 = 0.1e1;
          real prod3D6D#10 = RMul(one3D6C,one3D6C);
          real prod3D6E#4 = RMul(varAcc3D67,prod3D6D);
          real prod3D70#2 = RMul(varAcc3D68,one3D6C);
          real prod3D71#4 = RMul(one3D6C,prod3D70);
          real prod3D73#2 = RMul(one3D6C,varAcc3D69);
          real prod3D74#4 = RMul(one3D6C,prod3D73);
          real prod3D75#1 = RMul(one3D6C,prod3D6D);
          real mult3D76#6 = RMul(one3D6C,prod3D75);
          real mult3D77#2 = RMul(coeff3D6A,prod3D74);
          real mult3D78#2 = RMul(coeff3D6A,prod3D71);
          real mult3D79#2 = RMul(coeff3D6A,prod3D6E);
          real sum3D7A#1 = RAdd(mult3D78,mult3D79);
          real sum3D7B#1 = RAdd(mult3D77,sum3D7A);
          real sum3D7C#3 = RAdd(mult3D76,sum3D7B);
          real basisEval3D7E#3 = RMul(one3D6C,prod3D6E);
          real basisEval3D7F#3 = RMul(one3D6C,prod3D71);
          real basisEval3D80#3 = RMul(one3D6C,prod3D74);
          real r3DA1#1 = RMul(dof_load3D1C,sum3D7C);
          real r3DA4#1 = RMul(dof_load3D25,basisEval3D7E);
          real r3DA7#1 = RMul(dof_load3D2E,basisEval3D7F);
          real r3DAA#1 = RMul(dof_load3D37,basisEval3D80);
          real r3DAB#1 = RAdd(r3DA1,r3DA4);
          real r3DAC#1 = RAdd(r3DAB,r3DA7);
          real r3DAD#1 = RAdd(r3DAC,r3DAA);
          real r3DAF#1 = RMul(dof_load3D1D,sum3D7C);
          real r3DB1#1 = RMul(dof_load3D26,basisEval3D7E);
          real r3DB3#1 = RMul(dof_load3D2F,basisEval3D7F);
          real r3DB5#1 = RMul(dof_load3D38,basisEval3D80);
          real r3DB6#1 = RAdd(r3DAF,r3DB1);
          real r3DB7#1 = RAdd(r3DB6,r3DB3);
          real r3DB8#1 = RAdd(r3DB7,r3DB5);
          real r3DBA#1 = RMul(dof_load3D1E,sum3D7C);
          real r3DBC#1 = RMul(dof_load3D27,basisEval3D7E);
          real r3DBE#1 = RMul(dof_load3D30,basisEval3D7F);
          real r3DC0#1 = RMul(dof_load3D39,basisEval3D80);
          real r3DC1#1 = RAdd(r3DBA,r3DBC);
          real r3DC2#1 = RAdd(r3DC1,r3DBE);
          real r3DC3#1 = RAdd(r3DC2,r3DC0);
          tensor[3] probe_l_53D9E#1 = <tensor[3]>[r3DAD,r3DB8,r3DC3];
          tensor[3] op1_e3_l_73DEB#2 = VSub<3>(probe_l_53D9E,altCPos3CDB);
          real op1_e3_l_93DEE#1 = VDot<3>(op1_e3_l_73DEB,op1_e3_l_73DEB);
          real _t3DF1#1 = Sqrt(op1_e3_l_93DEE);
          real _t3DF4#1 = 0.1e-5;
          bool _t3DF6#1 = GT<real>(_t3DF1,_t3DF4);
          if _t3DF6 then goto ASSIGN3DFA else goto ASSIGN59AA
        ASSIGN3DFA:  preds = [COND3DF8]
          string _t3DF9#1 = "Error in tracing: At step:";
          string _t3DFB#1 = " with particle:";
          string _t3DFD#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t3DF9,step3CD7,_t3DFB,startPos3CDD,_t3DFD);
          goto JOIN3E00
        JOIN3E00:  preds = [MASSIGN3DFF,MASSIGN59AF]
          real _t3E01#1 = 0.5e0;
          if _t3CDF then goto ASSIGN3E05 else goto ASSIGN59A7
        ASSIGN3E05:  preds = [COND3E03]
          femData:MeshCell c3E04#1 = LoadFem<femData:MeshCell>(_t3CF0,_t3CEE);
          int _t3E06#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3E04);
          femData:FuncCell _t3E08#2 = LoadFem<femData:FuncCell>(data3CCB,_t3E06);
          femData:FemFunc _t3E0A#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3E08);
          femData:Space _t3E0C#10 = ExtractFem<femData:Space,femData:FemFunc>(_t3E0A);
          int _t3E0E#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3E08);
          int ilit3E11#1 = 10;
          int mulRes3E12#10 = IMul(_t3E0E,ilit3E11);
          int idx3E15#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,mulRes3E12);
          int addRes3E17#1 = IAdd(mulRes3E12,ilit3CF8);
          int idx3E18#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E17);
          int addRes3E1A#1 = IAdd(mulRes3E12,ilit3CFB);
          int idx3E1B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E1A);
          int addRes3E1D#1 = IAdd(mulRes3E12,ilit3CFE);
          int idx3E1E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E1D);
          int addRes3E20#1 = IAdd(mulRes3E12,ilit3CF3);
          int idx3E21#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E20);
          int ilit3E22#1 = 5;
          int addRes3E23#1 = IAdd(mulRes3E12,ilit3E22);
          int idx3E24#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E23);
          int ilit3E25#1 = 6;
          int addRes3E26#1 = IAdd(mulRes3E12,ilit3E25);
          int idx3E27#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E26);
          int ilit3E28#1 = 7;
          int addRes3E29#1 = IAdd(mulRes3E12,ilit3E28);
          int idx3E2A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E29);
          int ilit3E2B#1 = 8;
          int addRes3E2C#1 = IAdd(mulRes3E12,ilit3E2B);
          int idx3E2D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E2C);
          int ilit3E2E#1 = 9;
          int addRes3E2F#1 = IAdd(mulRes3E12,ilit3E2E);
          int idx3E30#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E2F);
          int mulRes3E58#3 = IMul(ilit3CFE,idx3E15);
          int addRes3E5B#1 = IAdd(ilit3CF8,mulRes3E58);
          int addRes3E5D#1 = IAdd(ilit3CFB,mulRes3E58);
          real dof_load3E5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E58);
          real dof_load3E5F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E5B);
          real dof_load3E60#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E5D);
          int mulRes3E63#3 = IMul(ilit3CFE,idx3E18);
          int addRes3E65#1 = IAdd(ilit3CF8,mulRes3E63);
          int addRes3E66#1 = IAdd(ilit3CFB,mulRes3E63);
          real dof_load3E67#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E63);
          real dof_load3E68#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E65);
          real dof_load3E69#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E66);
          int mulRes3E6C#3 = IMul(ilit3CFE,idx3E1B);
          int addRes3E6E#1 = IAdd(ilit3CF8,mulRes3E6C);
          int addRes3E6F#1 = IAdd(ilit3CFB,mulRes3E6C);
          real dof_load3E70#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E6C);
          real dof_load3E71#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6E);
          real dof_load3E72#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6F);
          int mulRes3E75#3 = IMul(ilit3CFE,idx3E1E);
          int addRes3E77#1 = IAdd(ilit3CF8,mulRes3E75);
          int addRes3E78#1 = IAdd(ilit3CFB,mulRes3E75);
          real dof_load3E79#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E75);
          real dof_load3E7A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E77);
          real dof_load3E7B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E78);
          int mulRes3E7F#3 = IMul(ilit3CFE,idx3E21);
          int addRes3E81#1 = IAdd(ilit3CF8,mulRes3E7F);
          int addRes3E82#1 = IAdd(ilit3CFB,mulRes3E7F);
          real dof_load3E83#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E7F);
          real dof_load3E84#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E81);
          real dof_load3E85#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E82);
          int mulRes3E89#3 = IMul(ilit3CFE,idx3E24);
          int addRes3E8B#1 = IAdd(ilit3CF8,mulRes3E89);
          int addRes3E8C#1 = IAdd(ilit3CFB,mulRes3E89);
          real dof_load3E8D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E89);
          real dof_load3E8E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8B);
          real dof_load3E8F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8C);
          int mulRes3E93#3 = IMul(ilit3CFE,idx3E27);
          int addRes3E95#1 = IAdd(ilit3CF8,mulRes3E93);
          int addRes3E96#1 = IAdd(ilit3CFB,mulRes3E93);
          real dof_load3E97#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E93);
          real dof_load3E98#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E95);
          real dof_load3E99#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E96);
          int mulRes3E9D#3 = IMul(ilit3CFE,idx3E2A);
          int addRes3E9F#1 = IAdd(ilit3CF8,mulRes3E9D);
          int addRes3EA0#1 = IAdd(ilit3CFB,mulRes3E9D);
          real dof_load3EA1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E9D);
          real dof_load3EA2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E9F);
          real dof_load3EA3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA0);
          int mulRes3EA7#3 = IMul(ilit3CFE,idx3E2D);
          int addRes3EA9#1 = IAdd(ilit3CF8,mulRes3EA7);
          int addRes3EAA#1 = IAdd(ilit3CFB,mulRes3EA7);
          real dof_load3EAB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3EA7);
          real dof_load3EAC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA9);
          real dof_load3EAD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EAA);
          int mulRes3EB1#3 = IMul(ilit3CFE,idx3E30);
          int addRes3EB3#1 = IAdd(ilit3CF8,mulRes3EB1);
          int addRes3EB4#1 = IAdd(ilit3CFB,mulRes3EB1);
          real dof_load3EB5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3EB1);
          real dof_load3EB6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB3);
          real dof_load3EB7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB4);
          real coeff3F24#3 = 0.2e1;
          real prod23F26#1 = RMul(varAcc3D67,varAcc3D67);
          real prod3F29#2 = RMul(prod23F26,prod3D6D);
          real coeff3F2A#6 = 0.4e1;
          real prod3F2D#2 = RMul(varAcc3D67,prod3D70);
          real prod3F30#2 = RMul(varAcc3D67,prod3D73);
          real coeff3F31#3 = -0.3e1;
          real prod23F33#1 = RMul(varAcc3D68,varAcc3D68);
          real prod3F34#1 = RMul(prod23F33,one3D6C);
          real prod3F35#2 = RMul(one3D6C,prod3F34);
          real prod3F36#1 = RMul(varAcc3D68,varAcc3D69);
          real prod3F37#2 = RMul(one3D6C,prod3F36);
          real prod23F39#1 = RMul(varAcc3D69,varAcc3D69);
          real prod3F3A#1 = RMul(one3D6C,prod23F39);
          real prod3F3B#2 = RMul(one3D6C,prod3F3A);
          real mult3F3F#1 = RMul(coeff3F31,prod3D74);
          real mult3F40#2 = RMul(coeff3F24,prod3F3B);
          real mult3F41#1 = RMul(coeff3F31,prod3D71);
          real mult3F42#4 = RMul(coeff3F2A,prod3F37);
          real mult3F43#2 = RMul(coeff3F24,prod3F35);
          real mult3F44#1 = RMul(coeff3F31,prod3D6E);
          real mult3F45#4 = RMul(coeff3F2A,prod3F30);
          real mult3F46#4 = RMul(coeff3F2A,prod3F2D);
          real mult3F47#2 = RMul(coeff3F24,prod3F29);
          real sum3F48#1 = RAdd(mult3F46,mult3F47);
          real sum3F49#1 = RAdd(mult3F45,sum3F48);
          real sum3F4A#1 = RAdd(mult3F44,sum3F49);
          real sum3F4B#1 = RAdd(mult3F43,sum3F4A);
          real sum3F4C#1 = RAdd(mult3F42,sum3F4B);
          real sum3F4D#1 = RAdd(mult3F41,sum3F4C);
          real sum3F4E#1 = RAdd(mult3F40,sum3F4D);
          real sum3F4F#1 = RAdd(mult3F3F,sum3F4E);
          real sum3F50#3 = RAdd(mult3D76,sum3F4F);
          real sum3F54#3 = RAdd(mult3D79,mult3F47);
          real sum3F57#3 = RAdd(mult3D78,mult3F43);
          real sum3F5A#3 = RAdd(mult3D77,mult3F40);
          real coeff3F5C#6 = -0.4e1;
          real mult3F5D#1 = RMul(coeff3F2A,prod3D74);
          real mult3F5E#1 = RMul(coeff3F5C,prod3F3B);
          real mult3F5F#2 = RMul(coeff3F5C,prod3F37);
          real mult3F60#2 = RMul(coeff3F5C,prod3F30);
          real sum3F61#1 = RAdd(mult3F5F,mult3F60);
          real sum3F62#1 = RAdd(mult3F5E,sum3F61);
          real sum3F63#3 = RAdd(mult3F5D,sum3F62);
          real mult3F65#1 = RMul(coeff3F2A,prod3D71);
          real mult3F66#1 = RMul(coeff3F5C,prod3F35);
          real mult3F67#2 = RMul(coeff3F5C,prod3F2D);
          real sum3F68#1 = RAdd(mult3F66,mult3F67);
          real sum3F69#1 = RAdd(mult3F5F,sum3F68);
          real sum3F6A#3 = RAdd(mult3F65,sum3F69);
          real mult3F6C#1 = RMul(coeff3F2A,prod3D6E);
          real mult3F6D#1 = RMul(coeff3F5C,prod3F29);
          real sum3F6E#1 = RAdd(mult3F67,mult3F6D);
          real sum3F6F#1 = RAdd(mult3F60,sum3F6E);
          real sum3F70#3 = RAdd(mult3F6C,sum3F6F);
          real r3FC9#1 = RMul(dof_load3E5E,sum3F50);
          real r3FCC#1 = RMul(dof_load3E67,sum3F54);
          real r3FCF#1 = RMul(dof_load3E70,sum3F57);
          real r3FD2#1 = RMul(dof_load3E79,sum3F5A);
          real r3FD5#1 = RMul(dof_load3E83,mult3F42);
          real r3FD8#1 = RMul(dof_load3E8D,mult3F45);
          real r3FDB#1 = RMul(dof_load3E97,mult3F46);
          real r3FDE#1 = RMul(dof_load3EA1,sum3F63);
          real r3FE1#1 = RMul(dof_load3EAB,sum3F6A);
          real r3FE4#1 = RMul(dof_load3EB5,sum3F70);
          real r3FE5#1 = RAdd(r3FC9,r3FCC);
          real r3FE6#1 = RAdd(r3FE5,r3FCF);
          real r3FE7#1 = RAdd(r3FE6,r3FD2);
          real r3FE8#1 = RAdd(r3FE7,r3FD5);
          real r3FE9#1 = RAdd(r3FE8,r3FD8);
          real r3FEA#1 = RAdd(r3FE9,r3FDB);
          real r3FEB#1 = RAdd(r3FEA,r3FDE);
          real r3FEC#1 = RAdd(r3FEB,r3FE1);
          real r3FED#2 = RAdd(r3FEC,r3FE4);
          real r3FEF#1 = RMul(dof_load3E5F,sum3F50);
          real r3FF1#1 = RMul(dof_load3E68,sum3F54);
          real r3FF3#1 = RMul(dof_load3E71,sum3F57);
          real r3FF5#1 = RMul(dof_load3E7A,sum3F5A);
          real r3FF7#1 = RMul(dof_load3E84,mult3F42);
          real r3FF9#1 = RMul(dof_load3E8E,mult3F45);
          real r3FFB#1 = RMul(dof_load3E98,mult3F46);
          real r3FFD#1 = RMul(dof_load3EA2,sum3F63);
          real r3FFF#1 = RMul(dof_load3EAC,sum3F6A);
          real r4001#1 = RMul(dof_load3EB6,sum3F70);
          real r4002#1 = RAdd(r3FEF,r3FF1);
          real r4003#1 = RAdd(r4002,r3FF3);
          real r4004#1 = RAdd(r4003,r3FF5);
          real r4005#1 = RAdd(r4004,r3FF7);
          real r4006#1 = RAdd(r4005,r3FF9);
          real r4007#1 = RAdd(r4006,r3FFB);
          real r4008#1 = RAdd(r4007,r3FFD);
          real r4009#1 = RAdd(r4008,r3FFF);
          real r400A#2 = RAdd(r4009,r4001);
          real r400C#1 = RMul(dof_load3E60,sum3F50);
          real r400E#1 = RMul(dof_load3E69,sum3F54);
          real r4010#1 = RMul(dof_load3E72,sum3F57);
          real r4012#1 = RMul(dof_load3E7B,sum3F5A);
          real r4014#1 = RMul(dof_load3E85,mult3F42);
          real r4016#1 = RMul(dof_load3E8F,mult3F45);
          real r4018#1 = RMul(dof_load3E99,mult3F46);
          real r401A#1 = RMul(dof_load3EA3,sum3F63);
          real r401C#1 = RMul(dof_load3EAD,sum3F6A);
          real r401E#1 = RMul(dof_load3EB7,sum3F70);
          real r401F#1 = RAdd(r400C,r400E);
          real r4020#1 = RAdd(r401F,r4010);
          real r4021#1 = RAdd(r4020,r4012);
          real r4022#1 = RAdd(r4021,r4014);
          real r4023#1 = RAdd(r4022,r4016);
          real r4024#1 = RAdd(r4023,r4018);
          real r4025#1 = RAdd(r4024,r401A);
          real r4026#1 = RAdd(r4025,r401C);
          real r4027#2 = RAdd(r4026,r401E);
          tensor[3] probe_l_83FC6#2 = <tensor[3]>[r3FED,r400A,r4027];
          real op1_e3_l_11408B#1 = VDot<3>(probe_l_83FC6,probe_l_83FC6);
          real op1_e3_l_12408E#1 = Sqrt(op1_e3_l_11408B);
          real r4093#3 = RDiv(one3D6C,op1_e3_l_12408E);
          real r4095#1 = RMul(r4093,r3FED);
          real r4097#1 = RMul(r4093,r400A);
          real r4099#1 = RMul(r4093,r4027);
          tensor[3] _t4091#1 = <tensor[3]>[r4095,r4097,r4099];
          goto JOIN40A6
        JOIN40A6:  preds = [ASSIGN40A3,ASSIGN59A8]
          tensor[3] _t40A4#3 = phi(_t4091,_t40A5)
          real r40A8#1 = TensorIndex<tensor[3],[0]>(_t40A4);
          real r40A9#6 = RMul(_t3E01,stepSize3CCF);
          real r40AA#1 = RMul(r40A9,r40A8);
          real r40AB#1 = TensorIndex<tensor[3],[1]>(_t40A4);
          real r40AC#1 = RMul(r40A9,r40AB);
          real r40AD#1 = TensorIndex<tensor[3],[2]>(_t40A4);
          real r40AE#1 = RMul(r40A9,r40AD);
          tensor[3] up140A7#1 = <tensor[3]>[r40AA,r40AC,r40AE];
          femData:MeshPos intermed40B8#4 = posMove40B9 (cPos3CD9,up140A7);
          femData:MeshPos callFindPos5073#2 = findPos3574 (_t3CC7,altCPos3CDB);
          int intPos5075#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5073);
          tensor[3] refPos5077#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5073);
          int ilit507A#3 = 10;
          int mulRes507B#10 = IMul(intPos5075,ilit507A);
          int idx507E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,mulRes507B);
          int addRes5080#1 = IAdd(mulRes507B,ilit3CF8);
          int idx5081#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5080);
          int addRes5083#1 = IAdd(mulRes507B,ilit3CFB);
          int idx5084#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5083);
          int addRes5086#1 = IAdd(mulRes507B,ilit3CFE);
          int idx5087#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5086);
          int addRes5089#1 = IAdd(mulRes507B,ilit3CF3);
          int idx508A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5089);
          int ilit508B#3 = 5;
          int addRes508C#1 = IAdd(mulRes507B,ilit508B);
          int idx508D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes508C);
          int ilit508E#3 = 6;
          int addRes508F#1 = IAdd(mulRes507B,ilit508E);
          int idx5090#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes508F);
          int ilit5091#3 = 7;
          int addRes5092#1 = IAdd(mulRes507B,ilit5091);
          int idx5093#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5092);
          int ilit5094#3 = 8;
          int addRes5095#1 = IAdd(mulRes507B,ilit5094);
          int idx5096#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5095);
          int ilit5097#3 = 9;
          int addRes5098#1 = IAdd(mulRes507B,ilit5097);
          int idx5099#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5098);
          int mulRes50C1#3 = IMul(ilit3CFE,idx507E);
          int addRes50C4#1 = IAdd(ilit3CF8,mulRes50C1);
          int addRes50C6#1 = IAdd(ilit3CFB,mulRes50C1);
          real dof_load50C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50C1);
          real dof_load50C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C4);
          real dof_load50C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C6);
          int mulRes50CC#3 = IMul(ilit3CFE,idx5081);
          int addRes50CE#1 = IAdd(ilit3CF8,mulRes50CC);
          int addRes50CF#1 = IAdd(ilit3CFB,mulRes50CC);
          real dof_load50D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50CC);
          real dof_load50D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CE);
          real dof_load50D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CF);
          int mulRes50D5#3 = IMul(ilit3CFE,idx5084);
          int addRes50D7#1 = IAdd(ilit3CF8,mulRes50D5);
          int addRes50D8#1 = IAdd(ilit3CFB,mulRes50D5);
          real dof_load50D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50D5);
          real dof_load50DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D7);
          real dof_load50DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D8);
          int mulRes50DE#3 = IMul(ilit3CFE,idx5087);
          int addRes50E0#1 = IAdd(ilit3CF8,mulRes50DE);
          int addRes50E1#1 = IAdd(ilit3CFB,mulRes50DE);
          real dof_load50E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50DE);
          real dof_load50E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E0);
          real dof_load50E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E1);
          int mulRes50E8#3 = IMul(ilit3CFE,idx508A);
          int addRes50EA#1 = IAdd(ilit3CF8,mulRes50E8);
          int addRes50EB#1 = IAdd(ilit3CFB,mulRes50E8);
          real dof_load50EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50E8);
          real dof_load50ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50EA);
          real dof_load50EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50EB);
          int mulRes50F2#3 = IMul(ilit3CFE,idx508D);
          int addRes50F4#1 = IAdd(ilit3CF8,mulRes50F2);
          int addRes50F5#1 = IAdd(ilit3CFB,mulRes50F2);
          real dof_load50F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50F2);
          real dof_load50F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F4);
          real dof_load50F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F5);
          int mulRes50FC#3 = IMul(ilit3CFE,idx5090);
          int addRes50FE#1 = IAdd(ilit3CF8,mulRes50FC);
          int addRes50FF#1 = IAdd(ilit3CFB,mulRes50FC);
          real dof_load5100#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50FC);
          real dof_load5101#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FE);
          real dof_load5102#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FF);
          int mulRes5106#3 = IMul(ilit3CFE,idx5093);
          int addRes5108#1 = IAdd(ilit3CF8,mulRes5106);
          int addRes5109#1 = IAdd(ilit3CFB,mulRes5106);
          real dof_load510A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5106);
          real dof_load510B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5108);
          real dof_load510C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5109);
          int mulRes5110#3 = IMul(ilit3CFE,idx5096);
          int addRes5112#1 = IAdd(ilit3CF8,mulRes5110);
          int addRes5113#1 = IAdd(ilit3CFB,mulRes5110);
          real dof_load5114#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5110);
          real dof_load5115#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5112);
          real dof_load5116#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5113);
          int mulRes511A#3 = IMul(ilit3CFE,idx5099);
          int addRes511C#1 = IAdd(ilit3CF8,mulRes511A);
          int addRes511D#1 = IAdd(ilit3CFB,mulRes511A);
          real dof_load511E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes511A);
          real dof_load511F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511C);
          real dof_load5120#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511D);
          real varAcc518A#5 = VIndex<3,0>(refPos5077);
          real varAcc518B#4 = VIndex<3,1>(refPos5077);
          real varAcc518C#4 = VIndex<3,2>(refPos5077);
          real coeff518D#9 = 0.2e1;
          real prod2518F#1 = RMul(varAcc518A,varAcc518A);
          real prod5192#2 = RMul(prod2518F,prod3D6D);
          real coeff5193#18 = 0.4e1;
          real prod5195#2 = RMul(varAcc518B,one3D6C);
          real prod5196#2 = RMul(varAcc518A,prod5195);
          real prod5198#2 = RMul(one3D6C,varAcc518C);
          real prod5199#2 = RMul(varAcc518A,prod5198);
          real coeff519A#9 = -0.3e1;
          real prod519B#3 = RMul(varAcc518A,prod3D6D);
          real prod2519C#1 = RMul(varAcc518B,varAcc518B);
          real prod519D#1 = RMul(prod2519C,one3D6C);
          real prod519E#2 = RMul(one3D6C,prod519D);
          real prod519F#1 = RMul(varAcc518B,varAcc518C);
          real prod51A0#2 = RMul(one3D6C,prod519F);
          real prod51A1#3 = RMul(one3D6C,prod5195);
          real prod251A2#1 = RMul(varAcc518C,varAcc518C);
          real prod51A3#1 = RMul(one3D6C,prod251A2);
          real prod51A4#2 = RMul(one3D6C,prod51A3);
          real prod51A5#3 = RMul(one3D6C,prod5198);
          real mult51A8#1 = RMul(coeff519A,prod51A5);
          real mult51A9#2 = RMul(coeff518D,prod51A4);
          real mult51AA#1 = RMul(coeff519A,prod51A1);
          real mult51AB#4 = RMul(coeff5193,prod51A0);
          real mult51AC#2 = RMul(coeff518D,prod519E);
          real mult51AD#1 = RMul(coeff519A,prod519B);
          real mult51AE#4 = RMul(coeff5193,prod5199);
          real mult51AF#4 = RMul(coeff5193,prod5196);
          real mult51B0#2 = RMul(coeff518D,prod5192);
          real sum51B1#1 = RAdd(mult51AF,mult51B0);
          real sum51B2#1 = RAdd(mult51AE,sum51B1);
          real sum51B3#1 = RAdd(mult51AD,sum51B2);
          real sum51B4#1 = RAdd(mult51AC,sum51B3);
          real sum51B5#1 = RAdd(mult51AB,sum51B4);
          real sum51B6#1 = RAdd(mult51AA,sum51B5);
          real sum51B7#1 = RAdd(mult51A9,sum51B6);
          real sum51B8#1 = RAdd(mult51A8,sum51B7);
          real sum51B9#3 = RAdd(mult3D76,sum51B8);
          real mult51BC#1 = RMul(coeff3D6A,prod519B);
          real sum51BD#3 = RAdd(mult51BC,mult51B0);
          real mult51BF#1 = RMul(coeff3D6A,prod51A1);
          real sum51C0#3 = RAdd(mult51BF,mult51AC);
          real mult51C2#1 = RMul(coeff3D6A,prod51A5);
          real sum51C3#3 = RAdd(mult51C2,mult51A9);
          real coeff51C5#18 = -0.4e1;
          real mult51C6#1 = RMul(coeff5193,prod51A5);
          real mult51C7#1 = RMul(coeff51C5,prod51A4);
          real mult51C8#2 = RMul(coeff51C5,prod51A0);
          real mult51C9#2 = RMul(coeff51C5,prod5199);
          real sum51CA#1 = RAdd(mult51C8,mult51C9);
          real sum51CB#1 = RAdd(mult51C7,sum51CA);
          real sum51CC#3 = RAdd(mult51C6,sum51CB);
          real mult51CE#1 = RMul(coeff5193,prod51A1);
          real mult51CF#1 = RMul(coeff51C5,prod519E);
          real mult51D0#2 = RMul(coeff51C5,prod5196);
          real sum51D1#1 = RAdd(mult51CF,mult51D0);
          real sum51D2#1 = RAdd(mult51C8,sum51D1);
          real sum51D3#3 = RAdd(mult51CE,sum51D2);
          real mult51D5#1 = RMul(coeff5193,prod519B);
          real mult51D6#1 = RMul(coeff51C5,prod5192);
          real sum51D7#1 = RAdd(mult51D0,mult51D6);
          real sum51D8#1 = RAdd(mult51C9,sum51D7);
          real sum51D9#3 = RAdd(mult51D5,sum51D8);
          real r5232#1 = RMul(dof_load50C7,sum51B9);
          real r5235#1 = RMul(dof_load50D0,sum51BD);
          real r5238#1 = RMul(dof_load50D9,sum51C0);
          real r523B#1 = RMul(dof_load50E2,sum51C3);
          real r523E#1 = RMul(dof_load50EC,mult51AB);
          real r5241#1 = RMul(dof_load50F6,mult51AE);
          real r5244#1 = RMul(dof_load5100,mult51AF);
          real r5247#1 = RMul(dof_load510A,sum51CC);
          real r524A#1 = RMul(dof_load5114,sum51D3);
          real r524D#1 = RMul(dof_load511E,sum51D9);
          real r524E#1 = RAdd(r5232,r5235);
          real r524F#1 = RAdd(r524E,r5238);
          real r5250#1 = RAdd(r524F,r523B);
          real r5251#1 = RAdd(r5250,r523E);
          real r5252#1 = RAdd(r5251,r5241);
          real r5253#1 = RAdd(r5252,r5244);
          real r5254#1 = RAdd(r5253,r5247);
          real r5255#1 = RAdd(r5254,r524A);
          real r5256#2 = RAdd(r5255,r524D);
          real r5258#1 = RMul(dof_load50C8,sum51B9);
          real r525A#1 = RMul(dof_load50D1,sum51BD);
          real r525C#1 = RMul(dof_load50DA,sum51C0);
          real r525E#1 = RMul(dof_load50E3,sum51C3);
          real r5260#1 = RMul(dof_load50ED,mult51AB);
          real r5262#1 = RMul(dof_load50F7,mult51AE);
          real r5264#1 = RMul(dof_load5101,mult51AF);
          real r5266#1 = RMul(dof_load510B,sum51CC);
          real r5268#1 = RMul(dof_load5115,sum51D3);
          real r526A#1 = RMul(dof_load511F,sum51D9);
          real r526B#1 = RAdd(r5258,r525A);
          real r526C#1 = RAdd(r526B,r525C);
          real r526D#1 = RAdd(r526C,r525E);
          real r526E#1 = RAdd(r526D,r5260);
          real r526F#1 = RAdd(r526E,r5262);
          real r5270#1 = RAdd(r526F,r5264);
          real r5271#1 = RAdd(r5270,r5266);
          real r5272#1 = RAdd(r5271,r5268);
          real r5273#2 = RAdd(r5272,r526A);
          real r5275#1 = RMul(dof_load50C9,sum51B9);
          real r5277#1 = RMul(dof_load50D2,sum51BD);
          real r5279#1 = RMul(dof_load50DB,sum51C0);
          real r527B#1 = RMul(dof_load50E4,sum51C3);
          real r527D#1 = RMul(dof_load50EE,mult51AB);
          real r527F#1 = RMul(dof_load50F8,mult51AE);
          real r5281#1 = RMul(dof_load5102,mult51AF);
          real r5283#1 = RMul(dof_load510C,sum51CC);
          real r5285#1 = RMul(dof_load5116,sum51D3);
          real r5287#1 = RMul(dof_load5120,sum51D9);
          real r5288#1 = RAdd(r5275,r5277);
          real r5289#1 = RAdd(r5288,r5279);
          real r528A#1 = RAdd(r5289,r527B);
          real r528B#1 = RAdd(r528A,r527D);
          real r528C#1 = RAdd(r528B,r527F);
          real r528D#1 = RAdd(r528C,r5281);
          real r528E#1 = RAdd(r528D,r5283);
          real r528F#1 = RAdd(r528E,r5285);
          real r5290#2 = RAdd(r528F,r5287);
          tensor[3] compositionl522F#2 = <tensor[3]>[r5256,r5273,r5290];
          real op1_e3_l_2052F4#1 = VDot<3>(compositionl522F,compositionl522F);
          real r52FA#1 = RMul(r40A9,r5256);
          real r52FC#1 = RMul(r40A9,r5273);
          real r52FE#1 = RMul(r40A9,r5290);
          real op1_e3_l_225308#1 = Sqrt(op1_e3_l_2052F4);
          real r530D#3 = RDiv(one3D6C,op1_e3_l_225308);
          real r530F#1 = RMul(r530D,r52FA);
          real r5311#1 = RMul(r530D,r52FC);
          real r5313#1 = RMul(r530D,r52FE);
          tensor[3] op1_e3_l_23530B#1 = <tensor[3]>[r530F,r5311,r5313];
          tensor[3] altIntermed531E#2 = VAdd<3>(altCPos3CDB,op1_e3_l_23530B);
          bool _t5321#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed40B8);
          bool _t5323#1 = BNot(_t5321);
          if _t5323 then goto ASSIGN5327 else goto ASSIGN59A1
        ASSIGN5327:  preds = [COND5325]
          bool _t5326#1 = true;
          goto JOIN532A
        JOIN532A:  preds = [ASSIGN5327,ASSIGN59A4]
          bool _t5328#1 = phi(_t5326,_t5329)
          if _t5328 then goto STABILIZE532C else goto JOIN532D
        STABILIZE532C:  preds = [COND532B]
          stabilize
          goto JOIN532D
        JOIN532D:  preds = [*STABILIZE532C,COND532B]
          if _t5321 then goto ASSIGN5330 else goto ASSIGN599E
        ASSIGN5330:  preds = [COND532E]
          femData:Mesh _t532F#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed40B8);
          int _t5331#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed40B8);
          femData:MeshCell c5333#1 = LoadFem<femData:MeshCell>(_t532F,_t5331);
          tensor[3] ref5335#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed40B8);
          int _t5337#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c5333);
          femData:FuncCell _t5339#2 = LoadFem<femData:FuncCell>(data3CCB,_t5337);
          femData:FemFunc _t533B#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t5339);
          femData:Space _t533D#10 = ExtractFem<femData:Space,femData:FemFunc>(_t533B);
          int _t533F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t5339);
          int mulRes5343#10 = IMul(_t533F,ilit507A);
          int idx5346#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,mulRes5343);
          int addRes5348#1 = IAdd(mulRes5343,ilit3CF8);
          int idx5349#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5348);
          int addRes534B#1 = IAdd(mulRes5343,ilit3CFB);
          int idx534C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes534B);
          int addRes534E#1 = IAdd(mulRes5343,ilit3CFE);
          int idx534F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes534E);
          int addRes5351#1 = IAdd(mulRes5343,ilit3CF3);
          int idx5352#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5351);
          int addRes5354#1 = IAdd(mulRes5343,ilit508B);
          int idx5355#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5354);
          int addRes5357#1 = IAdd(mulRes5343,ilit508E);
          int idx5358#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5357);
          int addRes535A#1 = IAdd(mulRes5343,ilit5091);
          int idx535B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes535A);
          int addRes535D#1 = IAdd(mulRes5343,ilit5094);
          int idx535E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes535D);
          int addRes5360#1 = IAdd(mulRes5343,ilit5097);
          int idx5361#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5360);
          int mulRes5389#3 = IMul(ilit3CFE,idx5346);
          int addRes538C#1 = IAdd(ilit3CF8,mulRes5389);
          int addRes538E#1 = IAdd(ilit3CFB,mulRes5389);
          real dof_load538F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes5389);
          real dof_load5390#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538C);
          real dof_load5391#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538E);
          int mulRes5394#3 = IMul(ilit3CFE,idx5349);
          int addRes5396#1 = IAdd(ilit3CF8,mulRes5394);
          int addRes5397#1 = IAdd(ilit3CFB,mulRes5394);
          real dof_load5398#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes5394);
          real dof_load5399#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5396);
          real dof_load539A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5397);
          int mulRes539D#3 = IMul(ilit3CFE,idx534C);
          int addRes539F#1 = IAdd(ilit3CF8,mulRes539D);
          int addRes53A0#1 = IAdd(ilit3CFB,mulRes539D);
          real dof_load53A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes539D);
          real dof_load53A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes539F);
          real dof_load53A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A0);
          int mulRes53A6#3 = IMul(ilit3CFE,idx534F);
          int addRes53A8#1 = IAdd(ilit3CF8,mulRes53A6);
          int addRes53A9#1 = IAdd(ilit3CFB,mulRes53A6);
          real dof_load53AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53A6);
          real dof_load53AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A8);
          real dof_load53AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A9);
          int mulRes53B0#3 = IMul(ilit3CFE,idx5352);
          int addRes53B2#1 = IAdd(ilit3CF8,mulRes53B0);
          int addRes53B3#1 = IAdd(ilit3CFB,mulRes53B0);
          real dof_load53B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53B0);
          real dof_load53B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B2);
          real dof_load53B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B3);
          int mulRes53BA#3 = IMul(ilit3CFE,idx5355);
          int addRes53BC#1 = IAdd(ilit3CF8,mulRes53BA);
          int addRes53BD#1 = IAdd(ilit3CFB,mulRes53BA);
          real dof_load53BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53BA);
          real dof_load53BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BC);
          real dof_load53C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BD);
          int mulRes53C4#3 = IMul(ilit3CFE,idx5358);
          int addRes53C6#1 = IAdd(ilit3CF8,mulRes53C4);
          int addRes53C7#1 = IAdd(ilit3CFB,mulRes53C4);
          real dof_load53C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53C4);
          real dof_load53C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C6);
          real dof_load53CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C7);
          int mulRes53CE#3 = IMul(ilit3CFE,idx535B);
          int addRes53D0#1 = IAdd(ilit3CF8,mulRes53CE);
          int addRes53D1#1 = IAdd(ilit3CFB,mulRes53CE);
          real dof_load53D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53CE);
          real dof_load53D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D0);
          real dof_load53D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D1);
          int mulRes53D8#3 = IMul(ilit3CFE,idx535E);
          int addRes53DA#1 = IAdd(ilit3CF8,mulRes53D8);
          int addRes53DB#1 = IAdd(ilit3CFB,mulRes53D8);
          real dof_load53DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53D8);
          real dof_load53DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53DA);
          real dof_load53DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53DB);
          int mulRes53E2#3 = IMul(ilit3CFE,idx5361);
          int addRes53E4#1 = IAdd(ilit3CF8,mulRes53E2);
          int addRes53E5#1 = IAdd(ilit3CFB,mulRes53E2);
          real dof_load53E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53E2);
          real dof_load53E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E4);
          real dof_load53E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E5);
          real varAcc5452#5 = VIndex<3,0>(ref5335);
          real varAcc5453#4 = VIndex<3,1>(ref5335);
          real varAcc5454#4 = VIndex<3,2>(ref5335);
          real prod25457#1 = RMul(varAcc5452,varAcc5452);
          real prod545A#2 = RMul(prod25457,prod3D6D);
          real prod545D#2 = RMul(varAcc5453,one3D6C);
          real prod545E#2 = RMul(varAcc5452,prod545D);
          real prod5460#2 = RMul(one3D6C,varAcc5454);
          real prod5461#2 = RMul(varAcc5452,prod5460);
          real prod5463#3 = RMul(varAcc5452,prod3D6D);
          real prod25464#1 = RMul(varAcc5453,varAcc5453);
          real prod5465#1 = RMul(prod25464,one3D6C);
          real prod5466#2 = RMul(one3D6C,prod5465);
          real prod5467#1 = RMul(varAcc5453,varAcc5454);
          real prod5468#2 = RMul(one3D6C,prod5467);
          real prod5469#3 = RMul(one3D6C,prod545D);
          real prod2546A#1 = RMul(varAcc5454,varAcc5454);
          real prod546B#1 = RMul(one3D6C,prod2546A);
          real prod546C#2 = RMul(one3D6C,prod546B);
          real prod546D#3 = RMul(one3D6C,prod5460);
          real mult5470#1 = RMul(coeff519A,prod546D);
          real mult5471#2 = RMul(coeff518D,prod546C);
          real mult5472#1 = RMul(coeff519A,prod5469);
          real mult5473#4 = RMul(coeff5193,prod5468);
          real mult5474#2 = RMul(coeff518D,prod5466);
          real mult5475#1 = RMul(coeff519A,prod5463);
          real mult5476#4 = RMul(coeff5193,prod5461);
          real mult5477#4 = RMul(coeff5193,prod545E);
          real mult5478#2 = RMul(coeff518D,prod545A);
          real sum5479#1 = RAdd(mult5477,mult5478);
          real sum547A#1 = RAdd(mult5476,sum5479);
          real sum547B#1 = RAdd(mult5475,sum547A);
          real sum547C#1 = RAdd(mult5474,sum547B);
          real sum547D#1 = RAdd(mult5473,sum547C);
          real sum547E#1 = RAdd(mult5472,sum547D);
          real sum547F#1 = RAdd(mult5471,sum547E);
          real sum5480#1 = RAdd(mult5470,sum547F);
          real sum5481#3 = RAdd(mult3D76,sum5480);
          real mult5484#1 = RMul(coeff3D6A,prod5463);
          real sum5485#3 = RAdd(mult5484,mult5478);
          real mult5487#1 = RMul(coeff3D6A,prod5469);
          real sum5488#3 = RAdd(mult5487,mult5474);
          real mult548A#1 = RMul(coeff3D6A,prod546D);
          real sum548B#3 = RAdd(mult548A,mult5471);
          real mult548E#1 = RMul(coeff5193,prod546D);
          real mult548F#1 = RMul(coeff51C5,prod546C);
          real mult5490#2 = RMul(coeff51C5,prod5468);
          real mult5491#2 = RMul(coeff51C5,prod5461);
          real sum5492#1 = RAdd(mult5490,mult5491);
          real sum5493#1 = RAdd(mult548F,sum5492);
          real sum5494#3 = RAdd(mult548E,sum5493);
          real mult5496#1 = RMul(coeff5193,prod5469);
          real mult5497#1 = RMul(coeff51C5,prod5466);
          real mult5498#2 = RMul(coeff51C5,prod545E);
          real sum5499#1 = RAdd(mult5497,mult5498);
          real sum549A#1 = RAdd(mult5490,sum5499);
          real sum549B#3 = RAdd(mult5496,sum549A);
          real mult549D#1 = RMul(coeff5193,prod5463);
          real mult549E#1 = RMul(coeff51C5,prod545A);
          real sum549F#1 = RAdd(mult5498,mult549E);
          real sum54A0#1 = RAdd(mult5491,sum549F);
          real sum54A1#3 = RAdd(mult549D,sum54A0);
          real r54FA#1 = RMul(dof_load538F,sum5481);
          real r54FD#1 = RMul(dof_load5398,sum5485);
          real r5500#1 = RMul(dof_load53A1,sum5488);
          real r5503#1 = RMul(dof_load53AA,sum548B);
          real r5506#1 = RMul(dof_load53B4,mult5473);
          real r5509#1 = RMul(dof_load53BE,mult5476);
          real r550C#1 = RMul(dof_load53C8,mult5477);
          real r550F#1 = RMul(dof_load53D2,sum5494);
          real r5512#1 = RMul(dof_load53DC,sum549B);
          real r5515#1 = RMul(dof_load53E6,sum54A1);
          real r5516#1 = RAdd(r54FA,r54FD);
          real r5517#1 = RAdd(r5516,r5500);
          real r5518#1 = RAdd(r5517,r5503);
          real r5519#1 = RAdd(r5518,r5506);
          real r551A#1 = RAdd(r5519,r5509);
          real r551B#1 = RAdd(r551A,r550C);
          real r551C#1 = RAdd(r551B,r550F);
          real r551D#1 = RAdd(r551C,r5512);
          real r551E#2 = RAdd(r551D,r5515);
          real r5520#1 = RMul(dof_load5390,sum5481);
          real r5522#1 = RMul(dof_load5399,sum5485);
          real r5524#1 = RMul(dof_load53A2,sum5488);
          real r5526#1 = RMul(dof_load53AB,sum548B);
          real r5528#1 = RMul(dof_load53B5,mult5473);
          real r552A#1 = RMul(dof_load53BF,mult5476);
          real r552C#1 = RMul(dof_load53C9,mult5477);
          real r552E#1 = RMul(dof_load53D3,sum5494);
          real r5530#1 = RMul(dof_load53DD,sum549B);
          real r5532#1 = RMul(dof_load53E7,sum54A1);
          real r5533#1 = RAdd(r5520,r5522);
          real r5534#1 = RAdd(r5533,r5524);
          real r5535#1 = RAdd(r5534,r5526);
          real r5536#1 = RAdd(r5535,r5528);
          real r5537#1 = RAdd(r5536,r552A);
          real r5538#1 = RAdd(r5537,r552C);
          real r5539#1 = RAdd(r5538,r552E);
          real r553A#1 = RAdd(r5539,r5530);
          real r553B#2 = RAdd(r553A,r5532);
          real r553D#1 = RMul(dof_load5391,sum5481);
          real r553F#1 = RMul(dof_load539A,sum5485);
          real r5541#1 = RMul(dof_load53A3,sum5488);
          real r5543#1 = RMul(dof_load53AC,sum548B);
          real r5545#1 = RMul(dof_load53B6,mult5473);
          real r5547#1 = RMul(dof_load53C0,mult5476);
          real r5549#1 = RMul(dof_load53CA,mult5477);
          real r554B#1 = RMul(dof_load53D4,sum5494);
          real r554D#1 = RMul(dof_load53DE,sum549B);
          real r554F#1 = RMul(dof_load53E8,sum54A1);
          real r5550#1 = RAdd(r553D,r553F);
          real r5551#1 = RAdd(r5550,r5541);
          real r5552#1 = RAdd(r5551,r5543);
          real r5553#1 = RAdd(r5552,r5545);
          real r5554#1 = RAdd(r5553,r5547);
          real r5555#1 = RAdd(r5554,r5549);
          real r5556#1 = RAdd(r5555,r554B);
          real r5557#1 = RAdd(r5556,r554D);
          real r5558#2 = RAdd(r5557,r554F);
          tensor[3] probe_l_854F7#2 = <tensor[3]>[r551E,r553B,r5558];
          real op1_e3_l_1155BC#1 = VDot<3>(probe_l_854F7,probe_l_854F7);
          real op1_e3_l_1255BF#1 = Sqrt(op1_e3_l_1155BC);
          real r55C4#3 = RDiv(one3D6C,op1_e3_l_1255BF);
          real r55C6#1 = RMul(r55C4,r551E);
          real r55C8#1 = RMul(r55C4,r553B);
          real r55CA#1 = RMul(r55C4,r5558);
          tensor[3] _t55C2#1 = <tensor[3]>[r55C6,r55C8,r55CA];
          goto JOIN55D7
        JOIN55D7:  preds = [ASSIGN55D4,ASSIGN599F]
          tensor[3] _t55D5#1 = phi(_t55C2,_t55D6)
          tensor[3] up255D8#1 = VScale<3>(stepSize3CCF,_t55D5);
          femData:MeshPos cPos55DB#6 = posMove40B9 (cPos3CD9,up255D8);
          femData:MeshPos callFindPos55DD#2 = findPos3574 (_t3CC7,altIntermed531E);
          int intPos55DF#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos55DD);
          tensor[3] refPos55E1#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos55DD);
          int mulRes55E5#10 = IMul(intPos55DF,ilit507A);
          int idx55E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,mulRes55E5);
          int addRes55EA#1 = IAdd(mulRes55E5,ilit3CF8);
          int idx55EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55EA);
          int addRes55ED#1 = IAdd(mulRes55E5,ilit3CFB);
          int idx55EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55ED);
          int addRes55F0#1 = IAdd(mulRes55E5,ilit3CFE);
          int idx55F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F0);
          int addRes55F3#1 = IAdd(mulRes55E5,ilit3CF3);
          int idx55F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F3);
          int addRes55F6#1 = IAdd(mulRes55E5,ilit508B);
          int idx55F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F6);
          int addRes55F9#1 = IAdd(mulRes55E5,ilit508E);
          int idx55FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F9);
          int addRes55FC#1 = IAdd(mulRes55E5,ilit5091);
          int idx55FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55FC);
          int addRes55FF#1 = IAdd(mulRes55E5,ilit5094);
          int idx5600#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55FF);
          int addRes5602#1 = IAdd(mulRes55E5,ilit5097);
          int idx5603#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5602);
          int mulRes562B#3 = IMul(ilit3CFE,idx55E8);
          int addRes562E#1 = IAdd(ilit3CF8,mulRes562B);
          int addRes5630#1 = IAdd(ilit3CFB,mulRes562B);
          real dof_load5631#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes562B);
          real dof_load5632#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes562E);
          real dof_load5633#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5630);
          int mulRes5636#3 = IMul(ilit3CFE,idx55EB);
          int addRes5638#1 = IAdd(ilit3CF8,mulRes5636);
          int addRes5639#1 = IAdd(ilit3CFB,mulRes5636);
          real dof_load563A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5636);
          real dof_load563B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5638);
          real dof_load563C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5639);
          int mulRes563F#3 = IMul(ilit3CFE,idx55EE);
          int addRes5641#1 = IAdd(ilit3CF8,mulRes563F);
          int addRes5642#1 = IAdd(ilit3CFB,mulRes563F);
          real dof_load5643#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes563F);
          real dof_load5644#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5641);
          real dof_load5645#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5642);
          int mulRes5648#3 = IMul(ilit3CFE,idx55F1);
          int addRes564A#1 = IAdd(ilit3CF8,mulRes5648);
          int addRes564B#1 = IAdd(ilit3CFB,mulRes5648);
          real dof_load564C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5648);
          real dof_load564D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes564A);
          real dof_load564E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes564B);
          int mulRes5652#3 = IMul(ilit3CFE,idx55F4);
          int addRes5654#1 = IAdd(ilit3CF8,mulRes5652);
          int addRes5655#1 = IAdd(ilit3CFB,mulRes5652);
          real dof_load5656#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5652);
          real dof_load5657#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5654);
          real dof_load5658#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5655);
          int mulRes565C#3 = IMul(ilit3CFE,idx55F7);
          int addRes565E#1 = IAdd(ilit3CF8,mulRes565C);
          int addRes565F#1 = IAdd(ilit3CFB,mulRes565C);
          real dof_load5660#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes565C);
          real dof_load5661#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565E);
          real dof_load5662#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565F);
          int mulRes5666#3 = IMul(ilit3CFE,idx55FA);
          int addRes5668#1 = IAdd(ilit3CF8,mulRes5666);
          int addRes5669#1 = IAdd(ilit3CFB,mulRes5666);
          real dof_load566A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5666);
          real dof_load566B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5668);
          real dof_load566C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5669);
          int mulRes5670#3 = IMul(ilit3CFE,idx55FD);
          int addRes5672#1 = IAdd(ilit3CF8,mulRes5670);
          int addRes5673#1 = IAdd(ilit3CFB,mulRes5670);
          real dof_load5674#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5670);
          real dof_load5675#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5672);
          real dof_load5676#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5673);
          int mulRes567A#3 = IMul(ilit3CFE,idx5600);
          int addRes567C#1 = IAdd(ilit3CF8,mulRes567A);
          int addRes567D#1 = IAdd(ilit3CFB,mulRes567A);
          real dof_load567E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes567A);
          real dof_load567F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567C);
          real dof_load5680#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567D);
          int mulRes5684#3 = IMul(ilit3CFE,idx5603);
          int addRes5686#1 = IAdd(ilit3CF8,mulRes5684);
          int addRes5687#1 = IAdd(ilit3CFB,mulRes5684);
          real dof_load5688#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5684);
          real dof_load5689#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5686);
          real dof_load568A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5687);
          real varAcc56F4#5 = VIndex<3,0>(refPos55E1);
          real varAcc56F5#4 = VIndex<3,1>(refPos55E1);
          real varAcc56F6#4 = VIndex<3,2>(refPos55E1);
          real prod256F9#1 = RMul(varAcc56F4,varAcc56F4);
          real prod56FC#2 = RMul(prod256F9,prod3D6D);
          real prod56FF#2 = RMul(varAcc56F5,one3D6C);
          real prod5700#2 = RMul(varAcc56F4,prod56FF);
          real prod5702#2 = RMul(one3D6C,varAcc56F6);
          real prod5703#2 = RMul(varAcc56F4,prod5702);
          real prod5705#3 = RMul(varAcc56F4,prod3D6D);
          real prod25706#1 = RMul(varAcc56F5,varAcc56F5);
          real prod5707#1 = RMul(prod25706,one3D6C);
          real prod5708#2 = RMul(one3D6C,prod5707);
          real prod5709#1 = RMul(varAcc56F5,varAcc56F6);
          real prod570A#2 = RMul(one3D6C,prod5709);
          real prod570B#3 = RMul(one3D6C,prod56FF);
          real prod2570C#1 = RMul(varAcc56F6,varAcc56F6);
          real prod570D#1 = RMul(one3D6C,prod2570C);
          real prod570E#2 = RMul(one3D6C,prod570D);
          real prod570F#3 = RMul(one3D6C,prod5702);
          real mult5712#1 = RMul(coeff519A,prod570F);
          real mult5713#2 = RMul(coeff518D,prod570E);
          real mult5714#1 = RMul(coeff519A,prod570B);
          real mult5715#4 = RMul(coeff5193,prod570A);
          real mult5716#2 = RMul(coeff518D,prod5708);
          real mult5717#1 = RMul(coeff519A,prod5705);
          real mult5718#4 = RMul(coeff5193,prod5703);
          real mult5719#4 = RMul(coeff5193,prod5700);
          real mult571A#2 = RMul(coeff518D,prod56FC);
          real sum571B#1 = RAdd(mult5719,mult571A);
          real sum571C#1 = RAdd(mult5718,sum571B);
          real sum571D#1 = RAdd(mult5717,sum571C);
          real sum571E#1 = RAdd(mult5716,sum571D);
          real sum571F#1 = RAdd(mult5715,sum571E);
          real sum5720#1 = RAdd(mult5714,sum571F);
          real sum5721#1 = RAdd(mult5713,sum5720);
          real sum5722#1 = RAdd(mult5712,sum5721);
          real sum5723#3 = RAdd(mult3D76,sum5722);
          real mult5726#1 = RMul(coeff3D6A,prod5705);
          real sum5727#3 = RAdd(mult5726,mult571A);
          real mult5729#1 = RMul(coeff3D6A,prod570B);
          real sum572A#3 = RAdd(mult5729,mult5716);
          real mult572C#1 = RMul(coeff3D6A,prod570F);
          real sum572D#3 = RAdd(mult572C,mult5713);
          real mult5730#1 = RMul(coeff5193,prod570F);
          real mult5731#1 = RMul(coeff51C5,prod570E);
          real mult5732#2 = RMul(coeff51C5,prod570A);
          real mult5733#2 = RMul(coeff51C5,prod5703);
          real sum5734#1 = RAdd(mult5732,mult5733);
          real sum5735#1 = RAdd(mult5731,sum5734);
          real sum5736#3 = RAdd(mult5730,sum5735);
          real mult5738#1 = RMul(coeff5193,prod570B);
          real mult5739#1 = RMul(coeff51C5,prod5708);
          real mult573A#2 = RMul(coeff51C5,prod5700);
          real sum573B#1 = RAdd(mult5739,mult573A);
          real sum573C#1 = RAdd(mult5732,sum573B);
          real sum573D#3 = RAdd(mult5738,sum573C);
          real mult573F#1 = RMul(coeff5193,prod5705);
          real mult5740#1 = RMul(coeff51C5,prod56FC);
          real sum5741#1 = RAdd(mult573A,mult5740);
          real sum5742#1 = RAdd(mult5733,sum5741);
          real sum5743#3 = RAdd(mult573F,sum5742);
          real r579C#1 = RMul(dof_load5631,sum5723);
          real r579F#1 = RMul(dof_load563A,sum5727);
          real r57A2#1 = RMul(dof_load5643,sum572A);
          real r57A5#1 = RMul(dof_load564C,sum572D);
          real r57A8#1 = RMul(dof_load5656,mult5715);
          real r57AB#1 = RMul(dof_load5660,mult5718);
          real r57AE#1 = RMul(dof_load566A,mult5719);
          real r57B1#1 = RMul(dof_load5674,sum5736);
          real r57B4#1 = RMul(dof_load567E,sum573D);
          real r57B7#1 = RMul(dof_load5688,sum5743);
          real r57B8#1 = RAdd(r579C,r579F);
          real r57B9#1 = RAdd(r57B8,r57A2);
          real r57BA#1 = RAdd(r57B9,r57A5);
          real r57BB#1 = RAdd(r57BA,r57A8);
          real r57BC#1 = RAdd(r57BB,r57AB);
          real r57BD#1 = RAdd(r57BC,r57AE);
          real r57BE#1 = RAdd(r57BD,r57B1);
          real r57BF#1 = RAdd(r57BE,r57B4);
          real r57C0#1 = RAdd(r57BF,r57B7);
          real r57C2#1 = RMul(dof_load5632,sum5723);
          real r57C4#1 = RMul(dof_load563B,sum5727);
          real r57C6#1 = RMul(dof_load5644,sum572A);
          real r57C8#1 = RMul(dof_load564D,sum572D);
          real r57CA#1 = RMul(dof_load5657,mult5715);
          real r57CC#1 = RMul(dof_load5661,mult5718);
          real r57CE#1 = RMul(dof_load566B,mult5719);
          real r57D0#1 = RMul(dof_load5675,sum5736);
          real r57D2#1 = RMul(dof_load567F,sum573D);
          real r57D4#1 = RMul(dof_load5689,sum5743);
          real r57D5#1 = RAdd(r57C2,r57C4);
          real r57D6#1 = RAdd(r57D5,r57C6);
          real r57D7#1 = RAdd(r57D6,r57C8);
          real r57D8#1 = RAdd(r57D7,r57CA);
          real r57D9#1 = RAdd(r57D8,r57CC);
          real r57DA#1 = RAdd(r57D9,r57CE);
          real r57DB#1 = RAdd(r57DA,r57D0);
          real r57DC#1 = RAdd(r57DB,r57D2);
          real r57DD#1 = RAdd(r57DC,r57D4);
          real r57DF#1 = RMul(dof_load5633,sum5723);
          real r57E1#1 = RMul(dof_load563C,sum5727);
          real r57E3#1 = RMul(dof_load5645,sum572A);
          real r57E5#1 = RMul(dof_load564E,sum572D);
          real r57E7#1 = RMul(dof_load5658,mult5715);
          real r57E9#1 = RMul(dof_load5662,mult5718);
          real r57EB#1 = RMul(dof_load566C,mult5719);
          real r57ED#1 = RMul(dof_load5676,sum5736);
          real r57EF#1 = RMul(dof_load5680,sum573D);
          real r57F1#1 = RMul(dof_load568A,sum5743);
          real r57F2#1 = RAdd(r57DF,r57E1);
          real r57F3#1 = RAdd(r57F2,r57E3);
          real r57F4#1 = RAdd(r57F3,r57E5);
          real r57F5#1 = RAdd(r57F4,r57E7);
          real r57F6#1 = RAdd(r57F5,r57E9);
          real r57F7#1 = RAdd(r57F6,r57EB);
          real r57F8#1 = RAdd(r57F7,r57ED);
          real r57F9#1 = RAdd(r57F8,r57EF);
          real r57FA#1 = RAdd(r57F9,r57F1);
          tensor[3] compositionl5799#3 = <tensor[3]>[r57C0,r57DD,r57FA];
          real op1_e3_l_19585E#1 = VDot<3>(compositionl5799,compositionl5799);
          tensor[3] op1_e3_l_205861#3 = VScale<3>(stepSize3CCF,compositionl5799);
          real op1_e3_l_215864#1 = Sqrt(op1_e3_l_19585E);
          real r5869#3 = RDiv(one3D6C,op1_e3_l_215864);
          real r586A#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_205861);
          real r586B#1 = RMul(r5869,r586A);
          real r586C#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_205861);
          real r586D#1 = RMul(r5869,r586C);
          real r586E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_205861);
          real r586F#1 = RMul(r5869,r586E);
          tensor[3] op1_e3_l_225867#1 = <tensor[3]>[r586B,r586D,r586F];
          tensor[3] altCPos587A#3 = VAdd<3>(altCPos3CDB,op1_e3_l_225867);
          bool _t587D#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos55DB);
          bool _t587F#1 = BNot(_t587D);
          if _t587F then goto MASSIGN5882 else goto JOIN5886
        MASSIGN5882:  preds = [COND5881]
          Print<[tensor[3][]]>(stream3CD3);
          self.cPos = cPos55DB;
          self.altCPos = altCPos587A;
          stabilize
          goto JOIN5886
        JOIN5886:  preds = [*STABILIZE5885,COND5881]
          tensor[3] _t5887#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos55DB);
          int _t5889#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos55DB);
          femData:Mesh _t588B#16 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos55DB);
          int mulRes588F#4 = IMul(_t5889,ilit3CF3);
          int idx5892#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,mulRes588F);
          int addRes5894#1 = IAdd(mulRes588F,ilit3CF8);
          int idx5895#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5894);
          int addRes5897#1 = IAdd(mulRes588F,ilit3CFB);
          int idx5898#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5897);
          int addRes589A#1 = IAdd(mulRes588F,ilit3CFE);
          int idx589B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes589A);
          int mulRes58B1#3 = IMul(ilit3CFE,idx5892);
          int addRes58B4#1 = IAdd(ilit3CF8,mulRes58B1);
          int addRes58B6#1 = IAdd(ilit3CFB,mulRes58B1);
          real dof_load58B7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58B1);
          real dof_load58B8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B4);
          real dof_load58B9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B6);
          int mulRes58BC#3 = IMul(ilit3CFE,idx5895);
          int addRes58BE#1 = IAdd(ilit3CF8,mulRes58BC);
          int addRes58BF#1 = IAdd(ilit3CFB,mulRes58BC);
          real dof_load58C0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58BC);
          real dof_load58C1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BE);
          real dof_load58C2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BF);
          int mulRes58C5#3 = IMul(ilit3CFE,idx5898);
          int addRes58C7#1 = IAdd(ilit3CF8,mulRes58C5);
          int addRes58C8#1 = IAdd(ilit3CFB,mulRes58C5);
          real dof_load58C9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58C5);
          real dof_load58CA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C7);
          real dof_load58CB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C8);
          int mulRes58CE#3 = IMul(ilit3CFE,idx589B);
          int addRes58D0#1 = IAdd(ilit3CF8,mulRes58CE);
          int addRes58D1#1 = IAdd(ilit3CFB,mulRes58CE);
          real dof_load58D2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58CE);
          real dof_load58D3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58D0);
          real dof_load58D4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58D1);
          real varAcc5902#1 = VIndex<3,0>(_t5887);
          real varAcc5903#1 = VIndex<3,1>(_t5887);
          real varAcc5904#1 = VIndex<3,2>(_t5887);
          real prod5909#2 = RMul(varAcc5902,prod3D6D);
          real prod590B#1 = RMul(varAcc5903,one3D6C);
          real prod590C#2 = RMul(one3D6C,prod590B);
          real prod590E#1 = RMul(one3D6C,varAcc5904);
          real prod590F#2 = RMul(one3D6C,prod590E);
          real mult5912#1 = RMul(coeff3D6A,prod590F);
          real mult5913#1 = RMul(coeff3D6A,prod590C);
          real mult5914#1 = RMul(coeff3D6A,prod5909);
          real sum5915#1 = RAdd(mult5913,mult5914);
          real sum5916#1 = RAdd(mult5912,sum5915);
          real sum5917#3 = RAdd(mult3D76,sum5916);
          real basisEval5919#3 = RMul(one3D6C,prod5909);
          real basisEval591A#3 = RMul(one3D6C,prod590C);
          real basisEval591B#3 = RMul(one3D6C,prod590F);
          real r593C#1 = RMul(dof_load58B7,sum5917);
          real r593F#1 = RMul(dof_load58C0,basisEval5919);
          real r5942#1 = RMul(dof_load58C9,basisEval591A);
          real r5945#1 = RMul(dof_load58D2,basisEval591B);
          real r5946#1 = RAdd(r593C,r593F);
          real r5947#1 = RAdd(r5946,r5942);
          real r5948#1 = RAdd(r5947,r5945);
          real r594A#1 = RMul(dof_load58B8,sum5917);
          real r594C#1 = RMul(dof_load58C1,basisEval5919);
          real r594E#1 = RMul(dof_load58CA,basisEval591A);
          real r5950#1 = RMul(dof_load58D3,basisEval591B);
          real r5951#1 = RAdd(r594A,r594C);
          real r5952#1 = RAdd(r5951,r594E);
          real r5953#1 = RAdd(r5952,r5950);
          real r5955#1 = RMul(dof_load58B9,sum5917);
          real r5957#1 = RMul(dof_load58C2,basisEval5919);
          real r5959#1 = RMul(dof_load58CB,basisEval591A);
          real r595B#1 = RMul(dof_load58D4,basisEval591B);
          real r595C#1 = RAdd(r5955,r5957);
          real r595D#1 = RAdd(r595C,r5959);
          real r595E#1 = RAdd(r595D,r595B);
          tensor[3] _t5939#1 = <tensor[3]>[r5948,r5953,r595E];
          tensor[3][1] _t5986#1 = <tensor[3][1]>{_t5939};
          tensor[3][] _t5988#1 = MkDynamic<tensor[3],1>(_t5986);
          tensor[3][] stream598A#1 = Concat<tensor[3]>(stream3CD3,_t5988);
          tensor[3][1] _t598C#1 = <tensor[3][1]>{altCPos587A};
          tensor[3][] _t598E#1 = MkDynamic<tensor[3],1>(_t598C);
          tensor[3][] newStream5990#1 = Concat<tensor[3]>(newStream3CD5,_t598E);
          int step5994#1 = IAdd(step3CD7,ilit3CF8);
          self.stream = stream598A;
          self.newStream = newStream5990;
          self.step = step5994;
          self.cPos = cPos55DB;
          self.altCPos = altCPos587A;
          active
        ASSIGN599E:  preds = [COND532E]
          real realLit599C#3 = 0.e0;
          tensor[3] _t55D6#1 = <tensor[3]>[realLit599C,realLit599C,realLit599C];
          goto JOIN55D7
        ASSIGN59A1:  preds = [COND5325]
          femData:MeshPos _t59A0#1 = findPos3574 (meshData3CCD,altIntermed531E);
          bool _t59A2#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t59A0);
          bool _t5329#1 = BNot(_t59A2);
          goto JOIN532A
        ASSIGN59A7:  preds = [COND3E03]
          real realLit59A5#3 = 0.e0;
          tensor[3] _t40A5#1 = <tensor[3]>[realLit59A5,realLit59A5,realLit59A5];
          goto JOIN40A6
        ASSIGN59AA:  preds = [COND3DF8]
          string _t59A9#1 = "fine in cell:";
          femData:MeshCell _t59AB#1 = LoadFem<femData:MeshCell>(_t3CF0,_t3CEE);
          string _t59AD#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t59A9,_t59AB,_t59AD);
          goto JOIN3E00
        ASSIGN59B1:  preds = [COND3CE3]
          femData:MeshPos _t59B0#1 = findPos3574 (meshData3CCD,altCPos3CDB);
          bool _t59B2#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t59B0);
          bool _t59B4#1 = BNot(_t59B2);
          if _t59B4 then goto ASSIGN59B8 else goto ASSIGN59BB
        ASSIGN59B8:  preds = [COND59B6]
          bool _t59B7#1 = true;
          goto JOIN59BA
        JOIN59BA:  preds = [ASSIGN59B8,ASSIGN59BB]
          bool _t3CE7#1 = phi(_t59B7,_t59B9)
          goto JOIN3CE8
        ASSIGN59BB:  preds = [COND59B6]
          bool _t59B9#1 = EQ<int>(step3CD7,stepMax3CD1);
          goto JOIN59BA
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY59BC:  preds = []
      tensor[3][] startPoints59BD#1 = globals.startPoints3524;
    FOREACH59C0:  preds = [ASSIGN59BE,NEXT59C2]
      foreach (x59BF in startPoints59BD) on exit goto RETURN59C3
      new gg(x59BF);
      goto FOREACH59C0
    RETURN59C3:  preds = [FOREACH59C0]
      return
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData351F (meshData) = <no-default>
  input 0space03AB_intermedateGlobal3520 (space) = <no-default>
  input 0data03AD_intermedateGlobal3521 (data) = <no-default>
  input timeSteps3522 (timeSteps) = <default>
  input timeEps3523 (timeEps) = <default>
  input startPoints3524 (startPoints) = <no-default>
  input stepSize3525 (stepSize) = <default>
  input stepMax3526 (stepMax) = <default>
  global femData:FemFunc data3527
  global femData:Mesh _t3528
  global femData:Space _tX3529
## functions
  function femData:MeshPos findPos3574 (femData:Mesh mesh3575#19, tensor[3] pos3576#3) {
    ENTRY3577:  preds = []
      real _t3578#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn357A#1 = <tensor[3]>[_t3578,_t3578,_t3578];
      int newtonInt357C#1 = 0;
      int[] yayCells357E#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3575,pos3576);
    FOREACH3581:  preds = [ASSIGN357F,NEXT3CB5]
      foreach (cellItter3580 in yayCells357E) on exit goto ASSIGN3CB7
      int _t3582#1 = 16;
      int[] _t3584#1 = Range(newtonInt357C,_t3582);
    FOREACH3587:  preds = [ASSIGN3585,NEXT3CB4]
      foreach (newtonItter3586 in _t3584) on exit goto NEXT3CB5
        tensor[3] xn3B56#4 = phi(xn357A,xn3C1A)
      int ilit3589#1 = 4;
      int mulRes358A#4 = IMul(cellItter3580,ilit3589);
      int idx358D#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,mulRes358A);
      int ilit358E#5 = 1;
      int addRes358F#1 = IAdd(mulRes358A,ilit358E);
      int idx3590#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes358F);
      int ilit3591#5 = 2;
      int addRes3592#1 = IAdd(mulRes358A,ilit3591);
      int idx3593#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes3592);
      int ilit3594#5 = 3;
      int addRes3595#1 = IAdd(mulRes358A,ilit3594);
      int idx3596#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes3595);
      int mulRes35AC#3 = IMul(ilit3594,idx358D);
      int addRes35AF#1 = IAdd(ilit358E,mulRes35AC);
      int addRes35B1#1 = IAdd(ilit3591,mulRes35AC);
      real dof_load35B2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35AC);
      real dof_load35B3#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35AF);
      real dof_load35B4#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B1);
      int mulRes35B7#3 = IMul(ilit3594,idx3590);
      int addRes35B9#1 = IAdd(ilit358E,mulRes35B7);
      int addRes35BA#1 = IAdd(ilit3591,mulRes35B7);
      real dof_load35BB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35B7);
      real dof_load35BC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B9);
      real dof_load35BD#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35BA);
      int mulRes35C0#3 = IMul(ilit3594,idx3593);
      int addRes35C2#1 = IAdd(ilit358E,mulRes35C0);
      int addRes35C3#1 = IAdd(ilit3591,mulRes35C0);
      real dof_load35C4#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35C0);
      real dof_load35C5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C2);
      real dof_load35C6#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C3);
      int mulRes35C9#3 = IMul(ilit3594,idx3596);
      int addRes35CB#1 = IAdd(ilit358E,mulRes35C9);
      int addRes35CC#1 = IAdd(ilit3591,mulRes35C9);
      real dof_load35CD#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35C9);
      real dof_load35CE#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CB);
      real dof_load35CF#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CC);
      real coeff3600#22 = -0.1e1;
      real one3601#33 = 0.1e1;
      real prod3602#2 = RMul(one3601,one3601);
      real prod3603#2 = RMul(one3601,prod3602);
      real basisEval3604#3 = RMul(coeff3600,prod3603);
      real basisEval3605#10 = RMul(one3601,prod3603);
      real basisEval3606#45 = 0.e0;
      real r361D#2 = RMul(dof_load35B2,basisEval3604);
      real r3620#1 = RMul(dof_load35BB,basisEval3605);
      real r3623#2 = RMul(dof_load35C4,basisEval3606);
      real r3626#2 = RMul(dof_load35CD,basisEval3606);
      real r3627#1 = RAdd(r361D,r3620);
      real r3628#1 = RAdd(r3627,r3623);
      real r3629#13 = RAdd(r3628,r3626);
      real r362D#1 = RMul(dof_load35BB,basisEval3606);
      real r362F#1 = RMul(dof_load35C4,basisEval3605);
      real r3632#2 = RAdd(r361D,r362D);
      real r3633#1 = RAdd(r3632,r362F);
      real r3634#13 = RAdd(r3633,r3626);
      real r363C#1 = RMul(dof_load35CD,basisEval3605);
      real r363E#1 = RAdd(r3632,r3623);
      real r363F#12 = RAdd(r363E,r363C);
      real r3642#2 = RMul(dof_load35B3,basisEval3604);
      real r3644#1 = RMul(dof_load35BC,basisEval3605);
      real r3646#2 = RMul(dof_load35C5,basisEval3606);
      real r3648#2 = RMul(dof_load35CE,basisEval3606);
      real r3649#1 = RAdd(r3642,r3644);
      real r364A#1 = RAdd(r3649,r3646);
      real r364B#13 = RAdd(r364A,r3648);
      real r364D#1 = RMul(dof_load35BC,basisEval3606);
      real r364E#1 = RMul(dof_load35C5,basisEval3605);
      real r3650#2 = RAdd(r3642,r364D);
      real r3651#1 = RAdd(r3650,r364E);
      real r3652#13 = RAdd(r3651,r3648);
      real r3656#1 = RMul(dof_load35CE,basisEval3605);
      real r3658#1 = RAdd(r3650,r3646);
      real r3659#12 = RAdd(r3658,r3656);
      real r365C#2 = RMul(dof_load35B4,basisEval3604);
      real r365E#1 = RMul(dof_load35BD,basisEval3605);
      real r3660#2 = RMul(dof_load35C6,basisEval3606);
      real r3662#2 = RMul(dof_load35CF,basisEval3606);
      real r3663#1 = RAdd(r365C,r365E);
      real r3664#1 = RAdd(r3663,r3660);
      real r3665#13 = RAdd(r3664,r3662);
      real r3667#1 = RMul(dof_load35BD,basisEval3606);
      real r3668#1 = RMul(dof_load35C6,basisEval3605);
      real r366A#2 = RAdd(r365C,r3667);
      real r366B#1 = RAdd(r366A,r3668);
      real r366C#13 = RAdd(r366B,r3662);
      real r3670#1 = RMul(dof_load35CF,basisEval3605);
      real r3672#1 = RAdd(r366A,r3660);
      real r3673#12 = RAdd(r3672,r3670);
      real r36D4#3 = RMul(basisEval3606,r3629);
      real r36D6#3 = RMul(basisEval3606,r364B);
      real r36D8#5 = RMul(basisEval3606,r3665);
      real r36D9#3 = RAdd(r36D4,r36D6);
      real r36DA#9 = RAdd(r36D9,r36D8);
      real r36DC#3 = RMul(basisEval3606,r3634);
      real r36DE#3 = RMul(basisEval3606,r3652);
      real r36E0#5 = RMul(basisEval3606,r366C);
      real r36E1#3 = RAdd(r36DC,r36DE);
      real r36E2#9 = RAdd(r36E1,r36E0);
      real r36E4#3 = RMul(basisEval3606,r363F);
      real r36E6#3 = RMul(basisEval3606,r3659);
      real r36E8#5 = RMul(basisEval3606,r3673);
      real r36E9#3 = RAdd(r36E4,r36E6);
      real r36EA#12 = RAdd(r36E9,r36E8);
      real r36ED#1 = RMul(coeff3600,r3665);
      real r36EE#3 = RAdd(r36D9,r36ED);
      real r36EF#1 = RMul(coeff3600,r366C);
      real r36F0#3 = RAdd(r36E1,r36EF);
      real r36F1#1 = RMul(coeff3600,r3673);
      real r36F2#4 = RAdd(r36E9,r36F1);
      real r36F5#1 = RMul(one3601,r364B);
      real r36F6#1 = RAdd(r36D4,r36F5);
      real r36F7#3 = RAdd(r36F6,r36D8);
      real r36F8#1 = RMul(one3601,r3652);
      real r36F9#1 = RAdd(r36DC,r36F8);
      real r36FA#3 = RAdd(r36F9,r36E0);
      real r36FB#1 = RMul(one3601,r3659);
      real r36FC#1 = RAdd(r36E4,r36FB);
      real r36FD#4 = RAdd(r36FC,r36E8);
      real r3700#1 = RMul(one3601,r3665);
      real r3701#3 = RAdd(r36D9,r3700);
      real r3702#1 = RMul(one3601,r366C);
      real r3703#3 = RAdd(r36E1,r3702);
      real r3704#1 = RMul(one3601,r3673);
      real r3705#4 = RAdd(r36E9,r3704);
      real r3707#1 = RMul(coeff3600,r3629);
      real r3708#1 = RAdd(r3707,r36D6);
      real r3709#3 = RAdd(r3708,r36D8);
      real r370A#1 = RMul(coeff3600,r3634);
      real r370B#1 = RAdd(r370A,r36DE);
      real r370C#3 = RAdd(r370B,r36E0);
      real r370D#1 = RMul(coeff3600,r363F);
      real r370E#1 = RAdd(r370D,r36E6);
      real r370F#4 = RAdd(r370E,r36E8);
      real r3712#1 = RMul(coeff3600,r364B);
      real r3713#1 = RAdd(r36D4,r3712);
      real r3714#3 = RAdd(r3713,r36D8);
      real r3715#1 = RMul(coeff3600,r3652);
      real r3716#1 = RAdd(r36DC,r3715);
      real r3717#3 = RAdd(r3716,r36E0);
      real r3718#1 = RMul(coeff3600,r3659);
      real r3719#1 = RAdd(r36E4,r3718);
      real r371A#4 = RAdd(r3719,r36E8);
      real r371C#1 = RMul(one3601,r3629);
      real r371D#1 = RAdd(r371C,r36D6);
      real r371E#3 = RAdd(r371D,r36D8);
      real r371F#1 = RMul(one3601,r3634);
      real r3720#1 = RAdd(r371F,r36DE);
      real r3721#3 = RAdd(r3720,r36E0);
      real r3722#1 = RMul(one3601,r363F);
      real r3723#1 = RAdd(r3722,r36E6);
      real r3724#4 = RAdd(r3723,r36E8);
      real r3781#1 = RMul(r3629,r36DA);
      real r3784#1 = RMul(r364B,r3701);
      real r3787#1 = RMul(r3665,r3714);
      real r3788#1 = RAdd(r3781,r3784);
      real r3789#1 = RAdd(r3788,r3787);
      real r378B#1 = RMul(r3629,r36E2);
      real r378D#1 = RMul(r364B,r3703);
      real r378F#1 = RMul(r3665,r3717);
      real r3790#1 = RAdd(r378B,r378D);
      real r3791#2 = RAdd(r3790,r378F);
      real r3793#1 = RMul(r3629,r36EA);
      real r3795#1 = RMul(r364B,r3705);
      real r3797#1 = RMul(r3665,r371A);
      real r3798#1 = RAdd(r3793,r3795);
      real r3799#2 = RAdd(r3798,r3797);
      real r379C#1 = RMul(r3629,r36EE);
      real r379E#1 = RMul(r364B,r36DA);
      real r37A0#1 = RMul(r3665,r371E);
      real r37A1#1 = RAdd(r379C,r379E);
      real r37A2#1 = RAdd(r37A1,r37A0);
      real r37A4#1 = RMul(r3629,r36F0);
      real r37A6#1 = RMul(r364B,r36E2);
      real r37A8#1 = RMul(r3665,r3721);
      real r37A9#1 = RAdd(r37A4,r37A6);
      real r37AA#2 = RAdd(r37A9,r37A8);
      real r37AC#1 = RMul(r3629,r36F2);
      real r37AE#1 = RMul(r364B,r36EA);
      real r37B0#1 = RMul(r3665,r3724);
      real r37B1#1 = RAdd(r37AC,r37AE);
      real r37B2#2 = RAdd(r37B1,r37B0);
      real r37B5#1 = RMul(r3629,r36F7);
      real r37B7#1 = RMul(r364B,r3709);
      real r37B9#1 = RMul(r3665,r36DA);
      real r37BA#1 = RAdd(r37B5,r37B7);
      real r37BB#1 = RAdd(r37BA,r37B9);
      real r37BD#1 = RMul(r3629,r36FA);
      real r37BF#1 = RMul(r364B,r370C);
      real r37C1#1 = RMul(r3665,r36E2);
      real r37C2#1 = RAdd(r37BD,r37BF);
      real r37C3#2 = RAdd(r37C2,r37C1);
      real r37C5#1 = RMul(r3629,r36FD);
      real r37C7#1 = RMul(r364B,r370F);
      real r37C9#1 = RMul(r3665,r36EA);
      real r37CA#1 = RAdd(r37C5,r37C7);
      real r37CB#2 = RAdd(r37CA,r37C9);
      real r37CF#1 = RMul(r3634,r36DA);
      real r37D1#1 = RMul(r3652,r3701);
      real r37D3#1 = RMul(r366C,r3714);
      real r37D4#1 = RAdd(r37CF,r37D1);
      real r37D5#2 = RAdd(r37D4,r37D3);
      real r37D6#1 = RMul(r3634,r36E2);
      real r37D7#1 = RMul(r3652,r3703);
      real r37D8#1 = RMul(r366C,r3717);
      real r37D9#1 = RAdd(r37D6,r37D7);
      real r37DA#1 = RAdd(r37D9,r37D8);
      real r37DB#1 = RMul(r3634,r36EA);
      real r37DC#1 = RMul(r3652,r3705);
      real r37DD#1 = RMul(r366C,r371A);
      real r37DE#1 = RAdd(r37DB,r37DC);
      real r37DF#2 = RAdd(r37DE,r37DD);
      real r37E1#1 = RMul(r3634,r36EE);
      real r37E2#1 = RMul(r3652,r36DA);
      real r37E3#1 = RMul(r366C,r371E);
      real r37E4#1 = RAdd(r37E1,r37E2);
      real r37E5#2 = RAdd(r37E4,r37E3);
      real r37E6#1 = RMul(r3634,r36F0);
      real r37E7#1 = RMul(r3652,r36E2);
      real r37E8#1 = RMul(r366C,r3721);
      real r37E9#1 = RAdd(r37E6,r37E7);
      real r37EA#1 = RAdd(r37E9,r37E8);
      real r37EB#1 = RMul(r3634,r36F2);
      real r37EC#1 = RMul(r3652,r36EA);
      real r37ED#1 = RMul(r366C,r3724);
      real r37EE#1 = RAdd(r37EB,r37EC);
      real r37EF#2 = RAdd(r37EE,r37ED);
      real r37F1#1 = RMul(r3634,r36F7);
      real r37F2#1 = RMul(r3652,r3709);
      real r37F3#1 = RMul(r366C,r36DA);
      real r37F4#1 = RAdd(r37F1,r37F2);
      real r37F5#2 = RAdd(r37F4,r37F3);
      real r37F6#1 = RMul(r3634,r36FA);
      real r37F7#1 = RMul(r3652,r370C);
      real r37F8#1 = RMul(r366C,r36E2);
      real r37F9#1 = RAdd(r37F6,r37F7);
      real r37FA#1 = RAdd(r37F9,r37F8);
      real r37FB#1 = RMul(r3634,r36FD);
      real r37FC#1 = RMul(r3652,r370F);
      real r37FD#1 = RMul(r366C,r36EA);
      real r37FE#1 = RAdd(r37FB,r37FC);
      real r37FF#2 = RAdd(r37FE,r37FD);
      real r3803#1 = RMul(r363F,r36DA);
      real r3805#1 = RMul(r3659,r3701);
      real r3807#1 = RMul(r3673,r3714);
      real r3808#1 = RAdd(r3803,r3805);
      real r3809#2 = RAdd(r3808,r3807);
      real r380A#1 = RMul(r363F,r36E2);
      real r380B#1 = RMul(r3659,r3703);
      real r380C#1 = RMul(r3673,r3717);
      real r380D#1 = RAdd(r380A,r380B);
      real r380E#2 = RAdd(r380D,r380C);
      real r380F#1 = RMul(r363F,r36EA);
      real r3810#1 = RMul(r3659,r3705);
      real r3811#1 = RMul(r3673,r371A);
      real r3812#1 = RAdd(r380F,r3810);
      real r3813#1 = RAdd(r3812,r3811);
      real r3815#1 = RMul(r363F,r36EE);
      real r3816#1 = RMul(r3659,r36DA);
      real r3817#1 = RMul(r3673,r371E);
      real r3818#1 = RAdd(r3815,r3816);
      real r3819#2 = RAdd(r3818,r3817);
      real r381A#1 = RMul(r363F,r36F0);
      real r381B#1 = RMul(r3659,r36E2);
      real r381C#1 = RMul(r3673,r3721);
      real r381D#1 = RAdd(r381A,r381B);
      real r381E#2 = RAdd(r381D,r381C);
      real r381F#1 = RMul(r363F,r36F2);
      real r3820#1 = RMul(r3659,r36EA);
      real r3821#1 = RMul(r3673,r3724);
      real r3822#1 = RAdd(r381F,r3820);
      real r3823#1 = RAdd(r3822,r3821);
      real r3825#1 = RMul(r363F,r36F7);
      real r3826#1 = RMul(r3659,r3709);
      real r3827#1 = RMul(r3673,r36DA);
      real r3828#1 = RAdd(r3825,r3826);
      real r3829#2 = RAdd(r3828,r3827);
      real r382A#1 = RMul(r363F,r36FA);
      real r382B#1 = RMul(r3659,r370C);
      real r382C#1 = RMul(r3673,r36E2);
      real r382D#1 = RAdd(r382A,r382B);
      real r382E#2 = RAdd(r382D,r382C);
      real r382F#1 = RMul(r363F,r36FD);
      real r3830#1 = RMul(r3659,r370F);
      real r3831#1 = RMul(r3673,r36EA);
      real r3832#1 = RAdd(r382F,r3830);
      real r3833#1 = RAdd(r3832,r3831);
      tensor[3] probe_l_1438EF#1 = <tensor[3]>[r3629,r364B,r3665];
      tensor[3] probe_l_15393C#3 = <tensor[3]>[r3634,r3652,r366C];
      tensor[3] tensor39E7#1 = <tensor[3]>[r36EA,r3705,r371A];
      tensor[3] tensor39ED#1 = <tensor[3]>[r36F2,r36EA,r3724];
      tensor[3] tensor39F4#1 = <tensor[3]>[r36FD,r370F,r36EA];
      real vdot3A17#1 = VDot<3>(probe_l_15393C,tensor39E7);
      real vdot3A19#1 = VDot<3>(probe_l_15393C,tensor39ED);
      real vdot3A1B#1 = VDot<3>(probe_l_15393C,tensor39F4);
      tensor[3] op1_e3_l_183A15#1 = <tensor[3]>[vdot3A17,vdot3A19,vdot3A1B];
      real op1_e3_l_193A24#1 = VDot<3>(probe_l_1438EF,op1_e3_l_183A15);
      real r3A2A#2 = RMul(basisEval3606,r3789);
      real r3A2C#1 = RMul(basisEval3606,r3791);
      real r3A2E#2 = RMul(basisEval3606,r3799);
      real r3A30#2 = RMul(basisEval3606,r37D5);
      real r3A32#3 = RMul(basisEval3606,r37DA);
      real r3A35#1 = RMul(one3601,r37DF);
      real r3A37#2 = RMul(basisEval3606,r3809);
      real r3A3A#1 = RMul(coeff3600,r380E);
      real r3A3C#3 = RMul(basisEval3606,r3813);
      real r3A3D#2 = RAdd(r3A2A,r3A2C);
      real r3A3E#1 = RAdd(r3A3D,r3A2E);
      real r3A3F#1 = RAdd(r3A3E,r3A30);
      real r3A40#1 = RAdd(r3A3F,r3A32);
      real r3A41#1 = RAdd(r3A40,r3A35);
      real r3A42#1 = RAdd(r3A41,r3A37);
      real r3A43#1 = RAdd(r3A42,r3A3A);
      real r3A44#1 = RAdd(r3A43,r3A3C);
      real r3A46#2 = RMul(basisEval3606,r37A2);
      real r3A48#1 = RMul(basisEval3606,r37AA);
      real r3A4A#2 = RMul(basisEval3606,r37B2);
      real r3A4C#2 = RMul(basisEval3606,r37E5);
      real r3A4E#3 = RMul(basisEval3606,r37EA);
      real r3A50#1 = RMul(one3601,r37EF);
      real r3A52#2 = RMul(basisEval3606,r3819);
      real r3A54#1 = RMul(coeff3600,r381E);
      real r3A56#3 = RMul(basisEval3606,r3823);
      real r3A57#2 = RAdd(r3A46,r3A48);
      real r3A58#1 = RAdd(r3A57,r3A4A);
      real r3A59#1 = RAdd(r3A58,r3A4C);
      real r3A5A#1 = RAdd(r3A59,r3A4E);
      real r3A5B#1 = RAdd(r3A5A,r3A50);
      real r3A5C#1 = RAdd(r3A5B,r3A52);
      real r3A5D#1 = RAdd(r3A5C,r3A54);
      real r3A5E#1 = RAdd(r3A5D,r3A56);
      real r3A60#2 = RMul(basisEval3606,r37BB);
      real r3A62#1 = RMul(basisEval3606,r37C3);
      real r3A64#2 = RMul(basisEval3606,r37CB);
      real r3A66#2 = RMul(basisEval3606,r37F5);
      real r3A68#3 = RMul(basisEval3606,r37FA);
      real r3A6A#1 = RMul(one3601,r37FF);
      real r3A6C#2 = RMul(basisEval3606,r3829);
      real r3A6E#1 = RMul(coeff3600,r382E);
      real r3A70#3 = RMul(basisEval3606,r3833);
      real r3A71#2 = RAdd(r3A60,r3A62);
      real r3A72#1 = RAdd(r3A71,r3A64);
      real r3A73#1 = RAdd(r3A72,r3A66);
      real r3A74#1 = RAdd(r3A73,r3A68);
      real r3A75#1 = RAdd(r3A74,r3A6A);
      real r3A76#1 = RAdd(r3A75,r3A6C);
      real r3A77#1 = RAdd(r3A76,r3A6E);
      real r3A78#1 = RAdd(r3A77,r3A70);
      real r3A7A#1 = RMul(coeff3600,r3799);
      real r3A7B#2 = RMul(basisEval3606,r37DF);
      real r3A7C#1 = RMul(one3601,r3809);
      real r3A7D#2 = RMul(basisEval3606,r380E);
      real r3A7E#1 = RAdd(r3A3D,r3A7A);
      real r3A7F#1 = RAdd(r3A7E,r3A30);
      real r3A80#1 = RAdd(r3A7F,r3A32);
      real r3A81#1 = RAdd(r3A80,r3A7B);
      real r3A82#1 = RAdd(r3A81,r3A7C);
      real r3A83#1 = RAdd(r3A82,r3A7D);
      real r3A84#1 = RAdd(r3A83,r3A3C);
      real r3A85#1 = RMul(coeff3600,r37B2);
      real r3A86#2 = RMul(basisEval3606,r37EF);
      real r3A87#1 = RMul(one3601,r3819);
      real r3A88#2 = RMul(basisEval3606,r381E);
      real r3A89#1 = RAdd(r3A57,r3A85);
      real r3A8A#1 = RAdd(r3A89,r3A4C);
      real r3A8B#1 = RAdd(r3A8A,r3A4E);
      real r3A8C#1 = RAdd(r3A8B,r3A86);
      real r3A8D#1 = RAdd(r3A8C,r3A87);
      real r3A8E#1 = RAdd(r3A8D,r3A88);
      real r3A8F#1 = RAdd(r3A8E,r3A56);
      real r3A90#1 = RMul(coeff3600,r37CB);
      real r3A91#2 = RMul(basisEval3606,r37FF);
      real r3A92#1 = RMul(one3601,r3829);
      real r3A93#2 = RMul(basisEval3606,r382E);
      real r3A94#1 = RAdd(r3A71,r3A90);
      real r3A95#1 = RAdd(r3A94,r3A66);
      real r3A96#1 = RAdd(r3A95,r3A68);
      real r3A97#1 = RAdd(r3A96,r3A91);
      real r3A98#1 = RAdd(r3A97,r3A92);
      real r3A99#1 = RAdd(r3A98,r3A93);
      real r3A9A#1 = RAdd(r3A99,r3A70);
      real r3A9C#1 = RMul(one3601,r3791);
      real r3A9D#1 = RMul(coeff3600,r37D5);
      real r3A9E#1 = RAdd(r3A2A,r3A9C);
      real r3A9F#1 = RAdd(r3A9E,r3A2E);
      real r3AA0#1 = RAdd(r3A9F,r3A9D);
      real r3AA1#1 = RAdd(r3AA0,r3A32);
      real r3AA2#1 = RAdd(r3AA1,r3A7B);
      real r3AA3#1 = RAdd(r3AA2,r3A37);
      real r3AA4#1 = RAdd(r3AA3,r3A7D);
      real r3AA5#1 = RAdd(r3AA4,r3A3C);
      real r3AA6#1 = RMul(one3601,r37AA);
      real r3AA7#1 = RMul(coeff3600,r37E5);
      real r3AA8#1 = RAdd(r3A46,r3AA6);
      real r3AA9#1 = RAdd(r3AA8,r3A4A);
      real r3AAA#1 = RAdd(r3AA9,r3AA7);
      real r3AAB#1 = RAdd(r3AAA,r3A4E);
      real r3AAC#1 = RAdd(r3AAB,r3A86);
      real r3AAD#1 = RAdd(r3AAC,r3A52);
      real r3AAE#1 = RAdd(r3AAD,r3A88);
      real r3AAF#1 = RAdd(r3AAE,r3A56);
      real r3AB0#1 = RMul(one3601,r37C3);
      real r3AB1#1 = RMul(coeff3600,r37F5);
      real r3AB2#1 = RAdd(r3A60,r3AB0);
      real r3AB3#1 = RAdd(r3AB2,r3A64);
      real r3AB4#1 = RAdd(r3AB3,r3AB1);
      real r3AB5#1 = RAdd(r3AB4,r3A68);
      real r3AB6#1 = RAdd(r3AB5,r3A91);
      real r3AB7#1 = RAdd(r3AB6,r3A6C);
      real r3AB8#1 = RAdd(r3AB7,r3A93);
      real r3AB9#1 = RAdd(r3AB8,r3A70);
      real realLit3B51#1 = 0.2e1;
      real op1_e3_l_213B50#9 = RMul(realLit3B51,op1_e3_l_193A24);
      real varAcc3B57#1 = VIndex<3,0>(xn3B56);
      real varAcc3B58#1 = VIndex<3,1>(xn3B56);
      real varAcc3B59#1 = VIndex<3,2>(xn3B56);
      real prod3B5E#2 = RMul(varAcc3B57,prod3602);
      real prod3B60#1 = RMul(varAcc3B58,one3601);
      real prod3B61#2 = RMul(one3601,prod3B60);
      real prod3B63#1 = RMul(one3601,varAcc3B59);
      real prod3B64#2 = RMul(one3601,prod3B63);
      real mult3B67#1 = RMul(coeff3600,prod3B64);
      real mult3B68#1 = RMul(coeff3600,prod3B61);
      real mult3B69#1 = RMul(coeff3600,prod3B5E);
      real sum3B6A#1 = RAdd(mult3B68,mult3B69);
      real sum3B6B#1 = RAdd(mult3B67,sum3B6A);
      real sum3B6C#3 = RAdd(basisEval3605,sum3B6B);
      real basisEval3B6E#3 = RMul(one3601,prod3B5E);
      real basisEval3B6F#3 = RMul(one3601,prod3B61);
      real basisEval3B70#3 = RMul(one3601,prod3B64);
      real r3B91#1 = RMul(dof_load35B2,sum3B6C);
      real r3B94#1 = RMul(dof_load35BB,basisEval3B6E);
      real r3B97#1 = RMul(dof_load35C4,basisEval3B6F);
      real r3B9A#1 = RMul(dof_load35CD,basisEval3B70);
      real r3B9B#1 = RAdd(r3B91,r3B94);
      real r3B9C#1 = RAdd(r3B9B,r3B97);
      real r3B9D#1 = RAdd(r3B9C,r3B9A);
      real r3B9F#1 = RMul(dof_load35B3,sum3B6C);
      real r3BA1#1 = RMul(dof_load35BC,basisEval3B6E);
      real r3BA3#1 = RMul(dof_load35C5,basisEval3B6F);
      real r3BA5#1 = RMul(dof_load35CE,basisEval3B70);
      real r3BA6#1 = RAdd(r3B9F,r3BA1);
      real r3BA7#1 = RAdd(r3BA6,r3BA3);
      real r3BA8#1 = RAdd(r3BA7,r3BA5);
      real r3BAA#1 = RMul(dof_load35B4,sum3B6C);
      real r3BAC#1 = RMul(dof_load35BD,basisEval3B6E);
      real r3BAE#1 = RMul(dof_load35C6,basisEval3B6F);
      real r3BB0#1 = RMul(dof_load35CF,basisEval3B70);
      real r3BB1#1 = RAdd(r3BAA,r3BAC);
      real r3BB2#1 = RAdd(r3BB1,r3BAE);
      real r3BB3#1 = RAdd(r3BB2,r3BB0);
      tensor[3] probe_l_223B8E#1 = <tensor[3]>[r3B9D,r3BA8,r3BB3];
      real r3BDD#1 = RDiv(r3A44,op1_e3_l_213B50);
      real r3BDF#1 = RDiv(r3A5E,op1_e3_l_213B50);
      real r3BE1#1 = RDiv(r3A78,op1_e3_l_213B50);
      tensor[3] tensor3BE2#1 = <tensor[3]>[r3BDD,r3BDF,r3BE1];
      real r3BE4#1 = RDiv(r3A84,op1_e3_l_213B50);
      real r3BE6#1 = RDiv(r3A8F,op1_e3_l_213B50);
      real r3BE8#1 = RDiv(r3A9A,op1_e3_l_213B50);
      tensor[3] tensor3BE9#1 = <tensor[3]>[r3BE4,r3BE6,r3BE8];
      real r3BEB#1 = RDiv(r3AA5,op1_e3_l_213B50);
      real r3BED#1 = RDiv(r3AAF,op1_e3_l_213B50);
      real r3BEF#1 = RDiv(r3AB9,op1_e3_l_213B50);
      tensor[3] tensor3BF0#1 = <tensor[3]>[r3BEB,r3BED,r3BEF];
      tensor[3] op1_e3_l_243C08#3 = VSub<3>(probe_l_223B8E,pos3576);
      real vdot3C0D#1 = VDot<3>(tensor3BE2,op1_e3_l_243C08);
      real vdot3C0F#1 = VDot<3>(tensor3BE9,op1_e3_l_243C08);
      real vdot3C11#1 = VDot<3>(tensor3BF0,op1_e3_l_243C08);
      tensor[3] op1_e3_l_253C0B#3 = <tensor[3]>[vdot3C0D,vdot3C0F,vdot3C11];
      tensor[3] xn3C1A#4 = VSub<3>(xn3B56,op1_e3_l_253C0B);
      real _t3C1D#2 = 0.1e-7;
      real _t3C1F#1 = RMul(_t3C1D,_t3C1D);
      real _t3C81#1 = VDot<3>(op1_e3_l_253C0B,op1_e3_l_253C0B);
      bool _t3C84#1 = GTE<real>(_t3C1F,_t3C81);
      if _t3C84 then goto ASSIGN3C8A else goto JOIN3CB3
    ASSIGN3C8A:  preds = [COND3C86]
      real _t3C89#4 = 0.1e-8;
      real _t3C8B#1 = RAdd(one3601,_t3C89);
      tensor[3] _t3C8E#1 = <tensor[3]>[one3601,one3601,one3601];
      real _t3C90#1 = VDot<3>(_t3C8E,xn3C1A);
      bool _t3C93#1 = GT<real>(_t3C8B,_t3C90);
      tensor[3] _t3C95#1 = <tensor[3]>[_t3C89,_t3C89,_t3C89];
      tensor[3] _t3C97#3 = VAdd<3>(_t3C95,xn3C1A);
      real _t3C9A#1 = VIndex<3,0>(_t3C97);
      real _t3C9C#3 = -0.e0;
      bool _t3C9E#1 = GT<real>(_t3C9A,_t3C9C);
      real _t3CA0#1 = VIndex<3,1>(_t3C97);
      bool _t3CA2#1 = GT<real>(_t3CA0,_t3C9C);
      real _t3CA4#1 = VIndex<3,2>(_t3C97);
      bool _t3CA6#1 = GT<real>(_t3CA4,_t3C9C);
      bool _t3CA8#1 = BAnd(_t3CA2,_t3CA6);
      bool _t3CAA#1 = BAnd(_t3C9E,_t3CA8);
      bool _t3CAC#1 = BAnd(_t3C93,_t3CAA);
      if _t3CAC then goto ASSIGN3CB0 else goto JOIN3CB2
    ASSIGN3CB0:  preds = [COND3CAE]
      femData:MeshPos _t3CAF#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3575,cellItter3580,xn3C1A,pos3576);
      return _t3CAF
      goto JOIN3CB2
    JOIN3CB2:  preds = [*RETURN(_t3CAF)3CB1,COND3CAE]
      goto JOIN3CB3
    JOIN3CB3:  preds = [JOIN3CB2,COND3C86]
      goto FOREACH3587
    NEXT3CB5:  preds = [FOREACH3587]
      goto FOREACH3581
    ASSIGN3CB7:  preds = [FOREACH3581]
      string _t3CB6#1 = "Bad end 2";
      string _t3CB8#1 = "\n";
      Print<[string,string]>(_t3CB6,_t3CB8);
      femData:MeshPos _t3CBB#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3575);
      return _t3CBB
}
  function int[2] nextCell44E13 (int faceIdx4E14#1, int cell4E15#1, femData:Mesh mesh4E16#1) {
    ENTRY4E17:  preds = []
      int _t4E18#1 = 8;
      int _t4E1A#1 = IMul(cell4E15,_t4E18);
      int _t4E1C#1 = 2;
      int _t4E1E#1 = IMul(faceIdx4E14,_t4E1C);
      int _t4E20#1 = IAdd(_t4E1A,_t4E1E);
      int[2] _t4E22#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh4E16,_t4E20);
      return _t4E22
}
  function femData:MeshPos posMove40B9 (femData:MeshPos x40BA#6, tensor[3] dPos40BB#4) {
    ENTRY40BC:  preds = []
      femData:Mesh meshData40BD#1 = globals.meshData351F;
      int timeSteps40BF#1 = globals.timeSteps3522;
      real timeEps40C1#1 = globals.timeEps3523;
      bool _t40C3#1 = ExtractFemItem<bool,Valid(MeshPos)>(x40BA);
      bool _t40C5#1 = BNot(_t40C3);
      if _t40C5 then goto RETURN(x40BA)40C8 else goto JOIN40C9
    RETURN(x40BA)40C8:  preds = [COND40C7]
      return x40BA
      goto JOIN40C9
    JOIN40C9:  preds = [*RETURN(x40BA)40C8,COND40C7]
      real time40CA#56 = 0.1e1;
      int _t40CC#6 = 0;
      int[] _t40CE#1 = Range(_t40CC,timeSteps40BF);
    FOREACH40D1:  preds = [ASSIGN40CF,NEXT471F]
      foreach (i40D0 in _t40CE) on exit goto ASSIGN4F6B
        femData:MeshPos cmp40D3#6 = phi(x40BA,cmp471A)
        real time46E9#9 = phi(time40CA,time471C)
      femData:Mesh _t40D2#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp40D3);
      int _t40D5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp40D3);
      femData:MeshCell _t40D7#2 = LoadFem<femData:MeshCell>(_t40D2,_t40D5);
      femData:Mesh _t40D9#17 = ExtractFem<femData:Mesh,femData:MeshCell>(_t40D7);
      int _t40DB#2 = ExtractFemItem<int,CellIndex(MeshCell)>(_t40D7);
      tensor[3] _t40DD#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp40D3);
      int ilit40E0#1 = 4;
      int mulRes40E1#4 = IMul(_t40DB,ilit40E0);
      int idx40E4#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,mulRes40E1);
      int ilit40E5#10 = 1;
      int addRes40E6#1 = IAdd(mulRes40E1,ilit40E5);
      int idx40E7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E6);
      int ilit40E8#9 = 2;
      int addRes40E9#1 = IAdd(mulRes40E1,ilit40E8);
      int idx40EA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E9);
      int ilit40EB#9 = 3;
      int addRes40EC#1 = IAdd(mulRes40E1,ilit40EB);
      int idx40ED#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40EC);
      int mulRes4103#3 = IMul(ilit40EB,idx40E4);
      int addRes4106#1 = IAdd(ilit40E5,mulRes4103);
      int addRes4108#1 = IAdd(ilit40E8,mulRes4103);
      real dof_load4109#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes4103);
      real dof_load410A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4106);
      real dof_load410B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4108);
      int mulRes410E#3 = IMul(ilit40EB,idx40E7);
      int addRes4110#1 = IAdd(ilit40E5,mulRes410E);
      int addRes4111#1 = IAdd(ilit40E8,mulRes410E);
      real dof_load4112#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes410E);
      real dof_load4113#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4110);
      real dof_load4114#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4111);
      int mulRes4117#3 = IMul(ilit40EB,idx40EA);
      int addRes4119#1 = IAdd(ilit40E5,mulRes4117);
      int addRes411A#1 = IAdd(ilit40E8,mulRes4117);
      real dof_load411B#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes4117);
      real dof_load411C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4119);
      real dof_load411D#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes411A);
      int mulRes4120#3 = IMul(ilit40EB,idx40ED);
      int addRes4122#1 = IAdd(ilit40E5,mulRes4120);
      int addRes4123#1 = IAdd(ilit40E8,mulRes4120);
      real dof_load4124#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes4120);
      real dof_load4125#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4122);
      real dof_load4126#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4123);
      real coeff4157#33 = -0.1e1;
      real prod4159#1 = RMul(time40CA,time40CA);
      real prod415A#2 = RMul(time40CA,prod4159);
      real basisEval415B#3 = RMul(coeff4157,prod415A);
      real basisEval415C#9 = RMul(time40CA,prod415A);
      real basisEval415D#95 = 0.e0;
      real r4174#2 = RMul(dof_load4109,basisEval415B);
      real r4177#1 = RMul(dof_load4112,basisEval415C);
      real r417A#2 = RMul(dof_load411B,basisEval415D);
      real r417D#2 = RMul(dof_load4124,basisEval415D);
      real r417E#1 = RAdd(r4174,r4177);
      real r417F#1 = RAdd(r417E,r417A);
      real r4180#13 = RAdd(r417F,r417D);
      real r4184#1 = RMul(dof_load4112,basisEval415D);
      real r4186#1 = RMul(dof_load411B,basisEval415C);
      real r4189#2 = RAdd(r4174,r4184);
      real r418A#1 = RAdd(r4189,r4186);
      real r418B#13 = RAdd(r418A,r417D);
      real r4193#1 = RMul(dof_load4124,basisEval415C);
      real r4195#1 = RAdd(r4189,r417A);
      real r4196#12 = RAdd(r4195,r4193);
      real r4199#2 = RMul(dof_load410A,basisEval415B);
      real r419B#1 = RMul(dof_load4113,basisEval415C);
      real r419D#2 = RMul(dof_load411C,basisEval415D);
      real r419F#2 = RMul(dof_load4125,basisEval415D);
      real r41A0#1 = RAdd(r4199,r419B);
      real r41A1#1 = RAdd(r41A0,r419D);
      real r41A2#13 = RAdd(r41A1,r419F);
      real r41A4#1 = RMul(dof_load4113,basisEval415D);
      real r41A5#1 = RMul(dof_load411C,basisEval415C);
      real r41A7#2 = RAdd(r4199,r41A4);
      real r41A8#1 = RAdd(r41A7,r41A5);
      real r41A9#13 = RAdd(r41A8,r419F);
      real r41AD#1 = RMul(dof_load4125,basisEval415C);
      real r41AF#1 = RAdd(r41A7,r419D);
      real r41B0#12 = RAdd(r41AF,r41AD);
      real r41B3#2 = RMul(dof_load410B,basisEval415B);
      real r41B5#1 = RMul(dof_load4114,basisEval415C);
      real r41B7#2 = RMul(dof_load411D,basisEval415D);
      real r41B9#2 = RMul(dof_load4126,basisEval415D);
      real r41BA#1 = RAdd(r41B3,r41B5);
      real r41BB#1 = RAdd(r41BA,r41B7);
      real r41BC#13 = RAdd(r41BB,r41B9);
      real r41BE#1 = RMul(dof_load4114,basisEval415D);
      real r41BF#1 = RMul(dof_load411D,basisEval415C);
      real r41C1#2 = RAdd(r41B3,r41BE);
      real r41C2#1 = RAdd(r41C1,r41BF);
      real r41C3#13 = RAdd(r41C2,r41B9);
      real r41C7#1 = RMul(dof_load4126,basisEval415C);
      real r41C9#1 = RAdd(r41C1,r41B7);
      real r41CA#12 = RAdd(r41C9,r41C7);
      real r422B#3 = RMul(basisEval415D,r4180);
      real r422D#3 = RMul(basisEval415D,r41A2);
      real r422F#5 = RMul(basisEval415D,r41BC);
      real r4230#3 = RAdd(r422B,r422D);
      real r4231#9 = RAdd(r4230,r422F);
      real r4233#3 = RMul(basisEval415D,r418B);
      real r4235#3 = RMul(basisEval415D,r41A9);
      real r4237#5 = RMul(basisEval415D,r41C3);
      real r4238#3 = RAdd(r4233,r4235);
      real r4239#9 = RAdd(r4238,r4237);
      real r423B#3 = RMul(basisEval415D,r4196);
      real r423D#3 = RMul(basisEval415D,r41B0);
      real r423F#5 = RMul(basisEval415D,r41CA);
      real r4240#3 = RAdd(r423B,r423D);
      real r4241#12 = RAdd(r4240,r423F);
      real r4244#1 = RMul(coeff4157,r41BC);
      real r4245#3 = RAdd(r4230,r4244);
      real r4246#1 = RMul(coeff4157,r41C3);
      real r4247#3 = RAdd(r4238,r4246);
      real r4248#1 = RMul(coeff4157,r41CA);
      real r4249#4 = RAdd(r4240,r4248);
      real r424C#1 = RMul(time40CA,r41A2);
      real r424D#1 = RAdd(r422B,r424C);
      real r424E#3 = RAdd(r424D,r422F);
      real r424F#1 = RMul(time40CA,r41A9);
      real r4250#1 = RAdd(r4233,r424F);
      real r4251#3 = RAdd(r4250,r4237);
      real r4252#1 = RMul(time40CA,r41B0);
      real r4253#1 = RAdd(r423B,r4252);
      real r4254#4 = RAdd(r4253,r423F);
      real r4257#1 = RMul(time40CA,r41BC);
      real r4258#3 = RAdd(r4230,r4257);
      real r4259#1 = RMul(time40CA,r41C3);
      real r425A#3 = RAdd(r4238,r4259);
      real r425B#1 = RMul(time40CA,r41CA);
      real r425C#4 = RAdd(r4240,r425B);
      real r425E#1 = RMul(coeff4157,r4180);
      real r425F#1 = RAdd(r425E,r422D);
      real r4260#3 = RAdd(r425F,r422F);
      real r4261#1 = RMul(coeff4157,r418B);
      real r4262#1 = RAdd(r4261,r4235);
      real r4263#3 = RAdd(r4262,r4237);
      real r4264#1 = RMul(coeff4157,r4196);
      real r4265#1 = RAdd(r4264,r423D);
      real r4266#4 = RAdd(r4265,r423F);
      real r4269#1 = RMul(coeff4157,r41A2);
      real r426A#1 = RAdd(r422B,r4269);
      real r426B#3 = RAdd(r426A,r422F);
      real r426C#1 = RMul(coeff4157,r41A9);
      real r426D#1 = RAdd(r4233,r426C);
      real r426E#3 = RAdd(r426D,r4237);
      real r426F#1 = RMul(coeff4157,r41B0);
      real r4270#1 = RAdd(r423B,r426F);
      real r4271#4 = RAdd(r4270,r423F);
      real r4273#1 = RMul(time40CA,r4180);
      real r4274#1 = RAdd(r4273,r422D);
      real r4275#3 = RAdd(r4274,r422F);
      real r4276#1 = RMul(time40CA,r418B);
      real r4277#1 = RAdd(r4276,r4235);
      real r4278#3 = RAdd(r4277,r4237);
      real r4279#1 = RMul(time40CA,r4196);
      real r427A#1 = RAdd(r4279,r423D);
      real r427B#4 = RAdd(r427A,r423F);
      real r42D8#1 = RMul(r4180,r4231);
      real r42DB#1 = RMul(r41A2,r4258);
      real r42DE#1 = RMul(r41BC,r426B);
      real r42DF#1 = RAdd(r42D8,r42DB);
      real r42E0#1 = RAdd(r42DF,r42DE);
      real r42E2#1 = RMul(r4180,r4239);
      real r42E4#1 = RMul(r41A2,r425A);
      real r42E6#1 = RMul(r41BC,r426E);
      real r42E7#1 = RAdd(r42E2,r42E4);
      real r42E8#2 = RAdd(r42E7,r42E6);
      real r42EA#1 = RMul(r4180,r4241);
      real r42EC#1 = RMul(r41A2,r425C);
      real r42EE#1 = RMul(r41BC,r4271);
      real r42EF#1 = RAdd(r42EA,r42EC);
      real r42F0#2 = RAdd(r42EF,r42EE);
      real r42F3#1 = RMul(r4180,r4245);
      real r42F5#1 = RMul(r41A2,r4231);
      real r42F7#1 = RMul(r41BC,r4275);
      real r42F8#1 = RAdd(r42F3,r42F5);
      real r42F9#1 = RAdd(r42F8,r42F7);
      real r42FB#1 = RMul(r4180,r4247);
      real r42FD#1 = RMul(r41A2,r4239);
      real r42FF#1 = RMul(r41BC,r4278);
      real r4300#1 = RAdd(r42FB,r42FD);
      real r4301#2 = RAdd(r4300,r42FF);
      real r4303#1 = RMul(r4180,r4249);
      real r4305#1 = RMul(r41A2,r4241);
      real r4307#1 = RMul(r41BC,r427B);
      real r4308#1 = RAdd(r4303,r4305);
      real r4309#2 = RAdd(r4308,r4307);
      real r430C#1 = RMul(r4180,r424E);
      real r430E#1 = RMul(r41A2,r4260);
      real r4310#1 = RMul(r41BC,r4231);
      real r4311#1 = RAdd(r430C,r430E);
      real r4312#1 = RAdd(r4311,r4310);
      real r4314#1 = RMul(r4180,r4251);
      real r4316#1 = RMul(r41A2,r4263);
      real r4318#1 = RMul(r41BC,r4239);
      real r4319#1 = RAdd(r4314,r4316);
      real r431A#2 = RAdd(r4319,r4318);
      real r431C#1 = RMul(r4180,r4254);
      real r431E#1 = RMul(r41A2,r4266);
      real r4320#1 = RMul(r41BC,r4241);
      real r4321#1 = RAdd(r431C,r431E);
      real r4322#2 = RAdd(r4321,r4320);
      real r4326#1 = RMul(r418B,r4231);
      real r4328#1 = RMul(r41A9,r4258);
      real r432A#1 = RMul(r41C3,r426B);
      real r432B#1 = RAdd(r4326,r4328);
      real r432C#2 = RAdd(r432B,r432A);
      real r432D#1 = RMul(r418B,r4239);
      real r432E#1 = RMul(r41A9,r425A);
      real r432F#1 = RMul(r41C3,r426E);
      real r4330#1 = RAdd(r432D,r432E);
      real r4331#1 = RAdd(r4330,r432F);
      real r4332#1 = RMul(r418B,r4241);
      real r4333#1 = RMul(r41A9,r425C);
      real r4334#1 = RMul(r41C3,r4271);
      real r4335#1 = RAdd(r4332,r4333);
      real r4336#2 = RAdd(r4335,r4334);
      real r4338#1 = RMul(r418B,r4245);
      real r4339#1 = RMul(r41A9,r4231);
      real r433A#1 = RMul(r41C3,r4275);
      real r433B#1 = RAdd(r4338,r4339);
      real r433C#2 = RAdd(r433B,r433A);
      real r433D#1 = RMul(r418B,r4247);
      real r433E#1 = RMul(r41A9,r4239);
      real r433F#1 = RMul(r41C3,r4278);
      real r4340#1 = RAdd(r433D,r433E);
      real r4341#1 = RAdd(r4340,r433F);
      real r4342#1 = RMul(r418B,r4249);
      real r4343#1 = RMul(r41A9,r4241);
      real r4344#1 = RMul(r41C3,r427B);
      real r4345#1 = RAdd(r4342,r4343);
      real r4346#2 = RAdd(r4345,r4344);
      real r4348#1 = RMul(r418B,r424E);
      real r4349#1 = RMul(r41A9,r4260);
      real r434A#1 = RMul(r41C3,r4231);
      real r434B#1 = RAdd(r4348,r4349);
      real r434C#2 = RAdd(r434B,r434A);
      real r434D#1 = RMul(r418B,r4251);
      real r434E#1 = RMul(r41A9,r4263);
      real r434F#1 = RMul(r41C3,r4239);
      real r4350#1 = RAdd(r434D,r434E);
      real r4351#1 = RAdd(r4350,r434F);
      real r4352#1 = RMul(r418B,r4254);
      real r4353#1 = RMul(r41A9,r4266);
      real r4354#1 = RMul(r41C3,r4241);
      real r4355#1 = RAdd(r4352,r4353);
      real r4356#2 = RAdd(r4355,r4354);
      real r435A#1 = RMul(r4196,r4231);
      real r435C#1 = RMul(r41B0,r4258);
      real r435E#1 = RMul(r41CA,r426B);
      real r435F#1 = RAdd(r435A,r435C);
      real r4360#2 = RAdd(r435F,r435E);
      real r4361#1 = RMul(r4196,r4239);
      real r4362#1 = RMul(r41B0,r425A);
      real r4363#1 = RMul(r41CA,r426E);
      real r4364#1 = RAdd(r4361,r4362);
      real r4365#2 = RAdd(r4364,r4363);
      real r4366#1 = RMul(r4196,r4241);
      real r4367#1 = RMul(r41B0,r425C);
      real r4368#1 = RMul(r41CA,r4271);
      real r4369#1 = RAdd(r4366,r4367);
      real r436A#1 = RAdd(r4369,r4368);
      real r436C#1 = RMul(r4196,r4245);
      real r436D#1 = RMul(r41B0,r4231);
      real r436E#1 = RMul(r41CA,r4275);
      real r436F#1 = RAdd(r436C,r436D);
      real r4370#2 = RAdd(r436F,r436E);
      real r4371#1 = RMul(r4196,r4247);
      real r4372#1 = RMul(r41B0,r4239);
      real r4373#1 = RMul(r41CA,r4278);
      real r4374#1 = RAdd(r4371,r4372);
      real r4375#2 = RAdd(r4374,r4373);
      real r4376#1 = RMul(r4196,r4249);
      real r4377#1 = RMul(r41B0,r4241);
      real r4378#1 = RMul(r41CA,r427B);
      real r4379#1 = RAdd(r4376,r4377);
      real r437A#1 = RAdd(r4379,r4378);
      real r437C#1 = RMul(r4196,r424E);
      real r437D#1 = RMul(r41B0,r4260);
      real r437E#1 = RMul(r41CA,r4231);
      real r437F#1 = RAdd(r437C,r437D);
      real r4380#2 = RAdd(r437F,r437E);
      real r4381#1 = RMul(r4196,r4251);
      real r4382#1 = RMul(r41B0,r4263);
      real r4383#1 = RMul(r41CA,r4239);
      real r4384#1 = RAdd(r4381,r4382);
      real r4385#2 = RAdd(r4384,r4383);
      real r4386#1 = RMul(r4196,r4254);
      real r4387#1 = RMul(r41B0,r4266);
      real r4388#1 = RMul(r41CA,r4241);
      real r4389#1 = RAdd(r4386,r4387);
      real r438A#1 = RAdd(r4389,r4388);
      tensor[3] probe_l_114446#1 = <tensor[3]>[r4180,r41A2,r41BC];
      tensor[3] probe_l_124493#3 = <tensor[3]>[r418B,r41A9,r41C3];
      tensor[3] tensor453E#1 = <tensor[3]>[r4241,r425C,r4271];
      tensor[3] tensor4544#1 = <tensor[3]>[r4249,r4241,r427B];
      tensor[3] tensor454B#1 = <tensor[3]>[r4254,r4266,r4241];
      real vdot456E#1 = VDot<3>(probe_l_124493,tensor453E);
      real vdot4570#1 = VDot<3>(probe_l_124493,tensor4544);
      real vdot4572#1 = VDot<3>(probe_l_124493,tensor454B);
      tensor[3] op1_e3_l_15456C#1 = <tensor[3]>[vdot456E,vdot4570,vdot4572];
      real op1_e3_l_16457B#1 = VDot<3>(probe_l_114446,op1_e3_l_15456C);
      real r4581#2 = RMul(basisEval415D,r42E0);
      real r4583#1 = RMul(basisEval415D,r42E8);
      real r4585#2 = RMul(basisEval415D,r42F0);
      real r4587#2 = RMul(basisEval415D,r432C);
      real r4589#3 = RMul(basisEval415D,r4331);
      real r458C#1 = RMul(time40CA,r4336);
      real r458E#2 = RMul(basisEval415D,r4360);
      real r4591#1 = RMul(coeff4157,r4365);
      real r4593#3 = RMul(basisEval415D,r436A);
      real r4594#2 = RAdd(r4581,r4583);
      real r4595#1 = RAdd(r4594,r4585);
      real r4596#1 = RAdd(r4595,r4587);
      real r4597#1 = RAdd(r4596,r4589);
      real r4598#1 = RAdd(r4597,r458C);
      real r4599#1 = RAdd(r4598,r458E);
      real r459A#1 = RAdd(r4599,r4591);
      real r459B#1 = RAdd(r459A,r4593);
      real r459D#2 = RMul(basisEval415D,r42F9);
      real r459F#1 = RMul(basisEval415D,r4301);
      real r45A1#2 = RMul(basisEval415D,r4309);
      real r45A3#2 = RMul(basisEval415D,r433C);
      real r45A5#3 = RMul(basisEval415D,r4341);
      real r45A7#1 = RMul(time40CA,r4346);
      real r45A9#2 = RMul(basisEval415D,r4370);
      real r45AB#1 = RMul(coeff4157,r4375);
      real r45AD#3 = RMul(basisEval415D,r437A);
      real r45AE#2 = RAdd(r459D,r459F);
      real r45AF#1 = RAdd(r45AE,r45A1);
      real r45B0#1 = RAdd(r45AF,r45A3);
      real r45B1#1 = RAdd(r45B0,r45A5);
      real r45B2#1 = RAdd(r45B1,r45A7);
      real r45B3#1 = RAdd(r45B2,r45A9);
      real r45B4#1 = RAdd(r45B3,r45AB);
      real r45B5#1 = RAdd(r45B4,r45AD);
      real r45B7#2 = RMul(basisEval415D,r4312);
      real r45B9#1 = RMul(basisEval415D,r431A);
      real r45BB#2 = RMul(basisEval415D,r4322);
      real r45BD#2 = RMul(basisEval415D,r434C);
      real r45BF#3 = RMul(basisEval415D,r4351);
      real r45C1#1 = RMul(time40CA,r4356);
      real r45C3#2 = RMul(basisEval415D,r4380);
      real r45C5#1 = RMul(coeff4157,r4385);
      real r45C7#3 = RMul(basisEval415D,r438A);
      real r45C8#2 = RAdd(r45B7,r45B9);
      real r45C9#1 = RAdd(r45C8,r45BB);
      real r45CA#1 = RAdd(r45C9,r45BD);
      real r45CB#1 = RAdd(r45CA,r45BF);
      real r45CC#1 = RAdd(r45CB,r45C1);
      real r45CD#1 = RAdd(r45CC,r45C3);
      real r45CE#1 = RAdd(r45CD,r45C5);
      real r45CF#1 = RAdd(r45CE,r45C7);
      real r45D1#1 = RMul(coeff4157,r42F0);
      real r45D2#2 = RMul(basisEval415D,r4336);
      real r45D3#1 = RMul(time40CA,r4360);
      real r45D4#2 = RMul(basisEval415D,r4365);
      real r45D5#1 = RAdd(r4594,r45D1);
      real r45D6#1 = RAdd(r45D5,r4587);
      real r45D7#1 = RAdd(r45D6,r4589);
      real r45D8#1 = RAdd(r45D7,r45D2);
      real r45D9#1 = RAdd(r45D8,r45D3);
      real r45DA#1 = RAdd(r45D9,r45D4);
      real r45DB#1 = RAdd(r45DA,r4593);
      real r45DC#1 = RMul(coeff4157,r4309);
      real r45DD#2 = RMul(basisEval415D,r4346);
      real r45DE#1 = RMul(time40CA,r4370);
      real r45DF#2 = RMul(basisEval415D,r4375);
      real r45E0#1 = RAdd(r45AE,r45DC);
      real r45E1#1 = RAdd(r45E0,r45A3);
      real r45E2#1 = RAdd(r45E1,r45A5);
      real r45E3#1 = RAdd(r45E2,r45DD);
      real r45E4#1 = RAdd(r45E3,r45DE);
      real r45E5#1 = RAdd(r45E4,r45DF);
      real r45E6#1 = RAdd(r45E5,r45AD);
      real r45E7#1 = RMul(coeff4157,r4322);
      real r45E8#2 = RMul(basisEval415D,r4356);
      real r45E9#1 = RMul(time40CA,r4380);
      real r45EA#2 = RMul(basisEval415D,r4385);
      real r45EB#1 = RAdd(r45C8,r45E7);
      real r45EC#1 = RAdd(r45EB,r45BD);
      real r45ED#1 = RAdd(r45EC,r45BF);
      real r45EE#1 = RAdd(r45ED,r45E8);
      real r45EF#1 = RAdd(r45EE,r45E9);
      real r45F0#1 = RAdd(r45EF,r45EA);
      real r45F1#1 = RAdd(r45F0,r45C7);
      real r45F3#1 = RMul(time40CA,r42E8);
      real r45F4#1 = RMul(coeff4157,r432C);
      real r45F5#1 = RAdd(r4581,r45F3);
      real r45F6#1 = RAdd(r45F5,r4585);
      real r45F7#1 = RAdd(r45F6,r45F4);
      real r45F8#1 = RAdd(r45F7,r4589);
      real r45F9#1 = RAdd(r45F8,r45D2);
      real r45FA#1 = RAdd(r45F9,r458E);
      real r45FB#1 = RAdd(r45FA,r45D4);
      real r45FC#1 = RAdd(r45FB,r4593);
      real r45FD#1 = RMul(time40CA,r4301);
      real r45FE#1 = RMul(coeff4157,r433C);
      real r45FF#1 = RAdd(r459D,r45FD);
      real r4600#1 = RAdd(r45FF,r45A1);
      real r4601#1 = RAdd(r4600,r45FE);
      real r4602#1 = RAdd(r4601,r45A5);
      real r4603#1 = RAdd(r4602,r45DD);
      real r4604#1 = RAdd(r4603,r45A9);
      real r4605#1 = RAdd(r4604,r45DF);
      real r4606#1 = RAdd(r4605,r45AD);
      real r4607#1 = RMul(time40CA,r431A);
      real r4608#1 = RMul(coeff4157,r434C);
      real r4609#1 = RAdd(r45B7,r4607);
      real r460A#1 = RAdd(r4609,r45BB);
      real r460B#1 = RAdd(r460A,r4608);
      real r460C#1 = RAdd(r460B,r45BF);
      real r460D#1 = RAdd(r460C,r45E8);
      real r460E#1 = RAdd(r460D,r45C3);
      real r460F#1 = RAdd(r460E,r45EA);
      real r4610#1 = RAdd(r460F,r45C7);
      real realLit46A8#1 = 0.2e1;
      real op1_e3_l_1846A7#9 = RMul(realLit46A8,op1_e3_l_16457B);
      real r46AE#1 = RDiv(r459B,op1_e3_l_1846A7);
      real r46B0#1 = RDiv(r45B5,op1_e3_l_1846A7);
      real r46B2#1 = RDiv(r45CF,op1_e3_l_1846A7);
      tensor[3] tensor46B3#1 = <tensor[3]>[r46AE,r46B0,r46B2];
      real r46B5#1 = RDiv(r45DB,op1_e3_l_1846A7);
      real r46B7#1 = RDiv(r45E6,op1_e3_l_1846A7);
      real r46B9#1 = RDiv(r45F1,op1_e3_l_1846A7);
      tensor[3] tensor46BA#1 = <tensor[3]>[r46B5,r46B7,r46B9];
      real r46BC#1 = RDiv(r45FC,op1_e3_l_1846A7);
      real r46BE#1 = RDiv(r4606,op1_e3_l_1846A7);
      real r46C0#1 = RDiv(r4610,op1_e3_l_1846A7);
      tensor[3] tensor46C1#1 = <tensor[3]>[r46BC,r46BE,r46C0];
      real vdot46DB#3 = VDot<3>(tensor46B3,dPos40BB);
      real vdot46DD#3 = VDot<3>(tensor46BA,dPos40BB);
      real vdot46DF#3 = VDot<3>(tensor46C1,dPos40BB);
      tensor[3] op1_e3_l_2046D9#5 = <tensor[3]>[vdot46DB,vdot46DD,vdot46DF];
      tensor[3] op1_e3_l_2146E8#2 = VScale<3>(time46E9,op1_e3_l_2046D9);
      tensor[3] newPos46EC#2 = VAdd<3>(_t40DD,op1_e3_l_2146E8);
      real _t46EF#4 = 0.1e-8;
      real _t46F1#1 = RAdd(time40CA,_t46EF);
      tensor[3] _t46F4#1 = <tensor[3]>[time40CA,time40CA,time40CA];
      real _t46F6#1 = VDot<3>(_t46F4,newPos46EC);
      bool _t46F9#1 = GT<real>(_t46F1,_t46F6);
      tensor[3] _t46FB#1 = <tensor[3]>[_t46EF,_t46EF,_t46EF];
      tensor[3] v46FE#1 = VAdd<3>(_t46FB,_t40DD);
      tensor[3] _t46FD#3 = VAdd<3>(v46FE,op1_e3_l_2146E8);
      real _t4702#1 = VIndex<3,0>(_t46FD);
      real _t4704#3 = -0.e0;
      bool _t4706#1 = GT<real>(_t4702,_t4704);
      real _t4708#1 = VIndex<3,1>(_t46FD);
      bool _t470A#1 = GT<real>(_t4708,_t4704);
      real _t470C#1 = VIndex<3,2>(_t46FD);
      bool _t470E#1 = GT<real>(_t470C,_t4704);
      bool _t4710#1 = BAnd(_t470A,_t470E);
      bool _t4712#1 = BAnd(_t4706,_t4710);
      bool _t4714#1 = BAnd(_t46F9,_t4712);
      if _t4714 then goto ASSIGN4718 else goto ASSIGN4721
    ASSIGN4718:  preds = [COND4716]
      femData:MeshPos nmp4717#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t40D9,_t40DB,newPos46EC);
      return nmp4717
      goto JOIN471E
    JOIN471E:  preds = [*RETURN(nmp4717)4719,JOIN4F2F]
      femData:MeshPos cmp471A#1 = phi(nmp471B)
      real time471C#1 = phi(time471D)
      goto FOREACH40D1
    ASSIGN4721:  preds = [COND4716]
      int _t4720#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp40D3);
      real time4722#6 = +inf;
      int face4724#7 = -1;
      real faceTime4726#6 = -inf;
      real _t4728#15 = 0.57735026919e0;
      tensor[3] _t472A#3 = <tensor[3]>[_t4728,_t4728,_t4728];
      real op1_e3_l_10472C#1 = VDot<3>(_t472A,_t40DD);
      real op1_e3_l_25472F#1 = VDot<3>(_t472A,op1_e3_l_2046D9);
      real op1_e3_l_264732#1 = RSub(_t4728,op1_e3_l_10472C);
      real op1_e3_l_274735#3 = RMul(time46E9,op1_e3_l_25472F);
      real _t4738#4 = RDiv(op1_e3_l_264732,op1_e3_l_274735);
      real _t473B#8 = -0.1e-15;
      bool _t473D#1 = GTE<real>(_t4738,_t473B);
      bool _t473F#1 = GT<real>(time4722,_t4738);
      real _t4CBE#1 = Abs<real>(op1_e3_l_274735);
      real _t4CC1#4 = 0.1e-20;
      bool _t4CC3#2 = GTE<real>(_t4CBE,_t4CC1);
      bool _t4CC5#1 = BAnd(_t473F,_t4CC3);
      bool _t4CC7#1 = BAnd(_t473D,_t4CC5);
      if _t4CC7 then goto ASSIGN4CCB else goto JOIN4CD4
    ASSIGN4CCB:  preds = [COND4CC9]
      bool _t4CCA#1 = NEQ<int>(_t4720,_t40CC);
      if _t4CCA then goto JOIN4CD0 else goto JOIN4CD0
    JOIN4CD0:  preds = [COND4CCC,COND4CCC]
      real faceTime4CCD#1 = phi(faceTime4726,_t4738)
      int face4CCE#1 = phi(_t40CC,face4724)
      real time4CCF#1 = phi(_t4738,time4722)
      goto JOIN4CD4
    JOIN4CD4:  preds = [JOIN4CD0,COND4CC9]
      real faceTime4CD1#2 = phi(faceTime4CCD,faceTime4726)
      int face4CD2#2 = phi(face4CCE,face4724)
      real time4CD3#3 = phi(time4CCF,time4722)
      tensor[3] _t4CD7#3 = <tensor[3]>[time40CA,basisEval415D,basisEval415D];
      real op1_e3_l_104CD9#1 = VDot<3>(_t4CD7,_t40DD);
      real op1_e3_l_254CDC#1 = VDot<3>(_t4CD7,op1_e3_l_2046D9);
      real op1_e3_l_264CDF#1 = RSub(basisEval415D,op1_e3_l_104CD9);
      real op1_e3_l_274CE2#3 = RMul(time46E9,op1_e3_l_254CDC);
      real _t4CE5#4 = RDiv(op1_e3_l_264CDF,op1_e3_l_274CE2);
      bool _t4CE8#1 = GTE<real>(_t4CE5,_t473B);
      bool _t4CEA#1 = GT<real>(time4CD3,_t4CE5);
      real _t4CF2#1 = Abs<real>(op1_e3_l_274CE2);
      bool _t4CF5#2 = GTE<real>(_t4CF2,_t4CC1);
      bool _t4CF7#1 = BAnd(_t4CEA,_t4CF5);
      bool _t4CF9#1 = BAnd(_t4CE8,_t4CF7);
      if _t4CF9 then goto ASSIGN5F32 else goto JOIN4D08
    ASSIGN5F32:  preds = [COND4CFB]
      bool _t4CFE#1 = NEQ<int>(_t4720,ilit40E5);
      if _t4CFE then goto JOIN4D04 else goto JOIN4D04
    JOIN4D04:  preds = [COND4D00,COND4D00]
      real faceTime4D01#1 = phi(faceTime4CD1,_t4CE5)
      int face4D02#1 = phi(ilit40E5,face4CD2)
      real time4D03#1 = phi(_t4CE5,time4CD3)
      goto JOIN4D08
    JOIN4D08:  preds = [JOIN4D04,COND4CFB]
      real faceTime4D05#2 = phi(faceTime4D01,faceTime4CD1)
      int face4D06#2 = phi(face4D02,face4CD2)
      real time4D07#3 = phi(time4D03,time4CD3)
      tensor[3] _t4D0B#3 = <tensor[3]>[basisEval415D,coeff4157,basisEval415D];
      real op1_e3_l_104D0D#1 = VDot<3>(_t4D0B,_t40DD);
      real op1_e3_l_254D10#1 = VDot<3>(_t4D0B,op1_e3_l_2046D9);
      real op1_e3_l_264D13#1 = RSub(basisEval415D,op1_e3_l_104D0D);
      real op1_e3_l_274D16#3 = RMul(time46E9,op1_e3_l_254D10);
      real _t4D19#4 = RDiv(op1_e3_l_264D13,op1_e3_l_274D16);
      bool _t4D1C#1 = GTE<real>(_t4D19,_t473B);
      bool _t4D1E#1 = GT<real>(time4D07,_t4D19);
      real _t4D26#1 = Abs<real>(op1_e3_l_274D16);
      bool _t4D29#2 = GTE<real>(_t4D26,_t4CC1);
      bool _t4D2B#1 = BAnd(_t4D1E,_t4D29);
      bool _t4D2D#1 = BAnd(_t4D1C,_t4D2B);
      if _t4D2D then goto ASSIGN5F36 else goto JOIN4D3C
    ASSIGN5F36:  preds = [COND4D2F]
      bool _t4D32#1 = NEQ<int>(_t4720,ilit40E8);
      if _t4D32 then goto JOIN4D38 else goto JOIN4D38
    JOIN4D38:  preds = [COND4D34,COND4D34]
      real faceTime4D35#1 = phi(faceTime4D05,_t4D19)
      int face4D36#1 = phi(ilit40E8,face4D06)
      real time4D37#1 = phi(_t4D19,time4D07)
      goto JOIN4D3C
    JOIN4D3C:  preds = [JOIN4D38,COND4D2F]
      real faceTime4D39#2 = phi(faceTime4D35,faceTime4D05)
      int face4D3A#2 = phi(face4D36,face4D06)
      real time4D3B#3 = phi(time4D37,time4D07)
      tensor[3] _t4D3D#3 = <tensor[3]>[basisEval415D,basisEval415D,time40CA];
      real op1_e3_l_104D3F#1 = VDot<3>(_t4D3D,_t40DD);
      real op1_e3_l_254D42#1 = VDot<3>(_t4D3D,op1_e3_l_2046D9);
      real op1_e3_l_264D45#1 = RSub(basisEval415D,op1_e3_l_104D3F);
      real op1_e3_l_274D48#3 = RMul(time46E9,op1_e3_l_254D42);
      real _t4D4B#4 = RDiv(op1_e3_l_264D45,op1_e3_l_274D48);
      bool _t4D4E#1 = GTE<real>(_t4D4B,_t473B);
      bool _t4D50#1 = GT<real>(time4D3B,_t4D4B);
      real _t4D58#1 = Abs<real>(op1_e3_l_274D48);
      bool _t4D5B#2 = GTE<real>(_t4D58,_t4CC1);
      bool _t4D5D#1 = BAnd(_t4D50,_t4D5B);
      bool _t4D5F#1 = BAnd(_t4D4E,_t4D5D);
      if _t4D5F then goto ASSIGN5F3A else goto JOIN4D6E
    ASSIGN5F3A:  preds = [COND4D61]
      bool _t4D64#1 = NEQ<int>(_t4720,ilit40EB);
      if _t4D64 then goto JOIN4D6A else goto JOIN4D6A
    JOIN4D6A:  preds = [COND4D66,COND4D66]
      real faceTime4D67#1 = phi(faceTime4D39,_t4D4B)
      int face4D68#1 = phi(ilit40EB,face4D3A)
      real time4D69#1 = phi(_t4D4B,time4D3B)
      goto JOIN4D6E
    JOIN4D6E:  preds = [JOIN4D6A,COND4D61]
      real faceTime4D6B#2 = phi(faceTime4D67,faceTime4D39)
      int face4D6C#2 = phi(face4D68,face4D3A)
      real time4D6D#1 = phi(time4D69,time4D3B)
      bool _t4D6F#1 = NEQ<int>(face4D6C,face4724);
      if _t4D6F then goto ASSIGN5F3C else goto ASSIGN4F61
    ASSIGN5F3C:  preds = [COND4D71]
      real _t4D72#1 = Max<real>(time4D6D,basisEval415D);
      real _t4D74#1 = IntToReal(face4D6C);
      tensor[2] _t4D76#1 = <tensor[2]>[_t4D72,_t4D74];
      goto JOIN4D7A
    JOIN4D7A:  preds = [ASSIGN4D77,JOIN4F66]
      tensor[2] _t4D78#1 = phi(_t4D76,_t4D79)
      real eTime4D7B#3 = VIndex<2,0>(_t4D78);
      real op1_e3_l_34D7D#1 = RMul(time46E9,eTime4D7B);
      real time471D#2 = RSub(time46E9,op1_e3_l_34D7D);
      int _t4D82#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp40D3);
      tensor[3] _t4D84#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp40D3);
      real op1_e3_l_104D86#1 = VDot<3>(_t472A,_t4D84);
      real op1_e3_l_264D89#1 = RSub(_t4728,op1_e3_l_104D86);
      real _t4D8C#4 = RDiv(op1_e3_l_264D89,op1_e3_l_274735);
      bool _t4D8F#1 = GTE<real>(_t4D8C,_t473B);
      bool _t4D91#1 = GT<real>(time4722,_t4D8C);
      bool _t4D93#1 = BAnd(_t4D91,_t4CC3);
      bool _t4D95#1 = BAnd(_t4D8F,_t4D93);
      if _t4D95 then goto ASSIGN4D99 else goto JOIN4DA2
    ASSIGN4D99:  preds = [COND4D97]
      bool _t4D98#1 = NEQ<int>(_t4720,_t40CC);
      if _t4D98 then goto JOIN4D9E else goto JOIN4D9E
    JOIN4D9E:  preds = [COND4D9A,COND4D9A]
      real faceTime4D9B#1 = phi(faceTime4726,_t4D8C)
      int face4D9C#1 = phi(_t40CC,face4724)
      real time4D9D#1 = phi(_t4D8C,time4722)
      goto JOIN4DA2
    JOIN4DA2:  preds = [JOIN4D9E,COND4D97]
      real faceTime4D9F#2 = phi(faceTime4D9B,faceTime4726)
      int face4DA0#2 = phi(face4D9C,face4724)
      real time4DA1#3 = phi(time4D9D,time4722)
      real op1_e3_l_104DA3#1 = VDot<3>(_t4CD7,_t4D84);
      real op1_e3_l_264DA6#1 = RSub(basisEval415D,op1_e3_l_104DA3);
      real _t4DA9#4 = RDiv(op1_e3_l_264DA6,op1_e3_l_274CE2);
      bool _t4DAC#1 = GTE<real>(_t4DA9,_t473B);
      bool _t4DAE#1 = GT<real>(time4DA1,_t4DA9);
      bool _t4DB0#1 = BAnd(_t4DAE,_t4CF5);
      bool _t4DB2#1 = BAnd(_t4DAC,_t4DB0);
      if _t4DB2 then goto ASSIGN5F40 else goto JOIN4DC1
    ASSIGN5F40:  preds = [COND4DB4]
      bool _t4DB7#1 = NEQ<int>(_t4720,ilit40E5);
      if _t4DB7 then goto JOIN4DBD else goto JOIN4DBD
    JOIN4DBD:  preds = [COND4DB9,COND4DB9]
      real faceTime4DBA#1 = phi(faceTime4D9F,_t4DA9)
      int face4DBB#1 = phi(ilit40E5,face4DA0)
      real time4DBC#1 = phi(_t4DA9,time4DA1)
      goto JOIN4DC1
    JOIN4DC1:  preds = [JOIN4DBD,COND4DB4]
      real faceTime4DBE#2 = phi(faceTime4DBA,faceTime4D9F)
      int face4DBF#2 = phi(face4DBB,face4DA0)
      real time4DC0#3 = phi(time4DBC,time4DA1)
      real op1_e3_l_104DC2#1 = VDot<3>(_t4D0B,_t4D84);
      real op1_e3_l_264DC5#1 = RSub(basisEval415D,op1_e3_l_104DC2);
      real _t4DC8#4 = RDiv(op1_e3_l_264DC5,op1_e3_l_274D16);
      bool _t4DCB#1 = GTE<real>(_t4DC8,_t473B);
      bool _t4DCD#1 = GT<real>(time4DC0,_t4DC8);
      bool _t4DCF#1 = BAnd(_t4DCD,_t4D29);
      bool _t4DD1#1 = BAnd(_t4DCB,_t4DCF);
      if _t4DD1 then goto ASSIGN5F43 else goto JOIN4DE0
    ASSIGN5F43:  preds = [COND4DD3]
      bool _t4DD6#1 = NEQ<int>(_t4720,ilit40E8);
      if _t4DD6 then goto JOIN4DDC else goto JOIN4DDC
    JOIN4DDC:  preds = [COND4DD8,COND4DD8]
      real faceTime4DD9#1 = phi(faceTime4DBE,_t4DC8)
      int face4DDA#1 = phi(ilit40E8,face4DBF)
      real time4DDB#1 = phi(_t4DC8,time4DC0)
      goto JOIN4DE0
    JOIN4DE0:  preds = [JOIN4DDC,COND4DD3]
      real faceTime4DDD#2 = phi(faceTime4DD9,faceTime4DBE)
      int face4DDE#2 = phi(face4DDA,face4DBF)
      real time4DDF#3 = phi(time4DDB,time4DC0)
      real op1_e3_l_104DE1#1 = VDot<3>(_t4D3D,_t4D84);
      real op1_e3_l_264DE4#1 = RSub(basisEval415D,op1_e3_l_104DE1);
      real _t4DE7#4 = RDiv(op1_e3_l_264DE4,op1_e3_l_274D48);
      bool _t4DEA#1 = GTE<real>(_t4DE7,_t473B);
      bool _t4DEC#1 = GT<real>(time4DDF,_t4DE7);
      bool _t4DEE#1 = BAnd(_t4DEC,_t4D5B);
      bool _t4DF0#1 = BAnd(_t4DEA,_t4DEE);
      if _t4DF0 then goto ASSIGN5F46 else goto JOIN4DFF
    ASSIGN5F46:  preds = [COND4DF2]
      bool _t4DF5#1 = NEQ<int>(_t4720,ilit40EB);
      if _t4DF5 then goto JOIN4DFB else goto JOIN4DFB
    JOIN4DFB:  preds = [COND4DF7,COND4DF7]
      real faceTime4DF8#1 = phi(faceTime4DDD,_t4DE7)
      int face4DF9#1 = phi(ilit40EB,face4DDE)
      real time4DFA#1 = phi(_t4DE7,time4DDF)
      goto JOIN4DFF
    JOIN4DFF:  preds = [JOIN4DFB,COND4DF2]
      real faceTime4DFC#2 = phi(faceTime4DF8,faceTime4DDD)
      int face4DFD#2 = phi(face4DF9,face4DDE)
      real time4DFE#1 = phi(time4DFA,time4DDF)
      bool _t4E00#1 = NEQ<int>(face4DFD,face4724);
      if _t4E00 then goto ASSIGN5F48 else goto ASSIGN4F57
    ASSIGN5F48:  preds = [COND4E02]
      real _t4E03#1 = Max<real>(time4DFE,basisEval415D);
      real _t4E05#1 = IntToReal(face4DFD);
      tensor[2] _t4E07#1 = <tensor[2]>[_t4E03,_t4E05];
      goto JOIN4E0B
    JOIN4E0B:  preds = [ASSIGN4E08,JOIN4F5C]
      tensor[2] _t4E09#3 = phi(_t4E07,_t4E0A)
      real _t4E0C#1 = VIndex<2,1>(_t4E09);
      real t4E0E#1 = Floor<1>(_t4E0C);
      int _t4E10#6 = RealToInt<1>(t4E0E);
      int[2] _t4E12#2 = nextCell44E13 (_t4E10,_t4D82,_t40D2);
      int _t4E26#2 = Subscript<int[2]>(_t4E12,_t40CC);
      bool _t4E28#1 = NEQ<int>(face4724,_t4E26);
      if _t4E28 then goto ASSIGN4E2C else goto ASSIGN4F40
    ASSIGN4E2C:  preds = [COND4E2A]
      string _t4E2B#1 = "face ";
      string _t4E2D#1 = " to ";
      int _t4E31#6 = Subscript<int[2]>(_t4E12,ilit40E5);
      string _t4E33#2 = "\n";
      string _t4E35#1 = "got: ";
      tensor[4] _t4E37#7 = <tensor[4]>[time40CA,basisEval415D,basisEval415D,basisEval415D];
      tensor[4] _t4E39#6 = <tensor[4]>[basisEval415D,time40CA,basisEval415D,basisEval415D];
      tensor[4] _t4E3B#7 = <tensor[4]>[basisEval415D,basisEval415D,time40CA,basisEval415D];
      real _t4E3D#1 = 0.971445146547e-16;
      tensor[4] _t4E3F#4 = <tensor[4]>[_t4E3D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E41#4 = <tensor[4,4]>[_t4E37,_t4E39,_t4E3B,_t4E3F];
      real _t4E43#7 = -0.57735026919e0;
      tensor[4] _t4E45#2 = <tensor[4]>[_t4728,_t4728,_t4728,_t4E43];
      real _t4E47#4 = -0.333333333333e0;
      real _t4E49#2 = 0.666666666667e0;
      real _t4E4B#2 = 0.333333333333e0;
      tensor[4] _t4E4D#3 = <tensor[4]>[_t4E47,_t4E49,_t4E47,_t4E4B];
      tensor[4] _t4E4F#3 = <tensor[4]>[_t4E47,_t4E47,_t4E49,_t4E4B];
      tensor[4,4] _t4E51#4 = <tensor[4,4]>[_t4E45,_t4E4D,_t4E4F,_t4E3F];
      tensor[4] _t4E53#1 = <tensor[4]>[_t4E43,_t4E43,_t4E43,_t4728];
      tensor[4,4] _t4E55#4 = <tensor[4,4]>[_t4E4D,_t4E53,_t4E4F,_t4E3F];
      tensor[4,4] _t4E57#4 = <tensor[4,4]>[_t4E4D,_t4E4F,_t4E45,_t4E3F];
      tensor[4,4][4] _t4E59#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4] _t4E5B#1 = <tensor[4]>[_t4728,coeff4157,coeff4157,time40CA];
      tensor[4] _t4E5D#1 = <tensor[4]>[_t4728,time40CA,basisEval415D,basisEval415D];
      tensor[4] _t4E5F#1 = <tensor[4]>[_t4728,basisEval415D,time40CA,basisEval415D];
      tensor[4] _t4E61#10 = <tensor[4]>[basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E63#4 = <tensor[4,4]>[_t4E5B,_t4E5D,_t4E5F,_t4E61];
      tensor[4,4] _t4E65#12 = <tensor[4,4]>[_t4E37,_t4E39,_t4E3B,_t4E61];
      tensor[4] _t4E67#1 = <tensor[4]>[coeff4157,basisEval415D,basisEval415D,basisEval415D];
      tensor[4,4] _t4E69#4 = <tensor[4,4]>[_t4E39,_t4E67,_t4E3B,_t4E61];
      tensor[4,4] _t4E6B#4 = <tensor[4,4]>[_t4E39,_t4E3B,_t4E37,_t4E61];
      tensor[4,4][4] _t4E6D#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4] _t4E6F#1 = <tensor[4]>[coeff4157,_t4E43,coeff4157,time40CA];
      tensor[4] _t4E71#1 = <tensor[4]>[time40CA,_t4E43,basisEval415D,basisEval415D];
      tensor[4] _t4E73#1 = <tensor[4]>[basisEval415D,_t4E43,time40CA,basisEval415D];
      tensor[4,4] _t4E75#4 = <tensor[4,4]>[_t4E6F,_t4E71,_t4E73,_t4E61];
      tensor[4] _t4E77#2 = <tensor[4]>[basisEval415D,coeff4157,basisEval415D,basisEval415D];
      tensor[4,4] _t4E79#4 = <tensor[4,4]>[_t4E77,_t4E37,_t4E3B,_t4E61];
      tensor[4,4] _t4E7B#4 = <tensor[4,4]>[_t4E37,_t4E3B,_t4E77,_t4E61];
      tensor[4,4][4] _t4E7D#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4] _t4E7F#1 = <tensor[4]>[coeff4157,coeff4157,_t4728,time40CA];
      tensor[4] _t4E81#1 = <tensor[4]>[time40CA,basisEval415D,_t4728,basisEval415D];
      tensor[4] _t4E83#1 = <tensor[4]>[basisEval415D,time40CA,_t4728,basisEval415D];
      tensor[4,4] _t4E85#4 = <tensor[4,4]>[_t4E7F,_t4E81,_t4E83,_t4E61];
      tensor[4,4] _t4E87#4 = <tensor[4,4]>[_t4E3B,_t4E37,_t4E39,_t4E61];
      tensor[4] _t4E89#1 = <tensor[4]>[basisEval415D,basisEval415D,coeff4157,basisEval415D];
      tensor[4,4] _t4E8B#4 = <tensor[4,4]>[_t4E37,_t4E89,_t4E39,_t4E61];
      tensor[4,4][4] _t4E8D#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4E8F#1 = <tensor[4,4][4][4]>{_t4E59,_t4E6D,_t4E7D,_t4E8D};
      tensor[4,4][4] _t4E91#1 = Subscript<tensor[4,4][4][4]>(_t4E8F,_t4E10);
      tensor[4,4] _t4E93#1 = Subscript<tensor[4,4][4]>(_t4E91,_t4E31);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t4E2B,_t4E10,_t4E2D,_t4E31,_t4E33,_t4E35,_t4E93,_t4E33);
      tensor[4,4][4] _t4E96#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4E98#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4E9A#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4E9C#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4E9E#1 = <tensor[4,4][4][4]>{_t4E96,_t4E98,_t4E9A,_t4E9C};
      tensor[4,4][4] _t4EA0#1 = Subscript<tensor[4,4][4][4]>(_t4E9E,_t4E10);
      tensor[4,4] _t4EA2#4 = Subscript<tensor[4,4][4]>(_t4EA0,_t4E31);
      real _t4EA4#1 = VIndex<2,0>(_t4E09);
      real r4EA8#3 = RMul(_t4EA4,time46E9);
      real r4EA9#1 = RMul(r4EA8,vdot46DB);
      real r4EAB#1 = RMul(r4EA8,vdot46DD);
      real r4EAD#1 = RMul(r4EA8,vdot46DF);
      tensor[3] op1_e3_l_224EA6#1 = <tensor[3]>[r4EA9,r4EAB,r4EAD];
      tensor[3] _t4EB7#3 = VAdd<3>(op1_e3_l_224EA6,_t4D84);
      real _t4EBA#1 = VIndex<3,0>(_t4EB7);
      real _t4EBC#1 = VIndex<3,1>(_t4EB7);
      real _t4EBE#1 = VIndex<3,2>(_t4EB7);
      tensor[4] _t4EC0#12 = <tensor[4]>[_t4EBA,_t4EBC,_t4EBE,time40CA];
      tensor[4] projParam4EC3#1 = ProjectLast<tensor[4,4],[0]>(_t4EA2);
      real vdot4EC4#1 = VDot<4>(projParam4EC3,_t4EC0);
      tensor[4] projParam4EC5#1 = ProjectLast<tensor[4,4],[1]>(_t4EA2);
      real vdot4EC6#1 = VDot<4>(projParam4EC5,_t4EC0);
      tensor[4] projParam4EC7#1 = ProjectLast<tensor[4,4],[2]>(_t4EA2);
      real vdot4EC8#1 = VDot<4>(projParam4EC7,_t4EC0);
      tensor[4] projParam4EC9#1 = ProjectLast<tensor[4,4],[3]>(_t4EA2);
      real vdot4ECA#1 = VDot<4>(projParam4EC9,_t4EC0);
      tensor[4] _t4EC2#1 = <tensor[4]>[vdot4EC4,vdot4EC6,vdot4EC8,vdot4ECA];
      real _t4ED5#1 = VIndex<4,0>(_t4EC2);
      tensor[4,4][4] _t4ED7#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4ED9#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4EDB#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4EDD#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4EDF#1 = <tensor[4,4][4][4]>{_t4ED7,_t4ED9,_t4EDB,_t4EDD};
      tensor[4,4][4] _t4EE1#1 = Subscript<tensor[4,4][4][4]>(_t4EDF,_t4E10);
      tensor[4,4] _t4EE3#4 = Subscript<tensor[4,4][4]>(_t4EE1,_t4E31);
      tensor[4] projParam4EE6#1 = ProjectLast<tensor[4,4],[0]>(_t4EE3);
      real vdot4EE7#1 = VDot<4>(projParam4EE6,_t4EC0);
      tensor[4] projParam4EE8#1 = ProjectLast<tensor[4,4],[1]>(_t4EE3);
      real vdot4EE9#1 = VDot<4>(projParam4EE8,_t4EC0);
      tensor[4] projParam4EEA#1 = ProjectLast<tensor[4,4],[2]>(_t4EE3);
      real vdot4EEB#1 = VDot<4>(projParam4EEA,_t4EC0);
      tensor[4] projParam4EEC#1 = ProjectLast<tensor[4,4],[3]>(_t4EE3);
      real vdot4EED#1 = VDot<4>(projParam4EEC,_t4EC0);
      tensor[4] _t4EE5#1 = <tensor[4]>[vdot4EE7,vdot4EE9,vdot4EEB,vdot4EED];
      real _t4EF8#1 = VIndex<4,1>(_t4EE5);
      tensor[4,4][4] _t4EFA#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4EFC#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4EFE#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4F00#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4F02#1 = <tensor[4,4][4][4]>{_t4EFA,_t4EFC,_t4EFE,_t4F00};
      tensor[4,4][4] _t4F04#1 = Subscript<tensor[4,4][4][4]>(_t4F02,_t4E10);
      tensor[4,4] _t4F06#4 = Subscript<tensor[4,4][4]>(_t4F04,_t4E31);
      tensor[4] projParam4F09#1 = ProjectLast<tensor[4,4],[0]>(_t4F06);
      real vdot4F0A#1 = VDot<4>(projParam4F09,_t4EC0);
      tensor[4] projParam4F0B#1 = ProjectLast<tensor[4,4],[1]>(_t4F06);
      real vdot4F0C#1 = VDot<4>(projParam4F0B,_t4EC0);
      tensor[4] projParam4F0D#1 = ProjectLast<tensor[4,4],[2]>(_t4F06);
      real vdot4F0E#1 = VDot<4>(projParam4F0D,_t4EC0);
      tensor[4] projParam4F0F#1 = ProjectLast<tensor[4,4],[3]>(_t4F06);
      real vdot4F10#1 = VDot<4>(projParam4F0F,_t4EC0);
      tensor[4] _t4F08#1 = <tensor[4]>[vdot4F0A,vdot4F0C,vdot4F0E,vdot4F10];
      real _t4F1B#1 = VIndex<4,2>(_t4F08);
      tensor[3] _t4F1D#1 = <tensor[3]>[_t4ED5,_t4EF8,_t4F1B];
      femData:MeshPos _t4F1F#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t40D2,_t4E26,_t4F1D,_t4E31);
      goto JOIN4F22
    JOIN4F22:  preds = [ASSIGN4F20,ASSIGN4F55]
      femData:MeshPos nmp471B#3 = phi(_t4F1F,_t4F21)
      bool _t4F23#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp471B);
      bool _t4F25#1 = BNot(_t4F23);
      if _t4F25 then goto ASSIGN4F29 else goto ASSIGN5F61
    ASSIGN4F29:  preds = [COND4F27]
      bool _t4F28#1 = true;
      goto JOIN4F2C
    JOIN4F2C:  preds = [ASSIGN4F29,JOIN4F36]
      bool _t4F2A#1 = phi(_t4F28,_t4F2B)
      if _t4F2A then goto RETURN(nmp471B)4F2E else goto JOIN4F2F
    RETURN(nmp471B)4F2E:  preds = [COND4F2D]
      return nmp471B
      goto JOIN4F2F
    JOIN4F2F:  preds = [*RETURN(nmp471B)4F2E,COND4F2D]
      goto JOIN471E
    ASSIGN5F61:  preds = [COND4F27]
      bool _t4F30#1 = LT<real>(eTime4D7B,basisEval415D);
      if _t4F30 then goto ASSIGN4F34 else goto ASSIGN4F38
    ASSIGN4F34:  preds = [COND4F32]
      bool _t4F33#1 = true;
      goto JOIN4F36
    JOIN4F36:  preds = [ASSIGN4F34,JOIN4F3D]
      bool _t4F2B#1 = phi(_t4F33,_t4F35)
      goto JOIN4F2C
    ASSIGN4F38:  preds = [COND4F32]
      bool _t4F37#1 = GT<real>(eTime4D7B,time40CA);
      if _t4F37 then goto ASSIGN4F3B else goto ASSIGN4F3E
    ASSIGN4F3B:  preds = [COND4F39]
      bool _t4F3A#1 = true;
      goto JOIN4F3D
    JOIN4F3D:  preds = [ASSIGN4F3B,ASSIGN4F3E]
      bool _t4F35#1 = phi(_t4F3A,_t4F3C)
      goto JOIN4F36
    ASSIGN4F3E:  preds = [COND4F39]
      bool _t4F3C#1 = LT<real>(time471D,timeEps40C1);
      goto JOIN4F3D
    ASSIGN4F40:  preds = [COND4E2A]
      real _t4F3F#1 = VIndex<2,0>(_t4E09);
      real r4F43#3 = RMul(_t4F3F,time46E9);
      real r4F44#1 = RMul(r4F43,vdot46DB);
      real r4F46#1 = RMul(r4F43,vdot46DD);
      real r4F48#1 = RMul(r4F43,vdot46DF);
      tensor[3] op1_e3_l_224F41#1 = <tensor[3]>[r4F44,r4F46,r4F48];
      tensor[3] _t4F52#1 = VAdd<3>(op1_e3_l_224F41,_t4D84);
      femData:MeshPos _t4F21#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t40D2,_t4F52);
      goto JOIN4F22
    ASSIGN4F57:  preds = [COND4E02]
      bool _t4F56#1 = EQ<real>(faceTime4726,faceTime4DFC);
      if _t4F56 then goto ASSIGN5F47 else goto ASSIGN4F5E
    ASSIGN5F47:  preds = [COND4F58]
      tensor[2] _t4F59#1 = <tensor[2]>[coeff4157,coeff4157];
      goto JOIN4F5C
    JOIN4F5C:  preds = [ASSIGN5F47,ASSIGN4F5F]
      tensor[2] _t4E0A#1 = phi(_t4F59,_t4F5B)
      goto JOIN4E0B
    ASSIGN4F5E:  preds = [COND4F58]
      real _t4F5D#1 = IntToReal(_t4720);
      tensor[2] _t4F5B#1 = <tensor[2]>[faceTime4DFC,_t4F5D];
      goto JOIN4F5C
    ASSIGN4F61:  preds = [COND4D71]
      bool _t4F60#1 = EQ<real>(faceTime4726,faceTime4D6B);
      if _t4F60 then goto ASSIGN5F3B else goto ASSIGN4F68
    ASSIGN5F3B:  preds = [COND4F62]
      tensor[2] _t4F63#1 = <tensor[2]>[coeff4157,coeff4157];
      goto JOIN4F66
    JOIN4F66:  preds = [ASSIGN5F3B,ASSIGN4F69]
      tensor[2] _t4D79#1 = phi(_t4F63,_t4F65)
      goto JOIN4D7A
    ASSIGN4F68:  preds = [COND4F62]
      real _t4F67#1 = IntToReal(_t4720);
      tensor[2] _t4F65#1 = <tensor[2]>[faceTime4D6B,_t4F67];
      goto JOIN4F66
    ASSIGN4F6B:  preds = [FOREACH40D1]
      string _t4F6A#1 = "Took stupid way out!\n";
      Print<[string]>(_t4F6A);
      tensor[3] _t4F6D#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x40BA);
      int _t4F6F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x40BA);
      femData:Mesh _t4F71#16 = ExtractFem<femData:Mesh,femData:MeshPos>(x40BA);
      int ilit4F74#1 = 4;
      int mulRes4F75#4 = IMul(_t4F6F,ilit4F74);
      int idx4F78#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,mulRes4F75);
      int ilit4F79#5 = 1;
      int addRes4F7A#1 = IAdd(mulRes4F75,ilit4F79);
      int idx4F7B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F7A);
      int ilit4F7C#5 = 2;
      int addRes4F7D#1 = IAdd(mulRes4F75,ilit4F7C);
      int idx4F7E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F7D);
      int ilit4F7F#5 = 3;
      int addRes4F80#1 = IAdd(mulRes4F75,ilit4F7F);
      int idx4F81#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F80);
      int mulRes4F97#3 = IMul(ilit4F7F,idx4F78);
      int addRes4F9A#1 = IAdd(ilit4F79,mulRes4F97);
      int addRes4F9C#1 = IAdd(ilit4F7C,mulRes4F97);
      real dof_load4F9D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4F97);
      real dof_load4F9E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F9A);
      real dof_load4F9F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F9C);
      int mulRes4FA2#3 = IMul(ilit4F7F,idx4F7B);
      int addRes4FA4#1 = IAdd(ilit4F79,mulRes4FA2);
      int addRes4FA5#1 = IAdd(ilit4F7C,mulRes4FA2);
      real dof_load4FA6#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4FA2);
      real dof_load4FA7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA4);
      real dof_load4FA8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA5);
      int mulRes4FAB#3 = IMul(ilit4F7F,idx4F7E);
      int addRes4FAD#1 = IAdd(ilit4F79,mulRes4FAB);
      int addRes4FAE#1 = IAdd(ilit4F7C,mulRes4FAB);
      real dof_load4FAF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4FAB);
      real dof_load4FB0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAD);
      real dof_load4FB1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAE);
      int mulRes4FB4#3 = IMul(ilit4F7F,idx4F81);
      int addRes4FB6#1 = IAdd(ilit4F79,mulRes4FB4);
      int addRes4FB7#1 = IAdd(ilit4F7C,mulRes4FB4);
      real dof_load4FB8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4FB4);
      real dof_load4FB9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB6);
      real dof_load4FBA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB7);
      real varAcc4FE8#1 = VIndex<3,0>(_t4F6D);
      real varAcc4FE9#1 = VIndex<3,1>(_t4F6D);
      real varAcc4FEA#1 = VIndex<3,2>(_t4F6D);
      real coeff4FEB#3 = -0.1e1;
      real prod4FEE#2 = RMul(time40CA,time40CA);
      real prod4FEF#2 = RMul(varAcc4FE8,prod4FEE);
      real prod4FF1#1 = RMul(varAcc4FE9,time40CA);
      real prod4FF2#2 = RMul(time40CA,prod4FF1);
      real prod4FF4#1 = RMul(time40CA,varAcc4FEA);
      real prod4FF5#2 = RMul(time40CA,prod4FF4);
      real prod4FF6#1 = RMul(time40CA,prod4FEE);
      real mult4FF7#1 = RMul(time40CA,prod4FF6);
      real mult4FF8#1 = RMul(coeff4FEB,prod4FF5);
      real mult4FF9#1 = RMul(coeff4FEB,prod4FF2);
      real mult4FFA#1 = RMul(coeff4FEB,prod4FEF);
      real sum4FFB#1 = RAdd(mult4FF9,mult4FFA);
      real sum4FFC#1 = RAdd(mult4FF8,sum4FFB);
      real sum4FFD#3 = RAdd(mult4FF7,sum4FFC);
      real basisEval4FFF#3 = RMul(time40CA,prod4FEF);
      real basisEval5000#3 = RMul(time40CA,prod4FF2);
      real basisEval5001#3 = RMul(time40CA,prod4FF5);
      real r5022#1 = RMul(dof_load4F9D,sum4FFD);
      real r5025#1 = RMul(dof_load4FA6,basisEval4FFF);
      real r5028#1 = RMul(dof_load4FAF,basisEval5000);
      real r502B#1 = RMul(dof_load4FB8,basisEval5001);
      real r502C#1 = RAdd(r5022,r5025);
      real r502D#1 = RAdd(r502C,r5028);
      real r502E#1 = RAdd(r502D,r502B);
      real r5030#1 = RMul(dof_load4F9E,sum4FFD);
      real r5032#1 = RMul(dof_load4FA7,basisEval4FFF);
      real r5034#1 = RMul(dof_load4FB0,basisEval5000);
      real r5036#1 = RMul(dof_load4FB9,basisEval5001);
      real r5037#1 = RAdd(r5030,r5032);
      real r5038#1 = RAdd(r5037,r5034);
      real r5039#1 = RAdd(r5038,r5036);
      real r503B#1 = RMul(dof_load4F9F,sum4FFD);
      real r503D#1 = RMul(dof_load4FA8,basisEval4FFF);
      real r503F#1 = RMul(dof_load4FB1,basisEval5000);
      real r5041#1 = RMul(dof_load4FBA,basisEval5001);
      real r5042#1 = RAdd(r503B,r503D);
      real r5043#1 = RAdd(r5042,r503F);
      real r5044#1 = RAdd(r5043,r5041);
      tensor[3] probe_l_5501F#1 = <tensor[3]>[r502E,r5039,r5044];
      tensor[3] _t506C#1 = VAdd<3>(probe_l_5501F,dPos40BB);
      femData:MeshPos cmp506F#1 = findPos3574 (meshData40BD,_t506C);
      return cmp506F
}
## input initialization
  ENTRY352A:  preds = []
    int timeSteps352B#1 = 32;
    globals.timeSteps3522 = timeSteps352B;
    real timeEps352E#1 = 0.1e-6;
    globals.timeEps3523 = timeEps352E;
    real stepSize3531#1 = 0.1e-1;
    globals.stepSize3525 = stepSize3531;
    int stepMax3534#1 = 100;
    globals.stepMax3526 = stepMax3534;
    return
## global-variable initialization
  ENTRY3538:  preds = []
    femData:Mesh meshData3539#3 = globals.meshData351F;
    femData:Space 0space03AB_intermedateGlobal353B#1 = globals.0space03AB_intermedateGlobal3520;
    femData:FemFunc 0data03AD_intermedateGlobal353D#1 = globals.0data03AD_intermedateGlobal3521;
    int _t353F#1 = 0;
    int _t3541#1 = 1;
    int _t3543#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3539);
    int _t3545#1 = ISub(_t3543,_t3541);
    int[] _t3547#1 = Range(_t353F,_t3545);
    femData:MeshCell[] _t3549#1 = <femData:MeshCell[]>{};
  FOREACH354C:  preds = [ASSIGN354A,NEXT3552]
    foreach (_t354B in _t3547) on exit goto ASSIGN3554
      femData:MeshCell[] _t3550#1 = phi(_t3549,_t354F)
    femData:MeshCell _t354D#1 = LoadFem<femData:MeshCell>(meshData3539,_t354B);
    femData:MeshCell[] _t354F#1 = Append<femData:MeshCell>(_t3550,_t354D);
    goto FOREACH354C
  ASSIGN3554:  preds = [FOREACH354C]
    femData:Space space3553#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal353B,meshData3539);
    femData:FemFunc data3555#2 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal353D,space3553);
    globals.data3527 = data3555;
    femData:Space _t3558#2 = ExtractFem<femData:Space,femData:FemFunc>(data3555);
    femData:Mesh _t355A#1 = ExtractFem<femData:Mesh,femData:Space>(_t3558);
    globals._t3528 = _t355A;
    globals._tX3529 = _t3558;
    return
## strand
  strand gg (tensor[3] startPos355F#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3566:  preds = []
        femData:Mesh meshData3567#1 = globals.meshData351F;
        tensor[3][1] _t3569#1 = <tensor[3][1]>{startPos355F};
        tensor[3][] _t356B#1 = MkDynamic<tensor[3],1>(_t3569);
        tensor[3][1] _t356D#1 = <tensor[3][1]>{startPos355F};
        tensor[3][] _t356F#1 = MkDynamic<tensor[3],1>(_t356D);
        int step3571#1 = 0;
        femData:MeshPos cPos3573#1 = findPos3574 (meshData3567,startPos355F);
        self.stream = _t356B;
        self.newStream = _t356F;
        self.step = step3571;
        self.cPos = cPos3573;
        self.altCPos = startPos355F;
        self.startPos = startPos355F;
        return
    end state init
    method update
        ENTRY3CC6:  preds = []
          femData:Mesh _t3CC7#2 = globals._t3528;
          femData:Space _t3CC9#20 = globals._tX3529;
          femData:FemFunc data3CCB#62 = globals.data3527;
          femData:Mesh meshData3CCD#2 = globals.meshData351F;
          real stepSize3CCF#3 = globals.stepSize3525;
          int stepMax3CD1#1 = globals.stepMax3526;
          tensor[3][] stream3CD3#2 = self.stream;
          tensor[3][] newStream3CD5#1 = self.newStream;
          int step3CD7#3 = self.step;
          femData:MeshPos cPos3CD9#6 = self.cPos;
          tensor[3] altCPos3CDB#5 = self.altCPos;
          tensor[3] startPos3CDD#1 = self.startPos;
          bool _t3CDF#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos3CD9);
          bool _t3CE1#1 = BNot(_t3CDF);
          if _t3CE1 then goto ASSIGN3CE5 else goto ASSIGN59B1
        ASSIGN3CE5:  preds = [COND3CE3]
          bool _t3CE4#1 = true;
          goto JOIN3CE8
        JOIN3CE8:  preds = [ASSIGN3CE5,JOIN59BA]
          bool _t3CE6#1 = phi(_t3CE4,_t3CE7)
          if _t3CE6 then goto STABILIZE3CEA else goto JOIN3CEB
        STABILIZE3CEA:  preds = [COND3CE9]
          stabilize
          goto JOIN3CEB
        JOIN3CEB:  preds = [*STABILIZE3CEA,COND3CE9]
          tensor[3] _t3CEC#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos3CD9);
          int _t3CEE#3 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos3CD9);
          femData:Mesh _t3CF0#18 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos3CD9);
          int ilit3CF3#6 = 4;
          int mulRes3CF4#4 = IMul(_t3CEE,ilit3CF3);
          int idx3CF7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,mulRes3CF4);
          int ilit3CF8#55 = 1;
          int addRes3CF9#1 = IAdd(mulRes3CF4,ilit3CF8);
          int idx3CFA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CF9);
          int ilit3CFB#54 = 2;
          int addRes3CFC#1 = IAdd(mulRes3CF4,ilit3CFB);
          int idx3CFD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CFC);
          int ilit3CFE#54 = 3;
          int addRes3CFF#1 = IAdd(mulRes3CF4,ilit3CFE);
          int idx3D00#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CFF);
          int mulRes3D16#3 = IMul(ilit3CFE,idx3CF7);
          int addRes3D19#1 = IAdd(ilit3CF8,mulRes3D16);
          int addRes3D1B#1 = IAdd(ilit3CFB,mulRes3D16);
          real dof_load3D1C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D16);
          real dof_load3D1D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D19);
          real dof_load3D1E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D1B);
          int mulRes3D21#3 = IMul(ilit3CFE,idx3CFA);
          int addRes3D23#1 = IAdd(ilit3CF8,mulRes3D21);
          int addRes3D24#1 = IAdd(ilit3CFB,mulRes3D21);
          real dof_load3D25#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D21);
          real dof_load3D26#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D23);
          real dof_load3D27#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D24);
          int mulRes3D2A#3 = IMul(ilit3CFE,idx3CFD);
          int addRes3D2C#1 = IAdd(ilit3CF8,mulRes3D2A);
          int addRes3D2D#1 = IAdd(ilit3CFB,mulRes3D2A);
          real dof_load3D2E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D2A);
          real dof_load3D2F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2C);
          real dof_load3D30#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2D);
          int mulRes3D33#3 = IMul(ilit3CFE,idx3D00);
          int addRes3D35#1 = IAdd(ilit3CF8,mulRes3D33);
          int addRes3D36#1 = IAdd(ilit3CFB,mulRes3D33);
          real dof_load3D37#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D33);
          real dof_load3D38#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D35);
          real dof_load3D39#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D36);
          real varAcc3D67#5 = VIndex<3,0>(_t3CEC);
          real varAcc3D68#4 = VIndex<3,1>(_t3CEC);
          real varAcc3D69#4 = VIndex<3,2>(_t3CEC);
          real coeff3D6A#15 = -0.1e1;
          real one3D6C#54 = 0.1e1;
          real prod3D6D#10 = RMul(one3D6C,one3D6C);
          real prod3D6E#4 = RMul(varAcc3D67,prod3D6D);
          real prod3D70#2 = RMul(varAcc3D68,one3D6C);
          real prod3D71#4 = RMul(one3D6C,prod3D70);
          real prod3D73#2 = RMul(one3D6C,varAcc3D69);
          real prod3D74#4 = RMul(one3D6C,prod3D73);
          real prod3D75#1 = RMul(one3D6C,prod3D6D);
          real mult3D76#6 = RMul(one3D6C,prod3D75);
          real mult3D77#2 = RMul(coeff3D6A,prod3D74);
          real mult3D78#2 = RMul(coeff3D6A,prod3D71);
          real mult3D79#2 = RMul(coeff3D6A,prod3D6E);
          real sum3D7A#1 = RAdd(mult3D78,mult3D79);
          real sum3D7B#1 = RAdd(mult3D77,sum3D7A);
          real sum3D7C#3 = RAdd(mult3D76,sum3D7B);
          real basisEval3D7E#3 = RMul(one3D6C,prod3D6E);
          real basisEval3D7F#3 = RMul(one3D6C,prod3D71);
          real basisEval3D80#3 = RMul(one3D6C,prod3D74);
          real r3DA1#1 = RMul(dof_load3D1C,sum3D7C);
          real r3DA4#1 = RMul(dof_load3D25,basisEval3D7E);
          real r3DA7#1 = RMul(dof_load3D2E,basisEval3D7F);
          real r3DAA#1 = RMul(dof_load3D37,basisEval3D80);
          real r3DAB#1 = RAdd(r3DA1,r3DA4);
          real r3DAC#1 = RAdd(r3DAB,r3DA7);
          real r3DAD#1 = RAdd(r3DAC,r3DAA);
          real r3DAF#1 = RMul(dof_load3D1D,sum3D7C);
          real r3DB1#1 = RMul(dof_load3D26,basisEval3D7E);
          real r3DB3#1 = RMul(dof_load3D2F,basisEval3D7F);
          real r3DB5#1 = RMul(dof_load3D38,basisEval3D80);
          real r3DB6#1 = RAdd(r3DAF,r3DB1);
          real r3DB7#1 = RAdd(r3DB6,r3DB3);
          real r3DB8#1 = RAdd(r3DB7,r3DB5);
          real r3DBA#1 = RMul(dof_load3D1E,sum3D7C);
          real r3DBC#1 = RMul(dof_load3D27,basisEval3D7E);
          real r3DBE#1 = RMul(dof_load3D30,basisEval3D7F);
          real r3DC0#1 = RMul(dof_load3D39,basisEval3D80);
          real r3DC1#1 = RAdd(r3DBA,r3DBC);
          real r3DC2#1 = RAdd(r3DC1,r3DBE);
          real r3DC3#1 = RAdd(r3DC2,r3DC0);
          tensor[3] probe_l_53D9E#1 = <tensor[3]>[r3DAD,r3DB8,r3DC3];
          tensor[3] op1_e3_l_73DEB#2 = VSub<3>(probe_l_53D9E,altCPos3CDB);
          real op1_e3_l_93DEE#1 = VDot<3>(op1_e3_l_73DEB,op1_e3_l_73DEB);
          real _t3DF1#1 = Sqrt(op1_e3_l_93DEE);
          real _t3DF4#1 = 0.1e-5;
          bool _t3DF6#1 = GT<real>(_t3DF1,_t3DF4);
          if _t3DF6 then goto ASSIGN3DFA else goto ASSIGN59AA
        ASSIGN3DFA:  preds = [COND3DF8]
          string _t3DF9#1 = "Error in tracing: At step:";
          string _t3DFB#1 = " with particle:";
          string _t3DFD#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t3DF9,step3CD7,_t3DFB,startPos3CDD,_t3DFD);
          goto JOIN3E00
        JOIN3E00:  preds = [MASSIGN3DFF,MASSIGN59AF]
          real _t3E01#1 = 0.5e0;
          if _t3CDF then goto ASSIGN3E05 else goto ASSIGN59A7
        ASSIGN3E05:  preds = [COND3E03]
          femData:MeshCell c3E04#1 = LoadFem<femData:MeshCell>(_t3CF0,_t3CEE);
          int _t3E06#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3E04);
          femData:FuncCell _t3E08#2 = LoadFem<femData:FuncCell>(data3CCB,_t3E06);
          femData:FemFunc _t3E0A#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3E08);
          femData:Space _t3E0C#10 = ExtractFem<femData:Space,femData:FemFunc>(_t3E0A);
          int _t3E0E#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3E08);
          int ilit3E11#1 = 10;
          int mulRes3E12#10 = IMul(_t3E0E,ilit3E11);
          int idx3E15#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,mulRes3E12);
          int addRes3E17#1 = IAdd(mulRes3E12,ilit3CF8);
          int idx3E18#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E17);
          int addRes3E1A#1 = IAdd(mulRes3E12,ilit3CFB);
          int idx3E1B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E1A);
          int addRes3E1D#1 = IAdd(mulRes3E12,ilit3CFE);
          int idx3E1E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E1D);
          int addRes3E20#1 = IAdd(mulRes3E12,ilit3CF3);
          int idx3E21#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E20);
          int ilit3E22#1 = 5;
          int addRes3E23#1 = IAdd(mulRes3E12,ilit3E22);
          int idx3E24#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E23);
          int ilit3E25#1 = 6;
          int addRes3E26#1 = IAdd(mulRes3E12,ilit3E25);
          int idx3E27#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E26);
          int ilit3E28#1 = 7;
          int addRes3E29#1 = IAdd(mulRes3E12,ilit3E28);
          int idx3E2A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E29);
          int ilit3E2B#1 = 8;
          int addRes3E2C#1 = IAdd(mulRes3E12,ilit3E2B);
          int idx3E2D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E2C);
          int ilit3E2E#1 = 9;
          int addRes3E2F#1 = IAdd(mulRes3E12,ilit3E2E);
          int idx3E30#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E2F);
          int mulRes3E58#3 = IMul(ilit3CFE,idx3E15);
          int addRes3E5B#1 = IAdd(ilit3CF8,mulRes3E58);
          int addRes3E5D#1 = IAdd(ilit3CFB,mulRes3E58);
          real dof_load3E5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E58);
          real dof_load3E5F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E5B);
          real dof_load3E60#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E5D);
          int mulRes3E63#3 = IMul(ilit3CFE,idx3E18);
          int addRes3E65#1 = IAdd(ilit3CF8,mulRes3E63);
          int addRes3E66#1 = IAdd(ilit3CFB,mulRes3E63);
          real dof_load3E67#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E63);
          real dof_load3E68#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E65);
          real dof_load3E69#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E66);
          int mulRes3E6C#3 = IMul(ilit3CFE,idx3E1B);
          int addRes3E6E#1 = IAdd(ilit3CF8,mulRes3E6C);
          int addRes3E6F#1 = IAdd(ilit3CFB,mulRes3E6C);
          real dof_load3E70#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E6C);
          real dof_load3E71#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6E);
          real dof_load3E72#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6F);
          int mulRes3E75#3 = IMul(ilit3CFE,idx3E1E);
          int addRes3E77#1 = IAdd(ilit3CF8,mulRes3E75);
          int addRes3E78#1 = IAdd(ilit3CFB,mulRes3E75);
          real dof_load3E79#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E75);
          real dof_load3E7A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E77);
          real dof_load3E7B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E78);
          int mulRes3E7F#3 = IMul(ilit3CFE,idx3E21);
          int addRes3E81#1 = IAdd(ilit3CF8,mulRes3E7F);
          int addRes3E82#1 = IAdd(ilit3CFB,mulRes3E7F);
          real dof_load3E83#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E7F);
          real dof_load3E84#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E81);
          real dof_load3E85#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E82);
          int mulRes3E89#3 = IMul(ilit3CFE,idx3E24);
          int addRes3E8B#1 = IAdd(ilit3CF8,mulRes3E89);
          int addRes3E8C#1 = IAdd(ilit3CFB,mulRes3E89);
          real dof_load3E8D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E89);
          real dof_load3E8E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8B);
          real dof_load3E8F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8C);
          int mulRes3E93#3 = IMul(ilit3CFE,idx3E27);
          int addRes3E95#1 = IAdd(ilit3CF8,mulRes3E93);
          int addRes3E96#1 = IAdd(ilit3CFB,mulRes3E93);
          real dof_load3E97#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E93);
          real dof_load3E98#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E95);
          real dof_load3E99#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E96);
          int mulRes3E9D#3 = IMul(ilit3CFE,idx3E2A);
          int addRes3E9F#1 = IAdd(ilit3CF8,mulRes3E9D);
          int addRes3EA0#1 = IAdd(ilit3CFB,mulRes3E9D);
          real dof_load3EA1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E9D);
          real dof_load3EA2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E9F);
          real dof_load3EA3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA0);
          int mulRes3EA7#3 = IMul(ilit3CFE,idx3E2D);
          int addRes3EA9#1 = IAdd(ilit3CF8,mulRes3EA7);
          int addRes3EAA#1 = IAdd(ilit3CFB,mulRes3EA7);
          real dof_load3EAB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3EA7);
          real dof_load3EAC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA9);
          real dof_load3EAD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EAA);
          int mulRes3EB1#3 = IMul(ilit3CFE,idx3E30);
          int addRes3EB3#1 = IAdd(ilit3CF8,mulRes3EB1);
          int addRes3EB4#1 = IAdd(ilit3CFB,mulRes3EB1);
          real dof_load3EB5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3EB1);
          real dof_load3EB6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB3);
          real dof_load3EB7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB4);
          real coeff3F24#3 = 0.2e1;
          real prod23F26#1 = RMul(varAcc3D67,varAcc3D67);
          real prod3F29#2 = RMul(prod23F26,prod3D6D);
          real coeff3F2A#6 = 0.4e1;
          real prod3F2D#2 = RMul(varAcc3D67,prod3D70);
          real prod3F30#2 = RMul(varAcc3D67,prod3D73);
          real coeff3F31#3 = -0.3e1;
          real prod23F33#1 = RMul(varAcc3D68,varAcc3D68);
          real prod3F34#1 = RMul(prod23F33,one3D6C);
          real prod3F35#2 = RMul(one3D6C,prod3F34);
          real prod3F36#1 = RMul(varAcc3D68,varAcc3D69);
          real prod3F37#2 = RMul(one3D6C,prod3F36);
          real prod23F39#1 = RMul(varAcc3D69,varAcc3D69);
          real prod3F3A#1 = RMul(one3D6C,prod23F39);
          real prod3F3B#2 = RMul(one3D6C,prod3F3A);
          real mult3F3F#1 = RMul(coeff3F31,prod3D74);
          real mult3F40#2 = RMul(coeff3F24,prod3F3B);
          real mult3F41#1 = RMul(coeff3F31,prod3D71);
          real mult3F42#4 = RMul(coeff3F2A,prod3F37);
          real mult3F43#2 = RMul(coeff3F24,prod3F35);
          real mult3F44#1 = RMul(coeff3F31,prod3D6E);
          real mult3F45#4 = RMul(coeff3F2A,prod3F30);
          real mult3F46#4 = RMul(coeff3F2A,prod3F2D);
          real mult3F47#2 = RMul(coeff3F24,prod3F29);
          real sum3F48#1 = RAdd(mult3F46,mult3F47);
          real sum3F49#1 = RAdd(mult3F45,sum3F48);
          real sum3F4A#1 = RAdd(mult3F44,sum3F49);
          real sum3F4B#1 = RAdd(mult3F43,sum3F4A);
          real sum3F4C#1 = RAdd(mult3F42,sum3F4B);
          real sum3F4D#1 = RAdd(mult3F41,sum3F4C);
          real sum3F4E#1 = RAdd(mult3F40,sum3F4D);
          real sum3F4F#1 = RAdd(mult3F3F,sum3F4E);
          real sum3F50#3 = RAdd(mult3D76,sum3F4F);
          real sum3F54#3 = RAdd(mult3D79,mult3F47);
          real sum3F57#3 = RAdd(mult3D78,mult3F43);
          real sum3F5A#3 = RAdd(mult3D77,mult3F40);
          real coeff3F5C#6 = -0.4e1;
          real mult3F5D#1 = RMul(coeff3F2A,prod3D74);
          real mult3F5E#1 = RMul(coeff3F5C,prod3F3B);
          real mult3F5F#2 = RMul(coeff3F5C,prod3F37);
          real mult3F60#2 = RMul(coeff3F5C,prod3F30);
          real sum3F61#1 = RAdd(mult3F5F,mult3F60);
          real sum3F62#1 = RAdd(mult3F5E,sum3F61);
          real sum3F63#3 = RAdd(mult3F5D,sum3F62);
          real mult3F65#1 = RMul(coeff3F2A,prod3D71);
          real mult3F66#1 = RMul(coeff3F5C,prod3F35);
          real mult3F67#2 = RMul(coeff3F5C,prod3F2D);
          real sum3F68#1 = RAdd(mult3F66,mult3F67);
          real sum3F69#1 = RAdd(mult3F5F,sum3F68);
          real sum3F6A#3 = RAdd(mult3F65,sum3F69);
          real mult3F6C#1 = RMul(coeff3F2A,prod3D6E);
          real mult3F6D#1 = RMul(coeff3F5C,prod3F29);
          real sum3F6E#1 = RAdd(mult3F67,mult3F6D);
          real sum3F6F#1 = RAdd(mult3F60,sum3F6E);
          real sum3F70#3 = RAdd(mult3F6C,sum3F6F);
          real r3FC9#1 = RMul(dof_load3E5E,sum3F50);
          real r3FCC#1 = RMul(dof_load3E67,sum3F54);
          real r3FCF#1 = RMul(dof_load3E70,sum3F57);
          real r3FD2#1 = RMul(dof_load3E79,sum3F5A);
          real r3FD5#1 = RMul(dof_load3E83,mult3F42);
          real r3FD8#1 = RMul(dof_load3E8D,mult3F45);
          real r3FDB#1 = RMul(dof_load3E97,mult3F46);
          real r3FDE#1 = RMul(dof_load3EA1,sum3F63);
          real r3FE1#1 = RMul(dof_load3EAB,sum3F6A);
          real r3FE4#1 = RMul(dof_load3EB5,sum3F70);
          real r3FE5#1 = RAdd(r3FC9,r3FCC);
          real r3FE6#1 = RAdd(r3FE5,r3FCF);
          real r3FE7#1 = RAdd(r3FE6,r3FD2);
          real r3FE8#1 = RAdd(r3FE7,r3FD5);
          real r3FE9#1 = RAdd(r3FE8,r3FD8);
          real r3FEA#1 = RAdd(r3FE9,r3FDB);
          real r3FEB#1 = RAdd(r3FEA,r3FDE);
          real r3FEC#1 = RAdd(r3FEB,r3FE1);
          real r3FED#2 = RAdd(r3FEC,r3FE4);
          real r3FEF#1 = RMul(dof_load3E5F,sum3F50);
          real r3FF1#1 = RMul(dof_load3E68,sum3F54);
          real r3FF3#1 = RMul(dof_load3E71,sum3F57);
          real r3FF5#1 = RMul(dof_load3E7A,sum3F5A);
          real r3FF7#1 = RMul(dof_load3E84,mult3F42);
          real r3FF9#1 = RMul(dof_load3E8E,mult3F45);
          real r3FFB#1 = RMul(dof_load3E98,mult3F46);
          real r3FFD#1 = RMul(dof_load3EA2,sum3F63);
          real r3FFF#1 = RMul(dof_load3EAC,sum3F6A);
          real r4001#1 = RMul(dof_load3EB6,sum3F70);
          real r4002#1 = RAdd(r3FEF,r3FF1);
          real r4003#1 = RAdd(r4002,r3FF3);
          real r4004#1 = RAdd(r4003,r3FF5);
          real r4005#1 = RAdd(r4004,r3FF7);
          real r4006#1 = RAdd(r4005,r3FF9);
          real r4007#1 = RAdd(r4006,r3FFB);
          real r4008#1 = RAdd(r4007,r3FFD);
          real r4009#1 = RAdd(r4008,r3FFF);
          real r400A#2 = RAdd(r4009,r4001);
          real r400C#1 = RMul(dof_load3E60,sum3F50);
          real r400E#1 = RMul(dof_load3E69,sum3F54);
          real r4010#1 = RMul(dof_load3E72,sum3F57);
          real r4012#1 = RMul(dof_load3E7B,sum3F5A);
          real r4014#1 = RMul(dof_load3E85,mult3F42);
          real r4016#1 = RMul(dof_load3E8F,mult3F45);
          real r4018#1 = RMul(dof_load3E99,mult3F46);
          real r401A#1 = RMul(dof_load3EA3,sum3F63);
          real r401C#1 = RMul(dof_load3EAD,sum3F6A);
          real r401E#1 = RMul(dof_load3EB7,sum3F70);
          real r401F#1 = RAdd(r400C,r400E);
          real r4020#1 = RAdd(r401F,r4010);
          real r4021#1 = RAdd(r4020,r4012);
          real r4022#1 = RAdd(r4021,r4014);
          real r4023#1 = RAdd(r4022,r4016);
          real r4024#1 = RAdd(r4023,r4018);
          real r4025#1 = RAdd(r4024,r401A);
          real r4026#1 = RAdd(r4025,r401C);
          real r4027#2 = RAdd(r4026,r401E);
          tensor[3] probe_l_83FC6#2 = <tensor[3]>[r3FED,r400A,r4027];
          real op1_e3_l_11408B#1 = VDot<3>(probe_l_83FC6,probe_l_83FC6);
          real op1_e3_l_12408E#1 = Sqrt(op1_e3_l_11408B);
          real r4093#3 = RDiv(one3D6C,op1_e3_l_12408E);
          real r4095#1 = RMul(r4093,r3FED);
          real r4097#1 = RMul(r4093,r400A);
          real r4099#1 = RMul(r4093,r4027);
          tensor[3] _t4091#1 = <tensor[3]>[r4095,r4097,r4099];
          goto JOIN40A6
        JOIN40A6:  preds = [ASSIGN40A3,ASSIGN59A8]
          tensor[3] _t40A4#3 = phi(_t4091,_t40A5)
          real r40A8#1 = TensorIndex<tensor[3],[0]>(_t40A4);
          real r40A9#6 = RMul(_t3E01,stepSize3CCF);
          real r40AA#1 = RMul(r40A9,r40A8);
          real r40AB#1 = TensorIndex<tensor[3],[1]>(_t40A4);
          real r40AC#1 = RMul(r40A9,r40AB);
          real r40AD#1 = TensorIndex<tensor[3],[2]>(_t40A4);
          real r40AE#1 = RMul(r40A9,r40AD);
          tensor[3] up140A7#1 = <tensor[3]>[r40AA,r40AC,r40AE];
          femData:MeshPos intermed40B8#4 = posMove40B9 (cPos3CD9,up140A7);
          femData:MeshPos callFindPos5073#2 = findPos3574 (_t3CC7,altCPos3CDB);
          int intPos5075#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5073);
          tensor[3] refPos5077#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5073);
          int ilit507A#3 = 10;
          int mulRes507B#10 = IMul(intPos5075,ilit507A);
          int idx507E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,mulRes507B);
          int addRes5080#1 = IAdd(mulRes507B,ilit3CF8);
          int idx5081#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5080);
          int addRes5083#1 = IAdd(mulRes507B,ilit3CFB);
          int idx5084#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5083);
          int addRes5086#1 = IAdd(mulRes507B,ilit3CFE);
          int idx5087#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5086);
          int addRes5089#1 = IAdd(mulRes507B,ilit3CF3);
          int idx508A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5089);
          int ilit508B#3 = 5;
          int addRes508C#1 = IAdd(mulRes507B,ilit508B);
          int idx508D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes508C);
          int ilit508E#3 = 6;
          int addRes508F#1 = IAdd(mulRes507B,ilit508E);
          int idx5090#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes508F);
          int ilit5091#3 = 7;
          int addRes5092#1 = IAdd(mulRes507B,ilit5091);
          int idx5093#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5092);
          int ilit5094#3 = 8;
          int addRes5095#1 = IAdd(mulRes507B,ilit5094);
          int idx5096#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5095);
          int ilit5097#3 = 9;
          int addRes5098#1 = IAdd(mulRes507B,ilit5097);
          int idx5099#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5098);
          int mulRes50C1#3 = IMul(ilit3CFE,idx507E);
          int addRes50C4#1 = IAdd(ilit3CF8,mulRes50C1);
          int addRes50C6#1 = IAdd(ilit3CFB,mulRes50C1);
          real dof_load50C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50C1);
          real dof_load50C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C4);
          real dof_load50C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C6);
          int mulRes50CC#3 = IMul(ilit3CFE,idx5081);
          int addRes50CE#1 = IAdd(ilit3CF8,mulRes50CC);
          int addRes50CF#1 = IAdd(ilit3CFB,mulRes50CC);
          real dof_load50D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50CC);
          real dof_load50D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CE);
          real dof_load50D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CF);
          int mulRes50D5#3 = IMul(ilit3CFE,idx5084);
          int addRes50D7#1 = IAdd(ilit3CF8,mulRes50D5);
          int addRes50D8#1 = IAdd(ilit3CFB,mulRes50D5);
          real dof_load50D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50D5);
          real dof_load50DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D7);
          real dof_load50DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D8);
          int mulRes50DE#3 = IMul(ilit3CFE,idx5087);
          int addRes50E0#1 = IAdd(ilit3CF8,mulRes50DE);
          int addRes50E1#1 = IAdd(ilit3CFB,mulRes50DE);
          real dof_load50E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50DE);
          real dof_load50E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E0);
          real dof_load50E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E1);
          int mulRes50E8#3 = IMul(ilit3CFE,idx508A);
          int addRes50EA#1 = IAdd(ilit3CF8,mulRes50E8);
          int addRes50EB#1 = IAdd(ilit3CFB,mulRes50E8);
          real dof_load50EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50E8);
          real dof_load50ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50EA);
          real dof_load50EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50EB);
          int mulRes50F2#3 = IMul(ilit3CFE,idx508D);
          int addRes50F4#1 = IAdd(ilit3CF8,mulRes50F2);
          int addRes50F5#1 = IAdd(ilit3CFB,mulRes50F2);
          real dof_load50F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50F2);
          real dof_load50F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F4);
          real dof_load50F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F5);
          int mulRes50FC#3 = IMul(ilit3CFE,idx5090);
          int addRes50FE#1 = IAdd(ilit3CF8,mulRes50FC);
          int addRes50FF#1 = IAdd(ilit3CFB,mulRes50FC);
          real dof_load5100#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50FC);
          real dof_load5101#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FE);
          real dof_load5102#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FF);
          int mulRes5106#3 = IMul(ilit3CFE,idx5093);
          int addRes5108#1 = IAdd(ilit3CF8,mulRes5106);
          int addRes5109#1 = IAdd(ilit3CFB,mulRes5106);
          real dof_load510A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5106);
          real dof_load510B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5108);
          real dof_load510C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5109);
          int mulRes5110#3 = IMul(ilit3CFE,idx5096);
          int addRes5112#1 = IAdd(ilit3CF8,mulRes5110);
          int addRes5113#1 = IAdd(ilit3CFB,mulRes5110);
          real dof_load5114#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5110);
          real dof_load5115#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5112);
          real dof_load5116#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5113);
          int mulRes511A#3 = IMul(ilit3CFE,idx5099);
          int addRes511C#1 = IAdd(ilit3CF8,mulRes511A);
          int addRes511D#1 = IAdd(ilit3CFB,mulRes511A);
          real dof_load511E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes511A);
          real dof_load511F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511C);
          real dof_load5120#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511D);
          real varAcc518A#5 = VIndex<3,0>(refPos5077);
          real varAcc518B#4 = VIndex<3,1>(refPos5077);
          real varAcc518C#4 = VIndex<3,2>(refPos5077);
          real coeff518D#9 = 0.2e1;
          real prod2518F#1 = RMul(varAcc518A,varAcc518A);
          real prod5192#2 = RMul(prod2518F,prod3D6D);
          real coeff5193#18 = 0.4e1;
          real prod5195#2 = RMul(varAcc518B,one3D6C);
          real prod5196#2 = RMul(varAcc518A,prod5195);
          real prod5198#2 = RMul(one3D6C,varAcc518C);
          real prod5199#2 = RMul(varAcc518A,prod5198);
          real coeff519A#9 = -0.3e1;
          real prod519B#3 = RMul(varAcc518A,prod3D6D);
          real prod2519C#1 = RMul(varAcc518B,varAcc518B);
          real prod519D#1 = RMul(prod2519C,one3D6C);
          real prod519E#2 = RMul(one3D6C,prod519D);
          real prod519F#1 = RMul(varAcc518B,varAcc518C);
          real prod51A0#2 = RMul(one3D6C,prod519F);
          real prod51A1#3 = RMul(one3D6C,prod5195);
          real prod251A2#1 = RMul(varAcc518C,varAcc518C);
          real prod51A3#1 = RMul(one3D6C,prod251A2);
          real prod51A4#2 = RMul(one3D6C,prod51A3);
          real prod51A5#3 = RMul(one3D6C,prod5198);
          real mult51A8#1 = RMul(coeff519A,prod51A5);
          real mult51A9#2 = RMul(coeff518D,prod51A4);
          real mult51AA#1 = RMul(coeff519A,prod51A1);
          real mult51AB#4 = RMul(coeff5193,prod51A0);
          real mult51AC#2 = RMul(coeff518D,prod519E);
          real mult51AD#1 = RMul(coeff519A,prod519B);
          real mult51AE#4 = RMul(coeff5193,prod5199);
          real mult51AF#4 = RMul(coeff5193,prod5196);
          real mult51B0#2 = RMul(coeff518D,prod5192);
          real sum51B1#1 = RAdd(mult51AF,mult51B0);
          real sum51B2#1 = RAdd(mult51AE,sum51B1);
          real sum51B3#1 = RAdd(mult51AD,sum51B2);
          real sum51B4#1 = RAdd(mult51AC,sum51B3);
          real sum51B5#1 = RAdd(mult51AB,sum51B4);
          real sum51B6#1 = RAdd(mult51AA,sum51B5);
          real sum51B7#1 = RAdd(mult51A9,sum51B6);
          real sum51B8#1 = RAdd(mult51A8,sum51B7);
          real sum51B9#3 = RAdd(mult3D76,sum51B8);
          real mult51BC#1 = RMul(coeff3D6A,prod519B);
          real sum51BD#3 = RAdd(mult51BC,mult51B0);
          real mult51BF#1 = RMul(coeff3D6A,prod51A1);
          real sum51C0#3 = RAdd(mult51BF,mult51AC);
          real mult51C2#1 = RMul(coeff3D6A,prod51A5);
          real sum51C3#3 = RAdd(mult51C2,mult51A9);
          real coeff51C5#18 = -0.4e1;
          real mult51C6#1 = RMul(coeff5193,prod51A5);
          real mult51C7#1 = RMul(coeff51C5,prod51A4);
          real mult51C8#2 = RMul(coeff51C5,prod51A0);
          real mult51C9#2 = RMul(coeff51C5,prod5199);
          real sum51CA#1 = RAdd(mult51C8,mult51C9);
          real sum51CB#1 = RAdd(mult51C7,sum51CA);
          real sum51CC#3 = RAdd(mult51C6,sum51CB);
          real mult51CE#1 = RMul(coeff5193,prod51A1);
          real mult51CF#1 = RMul(coeff51C5,prod519E);
          real mult51D0#2 = RMul(coeff51C5,prod5196);
          real sum51D1#1 = RAdd(mult51CF,mult51D0);
          real sum51D2#1 = RAdd(mult51C8,sum51D1);
          real sum51D3#3 = RAdd(mult51CE,sum51D2);
          real mult51D5#1 = RMul(coeff5193,prod519B);
          real mult51D6#1 = RMul(coeff51C5,prod5192);
          real sum51D7#1 = RAdd(mult51D0,mult51D6);
          real sum51D8#1 = RAdd(mult51C9,sum51D7);
          real sum51D9#3 = RAdd(mult51D5,sum51D8);
          real r5232#1 = RMul(dof_load50C7,sum51B9);
          real r5235#1 = RMul(dof_load50D0,sum51BD);
          real r5238#1 = RMul(dof_load50D9,sum51C0);
          real r523B#1 = RMul(dof_load50E2,sum51C3);
          real r523E#1 = RMul(dof_load50EC,mult51AB);
          real r5241#1 = RMul(dof_load50F6,mult51AE);
          real r5244#1 = RMul(dof_load5100,mult51AF);
          real r5247#1 = RMul(dof_load510A,sum51CC);
          real r524A#1 = RMul(dof_load5114,sum51D3);
          real r524D#1 = RMul(dof_load511E,sum51D9);
          real r524E#1 = RAdd(r5232,r5235);
          real r524F#1 = RAdd(r524E,r5238);
          real r5250#1 = RAdd(r524F,r523B);
          real r5251#1 = RAdd(r5250,r523E);
          real r5252#1 = RAdd(r5251,r5241);
          real r5253#1 = RAdd(r5252,r5244);
          real r5254#1 = RAdd(r5253,r5247);
          real r5255#1 = RAdd(r5254,r524A);
          real r5256#2 = RAdd(r5255,r524D);
          real r5258#1 = RMul(dof_load50C8,sum51B9);
          real r525A#1 = RMul(dof_load50D1,sum51BD);
          real r525C#1 = RMul(dof_load50DA,sum51C0);
          real r525E#1 = RMul(dof_load50E3,sum51C3);
          real r5260#1 = RMul(dof_load50ED,mult51AB);
          real r5262#1 = RMul(dof_load50F7,mult51AE);
          real r5264#1 = RMul(dof_load5101,mult51AF);
          real r5266#1 = RMul(dof_load510B,sum51CC);
          real r5268#1 = RMul(dof_load5115,sum51D3);
          real r526A#1 = RMul(dof_load511F,sum51D9);
          real r526B#1 = RAdd(r5258,r525A);
          real r526C#1 = RAdd(r526B,r525C);
          real r526D#1 = RAdd(r526C,r525E);
          real r526E#1 = RAdd(r526D,r5260);
          real r526F#1 = RAdd(r526E,r5262);
          real r5270#1 = RAdd(r526F,r5264);
          real r5271#1 = RAdd(r5270,r5266);
          real r5272#1 = RAdd(r5271,r5268);
          real r5273#2 = RAdd(r5272,r526A);
          real r5275#1 = RMul(dof_load50C9,sum51B9);
          real r5277#1 = RMul(dof_load50D2,sum51BD);
          real r5279#1 = RMul(dof_load50DB,sum51C0);
          real r527B#1 = RMul(dof_load50E4,sum51C3);
          real r527D#1 = RMul(dof_load50EE,mult51AB);
          real r527F#1 = RMul(dof_load50F8,mult51AE);
          real r5281#1 = RMul(dof_load5102,mult51AF);
          real r5283#1 = RMul(dof_load510C,sum51CC);
          real r5285#1 = RMul(dof_load5116,sum51D3);
          real r5287#1 = RMul(dof_load5120,sum51D9);
          real r5288#1 = RAdd(r5275,r5277);
          real r5289#1 = RAdd(r5288,r5279);
          real r528A#1 = RAdd(r5289,r527B);
          real r528B#1 = RAdd(r528A,r527D);
          real r528C#1 = RAdd(r528B,r527F);
          real r528D#1 = RAdd(r528C,r5281);
          real r528E#1 = RAdd(r528D,r5283);
          real r528F#1 = RAdd(r528E,r5285);
          real r5290#2 = RAdd(r528F,r5287);
          tensor[3] compositionl522F#2 = <tensor[3]>[r5256,r5273,r5290];
          real op1_e3_l_2052F4#1 = VDot<3>(compositionl522F,compositionl522F);
          real r52FA#1 = RMul(r40A9,r5256);
          real r52FC#1 = RMul(r40A9,r5273);
          real r52FE#1 = RMul(r40A9,r5290);
          real op1_e3_l_225308#1 = Sqrt(op1_e3_l_2052F4);
          real r530D#3 = RDiv(one3D6C,op1_e3_l_225308);
          real r530F#1 = RMul(r530D,r52FA);
          real r5311#1 = RMul(r530D,r52FC);
          real r5313#1 = RMul(r530D,r52FE);
          tensor[3] op1_e3_l_23530B#1 = <tensor[3]>[r530F,r5311,r5313];
          tensor[3] altIntermed531E#2 = VAdd<3>(altCPos3CDB,op1_e3_l_23530B);
          bool _t5321#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed40B8);
          bool _t5323#1 = BNot(_t5321);
          if _t5323 then goto ASSIGN5327 else goto ASSIGN59A1
        ASSIGN5327:  preds = [COND5325]
          bool _t5326#1 = true;
          goto JOIN532A
        JOIN532A:  preds = [ASSIGN5327,ASSIGN59A4]
          bool _t5328#1 = phi(_t5326,_t5329)
          if _t5328 then goto STABILIZE532C else goto JOIN532D
        STABILIZE532C:  preds = [COND532B]
          stabilize
          goto JOIN532D
        JOIN532D:  preds = [*STABILIZE532C,COND532B]
          if _t5321 then goto ASSIGN5330 else goto ASSIGN599E
        ASSIGN5330:  preds = [COND532E]
          femData:Mesh _t532F#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed40B8);
          int _t5331#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed40B8);
          femData:MeshCell c5333#1 = LoadFem<femData:MeshCell>(_t532F,_t5331);
          tensor[3] ref5335#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed40B8);
          int _t5337#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c5333);
          femData:FuncCell _t5339#2 = LoadFem<femData:FuncCell>(data3CCB,_t5337);
          femData:FemFunc _t533B#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t5339);
          femData:Space _t533D#10 = ExtractFem<femData:Space,femData:FemFunc>(_t533B);
          int _t533F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t5339);
          int mulRes5343#10 = IMul(_t533F,ilit507A);
          int idx5346#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,mulRes5343);
          int addRes5348#1 = IAdd(mulRes5343,ilit3CF8);
          int idx5349#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5348);
          int addRes534B#1 = IAdd(mulRes5343,ilit3CFB);
          int idx534C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes534B);
          int addRes534E#1 = IAdd(mulRes5343,ilit3CFE);
          int idx534F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes534E);
          int addRes5351#1 = IAdd(mulRes5343,ilit3CF3);
          int idx5352#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5351);
          int addRes5354#1 = IAdd(mulRes5343,ilit508B);
          int idx5355#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5354);
          int addRes5357#1 = IAdd(mulRes5343,ilit508E);
          int idx5358#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5357);
          int addRes535A#1 = IAdd(mulRes5343,ilit5091);
          int idx535B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes535A);
          int addRes535D#1 = IAdd(mulRes5343,ilit5094);
          int idx535E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes535D);
          int addRes5360#1 = IAdd(mulRes5343,ilit5097);
          int idx5361#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5360);
          int mulRes5389#3 = IMul(ilit3CFE,idx5346);
          int addRes538C#1 = IAdd(ilit3CF8,mulRes5389);
          int addRes538E#1 = IAdd(ilit3CFB,mulRes5389);
          real dof_load538F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes5389);
          real dof_load5390#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538C);
          real dof_load5391#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538E);
          int mulRes5394#3 = IMul(ilit3CFE,idx5349);
          int addRes5396#1 = IAdd(ilit3CF8,mulRes5394);
          int addRes5397#1 = IAdd(ilit3CFB,mulRes5394);
          real dof_load5398#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes5394);
          real dof_load5399#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5396);
          real dof_load539A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5397);
          int mulRes539D#3 = IMul(ilit3CFE,idx534C);
          int addRes539F#1 = IAdd(ilit3CF8,mulRes539D);
          int addRes53A0#1 = IAdd(ilit3CFB,mulRes539D);
          real dof_load53A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes539D);
          real dof_load53A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes539F);
          real dof_load53A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A0);
          int mulRes53A6#3 = IMul(ilit3CFE,idx534F);
          int addRes53A8#1 = IAdd(ilit3CF8,mulRes53A6);
          int addRes53A9#1 = IAdd(ilit3CFB,mulRes53A6);
          real dof_load53AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53A6);
          real dof_load53AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A8);
          real dof_load53AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A9);
          int mulRes53B0#3 = IMul(ilit3CFE,idx5352);
          int addRes53B2#1 = IAdd(ilit3CF8,mulRes53B0);
          int addRes53B3#1 = IAdd(ilit3CFB,mulRes53B0);
          real dof_load53B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53B0);
          real dof_load53B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B2);
          real dof_load53B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B3);
          int mulRes53BA#3 = IMul(ilit3CFE,idx5355);
          int addRes53BC#1 = IAdd(ilit3CF8,mulRes53BA);
          int addRes53BD#1 = IAdd(ilit3CFB,mulRes53BA);
          real dof_load53BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53BA);
          real dof_load53BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BC);
          real dof_load53C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BD);
          int mulRes53C4#3 = IMul(ilit3CFE,idx5358);
          int addRes53C6#1 = IAdd(ilit3CF8,mulRes53C4);
          int addRes53C7#1 = IAdd(ilit3CFB,mulRes53C4);
          real dof_load53C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53C4);
          real dof_load53C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C6);
          real dof_load53CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C7);
          int mulRes53CE#3 = IMul(ilit3CFE,idx535B);
          int addRes53D0#1 = IAdd(ilit3CF8,mulRes53CE);
          int addRes53D1#1 = IAdd(ilit3CFB,mulRes53CE);
          real dof_load53D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53CE);
          real dof_load53D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D0);
          real dof_load53D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D1);
          int mulRes53D8#3 = IMul(ilit3CFE,idx535E);
          int addRes53DA#1 = IAdd(ilit3CF8,mulRes53D8);
          int addRes53DB#1 = IAdd(ilit3CFB,mulRes53D8);
          real dof_load53DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53D8);
          real dof_load53DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53DA);
          real dof_load53DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53DB);
          int mulRes53E2#3 = IMul(ilit3CFE,idx5361);
          int addRes53E4#1 = IAdd(ilit3CF8,mulRes53E2);
          int addRes53E5#1 = IAdd(ilit3CFB,mulRes53E2);
          real dof_load53E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53E2);
          real dof_load53E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E4);
          real dof_load53E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E5);
          real varAcc5452#5 = VIndex<3,0>(ref5335);
          real varAcc5453#4 = VIndex<3,1>(ref5335);
          real varAcc5454#4 = VIndex<3,2>(ref5335);
          real prod25457#1 = RMul(varAcc5452,varAcc5452);
          real prod545A#2 = RMul(prod25457,prod3D6D);
          real prod545D#2 = RMul(varAcc5453,one3D6C);
          real prod545E#2 = RMul(varAcc5452,prod545D);
          real prod5460#2 = RMul(one3D6C,varAcc5454);
          real prod5461#2 = RMul(varAcc5452,prod5460);
          real prod5463#3 = RMul(varAcc5452,prod3D6D);
          real prod25464#1 = RMul(varAcc5453,varAcc5453);
          real prod5465#1 = RMul(prod25464,one3D6C);
          real prod5466#2 = RMul(one3D6C,prod5465);
          real prod5467#1 = RMul(varAcc5453,varAcc5454);
          real prod5468#2 = RMul(one3D6C,prod5467);
          real prod5469#3 = RMul(one3D6C,prod545D);
          real prod2546A#1 = RMul(varAcc5454,varAcc5454);
          real prod546B#1 = RMul(one3D6C,prod2546A);
          real prod546C#2 = RMul(one3D6C,prod546B);
          real prod546D#3 = RMul(one3D6C,prod5460);
          real mult5470#1 = RMul(coeff519A,prod546D);
          real mult5471#2 = RMul(coeff518D,prod546C);
          real mult5472#1 = RMul(coeff519A,prod5469);
          real mult5473#4 = RMul(coeff5193,prod5468);
          real mult5474#2 = RMul(coeff518D,prod5466);
          real mult5475#1 = RMul(coeff519A,prod5463);
          real mult5476#4 = RMul(coeff5193,prod5461);
          real mult5477#4 = RMul(coeff5193,prod545E);
          real mult5478#2 = RMul(coeff518D,prod545A);
          real sum5479#1 = RAdd(mult5477,mult5478);
          real sum547A#1 = RAdd(mult5476,sum5479);
          real sum547B#1 = RAdd(mult5475,sum547A);
          real sum547C#1 = RAdd(mult5474,sum547B);
          real sum547D#1 = RAdd(mult5473,sum547C);
          real sum547E#1 = RAdd(mult5472,sum547D);
          real sum547F#1 = RAdd(mult5471,sum547E);
          real sum5480#1 = RAdd(mult5470,sum547F);
          real sum5481#3 = RAdd(mult3D76,sum5480);
          real mult5484#1 = RMul(coeff3D6A,prod5463);
          real sum5485#3 = RAdd(mult5484,mult5478);
          real mult5487#1 = RMul(coeff3D6A,prod5469);
          real sum5488#3 = RAdd(mult5487,mult5474);
          real mult548A#1 = RMul(coeff3D6A,prod546D);
          real sum548B#3 = RAdd(mult548A,mult5471);
          real mult548E#1 = RMul(coeff5193,prod546D);
          real mult548F#1 = RMul(coeff51C5,prod546C);
          real mult5490#2 = RMul(coeff51C5,prod5468);
          real mult5491#2 = RMul(coeff51C5,prod5461);
          real sum5492#1 = RAdd(mult5490,mult5491);
          real sum5493#1 = RAdd(mult548F,sum5492);
          real sum5494#3 = RAdd(mult548E,sum5493);
          real mult5496#1 = RMul(coeff5193,prod5469);
          real mult5497#1 = RMul(coeff51C5,prod5466);
          real mult5498#2 = RMul(coeff51C5,prod545E);
          real sum5499#1 = RAdd(mult5497,mult5498);
          real sum549A#1 = RAdd(mult5490,sum5499);
          real sum549B#3 = RAdd(mult5496,sum549A);
          real mult549D#1 = RMul(coeff5193,prod5463);
          real mult549E#1 = RMul(coeff51C5,prod545A);
          real sum549F#1 = RAdd(mult5498,mult549E);
          real sum54A0#1 = RAdd(mult5491,sum549F);
          real sum54A1#3 = RAdd(mult549D,sum54A0);
          real r54FA#1 = RMul(dof_load538F,sum5481);
          real r54FD#1 = RMul(dof_load5398,sum5485);
          real r5500#1 = RMul(dof_load53A1,sum5488);
          real r5503#1 = RMul(dof_load53AA,sum548B);
          real r5506#1 = RMul(dof_load53B4,mult5473);
          real r5509#1 = RMul(dof_load53BE,mult5476);
          real r550C#1 = RMul(dof_load53C8,mult5477);
          real r550F#1 = RMul(dof_load53D2,sum5494);
          real r5512#1 = RMul(dof_load53DC,sum549B);
          real r5515#1 = RMul(dof_load53E6,sum54A1);
          real r5516#1 = RAdd(r54FA,r54FD);
          real r5517#1 = RAdd(r5516,r5500);
          real r5518#1 = RAdd(r5517,r5503);
          real r5519#1 = RAdd(r5518,r5506);
          real r551A#1 = RAdd(r5519,r5509);
          real r551B#1 = RAdd(r551A,r550C);
          real r551C#1 = RAdd(r551B,r550F);
          real r551D#1 = RAdd(r551C,r5512);
          real r551E#2 = RAdd(r551D,r5515);
          real r5520#1 = RMul(dof_load5390,sum5481);
          real r5522#1 = RMul(dof_load5399,sum5485);
          real r5524#1 = RMul(dof_load53A2,sum5488);
          real r5526#1 = RMul(dof_load53AB,sum548B);
          real r5528#1 = RMul(dof_load53B5,mult5473);
          real r552A#1 = RMul(dof_load53BF,mult5476);
          real r552C#1 = RMul(dof_load53C9,mult5477);
          real r552E#1 = RMul(dof_load53D3,sum5494);
          real r5530#1 = RMul(dof_load53DD,sum549B);
          real r5532#1 = RMul(dof_load53E7,sum54A1);
          real r5533#1 = RAdd(r5520,r5522);
          real r5534#1 = RAdd(r5533,r5524);
          real r5535#1 = RAdd(r5534,r5526);
          real r5536#1 = RAdd(r5535,r5528);
          real r5537#1 = RAdd(r5536,r552A);
          real r5538#1 = RAdd(r5537,r552C);
          real r5539#1 = RAdd(r5538,r552E);
          real r553A#1 = RAdd(r5539,r5530);
          real r553B#2 = RAdd(r553A,r5532);
          real r553D#1 = RMul(dof_load5391,sum5481);
          real r553F#1 = RMul(dof_load539A,sum5485);
          real r5541#1 = RMul(dof_load53A3,sum5488);
          real r5543#1 = RMul(dof_load53AC,sum548B);
          real r5545#1 = RMul(dof_load53B6,mult5473);
          real r5547#1 = RMul(dof_load53C0,mult5476);
          real r5549#1 = RMul(dof_load53CA,mult5477);
          real r554B#1 = RMul(dof_load53D4,sum5494);
          real r554D#1 = RMul(dof_load53DE,sum549B);
          real r554F#1 = RMul(dof_load53E8,sum54A1);
          real r5550#1 = RAdd(r553D,r553F);
          real r5551#1 = RAdd(r5550,r5541);
          real r5552#1 = RAdd(r5551,r5543);
          real r5553#1 = RAdd(r5552,r5545);
          real r5554#1 = RAdd(r5553,r5547);
          real r5555#1 = RAdd(r5554,r5549);
          real r5556#1 = RAdd(r5555,r554B);
          real r5557#1 = RAdd(r5556,r554D);
          real r5558#2 = RAdd(r5557,r554F);
          tensor[3] probe_l_854F7#2 = <tensor[3]>[r551E,r553B,r5558];
          real op1_e3_l_1155BC#1 = VDot<3>(probe_l_854F7,probe_l_854F7);
          real op1_e3_l_1255BF#1 = Sqrt(op1_e3_l_1155BC);
          real r55C4#3 = RDiv(one3D6C,op1_e3_l_1255BF);
          real r55C6#1 = RMul(r55C4,r551E);
          real r55C8#1 = RMul(r55C4,r553B);
          real r55CA#1 = RMul(r55C4,r5558);
          tensor[3] _t55C2#1 = <tensor[3]>[r55C6,r55C8,r55CA];
          goto JOIN55D7
        JOIN55D7:  preds = [ASSIGN55D4,ASSIGN599F]
          tensor[3] _t55D5#1 = phi(_t55C2,_t55D6)
          tensor[3] up255D8#1 = VScale<3>(stepSize3CCF,_t55D5);
          femData:MeshPos cPos55DB#6 = posMove40B9 (cPos3CD9,up255D8);
          femData:MeshPos callFindPos55DD#2 = findPos3574 (_t3CC7,altIntermed531E);
          int intPos55DF#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos55DD);
          tensor[3] refPos55E1#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos55DD);
          int mulRes55E5#10 = IMul(intPos55DF,ilit507A);
          int idx55E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,mulRes55E5);
          int addRes55EA#1 = IAdd(mulRes55E5,ilit3CF8);
          int idx55EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55EA);
          int addRes55ED#1 = IAdd(mulRes55E5,ilit3CFB);
          int idx55EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55ED);
          int addRes55F0#1 = IAdd(mulRes55E5,ilit3CFE);
          int idx55F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F0);
          int addRes55F3#1 = IAdd(mulRes55E5,ilit3CF3);
          int idx55F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F3);
          int addRes55F6#1 = IAdd(mulRes55E5,ilit508B);
          int idx55F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F6);
          int addRes55F9#1 = IAdd(mulRes55E5,ilit508E);
          int idx55FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F9);
          int addRes55FC#1 = IAdd(mulRes55E5,ilit5091);
          int idx55FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55FC);
          int addRes55FF#1 = IAdd(mulRes55E5,ilit5094);
          int idx5600#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55FF);
          int addRes5602#1 = IAdd(mulRes55E5,ilit5097);
          int idx5603#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5602);
          int mulRes562B#3 = IMul(ilit3CFE,idx55E8);
          int addRes562E#1 = IAdd(ilit3CF8,mulRes562B);
          int addRes5630#1 = IAdd(ilit3CFB,mulRes562B);
          real dof_load5631#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes562B);
          real dof_load5632#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes562E);
          real dof_load5633#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5630);
          int mulRes5636#3 = IMul(ilit3CFE,idx55EB);
          int addRes5638#1 = IAdd(ilit3CF8,mulRes5636);
          int addRes5639#1 = IAdd(ilit3CFB,mulRes5636);
          real dof_load563A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5636);
          real dof_load563B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5638);
          real dof_load563C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5639);
          int mulRes563F#3 = IMul(ilit3CFE,idx55EE);
          int addRes5641#1 = IAdd(ilit3CF8,mulRes563F);
          int addRes5642#1 = IAdd(ilit3CFB,mulRes563F);
          real dof_load5643#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes563F);
          real dof_load5644#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5641);
          real dof_load5645#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5642);
          int mulRes5648#3 = IMul(ilit3CFE,idx55F1);
          int addRes564A#1 = IAdd(ilit3CF8,mulRes5648);
          int addRes564B#1 = IAdd(ilit3CFB,mulRes5648);
          real dof_load564C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5648);
          real dof_load564D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes564A);
          real dof_load564E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes564B);
          int mulRes5652#3 = IMul(ilit3CFE,idx55F4);
          int addRes5654#1 = IAdd(ilit3CF8,mulRes5652);
          int addRes5655#1 = IAdd(ilit3CFB,mulRes5652);
          real dof_load5656#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5652);
          real dof_load5657#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5654);
          real dof_load5658#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5655);
          int mulRes565C#3 = IMul(ilit3CFE,idx55F7);
          int addRes565E#1 = IAdd(ilit3CF8,mulRes565C);
          int addRes565F#1 = IAdd(ilit3CFB,mulRes565C);
          real dof_load5660#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes565C);
          real dof_load5661#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565E);
          real dof_load5662#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565F);
          int mulRes5666#3 = IMul(ilit3CFE,idx55FA);
          int addRes5668#1 = IAdd(ilit3CF8,mulRes5666);
          int addRes5669#1 = IAdd(ilit3CFB,mulRes5666);
          real dof_load566A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5666);
          real dof_load566B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5668);
          real dof_load566C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5669);
          int mulRes5670#3 = IMul(ilit3CFE,idx55FD);
          int addRes5672#1 = IAdd(ilit3CF8,mulRes5670);
          int addRes5673#1 = IAdd(ilit3CFB,mulRes5670);
          real dof_load5674#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5670);
          real dof_load5675#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5672);
          real dof_load5676#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5673);
          int mulRes567A#3 = IMul(ilit3CFE,idx5600);
          int addRes567C#1 = IAdd(ilit3CF8,mulRes567A);
          int addRes567D#1 = IAdd(ilit3CFB,mulRes567A);
          real dof_load567E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes567A);
          real dof_load567F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567C);
          real dof_load5680#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567D);
          int mulRes5684#3 = IMul(ilit3CFE,idx5603);
          int addRes5686#1 = IAdd(ilit3CF8,mulRes5684);
          int addRes5687#1 = IAdd(ilit3CFB,mulRes5684);
          real dof_load5688#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5684);
          real dof_load5689#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5686);
          real dof_load568A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5687);
          real varAcc56F4#5 = VIndex<3,0>(refPos55E1);
          real varAcc56F5#4 = VIndex<3,1>(refPos55E1);
          real varAcc56F6#4 = VIndex<3,2>(refPos55E1);
          real prod256F9#1 = RMul(varAcc56F4,varAcc56F4);
          real prod56FC#2 = RMul(prod256F9,prod3D6D);
          real prod56FF#2 = RMul(varAcc56F5,one3D6C);
          real prod5700#2 = RMul(varAcc56F4,prod56FF);
          real prod5702#2 = RMul(one3D6C,varAcc56F6);
          real prod5703#2 = RMul(varAcc56F4,prod5702);
          real prod5705#3 = RMul(varAcc56F4,prod3D6D);
          real prod25706#1 = RMul(varAcc56F5,varAcc56F5);
          real prod5707#1 = RMul(prod25706,one3D6C);
          real prod5708#2 = RMul(one3D6C,prod5707);
          real prod5709#1 = RMul(varAcc56F5,varAcc56F6);
          real prod570A#2 = RMul(one3D6C,prod5709);
          real prod570B#3 = RMul(one3D6C,prod56FF);
          real prod2570C#1 = RMul(varAcc56F6,varAcc56F6);
          real prod570D#1 = RMul(one3D6C,prod2570C);
          real prod570E#2 = RMul(one3D6C,prod570D);
          real prod570F#3 = RMul(one3D6C,prod5702);
          real mult5712#1 = RMul(coeff519A,prod570F);
          real mult5713#2 = RMul(coeff518D,prod570E);
          real mult5714#1 = RMul(coeff519A,prod570B);
          real mult5715#4 = RMul(coeff5193,prod570A);
          real mult5716#2 = RMul(coeff518D,prod5708);
          real mult5717#1 = RMul(coeff519A,prod5705);
          real mult5718#4 = RMul(coeff5193,prod5703);
          real mult5719#4 = RMul(coeff5193,prod5700);
          real mult571A#2 = RMul(coeff518D,prod56FC);
          real sum571B#1 = RAdd(mult5719,mult571A);
          real sum571C#1 = RAdd(mult5718,sum571B);
          real sum571D#1 = RAdd(mult5717,sum571C);
          real sum571E#1 = RAdd(mult5716,sum571D);
          real sum571F#1 = RAdd(mult5715,sum571E);
          real sum5720#1 = RAdd(mult5714,sum571F);
          real sum5721#1 = RAdd(mult5713,sum5720);
          real sum5722#1 = RAdd(mult5712,sum5721);
          real sum5723#3 = RAdd(mult3D76,sum5722);
          real mult5726#1 = RMul(coeff3D6A,prod5705);
          real sum5727#3 = RAdd(mult5726,mult571A);
          real mult5729#1 = RMul(coeff3D6A,prod570B);
          real sum572A#3 = RAdd(mult5729,mult5716);
          real mult572C#1 = RMul(coeff3D6A,prod570F);
          real sum572D#3 = RAdd(mult572C,mult5713);
          real mult5730#1 = RMul(coeff5193,prod570F);
          real mult5731#1 = RMul(coeff51C5,prod570E);
          real mult5732#2 = RMul(coeff51C5,prod570A);
          real mult5733#2 = RMul(coeff51C5,prod5703);
          real sum5734#1 = RAdd(mult5732,mult5733);
          real sum5735#1 = RAdd(mult5731,sum5734);
          real sum5736#3 = RAdd(mult5730,sum5735);
          real mult5738#1 = RMul(coeff5193,prod570B);
          real mult5739#1 = RMul(coeff51C5,prod5708);
          real mult573A#2 = RMul(coeff51C5,prod5700);
          real sum573B#1 = RAdd(mult5739,mult573A);
          real sum573C#1 = RAdd(mult5732,sum573B);
          real sum573D#3 = RAdd(mult5738,sum573C);
          real mult573F#1 = RMul(coeff5193,prod5705);
          real mult5740#1 = RMul(coeff51C5,prod56FC);
          real sum5741#1 = RAdd(mult573A,mult5740);
          real sum5742#1 = RAdd(mult5733,sum5741);
          real sum5743#3 = RAdd(mult573F,sum5742);
          real r579C#1 = RMul(dof_load5631,sum5723);
          real r579F#1 = RMul(dof_load563A,sum5727);
          real r57A2#1 = RMul(dof_load5643,sum572A);
          real r57A5#1 = RMul(dof_load564C,sum572D);
          real r57A8#1 = RMul(dof_load5656,mult5715);
          real r57AB#1 = RMul(dof_load5660,mult5718);
          real r57AE#1 = RMul(dof_load566A,mult5719);
          real r57B1#1 = RMul(dof_load5674,sum5736);
          real r57B4#1 = RMul(dof_load567E,sum573D);
          real r57B7#1 = RMul(dof_load5688,sum5743);
          real r57B8#1 = RAdd(r579C,r579F);
          real r57B9#1 = RAdd(r57B8,r57A2);
          real r57BA#1 = RAdd(r57B9,r57A5);
          real r57BB#1 = RAdd(r57BA,r57A8);
          real r57BC#1 = RAdd(r57BB,r57AB);
          real r57BD#1 = RAdd(r57BC,r57AE);
          real r57BE#1 = RAdd(r57BD,r57B1);
          real r57BF#1 = RAdd(r57BE,r57B4);
          real r57C0#1 = RAdd(r57BF,r57B7);
          real r57C2#1 = RMul(dof_load5632,sum5723);
          real r57C4#1 = RMul(dof_load563B,sum5727);
          real r57C6#1 = RMul(dof_load5644,sum572A);
          real r57C8#1 = RMul(dof_load564D,sum572D);
          real r57CA#1 = RMul(dof_load5657,mult5715);
          real r57CC#1 = RMul(dof_load5661,mult5718);
          real r57CE#1 = RMul(dof_load566B,mult5719);
          real r57D0#1 = RMul(dof_load5675,sum5736);
          real r57D2#1 = RMul(dof_load567F,sum573D);
          real r57D4#1 = RMul(dof_load5689,sum5743);
          real r57D5#1 = RAdd(r57C2,r57C4);
          real r57D6#1 = RAdd(r57D5,r57C6);
          real r57D7#1 = RAdd(r57D6,r57C8);
          real r57D8#1 = RAdd(r57D7,r57CA);
          real r57D9#1 = RAdd(r57D8,r57CC);
          real r57DA#1 = RAdd(r57D9,r57CE);
          real r57DB#1 = RAdd(r57DA,r57D0);
          real r57DC#1 = RAdd(r57DB,r57D2);
          real r57DD#1 = RAdd(r57DC,r57D4);
          real r57DF#1 = RMul(dof_load5633,sum5723);
          real r57E1#1 = RMul(dof_load563C,sum5727);
          real r57E3#1 = RMul(dof_load5645,sum572A);
          real r57E5#1 = RMul(dof_load564E,sum572D);
          real r57E7#1 = RMul(dof_load5658,mult5715);
          real r57E9#1 = RMul(dof_load5662,mult5718);
          real r57EB#1 = RMul(dof_load566C,mult5719);
          real r57ED#1 = RMul(dof_load5676,sum5736);
          real r57EF#1 = RMul(dof_load5680,sum573D);
          real r57F1#1 = RMul(dof_load568A,sum5743);
          real r57F2#1 = RAdd(r57DF,r57E1);
          real r57F3#1 = RAdd(r57F2,r57E3);
          real r57F4#1 = RAdd(r57F3,r57E5);
          real r57F5#1 = RAdd(r57F4,r57E7);
          real r57F6#1 = RAdd(r57F5,r57E9);
          real r57F7#1 = RAdd(r57F6,r57EB);
          real r57F8#1 = RAdd(r57F7,r57ED);
          real r57F9#1 = RAdd(r57F8,r57EF);
          real r57FA#1 = RAdd(r57F9,r57F1);
          tensor[3] compositionl5799#3 = <tensor[3]>[r57C0,r57DD,r57FA];
          real op1_e3_l_19585E#1 = VDot<3>(compositionl5799,compositionl5799);
          tensor[3] op1_e3_l_205861#3 = VScale<3>(stepSize3CCF,compositionl5799);
          real op1_e3_l_215864#1 = Sqrt(op1_e3_l_19585E);
          real r5869#3 = RDiv(one3D6C,op1_e3_l_215864);
          real r586A#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_205861);
          real r586B#1 = RMul(r5869,r586A);
          real r586C#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_205861);
          real r586D#1 = RMul(r5869,r586C);
          real r586E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_205861);
          real r586F#1 = RMul(r5869,r586E);
          tensor[3] op1_e3_l_225867#1 = <tensor[3]>[r586B,r586D,r586F];
          tensor[3] altCPos587A#3 = VAdd<3>(altCPos3CDB,op1_e3_l_225867);
          bool _t587D#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos55DB);
          bool _t587F#1 = BNot(_t587D);
          if _t587F then goto MASSIGN5882 else goto JOIN5886
        MASSIGN5882:  preds = [COND5881]
          Print<[tensor[3][]]>(stream3CD3);
          self.cPos = cPos55DB;
          self.altCPos = altCPos587A;
          stabilize
          goto JOIN5886
        JOIN5886:  preds = [*STABILIZE5885,COND5881]
          tensor[3] _t5887#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos55DB);
          int _t5889#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos55DB);
          femData:Mesh _t588B#16 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos55DB);
          int mulRes588F#4 = IMul(_t5889,ilit3CF3);
          int idx5892#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,mulRes588F);
          int addRes5894#1 = IAdd(mulRes588F,ilit3CF8);
          int idx5895#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5894);
          int addRes5897#1 = IAdd(mulRes588F,ilit3CFB);
          int idx5898#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5897);
          int addRes589A#1 = IAdd(mulRes588F,ilit3CFE);
          int idx589B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes589A);
          int mulRes58B1#3 = IMul(ilit3CFE,idx5892);
          int addRes58B4#1 = IAdd(ilit3CF8,mulRes58B1);
          int addRes58B6#1 = IAdd(ilit3CFB,mulRes58B1);
          real dof_load58B7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58B1);
          real dof_load58B8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B4);
          real dof_load58B9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B6);
          int mulRes58BC#3 = IMul(ilit3CFE,idx5895);
          int addRes58BE#1 = IAdd(ilit3CF8,mulRes58BC);
          int addRes58BF#1 = IAdd(ilit3CFB,mulRes58BC);
          real dof_load58C0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58BC);
          real dof_load58C1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BE);
          real dof_load58C2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BF);
          int mulRes58C5#3 = IMul(ilit3CFE,idx5898);
          int addRes58C7#1 = IAdd(ilit3CF8,mulRes58C5);
          int addRes58C8#1 = IAdd(ilit3CFB,mulRes58C5);
          real dof_load58C9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58C5);
          real dof_load58CA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C7);
          real dof_load58CB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C8);
          int mulRes58CE#3 = IMul(ilit3CFE,idx589B);
          int addRes58D0#1 = IAdd(ilit3CF8,mulRes58CE);
          int addRes58D1#1 = IAdd(ilit3CFB,mulRes58CE);
          real dof_load58D2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58CE);
          real dof_load58D3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58D0);
          real dof_load58D4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58D1);
          real varAcc5902#1 = VIndex<3,0>(_t5887);
          real varAcc5903#1 = VIndex<3,1>(_t5887);
          real varAcc5904#1 = VIndex<3,2>(_t5887);
          real prod5909#2 = RMul(varAcc5902,prod3D6D);
          real prod590B#1 = RMul(varAcc5903,one3D6C);
          real prod590C#2 = RMul(one3D6C,prod590B);
          real prod590E#1 = RMul(one3D6C,varAcc5904);
          real prod590F#2 = RMul(one3D6C,prod590E);
          real mult5912#1 = RMul(coeff3D6A,prod590F);
          real mult5913#1 = RMul(coeff3D6A,prod590C);
          real mult5914#1 = RMul(coeff3D6A,prod5909);
          real sum5915#1 = RAdd(mult5913,mult5914);
          real sum5916#1 = RAdd(mult5912,sum5915);
          real sum5917#3 = RAdd(mult3D76,sum5916);
          real basisEval5919#3 = RMul(one3D6C,prod5909);
          real basisEval591A#3 = RMul(one3D6C,prod590C);
          real basisEval591B#3 = RMul(one3D6C,prod590F);
          real r593C#1 = RMul(dof_load58B7,sum5917);
          real r593F#1 = RMul(dof_load58C0,basisEval5919);
          real r5942#1 = RMul(dof_load58C9,basisEval591A);
          real r5945#1 = RMul(dof_load58D2,basisEval591B);
          real r5946#1 = RAdd(r593C,r593F);
          real r5947#1 = RAdd(r5946,r5942);
          real r5948#1 = RAdd(r5947,r5945);
          real r594A#1 = RMul(dof_load58B8,sum5917);
          real r594C#1 = RMul(dof_load58C1,basisEval5919);
          real r594E#1 = RMul(dof_load58CA,basisEval591A);
          real r5950#1 = RMul(dof_load58D3,basisEval591B);
          real r5951#1 = RAdd(r594A,r594C);
          real r5952#1 = RAdd(r5951,r594E);
          real r5953#1 = RAdd(r5952,r5950);
          real r5955#1 = RMul(dof_load58B9,sum5917);
          real r5957#1 = RMul(dof_load58C2,basisEval5919);
          real r5959#1 = RMul(dof_load58CB,basisEval591A);
          real r595B#1 = RMul(dof_load58D4,basisEval591B);
          real r595C#1 = RAdd(r5955,r5957);
          real r595D#1 = RAdd(r595C,r5959);
          real r595E#1 = RAdd(r595D,r595B);
          tensor[3] _t5939#1 = <tensor[3]>[r5948,r5953,r595E];
          tensor[3][1] _t5986#1 = <tensor[3][1]>{_t5939};
          tensor[3][] _t5988#1 = MkDynamic<tensor[3],1>(_t5986);
          tensor[3][] stream598A#1 = Concat<tensor[3]>(stream3CD3,_t5988);
          tensor[3][1] _t598C#1 = <tensor[3][1]>{altCPos587A};
          tensor[3][] _t598E#1 = MkDynamic<tensor[3],1>(_t598C);
          tensor[3][] newStream5990#1 = Concat<tensor[3]>(newStream3CD5,_t598E);
          int step5994#1 = IAdd(step3CD7,ilit3CF8);
          self.stream = stream598A;
          self.newStream = newStream5990;
          self.step = step5994;
          self.cPos = cPos55DB;
          self.altCPos = altCPos587A;
          active
        ASSIGN599E:  preds = [COND532E]
          real realLit599C#3 = 0.e0;
          tensor[3] _t55D6#1 = <tensor[3]>[realLit599C,realLit599C,realLit599C];
          goto JOIN55D7
        ASSIGN59A1:  preds = [COND5325]
          femData:MeshPos _t59A0#1 = findPos3574 (meshData3CCD,altIntermed531E);
          bool _t59A2#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t59A0);
          bool _t5329#1 = BNot(_t59A2);
          goto JOIN532A
        ASSIGN59A7:  preds = [COND3E03]
          real realLit59A5#3 = 0.e0;
          tensor[3] _t40A5#1 = <tensor[3]>[realLit59A5,realLit59A5,realLit59A5];
          goto JOIN40A6
        ASSIGN59AA:  preds = [COND3DF8]
          string _t59A9#1 = "fine in cell:";
          femData:MeshCell _t59AB#1 = LoadFem<femData:MeshCell>(_t3CF0,_t3CEE);
          string _t59AD#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t59A9,_t59AB,_t59AD);
          goto JOIN3E00
        ASSIGN59B1:  preds = [COND3CE3]
          femData:MeshPos _t59B0#1 = findPos3574 (meshData3CCD,altCPos3CDB);
          bool _t59B2#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t59B0);
          bool _t59B4#1 = BNot(_t59B2);
          if _t59B4 then goto ASSIGN59B8 else goto ASSIGN59BB
        ASSIGN59B8:  preds = [COND59B6]
          bool _t59B7#1 = true;
          goto JOIN59BA
        JOIN59BA:  preds = [ASSIGN59B8,ASSIGN59BB]
          bool _t3CE7#1 = phi(_t59B7,_t59B9)
          goto JOIN3CE8
        ASSIGN59BB:  preds = [COND59B6]
          bool _t59B9#1 = EQ<int>(step3CD7,stepMax3CD1);
          goto JOIN59BA
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY59BC:  preds = []
      tensor[3][] startPoints59BD#1 = globals.startPoints3524;
    FOREACH59C0:  preds = [ASSIGN59BE,NEXT59C2]
      foreach (x59BF in startPoints59BD) on exit goto RETURN59C3
      new gg(x59BF);
      goto FOREACH59C0
    RETURN59C3:  preds = [FOREACH59C0]
      return
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData351F (meshData) = <no-default>
  input 0space03AB_intermedateGlobal3520 (space) = <no-default>
  input 0data03AD_intermedateGlobal3521 (data) = <no-default>
  input timeSteps3522 (timeSteps) = <default>
  input timeEps3523 (timeEps) = <default>
  input startPoints3524 (startPoints) = <no-default>
  input stepSize3525 (stepSize) = <default>
  input stepMax3526 (stepMax) = <default>
  global femData:FemFunc data3527
  global femData:Mesh _t3528
  global femData:Space _tX3529
## functions
  function femData:MeshPos findPos3574 (femData:Mesh mesh3575#19, tensor[3] pos3576#3) {
    ENTRY3577:  preds = []
      real _t3578#3 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
      tensor[3] xn357A#1 = <tensor[3]>[_t3578,_t3578,_t3578];
      int newtonInt357C#1 = 0;
      int[] yayCells357E#1 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(mesh3575,pos3576);
    FOREACH3581:  preds = [ASSIGN357F,NEXT3CB5]
      foreach (cellItter3580 in yayCells357E) on exit goto ASSIGN3CB7
      int _t3582#1 = 16;
      int[] _t3584#1 = Range(newtonInt357C,_t3582);
    FOREACH3587:  preds = [ASSIGN3585,NEXT3CB4]
      foreach (newtonItter3586 in _t3584) on exit goto NEXT3CB5
        tensor[3] xn3B56#4 = phi(xn357A,xn3C1A)
      int ilit3589#1 = 4;
      int mulRes358A#4 = IMul(cellItter3580,ilit3589);
      int idx358D#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,mulRes358A);
      int ilit358E#5 = 1;
      int addRes358F#1 = IAdd(mulRes358A,ilit358E);
      int idx3590#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes358F);
      int ilit3591#5 = 2;
      int addRes3592#1 = IAdd(mulRes358A,ilit3591);
      int idx3593#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes3592);
      int ilit3594#5 = 3;
      int addRes3595#1 = IAdd(mulRes358A,ilit3594);
      int idx3596#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(mesh3575,addRes3595);
      int mulRes35AC#3 = IMul(ilit3594,idx358D);
      int addRes35AF#1 = IAdd(ilit358E,mulRes35AC);
      int addRes35B1#1 = IAdd(ilit3591,mulRes35AC);
      real dof_load35B2#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35AC);
      real dof_load35B3#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35AF);
      real dof_load35B4#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B1);
      int mulRes35B7#3 = IMul(ilit3594,idx3590);
      int addRes35B9#1 = IAdd(ilit358E,mulRes35B7);
      int addRes35BA#1 = IAdd(ilit3591,mulRes35B7);
      real dof_load35BB#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35B7);
      real dof_load35BC#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35B9);
      real dof_load35BD#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35BA);
      int mulRes35C0#3 = IMul(ilit3594,idx3593);
      int addRes35C2#1 = IAdd(ilit358E,mulRes35C0);
      int addRes35C3#1 = IAdd(ilit3591,mulRes35C0);
      real dof_load35C4#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35C0);
      real dof_load35C5#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C2);
      real dof_load35C6#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35C3);
      int mulRes35C9#3 = IMul(ilit3594,idx3596);
      int addRes35CB#1 = IAdd(ilit358E,mulRes35C9);
      int addRes35CC#1 = IAdd(ilit3591,mulRes35C9);
      real dof_load35CD#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,mulRes35C9);
      real dof_load35CE#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CB);
      real dof_load35CF#3 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(mesh3575,addRes35CC);
      real coeff3600#22 = -0.1e1;
      real one3601#33 = 0.1e1;
      real prod3602#2 = RMul(one3601,one3601);
      real prod3603#2 = RMul(one3601,prod3602);
      real basisEval3604#3 = RMul(coeff3600,prod3603);
      real basisEval3605#10 = RMul(one3601,prod3603);
      real basisEval3606#45 = 0.e0;
      real r361D#2 = RMul(dof_load35B2,basisEval3604);
      real r3620#1 = RMul(dof_load35BB,basisEval3605);
      real r3623#2 = RMul(dof_load35C4,basisEval3606);
      real r3626#2 = RMul(dof_load35CD,basisEval3606);
      real r3627#1 = RAdd(r361D,r3620);
      real r3628#1 = RAdd(r3627,r3623);
      real r3629#13 = RAdd(r3628,r3626);
      real r362D#1 = RMul(dof_load35BB,basisEval3606);
      real r362F#1 = RMul(dof_load35C4,basisEval3605);
      real r3632#2 = RAdd(r361D,r362D);
      real r3633#1 = RAdd(r3632,r362F);
      real r3634#13 = RAdd(r3633,r3626);
      real r363C#1 = RMul(dof_load35CD,basisEval3605);
      real r363E#1 = RAdd(r3632,r3623);
      real r363F#12 = RAdd(r363E,r363C);
      real r3642#2 = RMul(dof_load35B3,basisEval3604);
      real r3644#1 = RMul(dof_load35BC,basisEval3605);
      real r3646#2 = RMul(dof_load35C5,basisEval3606);
      real r3648#2 = RMul(dof_load35CE,basisEval3606);
      real r3649#1 = RAdd(r3642,r3644);
      real r364A#1 = RAdd(r3649,r3646);
      real r364B#13 = RAdd(r364A,r3648);
      real r364D#1 = RMul(dof_load35BC,basisEval3606);
      real r364E#1 = RMul(dof_load35C5,basisEval3605);
      real r3650#2 = RAdd(r3642,r364D);
      real r3651#1 = RAdd(r3650,r364E);
      real r3652#13 = RAdd(r3651,r3648);
      real r3656#1 = RMul(dof_load35CE,basisEval3605);
      real r3658#1 = RAdd(r3650,r3646);
      real r3659#12 = RAdd(r3658,r3656);
      real r365C#2 = RMul(dof_load35B4,basisEval3604);
      real r365E#1 = RMul(dof_load35BD,basisEval3605);
      real r3660#2 = RMul(dof_load35C6,basisEval3606);
      real r3662#2 = RMul(dof_load35CF,basisEval3606);
      real r3663#1 = RAdd(r365C,r365E);
      real r3664#1 = RAdd(r3663,r3660);
      real r3665#13 = RAdd(r3664,r3662);
      real r3667#1 = RMul(dof_load35BD,basisEval3606);
      real r3668#1 = RMul(dof_load35C6,basisEval3605);
      real r366A#2 = RAdd(r365C,r3667);
      real r366B#1 = RAdd(r366A,r3668);
      real r366C#13 = RAdd(r366B,r3662);
      real r3670#1 = RMul(dof_load35CF,basisEval3605);
      real r3672#1 = RAdd(r366A,r3660);
      real r3673#12 = RAdd(r3672,r3670);
      real r36D4#3 = RMul(basisEval3606,r3629);
      real r36D6#3 = RMul(basisEval3606,r364B);
      real r36D8#5 = RMul(basisEval3606,r3665);
      real r36D9#3 = RAdd(r36D4,r36D6);
      real r36DA#9 = RAdd(r36D9,r36D8);
      real r36DC#3 = RMul(basisEval3606,r3634);
      real r36DE#3 = RMul(basisEval3606,r3652);
      real r36E0#5 = RMul(basisEval3606,r366C);
      real r36E1#3 = RAdd(r36DC,r36DE);
      real r36E2#9 = RAdd(r36E1,r36E0);
      real r36E4#3 = RMul(basisEval3606,r363F);
      real r36E6#3 = RMul(basisEval3606,r3659);
      real r36E8#5 = RMul(basisEval3606,r3673);
      real r36E9#3 = RAdd(r36E4,r36E6);
      real r36EA#12 = RAdd(r36E9,r36E8);
      real r36ED#1 = RMul(coeff3600,r3665);
      real r36EE#3 = RAdd(r36D9,r36ED);
      real r36EF#1 = RMul(coeff3600,r366C);
      real r36F0#3 = RAdd(r36E1,r36EF);
      real r36F1#1 = RMul(coeff3600,r3673);
      real r36F2#4 = RAdd(r36E9,r36F1);
      real r36F5#1 = RMul(one3601,r364B);
      real r36F6#1 = RAdd(r36D4,r36F5);
      real r36F7#3 = RAdd(r36F6,r36D8);
      real r36F8#1 = RMul(one3601,r3652);
      real r36F9#1 = RAdd(r36DC,r36F8);
      real r36FA#3 = RAdd(r36F9,r36E0);
      real r36FB#1 = RMul(one3601,r3659);
      real r36FC#1 = RAdd(r36E4,r36FB);
      real r36FD#4 = RAdd(r36FC,r36E8);
      real r3700#1 = RMul(one3601,r3665);
      real r3701#3 = RAdd(r36D9,r3700);
      real r3702#1 = RMul(one3601,r366C);
      real r3703#3 = RAdd(r36E1,r3702);
      real r3704#1 = RMul(one3601,r3673);
      real r3705#4 = RAdd(r36E9,r3704);
      real r3707#1 = RMul(coeff3600,r3629);
      real r3708#1 = RAdd(r3707,r36D6);
      real r3709#3 = RAdd(r3708,r36D8);
      real r370A#1 = RMul(coeff3600,r3634);
      real r370B#1 = RAdd(r370A,r36DE);
      real r370C#3 = RAdd(r370B,r36E0);
      real r370D#1 = RMul(coeff3600,r363F);
      real r370E#1 = RAdd(r370D,r36E6);
      real r370F#4 = RAdd(r370E,r36E8);
      real r3712#1 = RMul(coeff3600,r364B);
      real r3713#1 = RAdd(r36D4,r3712);
      real r3714#3 = RAdd(r3713,r36D8);
      real r3715#1 = RMul(coeff3600,r3652);
      real r3716#1 = RAdd(r36DC,r3715);
      real r3717#3 = RAdd(r3716,r36E0);
      real r3718#1 = RMul(coeff3600,r3659);
      real r3719#1 = RAdd(r36E4,r3718);
      real r371A#4 = RAdd(r3719,r36E8);
      real r371C#1 = RMul(one3601,r3629);
      real r371D#1 = RAdd(r371C,r36D6);
      real r371E#3 = RAdd(r371D,r36D8);
      real r371F#1 = RMul(one3601,r3634);
      real r3720#1 = RAdd(r371F,r36DE);
      real r3721#3 = RAdd(r3720,r36E0);
      real r3722#1 = RMul(one3601,r363F);
      real r3723#1 = RAdd(r3722,r36E6);
      real r3724#4 = RAdd(r3723,r36E8);
      real r3781#1 = RMul(r3629,r36DA);
      real r3784#1 = RMul(r364B,r3701);
      real r3787#1 = RMul(r3665,r3714);
      real r3788#1 = RAdd(r3781,r3784);
      real r3789#1 = RAdd(r3788,r3787);
      real r378B#1 = RMul(r3629,r36E2);
      real r378D#1 = RMul(r364B,r3703);
      real r378F#1 = RMul(r3665,r3717);
      real r3790#1 = RAdd(r378B,r378D);
      real r3791#2 = RAdd(r3790,r378F);
      real r3793#1 = RMul(r3629,r36EA);
      real r3795#1 = RMul(r364B,r3705);
      real r3797#1 = RMul(r3665,r371A);
      real r3798#1 = RAdd(r3793,r3795);
      real r3799#2 = RAdd(r3798,r3797);
      real r379C#1 = RMul(r3629,r36EE);
      real r379E#1 = RMul(r364B,r36DA);
      real r37A0#1 = RMul(r3665,r371E);
      real r37A1#1 = RAdd(r379C,r379E);
      real r37A2#1 = RAdd(r37A1,r37A0);
      real r37A4#1 = RMul(r3629,r36F0);
      real r37A6#1 = RMul(r364B,r36E2);
      real r37A8#1 = RMul(r3665,r3721);
      real r37A9#1 = RAdd(r37A4,r37A6);
      real r37AA#2 = RAdd(r37A9,r37A8);
      real r37AC#1 = RMul(r3629,r36F2);
      real r37AE#1 = RMul(r364B,r36EA);
      real r37B0#1 = RMul(r3665,r3724);
      real r37B1#1 = RAdd(r37AC,r37AE);
      real r37B2#2 = RAdd(r37B1,r37B0);
      real r37B5#1 = RMul(r3629,r36F7);
      real r37B7#1 = RMul(r364B,r3709);
      real r37B9#1 = RMul(r3665,r36DA);
      real r37BA#1 = RAdd(r37B5,r37B7);
      real r37BB#1 = RAdd(r37BA,r37B9);
      real r37BD#1 = RMul(r3629,r36FA);
      real r37BF#1 = RMul(r364B,r370C);
      real r37C1#1 = RMul(r3665,r36E2);
      real r37C2#1 = RAdd(r37BD,r37BF);
      real r37C3#2 = RAdd(r37C2,r37C1);
      real r37C5#1 = RMul(r3629,r36FD);
      real r37C7#1 = RMul(r364B,r370F);
      real r37C9#1 = RMul(r3665,r36EA);
      real r37CA#1 = RAdd(r37C5,r37C7);
      real r37CB#2 = RAdd(r37CA,r37C9);
      real r37CF#1 = RMul(r3634,r36DA);
      real r37D1#1 = RMul(r3652,r3701);
      real r37D3#1 = RMul(r366C,r3714);
      real r37D4#1 = RAdd(r37CF,r37D1);
      real r37D5#2 = RAdd(r37D4,r37D3);
      real r37D6#1 = RMul(r3634,r36E2);
      real r37D7#1 = RMul(r3652,r3703);
      real r37D8#1 = RMul(r366C,r3717);
      real r37D9#1 = RAdd(r37D6,r37D7);
      real r37DA#1 = RAdd(r37D9,r37D8);
      real r37DB#1 = RMul(r3634,r36EA);
      real r37DC#1 = RMul(r3652,r3705);
      real r37DD#1 = RMul(r366C,r371A);
      real r37DE#1 = RAdd(r37DB,r37DC);
      real r37DF#2 = RAdd(r37DE,r37DD);
      real r37E1#1 = RMul(r3634,r36EE);
      real r37E2#1 = RMul(r3652,r36DA);
      real r37E3#1 = RMul(r366C,r371E);
      real r37E4#1 = RAdd(r37E1,r37E2);
      real r37E5#2 = RAdd(r37E4,r37E3);
      real r37E6#1 = RMul(r3634,r36F0);
      real r37E7#1 = RMul(r3652,r36E2);
      real r37E8#1 = RMul(r366C,r3721);
      real r37E9#1 = RAdd(r37E6,r37E7);
      real r37EA#1 = RAdd(r37E9,r37E8);
      real r37EB#1 = RMul(r3634,r36F2);
      real r37EC#1 = RMul(r3652,r36EA);
      real r37ED#1 = RMul(r366C,r3724);
      real r37EE#1 = RAdd(r37EB,r37EC);
      real r37EF#2 = RAdd(r37EE,r37ED);
      real r37F1#1 = RMul(r3634,r36F7);
      real r37F2#1 = RMul(r3652,r3709);
      real r37F3#1 = RMul(r366C,r36DA);
      real r37F4#1 = RAdd(r37F1,r37F2);
      real r37F5#2 = RAdd(r37F4,r37F3);
      real r37F6#1 = RMul(r3634,r36FA);
      real r37F7#1 = RMul(r3652,r370C);
      real r37F8#1 = RMul(r366C,r36E2);
      real r37F9#1 = RAdd(r37F6,r37F7);
      real r37FA#1 = RAdd(r37F9,r37F8);
      real r37FB#1 = RMul(r3634,r36FD);
      real r37FC#1 = RMul(r3652,r370F);
      real r37FD#1 = RMul(r366C,r36EA);
      real r37FE#1 = RAdd(r37FB,r37FC);
      real r37FF#2 = RAdd(r37FE,r37FD);
      real r3803#1 = RMul(r363F,r36DA);
      real r3805#1 = RMul(r3659,r3701);
      real r3807#1 = RMul(r3673,r3714);
      real r3808#1 = RAdd(r3803,r3805);
      real r3809#2 = RAdd(r3808,r3807);
      real r380A#1 = RMul(r363F,r36E2);
      real r380B#1 = RMul(r3659,r3703);
      real r380C#1 = RMul(r3673,r3717);
      real r380D#1 = RAdd(r380A,r380B);
      real r380E#2 = RAdd(r380D,r380C);
      real r380F#1 = RMul(r363F,r36EA);
      real r3810#1 = RMul(r3659,r3705);
      real r3811#1 = RMul(r3673,r371A);
      real r3812#1 = RAdd(r380F,r3810);
      real r3813#1 = RAdd(r3812,r3811);
      real r3815#1 = RMul(r363F,r36EE);
      real r3816#1 = RMul(r3659,r36DA);
      real r3817#1 = RMul(r3673,r371E);
      real r3818#1 = RAdd(r3815,r3816);
      real r3819#2 = RAdd(r3818,r3817);
      real r381A#1 = RMul(r363F,r36F0);
      real r381B#1 = RMul(r3659,r36E2);
      real r381C#1 = RMul(r3673,r3721);
      real r381D#1 = RAdd(r381A,r381B);
      real r381E#2 = RAdd(r381D,r381C);
      real r381F#1 = RMul(r363F,r36F2);
      real r3820#1 = RMul(r3659,r36EA);
      real r3821#1 = RMul(r3673,r3724);
      real r3822#1 = RAdd(r381F,r3820);
      real r3823#1 = RAdd(r3822,r3821);
      real r3825#1 = RMul(r363F,r36F7);
      real r3826#1 = RMul(r3659,r3709);
      real r3827#1 = RMul(r3673,r36DA);
      real r3828#1 = RAdd(r3825,r3826);
      real r3829#2 = RAdd(r3828,r3827);
      real r382A#1 = RMul(r363F,r36FA);
      real r382B#1 = RMul(r3659,r370C);
      real r382C#1 = RMul(r3673,r36E2);
      real r382D#1 = RAdd(r382A,r382B);
      real r382E#2 = RAdd(r382D,r382C);
      real r382F#1 = RMul(r363F,r36FD);
      real r3830#1 = RMul(r3659,r370F);
      real r3831#1 = RMul(r3673,r36EA);
      real r3832#1 = RAdd(r382F,r3830);
      real r3833#1 = RAdd(r3832,r3831);
      tensor[3] probe_l_1438EF#1 = <tensor[3]>[r3629,r364B,r3665];
      tensor[3] probe_l_15393C#3 = <tensor[3]>[r3634,r3652,r366C];
      tensor[3] tensor39E7#1 = <tensor[3]>[r36EA,r3705,r371A];
      tensor[3] tensor39ED#1 = <tensor[3]>[r36F2,r36EA,r3724];
      tensor[3] tensor39F4#1 = <tensor[3]>[r36FD,r370F,r36EA];
      real vdot3A17#1 = VDot<3>(probe_l_15393C,tensor39E7);
      real vdot3A19#1 = VDot<3>(probe_l_15393C,tensor39ED);
      real vdot3A1B#1 = VDot<3>(probe_l_15393C,tensor39F4);
      tensor[3] op1_e3_l_183A15#1 = <tensor[3]>[vdot3A17,vdot3A19,vdot3A1B];
      real op1_e3_l_193A24#1 = VDot<3>(probe_l_1438EF,op1_e3_l_183A15);
      real r3A2A#2 = RMul(basisEval3606,r3789);
      real r3A2C#1 = RMul(basisEval3606,r3791);
      real r3A2E#2 = RMul(basisEval3606,r3799);
      real r3A30#2 = RMul(basisEval3606,r37D5);
      real r3A32#3 = RMul(basisEval3606,r37DA);
      real r3A35#1 = RMul(one3601,r37DF);
      real r3A37#2 = RMul(basisEval3606,r3809);
      real r3A3A#1 = RMul(coeff3600,r380E);
      real r3A3C#3 = RMul(basisEval3606,r3813);
      real r3A3D#2 = RAdd(r3A2A,r3A2C);
      real r3A3E#1 = RAdd(r3A3D,r3A2E);
      real r3A3F#1 = RAdd(r3A3E,r3A30);
      real r3A40#1 = RAdd(r3A3F,r3A32);
      real r3A41#1 = RAdd(r3A40,r3A35);
      real r3A42#1 = RAdd(r3A41,r3A37);
      real r3A43#1 = RAdd(r3A42,r3A3A);
      real r3A44#1 = RAdd(r3A43,r3A3C);
      real r3A46#2 = RMul(basisEval3606,r37A2);
      real r3A48#1 = RMul(basisEval3606,r37AA);
      real r3A4A#2 = RMul(basisEval3606,r37B2);
      real r3A4C#2 = RMul(basisEval3606,r37E5);
      real r3A4E#3 = RMul(basisEval3606,r37EA);
      real r3A50#1 = RMul(one3601,r37EF);
      real r3A52#2 = RMul(basisEval3606,r3819);
      real r3A54#1 = RMul(coeff3600,r381E);
      real r3A56#3 = RMul(basisEval3606,r3823);
      real r3A57#2 = RAdd(r3A46,r3A48);
      real r3A58#1 = RAdd(r3A57,r3A4A);
      real r3A59#1 = RAdd(r3A58,r3A4C);
      real r3A5A#1 = RAdd(r3A59,r3A4E);
      real r3A5B#1 = RAdd(r3A5A,r3A50);
      real r3A5C#1 = RAdd(r3A5B,r3A52);
      real r3A5D#1 = RAdd(r3A5C,r3A54);
      real r3A5E#1 = RAdd(r3A5D,r3A56);
      real r3A60#2 = RMul(basisEval3606,r37BB);
      real r3A62#1 = RMul(basisEval3606,r37C3);
      real r3A64#2 = RMul(basisEval3606,r37CB);
      real r3A66#2 = RMul(basisEval3606,r37F5);
      real r3A68#3 = RMul(basisEval3606,r37FA);
      real r3A6A#1 = RMul(one3601,r37FF);
      real r3A6C#2 = RMul(basisEval3606,r3829);
      real r3A6E#1 = RMul(coeff3600,r382E);
      real r3A70#3 = RMul(basisEval3606,r3833);
      real r3A71#2 = RAdd(r3A60,r3A62);
      real r3A72#1 = RAdd(r3A71,r3A64);
      real r3A73#1 = RAdd(r3A72,r3A66);
      real r3A74#1 = RAdd(r3A73,r3A68);
      real r3A75#1 = RAdd(r3A74,r3A6A);
      real r3A76#1 = RAdd(r3A75,r3A6C);
      real r3A77#1 = RAdd(r3A76,r3A6E);
      real r3A78#1 = RAdd(r3A77,r3A70);
      real r3A7A#1 = RMul(coeff3600,r3799);
      real r3A7B#2 = RMul(basisEval3606,r37DF);
      real r3A7C#1 = RMul(one3601,r3809);
      real r3A7D#2 = RMul(basisEval3606,r380E);
      real r3A7E#1 = RAdd(r3A3D,r3A7A);
      real r3A7F#1 = RAdd(r3A7E,r3A30);
      real r3A80#1 = RAdd(r3A7F,r3A32);
      real r3A81#1 = RAdd(r3A80,r3A7B);
      real r3A82#1 = RAdd(r3A81,r3A7C);
      real r3A83#1 = RAdd(r3A82,r3A7D);
      real r3A84#1 = RAdd(r3A83,r3A3C);
      real r3A85#1 = RMul(coeff3600,r37B2);
      real r3A86#2 = RMul(basisEval3606,r37EF);
      real r3A87#1 = RMul(one3601,r3819);
      real r3A88#2 = RMul(basisEval3606,r381E);
      real r3A89#1 = RAdd(r3A57,r3A85);
      real r3A8A#1 = RAdd(r3A89,r3A4C);
      real r3A8B#1 = RAdd(r3A8A,r3A4E);
      real r3A8C#1 = RAdd(r3A8B,r3A86);
      real r3A8D#1 = RAdd(r3A8C,r3A87);
      real r3A8E#1 = RAdd(r3A8D,r3A88);
      real r3A8F#1 = RAdd(r3A8E,r3A56);
      real r3A90#1 = RMul(coeff3600,r37CB);
      real r3A91#2 = RMul(basisEval3606,r37FF);
      real r3A92#1 = RMul(one3601,r3829);
      real r3A93#2 = RMul(basisEval3606,r382E);
      real r3A94#1 = RAdd(r3A71,r3A90);
      real r3A95#1 = RAdd(r3A94,r3A66);
      real r3A96#1 = RAdd(r3A95,r3A68);
      real r3A97#1 = RAdd(r3A96,r3A91);
      real r3A98#1 = RAdd(r3A97,r3A92);
      real r3A99#1 = RAdd(r3A98,r3A93);
      real r3A9A#1 = RAdd(r3A99,r3A70);
      real r3A9C#1 = RMul(one3601,r3791);
      real r3A9D#1 = RMul(coeff3600,r37D5);
      real r3A9E#1 = RAdd(r3A2A,r3A9C);
      real r3A9F#1 = RAdd(r3A9E,r3A2E);
      real r3AA0#1 = RAdd(r3A9F,r3A9D);
      real r3AA1#1 = RAdd(r3AA0,r3A32);
      real r3AA2#1 = RAdd(r3AA1,r3A7B);
      real r3AA3#1 = RAdd(r3AA2,r3A37);
      real r3AA4#1 = RAdd(r3AA3,r3A7D);
      real r3AA5#1 = RAdd(r3AA4,r3A3C);
      real r3AA6#1 = RMul(one3601,r37AA);
      real r3AA7#1 = RMul(coeff3600,r37E5);
      real r3AA8#1 = RAdd(r3A46,r3AA6);
      real r3AA9#1 = RAdd(r3AA8,r3A4A);
      real r3AAA#1 = RAdd(r3AA9,r3AA7);
      real r3AAB#1 = RAdd(r3AAA,r3A4E);
      real r3AAC#1 = RAdd(r3AAB,r3A86);
      real r3AAD#1 = RAdd(r3AAC,r3A52);
      real r3AAE#1 = RAdd(r3AAD,r3A88);
      real r3AAF#1 = RAdd(r3AAE,r3A56);
      real r3AB0#1 = RMul(one3601,r37C3);
      real r3AB1#1 = RMul(coeff3600,r37F5);
      real r3AB2#1 = RAdd(r3A60,r3AB0);
      real r3AB3#1 = RAdd(r3AB2,r3A64);
      real r3AB4#1 = RAdd(r3AB3,r3AB1);
      real r3AB5#1 = RAdd(r3AB4,r3A68);
      real r3AB6#1 = RAdd(r3AB5,r3A91);
      real r3AB7#1 = RAdd(r3AB6,r3A6C);
      real r3AB8#1 = RAdd(r3AB7,r3A93);
      real r3AB9#1 = RAdd(r3AB8,r3A70);
      real realLit3B51#1 = 0.2e1;
      real op1_e3_l_213B50#9 = RMul(realLit3B51,op1_e3_l_193A24);
      real varAcc3B57#1 = VIndex<3,0>(xn3B56);
      real varAcc3B58#1 = VIndex<3,1>(xn3B56);
      real varAcc3B59#1 = VIndex<3,2>(xn3B56);
      real prod3B5E#2 = RMul(varAcc3B57,prod3602);
      real prod3B60#1 = RMul(varAcc3B58,one3601);
      real prod3B61#2 = RMul(one3601,prod3B60);
      real prod3B63#1 = RMul(one3601,varAcc3B59);
      real prod3B64#2 = RMul(one3601,prod3B63);
      real mult3B67#1 = RMul(coeff3600,prod3B64);
      real mult3B68#1 = RMul(coeff3600,prod3B61);
      real mult3B69#1 = RMul(coeff3600,prod3B5E);
      real sum3B6A#1 = RAdd(mult3B68,mult3B69);
      real sum3B6B#1 = RAdd(mult3B67,sum3B6A);
      real sum3B6C#3 = RAdd(basisEval3605,sum3B6B);
      real basisEval3B6E#3 = RMul(one3601,prod3B5E);
      real basisEval3B6F#3 = RMul(one3601,prod3B61);
      real basisEval3B70#3 = RMul(one3601,prod3B64);
      real r3B91#1 = RMul(dof_load35B2,sum3B6C);
      real r3B94#1 = RMul(dof_load35BB,basisEval3B6E);
      real r3B97#1 = RMul(dof_load35C4,basisEval3B6F);
      real r3B9A#1 = RMul(dof_load35CD,basisEval3B70);
      real r3B9B#1 = RAdd(r3B91,r3B94);
      real r3B9C#1 = RAdd(r3B9B,r3B97);
      real r3B9D#1 = RAdd(r3B9C,r3B9A);
      real r3B9F#1 = RMul(dof_load35B3,sum3B6C);
      real r3BA1#1 = RMul(dof_load35BC,basisEval3B6E);
      real r3BA3#1 = RMul(dof_load35C5,basisEval3B6F);
      real r3BA5#1 = RMul(dof_load35CE,basisEval3B70);
      real r3BA6#1 = RAdd(r3B9F,r3BA1);
      real r3BA7#1 = RAdd(r3BA6,r3BA3);
      real r3BA8#1 = RAdd(r3BA7,r3BA5);
      real r3BAA#1 = RMul(dof_load35B4,sum3B6C);
      real r3BAC#1 = RMul(dof_load35BD,basisEval3B6E);
      real r3BAE#1 = RMul(dof_load35C6,basisEval3B6F);
      real r3BB0#1 = RMul(dof_load35CF,basisEval3B70);
      real r3BB1#1 = RAdd(r3BAA,r3BAC);
      real r3BB2#1 = RAdd(r3BB1,r3BAE);
      real r3BB3#1 = RAdd(r3BB2,r3BB0);
      tensor[3] probe_l_223B8E#1 = <tensor[3]>[r3B9D,r3BA8,r3BB3];
      real r3BDD#1 = RDiv(r3A44,op1_e3_l_213B50);
      real r3BDF#1 = RDiv(r3A5E,op1_e3_l_213B50);
      real r3BE1#1 = RDiv(r3A78,op1_e3_l_213B50);
      tensor[3] tensor3BE2#1 = <tensor[3]>[r3BDD,r3BDF,r3BE1];
      real r3BE4#1 = RDiv(r3A84,op1_e3_l_213B50);
      real r3BE6#1 = RDiv(r3A8F,op1_e3_l_213B50);
      real r3BE8#1 = RDiv(r3A9A,op1_e3_l_213B50);
      tensor[3] tensor3BE9#1 = <tensor[3]>[r3BE4,r3BE6,r3BE8];
      real r3BEB#1 = RDiv(r3AA5,op1_e3_l_213B50);
      real r3BED#1 = RDiv(r3AAF,op1_e3_l_213B50);
      real r3BEF#1 = RDiv(r3AB9,op1_e3_l_213B50);
      tensor[3] tensor3BF0#1 = <tensor[3]>[r3BEB,r3BED,r3BEF];
      tensor[3] op1_e3_l_243C08#3 = VSub<3>(probe_l_223B8E,pos3576);
      real vdot3C0D#1 = VDot<3>(tensor3BE2,op1_e3_l_243C08);
      real vdot3C0F#1 = VDot<3>(tensor3BE9,op1_e3_l_243C08);
      real vdot3C11#1 = VDot<3>(tensor3BF0,op1_e3_l_243C08);
      tensor[3] op1_e3_l_253C0B#3 = <tensor[3]>[vdot3C0D,vdot3C0F,vdot3C11];
      tensor[3] xn3C1A#4 = VSub<3>(xn3B56,op1_e3_l_253C0B);
      real _t3C1D#2 = 0.1e-7;
      real _t3C1F#1 = RMul(_t3C1D,_t3C1D);
      real _t3C81#1 = VDot<3>(op1_e3_l_253C0B,op1_e3_l_253C0B);
      bool _t3C84#1 = GTE<real>(_t3C1F,_t3C81);
      if _t3C84 then goto ASSIGN3C8A else goto JOIN3CB3
    ASSIGN3C8A:  preds = [COND3C86]
      real _t3C89#4 = 0.1e-8;
      real _t3C8B#1 = RAdd(one3601,_t3C89);
      tensor[3] _t3C8E#1 = <tensor[3]>[one3601,one3601,one3601];
      real _t3C90#1 = VDot<3>(_t3C8E,xn3C1A);
      bool _t3C93#1 = GT<real>(_t3C8B,_t3C90);
      tensor[3] _t3C95#1 = <tensor[3]>[_t3C89,_t3C89,_t3C89];
      tensor[3] _t3C97#3 = VAdd<3>(_t3C95,xn3C1A);
      real _t3C9A#1 = VIndex<3,0>(_t3C97);
      real _t3C9C#3 = -0.e0;
      bool _t3C9E#1 = GT<real>(_t3C9A,_t3C9C);
      real _t3CA0#1 = VIndex<3,1>(_t3C97);
      bool _t3CA2#1 = GT<real>(_t3CA0,_t3C9C);
      real _t3CA4#1 = VIndex<3,2>(_t3C97);
      bool _t3CA6#1 = GT<real>(_t3CA4,_t3C9C);
      bool _t3CA8#1 = BAnd(_t3CA2,_t3CA6);
      bool _t3CAA#1 = BAnd(_t3C9E,_t3CA8);
      bool _t3CAC#1 = BAnd(_t3C93,_t3CAA);
      if _t3CAC then goto ASSIGN3CB0 else goto JOIN3CB2
    ASSIGN3CB0:  preds = [COND3CAE]
      femData:MeshPos _t3CAF#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],tensor[3]],femData:MeshPos,AllBuild(MeshPos),0000,"",[],int>(mesh3575,cellItter3580,xn3C1A,pos3576);
      return _t3CAF
      goto JOIN3CB2
    JOIN3CB2:  preds = [*RETURN(_t3CAF)3CB1,COND3CAE]
      goto JOIN3CB3
    JOIN3CB3:  preds = [JOIN3CB2,COND3C86]
      goto FOREACH3587
    NEXT3CB5:  preds = [FOREACH3587]
      goto FOREACH3581
    ASSIGN3CB7:  preds = [FOREACH3581]
      string _t3CB6#1 = "Bad end 2";
      string _t3CB8#1 = "\n";
      Print<[string,string]>(_t3CB6,_t3CB8);
      femData:MeshPos _t3CBB#1 = ExtractFemItemN<[femData:Mesh],femData:MeshPos,InvalidBuild(MeshPos),0000,"",[],int>(mesh3575);
      return _t3CBB
}
  function int[2] nextCell44E13 (int faceIdx4E14#1, int cell4E15#1, femData:Mesh mesh4E16#1) {
    ENTRY4E17:  preds = []
      int _t4E18#1 = 8;
      int _t4E1A#1 = IMul(cell4E15,_t4E18);
      int _t4E1C#1 = 2;
      int _t4E1E#1 = IMul(faceIdx4E14,_t4E1C);
      int _t4E20#1 = IAdd(_t4E1A,_t4E1E);
      int[2] _t4E22#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh4E16,_t4E20);
      return _t4E22
}
  function femData:MeshPos posMove40B9 (femData:MeshPos x40BA#6, tensor[3] dPos40BB#4) {
    ENTRY40BC:  preds = []
      femData:Mesh meshData40BD#1 = globals.meshData351F;
      int timeSteps40BF#1 = globals.timeSteps3522;
      real timeEps40C1#1 = globals.timeEps3523;
      bool _t40C3#1 = ExtractFemItem<bool,Valid(MeshPos)>(x40BA);
      bool _t40C5#1 = BNot(_t40C3);
      if _t40C5 then goto RETURN(x40BA)40C8 else goto JOIN40C9
    RETURN(x40BA)40C8:  preds = [COND40C7]
      return x40BA
      goto JOIN40C9
    JOIN40C9:  preds = [*RETURN(x40BA)40C8,COND40C7]
      real time40CA#85 = 0.1e1;
      int _t40CC#6 = 0;
      int[] _t40CE#1 = Range(_t40CC,timeSteps40BF);
    FOREACH40D1:  preds = [ASSIGN40CF,NEXT471F]
      foreach (i40D0 in _t40CE) on exit goto ASSIGN4F6B
        femData:MeshPos cmp40D3#6 = phi(x40BA,cmp471A)
        real time46E9#9 = phi(time40CA,time471C)
      femData:Mesh _t40D2#4 = ExtractFem<femData:Mesh,femData:MeshPos>(cmp40D3);
      int _t40D5#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cmp40D3);
      femData:MeshCell _t40D7#2 = LoadFem<femData:MeshCell>(_t40D2,_t40D5);
      femData:Mesh _t40D9#17 = ExtractFem<femData:Mesh,femData:MeshCell>(_t40D7);
      int _t40DB#2 = ExtractFemItem<int,CellIndex(MeshCell)>(_t40D7);
      tensor[3] _t40DD#6 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cmp40D3);
      int ilit40E0#1 = 4;
      int mulRes40E1#4 = IMul(_t40DB,ilit40E0);
      int idx40E4#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,mulRes40E1);
      int ilit40E5#10 = 1;
      int addRes40E6#1 = IAdd(mulRes40E1,ilit40E5);
      int idx40E7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E6);
      int ilit40E8#9 = 2;
      int addRes40E9#1 = IAdd(mulRes40E1,ilit40E8);
      int idx40EA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40E9);
      int ilit40EB#9 = 3;
      int addRes40EC#1 = IAdd(mulRes40E1,ilit40EB);
      int idx40ED#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t40D9,addRes40EC);
      int mulRes4103#3 = IMul(ilit40EB,idx40E4);
      int addRes4106#1 = IAdd(ilit40E5,mulRes4103);
      int addRes4108#1 = IAdd(ilit40E8,mulRes4103);
      real dof_load4109#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes4103);
      real dof_load410A#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4106);
      real dof_load410B#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4108);
      int mulRes410E#3 = IMul(ilit40EB,idx40E7);
      int addRes4110#1 = IAdd(ilit40E5,mulRes410E);
      int addRes4111#1 = IAdd(ilit40E8,mulRes410E);
      real dof_load4112#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes410E);
      real dof_load4113#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4110);
      real dof_load4114#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4111);
      int mulRes4117#3 = IMul(ilit40EB,idx40EA);
      int addRes4119#1 = IAdd(ilit40E5,mulRes4117);
      int addRes411A#1 = IAdd(ilit40E8,mulRes4117);
      real dof_load411B#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes4117);
      real dof_load411C#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4119);
      real dof_load411D#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes411A);
      int mulRes4120#3 = IMul(ilit40EB,idx40ED);
      int addRes4122#1 = IAdd(ilit40E5,mulRes4120);
      int addRes4123#1 = IAdd(ilit40E8,mulRes4120);
      real dof_load4124#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,mulRes4120);
      real dof_load4125#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4122);
      real dof_load4126#2 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t40D9,addRes4123);
      real coeff4157#34 = -0.1e1;
      real prod4159#1 = RMul(time40CA,time40CA);
      real prod415A#2 = RMul(time40CA,prod4159);
      real basisEval415B#3 = RMul(coeff4157,prod415A);
      real basisEval415C#9 = RMul(time40CA,prod415A);
      real basisEval415D#182 = 0.e0;
      real r4174#2 = RMul(dof_load4109,basisEval415B);
      real r4177#1 = RMul(dof_load4112,basisEval415C);
      real r417A#2 = RMul(dof_load411B,basisEval415D);
      real r417D#2 = RMul(dof_load4124,basisEval415D);
      real r417E#1 = RAdd(r4174,r4177);
      real r417F#1 = RAdd(r417E,r417A);
      real r4180#13 = RAdd(r417F,r417D);
      real r4184#1 = RMul(dof_load4112,basisEval415D);
      real r4186#1 = RMul(dof_load411B,basisEval415C);
      real r4189#2 = RAdd(r4174,r4184);
      real r418A#1 = RAdd(r4189,r4186);
      real r418B#13 = RAdd(r418A,r417D);
      real r4193#1 = RMul(dof_load4124,basisEval415C);
      real r4195#1 = RAdd(r4189,r417A);
      real r4196#12 = RAdd(r4195,r4193);
      real r4199#2 = RMul(dof_load410A,basisEval415B);
      real r419B#1 = RMul(dof_load4113,basisEval415C);
      real r419D#2 = RMul(dof_load411C,basisEval415D);
      real r419F#2 = RMul(dof_load4125,basisEval415D);
      real r41A0#1 = RAdd(r4199,r419B);
      real r41A1#1 = RAdd(r41A0,r419D);
      real r41A2#13 = RAdd(r41A1,r419F);
      real r41A4#1 = RMul(dof_load4113,basisEval415D);
      real r41A5#1 = RMul(dof_load411C,basisEval415C);
      real r41A7#2 = RAdd(r4199,r41A4);
      real r41A8#1 = RAdd(r41A7,r41A5);
      real r41A9#13 = RAdd(r41A8,r419F);
      real r41AD#1 = RMul(dof_load4125,basisEval415C);
      real r41AF#1 = RAdd(r41A7,r419D);
      real r41B0#12 = RAdd(r41AF,r41AD);
      real r41B3#2 = RMul(dof_load410B,basisEval415B);
      real r41B5#1 = RMul(dof_load4114,basisEval415C);
      real r41B7#2 = RMul(dof_load411D,basisEval415D);
      real r41B9#2 = RMul(dof_load4126,basisEval415D);
      real r41BA#1 = RAdd(r41B3,r41B5);
      real r41BB#1 = RAdd(r41BA,r41B7);
      real r41BC#13 = RAdd(r41BB,r41B9);
      real r41BE#1 = RMul(dof_load4114,basisEval415D);
      real r41BF#1 = RMul(dof_load411D,basisEval415C);
      real r41C1#2 = RAdd(r41B3,r41BE);
      real r41C2#1 = RAdd(r41C1,r41BF);
      real r41C3#13 = RAdd(r41C2,r41B9);
      real r41C7#1 = RMul(dof_load4126,basisEval415C);
      real r41C9#1 = RAdd(r41C1,r41B7);
      real r41CA#12 = RAdd(r41C9,r41C7);
      real r422B#3 = RMul(basisEval415D,r4180);
      real r422D#3 = RMul(basisEval415D,r41A2);
      real r422F#5 = RMul(basisEval415D,r41BC);
      real r4230#3 = RAdd(r422B,r422D);
      real r4231#9 = RAdd(r4230,r422F);
      real r4233#3 = RMul(basisEval415D,r418B);
      real r4235#3 = RMul(basisEval415D,r41A9);
      real r4237#5 = RMul(basisEval415D,r41C3);
      real r4238#3 = RAdd(r4233,r4235);
      real r4239#9 = RAdd(r4238,r4237);
      real r423B#3 = RMul(basisEval415D,r4196);
      real r423D#3 = RMul(basisEval415D,r41B0);
      real r423F#5 = RMul(basisEval415D,r41CA);
      real r4240#3 = RAdd(r423B,r423D);
      real r4241#12 = RAdd(r4240,r423F);
      real r4244#1 = RMul(coeff4157,r41BC);
      real r4245#3 = RAdd(r4230,r4244);
      real r4246#1 = RMul(coeff4157,r41C3);
      real r4247#3 = RAdd(r4238,r4246);
      real r4248#1 = RMul(coeff4157,r41CA);
      real r4249#4 = RAdd(r4240,r4248);
      real r424C#1 = RMul(time40CA,r41A2);
      real r424D#1 = RAdd(r422B,r424C);
      real r424E#3 = RAdd(r424D,r422F);
      real r424F#1 = RMul(time40CA,r41A9);
      real r4250#1 = RAdd(r4233,r424F);
      real r4251#3 = RAdd(r4250,r4237);
      real r4252#1 = RMul(time40CA,r41B0);
      real r4253#1 = RAdd(r423B,r4252);
      real r4254#4 = RAdd(r4253,r423F);
      real r4257#1 = RMul(time40CA,r41BC);
      real r4258#3 = RAdd(r4230,r4257);
      real r4259#1 = RMul(time40CA,r41C3);
      real r425A#3 = RAdd(r4238,r4259);
      real r425B#1 = RMul(time40CA,r41CA);
      real r425C#4 = RAdd(r4240,r425B);
      real r425E#1 = RMul(coeff4157,r4180);
      real r425F#1 = RAdd(r425E,r422D);
      real r4260#3 = RAdd(r425F,r422F);
      real r4261#1 = RMul(coeff4157,r418B);
      real r4262#1 = RAdd(r4261,r4235);
      real r4263#3 = RAdd(r4262,r4237);
      real r4264#1 = RMul(coeff4157,r4196);
      real r4265#1 = RAdd(r4264,r423D);
      real r4266#4 = RAdd(r4265,r423F);
      real r4269#1 = RMul(coeff4157,r41A2);
      real r426A#1 = RAdd(r422B,r4269);
      real r426B#3 = RAdd(r426A,r422F);
      real r426C#1 = RMul(coeff4157,r41A9);
      real r426D#1 = RAdd(r4233,r426C);
      real r426E#3 = RAdd(r426D,r4237);
      real r426F#1 = RMul(coeff4157,r41B0);
      real r4270#1 = RAdd(r423B,r426F);
      real r4271#4 = RAdd(r4270,r423F);
      real r4273#1 = RMul(time40CA,r4180);
      real r4274#1 = RAdd(r4273,r422D);
      real r4275#3 = RAdd(r4274,r422F);
      real r4276#1 = RMul(time40CA,r418B);
      real r4277#1 = RAdd(r4276,r4235);
      real r4278#3 = RAdd(r4277,r4237);
      real r4279#1 = RMul(time40CA,r4196);
      real r427A#1 = RAdd(r4279,r423D);
      real r427B#4 = RAdd(r427A,r423F);
      real r42D8#1 = RMul(r4180,r4231);
      real r42DB#1 = RMul(r41A2,r4258);
      real r42DE#1 = RMul(r41BC,r426B);
      real r42DF#1 = RAdd(r42D8,r42DB);
      real r42E0#1 = RAdd(r42DF,r42DE);
      real r42E2#1 = RMul(r4180,r4239);
      real r42E4#1 = RMul(r41A2,r425A);
      real r42E6#1 = RMul(r41BC,r426E);
      real r42E7#1 = RAdd(r42E2,r42E4);
      real r42E8#2 = RAdd(r42E7,r42E6);
      real r42EA#1 = RMul(r4180,r4241);
      real r42EC#1 = RMul(r41A2,r425C);
      real r42EE#1 = RMul(r41BC,r4271);
      real r42EF#1 = RAdd(r42EA,r42EC);
      real r42F0#2 = RAdd(r42EF,r42EE);
      real r42F3#1 = RMul(r4180,r4245);
      real r42F5#1 = RMul(r41A2,r4231);
      real r42F7#1 = RMul(r41BC,r4275);
      real r42F8#1 = RAdd(r42F3,r42F5);
      real r42F9#1 = RAdd(r42F8,r42F7);
      real r42FB#1 = RMul(r4180,r4247);
      real r42FD#1 = RMul(r41A2,r4239);
      real r42FF#1 = RMul(r41BC,r4278);
      real r4300#1 = RAdd(r42FB,r42FD);
      real r4301#2 = RAdd(r4300,r42FF);
      real r4303#1 = RMul(r4180,r4249);
      real r4305#1 = RMul(r41A2,r4241);
      real r4307#1 = RMul(r41BC,r427B);
      real r4308#1 = RAdd(r4303,r4305);
      real r4309#2 = RAdd(r4308,r4307);
      real r430C#1 = RMul(r4180,r424E);
      real r430E#1 = RMul(r41A2,r4260);
      real r4310#1 = RMul(r41BC,r4231);
      real r4311#1 = RAdd(r430C,r430E);
      real r4312#1 = RAdd(r4311,r4310);
      real r4314#1 = RMul(r4180,r4251);
      real r4316#1 = RMul(r41A2,r4263);
      real r4318#1 = RMul(r41BC,r4239);
      real r4319#1 = RAdd(r4314,r4316);
      real r431A#2 = RAdd(r4319,r4318);
      real r431C#1 = RMul(r4180,r4254);
      real r431E#1 = RMul(r41A2,r4266);
      real r4320#1 = RMul(r41BC,r4241);
      real r4321#1 = RAdd(r431C,r431E);
      real r4322#2 = RAdd(r4321,r4320);
      real r4326#1 = RMul(r418B,r4231);
      real r4328#1 = RMul(r41A9,r4258);
      real r432A#1 = RMul(r41C3,r426B);
      real r432B#1 = RAdd(r4326,r4328);
      real r432C#2 = RAdd(r432B,r432A);
      real r432D#1 = RMul(r418B,r4239);
      real r432E#1 = RMul(r41A9,r425A);
      real r432F#1 = RMul(r41C3,r426E);
      real r4330#1 = RAdd(r432D,r432E);
      real r4331#1 = RAdd(r4330,r432F);
      real r4332#1 = RMul(r418B,r4241);
      real r4333#1 = RMul(r41A9,r425C);
      real r4334#1 = RMul(r41C3,r4271);
      real r4335#1 = RAdd(r4332,r4333);
      real r4336#2 = RAdd(r4335,r4334);
      real r4338#1 = RMul(r418B,r4245);
      real r4339#1 = RMul(r41A9,r4231);
      real r433A#1 = RMul(r41C3,r4275);
      real r433B#1 = RAdd(r4338,r4339);
      real r433C#2 = RAdd(r433B,r433A);
      real r433D#1 = RMul(r418B,r4247);
      real r433E#1 = RMul(r41A9,r4239);
      real r433F#1 = RMul(r41C3,r4278);
      real r4340#1 = RAdd(r433D,r433E);
      real r4341#1 = RAdd(r4340,r433F);
      real r4342#1 = RMul(r418B,r4249);
      real r4343#1 = RMul(r41A9,r4241);
      real r4344#1 = RMul(r41C3,r427B);
      real r4345#1 = RAdd(r4342,r4343);
      real r4346#2 = RAdd(r4345,r4344);
      real r4348#1 = RMul(r418B,r424E);
      real r4349#1 = RMul(r41A9,r4260);
      real r434A#1 = RMul(r41C3,r4231);
      real r434B#1 = RAdd(r4348,r4349);
      real r434C#2 = RAdd(r434B,r434A);
      real r434D#1 = RMul(r418B,r4251);
      real r434E#1 = RMul(r41A9,r4263);
      real r434F#1 = RMul(r41C3,r4239);
      real r4350#1 = RAdd(r434D,r434E);
      real r4351#1 = RAdd(r4350,r434F);
      real r4352#1 = RMul(r418B,r4254);
      real r4353#1 = RMul(r41A9,r4266);
      real r4354#1 = RMul(r41C3,r4241);
      real r4355#1 = RAdd(r4352,r4353);
      real r4356#2 = RAdd(r4355,r4354);
      real r435A#1 = RMul(r4196,r4231);
      real r435C#1 = RMul(r41B0,r4258);
      real r435E#1 = RMul(r41CA,r426B);
      real r435F#1 = RAdd(r435A,r435C);
      real r4360#2 = RAdd(r435F,r435E);
      real r4361#1 = RMul(r4196,r4239);
      real r4362#1 = RMul(r41B0,r425A);
      real r4363#1 = RMul(r41CA,r426E);
      real r4364#1 = RAdd(r4361,r4362);
      real r4365#2 = RAdd(r4364,r4363);
      real r4366#1 = RMul(r4196,r4241);
      real r4367#1 = RMul(r41B0,r425C);
      real r4368#1 = RMul(r41CA,r4271);
      real r4369#1 = RAdd(r4366,r4367);
      real r436A#1 = RAdd(r4369,r4368);
      real r436C#1 = RMul(r4196,r4245);
      real r436D#1 = RMul(r41B0,r4231);
      real r436E#1 = RMul(r41CA,r4275);
      real r436F#1 = RAdd(r436C,r436D);
      real r4370#2 = RAdd(r436F,r436E);
      real r4371#1 = RMul(r4196,r4247);
      real r4372#1 = RMul(r41B0,r4239);
      real r4373#1 = RMul(r41CA,r4278);
      real r4374#1 = RAdd(r4371,r4372);
      real r4375#2 = RAdd(r4374,r4373);
      real r4376#1 = RMul(r4196,r4249);
      real r4377#1 = RMul(r41B0,r4241);
      real r4378#1 = RMul(r41CA,r427B);
      real r4379#1 = RAdd(r4376,r4377);
      real r437A#1 = RAdd(r4379,r4378);
      real r437C#1 = RMul(r4196,r424E);
      real r437D#1 = RMul(r41B0,r4260);
      real r437E#1 = RMul(r41CA,r4231);
      real r437F#1 = RAdd(r437C,r437D);
      real r4380#2 = RAdd(r437F,r437E);
      real r4381#1 = RMul(r4196,r4251);
      real r4382#1 = RMul(r41B0,r4263);
      real r4383#1 = RMul(r41CA,r4239);
      real r4384#1 = RAdd(r4381,r4382);
      real r4385#2 = RAdd(r4384,r4383);
      real r4386#1 = RMul(r4196,r4254);
      real r4387#1 = RMul(r41B0,r4266);
      real r4388#1 = RMul(r41CA,r4241);
      real r4389#1 = RAdd(r4386,r4387);
      real r438A#1 = RAdd(r4389,r4388);
      tensor[3] probe_l_114446#1 = <tensor[3]>[r4180,r41A2,r41BC];
      tensor[3] probe_l_124493#3 = <tensor[3]>[r418B,r41A9,r41C3];
      tensor[3] tensor453E#1 = <tensor[3]>[r4241,r425C,r4271];
      tensor[3] tensor4544#1 = <tensor[3]>[r4249,r4241,r427B];
      tensor[3] tensor454B#1 = <tensor[3]>[r4254,r4266,r4241];
      real vdot456E#1 = VDot<3>(probe_l_124493,tensor453E);
      real vdot4570#1 = VDot<3>(probe_l_124493,tensor4544);
      real vdot4572#1 = VDot<3>(probe_l_124493,tensor454B);
      tensor[3] op1_e3_l_15456C#1 = <tensor[3]>[vdot456E,vdot4570,vdot4572];
      real op1_e3_l_16457B#1 = VDot<3>(probe_l_114446,op1_e3_l_15456C);
      real r4581#2 = RMul(basisEval415D,r42E0);
      real r4583#1 = RMul(basisEval415D,r42E8);
      real r4585#2 = RMul(basisEval415D,r42F0);
      real r4587#2 = RMul(basisEval415D,r432C);
      real r4589#3 = RMul(basisEval415D,r4331);
      real r458C#1 = RMul(time40CA,r4336);
      real r458E#2 = RMul(basisEval415D,r4360);
      real r4591#1 = RMul(coeff4157,r4365);
      real r4593#3 = RMul(basisEval415D,r436A);
      real r4594#2 = RAdd(r4581,r4583);
      real r4595#1 = RAdd(r4594,r4585);
      real r4596#1 = RAdd(r4595,r4587);
      real r4597#1 = RAdd(r4596,r4589);
      real r4598#1 = RAdd(r4597,r458C);
      real r4599#1 = RAdd(r4598,r458E);
      real r459A#1 = RAdd(r4599,r4591);
      real r459B#1 = RAdd(r459A,r4593);
      real r459D#2 = RMul(basisEval415D,r42F9);
      real r459F#1 = RMul(basisEval415D,r4301);
      real r45A1#2 = RMul(basisEval415D,r4309);
      real r45A3#2 = RMul(basisEval415D,r433C);
      real r45A5#3 = RMul(basisEval415D,r4341);
      real r45A7#1 = RMul(time40CA,r4346);
      real r45A9#2 = RMul(basisEval415D,r4370);
      real r45AB#1 = RMul(coeff4157,r4375);
      real r45AD#3 = RMul(basisEval415D,r437A);
      real r45AE#2 = RAdd(r459D,r459F);
      real r45AF#1 = RAdd(r45AE,r45A1);
      real r45B0#1 = RAdd(r45AF,r45A3);
      real r45B1#1 = RAdd(r45B0,r45A5);
      real r45B2#1 = RAdd(r45B1,r45A7);
      real r45B3#1 = RAdd(r45B2,r45A9);
      real r45B4#1 = RAdd(r45B3,r45AB);
      real r45B5#1 = RAdd(r45B4,r45AD);
      real r45B7#2 = RMul(basisEval415D,r4312);
      real r45B9#1 = RMul(basisEval415D,r431A);
      real r45BB#2 = RMul(basisEval415D,r4322);
      real r45BD#2 = RMul(basisEval415D,r434C);
      real r45BF#3 = RMul(basisEval415D,r4351);
      real r45C1#1 = RMul(time40CA,r4356);
      real r45C3#2 = RMul(basisEval415D,r4380);
      real r45C5#1 = RMul(coeff4157,r4385);
      real r45C7#3 = RMul(basisEval415D,r438A);
      real r45C8#2 = RAdd(r45B7,r45B9);
      real r45C9#1 = RAdd(r45C8,r45BB);
      real r45CA#1 = RAdd(r45C9,r45BD);
      real r45CB#1 = RAdd(r45CA,r45BF);
      real r45CC#1 = RAdd(r45CB,r45C1);
      real r45CD#1 = RAdd(r45CC,r45C3);
      real r45CE#1 = RAdd(r45CD,r45C5);
      real r45CF#1 = RAdd(r45CE,r45C7);
      real r45D1#1 = RMul(coeff4157,r42F0);
      real r45D2#2 = RMul(basisEval415D,r4336);
      real r45D3#1 = RMul(time40CA,r4360);
      real r45D4#2 = RMul(basisEval415D,r4365);
      real r45D5#1 = RAdd(r4594,r45D1);
      real r45D6#1 = RAdd(r45D5,r4587);
      real r45D7#1 = RAdd(r45D6,r4589);
      real r45D8#1 = RAdd(r45D7,r45D2);
      real r45D9#1 = RAdd(r45D8,r45D3);
      real r45DA#1 = RAdd(r45D9,r45D4);
      real r45DB#1 = RAdd(r45DA,r4593);
      real r45DC#1 = RMul(coeff4157,r4309);
      real r45DD#2 = RMul(basisEval415D,r4346);
      real r45DE#1 = RMul(time40CA,r4370);
      real r45DF#2 = RMul(basisEval415D,r4375);
      real r45E0#1 = RAdd(r45AE,r45DC);
      real r45E1#1 = RAdd(r45E0,r45A3);
      real r45E2#1 = RAdd(r45E1,r45A5);
      real r45E3#1 = RAdd(r45E2,r45DD);
      real r45E4#1 = RAdd(r45E3,r45DE);
      real r45E5#1 = RAdd(r45E4,r45DF);
      real r45E6#1 = RAdd(r45E5,r45AD);
      real r45E7#1 = RMul(coeff4157,r4322);
      real r45E8#2 = RMul(basisEval415D,r4356);
      real r45E9#1 = RMul(time40CA,r4380);
      real r45EA#2 = RMul(basisEval415D,r4385);
      real r45EB#1 = RAdd(r45C8,r45E7);
      real r45EC#1 = RAdd(r45EB,r45BD);
      real r45ED#1 = RAdd(r45EC,r45BF);
      real r45EE#1 = RAdd(r45ED,r45E8);
      real r45EF#1 = RAdd(r45EE,r45E9);
      real r45F0#1 = RAdd(r45EF,r45EA);
      real r45F1#1 = RAdd(r45F0,r45C7);
      real r45F3#1 = RMul(time40CA,r42E8);
      real r45F4#1 = RMul(coeff4157,r432C);
      real r45F5#1 = RAdd(r4581,r45F3);
      real r45F6#1 = RAdd(r45F5,r4585);
      real r45F7#1 = RAdd(r45F6,r45F4);
      real r45F8#1 = RAdd(r45F7,r4589);
      real r45F9#1 = RAdd(r45F8,r45D2);
      real r45FA#1 = RAdd(r45F9,r458E);
      real r45FB#1 = RAdd(r45FA,r45D4);
      real r45FC#1 = RAdd(r45FB,r4593);
      real r45FD#1 = RMul(time40CA,r4301);
      real r45FE#1 = RMul(coeff4157,r433C);
      real r45FF#1 = RAdd(r459D,r45FD);
      real r4600#1 = RAdd(r45FF,r45A1);
      real r4601#1 = RAdd(r4600,r45FE);
      real r4602#1 = RAdd(r4601,r45A5);
      real r4603#1 = RAdd(r4602,r45DD);
      real r4604#1 = RAdd(r4603,r45A9);
      real r4605#1 = RAdd(r4604,r45DF);
      real r4606#1 = RAdd(r4605,r45AD);
      real r4607#1 = RMul(time40CA,r431A);
      real r4608#1 = RMul(coeff4157,r434C);
      real r4609#1 = RAdd(r45B7,r4607);
      real r460A#1 = RAdd(r4609,r45BB);
      real r460B#1 = RAdd(r460A,r4608);
      real r460C#1 = RAdd(r460B,r45BF);
      real r460D#1 = RAdd(r460C,r45E8);
      real r460E#1 = RAdd(r460D,r45C3);
      real r460F#1 = RAdd(r460E,r45EA);
      real r4610#1 = RAdd(r460F,r45C7);
      real realLit46A8#1 = 0.2e1;
      real op1_e3_l_1846A7#9 = RMul(realLit46A8,op1_e3_l_16457B);
      real r46AE#1 = RDiv(r459B,op1_e3_l_1846A7);
      real r46B0#1 = RDiv(r45B5,op1_e3_l_1846A7);
      real r46B2#1 = RDiv(r45CF,op1_e3_l_1846A7);
      tensor[3] tensor46B3#1 = <tensor[3]>[r46AE,r46B0,r46B2];
      real r46B5#1 = RDiv(r45DB,op1_e3_l_1846A7);
      real r46B7#1 = RDiv(r45E6,op1_e3_l_1846A7);
      real r46B9#1 = RDiv(r45F1,op1_e3_l_1846A7);
      tensor[3] tensor46BA#1 = <tensor[3]>[r46B5,r46B7,r46B9];
      real r46BC#1 = RDiv(r45FC,op1_e3_l_1846A7);
      real r46BE#1 = RDiv(r4606,op1_e3_l_1846A7);
      real r46C0#1 = RDiv(r4610,op1_e3_l_1846A7);
      tensor[3] tensor46C1#1 = <tensor[3]>[r46BC,r46BE,r46C0];
      real vdot46DB#3 = VDot<3>(tensor46B3,dPos40BB);
      real vdot46DD#3 = VDot<3>(tensor46BA,dPos40BB);
      real vdot46DF#3 = VDot<3>(tensor46C1,dPos40BB);
      tensor[3] op1_e3_l_2046D9#5 = <tensor[3]>[vdot46DB,vdot46DD,vdot46DF];
      tensor[3] op1_e3_l_2146E8#2 = VScale<3>(time46E9,op1_e3_l_2046D9);
      tensor[3] newPos46EC#2 = VAdd<3>(_t40DD,op1_e3_l_2146E8);
      real _t46EF#4 = 0.1e-8;
      real _t46F1#1 = RAdd(time40CA,_t46EF);
      tensor[3] _t46F4#1 = <tensor[3]>[time40CA,time40CA,time40CA];
      real _t46F6#1 = VDot<3>(_t46F4,newPos46EC);
      bool _t46F9#1 = GT<real>(_t46F1,_t46F6);
      tensor[3] _t46FB#1 = <tensor[3]>[_t46EF,_t46EF,_t46EF];
      tensor[3] v46FE#1 = VAdd<3>(_t46FB,_t40DD);
      tensor[3] _t46FD#3 = VAdd<3>(v46FE,op1_e3_l_2146E8);
      real _t4702#1 = VIndex<3,0>(_t46FD);
      real _t4704#3 = -0.e0;
      bool _t4706#1 = GT<real>(_t4702,_t4704);
      real _t4708#1 = VIndex<3,1>(_t46FD);
      bool _t470A#1 = GT<real>(_t4708,_t4704);
      real _t470C#1 = VIndex<3,2>(_t46FD);
      bool _t470E#1 = GT<real>(_t470C,_t4704);
      bool _t4710#1 = BAnd(_t470A,_t470E);
      bool _t4712#1 = BAnd(_t4706,_t4710);
      bool _t4714#1 = BAnd(_t46F9,_t4712);
      if _t4714 then goto ASSIGN4718 else goto ASSIGN4721
    ASSIGN4718:  preds = [COND4716]
      femData:MeshPos nmp4717#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3]],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t40D9,_t40DB,newPos46EC);
      return nmp4717
      goto JOIN471E
    JOIN471E:  preds = [*RETURN(nmp4717)4719,JOIN4F2F]
      femData:MeshPos cmp471A#1 = phi(nmp471B)
      real time471C#1 = phi(time471D)
      goto FOREACH40D1
    ASSIGN4721:  preds = [COND4716]
      int _t4720#10 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(cmp40D3);
      real time4722#6 = +inf;
      int face4724#7 = -1;
      real faceTime4726#6 = -inf;
      real _t4728#18 = 0.57735026919e0;
      tensor[3] _t472A#3 = <tensor[3]>[_t4728,_t4728,_t4728];
      real op1_e3_l_10472C#1 = VDot<3>(_t472A,_t40DD);
      real op1_e3_l_25472F#1 = VDot<3>(_t472A,op1_e3_l_2046D9);
      real op1_e3_l_264732#1 = RSub(_t4728,op1_e3_l_10472C);
      real op1_e3_l_274735#3 = RMul(time46E9,op1_e3_l_25472F);
      real _t4738#4 = RDiv(op1_e3_l_264732,op1_e3_l_274735);
      real _t473B#8 = -0.1e-15;
      bool _t473D#1 = GTE<real>(_t4738,_t473B);
      bool _t473F#1 = GT<real>(time4722,_t4738);
      real _t4CBE#1 = Abs<real>(op1_e3_l_274735);
      real _t4CC1#4 = 0.1e-20;
      bool _t4CC3#2 = GTE<real>(_t4CBE,_t4CC1);
      bool _t4CC5#1 = BAnd(_t473F,_t4CC3);
      bool _t4CC7#1 = BAnd(_t473D,_t4CC5);
      if _t4CC7 then goto ASSIGN4CCB else goto JOIN4CD4
    ASSIGN4CCB:  preds = [COND4CC9]
      bool _t4CCA#1 = NEQ<int>(_t4720,_t40CC);
      if _t4CCA then goto JOIN4CD0 else goto JOIN4CD0
    JOIN4CD0:  preds = [COND4CCC,COND4CCC]
      real faceTime4CCD#1 = phi(faceTime4726,_t4738)
      int face4CCE#1 = phi(_t40CC,face4724)
      real time4CCF#1 = phi(_t4738,time4722)
      goto JOIN4CD4
    JOIN4CD4:  preds = [JOIN4CD0,COND4CC9]
      real faceTime4CD1#2 = phi(faceTime4CCD,faceTime4726)
      int face4CD2#2 = phi(face4CCE,face4724)
      real time4CD3#3 = phi(time4CCF,time4722)
      tensor[3] _t4CD7#3 = <tensor[3]>[time40CA,basisEval415D,basisEval415D];
      real op1_e3_l_104CD9#1 = VDot<3>(_t4CD7,_t40DD);
      real op1_e3_l_254CDC#1 = VDot<3>(_t4CD7,op1_e3_l_2046D9);
      real op1_e3_l_264CDF#1 = RSub(basisEval415D,op1_e3_l_104CD9);
      real op1_e3_l_274CE2#3 = RMul(time46E9,op1_e3_l_254CDC);
      real _t4CE5#4 = RDiv(op1_e3_l_264CDF,op1_e3_l_274CE2);
      bool _t4CE8#1 = GTE<real>(_t4CE5,_t473B);
      bool _t4CEA#1 = GT<real>(time4CD3,_t4CE5);
      real _t4CF2#1 = Abs<real>(op1_e3_l_274CE2);
      bool _t4CF5#2 = GTE<real>(_t4CF2,_t4CC1);
      bool _t4CF7#1 = BAnd(_t4CEA,_t4CF5);
      bool _t4CF9#1 = BAnd(_t4CE8,_t4CF7);
      if _t4CF9 then goto ASSIGN5F32 else goto JOIN4D08
    ASSIGN5F32:  preds = [COND4CFB]
      bool _t4CFE#1 = NEQ<int>(_t4720,ilit40E5);
      if _t4CFE then goto JOIN4D04 else goto JOIN4D04
    JOIN4D04:  preds = [COND4D00,COND4D00]
      real faceTime4D01#1 = phi(faceTime4CD1,_t4CE5)
      int face4D02#1 = phi(ilit40E5,face4CD2)
      real time4D03#1 = phi(_t4CE5,time4CD3)
      goto JOIN4D08
    JOIN4D08:  preds = [JOIN4D04,COND4CFB]
      real faceTime4D05#2 = phi(faceTime4D01,faceTime4CD1)
      int face4D06#2 = phi(face4D02,face4CD2)
      real time4D07#3 = phi(time4D03,time4CD3)
      tensor[3] _t4D0B#3 = <tensor[3]>[basisEval415D,coeff4157,basisEval415D];
      real op1_e3_l_104D0D#1 = VDot<3>(_t4D0B,_t40DD);
      real op1_e3_l_254D10#1 = VDot<3>(_t4D0B,op1_e3_l_2046D9);
      real op1_e3_l_264D13#1 = RSub(basisEval415D,op1_e3_l_104D0D);
      real op1_e3_l_274D16#3 = RMul(time46E9,op1_e3_l_254D10);
      real _t4D19#4 = RDiv(op1_e3_l_264D13,op1_e3_l_274D16);
      bool _t4D1C#1 = GTE<real>(_t4D19,_t473B);
      bool _t4D1E#1 = GT<real>(time4D07,_t4D19);
      real _t4D26#1 = Abs<real>(op1_e3_l_274D16);
      bool _t4D29#2 = GTE<real>(_t4D26,_t4CC1);
      bool _t4D2B#1 = BAnd(_t4D1E,_t4D29);
      bool _t4D2D#1 = BAnd(_t4D1C,_t4D2B);
      if _t4D2D then goto ASSIGN5F36 else goto JOIN4D3C
    ASSIGN5F36:  preds = [COND4D2F]
      bool _t4D32#1 = NEQ<int>(_t4720,ilit40E8);
      if _t4D32 then goto JOIN4D38 else goto JOIN4D38
    JOIN4D38:  preds = [COND4D34,COND4D34]
      real faceTime4D35#1 = phi(faceTime4D05,_t4D19)
      int face4D36#1 = phi(ilit40E8,face4D06)
      real time4D37#1 = phi(_t4D19,time4D07)
      goto JOIN4D3C
    JOIN4D3C:  preds = [JOIN4D38,COND4D2F]
      real faceTime4D39#2 = phi(faceTime4D35,faceTime4D05)
      int face4D3A#2 = phi(face4D36,face4D06)
      real time4D3B#3 = phi(time4D37,time4D07)
      tensor[3] _t4D3D#3 = <tensor[3]>[basisEval415D,basisEval415D,time40CA];
      real op1_e3_l_104D3F#1 = VDot<3>(_t4D3D,_t40DD);
      real op1_e3_l_254D42#1 = VDot<3>(_t4D3D,op1_e3_l_2046D9);
      real op1_e3_l_264D45#1 = RSub(basisEval415D,op1_e3_l_104D3F);
      real op1_e3_l_274D48#3 = RMul(time46E9,op1_e3_l_254D42);
      real _t4D4B#4 = RDiv(op1_e3_l_264D45,op1_e3_l_274D48);
      bool _t4D4E#1 = GTE<real>(_t4D4B,_t473B);
      bool _t4D50#1 = GT<real>(time4D3B,_t4D4B);
      real _t4D58#1 = Abs<real>(op1_e3_l_274D48);
      bool _t4D5B#2 = GTE<real>(_t4D58,_t4CC1);
      bool _t4D5D#1 = BAnd(_t4D50,_t4D5B);
      bool _t4D5F#1 = BAnd(_t4D4E,_t4D5D);
      if _t4D5F then goto ASSIGN5F3A else goto JOIN4D6E
    ASSIGN5F3A:  preds = [COND4D61]
      bool _t4D64#1 = NEQ<int>(_t4720,ilit40EB);
      if _t4D64 then goto JOIN4D6A else goto JOIN4D6A
    JOIN4D6A:  preds = [COND4D66,COND4D66]
      real faceTime4D67#1 = phi(faceTime4D39,_t4D4B)
      int face4D68#1 = phi(ilit40EB,face4D3A)
      real time4D69#1 = phi(_t4D4B,time4D3B)
      goto JOIN4D6E
    JOIN4D6E:  preds = [JOIN4D6A,COND4D61]
      real faceTime4D6B#2 = phi(faceTime4D67,faceTime4D39)
      int face4D6C#2 = phi(face4D68,face4D3A)
      real time4D6D#1 = phi(time4D69,time4D3B)
      bool _t4D6F#1 = NEQ<int>(face4D6C,face4724);
      if _t4D6F then goto ASSIGN5F3C else goto ASSIGN4F61
    ASSIGN5F3C:  preds = [COND4D71]
      real _t4D72#1 = Max<real>(time4D6D,basisEval415D);
      real _t4D74#1 = IntToReal(face4D6C);
      tensor[2] _t4D76#1 = <tensor[2]>[_t4D72,_t4D74];
      goto JOIN4D7A
    JOIN4D7A:  preds = [ASSIGN4D77,JOIN4F66]
      tensor[2] _t4D78#1 = phi(_t4D76,_t4D79)
      real eTime4D7B#3 = VIndex<2,0>(_t4D78);
      real op1_e3_l_34D7D#1 = RMul(time46E9,eTime4D7B);
      real time471D#2 = RSub(time46E9,op1_e3_l_34D7D);
      int _t4D82#1 = ExtractFemItem<int,CellIndex(Mesh)>(cmp40D3);
      tensor[3] _t4D84#6 = ExtractFemItem<tensor[3],RefPos(Mesh)>(cmp40D3);
      real op1_e3_l_104D86#1 = VDot<3>(_t472A,_t4D84);
      real op1_e3_l_264D89#1 = RSub(_t4728,op1_e3_l_104D86);
      real _t4D8C#4 = RDiv(op1_e3_l_264D89,op1_e3_l_274735);
      bool _t4D8F#1 = GTE<real>(_t4D8C,_t473B);
      bool _t4D91#1 = GT<real>(time4722,_t4D8C);
      bool _t4D93#1 = BAnd(_t4D91,_t4CC3);
      bool _t4D95#1 = BAnd(_t4D8F,_t4D93);
      if _t4D95 then goto ASSIGN4D99 else goto JOIN4DA2
    ASSIGN4D99:  preds = [COND4D97]
      bool _t4D98#1 = NEQ<int>(_t4720,_t40CC);
      if _t4D98 then goto JOIN4D9E else goto JOIN4D9E
    JOIN4D9E:  preds = [COND4D9A,COND4D9A]
      real faceTime4D9B#1 = phi(faceTime4726,_t4D8C)
      int face4D9C#1 = phi(_t40CC,face4724)
      real time4D9D#1 = phi(_t4D8C,time4722)
      goto JOIN4DA2
    JOIN4DA2:  preds = [JOIN4D9E,COND4D97]
      real faceTime4D9F#2 = phi(faceTime4D9B,faceTime4726)
      int face4DA0#2 = phi(face4D9C,face4724)
      real time4DA1#3 = phi(time4D9D,time4722)
      real op1_e3_l_104DA3#1 = VDot<3>(_t4CD7,_t4D84);
      real op1_e3_l_264DA6#1 = RSub(basisEval415D,op1_e3_l_104DA3);
      real _t4DA9#4 = RDiv(op1_e3_l_264DA6,op1_e3_l_274CE2);
      bool _t4DAC#1 = GTE<real>(_t4DA9,_t473B);
      bool _t4DAE#1 = GT<real>(time4DA1,_t4DA9);
      bool _t4DB0#1 = BAnd(_t4DAE,_t4CF5);
      bool _t4DB2#1 = BAnd(_t4DAC,_t4DB0);
      if _t4DB2 then goto ASSIGN5F40 else goto JOIN4DC1
    ASSIGN5F40:  preds = [COND4DB4]
      bool _t4DB7#1 = NEQ<int>(_t4720,ilit40E5);
      if _t4DB7 then goto JOIN4DBD else goto JOIN4DBD
    JOIN4DBD:  preds = [COND4DB9,COND4DB9]
      real faceTime4DBA#1 = phi(faceTime4D9F,_t4DA9)
      int face4DBB#1 = phi(ilit40E5,face4DA0)
      real time4DBC#1 = phi(_t4DA9,time4DA1)
      goto JOIN4DC1
    JOIN4DC1:  preds = [JOIN4DBD,COND4DB4]
      real faceTime4DBE#2 = phi(faceTime4DBA,faceTime4D9F)
      int face4DBF#2 = phi(face4DBB,face4DA0)
      real time4DC0#3 = phi(time4DBC,time4DA1)
      real op1_e3_l_104DC2#1 = VDot<3>(_t4D0B,_t4D84);
      real op1_e3_l_264DC5#1 = RSub(basisEval415D,op1_e3_l_104DC2);
      real _t4DC8#4 = RDiv(op1_e3_l_264DC5,op1_e3_l_274D16);
      bool _t4DCB#1 = GTE<real>(_t4DC8,_t473B);
      bool _t4DCD#1 = GT<real>(time4DC0,_t4DC8);
      bool _t4DCF#1 = BAnd(_t4DCD,_t4D29);
      bool _t4DD1#1 = BAnd(_t4DCB,_t4DCF);
      if _t4DD1 then goto ASSIGN5F43 else goto JOIN4DE0
    ASSIGN5F43:  preds = [COND4DD3]
      bool _t4DD6#1 = NEQ<int>(_t4720,ilit40E8);
      if _t4DD6 then goto JOIN4DDC else goto JOIN4DDC
    JOIN4DDC:  preds = [COND4DD8,COND4DD8]
      real faceTime4DD9#1 = phi(faceTime4DBE,_t4DC8)
      int face4DDA#1 = phi(ilit40E8,face4DBF)
      real time4DDB#1 = phi(_t4DC8,time4DC0)
      goto JOIN4DE0
    JOIN4DE0:  preds = [JOIN4DDC,COND4DD3]
      real faceTime4DDD#2 = phi(faceTime4DD9,faceTime4DBE)
      int face4DDE#2 = phi(face4DDA,face4DBF)
      real time4DDF#3 = phi(time4DDB,time4DC0)
      real op1_e3_l_104DE1#1 = VDot<3>(_t4D3D,_t4D84);
      real op1_e3_l_264DE4#1 = RSub(basisEval415D,op1_e3_l_104DE1);
      real _t4DE7#4 = RDiv(op1_e3_l_264DE4,op1_e3_l_274D48);
      bool _t4DEA#1 = GTE<real>(_t4DE7,_t473B);
      bool _t4DEC#1 = GT<real>(time4DDF,_t4DE7);
      bool _t4DEE#1 = BAnd(_t4DEC,_t4D5B);
      bool _t4DF0#1 = BAnd(_t4DEA,_t4DEE);
      if _t4DF0 then goto ASSIGN5F46 else goto JOIN4DFF
    ASSIGN5F46:  preds = [COND4DF2]
      bool _t4DF5#1 = NEQ<int>(_t4720,ilit40EB);
      if _t4DF5 then goto JOIN4DFB else goto JOIN4DFB
    JOIN4DFB:  preds = [COND4DF7,COND4DF7]
      real faceTime4DF8#1 = phi(faceTime4DDD,_t4DE7)
      int face4DF9#1 = phi(ilit40EB,face4DDE)
      real time4DFA#1 = phi(_t4DE7,time4DDF)
      goto JOIN4DFF
    JOIN4DFF:  preds = [JOIN4DFB,COND4DF2]
      real faceTime4DFC#2 = phi(faceTime4DF8,faceTime4DDD)
      int face4DFD#2 = phi(face4DF9,face4DDE)
      real time4DFE#1 = phi(time4DFA,time4DDF)
      bool _t4E00#1 = NEQ<int>(face4DFD,face4724);
      if _t4E00 then goto ASSIGN5F48 else goto ASSIGN4F57
    ASSIGN5F48:  preds = [COND4E02]
      real _t4E03#1 = Max<real>(time4DFE,basisEval415D);
      real _t4E05#1 = IntToReal(face4DFD);
      tensor[2] _t4E07#1 = <tensor[2]>[_t4E03,_t4E05];
      goto JOIN4E0B
    JOIN4E0B:  preds = [ASSIGN4E08,JOIN4F5C]
      tensor[2] _t4E09#3 = phi(_t4E07,_t4E0A)
      real _t4E0C#1 = VIndex<2,1>(_t4E09);
      real t4E0E#1 = Floor<1>(_t4E0C);
      int _t4E10#6 = RealToInt<1>(t4E0E);
      int[2] _t4E12#2 = nextCell44E13 (_t4E10,_t4D82,_t40D2);
      int _t4E26#2 = Subscript<int[2]>(_t4E12,_t40CC);
      bool _t4E28#1 = NEQ<int>(face4724,_t4E26);
      if _t4E28 then goto ASSIGN4E2C else goto ASSIGN4F40
    ASSIGN4E2C:  preds = [COND4E2A]
      string _t4E2B#1 = "face ";
      string _t4E2D#1 = " to ";
      int _t4E31#6 = Subscript<int[2]>(_t4E12,ilit40E5);
      string _t4E33#2 = "\n";
      string _t4E35#1 = "got: ";
      real _t4E3D#4 = 0.971445146547e-16;
      tensor[4,4] _t4E41#4 = <tensor[4,4]>[time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA,basisEval415D,_t4E3D,basisEval415D,basisEval415D,time40CA];
      real _t4E43#8 = -0.57735026919e0;
      real _t4E47#12 = -0.333333333333e0;
      real _t4E49#6 = 0.666666666667e0;
      real _t4E4B#6 = 0.333333333333e0;
      tensor[4,4] _t4E51#4 = <tensor[4,4]>[_t4728,_t4728,_t4728,_t4E43,_t4E47,_t4E49,_t4E47,_t4E4B,_t4E47,_t4E47,_t4E49,_t4E4B,_t4E3D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E55#4 = <tensor[4,4]>[_t4E47,_t4E49,_t4E47,_t4E4B,_t4E43,_t4E43,_t4E43,_t4728,_t4E47,_t4E47,_t4E49,_t4E4B,_t4E3D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E57#4 = <tensor[4,4]>[_t4E47,_t4E49,_t4E47,_t4E4B,_t4E47,_t4E47,_t4E49,_t4E4B,_t4728,_t4728,_t4728,_t4E43,_t4E3D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4][4] _t4E59#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4] _t4E63#4 = <tensor[4,4]>[_t4728,coeff4157,coeff4157,time40CA,_t4728,time40CA,basisEval415D,basisEval415D,_t4728,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E65#12 = <tensor[4,4]>[time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E69#4 = <tensor[4,4]>[basisEval415D,time40CA,basisEval415D,basisEval415D,coeff4157,basisEval415D,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E6B#4 = <tensor[4,4]>[basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4][4] _t4E6D#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4] _t4E75#4 = <tensor[4,4]>[coeff4157,_t4E43,coeff4157,time40CA,time40CA,_t4E43,basisEval415D,basisEval415D,basisEval415D,_t4E43,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E79#4 = <tensor[4,4]>[basisEval415D,coeff4157,basisEval415D,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E7B#4 = <tensor[4,4]>[time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA,basisEval415D,basisEval415D,coeff4157,basisEval415D,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4][4] _t4E7D#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4] _t4E85#4 = <tensor[4,4]>[coeff4157,coeff4157,_t4728,time40CA,time40CA,basisEval415D,_t4728,basisEval415D,basisEval415D,time40CA,_t4728,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E87#4 = <tensor[4,4]>[basisEval415D,basisEval415D,time40CA,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4] _t4E8B#4 = <tensor[4,4]>[time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,basisEval415D,coeff4157,basisEval415D,basisEval415D,time40CA,basisEval415D,basisEval415D,basisEval415D,basisEval415D,basisEval415D,time40CA];
      tensor[4,4][4] _t4E8D#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4E8F#1 = <tensor[4,4][4][4]>{_t4E59,_t4E6D,_t4E7D,_t4E8D};
      tensor[4,4][4] _t4E91#1 = Subscript<tensor[4,4][4][4]>(_t4E8F,_t4E10);
      tensor[4,4] _t4E93#1 = Subscript<tensor[4,4][4]>(_t4E91,_t4E31);
      Print<[string,int,string,int,string,string,tensor[4,4],string]>(_t4E2B,_t4E10,_t4E2D,_t4E31,_t4E33,_t4E35,_t4E93,_t4E33);
      tensor[4,4][4] _t4E96#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4E98#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4E9A#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4E9C#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4E9E#1 = <tensor[4,4][4][4]>{_t4E96,_t4E98,_t4E9A,_t4E9C};
      tensor[4,4][4] _t4EA0#1 = Subscript<tensor[4,4][4][4]>(_t4E9E,_t4E10);
      tensor[4,4] _t4EA2#4 = Subscript<tensor[4,4][4]>(_t4EA0,_t4E31);
      real _t4EA4#1 = VIndex<2,0>(_t4E09);
      real r4EA8#3 = RMul(_t4EA4,time46E9);
      real r4EA9#1 = RMul(r4EA8,vdot46DB);
      real r4EAB#1 = RMul(r4EA8,vdot46DD);
      real r4EAD#1 = RMul(r4EA8,vdot46DF);
      tensor[3] op1_e3_l_224EA6#1 = <tensor[3]>[r4EA9,r4EAB,r4EAD];
      tensor[3] _t4EB7#3 = VAdd<3>(op1_e3_l_224EA6,_t4D84);
      real _t4EBA#1 = VIndex<3,0>(_t4EB7);
      real _t4EBC#1 = VIndex<3,1>(_t4EB7);
      real _t4EBE#1 = VIndex<3,2>(_t4EB7);
      tensor[4] _t4EC0#12 = <tensor[4]>[_t4EBA,_t4EBC,_t4EBE,time40CA];
      tensor[4] projParam4EC3#1 = ProjectLast<tensor[4,4],[0]>(_t4EA2);
      real vdot4EC4#1 = VDot<4>(projParam4EC3,_t4EC0);
      tensor[4] projParam4EC5#1 = ProjectLast<tensor[4,4],[1]>(_t4EA2);
      real vdot4EC6#1 = VDot<4>(projParam4EC5,_t4EC0);
      tensor[4] projParam4EC7#1 = ProjectLast<tensor[4,4],[2]>(_t4EA2);
      real vdot4EC8#1 = VDot<4>(projParam4EC7,_t4EC0);
      tensor[4] projParam4EC9#1 = ProjectLast<tensor[4,4],[3]>(_t4EA2);
      real vdot4ECA#1 = VDot<4>(projParam4EC9,_t4EC0);
      tensor[4] _t4EC2#1 = <tensor[4]>[vdot4EC4,vdot4EC6,vdot4EC8,vdot4ECA];
      real _t4ED5#1 = VIndex<4,0>(_t4EC2);
      tensor[4,4][4] _t4ED7#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4ED9#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4EDB#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4EDD#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4EDF#1 = <tensor[4,4][4][4]>{_t4ED7,_t4ED9,_t4EDB,_t4EDD};
      tensor[4,4][4] _t4EE1#1 = Subscript<tensor[4,4][4][4]>(_t4EDF,_t4E10);
      tensor[4,4] _t4EE3#4 = Subscript<tensor[4,4][4]>(_t4EE1,_t4E31);
      tensor[4] projParam4EE6#1 = ProjectLast<tensor[4,4],[0]>(_t4EE3);
      real vdot4EE7#1 = VDot<4>(projParam4EE6,_t4EC0);
      tensor[4] projParam4EE8#1 = ProjectLast<tensor[4,4],[1]>(_t4EE3);
      real vdot4EE9#1 = VDot<4>(projParam4EE8,_t4EC0);
      tensor[4] projParam4EEA#1 = ProjectLast<tensor[4,4],[2]>(_t4EE3);
      real vdot4EEB#1 = VDot<4>(projParam4EEA,_t4EC0);
      tensor[4] projParam4EEC#1 = ProjectLast<tensor[4,4],[3]>(_t4EE3);
      real vdot4EED#1 = VDot<4>(projParam4EEC,_t4EC0);
      tensor[4] _t4EE5#1 = <tensor[4]>[vdot4EE7,vdot4EE9,vdot4EEB,vdot4EED];
      real _t4EF8#1 = VIndex<4,1>(_t4EE5);
      tensor[4,4][4] _t4EFA#1 = <tensor[4,4][4]>{_t4E41,_t4E51,_t4E55,_t4E57};
      tensor[4,4][4] _t4EFC#1 = <tensor[4,4][4]>{_t4E63,_t4E65,_t4E69,_t4E6B};
      tensor[4,4][4] _t4EFE#1 = <tensor[4,4][4]>{_t4E75,_t4E79,_t4E65,_t4E7B};
      tensor[4,4][4] _t4F00#1 = <tensor[4,4][4]>{_t4E85,_t4E87,_t4E8B,_t4E65};
      tensor[4,4][4][4] _t4F02#1 = <tensor[4,4][4][4]>{_t4EFA,_t4EFC,_t4EFE,_t4F00};
      tensor[4,4][4] _t4F04#1 = Subscript<tensor[4,4][4][4]>(_t4F02,_t4E10);
      tensor[4,4] _t4F06#4 = Subscript<tensor[4,4][4]>(_t4F04,_t4E31);
      tensor[4] projParam4F09#1 = ProjectLast<tensor[4,4],[0]>(_t4F06);
      real vdot4F0A#1 = VDot<4>(projParam4F09,_t4EC0);
      tensor[4] projParam4F0B#1 = ProjectLast<tensor[4,4],[1]>(_t4F06);
      real vdot4F0C#1 = VDot<4>(projParam4F0B,_t4EC0);
      tensor[4] projParam4F0D#1 = ProjectLast<tensor[4,4],[2]>(_t4F06);
      real vdot4F0E#1 = VDot<4>(projParam4F0D,_t4EC0);
      tensor[4] projParam4F0F#1 = ProjectLast<tensor[4,4],[3]>(_t4F06);
      real vdot4F10#1 = VDot<4>(projParam4F0F,_t4EC0);
      tensor[4] _t4F08#1 = <tensor[4]>[vdot4F0A,vdot4F0C,vdot4F0E,vdot4F10];
      real _t4F1B#1 = VIndex<4,2>(_t4F08);
      tensor[3] _t4F1D#1 = <tensor[3]>[_t4ED5,_t4EF8,_t4F1B];
      femData:MeshPos _t4F1F#1 = ExtractFemItemN<[femData:Mesh,int,tensor[3],int],femData:MeshPos,RefBuild(Mesh),0000,"",[],int>(_t40D2,_t4E26,_t4F1D,_t4E31);
      goto JOIN4F22
    JOIN4F22:  preds = [ASSIGN4F20,ASSIGN4F55]
      femData:MeshPos nmp471B#3 = phi(_t4F1F,_t4F21)
      bool _t4F23#1 = ExtractFemItem<bool,Valid(MeshPos)>(nmp471B);
      bool _t4F25#1 = BNot(_t4F23);
      if _t4F25 then goto ASSIGN4F29 else goto ASSIGN5F61
    ASSIGN4F29:  preds = [COND4F27]
      bool _t4F28#1 = true;
      goto JOIN4F2C
    JOIN4F2C:  preds = [ASSIGN4F29,JOIN4F36]
      bool _t4F2A#1 = phi(_t4F28,_t4F2B)
      if _t4F2A then goto RETURN(nmp471B)4F2E else goto JOIN4F2F
    RETURN(nmp471B)4F2E:  preds = [COND4F2D]
      return nmp471B
      goto JOIN4F2F
    JOIN4F2F:  preds = [*RETURN(nmp471B)4F2E,COND4F2D]
      goto JOIN471E
    ASSIGN5F61:  preds = [COND4F27]
      bool _t4F30#1 = LT<real>(eTime4D7B,basisEval415D);
      if _t4F30 then goto ASSIGN4F34 else goto ASSIGN4F38
    ASSIGN4F34:  preds = [COND4F32]
      bool _t4F33#1 = true;
      goto JOIN4F36
    JOIN4F36:  preds = [ASSIGN4F34,JOIN4F3D]
      bool _t4F2B#1 = phi(_t4F33,_t4F35)
      goto JOIN4F2C
    ASSIGN4F38:  preds = [COND4F32]
      bool _t4F37#1 = GT<real>(eTime4D7B,time40CA);
      if _t4F37 then goto ASSIGN4F3B else goto ASSIGN4F3E
    ASSIGN4F3B:  preds = [COND4F39]
      bool _t4F3A#1 = true;
      goto JOIN4F3D
    JOIN4F3D:  preds = [ASSIGN4F3B,ASSIGN4F3E]
      bool _t4F35#1 = phi(_t4F3A,_t4F3C)
      goto JOIN4F36
    ASSIGN4F3E:  preds = [COND4F39]
      bool _t4F3C#1 = LT<real>(time471D,timeEps40C1);
      goto JOIN4F3D
    ASSIGN4F40:  preds = [COND4E2A]
      real _t4F3F#1 = VIndex<2,0>(_t4E09);
      real r4F43#3 = RMul(_t4F3F,time46E9);
      real r4F44#1 = RMul(r4F43,vdot46DB);
      real r4F46#1 = RMul(r4F43,vdot46DD);
      real r4F48#1 = RMul(r4F43,vdot46DF);
      tensor[3] op1_e3_l_224F41#1 = <tensor[3]>[r4F44,r4F46,r4F48];
      tensor[3] _t4F52#1 = VAdd<3>(op1_e3_l_224F41,_t4D84);
      femData:MeshPos _t4F21#1 = ExtractFemItemN<[femData:Mesh,tensor[3]],femData:MeshPos,InvalidBuildBoundary(MeshPos),0000,"",[],int>(_t40D2,_t4F52);
      goto JOIN4F22
    ASSIGN4F57:  preds = [COND4E02]
      bool _t4F56#1 = EQ<real>(faceTime4726,faceTime4DFC);
      if _t4F56 then goto ASSIGN5F47 else goto ASSIGN4F5E
    ASSIGN5F47:  preds = [COND4F58]
      tensor[2] _t4F59#1 = <tensor[2]>[coeff4157,coeff4157];
      goto JOIN4F5C
    JOIN4F5C:  preds = [ASSIGN5F47,ASSIGN4F5F]
      tensor[2] _t4E0A#1 = phi(_t4F59,_t4F5B)
      goto JOIN4E0B
    ASSIGN4F5E:  preds = [COND4F58]
      real _t4F5D#1 = IntToReal(_t4720);
      tensor[2] _t4F5B#1 = <tensor[2]>[faceTime4DFC,_t4F5D];
      goto JOIN4F5C
    ASSIGN4F61:  preds = [COND4D71]
      bool _t4F60#1 = EQ<real>(faceTime4726,faceTime4D6B);
      if _t4F60 then goto ASSIGN5F3B else goto ASSIGN4F68
    ASSIGN5F3B:  preds = [COND4F62]
      tensor[2] _t4F63#1 = <tensor[2]>[coeff4157,coeff4157];
      goto JOIN4F66
    JOIN4F66:  preds = [ASSIGN5F3B,ASSIGN4F69]
      tensor[2] _t4D79#1 = phi(_t4F63,_t4F65)
      goto JOIN4D7A
    ASSIGN4F68:  preds = [COND4F62]
      real _t4F67#1 = IntToReal(_t4720);
      tensor[2] _t4F65#1 = <tensor[2]>[faceTime4D6B,_t4F67];
      goto JOIN4F66
    ASSIGN4F6B:  preds = [FOREACH40D1]
      string _t4F6A#1 = "Took stupid way out!\n";
      Print<[string]>(_t4F6A);
      tensor[3] _t4F6D#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(x40BA);
      int _t4F6F#1 = ExtractFemItem<int,CellIndex(MeshPos)>(x40BA);
      femData:Mesh _t4F71#16 = ExtractFem<femData:Mesh,femData:MeshPos>(x40BA);
      int ilit4F74#1 = 4;
      int mulRes4F75#4 = IMul(_t4F6F,ilit4F74);
      int idx4F78#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,mulRes4F75);
      int ilit4F79#5 = 1;
      int addRes4F7A#1 = IAdd(mulRes4F75,ilit4F79);
      int idx4F7B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F7A);
      int ilit4F7C#5 = 2;
      int addRes4F7D#1 = IAdd(mulRes4F75,ilit4F7C);
      int idx4F7E#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F7D);
      int ilit4F7F#5 = 3;
      int addRes4F80#1 = IAdd(mulRes4F75,ilit4F7F);
      int idx4F81#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t4F71,addRes4F80);
      int mulRes4F97#3 = IMul(ilit4F7F,idx4F78);
      int addRes4F9A#1 = IAdd(ilit4F79,mulRes4F97);
      int addRes4F9C#1 = IAdd(ilit4F7C,mulRes4F97);
      real dof_load4F9D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4F97);
      real dof_load4F9E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F9A);
      real dof_load4F9F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4F9C);
      int mulRes4FA2#3 = IMul(ilit4F7F,idx4F7B);
      int addRes4FA4#1 = IAdd(ilit4F79,mulRes4FA2);
      int addRes4FA5#1 = IAdd(ilit4F7C,mulRes4FA2);
      real dof_load4FA6#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4FA2);
      real dof_load4FA7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA4);
      real dof_load4FA8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FA5);
      int mulRes4FAB#3 = IMul(ilit4F7F,idx4F7E);
      int addRes4FAD#1 = IAdd(ilit4F79,mulRes4FAB);
      int addRes4FAE#1 = IAdd(ilit4F7C,mulRes4FAB);
      real dof_load4FAF#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4FAB);
      real dof_load4FB0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAD);
      real dof_load4FB1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FAE);
      int mulRes4FB4#3 = IMul(ilit4F7F,idx4F81);
      int addRes4FB6#1 = IAdd(ilit4F79,mulRes4FB4);
      int addRes4FB7#1 = IAdd(ilit4F7C,mulRes4FB4);
      real dof_load4FB8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,mulRes4FB4);
      real dof_load4FB9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB6);
      real dof_load4FBA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t4F71,addRes4FB7);
      real varAcc4FE8#1 = VIndex<3,0>(_t4F6D);
      real varAcc4FE9#1 = VIndex<3,1>(_t4F6D);
      real varAcc4FEA#1 = VIndex<3,2>(_t4F6D);
      real coeff4FEB#3 = -0.1e1;
      real prod4FEE#2 = RMul(time40CA,time40CA);
      real prod4FEF#2 = RMul(varAcc4FE8,prod4FEE);
      real prod4FF1#1 = RMul(varAcc4FE9,time40CA);
      real prod4FF2#2 = RMul(time40CA,prod4FF1);
      real prod4FF4#1 = RMul(time40CA,varAcc4FEA);
      real prod4FF5#2 = RMul(time40CA,prod4FF4);
      real prod4FF6#1 = RMul(time40CA,prod4FEE);
      real mult4FF7#1 = RMul(time40CA,prod4FF6);
      real mult4FF8#1 = RMul(coeff4FEB,prod4FF5);
      real mult4FF9#1 = RMul(coeff4FEB,prod4FF2);
      real mult4FFA#1 = RMul(coeff4FEB,prod4FEF);
      real sum4FFB#1 = RAdd(mult4FF9,mult4FFA);
      real sum4FFC#1 = RAdd(mult4FF8,sum4FFB);
      real sum4FFD#3 = RAdd(mult4FF7,sum4FFC);
      real basisEval4FFF#3 = RMul(time40CA,prod4FEF);
      real basisEval5000#3 = RMul(time40CA,prod4FF2);
      real basisEval5001#3 = RMul(time40CA,prod4FF5);
      real r5022#1 = RMul(dof_load4F9D,sum4FFD);
      real r5025#1 = RMul(dof_load4FA6,basisEval4FFF);
      real r5028#1 = RMul(dof_load4FAF,basisEval5000);
      real r502B#1 = RMul(dof_load4FB8,basisEval5001);
      real r502C#1 = RAdd(r5022,r5025);
      real r502D#1 = RAdd(r502C,r5028);
      real r502E#1 = RAdd(r502D,r502B);
      real r5030#1 = RMul(dof_load4F9E,sum4FFD);
      real r5032#1 = RMul(dof_load4FA7,basisEval4FFF);
      real r5034#1 = RMul(dof_load4FB0,basisEval5000);
      real r5036#1 = RMul(dof_load4FB9,basisEval5001);
      real r5037#1 = RAdd(r5030,r5032);
      real r5038#1 = RAdd(r5037,r5034);
      real r5039#1 = RAdd(r5038,r5036);
      real r503B#1 = RMul(dof_load4F9F,sum4FFD);
      real r503D#1 = RMul(dof_load4FA8,basisEval4FFF);
      real r503F#1 = RMul(dof_load4FB1,basisEval5000);
      real r5041#1 = RMul(dof_load4FBA,basisEval5001);
      real r5042#1 = RAdd(r503B,r503D);
      real r5043#1 = RAdd(r5042,r503F);
      real r5044#1 = RAdd(r5043,r5041);
      tensor[3] probe_l_5501F#1 = <tensor[3]>[r502E,r5039,r5044];
      tensor[3] _t506C#1 = VAdd<3>(probe_l_5501F,dPos40BB);
      femData:MeshPos cmp506F#1 = findPos3574 (meshData40BD,_t506C);
      return cmp506F
}
## input initialization
  ENTRY352A:  preds = []
    int timeSteps352B#1 = 32;
    globals.timeSteps3522 = timeSteps352B;
    real timeEps352E#1 = 0.1e-6;
    globals.timeEps3523 = timeEps352E;
    real stepSize3531#1 = 0.1e-1;
    globals.stepSize3525 = stepSize3531;
    int stepMax3534#1 = 100;
    globals.stepMax3526 = stepMax3534;
    return
## global-variable initialization
  ENTRY3538:  preds = []
    femData:Mesh meshData3539#3 = globals.meshData351F;
    femData:Space 0space03AB_intermedateGlobal353B#1 = globals.0space03AB_intermedateGlobal3520;
    femData:FemFunc 0data03AD_intermedateGlobal353D#1 = globals.0data03AD_intermedateGlobal3521;
    int _t353F#1 = 0;
    int _t3541#1 = 1;
    int _t3543#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData3539);
    int _t3545#1 = ISub(_t3543,_t3541);
    int[] _t3547#1 = Range(_t353F,_t3545);
    femData:MeshCell[] _t3549#1 = <femData:MeshCell[]>{};
  FOREACH354C:  preds = [ASSIGN354A,NEXT3552]
    foreach (_t354B in _t3547) on exit goto ASSIGN3554
      femData:MeshCell[] _t3550#1 = phi(_t3549,_t354F)
    femData:MeshCell _t354D#1 = LoadFem<femData:MeshCell>(meshData3539,_t354B);
    femData:MeshCell[] _t354F#1 = Append<femData:MeshCell>(_t3550,_t354D);
    goto FOREACH354C
  ASSIGN3554:  preds = [FOREACH354C]
    femData:Space space3553#1 = LoadFem<femData:Space>(0space03AB_intermedateGlobal353B,meshData3539);
    femData:FemFunc data3555#2 = LoadFem<femData:FemFunc>(0data03AD_intermedateGlobal353D,space3553);
    globals.data3527 = data3555;
    femData:Space _t3558#2 = ExtractFem<femData:Space,femData:FemFunc>(data3555);
    femData:Mesh _t355A#1 = ExtractFem<femData:Mesh,femData:Space>(_t3558);
    globals._t3528 = _t355A;
    globals._tX3529 = _t3558;
    return
## strand
  strand gg (tensor[3] startPos355F#5)
    state:
      output tensor[3][] stream;
      output tensor[3][] newStream;
      int step;
      femData:MeshPos cPos;
      tensor[3] altCPos;
      tensor[3] startPos;
    state init
      ENTRY3566:  preds = []
        femData:Mesh meshData3567#1 = globals.meshData351F;
        tensor[3][1] _t3569#1 = <tensor[3][1]>{startPos355F};
        tensor[3][] _t356B#1 = MkDynamic<tensor[3],1>(_t3569);
        tensor[3][1] _t356D#1 = <tensor[3][1]>{startPos355F};
        tensor[3][] _t356F#1 = MkDynamic<tensor[3],1>(_t356D);
        int step3571#1 = 0;
        femData:MeshPos cPos3573#1 = findPos3574 (meshData3567,startPos355F);
        self.stream = _t356B;
        self.newStream = _t356F;
        self.step = step3571;
        self.cPos = cPos3573;
        self.altCPos = startPos355F;
        self.startPos = startPos355F;
        return
    end state init
    method update
        ENTRY3CC6:  preds = []
          femData:Mesh _t3CC7#2 = globals._t3528;
          femData:Space _t3CC9#20 = globals._tX3529;
          femData:FemFunc data3CCB#62 = globals.data3527;
          femData:Mesh meshData3CCD#2 = globals.meshData351F;
          real stepSize3CCF#3 = globals.stepSize3525;
          int stepMax3CD1#1 = globals.stepMax3526;
          tensor[3][] stream3CD3#2 = self.stream;
          tensor[3][] newStream3CD5#1 = self.newStream;
          int step3CD7#3 = self.step;
          femData:MeshPos cPos3CD9#6 = self.cPos;
          tensor[3] altCPos3CDB#5 = self.altCPos;
          tensor[3] startPos3CDD#1 = self.startPos;
          bool _t3CDF#2 = ExtractFemItem<bool,Valid(MeshPos)>(cPos3CD9);
          bool _t3CE1#1 = BNot(_t3CDF);
          if _t3CE1 then goto ASSIGN3CE5 else goto ASSIGN59B1
        ASSIGN3CE5:  preds = [COND3CE3]
          bool _t3CE4#1 = true;
          goto JOIN3CE8
        JOIN3CE8:  preds = [ASSIGN3CE5,JOIN59BA]
          bool _t3CE6#1 = phi(_t3CE4,_t3CE7)
          if _t3CE6 then goto STABILIZE3CEA else goto JOIN3CEB
        STABILIZE3CEA:  preds = [COND3CE9]
          stabilize
          goto JOIN3CEB
        JOIN3CEB:  preds = [*STABILIZE3CEA,COND3CE9]
          tensor[3] _t3CEC#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos3CD9);
          int _t3CEE#3 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos3CD9);
          femData:Mesh _t3CF0#18 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos3CD9);
          int ilit3CF3#6 = 4;
          int mulRes3CF4#4 = IMul(_t3CEE,ilit3CF3);
          int idx3CF7#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,mulRes3CF4);
          int ilit3CF8#55 = 1;
          int addRes3CF9#1 = IAdd(mulRes3CF4,ilit3CF8);
          int idx3CFA#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CF9);
          int ilit3CFB#54 = 2;
          int addRes3CFC#1 = IAdd(mulRes3CF4,ilit3CFB);
          int idx3CFD#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CFC);
          int ilit3CFE#54 = 3;
          int addRes3CFF#1 = IAdd(mulRes3CF4,ilit3CFE);
          int idx3D00#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t3CF0,addRes3CFF);
          int mulRes3D16#3 = IMul(ilit3CFE,idx3CF7);
          int addRes3D19#1 = IAdd(ilit3CF8,mulRes3D16);
          int addRes3D1B#1 = IAdd(ilit3CFB,mulRes3D16);
          real dof_load3D1C#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D16);
          real dof_load3D1D#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D19);
          real dof_load3D1E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D1B);
          int mulRes3D21#3 = IMul(ilit3CFE,idx3CFA);
          int addRes3D23#1 = IAdd(ilit3CF8,mulRes3D21);
          int addRes3D24#1 = IAdd(ilit3CFB,mulRes3D21);
          real dof_load3D25#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D21);
          real dof_load3D26#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D23);
          real dof_load3D27#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D24);
          int mulRes3D2A#3 = IMul(ilit3CFE,idx3CFD);
          int addRes3D2C#1 = IAdd(ilit3CF8,mulRes3D2A);
          int addRes3D2D#1 = IAdd(ilit3CFB,mulRes3D2A);
          real dof_load3D2E#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D2A);
          real dof_load3D2F#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2C);
          real dof_load3D30#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D2D);
          int mulRes3D33#3 = IMul(ilit3CFE,idx3D00);
          int addRes3D35#1 = IAdd(ilit3CF8,mulRes3D33);
          int addRes3D36#1 = IAdd(ilit3CFB,mulRes3D33);
          real dof_load3D37#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,mulRes3D33);
          real dof_load3D38#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D35);
          real dof_load3D39#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t3CF0,addRes3D36);
          real varAcc3D67#5 = VIndex<3,0>(_t3CEC);
          real varAcc3D68#4 = VIndex<3,1>(_t3CEC);
          real varAcc3D69#4 = VIndex<3,2>(_t3CEC);
          real coeff3D6A#15 = -0.1e1;
          real one3D6C#54 = 0.1e1;
          real prod3D6D#10 = RMul(one3D6C,one3D6C);
          real prod3D6E#4 = RMul(varAcc3D67,prod3D6D);
          real prod3D70#2 = RMul(varAcc3D68,one3D6C);
          real prod3D71#4 = RMul(one3D6C,prod3D70);
          real prod3D73#2 = RMul(one3D6C,varAcc3D69);
          real prod3D74#4 = RMul(one3D6C,prod3D73);
          real prod3D75#1 = RMul(one3D6C,prod3D6D);
          real mult3D76#6 = RMul(one3D6C,prod3D75);
          real mult3D77#2 = RMul(coeff3D6A,prod3D74);
          real mult3D78#2 = RMul(coeff3D6A,prod3D71);
          real mult3D79#2 = RMul(coeff3D6A,prod3D6E);
          real sum3D7A#1 = RAdd(mult3D78,mult3D79);
          real sum3D7B#1 = RAdd(mult3D77,sum3D7A);
          real sum3D7C#3 = RAdd(mult3D76,sum3D7B);
          real basisEval3D7E#3 = RMul(one3D6C,prod3D6E);
          real basisEval3D7F#3 = RMul(one3D6C,prod3D71);
          real basisEval3D80#3 = RMul(one3D6C,prod3D74);
          real r3DA1#1 = RMul(dof_load3D1C,sum3D7C);
          real r3DA4#1 = RMul(dof_load3D25,basisEval3D7E);
          real r3DA7#1 = RMul(dof_load3D2E,basisEval3D7F);
          real r3DAA#1 = RMul(dof_load3D37,basisEval3D80);
          real r3DAB#1 = RAdd(r3DA1,r3DA4);
          real r3DAC#1 = RAdd(r3DAB,r3DA7);
          real r3DAD#1 = RAdd(r3DAC,r3DAA);
          real r3DAF#1 = RMul(dof_load3D1D,sum3D7C);
          real r3DB1#1 = RMul(dof_load3D26,basisEval3D7E);
          real r3DB3#1 = RMul(dof_load3D2F,basisEval3D7F);
          real r3DB5#1 = RMul(dof_load3D38,basisEval3D80);
          real r3DB6#1 = RAdd(r3DAF,r3DB1);
          real r3DB7#1 = RAdd(r3DB6,r3DB3);
          real r3DB8#1 = RAdd(r3DB7,r3DB5);
          real r3DBA#1 = RMul(dof_load3D1E,sum3D7C);
          real r3DBC#1 = RMul(dof_load3D27,basisEval3D7E);
          real r3DBE#1 = RMul(dof_load3D30,basisEval3D7F);
          real r3DC0#1 = RMul(dof_load3D39,basisEval3D80);
          real r3DC1#1 = RAdd(r3DBA,r3DBC);
          real r3DC2#1 = RAdd(r3DC1,r3DBE);
          real r3DC3#1 = RAdd(r3DC2,r3DC0);
          tensor[3] probe_l_53D9E#1 = <tensor[3]>[r3DAD,r3DB8,r3DC3];
          tensor[3] op1_e3_l_73DEB#2 = VSub<3>(probe_l_53D9E,altCPos3CDB);
          real op1_e3_l_93DEE#1 = VDot<3>(op1_e3_l_73DEB,op1_e3_l_73DEB);
          real _t3DF1#1 = Sqrt(op1_e3_l_93DEE);
          real _t3DF4#1 = 0.1e-5;
          bool _t3DF6#1 = GT<real>(_t3DF1,_t3DF4);
          if _t3DF6 then goto ASSIGN3DFA else goto ASSIGN59AA
        ASSIGN3DFA:  preds = [COND3DF8]
          string _t3DF9#1 = "Error in tracing: At step:";
          string _t3DFB#1 = " with particle:";
          string _t3DFD#1 = "\n";
          Print<[string,int,string,tensor[3],string]>(_t3DF9,step3CD7,_t3DFB,startPos3CDD,_t3DFD);
          goto JOIN3E00
        JOIN3E00:  preds = [MASSIGN3DFF,MASSIGN59AF]
          real _t3E01#1 = 0.5e0;
          if _t3CDF then goto ASSIGN3E05 else goto ASSIGN59A7
        ASSIGN3E05:  preds = [COND3E03]
          femData:MeshCell c3E04#1 = LoadFem<femData:MeshCell>(_t3CF0,_t3CEE);
          int _t3E06#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c3E04);
          femData:FuncCell _t3E08#2 = LoadFem<femData:FuncCell>(data3CCB,_t3E06);
          femData:FemFunc _t3E0A#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t3E08);
          femData:Space _t3E0C#10 = ExtractFem<femData:Space,femData:FemFunc>(_t3E0A);
          int _t3E0E#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t3E08);
          int ilit3E11#1 = 10;
          int mulRes3E12#10 = IMul(_t3E0E,ilit3E11);
          int idx3E15#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,mulRes3E12);
          int addRes3E17#1 = IAdd(mulRes3E12,ilit3CF8);
          int idx3E18#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E17);
          int addRes3E1A#1 = IAdd(mulRes3E12,ilit3CFB);
          int idx3E1B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E1A);
          int addRes3E1D#1 = IAdd(mulRes3E12,ilit3CFE);
          int idx3E1E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E1D);
          int addRes3E20#1 = IAdd(mulRes3E12,ilit3CF3);
          int idx3E21#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E20);
          int ilit3E22#1 = 5;
          int addRes3E23#1 = IAdd(mulRes3E12,ilit3E22);
          int idx3E24#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E23);
          int ilit3E25#1 = 6;
          int addRes3E26#1 = IAdd(mulRes3E12,ilit3E25);
          int idx3E27#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E26);
          int ilit3E28#1 = 7;
          int addRes3E29#1 = IAdd(mulRes3E12,ilit3E28);
          int idx3E2A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E29);
          int ilit3E2B#1 = 8;
          int addRes3E2C#1 = IAdd(mulRes3E12,ilit3E2B);
          int idx3E2D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E2C);
          int ilit3E2E#1 = 9;
          int addRes3E2F#1 = IAdd(mulRes3E12,ilit3E2E);
          int idx3E30#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3E0C,addRes3E2F);
          int mulRes3E58#3 = IMul(ilit3CFE,idx3E15);
          int addRes3E5B#1 = IAdd(ilit3CF8,mulRes3E58);
          int addRes3E5D#1 = IAdd(ilit3CFB,mulRes3E58);
          real dof_load3E5E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E58);
          real dof_load3E5F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E5B);
          real dof_load3E60#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E5D);
          int mulRes3E63#3 = IMul(ilit3CFE,idx3E18);
          int addRes3E65#1 = IAdd(ilit3CF8,mulRes3E63);
          int addRes3E66#1 = IAdd(ilit3CFB,mulRes3E63);
          real dof_load3E67#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E63);
          real dof_load3E68#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E65);
          real dof_load3E69#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E66);
          int mulRes3E6C#3 = IMul(ilit3CFE,idx3E1B);
          int addRes3E6E#1 = IAdd(ilit3CF8,mulRes3E6C);
          int addRes3E6F#1 = IAdd(ilit3CFB,mulRes3E6C);
          real dof_load3E70#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E6C);
          real dof_load3E71#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6E);
          real dof_load3E72#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E6F);
          int mulRes3E75#3 = IMul(ilit3CFE,idx3E1E);
          int addRes3E77#1 = IAdd(ilit3CF8,mulRes3E75);
          int addRes3E78#1 = IAdd(ilit3CFB,mulRes3E75);
          real dof_load3E79#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E75);
          real dof_load3E7A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E77);
          real dof_load3E7B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E78);
          int mulRes3E7F#3 = IMul(ilit3CFE,idx3E21);
          int addRes3E81#1 = IAdd(ilit3CF8,mulRes3E7F);
          int addRes3E82#1 = IAdd(ilit3CFB,mulRes3E7F);
          real dof_load3E83#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E7F);
          real dof_load3E84#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E81);
          real dof_load3E85#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E82);
          int mulRes3E89#3 = IMul(ilit3CFE,idx3E24);
          int addRes3E8B#1 = IAdd(ilit3CF8,mulRes3E89);
          int addRes3E8C#1 = IAdd(ilit3CFB,mulRes3E89);
          real dof_load3E8D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E89);
          real dof_load3E8E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8B);
          real dof_load3E8F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E8C);
          int mulRes3E93#3 = IMul(ilit3CFE,idx3E27);
          int addRes3E95#1 = IAdd(ilit3CF8,mulRes3E93);
          int addRes3E96#1 = IAdd(ilit3CFB,mulRes3E93);
          real dof_load3E97#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E93);
          real dof_load3E98#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E95);
          real dof_load3E99#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E96);
          int mulRes3E9D#3 = IMul(ilit3CFE,idx3E2A);
          int addRes3E9F#1 = IAdd(ilit3CF8,mulRes3E9D);
          int addRes3EA0#1 = IAdd(ilit3CFB,mulRes3E9D);
          real dof_load3EA1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3E9D);
          real dof_load3EA2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3E9F);
          real dof_load3EA3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA0);
          int mulRes3EA7#3 = IMul(ilit3CFE,idx3E2D);
          int addRes3EA9#1 = IAdd(ilit3CF8,mulRes3EA7);
          int addRes3EAA#1 = IAdd(ilit3CFB,mulRes3EA7);
          real dof_load3EAB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3EA7);
          real dof_load3EAC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EA9);
          real dof_load3EAD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EAA);
          int mulRes3EB1#3 = IMul(ilit3CFE,idx3E30);
          int addRes3EB3#1 = IAdd(ilit3CF8,mulRes3EB1);
          int addRes3EB4#1 = IAdd(ilit3CFB,mulRes3EB1);
          real dof_load3EB5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,mulRes3EB1);
          real dof_load3EB6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB3);
          real dof_load3EB7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t3E0A,addRes3EB4);
          real coeff3F24#3 = 0.2e1;
          real prod23F26#1 = RMul(varAcc3D67,varAcc3D67);
          real prod3F29#2 = RMul(prod23F26,prod3D6D);
          real coeff3F2A#6 = 0.4e1;
          real prod3F2D#2 = RMul(varAcc3D67,prod3D70);
          real prod3F30#2 = RMul(varAcc3D67,prod3D73);
          real coeff3F31#3 = -0.3e1;
          real prod23F33#1 = RMul(varAcc3D68,varAcc3D68);
          real prod3F34#1 = RMul(prod23F33,one3D6C);
          real prod3F35#2 = RMul(one3D6C,prod3F34);
          real prod3F36#1 = RMul(varAcc3D68,varAcc3D69);
          real prod3F37#2 = RMul(one3D6C,prod3F36);
          real prod23F39#1 = RMul(varAcc3D69,varAcc3D69);
          real prod3F3A#1 = RMul(one3D6C,prod23F39);
          real prod3F3B#2 = RMul(one3D6C,prod3F3A);
          real mult3F3F#1 = RMul(coeff3F31,prod3D74);
          real mult3F40#2 = RMul(coeff3F24,prod3F3B);
          real mult3F41#1 = RMul(coeff3F31,prod3D71);
          real mult3F42#4 = RMul(coeff3F2A,prod3F37);
          real mult3F43#2 = RMul(coeff3F24,prod3F35);
          real mult3F44#1 = RMul(coeff3F31,prod3D6E);
          real mult3F45#4 = RMul(coeff3F2A,prod3F30);
          real mult3F46#4 = RMul(coeff3F2A,prod3F2D);
          real mult3F47#2 = RMul(coeff3F24,prod3F29);
          real sum3F48#1 = RAdd(mult3F46,mult3F47);
          real sum3F49#1 = RAdd(mult3F45,sum3F48);
          real sum3F4A#1 = RAdd(mult3F44,sum3F49);
          real sum3F4B#1 = RAdd(mult3F43,sum3F4A);
          real sum3F4C#1 = RAdd(mult3F42,sum3F4B);
          real sum3F4D#1 = RAdd(mult3F41,sum3F4C);
          real sum3F4E#1 = RAdd(mult3F40,sum3F4D);
          real sum3F4F#1 = RAdd(mult3F3F,sum3F4E);
          real sum3F50#3 = RAdd(mult3D76,sum3F4F);
          real sum3F54#3 = RAdd(mult3D79,mult3F47);
          real sum3F57#3 = RAdd(mult3D78,mult3F43);
          real sum3F5A#3 = RAdd(mult3D77,mult3F40);
          real coeff3F5C#6 = -0.4e1;
          real mult3F5D#1 = RMul(coeff3F2A,prod3D74);
          real mult3F5E#1 = RMul(coeff3F5C,prod3F3B);
          real mult3F5F#2 = RMul(coeff3F5C,prod3F37);
          real mult3F60#2 = RMul(coeff3F5C,prod3F30);
          real sum3F61#1 = RAdd(mult3F5F,mult3F60);
          real sum3F62#1 = RAdd(mult3F5E,sum3F61);
          real sum3F63#3 = RAdd(mult3F5D,sum3F62);
          real mult3F65#1 = RMul(coeff3F2A,prod3D71);
          real mult3F66#1 = RMul(coeff3F5C,prod3F35);
          real mult3F67#2 = RMul(coeff3F5C,prod3F2D);
          real sum3F68#1 = RAdd(mult3F66,mult3F67);
          real sum3F69#1 = RAdd(mult3F5F,sum3F68);
          real sum3F6A#3 = RAdd(mult3F65,sum3F69);
          real mult3F6C#1 = RMul(coeff3F2A,prod3D6E);
          real mult3F6D#1 = RMul(coeff3F5C,prod3F29);
          real sum3F6E#1 = RAdd(mult3F67,mult3F6D);
          real sum3F6F#1 = RAdd(mult3F60,sum3F6E);
          real sum3F70#3 = RAdd(mult3F6C,sum3F6F);
          real r3FC9#1 = RMul(dof_load3E5E,sum3F50);
          real r3FCC#1 = RMul(dof_load3E67,sum3F54);
          real r3FCF#1 = RMul(dof_load3E70,sum3F57);
          real r3FD2#1 = RMul(dof_load3E79,sum3F5A);
          real r3FD5#1 = RMul(dof_load3E83,mult3F42);
          real r3FD8#1 = RMul(dof_load3E8D,mult3F45);
          real r3FDB#1 = RMul(dof_load3E97,mult3F46);
          real r3FDE#1 = RMul(dof_load3EA1,sum3F63);
          real r3FE1#1 = RMul(dof_load3EAB,sum3F6A);
          real r3FE4#1 = RMul(dof_load3EB5,sum3F70);
          real r3FE5#1 = RAdd(r3FC9,r3FCC);
          real r3FE6#1 = RAdd(r3FE5,r3FCF);
          real r3FE7#1 = RAdd(r3FE6,r3FD2);
          real r3FE8#1 = RAdd(r3FE7,r3FD5);
          real r3FE9#1 = RAdd(r3FE8,r3FD8);
          real r3FEA#1 = RAdd(r3FE9,r3FDB);
          real r3FEB#1 = RAdd(r3FEA,r3FDE);
          real r3FEC#1 = RAdd(r3FEB,r3FE1);
          real r3FED#2 = RAdd(r3FEC,r3FE4);
          real r3FEF#1 = RMul(dof_load3E5F,sum3F50);
          real r3FF1#1 = RMul(dof_load3E68,sum3F54);
          real r3FF3#1 = RMul(dof_load3E71,sum3F57);
          real r3FF5#1 = RMul(dof_load3E7A,sum3F5A);
          real r3FF7#1 = RMul(dof_load3E84,mult3F42);
          real r3FF9#1 = RMul(dof_load3E8E,mult3F45);
          real r3FFB#1 = RMul(dof_load3E98,mult3F46);
          real r3FFD#1 = RMul(dof_load3EA2,sum3F63);
          real r3FFF#1 = RMul(dof_load3EAC,sum3F6A);
          real r4001#1 = RMul(dof_load3EB6,sum3F70);
          real r4002#1 = RAdd(r3FEF,r3FF1);
          real r4003#1 = RAdd(r4002,r3FF3);
          real r4004#1 = RAdd(r4003,r3FF5);
          real r4005#1 = RAdd(r4004,r3FF7);
          real r4006#1 = RAdd(r4005,r3FF9);
          real r4007#1 = RAdd(r4006,r3FFB);
          real r4008#1 = RAdd(r4007,r3FFD);
          real r4009#1 = RAdd(r4008,r3FFF);
          real r400A#2 = RAdd(r4009,r4001);
          real r400C#1 = RMul(dof_load3E60,sum3F50);
          real r400E#1 = RMul(dof_load3E69,sum3F54);
          real r4010#1 = RMul(dof_load3E72,sum3F57);
          real r4012#1 = RMul(dof_load3E7B,sum3F5A);
          real r4014#1 = RMul(dof_load3E85,mult3F42);
          real r4016#1 = RMul(dof_load3E8F,mult3F45);
          real r4018#1 = RMul(dof_load3E99,mult3F46);
          real r401A#1 = RMul(dof_load3EA3,sum3F63);
          real r401C#1 = RMul(dof_load3EAD,sum3F6A);
          real r401E#1 = RMul(dof_load3EB7,sum3F70);
          real r401F#1 = RAdd(r400C,r400E);
          real r4020#1 = RAdd(r401F,r4010);
          real r4021#1 = RAdd(r4020,r4012);
          real r4022#1 = RAdd(r4021,r4014);
          real r4023#1 = RAdd(r4022,r4016);
          real r4024#1 = RAdd(r4023,r4018);
          real r4025#1 = RAdd(r4024,r401A);
          real r4026#1 = RAdd(r4025,r401C);
          real r4027#2 = RAdd(r4026,r401E);
          tensor[3] probe_l_83FC6#2 = <tensor[3]>[r3FED,r400A,r4027];
          real op1_e3_l_11408B#1 = VDot<3>(probe_l_83FC6,probe_l_83FC6);
          real op1_e3_l_12408E#1 = Sqrt(op1_e3_l_11408B);
          real r4093#3 = RDiv(one3D6C,op1_e3_l_12408E);
          real r4095#1 = RMul(r4093,r3FED);
          real r4097#1 = RMul(r4093,r400A);
          real r4099#1 = RMul(r4093,r4027);
          tensor[3] _t4091#1 = <tensor[3]>[r4095,r4097,r4099];
          goto JOIN40A6
        JOIN40A6:  preds = [ASSIGN40A3,ASSIGN59A8]
          tensor[3] _t40A4#3 = phi(_t4091,_t40A5)
          real r40A8#1 = TensorIndex<tensor[3],[0]>(_t40A4);
          real r40A9#6 = RMul(_t3E01,stepSize3CCF);
          real r40AA#1 = RMul(r40A9,r40A8);
          real r40AB#1 = TensorIndex<tensor[3],[1]>(_t40A4);
          real r40AC#1 = RMul(r40A9,r40AB);
          real r40AD#1 = TensorIndex<tensor[3],[2]>(_t40A4);
          real r40AE#1 = RMul(r40A9,r40AD);
          tensor[3] up140A7#1 = <tensor[3]>[r40AA,r40AC,r40AE];
          femData:MeshPos intermed40B8#4 = posMove40B9 (cPos3CD9,up140A7);
          femData:MeshPos callFindPos5073#2 = findPos3574 (_t3CC7,altCPos3CDB);
          int intPos5075#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos5073);
          tensor[3] refPos5077#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos5073);
          int ilit507A#3 = 10;
          int mulRes507B#10 = IMul(intPos5075,ilit507A);
          int idx507E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,mulRes507B);
          int addRes5080#1 = IAdd(mulRes507B,ilit3CF8);
          int idx5081#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5080);
          int addRes5083#1 = IAdd(mulRes507B,ilit3CFB);
          int idx5084#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5083);
          int addRes5086#1 = IAdd(mulRes507B,ilit3CFE);
          int idx5087#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5086);
          int addRes5089#1 = IAdd(mulRes507B,ilit3CF3);
          int idx508A#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5089);
          int ilit508B#3 = 5;
          int addRes508C#1 = IAdd(mulRes507B,ilit508B);
          int idx508D#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes508C);
          int ilit508E#3 = 6;
          int addRes508F#1 = IAdd(mulRes507B,ilit508E);
          int idx5090#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes508F);
          int ilit5091#3 = 7;
          int addRes5092#1 = IAdd(mulRes507B,ilit5091);
          int idx5093#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5092);
          int ilit5094#3 = 8;
          int addRes5095#1 = IAdd(mulRes507B,ilit5094);
          int idx5096#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5095);
          int ilit5097#3 = 9;
          int addRes5098#1 = IAdd(mulRes507B,ilit5097);
          int idx5099#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5098);
          int mulRes50C1#3 = IMul(ilit3CFE,idx507E);
          int addRes50C4#1 = IAdd(ilit3CF8,mulRes50C1);
          int addRes50C6#1 = IAdd(ilit3CFB,mulRes50C1);
          real dof_load50C7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50C1);
          real dof_load50C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C4);
          real dof_load50C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50C6);
          int mulRes50CC#3 = IMul(ilit3CFE,idx5081);
          int addRes50CE#1 = IAdd(ilit3CF8,mulRes50CC);
          int addRes50CF#1 = IAdd(ilit3CFB,mulRes50CC);
          real dof_load50D0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50CC);
          real dof_load50D1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CE);
          real dof_load50D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50CF);
          int mulRes50D5#3 = IMul(ilit3CFE,idx5084);
          int addRes50D7#1 = IAdd(ilit3CF8,mulRes50D5);
          int addRes50D8#1 = IAdd(ilit3CFB,mulRes50D5);
          real dof_load50D9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50D5);
          real dof_load50DA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D7);
          real dof_load50DB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50D8);
          int mulRes50DE#3 = IMul(ilit3CFE,idx5087);
          int addRes50E0#1 = IAdd(ilit3CF8,mulRes50DE);
          int addRes50E1#1 = IAdd(ilit3CFB,mulRes50DE);
          real dof_load50E2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50DE);
          real dof_load50E3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E0);
          real dof_load50E4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50E1);
          int mulRes50E8#3 = IMul(ilit3CFE,idx508A);
          int addRes50EA#1 = IAdd(ilit3CF8,mulRes50E8);
          int addRes50EB#1 = IAdd(ilit3CFB,mulRes50E8);
          real dof_load50EC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50E8);
          real dof_load50ED#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50EA);
          real dof_load50EE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50EB);
          int mulRes50F2#3 = IMul(ilit3CFE,idx508D);
          int addRes50F4#1 = IAdd(ilit3CF8,mulRes50F2);
          int addRes50F5#1 = IAdd(ilit3CFB,mulRes50F2);
          real dof_load50F6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50F2);
          real dof_load50F7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F4);
          real dof_load50F8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50F5);
          int mulRes50FC#3 = IMul(ilit3CFE,idx5090);
          int addRes50FE#1 = IAdd(ilit3CF8,mulRes50FC);
          int addRes50FF#1 = IAdd(ilit3CFB,mulRes50FC);
          real dof_load5100#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes50FC);
          real dof_load5101#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FE);
          real dof_load5102#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes50FF);
          int mulRes5106#3 = IMul(ilit3CFE,idx5093);
          int addRes5108#1 = IAdd(ilit3CF8,mulRes5106);
          int addRes5109#1 = IAdd(ilit3CFB,mulRes5106);
          real dof_load510A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5106);
          real dof_load510B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5108);
          real dof_load510C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5109);
          int mulRes5110#3 = IMul(ilit3CFE,idx5096);
          int addRes5112#1 = IAdd(ilit3CF8,mulRes5110);
          int addRes5113#1 = IAdd(ilit3CFB,mulRes5110);
          real dof_load5114#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5110);
          real dof_load5115#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5112);
          real dof_load5116#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5113);
          int mulRes511A#3 = IMul(ilit3CFE,idx5099);
          int addRes511C#1 = IAdd(ilit3CF8,mulRes511A);
          int addRes511D#1 = IAdd(ilit3CFB,mulRes511A);
          real dof_load511E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes511A);
          real dof_load511F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511C);
          real dof_load5120#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes511D);
          real varAcc518A#5 = VIndex<3,0>(refPos5077);
          real varAcc518B#4 = VIndex<3,1>(refPos5077);
          real varAcc518C#4 = VIndex<3,2>(refPos5077);
          real coeff518D#9 = 0.2e1;
          real prod2518F#1 = RMul(varAcc518A,varAcc518A);
          real prod5192#2 = RMul(prod2518F,prod3D6D);
          real coeff5193#18 = 0.4e1;
          real prod5195#2 = RMul(varAcc518B,one3D6C);
          real prod5196#2 = RMul(varAcc518A,prod5195);
          real prod5198#2 = RMul(one3D6C,varAcc518C);
          real prod5199#2 = RMul(varAcc518A,prod5198);
          real coeff519A#9 = -0.3e1;
          real prod519B#3 = RMul(varAcc518A,prod3D6D);
          real prod2519C#1 = RMul(varAcc518B,varAcc518B);
          real prod519D#1 = RMul(prod2519C,one3D6C);
          real prod519E#2 = RMul(one3D6C,prod519D);
          real prod519F#1 = RMul(varAcc518B,varAcc518C);
          real prod51A0#2 = RMul(one3D6C,prod519F);
          real prod51A1#3 = RMul(one3D6C,prod5195);
          real prod251A2#1 = RMul(varAcc518C,varAcc518C);
          real prod51A3#1 = RMul(one3D6C,prod251A2);
          real prod51A4#2 = RMul(one3D6C,prod51A3);
          real prod51A5#3 = RMul(one3D6C,prod5198);
          real mult51A8#1 = RMul(coeff519A,prod51A5);
          real mult51A9#2 = RMul(coeff518D,prod51A4);
          real mult51AA#1 = RMul(coeff519A,prod51A1);
          real mult51AB#4 = RMul(coeff5193,prod51A0);
          real mult51AC#2 = RMul(coeff518D,prod519E);
          real mult51AD#1 = RMul(coeff519A,prod519B);
          real mult51AE#4 = RMul(coeff5193,prod5199);
          real mult51AF#4 = RMul(coeff5193,prod5196);
          real mult51B0#2 = RMul(coeff518D,prod5192);
          real sum51B1#1 = RAdd(mult51AF,mult51B0);
          real sum51B2#1 = RAdd(mult51AE,sum51B1);
          real sum51B3#1 = RAdd(mult51AD,sum51B2);
          real sum51B4#1 = RAdd(mult51AC,sum51B3);
          real sum51B5#1 = RAdd(mult51AB,sum51B4);
          real sum51B6#1 = RAdd(mult51AA,sum51B5);
          real sum51B7#1 = RAdd(mult51A9,sum51B6);
          real sum51B8#1 = RAdd(mult51A8,sum51B7);
          real sum51B9#3 = RAdd(mult3D76,sum51B8);
          real mult51BC#1 = RMul(coeff3D6A,prod519B);
          real sum51BD#3 = RAdd(mult51BC,mult51B0);
          real mult51BF#1 = RMul(coeff3D6A,prod51A1);
          real sum51C0#3 = RAdd(mult51BF,mult51AC);
          real mult51C2#1 = RMul(coeff3D6A,prod51A5);
          real sum51C3#3 = RAdd(mult51C2,mult51A9);
          real coeff51C5#18 = -0.4e1;
          real mult51C6#1 = RMul(coeff5193,prod51A5);
          real mult51C7#1 = RMul(coeff51C5,prod51A4);
          real mult51C8#2 = RMul(coeff51C5,prod51A0);
          real mult51C9#2 = RMul(coeff51C5,prod5199);
          real sum51CA#1 = RAdd(mult51C8,mult51C9);
          real sum51CB#1 = RAdd(mult51C7,sum51CA);
          real sum51CC#3 = RAdd(mult51C6,sum51CB);
          real mult51CE#1 = RMul(coeff5193,prod51A1);
          real mult51CF#1 = RMul(coeff51C5,prod519E);
          real mult51D0#2 = RMul(coeff51C5,prod5196);
          real sum51D1#1 = RAdd(mult51CF,mult51D0);
          real sum51D2#1 = RAdd(mult51C8,sum51D1);
          real sum51D3#3 = RAdd(mult51CE,sum51D2);
          real mult51D5#1 = RMul(coeff5193,prod519B);
          real mult51D6#1 = RMul(coeff51C5,prod5192);
          real sum51D7#1 = RAdd(mult51D0,mult51D6);
          real sum51D8#1 = RAdd(mult51C9,sum51D7);
          real sum51D9#3 = RAdd(mult51D5,sum51D8);
          real r5232#1 = RMul(dof_load50C7,sum51B9);
          real r5235#1 = RMul(dof_load50D0,sum51BD);
          real r5238#1 = RMul(dof_load50D9,sum51C0);
          real r523B#1 = RMul(dof_load50E2,sum51C3);
          real r523E#1 = RMul(dof_load50EC,mult51AB);
          real r5241#1 = RMul(dof_load50F6,mult51AE);
          real r5244#1 = RMul(dof_load5100,mult51AF);
          real r5247#1 = RMul(dof_load510A,sum51CC);
          real r524A#1 = RMul(dof_load5114,sum51D3);
          real r524D#1 = RMul(dof_load511E,sum51D9);
          real r524E#1 = RAdd(r5232,r5235);
          real r524F#1 = RAdd(r524E,r5238);
          real r5250#1 = RAdd(r524F,r523B);
          real r5251#1 = RAdd(r5250,r523E);
          real r5252#1 = RAdd(r5251,r5241);
          real r5253#1 = RAdd(r5252,r5244);
          real r5254#1 = RAdd(r5253,r5247);
          real r5255#1 = RAdd(r5254,r524A);
          real r5256#2 = RAdd(r5255,r524D);
          real r5258#1 = RMul(dof_load50C8,sum51B9);
          real r525A#1 = RMul(dof_load50D1,sum51BD);
          real r525C#1 = RMul(dof_load50DA,sum51C0);
          real r525E#1 = RMul(dof_load50E3,sum51C3);
          real r5260#1 = RMul(dof_load50ED,mult51AB);
          real r5262#1 = RMul(dof_load50F7,mult51AE);
          real r5264#1 = RMul(dof_load5101,mult51AF);
          real r5266#1 = RMul(dof_load510B,sum51CC);
          real r5268#1 = RMul(dof_load5115,sum51D3);
          real r526A#1 = RMul(dof_load511F,sum51D9);
          real r526B#1 = RAdd(r5258,r525A);
          real r526C#1 = RAdd(r526B,r525C);
          real r526D#1 = RAdd(r526C,r525E);
          real r526E#1 = RAdd(r526D,r5260);
          real r526F#1 = RAdd(r526E,r5262);
          real r5270#1 = RAdd(r526F,r5264);
          real r5271#1 = RAdd(r5270,r5266);
          real r5272#1 = RAdd(r5271,r5268);
          real r5273#2 = RAdd(r5272,r526A);
          real r5275#1 = RMul(dof_load50C9,sum51B9);
          real r5277#1 = RMul(dof_load50D2,sum51BD);
          real r5279#1 = RMul(dof_load50DB,sum51C0);
          real r527B#1 = RMul(dof_load50E4,sum51C3);
          real r527D#1 = RMul(dof_load50EE,mult51AB);
          real r527F#1 = RMul(dof_load50F8,mult51AE);
          real r5281#1 = RMul(dof_load5102,mult51AF);
          real r5283#1 = RMul(dof_load510C,sum51CC);
          real r5285#1 = RMul(dof_load5116,sum51D3);
          real r5287#1 = RMul(dof_load5120,sum51D9);
          real r5288#1 = RAdd(r5275,r5277);
          real r5289#1 = RAdd(r5288,r5279);
          real r528A#1 = RAdd(r5289,r527B);
          real r528B#1 = RAdd(r528A,r527D);
          real r528C#1 = RAdd(r528B,r527F);
          real r528D#1 = RAdd(r528C,r5281);
          real r528E#1 = RAdd(r528D,r5283);
          real r528F#1 = RAdd(r528E,r5285);
          real r5290#2 = RAdd(r528F,r5287);
          tensor[3] compositionl522F#2 = <tensor[3]>[r5256,r5273,r5290];
          real op1_e3_l_2052F4#1 = VDot<3>(compositionl522F,compositionl522F);
          real r52FA#1 = RMul(r40A9,r5256);
          real r52FC#1 = RMul(r40A9,r5273);
          real r52FE#1 = RMul(r40A9,r5290);
          real op1_e3_l_225308#1 = Sqrt(op1_e3_l_2052F4);
          real r530D#3 = RDiv(one3D6C,op1_e3_l_225308);
          real r530F#1 = RMul(r530D,r52FA);
          real r5311#1 = RMul(r530D,r52FC);
          real r5313#1 = RMul(r530D,r52FE);
          tensor[3] op1_e3_l_23530B#1 = <tensor[3]>[r530F,r5311,r5313];
          tensor[3] altIntermed531E#2 = VAdd<3>(altCPos3CDB,op1_e3_l_23530B);
          bool _t5321#2 = ExtractFemItem<bool,Valid(MeshPos)>(intermed40B8);
          bool _t5323#1 = BNot(_t5321);
          if _t5323 then goto ASSIGN5327 else goto ASSIGN59A1
        ASSIGN5327:  preds = [COND5325]
          bool _t5326#1 = true;
          goto JOIN532A
        JOIN532A:  preds = [ASSIGN5327,ASSIGN59A4]
          bool _t5328#1 = phi(_t5326,_t5329)
          if _t5328 then goto STABILIZE532C else goto JOIN532D
        STABILIZE532C:  preds = [COND532B]
          stabilize
          goto JOIN532D
        JOIN532D:  preds = [*STABILIZE532C,COND532B]
          if _t5321 then goto ASSIGN5330 else goto ASSIGN599E
        ASSIGN5330:  preds = [COND532E]
          femData:Mesh _t532F#1 = ExtractFem<femData:Mesh,femData:MeshPos>(intermed40B8);
          int _t5331#1 = ExtractFemItem<int,CellIndex(MeshPos)>(intermed40B8);
          femData:MeshCell c5333#1 = LoadFem<femData:MeshCell>(_t532F,_t5331);
          tensor[3] ref5335#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(intermed40B8);
          int _t5337#1 = ExtractFemItem<int,CellIndex(MeshCell)>(c5333);
          femData:FuncCell _t5339#2 = LoadFem<femData:FuncCell>(data3CCB,_t5337);
          femData:FemFunc _t533B#31 = ExtractFem<femData:FemFunc,femData:FuncCell>(_t5339);
          femData:Space _t533D#10 = ExtractFem<femData:Space,femData:FemFunc>(_t533B);
          int _t533F#1 = ExtractFemItem<int,CellIndex(FuncCell)>(_t5339);
          int mulRes5343#10 = IMul(_t533F,ilit507A);
          int idx5346#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,mulRes5343);
          int addRes5348#1 = IAdd(mulRes5343,ilit3CF8);
          int idx5349#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5348);
          int addRes534B#1 = IAdd(mulRes5343,ilit3CFB);
          int idx534C#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes534B);
          int addRes534E#1 = IAdd(mulRes5343,ilit3CFE);
          int idx534F#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes534E);
          int addRes5351#1 = IAdd(mulRes5343,ilit3CF3);
          int idx5352#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5351);
          int addRes5354#1 = IAdd(mulRes5343,ilit508B);
          int idx5355#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5354);
          int addRes5357#1 = IAdd(mulRes5343,ilit508E);
          int idx5358#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5357);
          int addRes535A#1 = IAdd(mulRes5343,ilit5091);
          int idx535B#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes535A);
          int addRes535D#1 = IAdd(mulRes5343,ilit5094);
          int idx535E#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes535D);
          int addRes5360#1 = IAdd(mulRes5343,ilit5097);
          int idx5361#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t533D,addRes5360);
          int mulRes5389#3 = IMul(ilit3CFE,idx5346);
          int addRes538C#1 = IAdd(ilit3CF8,mulRes5389);
          int addRes538E#1 = IAdd(ilit3CFB,mulRes5389);
          real dof_load538F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes5389);
          real dof_load5390#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538C);
          real dof_load5391#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes538E);
          int mulRes5394#3 = IMul(ilit3CFE,idx5349);
          int addRes5396#1 = IAdd(ilit3CF8,mulRes5394);
          int addRes5397#1 = IAdd(ilit3CFB,mulRes5394);
          real dof_load5398#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes5394);
          real dof_load5399#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5396);
          real dof_load539A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes5397);
          int mulRes539D#3 = IMul(ilit3CFE,idx534C);
          int addRes539F#1 = IAdd(ilit3CF8,mulRes539D);
          int addRes53A0#1 = IAdd(ilit3CFB,mulRes539D);
          real dof_load53A1#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes539D);
          real dof_load53A2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes539F);
          real dof_load53A3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A0);
          int mulRes53A6#3 = IMul(ilit3CFE,idx534F);
          int addRes53A8#1 = IAdd(ilit3CF8,mulRes53A6);
          int addRes53A9#1 = IAdd(ilit3CFB,mulRes53A6);
          real dof_load53AA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53A6);
          real dof_load53AB#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A8);
          real dof_load53AC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53A9);
          int mulRes53B0#3 = IMul(ilit3CFE,idx5352);
          int addRes53B2#1 = IAdd(ilit3CF8,mulRes53B0);
          int addRes53B3#1 = IAdd(ilit3CFB,mulRes53B0);
          real dof_load53B4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53B0);
          real dof_load53B5#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B2);
          real dof_load53B6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53B3);
          int mulRes53BA#3 = IMul(ilit3CFE,idx5355);
          int addRes53BC#1 = IAdd(ilit3CF8,mulRes53BA);
          int addRes53BD#1 = IAdd(ilit3CFB,mulRes53BA);
          real dof_load53BE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53BA);
          real dof_load53BF#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BC);
          real dof_load53C0#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53BD);
          int mulRes53C4#3 = IMul(ilit3CFE,idx5358);
          int addRes53C6#1 = IAdd(ilit3CF8,mulRes53C4);
          int addRes53C7#1 = IAdd(ilit3CFB,mulRes53C4);
          real dof_load53C8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53C4);
          real dof_load53C9#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C6);
          real dof_load53CA#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53C7);
          int mulRes53CE#3 = IMul(ilit3CFE,idx535B);
          int addRes53D0#1 = IAdd(ilit3CF8,mulRes53CE);
          int addRes53D1#1 = IAdd(ilit3CFB,mulRes53CE);
          real dof_load53D2#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53CE);
          real dof_load53D3#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D0);
          real dof_load53D4#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53D1);
          int mulRes53D8#3 = IMul(ilit3CFE,idx535E);
          int addRes53DA#1 = IAdd(ilit3CF8,mulRes53D8);
          int addRes53DB#1 = IAdd(ilit3CFB,mulRes53D8);
          real dof_load53DC#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53D8);
          real dof_load53DD#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53DA);
          real dof_load53DE#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53DB);
          int mulRes53E2#3 = IMul(ilit3CFE,idx5361);
          int addRes53E4#1 = IAdd(ilit3CF8,mulRes53E2);
          int addRes53E5#1 = IAdd(ilit3CFB,mulRes53E2);
          real dof_load53E6#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,mulRes53E2);
          real dof_load53E7#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E4);
          real dof_load53E8#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(_t533B,addRes53E5);
          real varAcc5452#5 = VIndex<3,0>(ref5335);
          real varAcc5453#4 = VIndex<3,1>(ref5335);
          real varAcc5454#4 = VIndex<3,2>(ref5335);
          real prod25457#1 = RMul(varAcc5452,varAcc5452);
          real prod545A#2 = RMul(prod25457,prod3D6D);
          real prod545D#2 = RMul(varAcc5453,one3D6C);
          real prod545E#2 = RMul(varAcc5452,prod545D);
          real prod5460#2 = RMul(one3D6C,varAcc5454);
          real prod5461#2 = RMul(varAcc5452,prod5460);
          real prod5463#3 = RMul(varAcc5452,prod3D6D);
          real prod25464#1 = RMul(varAcc5453,varAcc5453);
          real prod5465#1 = RMul(prod25464,one3D6C);
          real prod5466#2 = RMul(one3D6C,prod5465);
          real prod5467#1 = RMul(varAcc5453,varAcc5454);
          real prod5468#2 = RMul(one3D6C,prod5467);
          real prod5469#3 = RMul(one3D6C,prod545D);
          real prod2546A#1 = RMul(varAcc5454,varAcc5454);
          real prod546B#1 = RMul(one3D6C,prod2546A);
          real prod546C#2 = RMul(one3D6C,prod546B);
          real prod546D#3 = RMul(one3D6C,prod5460);
          real mult5470#1 = RMul(coeff519A,prod546D);
          real mult5471#2 = RMul(coeff518D,prod546C);
          real mult5472#1 = RMul(coeff519A,prod5469);
          real mult5473#4 = RMul(coeff5193,prod5468);
          real mult5474#2 = RMul(coeff518D,prod5466);
          real mult5475#1 = RMul(coeff519A,prod5463);
          real mult5476#4 = RMul(coeff5193,prod5461);
          real mult5477#4 = RMul(coeff5193,prod545E);
          real mult5478#2 = RMul(coeff518D,prod545A);
          real sum5479#1 = RAdd(mult5477,mult5478);
          real sum547A#1 = RAdd(mult5476,sum5479);
          real sum547B#1 = RAdd(mult5475,sum547A);
          real sum547C#1 = RAdd(mult5474,sum547B);
          real sum547D#1 = RAdd(mult5473,sum547C);
          real sum547E#1 = RAdd(mult5472,sum547D);
          real sum547F#1 = RAdd(mult5471,sum547E);
          real sum5480#1 = RAdd(mult5470,sum547F);
          real sum5481#3 = RAdd(mult3D76,sum5480);
          real mult5484#1 = RMul(coeff3D6A,prod5463);
          real sum5485#3 = RAdd(mult5484,mult5478);
          real mult5487#1 = RMul(coeff3D6A,prod5469);
          real sum5488#3 = RAdd(mult5487,mult5474);
          real mult548A#1 = RMul(coeff3D6A,prod546D);
          real sum548B#3 = RAdd(mult548A,mult5471);
          real mult548E#1 = RMul(coeff5193,prod546D);
          real mult548F#1 = RMul(coeff51C5,prod546C);
          real mult5490#2 = RMul(coeff51C5,prod5468);
          real mult5491#2 = RMul(coeff51C5,prod5461);
          real sum5492#1 = RAdd(mult5490,mult5491);
          real sum5493#1 = RAdd(mult548F,sum5492);
          real sum5494#3 = RAdd(mult548E,sum5493);
          real mult5496#1 = RMul(coeff5193,prod5469);
          real mult5497#1 = RMul(coeff51C5,prod5466);
          real mult5498#2 = RMul(coeff51C5,prod545E);
          real sum5499#1 = RAdd(mult5497,mult5498);
          real sum549A#1 = RAdd(mult5490,sum5499);
          real sum549B#3 = RAdd(mult5496,sum549A);
          real mult549D#1 = RMul(coeff5193,prod5463);
          real mult549E#1 = RMul(coeff51C5,prod545A);
          real sum549F#1 = RAdd(mult5498,mult549E);
          real sum54A0#1 = RAdd(mult5491,sum549F);
          real sum54A1#3 = RAdd(mult549D,sum54A0);
          real r54FA#1 = RMul(dof_load538F,sum5481);
          real r54FD#1 = RMul(dof_load5398,sum5485);
          real r5500#1 = RMul(dof_load53A1,sum5488);
          real r5503#1 = RMul(dof_load53AA,sum548B);
          real r5506#1 = RMul(dof_load53B4,mult5473);
          real r5509#1 = RMul(dof_load53BE,mult5476);
          real r550C#1 = RMul(dof_load53C8,mult5477);
          real r550F#1 = RMul(dof_load53D2,sum5494);
          real r5512#1 = RMul(dof_load53DC,sum549B);
          real r5515#1 = RMul(dof_load53E6,sum54A1);
          real r5516#1 = RAdd(r54FA,r54FD);
          real r5517#1 = RAdd(r5516,r5500);
          real r5518#1 = RAdd(r5517,r5503);
          real r5519#1 = RAdd(r5518,r5506);
          real r551A#1 = RAdd(r5519,r5509);
          real r551B#1 = RAdd(r551A,r550C);
          real r551C#1 = RAdd(r551B,r550F);
          real r551D#1 = RAdd(r551C,r5512);
          real r551E#2 = RAdd(r551D,r5515);
          real r5520#1 = RMul(dof_load5390,sum5481);
          real r5522#1 = RMul(dof_load5399,sum5485);
          real r5524#1 = RMul(dof_load53A2,sum5488);
          real r5526#1 = RMul(dof_load53AB,sum548B);
          real r5528#1 = RMul(dof_load53B5,mult5473);
          real r552A#1 = RMul(dof_load53BF,mult5476);
          real r552C#1 = RMul(dof_load53C9,mult5477);
          real r552E#1 = RMul(dof_load53D3,sum5494);
          real r5530#1 = RMul(dof_load53DD,sum549B);
          real r5532#1 = RMul(dof_load53E7,sum54A1);
          real r5533#1 = RAdd(r5520,r5522);
          real r5534#1 = RAdd(r5533,r5524);
          real r5535#1 = RAdd(r5534,r5526);
          real r5536#1 = RAdd(r5535,r5528);
          real r5537#1 = RAdd(r5536,r552A);
          real r5538#1 = RAdd(r5537,r552C);
          real r5539#1 = RAdd(r5538,r552E);
          real r553A#1 = RAdd(r5539,r5530);
          real r553B#2 = RAdd(r553A,r5532);
          real r553D#1 = RMul(dof_load5391,sum5481);
          real r553F#1 = RMul(dof_load539A,sum5485);
          real r5541#1 = RMul(dof_load53A3,sum5488);
          real r5543#1 = RMul(dof_load53AC,sum548B);
          real r5545#1 = RMul(dof_load53B6,mult5473);
          real r5547#1 = RMul(dof_load53C0,mult5476);
          real r5549#1 = RMul(dof_load53CA,mult5477);
          real r554B#1 = RMul(dof_load53D4,sum5494);
          real r554D#1 = RMul(dof_load53DE,sum549B);
          real r554F#1 = RMul(dof_load53E8,sum54A1);
          real r5550#1 = RAdd(r553D,r553F);
          real r5551#1 = RAdd(r5550,r5541);
          real r5552#1 = RAdd(r5551,r5543);
          real r5553#1 = RAdd(r5552,r5545);
          real r5554#1 = RAdd(r5553,r5547);
          real r5555#1 = RAdd(r5554,r5549);
          real r5556#1 = RAdd(r5555,r554B);
          real r5557#1 = RAdd(r5556,r554D);
          real r5558#2 = RAdd(r5557,r554F);
          tensor[3] probe_l_854F7#2 = <tensor[3]>[r551E,r553B,r5558];
          real op1_e3_l_1155BC#1 = VDot<3>(probe_l_854F7,probe_l_854F7);
          real op1_e3_l_1255BF#1 = Sqrt(op1_e3_l_1155BC);
          real r55C4#3 = RDiv(one3D6C,op1_e3_l_1255BF);
          real r55C6#1 = RMul(r55C4,r551E);
          real r55C8#1 = RMul(r55C4,r553B);
          real r55CA#1 = RMul(r55C4,r5558);
          tensor[3] _t55C2#1 = <tensor[3]>[r55C6,r55C8,r55CA];
          goto JOIN55D7
        JOIN55D7:  preds = [ASSIGN55D4,ASSIGN599F]
          tensor[3] _t55D5#1 = phi(_t55C2,_t55D6)
          tensor[3] up255D8#1 = VScale<3>(stepSize3CCF,_t55D5);
          femData:MeshPos cPos55DB#6 = posMove40B9 (cPos3CD9,up255D8);
          femData:MeshPos callFindPos55DD#2 = findPos3574 (_t3CC7,altIntermed531E);
          int intPos55DF#1 = ExtractFemItem<int,CellIndex(Mesh)>(callFindPos55DD);
          tensor[3] refPos55E1#3 = ExtractFemItem<tensor[3],RefPos(Mesh)>(callFindPos55DD);
          int mulRes55E5#10 = IMul(intPos55DF,ilit507A);
          int idx55E8#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,mulRes55E5);
          int addRes55EA#1 = IAdd(mulRes55E5,ilit3CF8);
          int idx55EB#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55EA);
          int addRes55ED#1 = IAdd(mulRes55E5,ilit3CFB);
          int idx55EE#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55ED);
          int addRes55F0#1 = IAdd(mulRes55E5,ilit3CFE);
          int idx55F1#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F0);
          int addRes55F3#1 = IAdd(mulRes55E5,ilit3CF3);
          int idx55F4#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F3);
          int addRes55F6#1 = IAdd(mulRes55E5,ilit508B);
          int idx55F7#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F6);
          int addRes55F9#1 = IAdd(mulRes55E5,ilit508E);
          int idx55FA#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55F9);
          int addRes55FC#1 = IAdd(mulRes55E5,ilit5091);
          int idx55FD#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55FC);
          int addRes55FF#1 = IAdd(mulRes55E5,ilit5094);
          int idx5600#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes55FF);
          int addRes5602#1 = IAdd(mulRes55E5,ilit5097);
          int idx5603#1 = ExtractFemItem2<int,int,ExtractIndex(Space)>(_t3CC9,addRes5602);
          int mulRes562B#3 = IMul(ilit3CFE,idx55E8);
          int addRes562E#1 = IAdd(ilit3CF8,mulRes562B);
          int addRes5630#1 = IAdd(ilit3CFB,mulRes562B);
          real dof_load5631#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes562B);
          real dof_load5632#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes562E);
          real dof_load5633#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5630);
          int mulRes5636#3 = IMul(ilit3CFE,idx55EB);
          int addRes5638#1 = IAdd(ilit3CF8,mulRes5636);
          int addRes5639#1 = IAdd(ilit3CFB,mulRes5636);
          real dof_load563A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5636);
          real dof_load563B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5638);
          real dof_load563C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5639);
          int mulRes563F#3 = IMul(ilit3CFE,idx55EE);
          int addRes5641#1 = IAdd(ilit3CF8,mulRes563F);
          int addRes5642#1 = IAdd(ilit3CFB,mulRes563F);
          real dof_load5643#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes563F);
          real dof_load5644#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5641);
          real dof_load5645#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5642);
          int mulRes5648#3 = IMul(ilit3CFE,idx55F1);
          int addRes564A#1 = IAdd(ilit3CF8,mulRes5648);
          int addRes564B#1 = IAdd(ilit3CFB,mulRes5648);
          real dof_load564C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5648);
          real dof_load564D#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes564A);
          real dof_load564E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes564B);
          int mulRes5652#3 = IMul(ilit3CFE,idx55F4);
          int addRes5654#1 = IAdd(ilit3CF8,mulRes5652);
          int addRes5655#1 = IAdd(ilit3CFB,mulRes5652);
          real dof_load5656#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5652);
          real dof_load5657#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5654);
          real dof_load5658#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5655);
          int mulRes565C#3 = IMul(ilit3CFE,idx55F7);
          int addRes565E#1 = IAdd(ilit3CF8,mulRes565C);
          int addRes565F#1 = IAdd(ilit3CFB,mulRes565C);
          real dof_load5660#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes565C);
          real dof_load5661#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565E);
          real dof_load5662#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes565F);
          int mulRes5666#3 = IMul(ilit3CFE,idx55FA);
          int addRes5668#1 = IAdd(ilit3CF8,mulRes5666);
          int addRes5669#1 = IAdd(ilit3CFB,mulRes5666);
          real dof_load566A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5666);
          real dof_load566B#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5668);
          real dof_load566C#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5669);
          int mulRes5670#3 = IMul(ilit3CFE,idx55FD);
          int addRes5672#1 = IAdd(ilit3CF8,mulRes5670);
          int addRes5673#1 = IAdd(ilit3CFB,mulRes5670);
          real dof_load5674#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5670);
          real dof_load5675#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5672);
          real dof_load5676#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5673);
          int mulRes567A#3 = IMul(ilit3CFE,idx5600);
          int addRes567C#1 = IAdd(ilit3CF8,mulRes567A);
          int addRes567D#1 = IAdd(ilit3CFB,mulRes567A);
          real dof_load567E#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes567A);
          real dof_load567F#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567C);
          real dof_load5680#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes567D);
          int mulRes5684#3 = IMul(ilit3CFE,idx5603);
          int addRes5686#1 = IAdd(ilit3CF8,mulRes5684);
          int addRes5687#1 = IAdd(ilit3CFB,mulRes5684);
          real dof_load5688#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,mulRes5684);
          real dof_load5689#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5686);
          real dof_load568A#1 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(data3CCB,addRes5687);
          real varAcc56F4#5 = VIndex<3,0>(refPos55E1);
          real varAcc56F5#4 = VIndex<3,1>(refPos55E1);
          real varAcc56F6#4 = VIndex<3,2>(refPos55E1);
          real prod256F9#1 = RMul(varAcc56F4,varAcc56F4);
          real prod56FC#2 = RMul(prod256F9,prod3D6D);
          real prod56FF#2 = RMul(varAcc56F5,one3D6C);
          real prod5700#2 = RMul(varAcc56F4,prod56FF);
          real prod5702#2 = RMul(one3D6C,varAcc56F6);
          real prod5703#2 = RMul(varAcc56F4,prod5702);
          real prod5705#3 = RMul(varAcc56F4,prod3D6D);
          real prod25706#1 = RMul(varAcc56F5,varAcc56F5);
          real prod5707#1 = RMul(prod25706,one3D6C);
          real prod5708#2 = RMul(one3D6C,prod5707);
          real prod5709#1 = RMul(varAcc56F5,varAcc56F6);
          real prod570A#2 = RMul(one3D6C,prod5709);
          real prod570B#3 = RMul(one3D6C,prod56FF);
          real prod2570C#1 = RMul(varAcc56F6,varAcc56F6);
          real prod570D#1 = RMul(one3D6C,prod2570C);
          real prod570E#2 = RMul(one3D6C,prod570D);
          real prod570F#3 = RMul(one3D6C,prod5702);
          real mult5712#1 = RMul(coeff519A,prod570F);
          real mult5713#2 = RMul(coeff518D,prod570E);
          real mult5714#1 = RMul(coeff519A,prod570B);
          real mult5715#4 = RMul(coeff5193,prod570A);
          real mult5716#2 = RMul(coeff518D,prod5708);
          real mult5717#1 = RMul(coeff519A,prod5705);
          real mult5718#4 = RMul(coeff5193,prod5703);
          real mult5719#4 = RMul(coeff5193,prod5700);
          real mult571A#2 = RMul(coeff518D,prod56FC);
          real sum571B#1 = RAdd(mult5719,mult571A);
          real sum571C#1 = RAdd(mult5718,sum571B);
          real sum571D#1 = RAdd(mult5717,sum571C);
          real sum571E#1 = RAdd(mult5716,sum571D);
          real sum571F#1 = RAdd(mult5715,sum571E);
          real sum5720#1 = RAdd(mult5714,sum571F);
          real sum5721#1 = RAdd(mult5713,sum5720);
          real sum5722#1 = RAdd(mult5712,sum5721);
          real sum5723#3 = RAdd(mult3D76,sum5722);
          real mult5726#1 = RMul(coeff3D6A,prod5705);
          real sum5727#3 = RAdd(mult5726,mult571A);
          real mult5729#1 = RMul(coeff3D6A,prod570B);
          real sum572A#3 = RAdd(mult5729,mult5716);
          real mult572C#1 = RMul(coeff3D6A,prod570F);
          real sum572D#3 = RAdd(mult572C,mult5713);
          real mult5730#1 = RMul(coeff5193,prod570F);
          real mult5731#1 = RMul(coeff51C5,prod570E);
          real mult5732#2 = RMul(coeff51C5,prod570A);
          real mult5733#2 = RMul(coeff51C5,prod5703);
          real sum5734#1 = RAdd(mult5732,mult5733);
          real sum5735#1 = RAdd(mult5731,sum5734);
          real sum5736#3 = RAdd(mult5730,sum5735);
          real mult5738#1 = RMul(coeff5193,prod570B);
          real mult5739#1 = RMul(coeff51C5,prod5708);
          real mult573A#2 = RMul(coeff51C5,prod5700);
          real sum573B#1 = RAdd(mult5739,mult573A);
          real sum573C#1 = RAdd(mult5732,sum573B);
          real sum573D#3 = RAdd(mult5738,sum573C);
          real mult573F#1 = RMul(coeff5193,prod5705);
          real mult5740#1 = RMul(coeff51C5,prod56FC);
          real sum5741#1 = RAdd(mult573A,mult5740);
          real sum5742#1 = RAdd(mult5733,sum5741);
          real sum5743#3 = RAdd(mult573F,sum5742);
          real r579C#1 = RMul(dof_load5631,sum5723);
          real r579F#1 = RMul(dof_load563A,sum5727);
          real r57A2#1 = RMul(dof_load5643,sum572A);
          real r57A5#1 = RMul(dof_load564C,sum572D);
          real r57A8#1 = RMul(dof_load5656,mult5715);
          real r57AB#1 = RMul(dof_load5660,mult5718);
          real r57AE#1 = RMul(dof_load566A,mult5719);
          real r57B1#1 = RMul(dof_load5674,sum5736);
          real r57B4#1 = RMul(dof_load567E,sum573D);
          real r57B7#1 = RMul(dof_load5688,sum5743);
          real r57B8#1 = RAdd(r579C,r579F);
          real r57B9#1 = RAdd(r57B8,r57A2);
          real r57BA#1 = RAdd(r57B9,r57A5);
          real r57BB#1 = RAdd(r57BA,r57A8);
          real r57BC#1 = RAdd(r57BB,r57AB);
          real r57BD#1 = RAdd(r57BC,r57AE);
          real r57BE#1 = RAdd(r57BD,r57B1);
          real r57BF#1 = RAdd(r57BE,r57B4);
          real r57C0#1 = RAdd(r57BF,r57B7);
          real r57C2#1 = RMul(dof_load5632,sum5723);
          real r57C4#1 = RMul(dof_load563B,sum5727);
          real r57C6#1 = RMul(dof_load5644,sum572A);
          real r57C8#1 = RMul(dof_load564D,sum572D);
          real r57CA#1 = RMul(dof_load5657,mult5715);
          real r57CC#1 = RMul(dof_load5661,mult5718);
          real r57CE#1 = RMul(dof_load566B,mult5719);
          real r57D0#1 = RMul(dof_load5675,sum5736);
          real r57D2#1 = RMul(dof_load567F,sum573D);
          real r57D4#1 = RMul(dof_load5689,sum5743);
          real r57D5#1 = RAdd(r57C2,r57C4);
          real r57D6#1 = RAdd(r57D5,r57C6);
          real r57D7#1 = RAdd(r57D6,r57C8);
          real r57D8#1 = RAdd(r57D7,r57CA);
          real r57D9#1 = RAdd(r57D8,r57CC);
          real r57DA#1 = RAdd(r57D9,r57CE);
          real r57DB#1 = RAdd(r57DA,r57D0);
          real r57DC#1 = RAdd(r57DB,r57D2);
          real r57DD#1 = RAdd(r57DC,r57D4);
          real r57DF#1 = RMul(dof_load5633,sum5723);
          real r57E1#1 = RMul(dof_load563C,sum5727);
          real r57E3#1 = RMul(dof_load5645,sum572A);
          real r57E5#1 = RMul(dof_load564E,sum572D);
          real r57E7#1 = RMul(dof_load5658,mult5715);
          real r57E9#1 = RMul(dof_load5662,mult5718);
          real r57EB#1 = RMul(dof_load566C,mult5719);
          real r57ED#1 = RMul(dof_load5676,sum5736);
          real r57EF#1 = RMul(dof_load5680,sum573D);
          real r57F1#1 = RMul(dof_load568A,sum5743);
          real r57F2#1 = RAdd(r57DF,r57E1);
          real r57F3#1 = RAdd(r57F2,r57E3);
          real r57F4#1 = RAdd(r57F3,r57E5);
          real r57F5#1 = RAdd(r57F4,r57E7);
          real r57F6#1 = RAdd(r57F5,r57E9);
          real r57F7#1 = RAdd(r57F6,r57EB);
          real r57F8#1 = RAdd(r57F7,r57ED);
          real r57F9#1 = RAdd(r57F8,r57EF);
          real r57FA#1 = RAdd(r57F9,r57F1);
          tensor[3] compositionl5799#3 = <tensor[3]>[r57C0,r57DD,r57FA];
          real op1_e3_l_19585E#1 = VDot<3>(compositionl5799,compositionl5799);
          tensor[3] op1_e3_l_205861#3 = VScale<3>(stepSize3CCF,compositionl5799);
          real op1_e3_l_215864#1 = Sqrt(op1_e3_l_19585E);
          real r5869#3 = RDiv(one3D6C,op1_e3_l_215864);
          real r586A#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_205861);
          real r586B#1 = RMul(r5869,r586A);
          real r586C#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_205861);
          real r586D#1 = RMul(r5869,r586C);
          real r586E#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_205861);
          real r586F#1 = RMul(r5869,r586E);
          tensor[3] op1_e3_l_225867#1 = <tensor[3]>[r586B,r586D,r586F];
          tensor[3] altCPos587A#3 = VAdd<3>(altCPos3CDB,op1_e3_l_225867);
          bool _t587D#1 = ExtractFemItem<bool,Valid(MeshPos)>(cPos55DB);
          bool _t587F#1 = BNot(_t587D);
          if _t587F then goto MASSIGN5882 else goto JOIN5886
        MASSIGN5882:  preds = [COND5881]
          Print<[tensor[3][]]>(stream3CD3);
          self.cPos = cPos55DB;
          self.altCPos = altCPos587A;
          stabilize
          goto JOIN5886
        JOIN5886:  preds = [*STABILIZE5885,COND5881]
          tensor[3] _t5887#3 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(cPos55DB);
          int _t5889#1 = ExtractFemItem<int,CellIndex(MeshPos)>(cPos55DB);
          femData:Mesh _t588B#16 = ExtractFem<femData:Mesh,femData:MeshPos>(cPos55DB);
          int mulRes588F#4 = IMul(_t5889,ilit3CF3);
          int idx5892#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,mulRes588F);
          int addRes5894#1 = IAdd(mulRes588F,ilit3CF8);
          int idx5895#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5894);
          int addRes5897#1 = IAdd(mulRes588F,ilit3CFB);
          int idx5898#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes5897);
          int addRes589A#1 = IAdd(mulRes588F,ilit3CFE);
          int idx589B#1 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(_t588B,addRes589A);
          int mulRes58B1#3 = IMul(ilit3CFE,idx5892);
          int addRes58B4#1 = IAdd(ilit3CF8,mulRes58B1);
          int addRes58B6#1 = IAdd(ilit3CFB,mulRes58B1);
          real dof_load58B7#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58B1);
          real dof_load58B8#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B4);
          real dof_load58B9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58B6);
          int mulRes58BC#3 = IMul(ilit3CFE,idx5895);
          int addRes58BE#1 = IAdd(ilit3CF8,mulRes58BC);
          int addRes58BF#1 = IAdd(ilit3CFB,mulRes58BC);
          real dof_load58C0#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58BC);
          real dof_load58C1#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BE);
          real dof_load58C2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58BF);
          int mulRes58C5#3 = IMul(ilit3CFE,idx5898);
          int addRes58C7#1 = IAdd(ilit3CF8,mulRes58C5);
          int addRes58C8#1 = IAdd(ilit3CFB,mulRes58C5);
          real dof_load58C9#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58C5);
          real dof_load58CA#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C7);
          real dof_load58CB#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58C8);
          int mulRes58CE#3 = IMul(ilit3CFE,idx589B);
          int addRes58D0#1 = IAdd(ilit3CF8,mulRes58CE);
          int addRes58D1#1 = IAdd(ilit3CFB,mulRes58CE);
          real dof_load58D2#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,mulRes58CE);
          real dof_load58D3#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58D0);
          real dof_load58D4#1 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(_t588B,addRes58D1);
          real varAcc5902#1 = VIndex<3,0>(_t5887);
          real varAcc5903#1 = VIndex<3,1>(_t5887);
          real varAcc5904#1 = VIndex<3,2>(_t5887);
          real prod5909#2 = RMul(varAcc5902,prod3D6D);
          real prod590B#1 = RMul(varAcc5903,one3D6C);
          real prod590C#2 = RMul(one3D6C,prod590B);
          real prod590E#1 = RMul(one3D6C,varAcc5904);
          real prod590F#2 = RMul(one3D6C,prod590E);
          real mult5912#1 = RMul(coeff3D6A,prod590F);
          real mult5913#1 = RMul(coeff3D6A,prod590C);
          real mult5914#1 = RMul(coeff3D6A,prod5909);
          real sum5915#1 = RAdd(mult5913,mult5914);
          real sum5916#1 = RAdd(mult5912,sum5915);
          real sum5917#3 = RAdd(mult3D76,sum5916);
          real basisEval5919#3 = RMul(one3D6C,prod5909);
          real basisEval591A#3 = RMul(one3D6C,prod590C);
          real basisEval591B#3 = RMul(one3D6C,prod590F);
          real r593C#1 = RMul(dof_load58B7,sum5917);
          real r593F#1 = RMul(dof_load58C0,basisEval5919);
          real r5942#1 = RMul(dof_load58C9,basisEval591A);
          real r5945#1 = RMul(dof_load58D2,basisEval591B);
          real r5946#1 = RAdd(r593C,r593F);
          real r5947#1 = RAdd(r5946,r5942);
          real r5948#1 = RAdd(r5947,r5945);
          real r594A#1 = RMul(dof_load58B8,sum5917);
          real r594C#1 = RMul(dof_load58C1,basisEval5919);
          real r594E#1 = RMul(dof_load58CA,basisEval591A);
          real r5950#1 = RMul(dof_load58D3,basisEval591B);
          real r5951#1 = RAdd(r594A,r594C);
          real r5952#1 = RAdd(r5951,r594E);
          real r5953#1 = RAdd(r5952,r5950);
          real r5955#1 = RMul(dof_load58B9,sum5917);
          real r5957#1 = RMul(dof_load58C2,basisEval5919);
          real r5959#1 = RMul(dof_load58CB,basisEval591A);
          real r595B#1 = RMul(dof_load58D4,basisEval591B);
          real r595C#1 = RAdd(r5955,r5957);
          real r595D#1 = RAdd(r595C,r5959);
          real r595E#1 = RAdd(r595D,r595B);
          tensor[3] _t5939#1 = <tensor[3]>[r5948,r5953,r595E];
          tensor[3][1] _t5986#1 = <tensor[3][1]>{_t5939};
          tensor[3][] _t5988#1 = MkDynamic<tensor[3],1>(_t5986);
          tensor[3][] stream598A#1 = Concat<tensor[3]>(stream3CD3,_t5988);
          tensor[3][1] _t598C#1 = <tensor[3][1]>{altCPos587A};
          tensor[3][] _t598E#1 = MkDynamic<tensor[3],1>(_t598C);
          tensor[3][] newStream5990#1 = Concat<tensor[3]>(newStream3CD5,_t598E);
          int step5994#1 = IAdd(step3CD7,ilit3CF8);
          self.stream = stream598A;
          self.newStream = newStream5990;
          self.step = step5994;
          self.cPos = cPos55DB;
          self.altCPos = altCPos587A;
          active
        ASSIGN599E:  preds = [COND532E]
          real realLit599C#3 = 0.e0;
          tensor[3] _t55D6#1 = <tensor[3]>[realLit599C,realLit599C,realLit599C];
          goto JOIN55D7
        ASSIGN59A1:  preds = [COND5325]
          femData:MeshPos _t59A0#1 = findPos3574 (meshData3CCD,altIntermed531E);
          bool _t59A2#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t59A0);
          bool _t5329#1 = BNot(_t59A2);
          goto JOIN532A
        ASSIGN59A7:  preds = [COND3E03]
          real realLit59A5#3 = 0.e0;
          tensor[3] _t40A5#1 = <tensor[3]>[realLit59A5,realLit59A5,realLit59A5];
          goto JOIN40A6
        ASSIGN59AA:  preds = [COND3DF8]
          string _t59A9#1 = "fine in cell:";
          femData:MeshCell _t59AB#1 = LoadFem<femData:MeshCell>(_t3CF0,_t3CEE);
          string _t59AD#1 = "\n";
          Print<[string,femData:MeshCell,string]>(_t59A9,_t59AB,_t59AD);
          goto JOIN3E00
        ASSIGN59B1:  preds = [COND3CE3]
          femData:MeshPos _t59B0#1 = findPos3574 (meshData3CCD,altCPos3CDB);
          bool _t59B2#1 = ExtractFemItem<bool,Valid(MeshPos)>(_t59B0);
          bool _t59B4#1 = BNot(_t59B2);
          if _t59B4 then goto ASSIGN59B8 else goto ASSIGN59BB
        ASSIGN59B8:  preds = [COND59B6]
          bool _t59B7#1 = true;
          goto JOIN59BA
        JOIN59BA:  preds = [ASSIGN59B8,ASSIGN59BB]
          bool _t3CE7#1 = phi(_t59B7,_t59B9)
          goto JOIN3CE8
        ASSIGN59BB:  preds = [COND59B6]
          bool _t59B9#1 = EQ<int>(step3CD7,stepMax3CD1);
          goto JOIN59BA
    end update
  end gg
## initial strand creation
  COLLECTION
    ENTRY59BC:  preds = []
      tensor[3][] startPoints59BD#1 = globals.startPoints3524;
    FOREACH59C0:  preds = [ASSIGN59BE,NEXT59C2]
      foreach (x59BF in startPoints59BD) on exit goto RETURN59C3
      new gg(x59BF);
      goto FOREACH59C0
    RETURN59C3:  preds = [FOREACH59C0]
      return
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) meshData;
input femData(Space) 0space03AB_intermedateGlobal;
input femData(FemFunc) 0data03AD_intermedateGlobal;
input int timeSteps;
input real timeEps;
input tensor[3][] startPoints;
input real stepSize;
input int stepMax;
//***** CONST INIT *****
  {
    globals.timeSteps = 32;
    globals.timeEps = 0.1e-6;
    globals.stepSize = 0.1e-1;
    globals.stepMax = 100;
  }
//***** GLOBALS *****
global femData(FemFunc) data;
global femData(Mesh) _t;
global femData(Space) _tX;
//***** FUNCTIONS *****
  function femData(MeshPos) findPos (world, femData(Mesh) p_mesh_0,&tensor[3] p_pos_1) {
    int[] t_3 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(p_mesh_0,p_pos_1);
    vec3{4} v_4 = VEC3{4}(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    foreach int i_cellItter_2 in t_3 {
      vec3{4} v_5;
      v_5 = v_4;
      for i_newtonItter_6 = 0 to 16 {
        int l_mulRes_7 = IMul(i_cellItter_2,4);
        int t_8 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,l_mulRes_7);
        int l_mulRes_9 = IMul(3,t_8);
        real l_dof_load_10 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_9);
        real l_dof_load_11 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_9));
        real l_dof_load_12 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_9));
        int t_13 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,1));
        int l_mulRes_14 = IMul(3,t_13);
        real l_dof_load_15 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_14);
        real l_dof_load_16 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_14));
        real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_14));
        int t_18 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,2));
        int l_mulRes_19 = IMul(3,t_18);
        real l_dof_load_20 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_19);
        real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_19));
        real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_19));
        int t_23 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,3));
        int l_mulRes_24 = IMul(3,t_23);
        real l_dof_load_25 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_24);
        real l_dof_load_26 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_24));
        real l_dof_load_27 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_24));
        real l_prod_28 = RMul(0.1e1,0.1e1);
        real l_prod_29 = RMul(0.1e1,l_prod_28);
        real l_basisEval_30 = RMul(-0.1e1,l_prod_29);
        real l_basisEval_31 = RMul(0.1e1,l_prod_29);
        real l_r_32 = RMul(l_dof_load_10,l_basisEval_30);
        real l_r_33 = RMul(l_dof_load_20,0.e0);
        real l_r_34 = RMul(l_dof_load_25,0.e0);
        real l_r_35 = RAdd(RAdd(RAdd(l_r_32,RMul(l_dof_load_15,l_basisEval_31)),l_r_33),l_r_34);
        real l_r_36 = RAdd(l_r_32,RMul(l_dof_load_15,0.e0));
        real l_r_37 = RAdd(RAdd(l_r_36,RMul(l_dof_load_20,l_basisEval_31)),l_r_34);
        real l_r_38 = RAdd(RAdd(l_r_36,l_r_33),RMul(l_dof_load_25,l_basisEval_31));
        real l_r_39 = RMul(l_dof_load_11,l_basisEval_30);
        real l_r_40 = RMul(l_dof_load_21,0.e0);
        real l_r_41 = RMul(l_dof_load_26,0.e0);
        real l_r_42 = RAdd(RAdd(RAdd(l_r_39,RMul(l_dof_load_16,l_basisEval_31)),l_r_40),l_r_41);
        real l_r_43 = RAdd(l_r_39,RMul(l_dof_load_16,0.e0));
        real l_r_44 = RAdd(RAdd(l_r_43,RMul(l_dof_load_21,l_basisEval_31)),l_r_41);
        real l_r_45 = RAdd(RAdd(l_r_43,l_r_40),RMul(l_dof_load_26,l_basisEval_31));
        real l_r_46 = RMul(l_dof_load_12,l_basisEval_30);
        real l_r_47 = RMul(l_dof_load_22,0.e0);
        real l_r_48 = RMul(l_dof_load_27,0.e0);
        real l_r_49 = RAdd(RAdd(RAdd(l_r_46,RMul(l_dof_load_17,l_basisEval_31)),l_r_47),l_r_48);
        real l_r_50 = RAdd(l_r_46,RMul(l_dof_load_17,0.e0));
        real l_r_51 = RAdd(RAdd(l_r_50,RMul(l_dof_load_22,l_basisEval_31)),l_r_48);
        real l_r_52 = RAdd(RAdd(l_r_50,l_r_47),RMul(l_dof_load_27,l_basisEval_31));
        real l_r_53 = RMul(0.e0,l_r_35);
        real l_r_54 = RMul(0.e0,l_r_42);
        real l_r_55 = RMul(0.e0,l_r_49);
        real l_r_56 = RAdd(l_r_53,l_r_54);
        real l_r_57 = RAdd(l_r_56,l_r_55);
        real l_r_58 = RMul(0.e0,l_r_37);
        real l_r_59 = RMul(0.e0,l_r_44);
        real l_r_60 = RMul(0.e0,l_r_51);
        real l_r_61 = RAdd(l_r_58,l_r_59);
        real l_r_62 = RAdd(l_r_61,l_r_60);
        real l_r_63 = RMul(0.e0,l_r_38);
        real l_r_64 = RMul(0.e0,l_r_45);
        real l_r_65 = RMul(0.e0,l_r_52);
        real l_r_66 = RAdd(l_r_63,l_r_64);
        real l_r_67 = RAdd(l_r_66,l_r_65);
        real l_r_68 = RAdd(l_r_56,RMul(-0.1e1,l_r_49));
        real l_r_69 = RAdd(l_r_61,RMul(-0.1e1,l_r_51));
        real l_r_70 = RAdd(l_r_66,RMul(-0.1e1,l_r_52));
        real l_r_71 = RAdd(RAdd(l_r_53,RMul(0.1e1,l_r_42)),l_r_55);
        real l_r_72 = RAdd(RAdd(l_r_58,RMul(0.1e1,l_r_44)),l_r_60);
        real l_r_73 = RAdd(RAdd(l_r_63,RMul(0.1e1,l_r_45)),l_r_65);
        real l_r_74 = RAdd(l_r_56,RMul(0.1e1,l_r_49));
        real l_r_75 = RAdd(l_r_61,RMul(0.1e1,l_r_51));
        real l_r_76 = RAdd(l_r_66,RMul(0.1e1,l_r_52));
        real l_r_77 = RAdd(RAdd(RMul(-0.1e1,l_r_35),l_r_54),l_r_55);
        real l_r_78 = RAdd(RAdd(RMul(-0.1e1,l_r_37),l_r_59),l_r_60);
        real l_r_79 = RAdd(RAdd(RMul(-0.1e1,l_r_38),l_r_64),l_r_65);
        real l_r_80 = RAdd(RAdd(l_r_53,RMul(-0.1e1,l_r_42)),l_r_55);
        real l_r_81 = RAdd(RAdd(l_r_58,RMul(-0.1e1,l_r_44)),l_r_60);
        real l_r_82 = RAdd(RAdd(l_r_63,RMul(-0.1e1,l_r_45)),l_r_65);
        real l_r_83 = RAdd(RAdd(RMul(0.1e1,l_r_35),l_r_54),l_r_55);
        real l_r_84 = RAdd(RAdd(RMul(0.1e1,l_r_37),l_r_59),l_r_60);
        real l_r_85 = RAdd(RAdd(RMul(0.1e1,l_r_38),l_r_64),l_r_65);
        real l_r_86 = RAdd(RAdd(RMul(l_r_35,l_r_62),RMul(l_r_42,l_r_75)),RMul(l_r_49,l_r_81));
        real l_r_87 = RAdd(RAdd(RMul(l_r_35,l_r_67),RMul(l_r_42,l_r_76)),RMul(l_r_49,l_r_82));
        real l_r_88 = RAdd(RAdd(RMul(l_r_35,l_r_69),RMul(l_r_42,l_r_62)),RMul(l_r_49,l_r_84));
        real l_r_89 = RAdd(RAdd(RMul(l_r_35,l_r_70),RMul(l_r_42,l_r_67)),RMul(l_r_49,l_r_85));
        real l_r_90 = RAdd(RAdd(RMul(l_r_35,l_r_72),RMul(l_r_42,l_r_78)),RMul(l_r_49,l_r_62));
        real l_r_91 = RAdd(RAdd(RMul(l_r_35,l_r_73),RMul(l_r_42,l_r_79)),RMul(l_r_49,l_r_67));
        real l_r_92 = RAdd(RAdd(RMul(l_r_37,l_r_57),RMul(l_r_44,l_r_74)),RMul(l_r_51,l_r_80));
        real l_r_93 = RAdd(RAdd(RMul(l_r_37,l_r_67),RMul(l_r_44,l_r_76)),RMul(l_r_51,l_r_82));
        real l_r_94 = RAdd(RAdd(RMul(l_r_37,l_r_68),RMul(l_r_44,l_r_57)),RMul(l_r_51,l_r_83));
        real l_r_95 = RAdd(RAdd(RMul(l_r_37,l_r_70),RMul(l_r_44,l_r_67)),RMul(l_r_51,l_r_85));
        real l_r_96 = RAdd(RAdd(RMul(l_r_37,l_r_71),RMul(l_r_44,l_r_77)),RMul(l_r_51,l_r_57));
        real l_r_97 = RAdd(RAdd(RMul(l_r_37,l_r_73),RMul(l_r_44,l_r_79)),RMul(l_r_51,l_r_67));
        real l_r_98 = RAdd(RAdd(RMul(l_r_38,l_r_57),RMul(l_r_45,l_r_74)),RMul(l_r_52,l_r_80));
        real l_r_99 = RAdd(RAdd(RMul(l_r_38,l_r_62),RMul(l_r_45,l_r_75)),RMul(l_r_52,l_r_81));
        real l_r_100 = RAdd(RAdd(RMul(l_r_38,l_r_68),RMul(l_r_45,l_r_57)),RMul(l_r_52,l_r_83));
        real l_r_101 = RAdd(RAdd(RMul(l_r_38,l_r_69),RMul(l_r_45,l_r_62)),RMul(l_r_52,l_r_84));
        real l_r_102 = RAdd(RAdd(RMul(l_r_38,l_r_71),RMul(l_r_45,l_r_77)),RMul(l_r_52,l_r_57));
        real l_r_103 = RAdd(RAdd(RMul(l_r_38,l_r_72),RMul(l_r_45,l_r_78)),RMul(l_r_52,l_r_62));
        vec3{4} v_104 = VEC3{4}(l_r_37,l_r_44,l_r_51);
        real l_r_105 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_57),RMul(l_r_42,l_r_74)),RMul(l_r_49,l_r_80)));
        real l_r_106 = RMul(0.e0,l_r_87);
        real l_r_107 = RMul(0.e0,l_r_92);
        real l_r_108 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_62),RMul(l_r_44,l_r_75)),RMul(l_r_51,l_r_81)));
        real l_r_109 = RMul(0.e0,l_r_98);
        real l_r_110 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_67),RMul(l_r_45,l_r_76)),RMul(l_r_52,l_r_82)));
        real l_r_111 = RAdd(l_r_105,RMul(0.e0,l_r_86));
        real l_r_112 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_68),RMul(l_r_42,l_r_57)),RMul(l_r_49,l_r_83)));
        real l_r_113 = RMul(0.e0,l_r_89);
        real l_r_114 = RMul(0.e0,l_r_94);
        real l_r_115 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_69),RMul(l_r_44,l_r_62)),RMul(l_r_51,l_r_84)));
        real l_r_116 = RMul(0.e0,l_r_100);
        real l_r_117 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_70),RMul(l_r_45,l_r_67)),RMul(l_r_52,l_r_85)));
        real l_r_118 = RAdd(l_r_112,RMul(0.e0,l_r_88));
        real l_r_119 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_71),RMul(l_r_42,l_r_77)),RMul(l_r_49,l_r_57)));
        real l_r_120 = RMul(0.e0,l_r_91);
        real l_r_121 = RMul(0.e0,l_r_96);
        real l_r_122 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_72),RMul(l_r_44,l_r_78)),RMul(l_r_51,l_r_62)));
        real l_r_123 = RMul(0.e0,l_r_102);
        real l_r_124 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_73),RMul(l_r_45,l_r_79)),RMul(l_r_52,l_r_67)));
        real l_r_125 = RAdd(l_r_119,RMul(0.e0,l_r_90));
        real l_r_126 = RMul(0.e0,l_r_93);
        real l_r_127 = RMul(0.e0,l_r_99);
        real l_r_128 = RMul(0.e0,l_r_95);
        real l_r_129 = RMul(0.e0,l_r_101);
        real l_r_130 = RMul(0.e0,l_r_97);
        real l_r_131 = RMul(0.e0,l_r_103);
        real l_op1_e3_l_21_132 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_35,l_r_42,l_r_49),VEC3{4}(VDot<3,4>(v_104,VEC3{4}(l_r_67,l_r_76,l_r_82)),VDot<3,4>(v_104,VEC3{4}(l_r_70,l_r_67,l_r_85)),VDot<3,4>(v_104,VEC3{4}(l_r_73,l_r_79,l_r_67)))));
        real l_prod_133 = RMul(VIndex<3,4,0>(v_5),l_prod_28);
        real l_prod_134 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_5),0.1e1));
        real l_prod_135 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_5)));
        real l_sum_136 = RAdd(l_basisEval_31,RAdd(RMul(-0.1e1,l_prod_135),RAdd(RMul(-0.1e1,l_prod_134),RMul(-0.1e1,l_prod_133))));
        real l_basisEval_137 = RMul(0.1e1,l_prod_133);
        real l_basisEval_138 = RMul(0.1e1,l_prod_134);
        real l_basisEval_139 = RMul(0.1e1,l_prod_135);
        vec3{4} v_140 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_10,l_sum_136),RMul(l_dof_load_15,l_basisEval_137)),RMul(l_dof_load_20,l_basisEval_138)),RMul(l_dof_load_25,l_basisEval_139)),RAdd(RAdd(RAdd(RMul(l_dof_load_11,l_sum_136),RMul(l_dof_load_16,l_basisEval_137)),RMul(l_dof_load_21,l_basisEval_138)),RMul(l_dof_load_26,l_basisEval_139)),RAdd(RAdd(RAdd(RMul(l_dof_load_12,l_sum_136),RMul(l_dof_load_17,l_basisEval_137)),RMul(l_dof_load_22,l_basisEval_138)),RMul(l_dof_load_27,l_basisEval_139))),LOAD_0(p_pos_1));
        vec3{4} v_141 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_111,l_r_106),l_r_107),l_r_108),RMul(0.1e1,l_r_93)),l_r_109),RMul(-0.1e1,l_r_99)),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,l_r_113),l_r_114),l_r_115),RMul(0.1e1,l_r_95)),l_r_116),RMul(-0.1e1,l_r_101)),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,l_r_120),l_r_121),l_r_122),RMul(0.1e1,l_r_97)),l_r_123),RMul(-0.1e1,l_r_103)),l_r_124),l_op1_e3_l_21_132)),v_140),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_111,RMul(-0.1e1,l_r_87)),l_r_107),l_r_108),l_r_126),RMul(0.1e1,l_r_98)),l_r_127),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,RMul(-0.1e1,l_r_89)),l_r_114),l_r_115),l_r_128),RMul(0.1e1,l_r_100)),l_r_129),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,RMul(-0.1e1,l_r_91)),l_r_121),l_r_122),l_r_130),RMul(0.1e1,l_r_102)),l_r_131),l_r_124),l_op1_e3_l_21_132)),v_140),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_105,RMul(0.1e1,l_r_86)),l_r_106),RMul(-0.1e1,l_r_92)),l_r_108),l_r_126),l_r_109),l_r_127),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_112,RMul(0.1e1,l_r_88)),l_r_113),RMul(-0.1e1,l_r_94)),l_r_115),l_r_128),l_r_116),l_r_129),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_119,RMul(0.1e1,l_r_90)),l_r_120),RMul(-0.1e1,l_r_96)),l_r_122),l_r_130),l_r_123),l_r_131),l_r_124),l_op1_e3_l_21_132)),v_140));
        vec3{4} v_142 = VSub<3,4>(v_5,v_141);
        vec3{4} v_143 = v_142;
        if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<3,4>(v_141,v_141))) {
          vec3{4} v_144 = VAdd<3,4>(VEC3{4}(0.1e-8,0.1e-8,0.1e-8),v_143);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_143)),BAnd(GT<real>(VIndex<3,4,0>(v_144),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_144),-0.e0),GT<real>(VIndex<3,4,2>(v_144),-0.e0))))) {
            tensor[3] _arg_145 = PACK(v_143);
            return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_0,i_cellItter_2,_arg_145,p_pos_1)
          }
        }
        v_5 = v_143;
      }
    }
    print("Bad end 2","\n");
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_0)
  }
  function int[2] nextCell4 (int p_faceIdx_146,int p_cell_147,femData(Mesh) p_mesh_148) {
    return ExtractFemItemN<[femData(Mesh),int],int[2],CellFaceCell(Mesh),"","",[],int>(p_mesh_148,IAdd(IMul(p_cell_147,8),IMul(p_faceIdx_146,2)))
  }
  function femData(MeshPos) posMove (world, globals, femData(MeshPos) p_x_149,&tensor[3] p_dPos_150) {
    real l_time_152;
    femData(MeshPos) l_x_151;
    if (BNot(ExtractFemItem<bool,Valid(MeshPos)>(p_x_149))) {
      return p_x_149
    }
    l_x_151 = p_x_149;
    l_time_152 = 0.1e1;
    for i_i_153 = 0 to globals.timeSteps {
      real l_time_427;
      femData(MeshPos) l_nmp_426;
      femData(Mesh) l__t_154 = ExtractFem<femData(Mesh),femData(MeshPos)>(l_x_151);
      femData(MeshCell) l__t_155 = LoadFem<femData(MeshCell)>(l__t_154,ExtractFemItem<int,CellIndex(MeshPos)>(l_x_151));
      femData(Mesh) l__t_156 = ExtractFem<femData(Mesh),femData(MeshCell)>(l__t_155);
      int l__t_157 = ExtractFemItem<int,CellIndex(MeshCell)>(l__t_155);
      &tensor[3] l__t_158 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(l_x_151);
      int l_mulRes_159 = IMul(l__t_157,4);
      int t_160 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_156,l_mulRes_159);
      int l_mulRes_161 = IMul(3,t_160);
      int t_162 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_156,IAdd(l_mulRes_159,1));
      int l_mulRes_163 = IMul(3,t_162);
      real l_dof_load_164 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,l_mulRes_163);
      real l_dof_load_165 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(1,l_mulRes_163));
      real l_dof_load_166 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(2,l_mulRes_163));
      int t_167 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_156,IAdd(l_mulRes_159,2));
      int l_mulRes_168 = IMul(3,t_167);
      real l_dof_load_169 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,l_mulRes_168);
      real l_dof_load_170 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(1,l_mulRes_168));
      real l_dof_load_171 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(2,l_mulRes_168));
      int t_172 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_156,IAdd(l_mulRes_159,3));
      int l_mulRes_173 = IMul(3,t_172);
      real l_dof_load_174 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,l_mulRes_173);
      real l_dof_load_175 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(1,l_mulRes_173));
      real l_dof_load_176 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(2,l_mulRes_173));
      real l_prod_177 = RMul(0.1e1,RMul(0.1e1,0.1e1));
      real l_basisEval_178 = RMul(-0.1e1,l_prod_177);
      real l_basisEval_179 = RMul(0.1e1,l_prod_177);
      real t_180 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,l_mulRes_161);
      real l_r_181 = RMul(t_180,l_basisEval_178);
      real l_r_182 = RMul(l_dof_load_169,0.e0);
      real l_r_183 = RMul(l_dof_load_174,0.e0);
      real l_r_184 = RAdd(RAdd(RAdd(l_r_181,RMul(l_dof_load_164,l_basisEval_179)),l_r_182),l_r_183);
      real l_r_185 = RAdd(l_r_181,RMul(l_dof_load_164,0.e0));
      real l_r_186 = RAdd(RAdd(l_r_185,RMul(l_dof_load_169,l_basisEval_179)),l_r_183);
      real l_r_187 = RAdd(RAdd(l_r_185,l_r_182),RMul(l_dof_load_174,l_basisEval_179));
      real t_188 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(1,l_mulRes_161));
      real l_r_189 = RMul(t_188,l_basisEval_178);
      real l_r_190 = RMul(l_dof_load_170,0.e0);
      real l_r_191 = RMul(l_dof_load_175,0.e0);
      real l_r_192 = RAdd(RAdd(RAdd(l_r_189,RMul(l_dof_load_165,l_basisEval_179)),l_r_190),l_r_191);
      real l_r_193 = RAdd(l_r_189,RMul(l_dof_load_165,0.e0));
      real l_r_194 = RAdd(RAdd(l_r_193,RMul(l_dof_load_170,l_basisEval_179)),l_r_191);
      real l_r_195 = RAdd(RAdd(l_r_193,l_r_190),RMul(l_dof_load_175,l_basisEval_179));
      real t_196 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(2,l_mulRes_161));
      real l_r_197 = RMul(t_196,l_basisEval_178);
      real l_r_198 = RMul(l_dof_load_171,0.e0);
      real l_r_199 = RMul(l_dof_load_176,0.e0);
      real l_r_200 = RAdd(RAdd(RAdd(l_r_197,RMul(l_dof_load_166,l_basisEval_179)),l_r_198),l_r_199);
      real l_r_201 = RAdd(l_r_197,RMul(l_dof_load_166,0.e0));
      real l_r_202 = RAdd(RAdd(l_r_201,RMul(l_dof_load_171,l_basisEval_179)),l_r_199);
      real l_r_203 = RAdd(RAdd(l_r_201,l_r_198),RMul(l_dof_load_176,l_basisEval_179));
      real l_r_204 = RMul(0.e0,l_r_184);
      real l_r_205 = RMul(0.e0,l_r_192);
      real l_r_206 = RMul(0.e0,l_r_200);
      real l_r_207 = RAdd(l_r_204,l_r_205);
      real l_r_208 = RAdd(l_r_207,l_r_206);
      real l_r_209 = RMul(0.e0,l_r_186);
      real l_r_210 = RMul(0.e0,l_r_194);
      real l_r_211 = RMul(0.e0,l_r_202);
      real l_r_212 = RAdd(l_r_209,l_r_210);
      real l_r_213 = RAdd(l_r_212,l_r_211);
      real l_r_214 = RMul(0.e0,l_r_187);
      real l_r_215 = RMul(0.e0,l_r_195);
      real l_r_216 = RMul(0.e0,l_r_203);
      real l_r_217 = RAdd(l_r_214,l_r_215);
      real l_r_218 = RAdd(l_r_217,l_r_216);
      real l_r_219 = RAdd(l_r_207,RMul(-0.1e1,l_r_200));
      real l_r_220 = RAdd(l_r_212,RMul(-0.1e1,l_r_202));
      real l_r_221 = RAdd(l_r_217,RMul(-0.1e1,l_r_203));
      real l_r_222 = RAdd(RAdd(l_r_204,RMul(0.1e1,l_r_192)),l_r_206);
      real l_r_223 = RAdd(RAdd(l_r_209,RMul(0.1e1,l_r_194)),l_r_211);
      real l_r_224 = RAdd(RAdd(l_r_214,RMul(0.1e1,l_r_195)),l_r_216);
      real l_r_225 = RAdd(l_r_207,RMul(0.1e1,l_r_200));
      real l_r_226 = RAdd(l_r_212,RMul(0.1e1,l_r_202));
      real l_r_227 = RAdd(l_r_217,RMul(0.1e1,l_r_203));
      real l_r_228 = RAdd(RAdd(RMul(-0.1e1,l_r_184),l_r_205),l_r_206);
      real l_r_229 = RAdd(RAdd(RMul(-0.1e1,l_r_186),l_r_210),l_r_211);
      real l_r_230 = RAdd(RAdd(RMul(-0.1e1,l_r_187),l_r_215),l_r_216);
      real l_r_231 = RAdd(RAdd(l_r_204,RMul(-0.1e1,l_r_192)),l_r_206);
      real l_r_232 = RAdd(RAdd(l_r_209,RMul(-0.1e1,l_r_194)),l_r_211);
      real l_r_233 = RAdd(RAdd(l_r_214,RMul(-0.1e1,l_r_195)),l_r_216);
      real l_r_234 = RAdd(RAdd(RMul(0.1e1,l_r_184),l_r_205),l_r_206);
      real l_r_235 = RAdd(RAdd(RMul(0.1e1,l_r_186),l_r_210),l_r_211);
      real l_r_236 = RAdd(RAdd(RMul(0.1e1,l_r_187),l_r_215),l_r_216);
      real l_r_237 = RAdd(RAdd(RMul(l_r_184,l_r_213),RMul(l_r_192,l_r_226)),RMul(l_r_200,l_r_232));
      real l_r_238 = RAdd(RAdd(RMul(l_r_184,l_r_218),RMul(l_r_192,l_r_227)),RMul(l_r_200,l_r_233));
      real l_r_239 = RAdd(RAdd(RMul(l_r_184,l_r_220),RMul(l_r_192,l_r_213)),RMul(l_r_200,l_r_235));
      real l_r_240 = RAdd(RAdd(RMul(l_r_184,l_r_221),RMul(l_r_192,l_r_218)),RMul(l_r_200,l_r_236));
      real l_r_241 = RAdd(RAdd(RMul(l_r_184,l_r_223),RMul(l_r_192,l_r_229)),RMul(l_r_200,l_r_213));
      real l_r_242 = RAdd(RAdd(RMul(l_r_184,l_r_224),RMul(l_r_192,l_r_230)),RMul(l_r_200,l_r_218));
      real l_r_243 = RAdd(RAdd(RMul(l_r_186,l_r_208),RMul(l_r_194,l_r_225)),RMul(l_r_202,l_r_231));
      real l_r_244 = RAdd(RAdd(RMul(l_r_186,l_r_218),RMul(l_r_194,l_r_227)),RMul(l_r_202,l_r_233));
      real l_r_245 = RAdd(RAdd(RMul(l_r_186,l_r_219),RMul(l_r_194,l_r_208)),RMul(l_r_202,l_r_234));
      real l_r_246 = RAdd(RAdd(RMul(l_r_186,l_r_221),RMul(l_r_194,l_r_218)),RMul(l_r_202,l_r_236));
      real l_r_247 = RAdd(RAdd(RMul(l_r_186,l_r_222),RMul(l_r_194,l_r_228)),RMul(l_r_202,l_r_208));
      real l_r_248 = RAdd(RAdd(RMul(l_r_186,l_r_224),RMul(l_r_194,l_r_230)),RMul(l_r_202,l_r_218));
      real l_r_249 = RAdd(RAdd(RMul(l_r_187,l_r_208),RMul(l_r_195,l_r_225)),RMul(l_r_203,l_r_231));
      real l_r_250 = RAdd(RAdd(RMul(l_r_187,l_r_213),RMul(l_r_195,l_r_226)),RMul(l_r_203,l_r_232));
      real l_r_251 = RAdd(RAdd(RMul(l_r_187,l_r_219),RMul(l_r_195,l_r_208)),RMul(l_r_203,l_r_234));
      real l_r_252 = RAdd(RAdd(RMul(l_r_187,l_r_220),RMul(l_r_195,l_r_213)),RMul(l_r_203,l_r_235));
      real l_r_253 = RAdd(RAdd(RMul(l_r_187,l_r_222),RMul(l_r_195,l_r_228)),RMul(l_r_203,l_r_208));
      real l_r_254 = RAdd(RAdd(RMul(l_r_187,l_r_223),RMul(l_r_195,l_r_229)),RMul(l_r_203,l_r_213));
      vec3{4} v_255 = VEC3{4}(l_r_186,l_r_194,l_r_202);
      real l_r_256 = RMul(0.e0,RAdd(RAdd(RMul(l_r_184,l_r_208),RMul(l_r_192,l_r_225)),RMul(l_r_200,l_r_231)));
      real l_r_257 = RMul(0.e0,l_r_238);
      real l_r_258 = RMul(0.e0,l_r_243);
      real l_r_259 = RMul(0.e0,RAdd(RAdd(RMul(l_r_186,l_r_213),RMul(l_r_194,l_r_226)),RMul(l_r_202,l_r_232)));
      real l_r_260 = RMul(0.e0,l_r_249);
      real l_r_261 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_218),RMul(l_r_195,l_r_227)),RMul(l_r_203,l_r_233)));
      real l_r_262 = RAdd(l_r_256,RMul(0.e0,l_r_237));
      real l_r_263 = RMul(0.e0,RAdd(RAdd(RMul(l_r_184,l_r_219),RMul(l_r_192,l_r_208)),RMul(l_r_200,l_r_234)));
      real l_r_264 = RMul(0.e0,l_r_240);
      real l_r_265 = RMul(0.e0,l_r_245);
      real l_r_266 = RMul(0.e0,RAdd(RAdd(RMul(l_r_186,l_r_220),RMul(l_r_194,l_r_213)),RMul(l_r_202,l_r_235)));
      real l_r_267 = RMul(0.e0,l_r_251);
      real l_r_268 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_221),RMul(l_r_195,l_r_218)),RMul(l_r_203,l_r_236)));
      real l_r_269 = RAdd(l_r_263,RMul(0.e0,l_r_239));
      real l_r_270 = RMul(0.e0,RAdd(RAdd(RMul(l_r_184,l_r_222),RMul(l_r_192,l_r_228)),RMul(l_r_200,l_r_208)));
      real l_r_271 = RMul(0.e0,l_r_242);
      real l_r_272 = RMul(0.e0,l_r_247);
      real l_r_273 = RMul(0.e0,RAdd(RAdd(RMul(l_r_186,l_r_223),RMul(l_r_194,l_r_229)),RMul(l_r_202,l_r_213)));
      real l_r_274 = RMul(0.e0,l_r_253);
      real l_r_275 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_224),RMul(l_r_195,l_r_230)),RMul(l_r_203,l_r_218)));
      real l_r_276 = RAdd(l_r_270,RMul(0.e0,l_r_241));
      real l_r_277 = RMul(0.e0,l_r_244);
      real l_r_278 = RMul(0.e0,l_r_250);
      real l_r_279 = RMul(0.e0,l_r_246);
      real l_r_280 = RMul(0.e0,l_r_252);
      real l_r_281 = RMul(0.e0,l_r_248);
      real l_r_282 = RMul(0.e0,l_r_254);
      real l_op1_e3_l_18_283 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_184,l_r_192,l_r_200),VEC3{4}(VDot<3,4>(v_255,VEC3{4}(l_r_218,l_r_227,l_r_233)),VDot<3,4>(v_255,VEC3{4}(l_r_221,l_r_218,l_r_236)),VDot<3,4>(v_255,VEC3{4}(l_r_224,l_r_230,l_r_218)))));
      real l_vdot_284 = VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_262,l_r_257),l_r_258),l_r_259),RMul(0.1e1,l_r_244)),l_r_260),RMul(-0.1e1,l_r_250)),l_r_261),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_269,l_r_264),l_r_265),l_r_266),RMul(0.1e1,l_r_246)),l_r_267),RMul(-0.1e1,l_r_252)),l_r_268),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_276,l_r_271),l_r_272),l_r_273),RMul(0.1e1,l_r_248)),l_r_274),RMul(-0.1e1,l_r_254)),l_r_275),l_op1_e3_l_18_283)),LOAD_0(p_dPos_150));
      real l_vdot_285 = VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_262,RMul(-0.1e1,l_r_238)),l_r_258),l_r_259),l_r_277),RMul(0.1e1,l_r_249)),l_r_278),l_r_261),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_269,RMul(-0.1e1,l_r_240)),l_r_265),l_r_266),l_r_279),RMul(0.1e1,l_r_251)),l_r_280),l_r_268),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_276,RMul(-0.1e1,l_r_242)),l_r_272),l_r_273),l_r_281),RMul(0.1e1,l_r_253)),l_r_282),l_r_275),l_op1_e3_l_18_283)),LOAD_0(p_dPos_150));
      real l_vdot_286 = VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_256,RMul(0.1e1,l_r_237)),l_r_257),RMul(-0.1e1,l_r_243)),l_r_259),l_r_277),l_r_260),l_r_278),l_r_261),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_263,RMul(0.1e1,l_r_239)),l_r_264),RMul(-0.1e1,l_r_245)),l_r_266),l_r_279),l_r_267),l_r_280),l_r_268),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_270,RMul(0.1e1,l_r_241)),l_r_271),RMul(-0.1e1,l_r_247)),l_r_273),l_r_281),l_r_274),l_r_282),l_r_275),l_op1_e3_l_18_283)),LOAD_0(p_dPos_150));
      vec3{4} v_287 = VEC3{4}(l_vdot_284,l_vdot_285,l_vdot_286);
      vec3{4} v_288 = VScale<3,4>(l_time_152,v_287);
      vec3{4} v_289 = VAdd<3,4>(LOAD_0(l__t_158),v_288);
      vec3{4} v_290 = VAdd<3,4>(VAdd<3,4>(VEC3{4}(0.1e-8,0.1e-8,0.1e-8),LOAD_0(l__t_158)),v_288);
      vec3{4} v_291 = v_287;
      vec3{4} v_292 = v_289;
      if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_289)),BAnd(GT<real>(VIndex<3,4,0>(v_290),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_290),-0.e0),GT<real>(VIndex<3,4,2>(v_290),-0.e0))))) {
        tensor[3] _arg_293 = PACK(v_292);
        return ExtractFemItemN<[femData(Mesh),int,tensor[3]],femData(MeshPos),RefBuild(Mesh),"","",[],int>(l__t_156,l__t_157,_arg_293)
      } else {
        bool l__t_423;
        femData(MeshPos) l__t_420;
        vec2 v_373;
        real l_time_372;
        int l_face_371;
        real l_faceTime_370;
        real l_time_365;
        int l_face_364;
        real l_faceTime_363;
        real l_time_358;
        int l_face_357;
        real l_faceTime_356;
        real l_time_351;
        int l_face_350;
        real l_faceTime_349;
        vec2 v_339;
        real l_time_338;
        int l_face_337;
        real l_faceTime_336;
        real l_time_327;
        int l_face_326;
        real l_faceTime_325;
        real l_time_316;
        int l_face_315;
        real l_faceTime_314;
        real l_time_305;
        int l_face_304;
        real l_faceTime_303;
        int l__t_294 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(l_x_151);
        vec3{4} v_295 = VEC3{4}(0.57735026919e0,0.57735026919e0,0.57735026919e0);
        real l_op1_e3_l_27_296 = RMul(l_time_152,VDot<3,4>(v_295,v_291));
        real l__t_297 = RDiv(RSub(0.57735026919e0,VDot<3,4>(v_295,LOAD_0(l__t_158))),l_op1_e3_l_27_296);
        bool l__t_298 = GTE<real>(Abs<real>(l_op1_e3_l_27_296),0.1e-20);
        vec3{4} v_299 = v_295;
        if (BAnd(GTE<real>(l__t_297,-0.1e-15),BAnd(GT<real>(+inf,l__t_297),l__t_298))) {
          real l__t_302;
          int l__t_301;
          real l_faceTime_300;
          if (NEQ<int>(l__t_294,0)) {
            l_faceTime_300 = -inf;
            l__t_301 = 0;
            l__t_302 = l__t_297;
          } else {
            l_faceTime_300 = l__t_297;
            l__t_301 = -1;
            l__t_302 = +inf;
          }
          l_faceTime_303 = l_faceTime_300;
          l_face_304 = l__t_301;
          l_time_305 = l__t_302;
        } else {
          l_faceTime_303 = -inf;
          l_face_304 = -1;
          l_time_305 = +inf;
        }
        vec3{4} v_306 = VEC3{4}(0.1e1,0.e0,0.e0);
        real l_op1_e3_l_27_307 = RMul(l_time_152,VDot<3,4>(v_306,v_291));
        real l__t_308 = RDiv(RSub(0.e0,VDot<3,4>(v_306,LOAD_0(l__t_158))),l_op1_e3_l_27_307);
        bool l__t_309 = GTE<real>(Abs<real>(l_op1_e3_l_27_307),0.1e-20);
        vec3{4} v_310 = v_306;
        if (BAnd(GTE<real>(l__t_308,-0.1e-15),BAnd(GT<real>(l_time_305,l__t_308),l__t_309))) {
          real l__t_313;
          int l_ilit_312;
          real l_faceTime_311;
          if (NEQ<int>(l__t_294,1)) {
            l_faceTime_311 = l_faceTime_303;
            l_ilit_312 = 1;
            l__t_313 = l__t_308;
          } else {
            l_faceTime_311 = l__t_308;
            l_ilit_312 = l_face_304;
            l__t_313 = l_time_305;
          }
          l_faceTime_314 = l_faceTime_311;
          l_face_315 = l_ilit_312;
          l_time_316 = l__t_313;
        } else {
          l_faceTime_314 = l_faceTime_303;
          l_face_315 = l_face_304;
          l_time_316 = l_time_305;
        }
        vec3{4} v_317 = VEC3{4}(0.e0,-0.1e1,0.e0);
        real l_op1_e3_l_27_318 = RMul(l_time_152,VDot<3,4>(v_317,v_291));
        real l__t_319 = RDiv(RSub(0.e0,VDot<3,4>(v_317,LOAD_0(l__t_158))),l_op1_e3_l_27_318);
        bool l__t_320 = GTE<real>(Abs<real>(l_op1_e3_l_27_318),0.1e-20);
        vec3{4} v_321 = v_317;
        if (BAnd(GTE<real>(l__t_319,-0.1e-15),BAnd(GT<real>(l_time_316,l__t_319),l__t_320))) {
          real l__t_324;
          int l_ilit_323;
          real l_faceTime_322;
          if (NEQ<int>(l__t_294,2)) {
            l_faceTime_322 = l_faceTime_314;
            l_ilit_323 = 2;
            l__t_324 = l__t_319;
          } else {
            l_faceTime_322 = l__t_319;
            l_ilit_323 = l_face_315;
            l__t_324 = l_time_316;
          }
          l_faceTime_325 = l_faceTime_322;
          l_face_326 = l_ilit_323;
          l_time_327 = l__t_324;
        } else {
          l_faceTime_325 = l_faceTime_314;
          l_face_326 = l_face_315;
          l_time_327 = l_time_316;
        }
        vec3{4} v_328 = VEC3{4}(0.e0,0.e0,0.1e1);
        real l_op1_e3_l_27_329 = RMul(l_time_152,VDot<3,4>(v_328,v_291));
        real l__t_330 = RDiv(RSub(0.e0,VDot<3,4>(v_328,LOAD_0(l__t_158))),l_op1_e3_l_27_329);
        bool l__t_331 = GTE<real>(Abs<real>(l_op1_e3_l_27_329),0.1e-20);
        vec3{4} v_332 = v_328;
        if (BAnd(GTE<real>(l__t_330,-0.1e-15),BAnd(GT<real>(l_time_327,l__t_330),l__t_331))) {
          real l__t_335;
          int l_ilit_334;
          real l_faceTime_333;
          if (NEQ<int>(l__t_294,3)) {
            l_faceTime_333 = l_faceTime_325;
            l_ilit_334 = 3;
            l__t_335 = l__t_330;
          } else {
            l_faceTime_333 = l__t_330;
            l_ilit_334 = l_face_326;
            l__t_335 = l_time_327;
          }
          l_faceTime_336 = l_faceTime_333;
          l_face_337 = l_ilit_334;
          l_time_338 = l__t_335;
        } else {
          l_faceTime_336 = l_faceTime_325;
          l_face_337 = l_face_326;
          l_time_338 = l_time_327;
        }
        if (NEQ<int>(l_face_337,-1)) {
          v_339 = VEC2(Max<real>(l_time_338,0.e0),IntToReal(l_face_337));
        } else {
          vec2 v_340;
          if (EQ<real>(-inf,l_faceTime_336)) {
            v_340 = VEC2(-0.1e1,-0.1e1);
          } else {
            v_340 = VEC2(l_faceTime_336,IntToReal(l__t_294));
          }
          v_339 = v_340;
        }
        real l_eTime_341 = VIndex<2,2,0>(v_339);
        real l_time_342 = RSub(l_time_152,RMul(l_time_152,l_eTime_341));
        &tensor[3] l__t_343 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_x_151);
        real l__t_344 = RDiv(RSub(0.57735026919e0,VDot<3,4>(v_299,LOAD_0(l__t_343))),l_op1_e3_l_27_296);
        int l__t_345 = ExtractFemItem<int,CellIndex(Mesh)>(l_x_151);
        if (BAnd(GTE<real>(l__t_344,-0.1e-15),BAnd(GT<real>(+inf,l__t_344),l__t_298))) {
          real l__t_348;
          int l__t_347;
          real l_faceTime_346;
          if (NEQ<int>(l__t_294,0)) {
            l_faceTime_346 = -inf;
            l__t_347 = 0;
            l__t_348 = l__t_344;
          } else {
            l_faceTime_346 = l__t_344;
            l__t_347 = -1;
            l__t_348 = +inf;
          }
          l_faceTime_349 = l_faceTime_346;
          l_face_350 = l__t_347;
          l_time_351 = l__t_348;
        } else {
          l_faceTime_349 = -inf;
          l_face_350 = -1;
          l_time_351 = +inf;
        }
        real l__t_352 = RDiv(RSub(0.e0,VDot<3,4>(v_310,LOAD_0(l__t_343))),l_op1_e3_l_27_307);
        if (BAnd(GTE<real>(l__t_352,-0.1e-15),BAnd(GT<real>(l_time_351,l__t_352),l__t_309))) {
          real l__t_355;
          int l_ilit_354;
          real l_faceTime_353;
          if (NEQ<int>(l__t_294,1)) {
            l_faceTime_353 = l_faceTime_349;
            l_ilit_354 = 1;
            l__t_355 = l__t_352;
          } else {
            l_faceTime_353 = l__t_352;
            l_ilit_354 = l_face_350;
            l__t_355 = l_time_351;
          }
          l_faceTime_356 = l_faceTime_353;
          l_face_357 = l_ilit_354;
          l_time_358 = l__t_355;
        } else {
          l_faceTime_356 = l_faceTime_349;
          l_face_357 = l_face_350;
          l_time_358 = l_time_351;
        }
        real l__t_359 = RDiv(RSub(0.e0,VDot<3,4>(v_321,LOAD_0(l__t_343))),l_op1_e3_l_27_318);
        if (BAnd(GTE<real>(l__t_359,-0.1e-15),BAnd(GT<real>(l_time_358,l__t_359),l__t_320))) {
          real l__t_362;
          int l_ilit_361;
          real l_faceTime_360;
          if (NEQ<int>(l__t_294,2)) {
            l_faceTime_360 = l_faceTime_356;
            l_ilit_361 = 2;
            l__t_362 = l__t_359;
          } else {
            l_faceTime_360 = l__t_359;
            l_ilit_361 = l_face_357;
            l__t_362 = l_time_358;
          }
          l_faceTime_363 = l_faceTime_360;
          l_face_364 = l_ilit_361;
          l_time_365 = l__t_362;
        } else {
          l_faceTime_363 = l_faceTime_356;
          l_face_364 = l_face_357;
          l_time_365 = l_time_358;
        }
        real l__t_366 = RDiv(RSub(0.e0,VDot<3,4>(v_332,LOAD_0(l__t_343))),l_op1_e3_l_27_329);
        if (BAnd(GTE<real>(l__t_366,-0.1e-15),BAnd(GT<real>(l_time_365,l__t_366),l__t_331))) {
          real l__t_369;
          int l_ilit_368;
          real l_faceTime_367;
          if (NEQ<int>(l__t_294,3)) {
            l_faceTime_367 = l_faceTime_363;
            l_ilit_368 = 3;
            l__t_369 = l__t_366;
          } else {
            l_faceTime_367 = l__t_366;
            l_ilit_368 = l_face_364;
            l__t_369 = l_time_365;
          }
          l_faceTime_370 = l_faceTime_367;
          l_face_371 = l_ilit_368;
          l_time_372 = l__t_369;
        } else {
          l_faceTime_370 = l_faceTime_363;
          l_face_371 = l_face_364;
          l_time_372 = l_time_365;
        }
        if (NEQ<int>(l_face_371,-1)) {
          v_373 = VEC2(Max<real>(l_time_372,0.e0),IntToReal(l_face_371));
        } else {
          vec2 v_374;
          if (EQ<real>(-inf,l_faceTime_370)) {
            v_374 = VEC2(-0.1e1,-0.1e1);
          } else {
            v_374 = VEC2(l_faceTime_370,IntToReal(l__t_294));
          }
          v_373 = v_374;
        }
        int l__t_375 = RealToInt(RFloor(VIndex<2,2,1>(v_373)));
        int[2] l__t_376 = nextCell4$6219(l__t_375,l__t_345,l__t_154);
        int l__t_377 = Subscript<int[2]>(l__t_376,0);
        if (NEQ<int>(-1,l__t_377)) {
          int l__t_378 = Subscript<int[2]>(l__t_376,1);
          tensor[4,4] l__t_379 = <tensor[4,4]>[0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.971445146547e-16,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_380 = <tensor[4,4]>[0.57735026919e0,0.57735026919e0,0.57735026919e0,-0.57735026919e0,-0.333333333333e0,0.666666666667e0,-0.333333333333e0,0.333333333333e0,-0.333333333333e0,-0.333333333333e0,0.666666666667e0,0.333333333333e0,0.971445146547e-16,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_381 = <tensor[4,4]>[-0.333333333333e0,0.666666666667e0,-0.333333333333e0,0.333333333333e0,-0.57735026919e0,-0.57735026919e0,-0.57735026919e0,0.57735026919e0,-0.333333333333e0,-0.333333333333e0,0.666666666667e0,0.333333333333e0,0.971445146547e-16,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_382 = <tensor[4,4]>[-0.333333333333e0,0.666666666667e0,-0.333333333333e0,0.333333333333e0,-0.333333333333e0,-0.333333333333e0,0.666666666667e0,0.333333333333e0,0.57735026919e0,0.57735026919e0,0.57735026919e0,-0.57735026919e0,0.971445146547e-16,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_383 = <tensor[4,4]>[0.57735026919e0,-0.1e1,-0.1e1,0.1e1,0.57735026919e0,0.1e1,0.e0,0.e0,0.57735026919e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_384 = <tensor[4,4]>[0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_385 = <tensor[4,4]>[0.e0,0.1e1,0.e0,0.e0,-0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_386 = <tensor[4,4]>[0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_387 = <tensor[4,4]>[-0.1e1,-0.57735026919e0,-0.1e1,0.1e1,0.1e1,-0.57735026919e0,0.e0,0.e0,0.e0,-0.57735026919e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_388 = <tensor[4,4]>[0.e0,-0.1e1,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_389 = <tensor[4,4]>[0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,-0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_390 = <tensor[4,4]>[-0.1e1,-0.1e1,0.57735026919e0,0.1e1,0.1e1,0.e0,0.57735026919e0,0.e0,0.e0,0.1e1,0.57735026919e0,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_391 = <tensor[4,4]>[0.e0,0.e0,0.1e1,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_392 = <tensor[4,4]>[0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,-0.1e1,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4][4] t_393 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_390)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_391)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_392)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384))};
          tensor[4,4][4] t_394 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_387)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_388)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_389))};
          tensor[4,4][4] t_395 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_383)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_385)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_386))};
          tensor[4,4][4] t_396 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_379)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_380)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_381)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_382))};
          tensor[4,4][4][4] t_397 = <tensor[4,4][4][4]>{t_396,t_395,t_394,t_393};
          print("face ",l__t_375," to ",l__t_378,"\n","got: ",Subscript<tensor[4,4][4]>(Subscript<tensor[4,4][4][4]>(t_397,l__t_375),l__t_378),"\n");
          tensor[4,4][4] t_398 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_390)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_391)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_392)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384))};
          tensor[4,4][4] t_399 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_387)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_388)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_389))};
          tensor[4,4][4] t_400 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_383)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_385)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_386))};
          tensor[4,4][4] t_401 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_379)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_380)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_381)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_382))};
          tensor[4,4][4][4] t_402 = <tensor[4,4][4][4]>{t_401,t_400,t_399,t_398};
          &tensor[4,4] l__t_403 = Subscript<tensor[4,4][4]>(Subscript<tensor[4,4][4][4]>(t_402,l__t_375),l__t_378);
          real l_r_404 = RMul(VIndex<2,2,0>(v_373),l_time_152);
          vec3{4} v_405 = VAdd<3,4>(VEC3{4}(RMul(l_r_404,l_vdot_284),RMul(l_r_404,l_vdot_285),RMul(l_r_404,l_vdot_286)),LOAD_0(l__t_343));
          vec4 v_406 = VEC4(VIndex<3,4,0>(v_405),VIndex<3,4,1>(v_405),VIndex<3,4,2>(v_405),0.1e1);
          tensor[4,4][4] t_407 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_390)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_391)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_392)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384))};
          tensor[4,4][4] t_408 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_387)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_388)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_389))};
          tensor[4,4][4] t_409 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_383)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_385)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_386))};
          tensor[4,4][4] t_410 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_379)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_380)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_381)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_382))};
          tensor[4,4][4][4] t_411 = <tensor[4,4][4][4]>{t_410,t_409,t_408,t_407};
          &tensor[4,4] l__t_412 = Subscript<tensor[4,4][4]>(Subscript<tensor[4,4][4][4]>(t_411,l__t_375),l__t_378);
          tensor[4,4][4] t_413 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_390)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_391)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_392)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384))};
          tensor[4,4][4] t_414 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_387)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_388)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_389))};
          tensor[4,4][4] t_415 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_383)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_385)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_386))};
          tensor[4,4][4] t_416 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_379)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_380)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_381)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_382))};
          tensor[4,4][4][4] t_417 = <tensor[4,4][4][4]>{t_416,t_415,t_414,t_413};
          &tensor[4,4] l__t_418 = Subscript<tensor[4,4][4]>(Subscript<tensor[4,4][4][4]>(t_417,l__t_375),l__t_378);
          tensor[3] _arg_419 = PACK(VEC3{4}(VIndex<4,4,0>(VEC4(VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[0]>(l__t_403)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[1]>(l__t_403)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[2]>(l__t_403)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[3]>(l__t_403)),v_406))),VIndex<4,4,1>(VEC4(VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[0]>(l__t_412)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[1]>(l__t_412)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[2]>(l__t_412)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[3]>(l__t_412)),v_406))),VIndex<4,4,2>(VEC4(VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[0]>(l__t_418)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[1]>(l__t_418)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[2]>(l__t_418)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[3]>(l__t_418)),v_406)))));
          l__t_420 = ExtractFemItemN<[femData(Mesh),int,tensor[3],int],femData(MeshPos),RefBuild(Mesh),"","",[],int>(l__t_154,l__t_377,_arg_419,l__t_378);
        } else {
          real l_r_421 = RMul(VIndex<2,2,0>(v_373),l_time_152);
          tensor[3] _arg_422 = PACK(VAdd<3,4>(VEC3{4}(RMul(l_r_421,l_vdot_284),RMul(l_r_421,l_vdot_285),RMul(l_r_421,l_vdot_286)),LOAD_0(l__t_343)));
          l__t_420 = ExtractFemItemN<[femData(Mesh),tensor[3]],femData(MeshPos),InvalidBuildBoundary(MeshPos),"","",[],int>(l__t_154,_arg_422);
        }
        if (BNot(ExtractFemItem<bool,Valid(MeshPos)>(l__t_420))) {
          l__t_423 = true;
        } else {
          bool l__t_424;
          if (LT<real>(l_eTime_341,0.e0)) {
            l__t_424 = true;
          } else {
            bool l__t_425;
            if (GT<real>(l_eTime_341,0.1e1)) {
              l__t_425 = true;
            } else {
              l__t_425 = LT<real>(l_time_342,globals.timeEps);
            }
            l__t_424 = l__t_425;
          }
          l__t_423 = l__t_424;
        }
        if (l__t_423) {
          return l__t_420
        }
        l_nmp_426 = l__t_420;
        l_time_427 = l_time_342;
      }
      l_x_151 = l_nmp_426;
      l_time_152 = l_time_427;
    }
    print("Took stupid way out!\n");
    &tensor[3] l__t_428 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(p_x_149);
    femData(Mesh) l__t_429 = ExtractFem<femData(Mesh),femData(MeshPos)>(p_x_149);
    int l_mulRes_430 = IMul(ExtractFemItem<int,CellIndex(MeshPos)>(p_x_149),4);
    int t_431 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_429,l_mulRes_430);
    int l_mulRes_432 = IMul(3,t_431);
    int t_433 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_429,IAdd(l_mulRes_430,1));
    int l_mulRes_434 = IMul(3,t_433);
    int t_435 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_429,IAdd(l_mulRes_430,2));
    int l_mulRes_436 = IMul(3,t_435);
    int t_437 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_429,IAdd(l_mulRes_430,3));
    int l_mulRes_438 = IMul(3,t_437);
    real l_prod_439 = RMul(0.1e1,0.1e1);
    real l_prod_440 = RMul(VIndex<3,4,0>(LOAD_0(l__t_428)),l_prod_439);
    real l_prod_441 = RMul(0.1e1,RMul(VIndex<3,4,1>(LOAD_0(l__t_428)),0.1e1));
    real l_prod_442 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(LOAD_0(l__t_428))));
    real l_sum_443 = RAdd(RMul(0.1e1,RMul(0.1e1,l_prod_439)),RAdd(RMul(-0.1e1,l_prod_442),RAdd(RMul(-0.1e1,l_prod_441),RMul(-0.1e1,l_prod_440))));
    real l_basisEval_444 = RMul(0.1e1,l_prod_440);
    real l_basisEval_445 = RMul(0.1e1,l_prod_441);
    real l_basisEval_446 = RMul(0.1e1,l_prod_442);
    real t_447 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,l_mulRes_432);
    real t_448 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,l_mulRes_434);
    real t_449 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,l_mulRes_436);
    real t_450 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,l_mulRes_438);
    real t_451 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(1,l_mulRes_432));
    real t_452 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(1,l_mulRes_434));
    real t_453 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(1,l_mulRes_436));
    real t_454 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(1,l_mulRes_438));
    real t_455 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(2,l_mulRes_432));
    real t_456 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(2,l_mulRes_434));
    real t_457 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(2,l_mulRes_436));
    real t_458 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(2,l_mulRes_438));
    tensor[3] _arg_459 = PACK(VAdd<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(t_447,l_sum_443),RMul(t_448,l_basisEval_444)),RMul(t_449,l_basisEval_445)),RMul(t_450,l_basisEval_446)),RAdd(RAdd(RAdd(RMul(t_451,l_sum_443),RMul(t_452,l_basisEval_444)),RMul(t_453,l_basisEval_445)),RMul(t_454,l_basisEval_446)),RAdd(RAdd(RAdd(RMul(t_455,l_sum_443),RMul(t_456,l_basisEval_444)),RMul(t_457,l_basisEval_445)),RMul(t_458,l_basisEval_446))),LOAD_0(p_dPos_150)));
    femData(MeshPos) l_cmp_460 = findPos$6215(globals.meshData,_arg_459);
    return l_cmp_460
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_461;
    l__t_461 = <femData(MeshCell)[]>{};
    for i__t_462 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.meshData),1) {
      l__t_461 = Append<femData(MeshCell),femData(MeshCell)>(l__t_461,LoadFem<femData(MeshCell)>(globals.meshData,i__t_462));
    }
    femData(FemFunc) l_data_463 = LoadFem<femData(FemFunc)>(globals.0data03AD_intermedateGlobal,LoadFem<femData(Space)>(globals.0space03AB_intermedateGlobal,globals.meshData));
    globals.data = l_data_463;
    femData(Space) l__t_464 = ExtractFem<femData(Space),femData(FemFunc)>(l_data_463);
    globals._t = ExtractFem<femData(Mesh),femData(Space)>(l__t_464);
    globals._tX = l__t_464;
  }
//***** STRAND *****
strand gg (&tensor[3] p_startPos_465) {
  varying output tensor[3][] stream;
  varying output tensor[3][] newStream;
  varying int step;
  varying femData(MeshPos) cPos;
  varying tensor[3] altCPos;
  tensor[3] startPos;
  initialize (world, globals) {
    tensor[3][1] t_467 = <tensor[3][1]>{TensorCopy<[3]>(p_startPos_465)};
    tensor[3][] l__t_466 = MkDynamic<tensor[3],1>(t_467);
    tensor[3][1] t_469 = <tensor[3][1]>{TensorCopy<[3]>(p_startPos_465)};
    tensor[3][] l__t_468 = MkDynamic<tensor[3],1>(t_469);
    femData(MeshPos) l_cPos_470 = findPos$6215(globals.meshData,p_startPos_465);
    self.stream = l__t_466;
    self.newStream = l__t_468;
    self.step = 0;
    self.cPos = l_cPos_470;
    self.altCPos = TensorCopy<[3]>(p_startPos_465);
    self.startPos = TensorCopy<[3]>(p_startPos_465);
  }
  update (world, globals) {
    vec3{4} v_786;
    bool l__t_693;
    vec3{4} v_598;
    bool l__t_472;
    bool l__t_471 = ExtractFemItem<bool,Valid(MeshPos)>(self.cPos);
    if (BNot(l__t_471)) {
      l__t_472 = true;
    } else {
      bool l__t_474;
      femData(MeshPos) l__t_473 = findPos$6215(globals.meshData,TensorRef<[3]>(self.altCPos));
      if (BNot(ExtractFemItem<bool,Valid(MeshPos)>(l__t_473))) {
        l__t_474 = true;
      } else {
        l__t_474 = EQ<int>(self.step,globals.stepMax);
      }
      l__t_472 = l__t_474;
    }
    if (l__t_472) {
      stabilize;
    }
    &tensor[3] l__t_475 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(self.cPos);
    int l__t_476 = ExtractFemItem<int,CellIndex(MeshPos)>(self.cPos);
    femData(Mesh) l__t_477 = ExtractFem<femData(Mesh),femData(MeshPos)>(self.cPos);
    int l_mulRes_478 = IMul(l__t_476,4);
    int t_479 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_477,l_mulRes_478);
    int l_mulRes_480 = IMul(3,t_479);
    int t_481 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_477,IAdd(l_mulRes_478,1));
    int l_mulRes_482 = IMul(3,t_481);
    int t_483 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_477,IAdd(l_mulRes_478,2));
    int l_mulRes_484 = IMul(3,t_483);
    int t_485 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_477,IAdd(l_mulRes_478,3));
    int l_mulRes_486 = IMul(3,t_485);
    real l_varAcc_487 = VIndex<3,4,0>(LOAD_0(l__t_475));
    real l_varAcc_488 = VIndex<3,4,1>(LOAD_0(l__t_475));
    real l_varAcc_489 = VIndex<3,4,2>(LOAD_0(l__t_475));
    real l_prod_490 = RMul(0.1e1,0.1e1);
    real l_prod_491 = RMul(l_varAcc_487,l_prod_490);
    real l_prod_492 = RMul(l_varAcc_488,0.1e1);
    real l_prod_493 = RMul(0.1e1,l_prod_492);
    real l_prod_494 = RMul(0.1e1,l_varAcc_489);
    real l_prod_495 = RMul(0.1e1,l_prod_494);
    real l_mult_496 = RMul(0.1e1,RMul(0.1e1,l_prod_490));
    real l_mult_497 = RMul(-0.1e1,l_prod_495);
    real l_mult_498 = RMul(-0.1e1,l_prod_493);
    real l_mult_499 = RMul(-0.1e1,l_prod_491);
    real l_sum_500 = RAdd(l_mult_496,RAdd(l_mult_497,RAdd(l_mult_498,l_mult_499)));
    real l_basisEval_501 = RMul(0.1e1,l_prod_491);
    real l_basisEval_502 = RMul(0.1e1,l_prod_493);
    real l_basisEval_503 = RMul(0.1e1,l_prod_495);
    real t_504 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,l_mulRes_480);
    real t_505 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,l_mulRes_482);
    real t_506 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,l_mulRes_484);
    real t_507 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,l_mulRes_486);
    real t_508 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(1,l_mulRes_480));
    real t_509 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(1,l_mulRes_482));
    real t_510 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(1,l_mulRes_484));
    real t_511 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(1,l_mulRes_486));
    real t_512 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(2,l_mulRes_480));
    real t_513 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(2,l_mulRes_482));
    real t_514 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(2,l_mulRes_484));
    real t_515 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(2,l_mulRes_486));
    vec3{4} v_516 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(t_504,l_sum_500),RMul(t_505,l_basisEval_501)),RMul(t_506,l_basisEval_502)),RMul(t_507,l_basisEval_503)),RAdd(RAdd(RAdd(RMul(t_508,l_sum_500),RMul(t_509,l_basisEval_501)),RMul(t_510,l_basisEval_502)),RMul(t_511,l_basisEval_503)),RAdd(RAdd(RAdd(RMul(t_512,l_sum_500),RMul(t_513,l_basisEval_501)),RMul(t_514,l_basisEval_502)),RMul(t_515,l_basisEval_503))),LOAD_0(TensorRef<[3]>(self.altCPos)));
    if (GT<real>(Sqrt(VDot<3,4>(v_516,v_516)),0.1e-5)) {
      print("Error in tracing: At step:",self.step," with particle:",TensorRef<[3]>(self.startPos),"\n");
    } else {
      print("fine in cell:",LoadFem<femData(MeshCell)>(l__t_477,l__t_476),"\n");
    }
    if (l__t_471) {
      femData(FuncCell) l__t_517 = LoadFem<femData(FuncCell)>(globals.data,ExtractFemItem<int,CellIndex(MeshCell)>(LoadFem<femData(MeshCell)>(l__t_477,l__t_476)));
      femData(FemFunc) l__t_518 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_517);
      femData(Space) l__t_519 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_518);
      int l_mulRes_520 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(l__t_517),10);
      int t_521 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,l_mulRes_520);
      int l_mulRes_522 = IMul(3,t_521);
      int t_523 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,1));
      int l_mulRes_524 = IMul(3,t_523);
      int t_525 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,2));
      int l_mulRes_526 = IMul(3,t_525);
      int t_527 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,3));
      int l_mulRes_528 = IMul(3,t_527);
      int t_529 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,4));
      int l_mulRes_530 = IMul(3,t_529);
      int t_531 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,5));
      int l_mulRes_532 = IMul(3,t_531);
      int t_533 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,6));
      int l_mulRes_534 = IMul(3,t_533);
      int t_535 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,7));
      int l_mulRes_536 = IMul(3,t_535);
      int t_537 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,8));
      int l_mulRes_538 = IMul(3,t_537);
      int t_539 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,9));
      int l_mulRes_540 = IMul(3,t_539);
      real l_prod_541 = RMul(RMul(l_varAcc_487,l_varAcc_487),l_prod_490);
      real l_prod_542 = RMul(l_varAcc_487,l_prod_492);
      real l_prod_543 = RMul(l_varAcc_487,l_prod_494);
      real l_prod_544 = RMul(0.1e1,RMul(RMul(l_varAcc_488,l_varAcc_488),0.1e1));
      real l_prod_545 = RMul(0.1e1,RMul(l_varAcc_488,l_varAcc_489));
      real l_prod_546 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_489,l_varAcc_489)));
      real l_mult_547 = RMul(0.2e1,l_prod_546);
      real l_mult_548 = RMul(0.4e1,l_prod_545);
      real l_mult_549 = RMul(0.2e1,l_prod_544);
      real l_mult_550 = RMul(0.4e1,l_prod_543);
      real l_mult_551 = RMul(0.4e1,l_prod_542);
      real l_mult_552 = RMul(0.2e1,l_prod_541);
      real l_sum_553 = RAdd(l_mult_496,RAdd(RMul(-0.3e1,l_prod_495),RAdd(l_mult_547,RAdd(RMul(-0.3e1,l_prod_493),RAdd(l_mult_548,RAdd(l_mult_549,RAdd(RMul(-0.3e1,l_prod_491),RAdd(l_mult_550,RAdd(l_mult_551,l_mult_552)))))))));
      real l_sum_554 = RAdd(l_mult_499,l_mult_552);
      real l_sum_555 = RAdd(l_mult_498,l_mult_549);
      real l_sum_556 = RAdd(l_mult_497,l_mult_547);
      real l_mult_557 = RMul(-0.4e1,l_prod_545);
      real l_mult_558 = RMul(-0.4e1,l_prod_543);
      real l_sum_559 = RAdd(RMul(0.4e1,l_prod_495),RAdd(RMul(-0.4e1,l_prod_546),RAdd(l_mult_557,l_mult_558)));
      real l_mult_560 = RMul(-0.4e1,l_prod_542);
      real l_sum_561 = RAdd(RMul(0.4e1,l_prod_493),RAdd(l_mult_557,RAdd(RMul(-0.4e1,l_prod_544),l_mult_560)));
      real l_sum_562 = RAdd(RMul(0.4e1,l_prod_491),RAdd(l_mult_558,RAdd(l_mult_560,RMul(-0.4e1,l_prod_541))));
      real t_563 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_522);
      real t_564 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_524);
      real t_565 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_526);
      real t_566 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_528);
      real t_567 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_530);
      real t_568 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_532);
      real t_569 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_534);
      real t_570 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_536);
      real t_571 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_538);
      real t_572 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_540);
      real l_r_573 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_563,l_sum_553),RMul(t_564,l_sum_554)),RMul(t_565,l_sum_555)),RMul(t_566,l_sum_556)),RMul(t_567,l_mult_548)),RMul(t_568,l_mult_550)),RMul(t_569,l_mult_551)),RMul(t_570,l_sum_559)),RMul(t_571,l_sum_561)),RMul(t_572,l_sum_562));
      real t_574 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_522));
      real t_575 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_524));
      real t_576 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_526));
      real t_577 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_528));
      real t_578 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_530));
      real t_579 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_532));
      real t_580 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_534));
      real t_581 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_536));
      real t_582 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_538));
      real t_583 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_540));
      real l_r_584 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_574,l_sum_553),RMul(t_575,l_sum_554)),RMul(t_576,l_sum_555)),RMul(t_577,l_sum_556)),RMul(t_578,l_mult_548)),RMul(t_579,l_mult_550)),RMul(t_580,l_mult_551)),RMul(t_581,l_sum_559)),RMul(t_582,l_sum_561)),RMul(t_583,l_sum_562));
      real t_585 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_522));
      real t_586 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_524));
      real t_587 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_526));
      real t_588 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_528));
      real t_589 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_530));
      real t_590 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_532));
      real t_591 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_534));
      real t_592 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_536));
      real t_593 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_538));
      real t_594 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_540));
      real l_r_595 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_585,l_sum_553),RMul(t_586,l_sum_554)),RMul(t_587,l_sum_555)),RMul(t_588,l_sum_556)),RMul(t_589,l_mult_548)),RMul(t_590,l_mult_550)),RMul(t_591,l_mult_551)),RMul(t_592,l_sum_559)),RMul(t_593,l_sum_561)),RMul(t_594,l_sum_562));
      vec3{4} v_596 = VEC3{4}(l_r_573,l_r_584,l_r_595);
      real l_r_597 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_596,v_596)));
      v_598 = VEC3{4}(RMul(l_r_597,l_r_573),RMul(l_r_597,l_r_584),RMul(l_r_597,l_r_595));
    } else {
      v_598 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    real l_r_599 = RMul(0.5e0,globals.stepSize);
    tensor[3] _arg_600 = PACK(VEC3{4}(RMul(l_r_599,VIndex<3,4,0>(v_598)),RMul(l_r_599,VIndex<3,4,1>(v_598)),RMul(l_r_599,VIndex<3,4,2>(v_598))));
    femData(MeshPos) l_intermed_601 = posMove$643E(self.cPos,_arg_600);
    femData(MeshPos) l_callFindPos_602 = findPos$6215(globals._t,TensorRef<[3]>(self.altCPos));
    &tensor[3] l_refPos_603 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_602);
    int l_mulRes_604 = IMul(ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_602),10);
    int t_605 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_604);
    int l_mulRes_606 = IMul(3,t_605);
    int t_607 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,1));
    int l_mulRes_608 = IMul(3,t_607);
    int t_609 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,2));
    int l_mulRes_610 = IMul(3,t_609);
    int t_611 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,3));
    int l_mulRes_612 = IMul(3,t_611);
    int t_613 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,4));
    int l_mulRes_614 = IMul(3,t_613);
    int t_615 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,5));
    int l_mulRes_616 = IMul(3,t_615);
    int t_617 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,6));
    int l_mulRes_618 = IMul(3,t_617);
    int t_619 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,7));
    int l_mulRes_620 = IMul(3,t_619);
    int t_621 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,8));
    int l_mulRes_622 = IMul(3,t_621);
    int t_623 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,9));
    int l_mulRes_624 = IMul(3,t_623);
    real l_varAcc_625 = VIndex<3,4,0>(LOAD_0(l_refPos_603));
    real l_varAcc_626 = VIndex<3,4,1>(LOAD_0(l_refPos_603));
    real l_varAcc_627 = VIndex<3,4,2>(LOAD_0(l_refPos_603));
    real l_prod_628 = RMul(RMul(l_varAcc_625,l_varAcc_625),l_prod_490);
    real l_prod_629 = RMul(l_varAcc_626,0.1e1);
    real l_prod_630 = RMul(l_varAcc_625,l_prod_629);
    real l_prod_631 = RMul(0.1e1,l_varAcc_627);
    real l_prod_632 = RMul(l_varAcc_625,l_prod_631);
    real l_prod_633 = RMul(l_varAcc_625,l_prod_490);
    real l_prod_634 = RMul(0.1e1,RMul(RMul(l_varAcc_626,l_varAcc_626),0.1e1));
    real l_prod_635 = RMul(0.1e1,RMul(l_varAcc_626,l_varAcc_627));
    real l_prod_636 = RMul(0.1e1,l_prod_629);
    real l_prod_637 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_627,l_varAcc_627)));
    real l_prod_638 = RMul(0.1e1,l_prod_631);
    real l_mult_639 = RMul(0.2e1,l_prod_637);
    real l_mult_640 = RMul(0.4e1,l_prod_635);
    real l_mult_641 = RMul(0.2e1,l_prod_634);
    real l_mult_642 = RMul(0.4e1,l_prod_632);
    real l_mult_643 = RMul(0.4e1,l_prod_630);
    real l_mult_644 = RMul(0.2e1,l_prod_628);
    real l_sum_645 = RAdd(l_mult_496,RAdd(RMul(-0.3e1,l_prod_638),RAdd(l_mult_639,RAdd(RMul(-0.3e1,l_prod_636),RAdd(l_mult_640,RAdd(l_mult_641,RAdd(RMul(-0.3e1,l_prod_633),RAdd(l_mult_642,RAdd(l_mult_643,l_mult_644)))))))));
    real l_sum_646 = RAdd(RMul(-0.1e1,l_prod_633),l_mult_644);
    real l_sum_647 = RAdd(RMul(-0.1e1,l_prod_636),l_mult_641);
    real l_sum_648 = RAdd(RMul(-0.1e1,l_prod_638),l_mult_639);
    real l_mult_649 = RMul(-0.4e1,l_prod_635);
    real l_mult_650 = RMul(-0.4e1,l_prod_632);
    real l_sum_651 = RAdd(RMul(0.4e1,l_prod_638),RAdd(RMul(-0.4e1,l_prod_637),RAdd(l_mult_649,l_mult_650)));
    real l_mult_652 = RMul(-0.4e1,l_prod_630);
    real l_sum_653 = RAdd(RMul(0.4e1,l_prod_636),RAdd(l_mult_649,RAdd(RMul(-0.4e1,l_prod_634),l_mult_652)));
    real l_sum_654 = RAdd(RMul(0.4e1,l_prod_633),RAdd(l_mult_650,RAdd(l_mult_652,RMul(-0.4e1,l_prod_628))));
    real t_655 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_606);
    real t_656 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_608);
    real t_657 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_610);
    real t_658 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_612);
    real t_659 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_614);
    real t_660 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_616);
    real t_661 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_618);
    real t_662 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_620);
    real t_663 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_622);
    real t_664 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_624);
    real l_r_665 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_655,l_sum_645),RMul(t_656,l_sum_646)),RMul(t_657,l_sum_647)),RMul(t_658,l_sum_648)),RMul(t_659,l_mult_640)),RMul(t_660,l_mult_642)),RMul(t_661,l_mult_643)),RMul(t_662,l_sum_651)),RMul(t_663,l_sum_653)),RMul(t_664,l_sum_654));
    real t_666 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_606));
    real t_667 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_608));
    real t_668 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_610));
    real t_669 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_612));
    real t_670 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_614));
    real t_671 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_616));
    real t_672 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_618));
    real t_673 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_620));
    real t_674 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_622));
    real t_675 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_624));
    real l_r_676 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_666,l_sum_645),RMul(t_667,l_sum_646)),RMul(t_668,l_sum_647)),RMul(t_669,l_sum_648)),RMul(t_670,l_mult_640)),RMul(t_671,l_mult_642)),RMul(t_672,l_mult_643)),RMul(t_673,l_sum_651)),RMul(t_674,l_sum_653)),RMul(t_675,l_sum_654));
    real t_677 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_606));
    real t_678 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_608));
    real t_679 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_610));
    real t_680 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_612));
    real t_681 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_614));
    real t_682 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_616));
    real t_683 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_618));
    real t_684 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_620));
    real t_685 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_622));
    real t_686 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_624));
    real l_r_687 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_677,l_sum_645),RMul(t_678,l_sum_646)),RMul(t_679,l_sum_647)),RMul(t_680,l_sum_648)),RMul(t_681,l_mult_640)),RMul(t_682,l_mult_642)),RMul(t_683,l_mult_643)),RMul(t_684,l_sum_651)),RMul(t_685,l_sum_653)),RMul(t_686,l_sum_654));
    vec3{4} v_688 = VEC3{4}(l_r_665,l_r_676,l_r_687);
    real l_r_689 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_688,v_688)));
    vec3{4} v_690 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.altCPos)),VEC3{4}(RMul(l_r_689,RMul(l_r_599,l_r_665)),RMul(l_r_689,RMul(l_r_599,l_r_676)),RMul(l_r_689,RMul(l_r_599,l_r_687))));
    bool l__t_691 = ExtractFemItem<bool,Valid(MeshPos)>(l_intermed_601);
    vec3{4} v_692 = v_690;
    if (BNot(l__t_691)) {
      l__t_693 = true;
    } else {
      tensor[3] _arg_694 = PACK(v_692);
      femData(MeshPos) l__t_695 = findPos$6215(globals.meshData,_arg_694);
      l__t_693 = BNot(ExtractFemItem<bool,Valid(MeshPos)>(l__t_695));
    }
    if (l__t_693) {
      stabilize;
    }
    if (l__t_691) {
      &tensor[3] l_ref_696 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(l_intermed_601);
      femData(FuncCell) l__t_697 = LoadFem<femData(FuncCell)>(globals.data,ExtractFemItem<int,CellIndex(MeshCell)>(LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l_intermed_601),ExtractFemItem<int,CellIndex(MeshPos)>(l_intermed_601))));
      femData(FemFunc) l__t_698 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_697);
      femData(Space) l__t_699 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_698);
      int l_mulRes_700 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(l__t_697),10);
      int t_701 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,l_mulRes_700);
      int l_mulRes_702 = IMul(3,t_701);
      int t_703 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,1));
      int l_mulRes_704 = IMul(3,t_703);
      int t_705 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,2));
      int l_mulRes_706 = IMul(3,t_705);
      int t_707 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,3));
      int l_mulRes_708 = IMul(3,t_707);
      int t_709 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,4));
      int l_mulRes_710 = IMul(3,t_709);
      int t_711 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,5));
      int l_mulRes_712 = IMul(3,t_711);
      int t_713 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,6));
      int l_mulRes_714 = IMul(3,t_713);
      int t_715 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,7));
      int l_mulRes_716 = IMul(3,t_715);
      int t_717 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,8));
      int l_mulRes_718 = IMul(3,t_717);
      int t_719 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,9));
      int l_mulRes_720 = IMul(3,t_719);
      real l_varAcc_721 = VIndex<3,4,0>(LOAD_0(l_ref_696));
      real l_varAcc_722 = VIndex<3,4,1>(LOAD_0(l_ref_696));
      real l_varAcc_723 = VIndex<3,4,2>(LOAD_0(l_ref_696));
      real l_prod_724 = RMul(RMul(l_varAcc_721,l_varAcc_721),l_prod_490);
      real l_prod_725 = RMul(l_varAcc_722,0.1e1);
      real l_prod_726 = RMul(l_varAcc_721,l_prod_725);
      real l_prod_727 = RMul(0.1e1,l_varAcc_723);
      real l_prod_728 = RMul(l_varAcc_721,l_prod_727);
      real l_prod_729 = RMul(l_varAcc_721,l_prod_490);
      real l_prod_730 = RMul(0.1e1,RMul(RMul(l_varAcc_722,l_varAcc_722),0.1e1));
      real l_prod_731 = RMul(0.1e1,RMul(l_varAcc_722,l_varAcc_723));
      real l_prod_732 = RMul(0.1e1,l_prod_725);
      real l_prod_733 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_723,l_varAcc_723)));
      real l_prod_734 = RMul(0.1e1,l_prod_727);
      real l_mult_735 = RMul(0.2e1,l_prod_733);
      real l_mult_736 = RMul(0.4e1,l_prod_731);
      real l_mult_737 = RMul(0.2e1,l_prod_730);
      real l_mult_738 = RMul(0.4e1,l_prod_728);
      real l_mult_739 = RMul(0.4e1,l_prod_726);
      real l_mult_740 = RMul(0.2e1,l_prod_724);
      real l_sum_741 = RAdd(l_mult_496,RAdd(RMul(-0.3e1,l_prod_734),RAdd(l_mult_735,RAdd(RMul(-0.3e1,l_prod_732),RAdd(l_mult_736,RAdd(l_mult_737,RAdd(RMul(-0.3e1,l_prod_729),RAdd(l_mult_738,RAdd(l_mult_739,l_mult_740)))))))));
      real l_sum_742 = RAdd(RMul(-0.1e1,l_prod_729),l_mult_740);
      real l_sum_743 = RAdd(RMul(-0.1e1,l_prod_732),l_mult_737);
      real l_sum_744 = RAdd(RMul(-0.1e1,l_prod_734),l_mult_735);
      real l_mult_745 = RMul(-0.4e1,l_prod_731);
      real l_mult_746 = RMul(-0.4e1,l_prod_728);
      real l_sum_747 = RAdd(RMul(0.4e1,l_prod_734),RAdd(RMul(-0.4e1,l_prod_733),RAdd(l_mult_745,l_mult_746)));
      real l_mult_748 = RMul(-0.4e1,l_prod_726);
      real l_sum_749 = RAdd(RMul(0.4e1,l_prod_732),RAdd(l_mult_745,RAdd(RMul(-0.4e1,l_prod_730),l_mult_748)));
      real l_sum_750 = RAdd(RMul(0.4e1,l_prod_729),RAdd(l_mult_746,RAdd(l_mult_748,RMul(-0.4e1,l_prod_724))));
      real t_751 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_702);
      real t_752 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_704);
      real t_753 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_706);
      real t_754 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_708);
      real t_755 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_710);
      real t_756 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_712);
      real t_757 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_714);
      real t_758 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_716);
      real t_759 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_718);
      real t_760 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_720);
      real l_r_761 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_751,l_sum_741),RMul(t_752,l_sum_742)),RMul(t_753,l_sum_743)),RMul(t_754,l_sum_744)),RMul(t_755,l_mult_736)),RMul(t_756,l_mult_738)),RMul(t_757,l_mult_739)),RMul(t_758,l_sum_747)),RMul(t_759,l_sum_749)),RMul(t_760,l_sum_750));
      real t_762 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_702));
      real t_763 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_704));
      real t_764 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_706));
      real t_765 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_708));
      real t_766 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_710));
      real t_767 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_712));
      real t_768 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_714));
      real t_769 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_716));
      real t_770 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_718));
      real t_771 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_720));
      real l_r_772 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_762,l_sum_741),RMul(t_763,l_sum_742)),RMul(t_764,l_sum_743)),RMul(t_765,l_sum_744)),RMul(t_766,l_mult_736)),RMul(t_767,l_mult_738)),RMul(t_768,l_mult_739)),RMul(t_769,l_sum_747)),RMul(t_770,l_sum_749)),RMul(t_771,l_sum_750));
      real t_773 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_702));
      real t_774 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_704));
      real t_775 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_706));
      real t_776 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_708));
      real t_777 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_710));
      real t_778 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_712));
      real t_779 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_714));
      real t_780 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_716));
      real t_781 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_718));
      real t_782 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_720));
      real l_r_783 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_773,l_sum_741),RMul(t_774,l_sum_742)),RMul(t_775,l_sum_743)),RMul(t_776,l_sum_744)),RMul(t_777,l_mult_736)),RMul(t_778,l_mult_738)),RMul(t_779,l_mult_739)),RMul(t_780,l_sum_747)),RMul(t_781,l_sum_749)),RMul(t_782,l_sum_750));
      vec3{4} v_784 = VEC3{4}(l_r_761,l_r_772,l_r_783);
      real l_r_785 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_784,v_784)));
      v_786 = VEC3{4}(RMul(l_r_785,l_r_761),RMul(l_r_785,l_r_772),RMul(l_r_785,l_r_783));
    } else {
      v_786 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    tensor[3] _arg_787 = PACK(VScale<3,4>(globals.stepSize,v_786));
    femData(MeshPos) l_cPos_788 = posMove$643E(self.cPos,_arg_787);
    tensor[3] _arg_789 = PACK(v_692);
    femData(MeshPos) l_callFindPos_790 = findPos$6215(globals._t,_arg_789);
    &tensor[3] l_refPos_791 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_790);
    int l_mulRes_792 = IMul(ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_790),10);
    int t_793 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_792);
    int l_mulRes_794 = IMul(3,t_793);
    int t_795 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,1));
    int l_mulRes_796 = IMul(3,t_795);
    int t_797 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,2));
    int l_mulRes_798 = IMul(3,t_797);
    int t_799 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,3));
    int l_mulRes_800 = IMul(3,t_799);
    int t_801 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,4));
    int l_mulRes_802 = IMul(3,t_801);
    int t_803 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,5));
    int l_mulRes_804 = IMul(3,t_803);
    int t_805 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,6));
    int l_mulRes_806 = IMul(3,t_805);
    int t_807 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,7));
    int l_mulRes_808 = IMul(3,t_807);
    int t_809 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,8));
    int l_mulRes_810 = IMul(3,t_809);
    int t_811 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,9));
    int l_mulRes_812 = IMul(3,t_811);
    real l_varAcc_813 = VIndex<3,4,0>(LOAD_0(l_refPos_791));
    real l_varAcc_814 = VIndex<3,4,1>(LOAD_0(l_refPos_791));
    real l_varAcc_815 = VIndex<3,4,2>(LOAD_0(l_refPos_791));
    real l_prod_816 = RMul(RMul(l_varAcc_813,l_varAcc_813),l_prod_490);
    real l_prod_817 = RMul(l_varAcc_814,0.1e1);
    real l_prod_818 = RMul(l_varAcc_813,l_prod_817);
    real l_prod_819 = RMul(0.1e1,l_varAcc_815);
    real l_prod_820 = RMul(l_varAcc_813,l_prod_819);
    real l_prod_821 = RMul(l_varAcc_813,l_prod_490);
    real l_prod_822 = RMul(0.1e1,RMul(RMul(l_varAcc_814,l_varAcc_814),0.1e1));
    real l_prod_823 = RMul(0.1e1,RMul(l_varAcc_814,l_varAcc_815));
    real l_prod_824 = RMul(0.1e1,l_prod_817);
    real l_prod_825 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_815,l_varAcc_815)));
    real l_prod_826 = RMul(0.1e1,l_prod_819);
    real l_mult_827 = RMul(0.2e1,l_prod_825);
    real l_mult_828 = RMul(0.4e1,l_prod_823);
    real l_mult_829 = RMul(0.2e1,l_prod_822);
    real l_mult_830 = RMul(0.4e1,l_prod_820);
    real l_mult_831 = RMul(0.4e1,l_prod_818);
    real l_mult_832 = RMul(0.2e1,l_prod_816);
    real l_sum_833 = RAdd(l_mult_496,RAdd(RMul(-0.3e1,l_prod_826),RAdd(l_mult_827,RAdd(RMul(-0.3e1,l_prod_824),RAdd(l_mult_828,RAdd(l_mult_829,RAdd(RMul(-0.3e1,l_prod_821),RAdd(l_mult_830,RAdd(l_mult_831,l_mult_832)))))))));
    real l_sum_834 = RAdd(RMul(-0.1e1,l_prod_821),l_mult_832);
    real l_sum_835 = RAdd(RMul(-0.1e1,l_prod_824),l_mult_829);
    real l_sum_836 = RAdd(RMul(-0.1e1,l_prod_826),l_mult_827);
    real l_mult_837 = RMul(-0.4e1,l_prod_823);
    real l_mult_838 = RMul(-0.4e1,l_prod_820);
    real l_sum_839 = RAdd(RMul(0.4e1,l_prod_826),RAdd(RMul(-0.4e1,l_prod_825),RAdd(l_mult_837,l_mult_838)));
    real l_mult_840 = RMul(-0.4e1,l_prod_818);
    real l_sum_841 = RAdd(RMul(0.4e1,l_prod_824),RAdd(l_mult_837,RAdd(RMul(-0.4e1,l_prod_822),l_mult_840)));
    real l_sum_842 = RAdd(RMul(0.4e1,l_prod_821),RAdd(l_mult_838,RAdd(l_mult_840,RMul(-0.4e1,l_prod_816))));
    real t_843 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_794);
    real t_844 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_796);
    real t_845 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_798);
    real t_846 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_800);
    real t_847 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_802);
    real t_848 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_804);
    real t_849 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_806);
    real t_850 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_808);
    real t_851 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_810);
    real t_852 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_812);
    real t_853 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_794));
    real t_854 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_796));
    real t_855 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_798));
    real t_856 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_800));
    real t_857 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_802));
    real t_858 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_804));
    real t_859 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_806));
    real t_860 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_808));
    real t_861 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_810));
    real t_862 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_812));
    real t_863 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_794));
    real t_864 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_796));
    real t_865 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_798));
    real t_866 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_800));
    real t_867 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_802));
    real t_868 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_804));
    real t_869 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_806));
    real t_870 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_808));
    real t_871 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_810));
    real t_872 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_812));
    vec3{4} v_873 = VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_843,l_sum_833),RMul(t_844,l_sum_834)),RMul(t_845,l_sum_835)),RMul(t_846,l_sum_836)),RMul(t_847,l_mult_828)),RMul(t_848,l_mult_830)),RMul(t_849,l_mult_831)),RMul(t_850,l_sum_839)),RMul(t_851,l_sum_841)),RMul(t_852,l_sum_842)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_853,l_sum_833),RMul(t_854,l_sum_834)),RMul(t_855,l_sum_835)),RMul(t_856,l_sum_836)),RMul(t_857,l_mult_828)),RMul(t_858,l_mult_830)),RMul(t_859,l_mult_831)),RMul(t_860,l_sum_839)),RMul(t_861,l_sum_841)),RMul(t_862,l_sum_842)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_863,l_sum_833),RMul(t_864,l_sum_834)),RMul(t_865,l_sum_835)),RMul(t_866,l_sum_836)),RMul(t_867,l_mult_828)),RMul(t_868,l_mult_830)),RMul(t_869,l_mult_831)),RMul(t_870,l_sum_839)),RMul(t_871,l_sum_841)),RMul(t_872,l_sum_842)));
    vec3{4} v_874 = VScale<3,4>(globals.stepSize,v_873);
    real l_r_875 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_873,v_873)));
    vec3{4} v_876 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.altCPos)),VEC3{4}(RMul(l_r_875,VIndex<3,4,0>(v_874)),RMul(l_r_875,VIndex<3,4,1>(v_874)),RMul(l_r_875,VIndex<3,4,2>(v_874))));
    vec3{4} v_877 = v_876;
    if (BNot(ExtractFemItem<bool,Valid(MeshPos)>(l_cPos_788))) {
      print(self.stream);
      self.cPos = l_cPos_788;
      self.altCPos = PACK(v_877);
      stabilize;
    }
    &tensor[3] l__t_879 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(l_cPos_788);
    femData(Mesh) l__t_880 = ExtractFem<femData(Mesh),femData(MeshPos)>(l_cPos_788);
    int l_mulRes_881 = IMul(ExtractFemItem<int,CellIndex(MeshPos)>(l_cPos_788),4);
    int t_882 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_880,l_mulRes_881);
    int l_mulRes_883 = IMul(3,t_882);
    int t_884 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_880,IAdd(l_mulRes_881,1));
    int l_mulRes_885 = IMul(3,t_884);
    int t_886 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_880,IAdd(l_mulRes_881,2));
    int l_mulRes_887 = IMul(3,t_886);
    int t_888 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_880,IAdd(l_mulRes_881,3));
    int l_mulRes_889 = IMul(3,t_888);
    real l_prod_890 = RMul(VIndex<3,4,0>(LOAD_0(l__t_879)),l_prod_490);
    real l_prod_891 = RMul(0.1e1,RMul(VIndex<3,4,1>(LOAD_0(l__t_879)),0.1e1));
    real l_prod_892 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(LOAD_0(l__t_879))));
    real l_sum_893 = RAdd(l_mult_496,RAdd(RMul(-0.1e1,l_prod_892),RAdd(RMul(-0.1e1,l_prod_891),RMul(-0.1e1,l_prod_890))));
    real l_basisEval_894 = RMul(0.1e1,l_prod_890);
    real l_basisEval_895 = RMul(0.1e1,l_prod_891);
    real l_basisEval_896 = RMul(0.1e1,l_prod_892);
    real t_897 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,l_mulRes_883);
    real t_898 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,l_mulRes_885);
    real t_899 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,l_mulRes_887);
    real t_900 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,l_mulRes_889);
    real t_901 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(1,l_mulRes_883));
    real t_902 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(1,l_mulRes_885));
    real t_903 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(1,l_mulRes_887));
    real t_904 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(1,l_mulRes_889));
    real t_905 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(2,l_mulRes_883));
    real t_906 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(2,l_mulRes_885));
    real t_907 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(2,l_mulRes_887));
    real t_908 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(2,l_mulRes_889));
    tensor[3] _arg_909 = PACK(VEC3{4}(RAdd(RAdd(RAdd(RMul(t_897,l_sum_893),RMul(t_898,l_basisEval_894)),RMul(t_899,l_basisEval_895)),RMul(t_900,l_basisEval_896)),RAdd(RAdd(RAdd(RMul(t_901,l_sum_893),RMul(t_902,l_basisEval_894)),RMul(t_903,l_basisEval_895)),RMul(t_904,l_basisEval_896)),RAdd(RAdd(RAdd(RMul(t_905,l_sum_893),RMul(t_906,l_basisEval_894)),RMul(t_907,l_basisEval_895)),RMul(t_908,l_basisEval_896))));
    tensor[3][1] t_911 = <tensor[3][1]>{_arg_909};
    tensor[3][] l__t_910 = MkDynamic<tensor[3],1>(t_911);
    tensor[3] _arg_912 = PACK(v_877);
    tensor[3][1] t_914 = <tensor[3][1]>{_arg_912};
    tensor[3][] l__t_913 = MkDynamic<tensor[3],1>(t_914);
    self.stream = Concat<tensor[3]>(self.stream,l__t_910);
    self.newStream = Concat<tensor[3]>(self.newStream,l__t_913);
    self.step = IAdd(self.step,1);
    self.cPos = l_cPos_788;
    self.altCPos = PACK(v_877);
    active;
  }
}
//***** CREATE COLLECTION *****
  {
    foreach &tensor[3] i_x_916 in globals.startPoints {
      new gg(i_x_916);
    }
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) meshData;
input femData(Space) 0space03AB_intermedateGlobal;
input femData(FemFunc) 0data03AD_intermedateGlobal;
input int timeSteps;
input real timeEps;
input tensor[3][] startPoints;
input real stepSize;
input int stepMax;
//***** CONST INIT *****
  {
    globals.timeSteps = 32;
    globals.timeEps = 0.1e-6;
    globals.stepSize = 0.1e-1;
    globals.stepMax = 100;
  }
//***** GLOBALS *****
global femData(FemFunc) data;
global femData(Mesh) _t;
global femData(Space) _tX;
//***** FUNCTIONS *****
  function femData(MeshPos) findPos (world, femData(Mesh) p_mesh_0,&tensor[3] p_pos_1) {
    int[] t_3 = ExtractFemItem2<tensor[3],int[],NearbyCell(File=spat.in)(Mesh)>(p_mesh_0,p_pos_1);
    vec3{4} v_4 = VEC3{4}(0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0,0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0);
    foreach int i_cellItter_2 in t_3 {
      vec3{4} v_5;
      v_5 = v_4;
      for i_newtonItter_6 = 0 to 16 {
        int l_mulRes_7 = IMul(i_cellItter_2,4);
        int t_8 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,l_mulRes_7);
        int l_mulRes_9 = IMul(3,t_8);
        real l_dof_load_10 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_9);
        real l_dof_load_11 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_9));
        real l_dof_load_12 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_9));
        int t_13 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,1));
        int l_mulRes_14 = IMul(3,t_13);
        real l_dof_load_15 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_14);
        real l_dof_load_16 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_14));
        real l_dof_load_17 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_14));
        int t_18 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,2));
        int l_mulRes_19 = IMul(3,t_18);
        real l_dof_load_20 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_19);
        real l_dof_load_21 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_19));
        real l_dof_load_22 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_19));
        int t_23 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(p_mesh_0,IAdd(l_mulRes_7,3));
        int l_mulRes_24 = IMul(3,t_23);
        real l_dof_load_25 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,l_mulRes_24);
        real l_dof_load_26 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(1,l_mulRes_24));
        real l_dof_load_27 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(p_mesh_0,IAdd(2,l_mulRes_24));
        real l_prod_28 = RMul(0.1e1,0.1e1);
        real l_prod_29 = RMul(0.1e1,l_prod_28);
        real l_basisEval_30 = RMul(-0.1e1,l_prod_29);
        real l_basisEval_31 = RMul(0.1e1,l_prod_29);
        real l_r_32 = RMul(l_dof_load_10,l_basisEval_30);
        real l_r_33 = RMul(l_dof_load_20,0.e0);
        real l_r_34 = RMul(l_dof_load_25,0.e0);
        real l_r_35 = RAdd(RAdd(RAdd(l_r_32,RMul(l_dof_load_15,l_basisEval_31)),l_r_33),l_r_34);
        real l_r_36 = RAdd(l_r_32,RMul(l_dof_load_15,0.e0));
        real l_r_37 = RAdd(RAdd(l_r_36,RMul(l_dof_load_20,l_basisEval_31)),l_r_34);
        real l_r_38 = RAdd(RAdd(l_r_36,l_r_33),RMul(l_dof_load_25,l_basisEval_31));
        real l_r_39 = RMul(l_dof_load_11,l_basisEval_30);
        real l_r_40 = RMul(l_dof_load_21,0.e0);
        real l_r_41 = RMul(l_dof_load_26,0.e0);
        real l_r_42 = RAdd(RAdd(RAdd(l_r_39,RMul(l_dof_load_16,l_basisEval_31)),l_r_40),l_r_41);
        real l_r_43 = RAdd(l_r_39,RMul(l_dof_load_16,0.e0));
        real l_r_44 = RAdd(RAdd(l_r_43,RMul(l_dof_load_21,l_basisEval_31)),l_r_41);
        real l_r_45 = RAdd(RAdd(l_r_43,l_r_40),RMul(l_dof_load_26,l_basisEval_31));
        real l_r_46 = RMul(l_dof_load_12,l_basisEval_30);
        real l_r_47 = RMul(l_dof_load_22,0.e0);
        real l_r_48 = RMul(l_dof_load_27,0.e0);
        real l_r_49 = RAdd(RAdd(RAdd(l_r_46,RMul(l_dof_load_17,l_basisEval_31)),l_r_47),l_r_48);
        real l_r_50 = RAdd(l_r_46,RMul(l_dof_load_17,0.e0));
        real l_r_51 = RAdd(RAdd(l_r_50,RMul(l_dof_load_22,l_basisEval_31)),l_r_48);
        real l_r_52 = RAdd(RAdd(l_r_50,l_r_47),RMul(l_dof_load_27,l_basisEval_31));
        real l_r_53 = RMul(0.e0,l_r_35);
        real l_r_54 = RMul(0.e0,l_r_42);
        real l_r_55 = RMul(0.e0,l_r_49);
        real l_r_56 = RAdd(l_r_53,l_r_54);
        real l_r_57 = RAdd(l_r_56,l_r_55);
        real l_r_58 = RMul(0.e0,l_r_37);
        real l_r_59 = RMul(0.e0,l_r_44);
        real l_r_60 = RMul(0.e0,l_r_51);
        real l_r_61 = RAdd(l_r_58,l_r_59);
        real l_r_62 = RAdd(l_r_61,l_r_60);
        real l_r_63 = RMul(0.e0,l_r_38);
        real l_r_64 = RMul(0.e0,l_r_45);
        real l_r_65 = RMul(0.e0,l_r_52);
        real l_r_66 = RAdd(l_r_63,l_r_64);
        real l_r_67 = RAdd(l_r_66,l_r_65);
        real l_r_68 = RAdd(l_r_56,RMul(-0.1e1,l_r_49));
        real l_r_69 = RAdd(l_r_61,RMul(-0.1e1,l_r_51));
        real l_r_70 = RAdd(l_r_66,RMul(-0.1e1,l_r_52));
        real l_r_71 = RAdd(RAdd(l_r_53,RMul(0.1e1,l_r_42)),l_r_55);
        real l_r_72 = RAdd(RAdd(l_r_58,RMul(0.1e1,l_r_44)),l_r_60);
        real l_r_73 = RAdd(RAdd(l_r_63,RMul(0.1e1,l_r_45)),l_r_65);
        real l_r_74 = RAdd(l_r_56,RMul(0.1e1,l_r_49));
        real l_r_75 = RAdd(l_r_61,RMul(0.1e1,l_r_51));
        real l_r_76 = RAdd(l_r_66,RMul(0.1e1,l_r_52));
        real l_r_77 = RAdd(RAdd(RMul(-0.1e1,l_r_35),l_r_54),l_r_55);
        real l_r_78 = RAdd(RAdd(RMul(-0.1e1,l_r_37),l_r_59),l_r_60);
        real l_r_79 = RAdd(RAdd(RMul(-0.1e1,l_r_38),l_r_64),l_r_65);
        real l_r_80 = RAdd(RAdd(l_r_53,RMul(-0.1e1,l_r_42)),l_r_55);
        real l_r_81 = RAdd(RAdd(l_r_58,RMul(-0.1e1,l_r_44)),l_r_60);
        real l_r_82 = RAdd(RAdd(l_r_63,RMul(-0.1e1,l_r_45)),l_r_65);
        real l_r_83 = RAdd(RAdd(RMul(0.1e1,l_r_35),l_r_54),l_r_55);
        real l_r_84 = RAdd(RAdd(RMul(0.1e1,l_r_37),l_r_59),l_r_60);
        real l_r_85 = RAdd(RAdd(RMul(0.1e1,l_r_38),l_r_64),l_r_65);
        real l_r_86 = RAdd(RAdd(RMul(l_r_35,l_r_62),RMul(l_r_42,l_r_75)),RMul(l_r_49,l_r_81));
        real l_r_87 = RAdd(RAdd(RMul(l_r_35,l_r_67),RMul(l_r_42,l_r_76)),RMul(l_r_49,l_r_82));
        real l_r_88 = RAdd(RAdd(RMul(l_r_35,l_r_69),RMul(l_r_42,l_r_62)),RMul(l_r_49,l_r_84));
        real l_r_89 = RAdd(RAdd(RMul(l_r_35,l_r_70),RMul(l_r_42,l_r_67)),RMul(l_r_49,l_r_85));
        real l_r_90 = RAdd(RAdd(RMul(l_r_35,l_r_72),RMul(l_r_42,l_r_78)),RMul(l_r_49,l_r_62));
        real l_r_91 = RAdd(RAdd(RMul(l_r_35,l_r_73),RMul(l_r_42,l_r_79)),RMul(l_r_49,l_r_67));
        real l_r_92 = RAdd(RAdd(RMul(l_r_37,l_r_57),RMul(l_r_44,l_r_74)),RMul(l_r_51,l_r_80));
        real l_r_93 = RAdd(RAdd(RMul(l_r_37,l_r_67),RMul(l_r_44,l_r_76)),RMul(l_r_51,l_r_82));
        real l_r_94 = RAdd(RAdd(RMul(l_r_37,l_r_68),RMul(l_r_44,l_r_57)),RMul(l_r_51,l_r_83));
        real l_r_95 = RAdd(RAdd(RMul(l_r_37,l_r_70),RMul(l_r_44,l_r_67)),RMul(l_r_51,l_r_85));
        real l_r_96 = RAdd(RAdd(RMul(l_r_37,l_r_71),RMul(l_r_44,l_r_77)),RMul(l_r_51,l_r_57));
        real l_r_97 = RAdd(RAdd(RMul(l_r_37,l_r_73),RMul(l_r_44,l_r_79)),RMul(l_r_51,l_r_67));
        real l_r_98 = RAdd(RAdd(RMul(l_r_38,l_r_57),RMul(l_r_45,l_r_74)),RMul(l_r_52,l_r_80));
        real l_r_99 = RAdd(RAdd(RMul(l_r_38,l_r_62),RMul(l_r_45,l_r_75)),RMul(l_r_52,l_r_81));
        real l_r_100 = RAdd(RAdd(RMul(l_r_38,l_r_68),RMul(l_r_45,l_r_57)),RMul(l_r_52,l_r_83));
        real l_r_101 = RAdd(RAdd(RMul(l_r_38,l_r_69),RMul(l_r_45,l_r_62)),RMul(l_r_52,l_r_84));
        real l_r_102 = RAdd(RAdd(RMul(l_r_38,l_r_71),RMul(l_r_45,l_r_77)),RMul(l_r_52,l_r_57));
        real l_r_103 = RAdd(RAdd(RMul(l_r_38,l_r_72),RMul(l_r_45,l_r_78)),RMul(l_r_52,l_r_62));
        vec3{4} v_104 = VEC3{4}(l_r_37,l_r_44,l_r_51);
        real l_r_105 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_57),RMul(l_r_42,l_r_74)),RMul(l_r_49,l_r_80)));
        real l_r_106 = RMul(0.e0,l_r_87);
        real l_r_107 = RMul(0.e0,l_r_92);
        real l_r_108 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_62),RMul(l_r_44,l_r_75)),RMul(l_r_51,l_r_81)));
        real l_r_109 = RMul(0.e0,l_r_98);
        real l_r_110 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_67),RMul(l_r_45,l_r_76)),RMul(l_r_52,l_r_82)));
        real l_r_111 = RAdd(l_r_105,RMul(0.e0,l_r_86));
        real l_r_112 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_68),RMul(l_r_42,l_r_57)),RMul(l_r_49,l_r_83)));
        real l_r_113 = RMul(0.e0,l_r_89);
        real l_r_114 = RMul(0.e0,l_r_94);
        real l_r_115 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_69),RMul(l_r_44,l_r_62)),RMul(l_r_51,l_r_84)));
        real l_r_116 = RMul(0.e0,l_r_100);
        real l_r_117 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_70),RMul(l_r_45,l_r_67)),RMul(l_r_52,l_r_85)));
        real l_r_118 = RAdd(l_r_112,RMul(0.e0,l_r_88));
        real l_r_119 = RMul(0.e0,RAdd(RAdd(RMul(l_r_35,l_r_71),RMul(l_r_42,l_r_77)),RMul(l_r_49,l_r_57)));
        real l_r_120 = RMul(0.e0,l_r_91);
        real l_r_121 = RMul(0.e0,l_r_96);
        real l_r_122 = RMul(0.e0,RAdd(RAdd(RMul(l_r_37,l_r_72),RMul(l_r_44,l_r_78)),RMul(l_r_51,l_r_62)));
        real l_r_123 = RMul(0.e0,l_r_102);
        real l_r_124 = RMul(0.e0,RAdd(RAdd(RMul(l_r_38,l_r_73),RMul(l_r_45,l_r_79)),RMul(l_r_52,l_r_67)));
        real l_r_125 = RAdd(l_r_119,RMul(0.e0,l_r_90));
        real l_r_126 = RMul(0.e0,l_r_93);
        real l_r_127 = RMul(0.e0,l_r_99);
        real l_r_128 = RMul(0.e0,l_r_95);
        real l_r_129 = RMul(0.e0,l_r_101);
        real l_r_130 = RMul(0.e0,l_r_97);
        real l_r_131 = RMul(0.e0,l_r_103);
        real l_op1_e3_l_21_132 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_35,l_r_42,l_r_49),VEC3{4}(VDot<3,4>(v_104,VEC3{4}(l_r_67,l_r_76,l_r_82)),VDot<3,4>(v_104,VEC3{4}(l_r_70,l_r_67,l_r_85)),VDot<3,4>(v_104,VEC3{4}(l_r_73,l_r_79,l_r_67)))));
        real l_prod_133 = RMul(VIndex<3,4,0>(v_5),l_prod_28);
        real l_prod_134 = RMul(0.1e1,RMul(VIndex<3,4,1>(v_5),0.1e1));
        real l_prod_135 = RMul(0.1e1,RMul(0.1e1,VIndex<3,4,2>(v_5)));
        real l_sum_136 = RAdd(l_basisEval_31,RAdd(RMul(-0.1e1,l_prod_135),RAdd(RMul(-0.1e1,l_prod_134),RMul(-0.1e1,l_prod_133))));
        real l_basisEval_137 = RMul(0.1e1,l_prod_133);
        real l_basisEval_138 = RMul(0.1e1,l_prod_134);
        real l_basisEval_139 = RMul(0.1e1,l_prod_135);
        vec3{4} v_140 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(l_dof_load_10,l_sum_136),RMul(l_dof_load_15,l_basisEval_137)),RMul(l_dof_load_20,l_basisEval_138)),RMul(l_dof_load_25,l_basisEval_139)),RAdd(RAdd(RAdd(RMul(l_dof_load_11,l_sum_136),RMul(l_dof_load_16,l_basisEval_137)),RMul(l_dof_load_21,l_basisEval_138)),RMul(l_dof_load_26,l_basisEval_139)),RAdd(RAdd(RAdd(RMul(l_dof_load_12,l_sum_136),RMul(l_dof_load_17,l_basisEval_137)),RMul(l_dof_load_22,l_basisEval_138)),RMul(l_dof_load_27,l_basisEval_139))),LOAD_0(p_pos_1));
        vec3{4} v_141 = VEC3{4}(VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_111,l_r_106),l_r_107),l_r_108),RMul(0.1e1,l_r_93)),l_r_109),RMul(-0.1e1,l_r_99)),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,l_r_113),l_r_114),l_r_115),RMul(0.1e1,l_r_95)),l_r_116),RMul(-0.1e1,l_r_101)),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,l_r_120),l_r_121),l_r_122),RMul(0.1e1,l_r_97)),l_r_123),RMul(-0.1e1,l_r_103)),l_r_124),l_op1_e3_l_21_132)),v_140),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_111,RMul(-0.1e1,l_r_87)),l_r_107),l_r_108),l_r_126),RMul(0.1e1,l_r_98)),l_r_127),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_118,RMul(-0.1e1,l_r_89)),l_r_114),l_r_115),l_r_128),RMul(0.1e1,l_r_100)),l_r_129),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_125,RMul(-0.1e1,l_r_91)),l_r_121),l_r_122),l_r_130),RMul(0.1e1,l_r_102)),l_r_131),l_r_124),l_op1_e3_l_21_132)),v_140),VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_105,RMul(0.1e1,l_r_86)),l_r_106),RMul(-0.1e1,l_r_92)),l_r_108),l_r_126),l_r_109),l_r_127),l_r_110),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_112,RMul(0.1e1,l_r_88)),l_r_113),RMul(-0.1e1,l_r_94)),l_r_115),l_r_128),l_r_116),l_r_129),l_r_117),l_op1_e3_l_21_132),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_119,RMul(0.1e1,l_r_90)),l_r_120),RMul(-0.1e1,l_r_96)),l_r_122),l_r_130),l_r_123),l_r_131),l_r_124),l_op1_e3_l_21_132)),v_140));
        vec3{4} v_142 = VSub<3,4>(v_5,v_141);
        vec3{4} v_143 = v_142;
        if (GTE<real>(RMul(0.1e-7,0.1e-7),VDot<3,4>(v_141,v_141))) {
          vec3{4} v_144 = VAdd<3,4>(VEC3{4}(0.1e-8,0.1e-8,0.1e-8),v_143);
          if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_143)),BAnd(GT<real>(VIndex<3,4,0>(v_144),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_144),-0.e0),GT<real>(VIndex<3,4,2>(v_144),-0.e0))))) {
            tensor[3] _arg_145 = PACK(v_143);
            return ExtractFemItemN<[femData(Mesh),int,tensor[3],tensor[3]],femData(MeshPos),AllBuild(MeshPos),"","",[],int>(p_mesh_0,i_cellItter_2,_arg_145,p_pos_1)
          }
        }
        v_5 = v_143;
      }
    }
    print("Bad end 2","\n");
    return ExtractFemItemN<[femData(Mesh)],femData(MeshPos),InvalidBuild(MeshPos),"","",[],int>(p_mesh_0)
  }
  function int[2] nextCell4 (int p_faceIdx_146,int p_cell_147,femData(Mesh) p_mesh_148) {
    return ExtractFemItemN<[femData(Mesh),int],int[2],CellFaceCell(Mesh),"","",[],int>(p_mesh_148,IAdd(IMul(p_cell_147,8),IMul(p_faceIdx_146,2)))
  }
  function femData(MeshPos) posMove (world, globals, femData(MeshPos) p_x_149,&tensor[3] p_dPos_150) {
    real l_time_152;
    femData(MeshPos) l_x_151;
    if (BNot(ExtractFemItem<bool,Valid(MeshPos)>(p_x_149))) {
      return p_x_149
    }
    l_x_151 = p_x_149;
    l_time_152 = 0.1e1;
    for i_i_153 = 0 to globals.timeSteps {
      real l_time_427;
      femData(MeshPos) l_nmp_426;
      femData(Mesh) l__t_154 = ExtractFem<femData(Mesh),femData(MeshPos)>(l_x_151);
      femData(MeshCell) l__t_155 = LoadFem<femData(MeshCell)>(l__t_154,ExtractFemItem<int,CellIndex(MeshPos)>(l_x_151));
      femData(Mesh) l__t_156 = ExtractFem<femData(Mesh),femData(MeshCell)>(l__t_155);
      int l__t_157 = ExtractFemItem<int,CellIndex(MeshCell)>(l__t_155);
      &tensor[3] l__t_158 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(l_x_151);
      int l_mulRes_159 = IMul(l__t_157,4);
      int t_160 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_156,l_mulRes_159);
      int l_mulRes_161 = IMul(3,t_160);
      int t_162 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_156,IAdd(l_mulRes_159,1));
      int l_mulRes_163 = IMul(3,t_162);
      real l_dof_load_164 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,l_mulRes_163);
      real l_dof_load_165 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(1,l_mulRes_163));
      real l_dof_load_166 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(2,l_mulRes_163));
      int t_167 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_156,IAdd(l_mulRes_159,2));
      int l_mulRes_168 = IMul(3,t_167);
      real l_dof_load_169 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,l_mulRes_168);
      real l_dof_load_170 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(1,l_mulRes_168));
      real l_dof_load_171 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(2,l_mulRes_168));
      int t_172 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_156,IAdd(l_mulRes_159,3));
      int l_mulRes_173 = IMul(3,t_172);
      real l_dof_load_174 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,l_mulRes_173);
      real l_dof_load_175 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(1,l_mulRes_173));
      real l_dof_load_176 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(2,l_mulRes_173));
      real l_prod_177 = RMul(0.1e1,RMul(0.1e1,0.1e1));
      real l_basisEval_178 = RMul(-0.1e1,l_prod_177);
      real l_basisEval_179 = RMul(0.1e1,l_prod_177);
      real t_180 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,l_mulRes_161);
      real l_r_181 = RMul(t_180,l_basisEval_178);
      real l_r_182 = RMul(l_dof_load_169,0.e0);
      real l_r_183 = RMul(l_dof_load_174,0.e0);
      real l_r_184 = RAdd(RAdd(RAdd(l_r_181,RMul(l_dof_load_164,l_basisEval_179)),l_r_182),l_r_183);
      real l_r_185 = RAdd(l_r_181,RMul(l_dof_load_164,0.e0));
      real l_r_186 = RAdd(RAdd(l_r_185,RMul(l_dof_load_169,l_basisEval_179)),l_r_183);
      real l_r_187 = RAdd(RAdd(l_r_185,l_r_182),RMul(l_dof_load_174,l_basisEval_179));
      real t_188 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(1,l_mulRes_161));
      real l_r_189 = RMul(t_188,l_basisEval_178);
      real l_r_190 = RMul(l_dof_load_170,0.e0);
      real l_r_191 = RMul(l_dof_load_175,0.e0);
      real l_r_192 = RAdd(RAdd(RAdd(l_r_189,RMul(l_dof_load_165,l_basisEval_179)),l_r_190),l_r_191);
      real l_r_193 = RAdd(l_r_189,RMul(l_dof_load_165,0.e0));
      real l_r_194 = RAdd(RAdd(l_r_193,RMul(l_dof_load_170,l_basisEval_179)),l_r_191);
      real l_r_195 = RAdd(RAdd(l_r_193,l_r_190),RMul(l_dof_load_175,l_basisEval_179));
      real t_196 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_156,IAdd(2,l_mulRes_161));
      real l_r_197 = RMul(t_196,l_basisEval_178);
      real l_r_198 = RMul(l_dof_load_171,0.e0);
      real l_r_199 = RMul(l_dof_load_176,0.e0);
      real l_r_200 = RAdd(RAdd(RAdd(l_r_197,RMul(l_dof_load_166,l_basisEval_179)),l_r_198),l_r_199);
      real l_r_201 = RAdd(l_r_197,RMul(l_dof_load_166,0.e0));
      real l_r_202 = RAdd(RAdd(l_r_201,RMul(l_dof_load_171,l_basisEval_179)),l_r_199);
      real l_r_203 = RAdd(RAdd(l_r_201,l_r_198),RMul(l_dof_load_176,l_basisEval_179));
      real l_r_204 = RMul(0.e0,l_r_184);
      real l_r_205 = RMul(0.e0,l_r_192);
      real l_r_206 = RMul(0.e0,l_r_200);
      real l_r_207 = RAdd(l_r_204,l_r_205);
      real l_r_208 = RAdd(l_r_207,l_r_206);
      real l_r_209 = RMul(0.e0,l_r_186);
      real l_r_210 = RMul(0.e0,l_r_194);
      real l_r_211 = RMul(0.e0,l_r_202);
      real l_r_212 = RAdd(l_r_209,l_r_210);
      real l_r_213 = RAdd(l_r_212,l_r_211);
      real l_r_214 = RMul(0.e0,l_r_187);
      real l_r_215 = RMul(0.e0,l_r_195);
      real l_r_216 = RMul(0.e0,l_r_203);
      real l_r_217 = RAdd(l_r_214,l_r_215);
      real l_r_218 = RAdd(l_r_217,l_r_216);
      real l_r_219 = RAdd(l_r_207,RMul(-0.1e1,l_r_200));
      real l_r_220 = RAdd(l_r_212,RMul(-0.1e1,l_r_202));
      real l_r_221 = RAdd(l_r_217,RMul(-0.1e1,l_r_203));
      real l_r_222 = RAdd(RAdd(l_r_204,RMul(0.1e1,l_r_192)),l_r_206);
      real l_r_223 = RAdd(RAdd(l_r_209,RMul(0.1e1,l_r_194)),l_r_211);
      real l_r_224 = RAdd(RAdd(l_r_214,RMul(0.1e1,l_r_195)),l_r_216);
      real l_r_225 = RAdd(l_r_207,RMul(0.1e1,l_r_200));
      real l_r_226 = RAdd(l_r_212,RMul(0.1e1,l_r_202));
      real l_r_227 = RAdd(l_r_217,RMul(0.1e1,l_r_203));
      real l_r_228 = RAdd(RAdd(RMul(-0.1e1,l_r_184),l_r_205),l_r_206);
      real l_r_229 = RAdd(RAdd(RMul(-0.1e1,l_r_186),l_r_210),l_r_211);
      real l_r_230 = RAdd(RAdd(RMul(-0.1e1,l_r_187),l_r_215),l_r_216);
      real l_r_231 = RAdd(RAdd(l_r_204,RMul(-0.1e1,l_r_192)),l_r_206);
      real l_r_232 = RAdd(RAdd(l_r_209,RMul(-0.1e1,l_r_194)),l_r_211);
      real l_r_233 = RAdd(RAdd(l_r_214,RMul(-0.1e1,l_r_195)),l_r_216);
      real l_r_234 = RAdd(RAdd(RMul(0.1e1,l_r_184),l_r_205),l_r_206);
      real l_r_235 = RAdd(RAdd(RMul(0.1e1,l_r_186),l_r_210),l_r_211);
      real l_r_236 = RAdd(RAdd(RMul(0.1e1,l_r_187),l_r_215),l_r_216);
      real l_r_237 = RAdd(RAdd(RMul(l_r_184,l_r_213),RMul(l_r_192,l_r_226)),RMul(l_r_200,l_r_232));
      real l_r_238 = RAdd(RAdd(RMul(l_r_184,l_r_218),RMul(l_r_192,l_r_227)),RMul(l_r_200,l_r_233));
      real l_r_239 = RAdd(RAdd(RMul(l_r_184,l_r_220),RMul(l_r_192,l_r_213)),RMul(l_r_200,l_r_235));
      real l_r_240 = RAdd(RAdd(RMul(l_r_184,l_r_221),RMul(l_r_192,l_r_218)),RMul(l_r_200,l_r_236));
      real l_r_241 = RAdd(RAdd(RMul(l_r_184,l_r_223),RMul(l_r_192,l_r_229)),RMul(l_r_200,l_r_213));
      real l_r_242 = RAdd(RAdd(RMul(l_r_184,l_r_224),RMul(l_r_192,l_r_230)),RMul(l_r_200,l_r_218));
      real l_r_243 = RAdd(RAdd(RMul(l_r_186,l_r_208),RMul(l_r_194,l_r_225)),RMul(l_r_202,l_r_231));
      real l_r_244 = RAdd(RAdd(RMul(l_r_186,l_r_218),RMul(l_r_194,l_r_227)),RMul(l_r_202,l_r_233));
      real l_r_245 = RAdd(RAdd(RMul(l_r_186,l_r_219),RMul(l_r_194,l_r_208)),RMul(l_r_202,l_r_234));
      real l_r_246 = RAdd(RAdd(RMul(l_r_186,l_r_221),RMul(l_r_194,l_r_218)),RMul(l_r_202,l_r_236));
      real l_r_247 = RAdd(RAdd(RMul(l_r_186,l_r_222),RMul(l_r_194,l_r_228)),RMul(l_r_202,l_r_208));
      real l_r_248 = RAdd(RAdd(RMul(l_r_186,l_r_224),RMul(l_r_194,l_r_230)),RMul(l_r_202,l_r_218));
      real l_r_249 = RAdd(RAdd(RMul(l_r_187,l_r_208),RMul(l_r_195,l_r_225)),RMul(l_r_203,l_r_231));
      real l_r_250 = RAdd(RAdd(RMul(l_r_187,l_r_213),RMul(l_r_195,l_r_226)),RMul(l_r_203,l_r_232));
      real l_r_251 = RAdd(RAdd(RMul(l_r_187,l_r_219),RMul(l_r_195,l_r_208)),RMul(l_r_203,l_r_234));
      real l_r_252 = RAdd(RAdd(RMul(l_r_187,l_r_220),RMul(l_r_195,l_r_213)),RMul(l_r_203,l_r_235));
      real l_r_253 = RAdd(RAdd(RMul(l_r_187,l_r_222),RMul(l_r_195,l_r_228)),RMul(l_r_203,l_r_208));
      real l_r_254 = RAdd(RAdd(RMul(l_r_187,l_r_223),RMul(l_r_195,l_r_229)),RMul(l_r_203,l_r_213));
      vec3{4} v_255 = VEC3{4}(l_r_186,l_r_194,l_r_202);
      real l_r_256 = RMul(0.e0,RAdd(RAdd(RMul(l_r_184,l_r_208),RMul(l_r_192,l_r_225)),RMul(l_r_200,l_r_231)));
      real l_r_257 = RMul(0.e0,l_r_238);
      real l_r_258 = RMul(0.e0,l_r_243);
      real l_r_259 = RMul(0.e0,RAdd(RAdd(RMul(l_r_186,l_r_213),RMul(l_r_194,l_r_226)),RMul(l_r_202,l_r_232)));
      real l_r_260 = RMul(0.e0,l_r_249);
      real l_r_261 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_218),RMul(l_r_195,l_r_227)),RMul(l_r_203,l_r_233)));
      real l_r_262 = RAdd(l_r_256,RMul(0.e0,l_r_237));
      real l_r_263 = RMul(0.e0,RAdd(RAdd(RMul(l_r_184,l_r_219),RMul(l_r_192,l_r_208)),RMul(l_r_200,l_r_234)));
      real l_r_264 = RMul(0.e0,l_r_240);
      real l_r_265 = RMul(0.e0,l_r_245);
      real l_r_266 = RMul(0.e0,RAdd(RAdd(RMul(l_r_186,l_r_220),RMul(l_r_194,l_r_213)),RMul(l_r_202,l_r_235)));
      real l_r_267 = RMul(0.e0,l_r_251);
      real l_r_268 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_221),RMul(l_r_195,l_r_218)),RMul(l_r_203,l_r_236)));
      real l_r_269 = RAdd(l_r_263,RMul(0.e0,l_r_239));
      real l_r_270 = RMul(0.e0,RAdd(RAdd(RMul(l_r_184,l_r_222),RMul(l_r_192,l_r_228)),RMul(l_r_200,l_r_208)));
      real l_r_271 = RMul(0.e0,l_r_242);
      real l_r_272 = RMul(0.e0,l_r_247);
      real l_r_273 = RMul(0.e0,RAdd(RAdd(RMul(l_r_186,l_r_223),RMul(l_r_194,l_r_229)),RMul(l_r_202,l_r_213)));
      real l_r_274 = RMul(0.e0,l_r_253);
      real l_r_275 = RMul(0.e0,RAdd(RAdd(RMul(l_r_187,l_r_224),RMul(l_r_195,l_r_230)),RMul(l_r_203,l_r_218)));
      real l_r_276 = RAdd(l_r_270,RMul(0.e0,l_r_241));
      real l_r_277 = RMul(0.e0,l_r_244);
      real l_r_278 = RMul(0.e0,l_r_250);
      real l_r_279 = RMul(0.e0,l_r_246);
      real l_r_280 = RMul(0.e0,l_r_252);
      real l_r_281 = RMul(0.e0,l_r_248);
      real l_r_282 = RMul(0.e0,l_r_254);
      real l_op1_e3_l_18_283 = RMul(0.2e1,VDot<3,4>(VEC3{4}(l_r_184,l_r_192,l_r_200),VEC3{4}(VDot<3,4>(v_255,VEC3{4}(l_r_218,l_r_227,l_r_233)),VDot<3,4>(v_255,VEC3{4}(l_r_221,l_r_218,l_r_236)),VDot<3,4>(v_255,VEC3{4}(l_r_224,l_r_230,l_r_218)))));
      real l_vdot_284 = VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_262,l_r_257),l_r_258),l_r_259),RMul(0.1e1,l_r_244)),l_r_260),RMul(-0.1e1,l_r_250)),l_r_261),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_269,l_r_264),l_r_265),l_r_266),RMul(0.1e1,l_r_246)),l_r_267),RMul(-0.1e1,l_r_252)),l_r_268),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_276,l_r_271),l_r_272),l_r_273),RMul(0.1e1,l_r_248)),l_r_274),RMul(-0.1e1,l_r_254)),l_r_275),l_op1_e3_l_18_283)),LOAD_0(p_dPos_150));
      real l_vdot_285 = VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_262,RMul(-0.1e1,l_r_238)),l_r_258),l_r_259),l_r_277),RMul(0.1e1,l_r_249)),l_r_278),l_r_261),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_269,RMul(-0.1e1,l_r_240)),l_r_265),l_r_266),l_r_279),RMul(0.1e1,l_r_251)),l_r_280),l_r_268),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_276,RMul(-0.1e1,l_r_242)),l_r_272),l_r_273),l_r_281),RMul(0.1e1,l_r_253)),l_r_282),l_r_275),l_op1_e3_l_18_283)),LOAD_0(p_dPos_150));
      real l_vdot_286 = VDot<3,4>(VEC3{4}(RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_256,RMul(0.1e1,l_r_237)),l_r_257),RMul(-0.1e1,l_r_243)),l_r_259),l_r_277),l_r_260),l_r_278),l_r_261),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_263,RMul(0.1e1,l_r_239)),l_r_264),RMul(-0.1e1,l_r_245)),l_r_266),l_r_279),l_r_267),l_r_280),l_r_268),l_op1_e3_l_18_283),RDiv(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(l_r_270,RMul(0.1e1,l_r_241)),l_r_271),RMul(-0.1e1,l_r_247)),l_r_273),l_r_281),l_r_274),l_r_282),l_r_275),l_op1_e3_l_18_283)),LOAD_0(p_dPos_150));
      vec3{4} v_287 = VEC3{4}(l_vdot_284,l_vdot_285,l_vdot_286);
      vec3{4} v_288 = VScale<3,4>(l_time_152,v_287);
      vec3{4} v_289 = VAdd<3,4>(LOAD_0(l__t_158),v_288);
      vec3{4} v_290 = VAdd<3,4>(VAdd<3,4>(VEC3{4}(0.1e-8,0.1e-8,0.1e-8),LOAD_0(l__t_158)),v_288);
      vec3{4} v_291 = v_287;
      vec3{4} v_292 = v_289;
      if (BAnd(GT<real>(RAdd(0.1e1,0.1e-8),VDot<3,4>(VEC3{4}(0.1e1,0.1e1,0.1e1),v_289)),BAnd(GT<real>(VIndex<3,4,0>(v_290),-0.e0),BAnd(GT<real>(VIndex<3,4,1>(v_290),-0.e0),GT<real>(VIndex<3,4,2>(v_290),-0.e0))))) {
        tensor[3] _arg_293 = PACK(v_292);
        return ExtractFemItemN<[femData(Mesh),int,tensor[3]],femData(MeshPos),RefBuild(Mesh),"","",[],int>(l__t_156,l__t_157,_arg_293)
      } else {
        bool l__t_423;
        femData(MeshPos) l__t_420;
        vec2 v_373;
        real l_time_372;
        int l_face_371;
        real l_faceTime_370;
        real l_time_365;
        int l_face_364;
        real l_faceTime_363;
        real l_time_358;
        int l_face_357;
        real l_faceTime_356;
        real l_time_351;
        int l_face_350;
        real l_faceTime_349;
        vec2 v_339;
        real l_time_338;
        int l_face_337;
        real l_faceTime_336;
        real l_time_327;
        int l_face_326;
        real l_faceTime_325;
        real l_time_316;
        int l_face_315;
        real l_faceTime_314;
        real l_time_305;
        int l_face_304;
        real l_faceTime_303;
        int l__t_294 = ExtractFemItem<int,PosEntryFacet(MeshPos)>(l_x_151);
        vec3{4} v_295 = VEC3{4}(0.57735026919e0,0.57735026919e0,0.57735026919e0);
        real l_op1_e3_l_27_296 = RMul(l_time_152,VDot<3,4>(v_295,v_291));
        real l__t_297 = RDiv(RSub(0.57735026919e0,VDot<3,4>(v_295,LOAD_0(l__t_158))),l_op1_e3_l_27_296);
        bool l__t_298 = GTE<real>(Abs<real>(l_op1_e3_l_27_296),0.1e-20);
        vec3{4} v_299 = v_295;
        if (BAnd(GTE<real>(l__t_297,-0.1e-15),BAnd(GT<real>(+inf,l__t_297),l__t_298))) {
          real l__t_302;
          int l__t_301;
          real l_faceTime_300;
          if (NEQ<int>(l__t_294,0)) {
            l_faceTime_300 = -inf;
            l__t_301 = 0;
            l__t_302 = l__t_297;
          } else {
            l_faceTime_300 = l__t_297;
            l__t_301 = -1;
            l__t_302 = +inf;
          }
          l_faceTime_303 = l_faceTime_300;
          l_face_304 = l__t_301;
          l_time_305 = l__t_302;
        } else {
          l_faceTime_303 = -inf;
          l_face_304 = -1;
          l_time_305 = +inf;
        }
        vec3{4} v_306 = VEC3{4}(0.1e1,0.e0,0.e0);
        real l_op1_e3_l_27_307 = RMul(l_time_152,VDot<3,4>(v_306,v_291));
        real l__t_308 = RDiv(RSub(0.e0,VDot<3,4>(v_306,LOAD_0(l__t_158))),l_op1_e3_l_27_307);
        bool l__t_309 = GTE<real>(Abs<real>(l_op1_e3_l_27_307),0.1e-20);
        vec3{4} v_310 = v_306;
        if (BAnd(GTE<real>(l__t_308,-0.1e-15),BAnd(GT<real>(l_time_305,l__t_308),l__t_309))) {
          real l__t_313;
          int l_ilit_312;
          real l_faceTime_311;
          if (NEQ<int>(l__t_294,1)) {
            l_faceTime_311 = l_faceTime_303;
            l_ilit_312 = 1;
            l__t_313 = l__t_308;
          } else {
            l_faceTime_311 = l__t_308;
            l_ilit_312 = l_face_304;
            l__t_313 = l_time_305;
          }
          l_faceTime_314 = l_faceTime_311;
          l_face_315 = l_ilit_312;
          l_time_316 = l__t_313;
        } else {
          l_faceTime_314 = l_faceTime_303;
          l_face_315 = l_face_304;
          l_time_316 = l_time_305;
        }
        vec3{4} v_317 = VEC3{4}(0.e0,-0.1e1,0.e0);
        real l_op1_e3_l_27_318 = RMul(l_time_152,VDot<3,4>(v_317,v_291));
        real l__t_319 = RDiv(RSub(0.e0,VDot<3,4>(v_317,LOAD_0(l__t_158))),l_op1_e3_l_27_318);
        bool l__t_320 = GTE<real>(Abs<real>(l_op1_e3_l_27_318),0.1e-20);
        vec3{4} v_321 = v_317;
        if (BAnd(GTE<real>(l__t_319,-0.1e-15),BAnd(GT<real>(l_time_316,l__t_319),l__t_320))) {
          real l__t_324;
          int l_ilit_323;
          real l_faceTime_322;
          if (NEQ<int>(l__t_294,2)) {
            l_faceTime_322 = l_faceTime_314;
            l_ilit_323 = 2;
            l__t_324 = l__t_319;
          } else {
            l_faceTime_322 = l__t_319;
            l_ilit_323 = l_face_315;
            l__t_324 = l_time_316;
          }
          l_faceTime_325 = l_faceTime_322;
          l_face_326 = l_ilit_323;
          l_time_327 = l__t_324;
        } else {
          l_faceTime_325 = l_faceTime_314;
          l_face_326 = l_face_315;
          l_time_327 = l_time_316;
        }
        vec3{4} v_328 = VEC3{4}(0.e0,0.e0,0.1e1);
        real l_op1_e3_l_27_329 = RMul(l_time_152,VDot<3,4>(v_328,v_291));
        real l__t_330 = RDiv(RSub(0.e0,VDot<3,4>(v_328,LOAD_0(l__t_158))),l_op1_e3_l_27_329);
        bool l__t_331 = GTE<real>(Abs<real>(l_op1_e3_l_27_329),0.1e-20);
        vec3{4} v_332 = v_328;
        if (BAnd(GTE<real>(l__t_330,-0.1e-15),BAnd(GT<real>(l_time_327,l__t_330),l__t_331))) {
          real l__t_335;
          int l_ilit_334;
          real l_faceTime_333;
          if (NEQ<int>(l__t_294,3)) {
            l_faceTime_333 = l_faceTime_325;
            l_ilit_334 = 3;
            l__t_335 = l__t_330;
          } else {
            l_faceTime_333 = l__t_330;
            l_ilit_334 = l_face_326;
            l__t_335 = l_time_327;
          }
          l_faceTime_336 = l_faceTime_333;
          l_face_337 = l_ilit_334;
          l_time_338 = l__t_335;
        } else {
          l_faceTime_336 = l_faceTime_325;
          l_face_337 = l_face_326;
          l_time_338 = l_time_327;
        }
        if (NEQ<int>(l_face_337,-1)) {
          v_339 = VEC2(Max<real>(l_time_338,0.e0),IntToReal(l_face_337));
        } else {
          vec2 v_340;
          if (EQ<real>(-inf,l_faceTime_336)) {
            v_340 = VEC2(-0.1e1,-0.1e1);
          } else {
            v_340 = VEC2(l_faceTime_336,IntToReal(l__t_294));
          }
          v_339 = v_340;
        }
        real l_eTime_341 = VIndex<2,2,0>(v_339);
        real l_time_342 = RSub(l_time_152,RMul(l_time_152,l_eTime_341));
        &tensor[3] l__t_343 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_x_151);
        real l__t_344 = RDiv(RSub(0.57735026919e0,VDot<3,4>(v_299,LOAD_0(l__t_343))),l_op1_e3_l_27_296);
        int l__t_345 = ExtractFemItem<int,CellIndex(Mesh)>(l_x_151);
        if (BAnd(GTE<real>(l__t_344,-0.1e-15),BAnd(GT<real>(+inf,l__t_344),l__t_298))) {
          real l__t_348;
          int l__t_347;
          real l_faceTime_346;
          if (NEQ<int>(l__t_294,0)) {
            l_faceTime_346 = -inf;
            l__t_347 = 0;
            l__t_348 = l__t_344;
          } else {
            l_faceTime_346 = l__t_344;
            l__t_347 = -1;
            l__t_348 = +inf;
          }
          l_faceTime_349 = l_faceTime_346;
          l_face_350 = l__t_347;
          l_time_351 = l__t_348;
        } else {
          l_faceTime_349 = -inf;
          l_face_350 = -1;
          l_time_351 = +inf;
        }
        real l__t_352 = RDiv(RSub(0.e0,VDot<3,4>(v_310,LOAD_0(l__t_343))),l_op1_e3_l_27_307);
        if (BAnd(GTE<real>(l__t_352,-0.1e-15),BAnd(GT<real>(l_time_351,l__t_352),l__t_309))) {
          real l__t_355;
          int l_ilit_354;
          real l_faceTime_353;
          if (NEQ<int>(l__t_294,1)) {
            l_faceTime_353 = l_faceTime_349;
            l_ilit_354 = 1;
            l__t_355 = l__t_352;
          } else {
            l_faceTime_353 = l__t_352;
            l_ilit_354 = l_face_350;
            l__t_355 = l_time_351;
          }
          l_faceTime_356 = l_faceTime_353;
          l_face_357 = l_ilit_354;
          l_time_358 = l__t_355;
        } else {
          l_faceTime_356 = l_faceTime_349;
          l_face_357 = l_face_350;
          l_time_358 = l_time_351;
        }
        real l__t_359 = RDiv(RSub(0.e0,VDot<3,4>(v_321,LOAD_0(l__t_343))),l_op1_e3_l_27_318);
        if (BAnd(GTE<real>(l__t_359,-0.1e-15),BAnd(GT<real>(l_time_358,l__t_359),l__t_320))) {
          real l__t_362;
          int l_ilit_361;
          real l_faceTime_360;
          if (NEQ<int>(l__t_294,2)) {
            l_faceTime_360 = l_faceTime_356;
            l_ilit_361 = 2;
            l__t_362 = l__t_359;
          } else {
            l_faceTime_360 = l__t_359;
            l_ilit_361 = l_face_357;
            l__t_362 = l_time_358;
          }
          l_faceTime_363 = l_faceTime_360;
          l_face_364 = l_ilit_361;
          l_time_365 = l__t_362;
        } else {
          l_faceTime_363 = l_faceTime_356;
          l_face_364 = l_face_357;
          l_time_365 = l_time_358;
        }
        real l__t_366 = RDiv(RSub(0.e0,VDot<3,4>(v_332,LOAD_0(l__t_343))),l_op1_e3_l_27_329);
        if (BAnd(GTE<real>(l__t_366,-0.1e-15),BAnd(GT<real>(l_time_365,l__t_366),l__t_331))) {
          real l__t_369;
          int l_ilit_368;
          real l_faceTime_367;
          if (NEQ<int>(l__t_294,3)) {
            l_faceTime_367 = l_faceTime_363;
            l_ilit_368 = 3;
            l__t_369 = l__t_366;
          } else {
            l_faceTime_367 = l__t_366;
            l_ilit_368 = l_face_364;
            l__t_369 = l_time_365;
          }
          l_faceTime_370 = l_faceTime_367;
          l_face_371 = l_ilit_368;
          l_time_372 = l__t_369;
        } else {
          l_faceTime_370 = l_faceTime_363;
          l_face_371 = l_face_364;
          l_time_372 = l_time_365;
        }
        if (NEQ<int>(l_face_371,-1)) {
          v_373 = VEC2(Max<real>(l_time_372,0.e0),IntToReal(l_face_371));
        } else {
          vec2 v_374;
          if (EQ<real>(-inf,l_faceTime_370)) {
            v_374 = VEC2(-0.1e1,-0.1e1);
          } else {
            v_374 = VEC2(l_faceTime_370,IntToReal(l__t_294));
          }
          v_373 = v_374;
        }
        int l__t_375 = RealToInt(RFloor(VIndex<2,2,1>(v_373)));
        int[2] l__t_376 = nextCell4$6219(l__t_375,l__t_345,l__t_154);
        int l__t_377 = Subscript<int[2]>(l__t_376,0);
        if (NEQ<int>(-1,l__t_377)) {
          int l__t_378 = Subscript<int[2]>(l__t_376,1);
          tensor[4,4] l__t_379 = <tensor[4,4]>[0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.971445146547e-16,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_380 = <tensor[4,4]>[0.57735026919e0,0.57735026919e0,0.57735026919e0,-0.57735026919e0,-0.333333333333e0,0.666666666667e0,-0.333333333333e0,0.333333333333e0,-0.333333333333e0,-0.333333333333e0,0.666666666667e0,0.333333333333e0,0.971445146547e-16,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_381 = <tensor[4,4]>[-0.333333333333e0,0.666666666667e0,-0.333333333333e0,0.333333333333e0,-0.57735026919e0,-0.57735026919e0,-0.57735026919e0,0.57735026919e0,-0.333333333333e0,-0.333333333333e0,0.666666666667e0,0.333333333333e0,0.971445146547e-16,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_382 = <tensor[4,4]>[-0.333333333333e0,0.666666666667e0,-0.333333333333e0,0.333333333333e0,-0.333333333333e0,-0.333333333333e0,0.666666666667e0,0.333333333333e0,0.57735026919e0,0.57735026919e0,0.57735026919e0,-0.57735026919e0,0.971445146547e-16,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_383 = <tensor[4,4]>[0.57735026919e0,-0.1e1,-0.1e1,0.1e1,0.57735026919e0,0.1e1,0.e0,0.e0,0.57735026919e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_384 = <tensor[4,4]>[0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_385 = <tensor[4,4]>[0.e0,0.1e1,0.e0,0.e0,-0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_386 = <tensor[4,4]>[0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_387 = <tensor[4,4]>[-0.1e1,-0.57735026919e0,-0.1e1,0.1e1,0.1e1,-0.57735026919e0,0.e0,0.e0,0.e0,-0.57735026919e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_388 = <tensor[4,4]>[0.e0,-0.1e1,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_389 = <tensor[4,4]>[0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,-0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_390 = <tensor[4,4]>[-0.1e1,-0.1e1,0.57735026919e0,0.1e1,0.1e1,0.e0,0.57735026919e0,0.e0,0.e0,0.1e1,0.57735026919e0,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_391 = <tensor[4,4]>[0.e0,0.e0,0.1e1,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4] l__t_392 = <tensor[4,4]>[0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,-0.1e1,0.e0,0.e0,0.1e1,0.e0,0.e0,0.e0,0.e0,0.e0,0.1e1];
          tensor[4,4][4] t_393 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_390)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_391)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_392)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384))};
          tensor[4,4][4] t_394 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_387)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_388)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_389))};
          tensor[4,4][4] t_395 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_383)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_385)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_386))};
          tensor[4,4][4] t_396 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_379)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_380)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_381)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_382))};
          tensor[4,4][4][4] t_397 = <tensor[4,4][4][4]>{t_396,t_395,t_394,t_393};
          print("face ",l__t_375," to ",l__t_378,"\n","got: ",Subscript<tensor[4,4][4]>(Subscript<tensor[4,4][4][4]>(t_397,l__t_375),l__t_378),"\n");
          tensor[4,4][4] t_398 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_390)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_391)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_392)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384))};
          tensor[4,4][4] t_399 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_387)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_388)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_389))};
          tensor[4,4][4] t_400 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_383)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_385)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_386))};
          tensor[4,4][4] t_401 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_379)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_380)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_381)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_382))};
          tensor[4,4][4][4] t_402 = <tensor[4,4][4][4]>{t_401,t_400,t_399,t_398};
          &tensor[4,4] l__t_403 = Subscript<tensor[4,4][4]>(Subscript<tensor[4,4][4][4]>(t_402,l__t_375),l__t_378);
          real l_r_404 = RMul(VIndex<2,2,0>(v_373),l_time_152);
          vec3{4} v_405 = VAdd<3,4>(VEC3{4}(RMul(l_r_404,l_vdot_284),RMul(l_r_404,l_vdot_285),RMul(l_r_404,l_vdot_286)),LOAD_0(l__t_343));
          vec4 v_406 = VEC4(VIndex<3,4,0>(v_405),VIndex<3,4,1>(v_405),VIndex<3,4,2>(v_405),0.1e1);
          tensor[4,4][4] t_407 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_390)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_391)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_392)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384))};
          tensor[4,4][4] t_408 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_387)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_388)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_389))};
          tensor[4,4][4] t_409 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_383)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_385)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_386))};
          tensor[4,4][4] t_410 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_379)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_380)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_381)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_382))};
          tensor[4,4][4][4] t_411 = <tensor[4,4][4][4]>{t_410,t_409,t_408,t_407};
          &tensor[4,4] l__t_412 = Subscript<tensor[4,4][4]>(Subscript<tensor[4,4][4][4]>(t_411,l__t_375),l__t_378);
          tensor[4,4][4] t_413 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_390)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_391)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_392)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384))};
          tensor[4,4][4] t_414 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_387)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_388)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_389))};
          tensor[4,4][4] t_415 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_383)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_384)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_385)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_386))};
          tensor[4,4][4] t_416 = <tensor[4,4][4]>{TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_379)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_380)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_381)),TensorCopy<[4,4]>(TensorRef<[4,4]>(l__t_382))};
          tensor[4,4][4][4] t_417 = <tensor[4,4][4][4]>{t_416,t_415,t_414,t_413};
          &tensor[4,4] l__t_418 = Subscript<tensor[4,4][4]>(Subscript<tensor[4,4][4][4]>(t_417,l__t_375),l__t_378);
          tensor[3] _arg_419 = <tensor[3]>[VIndex<4,4,0>(VEC4(VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[0]>(l__t_403)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[1]>(l__t_403)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[2]>(l__t_403)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[3]>(l__t_403)),v_406))),VIndex<4,4,1>(VEC4(VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[0]>(l__t_412)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[1]>(l__t_412)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[2]>(l__t_412)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[3]>(l__t_412)),v_406))),VIndex<4,4,2>(VEC4(VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[0]>(l__t_418)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[1]>(l__t_418)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[2]>(l__t_418)),v_406),VDot<4,4>(LOAD_0(ProjectLast<&tensor[4,4],[3]>(l__t_418)),v_406)))];
          l__t_420 = ExtractFemItemN<[femData(Mesh),int,tensor[3],int],femData(MeshPos),RefBuild(Mesh),"","",[],int>(l__t_154,l__t_377,_arg_419,l__t_378);
        } else {
          real l_r_421 = RMul(VIndex<2,2,0>(v_373),l_time_152);
          tensor[3] _arg_422 = PACK(VAdd<3,4>(VEC3{4}(RMul(l_r_421,l_vdot_284),RMul(l_r_421,l_vdot_285),RMul(l_r_421,l_vdot_286)),LOAD_0(l__t_343)));
          l__t_420 = ExtractFemItemN<[femData(Mesh),tensor[3]],femData(MeshPos),InvalidBuildBoundary(MeshPos),"","",[],int>(l__t_154,_arg_422);
        }
        if (BNot(ExtractFemItem<bool,Valid(MeshPos)>(l__t_420))) {
          l__t_423 = true;
        } else {
          bool l__t_424;
          if (LT<real>(l_eTime_341,0.e0)) {
            l__t_424 = true;
          } else {
            bool l__t_425;
            if (GT<real>(l_eTime_341,0.1e1)) {
              l__t_425 = true;
            } else {
              l__t_425 = LT<real>(l_time_342,globals.timeEps);
            }
            l__t_424 = l__t_425;
          }
          l__t_423 = l__t_424;
        }
        if (l__t_423) {
          return l__t_420
        }
        l_nmp_426 = l__t_420;
        l_time_427 = l_time_342;
      }
      l_x_151 = l_nmp_426;
      l_time_152 = l_time_427;
    }
    print("Took stupid way out!\n");
    &tensor[3] l__t_428 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(p_x_149);
    femData(Mesh) l__t_429 = ExtractFem<femData(Mesh),femData(MeshPos)>(p_x_149);
    int l_mulRes_430 = IMul(ExtractFemItem<int,CellIndex(MeshPos)>(p_x_149),4);
    int t_431 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_429,l_mulRes_430);
    int l_mulRes_432 = IMul(3,t_431);
    int t_433 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_429,IAdd(l_mulRes_430,1));
    int l_mulRes_434 = IMul(3,t_433);
    int t_435 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_429,IAdd(l_mulRes_430,2));
    int l_mulRes_436 = IMul(3,t_435);
    int t_437 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_429,IAdd(l_mulRes_430,3));
    int l_mulRes_438 = IMul(3,t_437);
    real l_prod_439 = RMul(0.1e1,0.1e1);
    real l_prod_440 = RMul(TensorIndex<&tensor[3],[0]>(l__t_428),l_prod_439);
    real l_prod_441 = RMul(0.1e1,RMul(TensorIndex<&tensor[3],[1]>(l__t_428),0.1e1));
    real l_prod_442 = RMul(0.1e1,RMul(0.1e1,TensorIndex<&tensor[3],[2]>(l__t_428)));
    real l_sum_443 = RAdd(RMul(0.1e1,RMul(0.1e1,l_prod_439)),RAdd(RMul(-0.1e1,l_prod_442),RAdd(RMul(-0.1e1,l_prod_441),RMul(-0.1e1,l_prod_440))));
    real l_basisEval_444 = RMul(0.1e1,l_prod_440);
    real l_basisEval_445 = RMul(0.1e1,l_prod_441);
    real l_basisEval_446 = RMul(0.1e1,l_prod_442);
    real t_447 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,l_mulRes_432);
    real t_448 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,l_mulRes_434);
    real t_449 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,l_mulRes_436);
    real t_450 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,l_mulRes_438);
    real t_451 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(1,l_mulRes_432));
    real t_452 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(1,l_mulRes_434));
    real t_453 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(1,l_mulRes_436));
    real t_454 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(1,l_mulRes_438));
    real t_455 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(2,l_mulRes_432));
    real t_456 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(2,l_mulRes_434));
    real t_457 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(2,l_mulRes_436));
    real t_458 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_429,IAdd(2,l_mulRes_438));
    tensor[3] _arg_459 = PACK(VAdd<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(t_447,l_sum_443),RMul(t_448,l_basisEval_444)),RMul(t_449,l_basisEval_445)),RMul(t_450,l_basisEval_446)),RAdd(RAdd(RAdd(RMul(t_451,l_sum_443),RMul(t_452,l_basisEval_444)),RMul(t_453,l_basisEval_445)),RMul(t_454,l_basisEval_446)),RAdd(RAdd(RAdd(RMul(t_455,l_sum_443),RMul(t_456,l_basisEval_444)),RMul(t_457,l_basisEval_445)),RMul(t_458,l_basisEval_446))),LOAD_0(p_dPos_150)));
    femData(MeshPos) l_cmp_460 = findPos$6215(globals.meshData,_arg_459);
    return l_cmp_460
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_461;
    l__t_461 = <femData(MeshCell)[]>{};
    for i__t_462 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.meshData),1) {
      l__t_461 = Append<femData(MeshCell),femData(MeshCell)>(l__t_461,LoadFem<femData(MeshCell)>(globals.meshData,i__t_462));
    }
    femData(FemFunc) l_data_463 = LoadFem<femData(FemFunc)>(globals.0data03AD_intermedateGlobal,LoadFem<femData(Space)>(globals.0space03AB_intermedateGlobal,globals.meshData));
    globals.data = l_data_463;
    femData(Space) l__t_464 = ExtractFem<femData(Space),femData(FemFunc)>(l_data_463);
    globals._t = ExtractFem<femData(Mesh),femData(Space)>(l__t_464);
    globals._tX = l__t_464;
  }
//***** STRAND *****
strand gg (&tensor[3] p_startPos_465) {
  varying output tensor[3][] stream;
  varying output tensor[3][] newStream;
  varying int step;
  varying femData(MeshPos) cPos;
  varying tensor[3] altCPos;
  tensor[3] startPos;
  initialize (world, globals) {
    tensor[3][1] t_467 = <tensor[3][1]>{TensorCopy<[3]>(p_startPos_465)};
    tensor[3][] l__t_466 = MkDynamic<tensor[3],1>(t_467);
    tensor[3][1] t_469 = <tensor[3][1]>{TensorCopy<[3]>(p_startPos_465)};
    tensor[3][] l__t_468 = MkDynamic<tensor[3],1>(t_469);
    femData(MeshPos) l_cPos_470 = findPos$6215(globals.meshData,p_startPos_465);
    self.stream = l__t_466;
    self.newStream = l__t_468;
    self.step = 0;
    self.cPos = l_cPos_470;
    self.altCPos = TensorCopy<[3]>(p_startPos_465);
    self.startPos = TensorCopy<[3]>(p_startPos_465);
  }
  update (world, globals) {
    vec3{4} v_786;
    bool l__t_693;
    vec3{4} v_598;
    bool l__t_472;
    bool l__t_471 = ExtractFemItem<bool,Valid(MeshPos)>(self.cPos);
    if (BNot(l__t_471)) {
      l__t_472 = true;
    } else {
      bool l__t_474;
      femData(MeshPos) l__t_473 = findPos$6215(globals.meshData,TensorRef<[3]>(self.altCPos));
      if (BNot(ExtractFemItem<bool,Valid(MeshPos)>(l__t_473))) {
        l__t_474 = true;
      } else {
        l__t_474 = EQ<int>(self.step,globals.stepMax);
      }
      l__t_472 = l__t_474;
    }
    if (l__t_472) {
      stabilize;
    }
    &tensor[3] l__t_475 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(self.cPos);
    int l__t_476 = ExtractFemItem<int,CellIndex(MeshPos)>(self.cPos);
    femData(Mesh) l__t_477 = ExtractFem<femData(Mesh),femData(MeshPos)>(self.cPos);
    int l_mulRes_478 = IMul(l__t_476,4);
    int t_479 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_477,l_mulRes_478);
    int l_mulRes_480 = IMul(3,t_479);
    int t_481 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_477,IAdd(l_mulRes_478,1));
    int l_mulRes_482 = IMul(3,t_481);
    int t_483 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_477,IAdd(l_mulRes_478,2));
    int l_mulRes_484 = IMul(3,t_483);
    int t_485 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_477,IAdd(l_mulRes_478,3));
    int l_mulRes_486 = IMul(3,t_485);
    real l_varAcc_487 = TensorIndex<&tensor[3],[0]>(l__t_475);
    real l_varAcc_488 = TensorIndex<&tensor[3],[1]>(l__t_475);
    real l_varAcc_489 = TensorIndex<&tensor[3],[2]>(l__t_475);
    real l_prod_490 = RMul(0.1e1,0.1e1);
    real l_prod_491 = RMul(l_varAcc_487,l_prod_490);
    real l_prod_492 = RMul(l_varAcc_488,0.1e1);
    real l_prod_493 = RMul(0.1e1,l_prod_492);
    real l_prod_494 = RMul(0.1e1,l_varAcc_489);
    real l_prod_495 = RMul(0.1e1,l_prod_494);
    real l_mult_496 = RMul(0.1e1,RMul(0.1e1,l_prod_490));
    real l_mult_497 = RMul(-0.1e1,l_prod_495);
    real l_mult_498 = RMul(-0.1e1,l_prod_493);
    real l_mult_499 = RMul(-0.1e1,l_prod_491);
    real l_sum_500 = RAdd(l_mult_496,RAdd(l_mult_497,RAdd(l_mult_498,l_mult_499)));
    real l_basisEval_501 = RMul(0.1e1,l_prod_491);
    real l_basisEval_502 = RMul(0.1e1,l_prod_493);
    real l_basisEval_503 = RMul(0.1e1,l_prod_495);
    real t_504 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,l_mulRes_480);
    real t_505 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,l_mulRes_482);
    real t_506 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,l_mulRes_484);
    real t_507 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,l_mulRes_486);
    real t_508 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(1,l_mulRes_480));
    real t_509 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(1,l_mulRes_482));
    real t_510 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(1,l_mulRes_484));
    real t_511 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(1,l_mulRes_486));
    real t_512 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(2,l_mulRes_480));
    real t_513 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(2,l_mulRes_482));
    real t_514 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(2,l_mulRes_484));
    real t_515 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_477,IAdd(2,l_mulRes_486));
    vec3{4} v_516 = VSub<3,4>(VEC3{4}(RAdd(RAdd(RAdd(RMul(t_504,l_sum_500),RMul(t_505,l_basisEval_501)),RMul(t_506,l_basisEval_502)),RMul(t_507,l_basisEval_503)),RAdd(RAdd(RAdd(RMul(t_508,l_sum_500),RMul(t_509,l_basisEval_501)),RMul(t_510,l_basisEval_502)),RMul(t_511,l_basisEval_503)),RAdd(RAdd(RAdd(RMul(t_512,l_sum_500),RMul(t_513,l_basisEval_501)),RMul(t_514,l_basisEval_502)),RMul(t_515,l_basisEval_503))),LOAD_0(TensorRef<[3]>(self.altCPos)));
    if (GT<real>(Sqrt(VDot<3,4>(v_516,v_516)),0.1e-5)) {
      print("Error in tracing: At step:",self.step," with particle:",TensorRef<[3]>(self.startPos),"\n");
    } else {
      print("fine in cell:",LoadFem<femData(MeshCell)>(l__t_477,l__t_476),"\n");
    }
    if (l__t_471) {
      femData(FuncCell) l__t_517 = LoadFem<femData(FuncCell)>(globals.data,ExtractFemItem<int,CellIndex(MeshCell)>(LoadFem<femData(MeshCell)>(l__t_477,l__t_476)));
      femData(FemFunc) l__t_518 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_517);
      femData(Space) l__t_519 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_518);
      int l_mulRes_520 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(l__t_517),10);
      int t_521 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,l_mulRes_520);
      int l_mulRes_522 = IMul(3,t_521);
      int t_523 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,1));
      int l_mulRes_524 = IMul(3,t_523);
      int t_525 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,2));
      int l_mulRes_526 = IMul(3,t_525);
      int t_527 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,3));
      int l_mulRes_528 = IMul(3,t_527);
      int t_529 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,4));
      int l_mulRes_530 = IMul(3,t_529);
      int t_531 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,5));
      int l_mulRes_532 = IMul(3,t_531);
      int t_533 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,6));
      int l_mulRes_534 = IMul(3,t_533);
      int t_535 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,7));
      int l_mulRes_536 = IMul(3,t_535);
      int t_537 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,8));
      int l_mulRes_538 = IMul(3,t_537);
      int t_539 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_519,IAdd(l_mulRes_520,9));
      int l_mulRes_540 = IMul(3,t_539);
      real l_prod_541 = RMul(RMul(l_varAcc_487,l_varAcc_487),l_prod_490);
      real l_prod_542 = RMul(l_varAcc_487,l_prod_492);
      real l_prod_543 = RMul(l_varAcc_487,l_prod_494);
      real l_prod_544 = RMul(0.1e1,RMul(RMul(l_varAcc_488,l_varAcc_488),0.1e1));
      real l_prod_545 = RMul(0.1e1,RMul(l_varAcc_488,l_varAcc_489));
      real l_prod_546 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_489,l_varAcc_489)));
      real l_mult_547 = RMul(0.2e1,l_prod_546);
      real l_mult_548 = RMul(0.4e1,l_prod_545);
      real l_mult_549 = RMul(0.2e1,l_prod_544);
      real l_mult_550 = RMul(0.4e1,l_prod_543);
      real l_mult_551 = RMul(0.4e1,l_prod_542);
      real l_mult_552 = RMul(0.2e1,l_prod_541);
      real l_sum_553 = RAdd(l_mult_496,RAdd(RMul(-0.3e1,l_prod_495),RAdd(l_mult_547,RAdd(RMul(-0.3e1,l_prod_493),RAdd(l_mult_548,RAdd(l_mult_549,RAdd(RMul(-0.3e1,l_prod_491),RAdd(l_mult_550,RAdd(l_mult_551,l_mult_552)))))))));
      real l_sum_554 = RAdd(l_mult_499,l_mult_552);
      real l_sum_555 = RAdd(l_mult_498,l_mult_549);
      real l_sum_556 = RAdd(l_mult_497,l_mult_547);
      real l_mult_557 = RMul(-0.4e1,l_prod_545);
      real l_mult_558 = RMul(-0.4e1,l_prod_543);
      real l_sum_559 = RAdd(RMul(0.4e1,l_prod_495),RAdd(RMul(-0.4e1,l_prod_546),RAdd(l_mult_557,l_mult_558)));
      real l_mult_560 = RMul(-0.4e1,l_prod_542);
      real l_sum_561 = RAdd(RMul(0.4e1,l_prod_493),RAdd(l_mult_557,RAdd(RMul(-0.4e1,l_prod_544),l_mult_560)));
      real l_sum_562 = RAdd(RMul(0.4e1,l_prod_491),RAdd(l_mult_558,RAdd(l_mult_560,RMul(-0.4e1,l_prod_541))));
      real t_563 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_522);
      real t_564 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_524);
      real t_565 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_526);
      real t_566 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_528);
      real t_567 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_530);
      real t_568 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_532);
      real t_569 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_534);
      real t_570 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_536);
      real t_571 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_538);
      real t_572 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,l_mulRes_540);
      real l_r_573 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_563,l_sum_553),RMul(t_564,l_sum_554)),RMul(t_565,l_sum_555)),RMul(t_566,l_sum_556)),RMul(t_567,l_mult_548)),RMul(t_568,l_mult_550)),RMul(t_569,l_mult_551)),RMul(t_570,l_sum_559)),RMul(t_571,l_sum_561)),RMul(t_572,l_sum_562));
      real t_574 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_522));
      real t_575 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_524));
      real t_576 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_526));
      real t_577 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_528));
      real t_578 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_530));
      real t_579 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_532));
      real t_580 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_534));
      real t_581 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_536));
      real t_582 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_538));
      real t_583 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(1,l_mulRes_540));
      real l_r_584 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_574,l_sum_553),RMul(t_575,l_sum_554)),RMul(t_576,l_sum_555)),RMul(t_577,l_sum_556)),RMul(t_578,l_mult_548)),RMul(t_579,l_mult_550)),RMul(t_580,l_mult_551)),RMul(t_581,l_sum_559)),RMul(t_582,l_sum_561)),RMul(t_583,l_sum_562));
      real t_585 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_522));
      real t_586 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_524));
      real t_587 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_526));
      real t_588 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_528));
      real t_589 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_530));
      real t_590 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_532));
      real t_591 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_534));
      real t_592 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_536));
      real t_593 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_538));
      real t_594 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_518,IAdd(2,l_mulRes_540));
      real l_r_595 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_585,l_sum_553),RMul(t_586,l_sum_554)),RMul(t_587,l_sum_555)),RMul(t_588,l_sum_556)),RMul(t_589,l_mult_548)),RMul(t_590,l_mult_550)),RMul(t_591,l_mult_551)),RMul(t_592,l_sum_559)),RMul(t_593,l_sum_561)),RMul(t_594,l_sum_562));
      vec3{4} v_596 = VEC3{4}(l_r_573,l_r_584,l_r_595);
      real l_r_597 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_596,v_596)));
      v_598 = VEC3{4}(RMul(l_r_597,l_r_573),RMul(l_r_597,l_r_584),RMul(l_r_597,l_r_595));
    } else {
      v_598 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    real l_r_599 = RMul(0.5e0,globals.stepSize);
    tensor[3] _arg_600 = <tensor[3]>[RMul(l_r_599,VIndex<3,4,0>(v_598)),RMul(l_r_599,VIndex<3,4,1>(v_598)),RMul(l_r_599,VIndex<3,4,2>(v_598))];
    femData(MeshPos) l_intermed_601 = posMove$643E(self.cPos,_arg_600);
    femData(MeshPos) l_callFindPos_602 = findPos$6215(globals._t,TensorRef<[3]>(self.altCPos));
    &tensor[3] l_refPos_603 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_602);
    int l_mulRes_604 = IMul(ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_602),10);
    int t_605 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_604);
    int l_mulRes_606 = IMul(3,t_605);
    int t_607 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,1));
    int l_mulRes_608 = IMul(3,t_607);
    int t_609 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,2));
    int l_mulRes_610 = IMul(3,t_609);
    int t_611 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,3));
    int l_mulRes_612 = IMul(3,t_611);
    int t_613 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,4));
    int l_mulRes_614 = IMul(3,t_613);
    int t_615 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,5));
    int l_mulRes_616 = IMul(3,t_615);
    int t_617 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,6));
    int l_mulRes_618 = IMul(3,t_617);
    int t_619 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,7));
    int l_mulRes_620 = IMul(3,t_619);
    int t_621 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,8));
    int l_mulRes_622 = IMul(3,t_621);
    int t_623 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_604,9));
    int l_mulRes_624 = IMul(3,t_623);
    real l_varAcc_625 = TensorIndex<&tensor[3],[0]>(l_refPos_603);
    real l_varAcc_626 = TensorIndex<&tensor[3],[1]>(l_refPos_603);
    real l_varAcc_627 = TensorIndex<&tensor[3],[2]>(l_refPos_603);
    real l_prod_628 = RMul(RMul(l_varAcc_625,l_varAcc_625),l_prod_490);
    real l_prod_629 = RMul(l_varAcc_626,0.1e1);
    real l_prod_630 = RMul(l_varAcc_625,l_prod_629);
    real l_prod_631 = RMul(0.1e1,l_varAcc_627);
    real l_prod_632 = RMul(l_varAcc_625,l_prod_631);
    real l_prod_633 = RMul(l_varAcc_625,l_prod_490);
    real l_prod_634 = RMul(0.1e1,RMul(RMul(l_varAcc_626,l_varAcc_626),0.1e1));
    real l_prod_635 = RMul(0.1e1,RMul(l_varAcc_626,l_varAcc_627));
    real l_prod_636 = RMul(0.1e1,l_prod_629);
    real l_prod_637 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_627,l_varAcc_627)));
    real l_prod_638 = RMul(0.1e1,l_prod_631);
    real l_mult_639 = RMul(0.2e1,l_prod_637);
    real l_mult_640 = RMul(0.4e1,l_prod_635);
    real l_mult_641 = RMul(0.2e1,l_prod_634);
    real l_mult_642 = RMul(0.4e1,l_prod_632);
    real l_mult_643 = RMul(0.4e1,l_prod_630);
    real l_mult_644 = RMul(0.2e1,l_prod_628);
    real l_sum_645 = RAdd(l_mult_496,RAdd(RMul(-0.3e1,l_prod_638),RAdd(l_mult_639,RAdd(RMul(-0.3e1,l_prod_636),RAdd(l_mult_640,RAdd(l_mult_641,RAdd(RMul(-0.3e1,l_prod_633),RAdd(l_mult_642,RAdd(l_mult_643,l_mult_644)))))))));
    real l_sum_646 = RAdd(RMul(-0.1e1,l_prod_633),l_mult_644);
    real l_sum_647 = RAdd(RMul(-0.1e1,l_prod_636),l_mult_641);
    real l_sum_648 = RAdd(RMul(-0.1e1,l_prod_638),l_mult_639);
    real l_mult_649 = RMul(-0.4e1,l_prod_635);
    real l_mult_650 = RMul(-0.4e1,l_prod_632);
    real l_sum_651 = RAdd(RMul(0.4e1,l_prod_638),RAdd(RMul(-0.4e1,l_prod_637),RAdd(l_mult_649,l_mult_650)));
    real l_mult_652 = RMul(-0.4e1,l_prod_630);
    real l_sum_653 = RAdd(RMul(0.4e1,l_prod_636),RAdd(l_mult_649,RAdd(RMul(-0.4e1,l_prod_634),l_mult_652)));
    real l_sum_654 = RAdd(RMul(0.4e1,l_prod_633),RAdd(l_mult_650,RAdd(l_mult_652,RMul(-0.4e1,l_prod_628))));
    real t_655 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_606);
    real t_656 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_608);
    real t_657 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_610);
    real t_658 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_612);
    real t_659 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_614);
    real t_660 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_616);
    real t_661 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_618);
    real t_662 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_620);
    real t_663 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_622);
    real t_664 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_624);
    real l_r_665 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_655,l_sum_645),RMul(t_656,l_sum_646)),RMul(t_657,l_sum_647)),RMul(t_658,l_sum_648)),RMul(t_659,l_mult_640)),RMul(t_660,l_mult_642)),RMul(t_661,l_mult_643)),RMul(t_662,l_sum_651)),RMul(t_663,l_sum_653)),RMul(t_664,l_sum_654));
    real t_666 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_606));
    real t_667 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_608));
    real t_668 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_610));
    real t_669 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_612));
    real t_670 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_614));
    real t_671 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_616));
    real t_672 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_618));
    real t_673 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_620));
    real t_674 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_622));
    real t_675 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_624));
    real l_r_676 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_666,l_sum_645),RMul(t_667,l_sum_646)),RMul(t_668,l_sum_647)),RMul(t_669,l_sum_648)),RMul(t_670,l_mult_640)),RMul(t_671,l_mult_642)),RMul(t_672,l_mult_643)),RMul(t_673,l_sum_651)),RMul(t_674,l_sum_653)),RMul(t_675,l_sum_654));
    real t_677 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_606));
    real t_678 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_608));
    real t_679 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_610));
    real t_680 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_612));
    real t_681 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_614));
    real t_682 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_616));
    real t_683 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_618));
    real t_684 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_620));
    real t_685 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_622));
    real t_686 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_624));
    real l_r_687 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_677,l_sum_645),RMul(t_678,l_sum_646)),RMul(t_679,l_sum_647)),RMul(t_680,l_sum_648)),RMul(t_681,l_mult_640)),RMul(t_682,l_mult_642)),RMul(t_683,l_mult_643)),RMul(t_684,l_sum_651)),RMul(t_685,l_sum_653)),RMul(t_686,l_sum_654));
    vec3{4} v_688 = VEC3{4}(l_r_665,l_r_676,l_r_687);
    real l_r_689 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_688,v_688)));
    vec3{4} v_690 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.altCPos)),VEC3{4}(RMul(l_r_689,RMul(l_r_599,l_r_665)),RMul(l_r_689,RMul(l_r_599,l_r_676)),RMul(l_r_689,RMul(l_r_599,l_r_687))));
    bool l__t_691 = ExtractFemItem<bool,Valid(MeshPos)>(l_intermed_601);
    vec3{4} v_692 = v_690;
    if (BNot(l__t_691)) {
      l__t_693 = true;
    } else {
      tensor[3] _arg_694 = PACK(v_692);
      femData(MeshPos) l__t_695 = findPos$6215(globals.meshData,_arg_694);
      l__t_693 = BNot(ExtractFemItem<bool,Valid(MeshPos)>(l__t_695));
    }
    if (l__t_693) {
      stabilize;
    }
    if (l__t_691) {
      &tensor[3] l_ref_696 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(l_intermed_601);
      femData(FuncCell) l__t_697 = LoadFem<femData(FuncCell)>(globals.data,ExtractFemItem<int,CellIndex(MeshCell)>(LoadFem<femData(MeshCell)>(ExtractFem<femData(Mesh),femData(MeshPos)>(l_intermed_601),ExtractFemItem<int,CellIndex(MeshPos)>(l_intermed_601))));
      femData(FemFunc) l__t_698 = ExtractFem<femData(FemFunc),femData(FuncCell)>(l__t_697);
      femData(Space) l__t_699 = ExtractFem<femData(Space),femData(FemFunc)>(l__t_698);
      int l_mulRes_700 = IMul(ExtractFemItem<int,CellIndex(FuncCell)>(l__t_697),10);
      int t_701 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,l_mulRes_700);
      int l_mulRes_702 = IMul(3,t_701);
      int t_703 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,1));
      int l_mulRes_704 = IMul(3,t_703);
      int t_705 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,2));
      int l_mulRes_706 = IMul(3,t_705);
      int t_707 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,3));
      int l_mulRes_708 = IMul(3,t_707);
      int t_709 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,4));
      int l_mulRes_710 = IMul(3,t_709);
      int t_711 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,5));
      int l_mulRes_712 = IMul(3,t_711);
      int t_713 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,6));
      int l_mulRes_714 = IMul(3,t_713);
      int t_715 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,7));
      int l_mulRes_716 = IMul(3,t_715);
      int t_717 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,8));
      int l_mulRes_718 = IMul(3,t_717);
      int t_719 = ExtractFemItem2<int,int,ExtractIndex(Space)>(l__t_699,IAdd(l_mulRes_700,9));
      int l_mulRes_720 = IMul(3,t_719);
      real l_varAcc_721 = TensorIndex<&tensor[3],[0]>(l_ref_696);
      real l_varAcc_722 = TensorIndex<&tensor[3],[1]>(l_ref_696);
      real l_varAcc_723 = TensorIndex<&tensor[3],[2]>(l_ref_696);
      real l_prod_724 = RMul(RMul(l_varAcc_721,l_varAcc_721),l_prod_490);
      real l_prod_725 = RMul(l_varAcc_722,0.1e1);
      real l_prod_726 = RMul(l_varAcc_721,l_prod_725);
      real l_prod_727 = RMul(0.1e1,l_varAcc_723);
      real l_prod_728 = RMul(l_varAcc_721,l_prod_727);
      real l_prod_729 = RMul(l_varAcc_721,l_prod_490);
      real l_prod_730 = RMul(0.1e1,RMul(RMul(l_varAcc_722,l_varAcc_722),0.1e1));
      real l_prod_731 = RMul(0.1e1,RMul(l_varAcc_722,l_varAcc_723));
      real l_prod_732 = RMul(0.1e1,l_prod_725);
      real l_prod_733 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_723,l_varAcc_723)));
      real l_prod_734 = RMul(0.1e1,l_prod_727);
      real l_mult_735 = RMul(0.2e1,l_prod_733);
      real l_mult_736 = RMul(0.4e1,l_prod_731);
      real l_mult_737 = RMul(0.2e1,l_prod_730);
      real l_mult_738 = RMul(0.4e1,l_prod_728);
      real l_mult_739 = RMul(0.4e1,l_prod_726);
      real l_mult_740 = RMul(0.2e1,l_prod_724);
      real l_sum_741 = RAdd(l_mult_496,RAdd(RMul(-0.3e1,l_prod_734),RAdd(l_mult_735,RAdd(RMul(-0.3e1,l_prod_732),RAdd(l_mult_736,RAdd(l_mult_737,RAdd(RMul(-0.3e1,l_prod_729),RAdd(l_mult_738,RAdd(l_mult_739,l_mult_740)))))))));
      real l_sum_742 = RAdd(RMul(-0.1e1,l_prod_729),l_mult_740);
      real l_sum_743 = RAdd(RMul(-0.1e1,l_prod_732),l_mult_737);
      real l_sum_744 = RAdd(RMul(-0.1e1,l_prod_734),l_mult_735);
      real l_mult_745 = RMul(-0.4e1,l_prod_731);
      real l_mult_746 = RMul(-0.4e1,l_prod_728);
      real l_sum_747 = RAdd(RMul(0.4e1,l_prod_734),RAdd(RMul(-0.4e1,l_prod_733),RAdd(l_mult_745,l_mult_746)));
      real l_mult_748 = RMul(-0.4e1,l_prod_726);
      real l_sum_749 = RAdd(RMul(0.4e1,l_prod_732),RAdd(l_mult_745,RAdd(RMul(-0.4e1,l_prod_730),l_mult_748)));
      real l_sum_750 = RAdd(RMul(0.4e1,l_prod_729),RAdd(l_mult_746,RAdd(l_mult_748,RMul(-0.4e1,l_prod_724))));
      real t_751 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_702);
      real t_752 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_704);
      real t_753 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_706);
      real t_754 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_708);
      real t_755 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_710);
      real t_756 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_712);
      real t_757 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_714);
      real t_758 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_716);
      real t_759 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_718);
      real t_760 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,l_mulRes_720);
      real l_r_761 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_751,l_sum_741),RMul(t_752,l_sum_742)),RMul(t_753,l_sum_743)),RMul(t_754,l_sum_744)),RMul(t_755,l_mult_736)),RMul(t_756,l_mult_738)),RMul(t_757,l_mult_739)),RMul(t_758,l_sum_747)),RMul(t_759,l_sum_749)),RMul(t_760,l_sum_750));
      real t_762 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_702));
      real t_763 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_704));
      real t_764 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_706));
      real t_765 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_708));
      real t_766 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_710));
      real t_767 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_712));
      real t_768 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_714));
      real t_769 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_716));
      real t_770 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_718));
      real t_771 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(1,l_mulRes_720));
      real l_r_772 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_762,l_sum_741),RMul(t_763,l_sum_742)),RMul(t_764,l_sum_743)),RMul(t_765,l_sum_744)),RMul(t_766,l_mult_736)),RMul(t_767,l_mult_738)),RMul(t_768,l_mult_739)),RMul(t_769,l_sum_747)),RMul(t_770,l_sum_749)),RMul(t_771,l_sum_750));
      real t_773 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_702));
      real t_774 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_704));
      real t_775 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_706));
      real t_776 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_708));
      real t_777 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_710));
      real t_778 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_712));
      real t_779 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_714));
      real t_780 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_716));
      real t_781 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_718));
      real t_782 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(l__t_698,IAdd(2,l_mulRes_720));
      real l_r_783 = RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_773,l_sum_741),RMul(t_774,l_sum_742)),RMul(t_775,l_sum_743)),RMul(t_776,l_sum_744)),RMul(t_777,l_mult_736)),RMul(t_778,l_mult_738)),RMul(t_779,l_mult_739)),RMul(t_780,l_sum_747)),RMul(t_781,l_sum_749)),RMul(t_782,l_sum_750));
      vec3{4} v_784 = VEC3{4}(l_r_761,l_r_772,l_r_783);
      real l_r_785 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_784,v_784)));
      v_786 = VEC3{4}(RMul(l_r_785,l_r_761),RMul(l_r_785,l_r_772),RMul(l_r_785,l_r_783));
    } else {
      v_786 = VEC3{4}(0.e0,0.e0,0.e0);
    }
    tensor[3] _arg_787 = PACK(VScale<3,4>(globals.stepSize,v_786));
    femData(MeshPos) l_cPos_788 = posMove$643E(self.cPos,_arg_787);
    tensor[3] _arg_789 = PACK(v_692);
    femData(MeshPos) l_callFindPos_790 = findPos$6215(globals._t,_arg_789);
    &tensor[3] l_refPos_791 = ExtractFemItem<tensor[3],RefPos(Mesh)>(l_callFindPos_790);
    int l_mulRes_792 = IMul(ExtractFemItem<int,CellIndex(Mesh)>(l_callFindPos_790),10);
    int t_793 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,l_mulRes_792);
    int l_mulRes_794 = IMul(3,t_793);
    int t_795 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,1));
    int l_mulRes_796 = IMul(3,t_795);
    int t_797 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,2));
    int l_mulRes_798 = IMul(3,t_797);
    int t_799 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,3));
    int l_mulRes_800 = IMul(3,t_799);
    int t_801 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,4));
    int l_mulRes_802 = IMul(3,t_801);
    int t_803 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,5));
    int l_mulRes_804 = IMul(3,t_803);
    int t_805 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,6));
    int l_mulRes_806 = IMul(3,t_805);
    int t_807 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,7));
    int l_mulRes_808 = IMul(3,t_807);
    int t_809 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,8));
    int l_mulRes_810 = IMul(3,t_809);
    int t_811 = ExtractFemItem2<int,int,ExtractIndex(Space)>(globals._tX,IAdd(l_mulRes_792,9));
    int l_mulRes_812 = IMul(3,t_811);
    real l_varAcc_813 = TensorIndex<&tensor[3],[0]>(l_refPos_791);
    real l_varAcc_814 = TensorIndex<&tensor[3],[1]>(l_refPos_791);
    real l_varAcc_815 = TensorIndex<&tensor[3],[2]>(l_refPos_791);
    real l_prod_816 = RMul(RMul(l_varAcc_813,l_varAcc_813),l_prod_490);
    real l_prod_817 = RMul(l_varAcc_814,0.1e1);
    real l_prod_818 = RMul(l_varAcc_813,l_prod_817);
    real l_prod_819 = RMul(0.1e1,l_varAcc_815);
    real l_prod_820 = RMul(l_varAcc_813,l_prod_819);
    real l_prod_821 = RMul(l_varAcc_813,l_prod_490);
    real l_prod_822 = RMul(0.1e1,RMul(RMul(l_varAcc_814,l_varAcc_814),0.1e1));
    real l_prod_823 = RMul(0.1e1,RMul(l_varAcc_814,l_varAcc_815));
    real l_prod_824 = RMul(0.1e1,l_prod_817);
    real l_prod_825 = RMul(0.1e1,RMul(0.1e1,RMul(l_varAcc_815,l_varAcc_815)));
    real l_prod_826 = RMul(0.1e1,l_prod_819);
    real l_mult_827 = RMul(0.2e1,l_prod_825);
    real l_mult_828 = RMul(0.4e1,l_prod_823);
    real l_mult_829 = RMul(0.2e1,l_prod_822);
    real l_mult_830 = RMul(0.4e1,l_prod_820);
    real l_mult_831 = RMul(0.4e1,l_prod_818);
    real l_mult_832 = RMul(0.2e1,l_prod_816);
    real l_sum_833 = RAdd(l_mult_496,RAdd(RMul(-0.3e1,l_prod_826),RAdd(l_mult_827,RAdd(RMul(-0.3e1,l_prod_824),RAdd(l_mult_828,RAdd(l_mult_829,RAdd(RMul(-0.3e1,l_prod_821),RAdd(l_mult_830,RAdd(l_mult_831,l_mult_832)))))))));
    real l_sum_834 = RAdd(RMul(-0.1e1,l_prod_821),l_mult_832);
    real l_sum_835 = RAdd(RMul(-0.1e1,l_prod_824),l_mult_829);
    real l_sum_836 = RAdd(RMul(-0.1e1,l_prod_826),l_mult_827);
    real l_mult_837 = RMul(-0.4e1,l_prod_823);
    real l_mult_838 = RMul(-0.4e1,l_prod_820);
    real l_sum_839 = RAdd(RMul(0.4e1,l_prod_826),RAdd(RMul(-0.4e1,l_prod_825),RAdd(l_mult_837,l_mult_838)));
    real l_mult_840 = RMul(-0.4e1,l_prod_818);
    real l_sum_841 = RAdd(RMul(0.4e1,l_prod_824),RAdd(l_mult_837,RAdd(RMul(-0.4e1,l_prod_822),l_mult_840)));
    real l_sum_842 = RAdd(RMul(0.4e1,l_prod_821),RAdd(l_mult_838,RAdd(l_mult_840,RMul(-0.4e1,l_prod_816))));
    real t_843 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_794);
    real t_844 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_796);
    real t_845 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_798);
    real t_846 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_800);
    real t_847 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_802);
    real t_848 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_804);
    real t_849 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_806);
    real t_850 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_808);
    real t_851 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_810);
    real t_852 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,l_mulRes_812);
    real t_853 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_794));
    real t_854 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_796));
    real t_855 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_798));
    real t_856 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_800));
    real t_857 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_802));
    real t_858 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_804));
    real t_859 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_806));
    real t_860 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_808));
    real t_861 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_810));
    real t_862 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(1,l_mulRes_812));
    real t_863 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_794));
    real t_864 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_796));
    real t_865 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_798));
    real t_866 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_800));
    real t_867 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_802));
    real t_868 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_804));
    real t_869 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_806));
    real t_870 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_808));
    real t_871 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_810));
    real t_872 = ExtractFemItem2<int,real,ExtractDof(FemFunc)>(globals.data,IAdd(2,l_mulRes_812));
    vec3{4} v_873 = VEC3{4}(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_843,l_sum_833),RMul(t_844,l_sum_834)),RMul(t_845,l_sum_835)),RMul(t_846,l_sum_836)),RMul(t_847,l_mult_828)),RMul(t_848,l_mult_830)),RMul(t_849,l_mult_831)),RMul(t_850,l_sum_839)),RMul(t_851,l_sum_841)),RMul(t_852,l_sum_842)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_853,l_sum_833),RMul(t_854,l_sum_834)),RMul(t_855,l_sum_835)),RMul(t_856,l_sum_836)),RMul(t_857,l_mult_828)),RMul(t_858,l_mult_830)),RMul(t_859,l_mult_831)),RMul(t_860,l_sum_839)),RMul(t_861,l_sum_841)),RMul(t_862,l_sum_842)),RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RAdd(RMul(t_863,l_sum_833),RMul(t_864,l_sum_834)),RMul(t_865,l_sum_835)),RMul(t_866,l_sum_836)),RMul(t_867,l_mult_828)),RMul(t_868,l_mult_830)),RMul(t_869,l_mult_831)),RMul(t_870,l_sum_839)),RMul(t_871,l_sum_841)),RMul(t_872,l_sum_842)));
    vec3{4} v_874 = VScale<3,4>(globals.stepSize,v_873);
    real l_r_875 = RDiv(0.1e1,Sqrt(VDot<3,4>(v_873,v_873)));
    vec3{4} v_876 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.altCPos)),VEC3{4}(RMul(l_r_875,VIndex<3,4,0>(v_874)),RMul(l_r_875,VIndex<3,4,1>(v_874)),RMul(l_r_875,VIndex<3,4,2>(v_874))));
    vec3{4} v_877 = v_876;
    if (BNot(ExtractFemItem<bool,Valid(MeshPos)>(l_cPos_788))) {
      print(self.stream);
      self.cPos = l_cPos_788;
      self.altCPos = PACK(v_877);
      stabilize;
    }
    &tensor[3] l__t_879 = ExtractFemItem<tensor[3],RefPos(MeshPos)>(l_cPos_788);
    femData(Mesh) l__t_880 = ExtractFem<femData(Mesh),femData(MeshPos)>(l_cPos_788);
    int l_mulRes_881 = IMul(ExtractFemItem<int,CellIndex(MeshPos)>(l_cPos_788),4);
    int t_882 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_880,l_mulRes_881);
    int l_mulRes_883 = IMul(3,t_882);
    int t_884 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_880,IAdd(l_mulRes_881,1));
    int l_mulRes_885 = IMul(3,t_884);
    int t_886 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_880,IAdd(l_mulRes_881,2));
    int l_mulRes_887 = IMul(3,t_886);
    int t_888 = ExtractFemItem2<int,int,ExtractIndex(Mesh)>(l__t_880,IAdd(l_mulRes_881,3));
    int l_mulRes_889 = IMul(3,t_888);
    real l_prod_890 = RMul(TensorIndex<&tensor[3],[0]>(l__t_879),l_prod_490);
    real l_prod_891 = RMul(0.1e1,RMul(TensorIndex<&tensor[3],[1]>(l__t_879),0.1e1));
    real l_prod_892 = RMul(0.1e1,RMul(0.1e1,TensorIndex<&tensor[3],[2]>(l__t_879)));
    real l_sum_893 = RAdd(l_mult_496,RAdd(RMul(-0.1e1,l_prod_892),RAdd(RMul(-0.1e1,l_prod_891),RMul(-0.1e1,l_prod_890))));
    real l_basisEval_894 = RMul(0.1e1,l_prod_890);
    real l_basisEval_895 = RMul(0.1e1,l_prod_891);
    real l_basisEval_896 = RMul(0.1e1,l_prod_892);
    real t_897 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,l_mulRes_883);
    real t_898 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,l_mulRes_885);
    real t_899 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,l_mulRes_887);
    real t_900 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,l_mulRes_889);
    real t_901 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(1,l_mulRes_883));
    real t_902 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(1,l_mulRes_885));
    real t_903 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(1,l_mulRes_887));
    real t_904 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(1,l_mulRes_889));
    real t_905 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(2,l_mulRes_883));
    real t_906 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(2,l_mulRes_885));
    real t_907 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(2,l_mulRes_887));
    real t_908 = ExtractFemItem2<int,real,ExtractDof(Mesh)>(l__t_880,IAdd(2,l_mulRes_889));
    tensor[3] _arg_909 = <tensor[3]>[RAdd(RAdd(RAdd(RMul(t_897,l_sum_893),RMul(t_898,l_basisEval_894)),RMul(t_899,l_basisEval_895)),RMul(t_900,l_basisEval_896)),RAdd(RAdd(RAdd(RMul(t_901,l_sum_893),RMul(t_902,l_basisEval_894)),RMul(t_903,l_basisEval_895)),RMul(t_904,l_basisEval_896)),RAdd(RAdd(RAdd(RMul(t_905,l_sum_893),RMul(t_906,l_basisEval_894)),RMul(t_907,l_basisEval_895)),RMul(t_908,l_basisEval_896))];
    tensor[3][1] t_911 = <tensor[3][1]>{_arg_909};
    tensor[3][] l__t_910 = MkDynamic<tensor[3],1>(t_911);
    tensor[3] _arg_912 = PACK(v_877);
    tensor[3][1] t_914 = <tensor[3][1]>{_arg_912};
    tensor[3][] l__t_913 = MkDynamic<tensor[3],1>(t_914);
    self.stream = Concat<tensor[3]>(self.stream,l__t_910);
    self.newStream = Concat<tensor[3]>(self.newStream,l__t_913);
    self.step = IAdd(self.step,1);
    self.cPos = l_cPos_788;
    self.altCPos = PACK(v_877);
    active;
  }
}
//***** CREATE COLLECTION *****
  {
    foreach &tensor[3] i_x_916 in globals.startPoints {
      new gg(i_x_916);
    }
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include evalProg.cxx
/usr/bin/clang++ -shared -o evalProg.so evalProg.o /home/teocollin/gitcode/diderot/lib/diderot-rt-seq-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem  -lspatialindex_c   -lspatialindex 
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.120     2.787
    front end .......................................................................   0.694     0.739
      parser ........................................................................   0.021     0.021
      typechecker ...................................................................   0.024     0.024
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.061     0.061
    High IR optimization ............................................................   0.028     0.084
      High IR value numbering .......................................................   0.037     0.037
      High IR normalization .........................................................   0.019     0.019
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.046     0.046
    Mid IR optimization .............................................................   0.028     0.054
      Mid IR contraction ............................................................   0.002     0.002
      Mid IR value numbering ........................................................   0.023     0.023
      Mid IR border control .........................................................   0.002     0.002
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.084     0.084
    Low IR optimization .............................................................   0.099     0.234
      Low IR contraction ............................................................   0.059     0.059
      Low IR value numbering ........................................................   0.077     0.077
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.098     0.098
    Tree IR optimization ............................................................   0.020     0.021
      Tree IR contraction ...........................................................   0.002     0.002
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.057     1.246
      C compiler ....................................................................   1.189     1.189
