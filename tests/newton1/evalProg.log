/* ParseTree: After parsing */
  Program @ [evalProg.diderot:4.1-152.0] 
    [
      Type: mesh_t= @ [evalProg.diderot:4.1-5.0] 
        Mesh @ [evalProg.diderot:4.6-10] 
        From File : evalProg.json @ [evalProg.diderot:4.1-5.0] 
      Const: dim= @ [evalProg.diderot:5.1-6.0] 
        Select @ [evalProg.diderot:5.17-27] 
          Var: mesh_t @ [evalProg.diderot:5.17-23] 
          dim
      Var @ [evalProg.diderot:6.1-7.0] 
        Decl: dimm= @ [evalProg.diderot:6.1-7.0] 
          Var: dim @ [evalProg.diderot:6.12-15] 
      Type: fns_t= @ [evalProg.diderot:7.1-8.0] 
        FunctionSpace(mesh_t) @ [evalProg.diderot:7.6-29] 
          [ ]
        From File : evalProg.json @ [evalProg.diderot:7.1-8.0] 
      Type: func_t= @ [evalProg.diderot:8.1-9.0] 
        FemFunction(fns_t) @ [evalProg.diderot:8.6-24] 
        From File : evalProg.json @ [evalProg.diderot:8.1-9.0] 
      Input: meshData @ [evalProg.diderot:10.1-11.0] 
      Input: space= @ [evalProg.diderot:11.1-12.0] 
        Apply @ [evalProg.diderot:11.21-36] 
          Var: fns_t @ [evalProg.diderot:11.21-26] 
          [
            Var: meshData @ [evalProg.diderot:11.27-35] 
          ]
      Input: data= @ [evalProg.diderot:12.1-13.0] 
        Apply @ [evalProg.diderot:12.21-34] 
          Var: func_t @ [evalProg.diderot:12.21-27] 
          [
            Var: space @ [evalProg.diderot:12.28-33] 
          ]
      Var @ [evalProg.diderot:14.1-15.0] 
        Decl: F= @ [evalProg.diderot:14.1-15.0] 
          Select @ [evalProg.diderot:14.18-24] 
            Var: data @ [evalProg.diderot:14.18-22] 
            F
      Var @ [evalProg.diderot:16.1-17.0] 
        Decl: simplex= @ [evalProg.diderot:16.1-17.0] 
          Apply @ [evalProg.diderot:16.27-45] 
            Select @ [evalProg.diderot:16.27-45] 
              Var: meshData @ [evalProg.diderot:16.27-35] 
              refcell
            [ ]
      Func: insideTest @ [evalProg.diderot:18.1-24.1] 
        Bool @ [evalProg.diderot:18.10-15] 
        [
          Param: x @ [evalProg.diderot:18.26-32] 
            Tensor @ [evalProg.diderot:18.26-31] 
              [
                Lit: 3 @ [evalProg.diderot:18.26-31] 
              ]
        ]
        Stmt @ [evalProg.diderot:18.1-24.1] 
          Block @ [evalProg.diderot:18.33-22.0] 
            [
              Decl @ [evalProg.diderot:18.33-22.0] 
                Decl: mid= @ [evalProg.diderot:19.3-20.0] 
                  BinOp: - @ [evalProg.diderot:19.14-33] 
                    Var: x @ [evalProg.diderot:19.14-15] 
                    Cons @ [evalProg.diderot:19.18-33] 
                      [
                        Lit: 0.5e0 @ [evalProg.diderot:19.19-22] 
                        Lit: 0.5e0 @ [evalProg.diderot:19.24-27] 
                        Lit: 0.5e0 @ [evalProg.diderot:19.29-32] 
                      ]
              Return @ [evalProg.diderot:20.3-21.0] 
                AndAlso @ [evalProg.diderot:20.10-63] 
                  BinOp: <= @ [evalProg.diderot:20.10-26] 
                    UnaryOp: |()| @ [evalProg.diderot:20.10-18] 
                      Subscript @ [evalProg.diderot:20.11-17] 
                        Var: mid @ [evalProg.diderot:20.11-14] 
                        [
                          Lit: 0 @ [evalProg.diderot:20.15-16] 
                        ]
                    Lit: 0.5e0 @ [evalProg.diderot:20.22-25] 
                  AndAlso @ [evalProg.diderot:20.26-63] 
                    BinOp: <= @ [evalProg.diderot:20.29-45] 
                      UnaryOp: |()| @ [evalProg.diderot:20.29-37] 
                        Subscript @ [evalProg.diderot:20.30-36] 
                          Var: mid @ [evalProg.diderot:20.30-33] 
                          [
                            Lit: 1 @ [evalProg.diderot:20.34-35] 
                          ]
                      Lit: 0.5e0 @ [evalProg.diderot:20.41-44] 
                    BinOp: <= @ [evalProg.diderot:20.48-63] 
                      UnaryOp: |()| @ [evalProg.diderot:20.48-56] 
                        Subscript @ [evalProg.diderot:20.49-55] 
                          Var: mid @ [evalProg.diderot:20.49-52] 
                          [
                            Lit: 2 @ [evalProg.diderot:20.53-54] 
                          ]
                      Lit: 0.5e0 @ [evalProg.diderot:20.60-63] 
            ]
      Input: rad= @ [evalProg.diderot:24.1-25.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:24.18-22] 
      Input: eps= @ [evalProg.diderot:25.1-26.0] 
        Lit: 0.1e-1 @ [evalProg.diderot:25.18-22] 
      Input: v0= @ [evalProg.diderot:26.1-27.0] 
        Lit: 0.625e-1 @ [evalProg.diderot:26.17-23] 
      Input: ipos @ [evalProg.diderot:27.1-28.0] 
      Func: fStep @ [evalProg.diderot:29.1-41.1] 
        Tensor @ [evalProg.diderot:29.10-21] 
          [
            Var: dim @ [evalProg.diderot:29.17-20] 
          ]
        [
          Param: x @ [evalProg.diderot:29.28-41] 
            Tensor @ [evalProg.diderot:29.28-39] 
              [
                Var: dim @ [evalProg.diderot:29.35-38] 
              ]
        ]
        Stmt @ [evalProg.diderot:29.1-41.1] 
          Block @ [evalProg.diderot:29.42-40.0] 
            [
              Decl @ [evalProg.diderot:29.42-40.0] 
                Decl: xp= @ [evalProg.diderot:30.3-31.0] 
                  BinOp: - @ [evalProg.diderot:30.13-32] 
                    Var: x @ [evalProg.diderot:30.13-14] 
                    Cons @ [evalProg.diderot:30.17-32] 
                      [
                        Lit: 0.5e0 @ [evalProg.diderot:30.18-21] 
                        Lit: 0.5e0 @ [evalProg.diderot:30.23-26] 
                        Lit: 0.5e0 @ [evalProg.diderot:30.28-31] 
                      ]
              Decl @ [evalProg.diderot:29.42-40.0] 
                Decl: f= @ [evalProg.diderot:31.3-32.0] 
                  BinOp: • @ [evalProg.diderot:31.12-24] 
                    Var: xp @ [evalProg.diderot:31.12-14] 
                    Var: xp @ [evalProg.diderot:31.20-22] 
              Decl @ [evalProg.diderot:29.42-40.0] 
                Decl: gf= @ [evalProg.diderot:32.3-33.0] 
                  BinOp: * @ [evalProg.diderot:32.13-19] 
                    Lit: 2 @ [evalProg.diderot:32.13-14] 
                    Var: xp @ [evalProg.diderot:32.17-19] 
              Return @ [evalProg.diderot:33.3-34.0] 
                BinOp: * @ [evalProg.diderot:33.10-35] 
                  BinOp: / @ [evalProg.diderot:33.10-25] 
                    Var: gf @ [evalProg.diderot:33.10-12] 
                    BinOp: • @ [evalProg.diderot:33.14-23] 
                      Var: gf @ [evalProg.diderot:33.14-16] 
                      Var: gf @ [evalProg.diderot:33.20-22] 
                  BinOp: - @ [evalProg.diderot:33.28-34] 
                    Var: v0 @ [evalProg.diderot:33.28-30] 
                    Var: f @ [evalProg.diderot:33.33-34] 
            ]
      Func: fPerp @ [evalProg.diderot:41.1-52.1] 
        Tensor @ [evalProg.diderot:41.10-26] 
          [
            Var: dim @ [evalProg.diderot:41.17-20] 
            Var: dim @ [evalProg.diderot:41.22-25] 
          ]
        [
          Param: x @ [evalProg.diderot:41.33-46] 
            Tensor @ [evalProg.diderot:41.33-44] 
              [
                Var: dim @ [evalProg.diderot:41.40-43] 
              ]
        ]
        Stmt @ [evalProg.diderot:41.1-52.1] 
          Block @ [evalProg.diderot:41.47-52.0] 
            [
              Decl @ [evalProg.diderot:41.47-52.0] 
                Decl: xp= @ [evalProg.diderot:42.3-43.0] 
                  BinOp: - @ [evalProg.diderot:42.13-32] 
                    Var: x @ [evalProg.diderot:42.13-14] 
                    Cons @ [evalProg.diderot:42.17-32] 
                      [
                        Lit: 0.5e0 @ [evalProg.diderot:42.18-21] 
                        Lit: 0.5e0 @ [evalProg.diderot:42.23-26] 
                        Lit: 0.5e0 @ [evalProg.diderot:42.28-31] 
                      ]
              Decl @ [evalProg.diderot:41.47-52.0] 
                Decl: gf= @ [evalProg.diderot:43.3-44.0] 
                  BinOp: * @ [evalProg.diderot:43.13-19] 
                    Lit: 2 @ [evalProg.diderot:43.13-14] 
                    Var: xp @ [evalProg.diderot:43.17-19] 
              Decl @ [evalProg.diderot:41.47-52.0] 
                Decl: n= @ [evalProg.diderot:44.3-45.0] 
                  Apply @ [evalProg.diderot:44.12-25] 
                    Var: normalize @ [evalProg.diderot:44.12-21] 
                    [
                      Var: gf @ [evalProg.diderot:44.22-24] 
                    ]
              Return @ [evalProg.diderot:45.3-46.0] 
                BinOp: - @ [evalProg.diderot:45.10-33] 
                  Id @ [evalProg.diderot:45.10-23] 
                    Var: dim @ [evalProg.diderot:45.19-22] 
                  BinOp: ⊗ @ [evalProg.diderot:45.26-33] 
                    Var: n @ [evalProg.diderot:45.26-27] 
                    Var: n @ [evalProg.diderot:45.32-33] 
            ]
      Func: fStrength @ [evalProg.diderot:52.1-60.1] 
        Tensor @ [evalProg.diderot:52.10-15] 
          [ ]
        [
          Param: x @ [evalProg.diderot:52.25-38] 
            Tensor @ [evalProg.diderot:52.25-36] 
              [
                Var: dim @ [evalProg.diderot:52.32-35] 
              ]
        ]
        Stmt @ [evalProg.diderot:52.1-60.1] 
          Block @ [evalProg.diderot:52.39-58.0] 
            [
              Decl @ [evalProg.diderot:52.39-58.0] 
                Decl: xp= @ [evalProg.diderot:54.5-55.0] 
                  BinOp: - @ [evalProg.diderot:54.15-34] 
                    Var: x @ [evalProg.diderot:54.15-16] 
                    Cons @ [evalProg.diderot:54.19-34] 
                      [
                        Lit: 0.5e0 @ [evalProg.diderot:54.20-23] 
                        Lit: 0.5e0 @ [evalProg.diderot:54.25-28] 
                        Lit: 0.5e0 @ [evalProg.diderot:54.30-33] 
                      ]
              Decl @ [evalProg.diderot:52.39-58.0] 
                Decl: gf= @ [evalProg.diderot:55.3-56.0] 
                  BinOp: * @ [evalProg.diderot:55.13-19] 
                    Lit: 2 @ [evalProg.diderot:55.13-14] 
                    Var: xp @ [evalProg.diderot:55.17-19] 
              Return @ [evalProg.diderot:56.3-57.0] 
                UnaryOp: |()| @ [evalProg.diderot:56.10-14] 
                  Var: gf @ [evalProg.diderot:56.11-13] 
            ]
      Func: phi @ [evalProg.diderot:60.1-61.0] 
        Tensor @ [evalProg.diderot:60.10-15] 
          [ ]
        [
          Param: r @ [evalProg.diderot:60.19-25] 
            Tensor @ [evalProg.diderot:60.19-24] 
              [ ]
        ]
        Expr @ [evalProg.diderot:60.1-61.0] 
          BinOp: ^ @ [evalProg.diderot:60.29-36] 
            BinOp: - @ [evalProg.diderot:60.30-33] 
              Lit: 1 @ [evalProg.diderot:60.30-31] 
              Var: r @ [evalProg.diderot:60.32-33] 
            Lit: 4 @ [evalProg.diderot:60.35-36] 
      Func: phi' @ [evalProg.diderot:61.1-62.0] 
        Tensor @ [evalProg.diderot:61.10-15] 
          [ ]
        [
          Param: r @ [evalProg.diderot:61.20-26] 
            Tensor @ [evalProg.diderot:61.20-25] 
              [ ]
        ]
        Expr @ [evalProg.diderot:61.1-62.0] 
          BinOp: * @ [evalProg.diderot:61.30-42] 
            UnaryOp: unary - @ [evalProg.diderot:61.30-33] 
              Lit: 4 @ [evalProg.diderot:61.31-32] 
            BinOp: ^ @ [evalProg.diderot:61.35-42] 
              BinOp: - @ [evalProg.diderot:61.36-39] 
                Lit: 1 @ [evalProg.diderot:61.36-37] 
                Var: r @ [evalProg.diderot:61.38-39] 
              Lit: 3 @ [evalProg.diderot:61.41-42] 
      Func: enr @ [evalProg.diderot:62.1-63.0] 
        Tensor @ [evalProg.diderot:62.10-15] 
          [ ]
        [
          Param: x @ [evalProg.diderot:62.19-32] 
            Tensor @ [evalProg.diderot:62.19-30] 
              [
                Var: dim @ [evalProg.diderot:62.26-29] 
              ]
        ]
        Expr @ [evalProg.diderot:62.1-63.0] 
          Apply @ [evalProg.diderot:62.36-48] 
            Var: phi @ [evalProg.diderot:62.36-39] 
            [
              BinOp: / @ [evalProg.diderot:62.40-47] 
                UnaryOp: |()| @ [evalProg.diderot:62.40-43] 
                  Var: x @ [evalProg.diderot:62.41-42] 
                Var: rad @ [evalProg.diderot:62.44-47] 
            ]
      Func: frc @ [evalProg.diderot:63.1-64.0] 
        Tensor @ [evalProg.diderot:63.10-21] 
          [
            Var: dim @ [evalProg.diderot:63.17-20] 
          ]
        [
          Param: x @ [evalProg.diderot:63.26-39] 
            Tensor @ [evalProg.diderot:63.26-37] 
              [
                Var: dim @ [evalProg.diderot:63.33-36] 
              ]
        ]
        Expr @ [evalProg.diderot:63.1-64.0] 
          BinOp: / @ [evalProg.diderot:63.43-74] 
            BinOp: * @ [evalProg.diderot:63.43-70] 
              BinOp: * @ [evalProg.diderot:63.43-67] 
                Apply @ [evalProg.diderot:63.43-56] 
                  Var: phi' @ [evalProg.diderot:63.43-47] 
                  [
                    BinOp: / @ [evalProg.diderot:63.48-55] 
                      UnaryOp: |()| @ [evalProg.diderot:63.48-51] 
                        Var: x @ [evalProg.diderot:63.49-50] 
                      Var: rad @ [evalProg.diderot:63.52-55] 
                  ]
                BinOp: / @ [evalProg.diderot:63.60-65] 
                  Lit: 1 @ [evalProg.diderot:63.60-61] 
                  Var: rad @ [evalProg.diderot:63.62-65] 
              Var: x @ [evalProg.diderot:63.69-70] 
            UnaryOp: |()| @ [evalProg.diderot:63.71-74] 
              Var: x @ [evalProg.diderot:63.72-73] 
    ]
    Strand: particle @ [evalProg.diderot:65.1-140.1] 
      [
        Param: pos0 @ [evalProg.diderot:65.17-33] 
          Tensor @ [evalProg.diderot:65.17-28] 
            [
              Var: dim @ [evalProg.diderot:65.24-27] 
            ]
        Param: hh0 @ [evalProg.diderot:65.35-43] 
          Tensor @ [evalProg.diderot:65.35-40] 
            [ ]
      ]
      [
        VarDcl: output @ [evalProg.diderot:66.3-67.0] 
        VarDcl @ [evalProg.diderot:67.3-68.0] 
        VarDcl @ [evalProg.diderot:68.3-69.0] 
        VarDcl @ [evalProg.diderot:69.3-70.0] 
        VarDcl @ [evalProg.diderot:70.3-71.0] 
        VarDcl @ [evalProg.diderot:71.3-72.0] 
        VarDcl @ [evalProg.diderot:72.3-73.0] 
      ]
      [
        Method: Update @ [evalProg.diderot:73.3-139.1] 
          Block @ [evalProg.diderot:73.10-139.0] 
            [
              IfThen @ [evalProg.diderot:74.5-78.5] 
                OrElse @ [evalProg.diderot:74.8-46] 
                  UnaryOp: ! @ [evalProg.diderot:74.8-24] 
                    Apply @ [evalProg.diderot:74.9-24] 
                      Var: insideTest @ [evalProg.diderot:74.9-19] 
                      [
                        Var: pos @ [evalProg.diderot:74.20-23] 
                      ]
                  BinOp: == @ [evalProg.diderot:74.27-46] 
                    Apply @ [evalProg.diderot:74.27-41] 
                      Var: fStrength @ [evalProg.diderot:74.27-36] 
                      [
                        Var: pos @ [evalProg.diderot:74.37-40] 
                      ]
                    Lit: 0 @ [evalProg.diderot:74.45-46] 
                Die @ [evalProg.diderot:76.7-77.0] 
              IfThenElse @ [evalProg.diderot:78.5-138.0] 
                UnaryOp: ! @ [evalProg.diderot:78.8-14] 
                  Var: found @ [evalProg.diderot:78.9-14] 
                Block @ [evalProg.diderot:78.16-90.0] 
                  [
                    Assign: step= @ [evalProg.diderot:79.7-80.0] 
                      Apply @ [evalProg.diderot:79.14-24] 
                        Var: fStep @ [evalProg.diderot:79.14-19] 
                        [
                          Var: pos @ [evalProg.diderot:79.20-23] 
                        ]
                    Assign: pos= @ [evalProg.diderot:80.7-81.0] 
                      BinOp: + @ [evalProg.diderot:80.13-23] 
                        Var: pos @ [evalProg.diderot:80.13-16] 
                        Var: step @ [evalProg.diderot:80.19-23] 
                    IfThenElse @ [evalProg.diderot:81.7-89.0] 
                      BinOp: > @ [evalProg.diderot:81.10-26] 
                        BinOp: / @ [evalProg.diderot:81.10-21] 
                          UnaryOp: |()| @ [evalProg.diderot:81.10-16] 
                            Var: step @ [evalProg.diderot:81.11-15] 
                          Var: rad @ [evalProg.diderot:81.17-20] 
                        Var: eps @ [evalProg.diderot:81.23-26] 
                      Block @ [evalProg.diderot:81.27-85.8] 
                        [
                          Assign: nfs+= @ [evalProg.diderot:82.2-83.0] 
                            Lit: 1 @ [evalProg.diderot:82.9-10] 
                          IfThen @ [evalProg.diderot:83.2-85.7] 
                            BinOp: > @ [evalProg.diderot:83.5-13] 
                              Var: nfs @ [evalProg.diderot:83.5-8] 
                              Lit: 10 @ [evalProg.diderot:83.11-13] 
                            Die @ [evalProg.diderot:83.17-21] 
                        ]
                      Block @ [evalProg.diderot:85.14-89.0] 
                        [
                          Assign: found= @ [evalProg.diderot:86.2-15] 
                            Lit: true @ [evalProg.diderot:86.10-14] 
                          Assign: testp= @ [evalProg.diderot:86.16-87.0] 
                            Lit: 1 @ [evalProg.diderot:86.22-23] 
                        ]
                  ]
                Block @ [evalProg.diderot:90.10-138.0] 
                  [
                    Assign: pos= @ [evalProg.diderot:91.2-92.0] 
                      BinOp: + @ [evalProg.diderot:91.8-24] 
                        Var: pos @ [evalProg.diderot:91.8-11] 
                        Apply @ [evalProg.diderot:91.14-24] 
                          Var: fStep @ [evalProg.diderot:91.14-19] 
                          [
                            Var: pos @ [evalProg.diderot:91.20-23] 
                          ]
                    Assign: step= @ [evalProg.diderot:92.2-93.0] 
                      Zero @ [evalProg.diderot:92.9-19] 
                        [
                          Var: dim @ [evalProg.diderot:92.15-18] 
                        ]
                    Decl @ [evalProg.diderot:90.10-138.0] 
                      Decl: oldE= @ [evalProg.diderot:93.2-94.0] 
                        Lit: 0 @ [evalProg.diderot:93.14-15] 
                    Decl @ [evalProg.diderot:90.10-138.0] 
                      Decl: force= @ [evalProg.diderot:94.2-95.0] 
                        Zero @ [evalProg.diderot:94.22-32] 
                          [
                            Var: dim @ [evalProg.diderot:94.28-31] 
                          ]
                    Decl @ [evalProg.diderot:90.10-138.0] 
                      Decl: nn= @ [evalProg.diderot:95.2-96.0] 
                        Lit: 0 @ [evalProg.diderot:95.11-12] 
                    Foreach @ [evalProg.diderot:99.2-104.0] 
                      Id: particle @ [evalProg.diderot:99.11-20] 
                      Iterator: P @ [evalProg.diderot:99.20-36] 
                        Apply @ [evalProg.diderot:99.25-36] 
                          Var: sphere @ [evalProg.diderot:99.25-31] 
                          [
                            Var: rad @ [evalProg.diderot:99.32-35] 
                          ]
                      Block @ [evalProg.diderot:99.37-104.0] 
                        [
                          Assign: oldE+= @ [evalProg.diderot:100.4-101.0] 
                            Apply @ [evalProg.diderot:100.12-28] 
                              Var: enr @ [evalProg.diderot:100.12-15] 
                              [
                                BinOp: - @ [evalProg.diderot:100.16-27] 
                                  Select @ [evalProg.diderot:100.16-21] 
                                    Var: P @ [evalProg.diderot:100.16-17] 
                                    pos
                                  Var: pos @ [evalProg.diderot:100.24-27] 
                              ]
                          Assign: force+= @ [evalProg.diderot:101.4-102.0] 
                            Apply @ [evalProg.diderot:101.13-29] 
                              Var: frc @ [evalProg.diderot:101.13-16] 
                              [
                                BinOp: - @ [evalProg.diderot:101.17-28] 
                                  Select @ [evalProg.diderot:101.17-22] 
                                    Var: P @ [evalProg.diderot:101.17-18] 
                                    pos
                                  Var: pos @ [evalProg.diderot:101.25-28] 
                              ]
                          Assign: nn+= @ [evalProg.diderot:102.4-103.0] 
                            Lit: 1 @ [evalProg.diderot:102.10-11] 
                        ]
                    IfThen @ [evalProg.diderot:104.2-110.2] 
                      BinOp: == @ [evalProg.diderot:104.6-13] 
                        Lit: 0 @ [evalProg.diderot:104.6-7] 
                        Var: nn @ [evalProg.diderot:104.11-13] 
                      Block @ [evalProg.diderot:104.14-110.0] 
                        [
                          New: particle @ [evalProg.diderot:107.4-108.0] 
                            [
                              BinOp: + @ [evalProg.diderot:107.17-38] 
                                Var: pos @ [evalProg.diderot:107.17-20] 
                                Cons @ [evalProg.diderot:107.23-38] 
                                  [
                                    BinOp: * @ [evalProg.diderot:107.24-31] 
                                      Lit: 0.5e0 @ [evalProg.diderot:107.24-27] 
                                      Var: rad @ [evalProg.diderot:107.28-31] 
                                    Lit: 0 @ [evalProg.diderot:107.33-34] 
                                    Lit: 0 @ [evalProg.diderot:107.35-36] 
                                  ]
                              Var: hh @ [evalProg.diderot:107.40-42] 
                            ]
                          Continue @ [evalProg.diderot:108.4-109.0] 
                        ]
                    Assign: force= @ [evalProg.diderot:110.2-111.0] 
                      BinOp: • @ [evalProg.diderot:110.10-30] 
                        Apply @ [evalProg.diderot:110.10-20] 
                          Var: fPerp @ [evalProg.diderot:110.10-15] 
                          [
                            Var: pos @ [evalProg.diderot:110.16-19] 
                          ]
                        Var: force @ [evalProg.diderot:110.25-30] 
                    Decl @ [evalProg.diderot:90.10-138.0] 
                      Decl: es= @ [evalProg.diderot:111.2-112.0] 
                        BinOp: * @ [evalProg.diderot:111.19-27] 
                          Var: hh @ [evalProg.diderot:111.19-21] 
                          Var: force @ [evalProg.diderot:111.22-27] 
                    IfThen @ [evalProg.diderot:112.2-116.2] 
                      BinOp: > @ [evalProg.diderot:112.5-15] 
                        UnaryOp: |()| @ [evalProg.diderot:112.5-9] 
                          Var: es @ [evalProg.diderot:112.6-8] 
                        Var: rad @ [evalProg.diderot:112.12-15] 
                      Block @ [evalProg.diderot:112.16-116.0] 
                        [
                          Assign: hh*= @ [evalProg.diderot:113.4-114.0] 
                            BinOp: / @ [evalProg.diderot:113.10-18] 
                              Var: rad @ [evalProg.diderot:113.10-13] 
                              UnaryOp: |()| @ [evalProg.diderot:113.14-18] 
                                Var: es @ [evalProg.diderot:113.15-17] 
                          Assign: es*= @ [evalProg.diderot:114.4-115.0] 
                            BinOp: / @ [evalProg.diderot:114.10-18] 
                              Var: rad @ [evalProg.diderot:114.10-13] 
                              UnaryOp: |()| @ [evalProg.diderot:114.14-18] 
                                Var: es @ [evalProg.diderot:114.15-17] 
                        ]
                    Decl @ [evalProg.diderot:90.10-138.0] 
                      Decl: samplePos= @ [evalProg.diderot:116.2-117.0] 
                        BinOp: + @ [evalProg.diderot:116.26-34] 
                          Var: pos @ [evalProg.diderot:116.26-29] 
                          Var: es @ [evalProg.diderot:116.32-34] 
                    Decl @ [evalProg.diderot:90.10-138.0] 
                      Decl: fs= @ [evalProg.diderot:117.2-118.0] 
                        Apply @ [evalProg.diderot:117.19-35] 
                          Var: fStep @ [evalProg.diderot:117.19-24] 
                          [
                            Var: samplePos @ [evalProg.diderot:117.25-34] 
                          ]
                    IfThen @ [evalProg.diderot:118.2-122.2] 
                      BinOp: > @ [evalProg.diderot:118.6-21] 
                        BinOp: / @ [evalProg.diderot:118.6-16] 
                          UnaryOp: |()| @ [evalProg.diderot:118.6-10] 
                            Var: fs @ [evalProg.diderot:118.7-9] 
                          UnaryOp: |()| @ [evalProg.diderot:118.11-15] 
                            Var: es @ [evalProg.diderot:118.12-14] 
                        Lit: 0.5e0 @ [evalProg.diderot:118.18-21] 
                      Block @ [evalProg.diderot:118.22-122.0] 
                        [
                          Assign: hh*= @ [evalProg.diderot:119.4-120.0] 
                            Lit: 0.5e0 @ [evalProg.diderot:119.10-13] 
                          Continue @ [evalProg.diderot:120.4-121.0] 
                        ]
                    Decl @ [evalProg.diderot:90.10-138.0] 
                      Decl: oldPos= @ [evalProg.diderot:122.2-123.0] 
                        Var: pos @ [evalProg.diderot:122.23-26] 
                    Decl @ [evalProg.diderot:90.10-138.0] 
                      Decl: up= @ [evalProg.diderot:123.2-124.0] 
                        BinOp: + @ [evalProg.diderot:123.19-26] 
                          Var: fs @ [evalProg.diderot:123.19-21] 
                          Var: es @ [evalProg.diderot:123.24-26] 
                    Assign: pos+= @ [evalProg.diderot:124.2-125.0] 
                      Var: up @ [evalProg.diderot:124.9-11] 
                    Decl @ [evalProg.diderot:90.10-138.0] 
                      Decl: newE= @ [evalProg.diderot:125.2-126.0] 
                        Apply @ [evalProg.diderot:125.14-55] 
                          Var: sum @ [evalProg.diderot:125.14-17] 
                          [
                            SeqComp @ [evalProg.diderot:125.14-55] 
                              Comprehension @ [evalProg.diderot:125.14-55] 
                                Apply @ [evalProg.diderot:125.19-35] 
                                  Var: enr @ [evalProg.diderot:125.19-22] 
                                  [
                                    BinOp: - @ [evalProg.diderot:125.23-34] 
                                      Var: pos @ [evalProg.diderot:125.23-26] 
                                      Select @ [evalProg.diderot:125.29-34] 
                                        Var: P @ [evalProg.diderot:125.29-30] 
                                        pos
                                  ]
                                [
                                  Iterator: P @ [evalProg.diderot:125.38-54] 
                                    Apply @ [evalProg.diderot:125.43-54] 
                                      Var: sphere @ [evalProg.diderot:125.43-49] 
                                      [
                                        Var: rad @ [evalProg.diderot:125.50-53] 
                                      ]
                                ]
                          ]
                    IfThen @ [evalProg.diderot:126.2-131.2] 
                      BinOp: > @ [evalProg.diderot:126.6-54] 
                        BinOp: - @ [evalProg.diderot:126.6-18] 
                          Var: newE @ [evalProg.diderot:126.6-10] 
                          Var: oldE @ [evalProg.diderot:126.13-17] 
                        BinOp: • @ [evalProg.diderot:126.20-54] 
                          BinOp: * @ [evalProg.diderot:126.20-41] 
                            Lit: 0.5e0 @ [evalProg.diderot:126.20-23] 
                            BinOp: - @ [evalProg.diderot:126.27-39] 
                              Var: pos @ [evalProg.diderot:126.27-30] 
                              Var: oldPos @ [evalProg.diderot:126.33-39] 
                          UnaryOp: unary - @ [evalProg.diderot:126.46-53] 
                            Var: force @ [evalProg.diderot:126.47-52] 
                      Block @ [evalProg.diderot:126.56-131.0] 
                        [
                          Assign: pos= @ [evalProg.diderot:127.4-128.0] 
                            Var: oldPos @ [evalProg.diderot:127.10-16] 
                          Assign: hh*= @ [evalProg.diderot:128.4-129.0] 
                            Lit: 0.5e0 @ [evalProg.diderot:128.10-13] 
                          Continue @ [evalProg.diderot:129.4-130.0] 
                        ]
                    Assign: hh*= @ [evalProg.diderot:131.2-132.0] 
                      Lit: 0.11e1 @ [evalProg.diderot:131.8-11] 
                    Assign: step= @ [evalProg.diderot:132.2-133.0] 
                      Var: up @ [evalProg.diderot:132.9-11] 
                    IfThen @ [evalProg.diderot:134.2-137.7] 
                      BinOp: < @ [evalProg.diderot:134.6-12] 
                        Var: nn @ [evalProg.diderot:134.6-8] 
                        Lit: 5 @ [evalProg.diderot:134.11-12] 
                      New: particle @ [evalProg.diderot:135.4-136.0] 
                        [
                          BinOp: + @ [evalProg.diderot:135.17-48] 
                            Var: pos @ [evalProg.diderot:135.17-20] 
                            BinOp: * @ [evalProg.diderot:135.23-48] 
                              BinOp: * @ [evalProg.diderot:135.23-33] 
                                Lit: 0.5e0 @ [evalProg.diderot:135.23-26] 
                                Var: rad @ [evalProg.diderot:135.29-32] 
                              Apply @ [evalProg.diderot:135.35-48] 
                                Var: normalize @ [evalProg.diderot:135.35-44] 
                                [
                                  Var: es @ [evalProg.diderot:135.45-47] 
                                ]
                          Var: hh @ [evalProg.diderot:135.50-52] 
                        ]
                  ]
            ]
      ]
    Collection @ [evalProg.diderot:151.1-152.0] 
      Comprehension @ [evalProg.diderot:151.19-47] 
        Apply @ [evalProg.diderot:151.20-34] 
          Var: particle @ [evalProg.diderot:151.20-28] 
          [
            Var: x @ [evalProg.diderot:151.29-30] 
            Lit: 1 @ [evalProg.diderot:151.32-33] 
          ]
        [
          Iterator: x @ [evalProg.diderot:151.37-46] 
            Var: ipos @ [evalProg.diderot:151.42-46] 
        ]
    Block @ [evalProg.diderot:140.8-151.0] 
      [
        Decl @ [evalProg.diderot:140.8-151.0] 
          Decl: num= @ [evalProg.diderot:141.3-142.0] 
            Apply @ [evalProg.diderot:141.13-45] 
              Var: sum @ [evalProg.diderot:141.13-16] 
              [
                SeqComp @ [evalProg.diderot:141.13-45] 
                  Comprehension @ [evalProg.diderot:141.13-45] 
                    Select @ [evalProg.diderot:141.18-24] 
                      Var: P @ [evalProg.diderot:141.18-19] 
                      test
                    [
                      Iterator: P @ [evalProg.diderot:141.27-44] 
                        Select @ [evalProg.diderot:141.32-44] 
                          Var: particle @ [evalProg.diderot:141.32-40] 
                          all
                    ]
              ]
        Decl @ [evalProg.diderot:140.8-151.0] 
          Decl: numFound= @ [evalProg.diderot:142.3-143.0] 
            Apply @ [evalProg.diderot:142.18-51] 
              Var: sum @ [evalProg.diderot:142.18-21] 
              [
                SeqComp @ [evalProg.diderot:142.18-51] 
                  Comprehension @ [evalProg.diderot:142.18-51] 
                    Select @ [evalProg.diderot:142.23-30] 
                      Var: P @ [evalProg.diderot:142.23-24] 
                      testp
                    [
                      Iterator: P @ [evalProg.diderot:142.33-50] 
                        Select @ [evalProg.diderot:142.38-50] 
                          Var: particle @ [evalProg.diderot:142.38-46] 
                          all
                    ]
              ]
        Decl @ [evalProg.diderot:140.8-151.0] 
          Decl: allFound= @ [evalProg.diderot:143.3-144.0] 
            Apply @ [evalProg.diderot:143.19-52] 
              Var: all @ [evalProg.diderot:143.19-22] 
              [
                SeqComp @ [evalProg.diderot:143.19-52] 
                  Comprehension @ [evalProg.diderot:143.19-52] 
                    Select @ [evalProg.diderot:143.24-31] 
                      Var: P @ [evalProg.diderot:143.24-25] 
                      found
                    [
                      Iterator: P @ [evalProg.diderot:143.34-51] 
                        Select @ [evalProg.diderot:143.39-51] 
                          Var: particle @ [evalProg.diderot:143.39-47] 
                          all
                    ]
              ]
        Decl @ [evalProg.diderot:140.8-151.0] 
          Decl: maxStep= @ [evalProg.diderot:144.3-145.0] 
            Apply @ [evalProg.diderot:144.18-52] 
              Var: max @ [evalProg.diderot:144.18-21] 
              [
                SeqComp @ [evalProg.diderot:144.18-52] 
                  Comprehension @ [evalProg.diderot:144.18-52] 
                    UnaryOp: |()| @ [evalProg.diderot:144.23-31] 
                      Select @ [evalProg.diderot:144.24-30] 
                        Var: P @ [evalProg.diderot:144.24-25] 
                        step
                    [
                      Iterator: P @ [evalProg.diderot:144.34-51] 
                        Select @ [evalProg.diderot:144.39-51] 
                          Var: particle @ [evalProg.diderot:144.39-47] 
                          all
                    ]
              ]
        Decl @ [evalProg.diderot:140.8-151.0] 
          Decl: maxDist= @ [evalProg.diderot:145.3-146.0] 
            Apply @ [evalProg.diderot:145.18-69] 
              Var: max @ [evalProg.diderot:145.18-21] 
              [
                SeqComp @ [evalProg.diderot:145.18-69] 
                  Comprehension @ [evalProg.diderot:145.18-69] 
                    UnaryOp: |()| @ [evalProg.diderot:145.23-48] 
                      BinOp: - @ [evalProg.diderot:145.24-47] 
                        Select @ [evalProg.diderot:145.24-29] 
                          Var: P @ [evalProg.diderot:145.24-25] 
                          pos
                        Cons @ [evalProg.diderot:145.32-47] 
                          [
                            Lit: 0.5e0 @ [evalProg.diderot:145.33-36] 
                            Lit: 0.5e0 @ [evalProg.diderot:145.38-41] 
                            Lit: 0.5e0 @ [evalProg.diderot:145.43-46] 
                          ]
                    [
                      Iterator: P @ [evalProg.diderot:145.51-68] 
                        Select @ [evalProg.diderot:145.56-68] 
                          Var: particle @ [evalProg.diderot:145.56-64] 
                          all
                    ]
              ]
        Decl @ [evalProg.diderot:140.8-151.0] 
          Decl: minDist= @ [evalProg.diderot:146.3-147.0] 
            Apply @ [evalProg.diderot:146.18-69] 
              Var: min @ [evalProg.diderot:146.18-21] 
              [
                SeqComp @ [evalProg.diderot:146.18-69] 
                  Comprehension @ [evalProg.diderot:146.18-69] 
                    UnaryOp: |()| @ [evalProg.diderot:146.23-48] 
                      BinOp: - @ [evalProg.diderot:146.24-47] 
                        Select @ [evalProg.diderot:146.24-29] 
                          Var: P @ [evalProg.diderot:146.24-25] 
                          pos
                        Cons @ [evalProg.diderot:146.32-47] 
                          [
                            Lit: 0.5e0 @ [evalProg.diderot:146.33-36] 
                            Lit: 0.5e0 @ [evalProg.diderot:146.38-41] 
                            Lit: 0.5e0 @ [evalProg.diderot:146.43-46] 
                          ]
                    [
                      Iterator: P @ [evalProg.diderot:146.51-68] 
                        Select @ [evalProg.diderot:146.56-68] 
                          Var: particle @ [evalProg.diderot:146.56-64] 
                          all
                    ]
              ]
        Decl @ [evalProg.diderot:140.8-151.0] 
          Decl: averageDist= @ [evalProg.diderot:147.3-148.0] 
            Cons @ [evalProg.diderot:147.22-40] 
              [
                Var: minDist @ [evalProg.diderot:147.23-30] 
                Var: maxDist @ [evalProg.diderot:147.32-39] 
              ]
        Print @ [evalProg.diderot:148.3-149.0] 
          [
            Lit: "One run:" @ [evalProg.diderot:148.9-19] 
            Var: allFound @ [evalProg.diderot:148.21-29] 
            Lit: " and " @ [evalProg.diderot:148.31-38] 
            BinOp: / @ [evalProg.diderot:148.40-51] 
              Var: maxStep @ [evalProg.diderot:148.40-47] 
              Var: rad @ [evalProg.diderot:148.48-51] 
            Lit: " and " @ [evalProg.diderot:148.53-60] 
            BinOp: < @ [evalProg.diderot:148.63-80] 
              BinOp: / @ [evalProg.diderot:148.63-75] 
                Var: maxStep @ [evalProg.diderot:148.63-70] 
                Var: rad @ [evalProg.diderot:148.71-74] 
              Var: eps @ [evalProg.diderot:148.77-80] 
            Lit: " and " @ [evalProg.diderot:148.82-89] 
            Var: numFound @ [evalProg.diderot:148.91-99] 
            Lit: " of " @ [evalProg.diderot:148.101-107] 
            Var: num @ [evalProg.diderot:148.109-112] 
            Lit: " and " @ [evalProg.diderot:148.114-121] 
            Var: averageDist @ [evalProg.diderot:148.123-134] 
            Lit: "\n" @ [evalProg.diderot:148.136-140] 
          ]
        IfThen @ [evalProg.diderot:149.3-150.1] 
          AndAlso @ [evalProg.diderot:149.7-37] 
            Var: allFound @ [evalProg.diderot:149.7-15] 
            BinOp: < @ [evalProg.diderot:149.20-37] 
              BinOp: / @ [evalProg.diderot:149.20-32] 
                Var: maxStep @ [evalProg.diderot:149.20-27] 
                Var: rad @ [evalProg.diderot:149.28-31] 
              Var: eps @ [evalProg.diderot:149.34-37] 
          Block @ [evalProg.diderot:149.39-150.0] 
            [
              Print @ [evalProg.diderot:149.40-62] 
                [
                  Lit: "CONVERGED!\n" @ [evalProg.diderot:149.46-60] 
                ]
              Stabilize @ [evalProg.diderot:149.63-73] 
            ]
      ]
/* end program */
/* AST: After typechecking */
properties: StabilizeAll,GlobalReduce,StrandSets,GlobalUpdate,NewStrands,StrandCommunication,StrandsMayDie,HasInputs,HasGlobals,HasConsts,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
const int dim = 3;
input FemType: Mesh with type var:NONE meshData = loadFem(Mesh);
input FemType: Space with type var:mesh_t space = loadFem(Space);
input FemType: FemFunc with type var:fns_t data = loadFem(FemFunc);
input real rad = 0.1e-1;
input real eps = 0.1e-1;
input real v0 = 0.625e-1;
input vec3[] ipos;
function bool != (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return != (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function bool == (FemType: MeshCell with type var:mesh_t cell1, FemType: MeshCell with type var:mesh_t cell1)
{
  return == (extractFemItem(cell1, int, CellIndex(Mesh)), extractFemItem(cell1, int, CellIndex(Mesh)));
  }
function FemType: MeshPos with type var:mesh_t findPos (FemType: Mesh with type var:mesh_t mesh, vec3 pos)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  newtonInt = 0;
  cellInt = extractFemItem(mesh, int, StartCell(Mesh));
  numCell = - (extractFemItem(mesh, int, NumCell(Mesh)), 1);
  yayCells = extractFemItem(mesh, pos : vec3, int[], NearbyCell(File=spat.in)(Mesh));
  foreach (int cellItter in yayCells) {
    xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
    cellInt = cellItter;
    A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
    foreach (int newtonItter in $range (0, 16)) {
      delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
      xn = -<$[3]> (xn, delta);
      if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
        if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[2], -0.e0)))) {
          return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
          }
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: RefCell with type var:mesh_t refcell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: RefCell with type var:mesh_t, RefCell(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, FemType: MeshCell with type var:mesh_t[], Cells(Mesh));
  }
function FemType: MeshCell with type var:mesh_t[] cells (FemType: Mesh with type var:NONE arg0)
{
  return {loadFem(MeshCell) | int i in $range (0, extractFemItem(arg0, int, NumCell(Mesh)))};
  }
function int numCell (FemType: Mesh with type var:NONE arg0)
{
  return extractFemItem(arg0, int, NumCell(Mesh));
  }
function tensor[3,3,3,3] mesh_t_transform_3 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3,3]> (∇⊗<#; %3; $[3,3]; %3> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )))), pos);
  }
function tensor[3,3,3] mesh_t_transform_2 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3,3]> (∇⊗<#; %3; $[3]; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, ))), pos);
  }
function mat3 mesh_t_transform_1 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3,3]> (∇⊗<#; %3; $[]; %3> (femField(mesh,cell,field(3)[3], Transform, )), pos);
  }
function vec3 mesh_t_transform_0 (vec3 pos, int cell, FemType: Mesh with type var:NONE mesh)
{
  return @<#; %3; $[3]> (femField(mesh,cell,field(3)[3], Transform, ), pos);
  }
function FemType: MeshPos with type var:mesh_t _mesh_t_newtonInverse (vec3 pos, int cellInt, FemType: Mesh with type var:NONE mesh)
{
  xn = [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0];
  A = @<#; %3; $[3,3]> (inv<#; %3> (∇⊗<#; %3; $[]; %3> (femField(mesh,cellInt,field(3)[3], Transform, ))), [0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0, 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0]);
  foreach (int itter in $range (0, 16)) {
    delta = @<#; %3; $[3]> (•<#; %3; $[3,3]; $[3]; $[3]> (A, -<#; %3; $[3]> (femField(mesh,cellInt,field(3)[3], Transform, ), pos)), xn);
    xn = -<$[3]> (xn, delta);
    if >= (* (0.1e-7, 0.1e-7), •<$[3]; $[3]; $[]> (delta, delta)) {
      if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], xn)), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], xn)[2], -0.e0)))) {
        return extractFemItemN(AllBuild(MeshPos),FemType: Mesh with type var:NONE,int,vec3,vec3 (mesh, cellInt, xn, pos)):FemType: MeshPos with type var:mesh_t;
        }
      else {
        return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
        }
      }
    }
  return extractFemItemN(InvalidBuild(MeshPos),FemType: Mesh with type var:NONE (mesh)):FemType: MeshPos with type var:mesh_t;
  }
function FemType: MeshPos with type var:mesh_t _mesh_pos_mesh_t_build_world_pos (FemType: MeshPos with type var:mesh_t pos)
{
  if extractFemItem(pos, bool, WorldTest(MeshPos)) {
    return extractFemItemN(NewWorld(MeshPos),FemType: MeshPos with type var:mesh_t,vec3 (pos, mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos )))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return pos;
    }
  }
function vec3 worldPos (FemType: MeshPos with type var:mesh_t pos)
{
  return mesh_t_transform_0 (extractFemItem(pos, vec3, RefPos(MeshPos)), extractFemItem(pos, int, CellIndex(MeshPos)), extractFem(Mesh,pos ));
  }
function FemType: MeshPos with type var:mesh_t $exitPos (FemType: Mesh with type var:NONE mesh, int cellId, vec3 refPos, vec3 dPos, real[2] time)
{
  if != (-1, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0)) {
    print ("face ", $r2i (time[1]), " to ", $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1), "\n", "got: ", $sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), "\n");
    return extractFemItemN(RefBuild(Mesh),FemType: Mesh with type var:NONE,int,vec3,int (mesh, $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 0), [•<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[0], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[1], •<$[4,4]; $[4]; $[4]> ($sub<mat4; %4> ($sub<mat4[4]; %4> ({{[[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.57735026919e0, -0.57735026919e0, -0.57735026919e0, 0.57735026919e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]], [[-0.333333333333e0, 0.666666666667e0, -0.333333333333e0, 0.333333333333e0], [-0.333333333333e0, -0.333333333333e0, 0.666666666667e0, 0.333333333333e0], [0.57735026919e0, 0.57735026919e0, 0.57735026919e0, -0.57735026919e0], [0.971445146547e-16, 0.e0, 0.e0, 0.1e1]]}, {[[0.57735026919e0, -0.1e1, -0.1e1, 0.1e1], [0.57735026919e0, 0.1e1, 0.e0, 0.e0], [0.57735026919e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [-0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.57735026919e0, -0.1e1, 0.1e1], [0.1e1, -0.57735026919e0, 0.e0, 0.e0], [0.e0, -0.57735026919e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, -0.1e1, 0.e0, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, -0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}, {[[-0.1e1, -0.1e1, 0.57735026919e0, 0.1e1], [0.1e1, 0.e0, 0.57735026919e0, 0.e0], [0.e0, 0.1e1, 0.57735026919e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.e0, 0.e0, 0.1e1, 0.e0], [0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.e0, -0.1e1, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]], [[0.1e1, 0.e0, 0.e0, 0.e0], [0.e0, 0.1e1, 0.e0, 0.e0], [0.e0, 0.e0, 0.1e1, 0.e0], [0.e0, 0.e0, 0.e0, 0.1e1]]}}, $r2i (time[1])), $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1)), [+<$[3]> (*<$[3]> (time[0], dPos), refPos)[0], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[1], +<$[3]> (*<$[3]> (time[0], dPos), refPos)[2], 0.1e1])[2]], $sub<int; %2> (nextCell4 ($r2i (time[1]), cellId, mesh), 1))):FemType: MeshPos with type var:mesh_t;
    }
  else {
    return extractFemItemN(InvalidBuildBoundary(MeshPos),FemType: Mesh with type var:NONE,vec3 (mesh, +<$[3]> (*<$[3]> (time[0], dPos), refPos))):FemType: MeshPos with type var:mesh_t;
    }
  }
function int[2] nextCell4 (int faceIdx, int cell, FemType: Mesh with type var:NONE mesh)
{
  {
    if == (faceIdx, -1) {
      return {-1, -1};
      }
    else {
      return extractFemItemN(CellFaceCell(Mesh),FemType: Mesh with type var:NONE,int (mesh, + (* (cell, 8), * (faceIdx, 2)))):int[2];
      }
    }
  }
function vec2 _enter (vec3 refPos, vec3 dPos)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  {
    print ("\ntest :", / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos))), "signed dist: ", -<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), " face: ", 0, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n");
    if $and (>= (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), 0.1e-7)))
      if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[2], -0.e0)))) {
        print ("Saving at this face!", / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), > (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))), "\n");
        time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos));
        face = 0;
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), " face: ", 1, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-7)))
      if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[2], -0.e0)))) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
        face = 1;
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), " face: ", 2, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-7)))
      if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[2], -0.e0)))) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
        face = 2;
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), " face: ", 3, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), 0.1e-7)))
      if $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[2], -0.e0)))) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos));
        face = 3;
        }
      }
  if $and (!= (face, -1), $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[2], -0.e0))))) {
    {
      print ("\nReturning via standard : ", [max (time, 0.e0), (real)face], "\n");
      return [max (time, 0.e0), (real)face];
      }
    }
  else {
    return [(real)-1, (real)-1];
    }
  }
function vec2 _exit (vec3 refPos, vec3 dPos, int i)
{
  real time = +inf;
  int face = -1;
  real faceTime = -inf;
  {
    print ("\ntest :", / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos))), "signed dist: ", -<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), " face: ", 0, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n", "\n original face: ", i, " ");
    if $and (>= (/ (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), 0.1e-7)))
      if != (i, 0) {
        print ("Saving at this face!", / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos)), > (time, / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos))), "\n");
        time = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos));
        face = 0;
        }
      else {
        faceTime = / (-<$[]> (0.57735026919e0, •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], refPos)), •<$[3]; $[3]; $[]> ([0.57735026919e0, 0.57735026919e0, 0.57735026919e0], dPos));
        print ("Saving backup time: ", faceTime, "\n");
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), " face: ", 1, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n", "\n original face: ", i, " ");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), 0.1e-7)))
      if != (i, 1) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
        face = 1;
        }
      else {
        faceTime = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([-0.1e1, 0.e0, 0.e0], dPos));
        print ("Saving backup time: ", faceTime, "\n");
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), " face: ", 2, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n", "\n original face: ", i, " ");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), 0.1e-7)))
      if != (i, 2) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
        face = 2;
        }
      else {
        faceTime = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], refPos)), •<$[3]; $[3]; $[]> ([0.e0, -0.1e1, 0.e0], dPos));
        print ("Saving backup time: ", faceTime, "\n");
        }
      }
  {
    print ("\ntest :", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), " test2: ", •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos), " insideTest: ", $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))))[2], -0.e0)))), " dist: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos))), "signed dist: ", -<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), " face: ", 3, " place: ", +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)))), " error: ", |()|<$[]> (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))))))), " offset :", refPos, " dp: ", dPos, " otherPossibleTime: ", faceTime, "\n", "\n original face: ", i, " ");
    if $and (>= (/ (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), -0.1e-7), $and (> (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))), >= (|()|<$[]> (•<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), 0.1e-7)))
      if != (i, 3) {
        print ("Saving at this face!", / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos)), > (time, / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos))), "\n");
        time = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos));
        face = 3;
        }
      else {
        faceTime = / (-<$[]> (0.e0, •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], refPos)), •<$[3]; $[3]; $[]> ([0.e0, 0.e0, -0.1e1], dPos));
        print ("Saving backup time: ", faceTime, "\n");
        }
      }
  if $and (!= (face, -1), $and (> (+<$[]> (0.1e1, 0.1e-7), •<$[3]; $[3]; $[]> ([0.1e1, 0.1e1, 0.1e1], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[0], -0.e0), $and (> (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[1], -0.e0), > (+<$[3]> ([0.1e-7, 0.1e-7, 0.1e-7], +<$[3]> (refPos, *<$[3]> (dPos, max (time, 0.e0))))[2], -0.e0))))) {
    {
      print ("\nReturning via standard : ", [max (time, 0.e0), (real)face], "\n");
      return [max (time, 0.e0), (real)face];
      }
    }
  else {
    if == (-inf, faceTime) {
      print ("\nReturning via fail : ", [(real)-1, (real)-1], "\n");
      return [(real)-1, (real)-1];
      }
    else {
      print ("\nReturning via backup : ", [max (faceTime, 0.e0), (real)i], "\n");
      return [max (faceTime, 0.e0), (real)i];
      }
    }
  }
int dimm = dim;
function FemType: Mesh with type var:mesh_t domain (FemType: Space with type var:mesh_t arg0)
{
  return extractFem(Mesh,arg0 );
  }
function FemType: Space with type var:mesh_t space (FemType: FemFunc with type var:fns_t arg0)
{
  return extractFem(Space,arg0 );
  }
function FemType: FuncCell with type var:func_t funcCell (FemType: FemFunc with type var:fns_t arg0, FemType: MeshCell with type var:mesh_t arg1)
{
  return loadFem(FuncCell);
  }
field(3)[] F = ∘<#; %3; $[]; %3; $[3]> (femField(data,extractFem(Mesh,extractFem(Space,data ) ),field(3)[], refField, findPos), femField(extractFem(Mesh,extractFem(Space,data ) ),extractFem(Mesh,extractFem(Space,data ) ),field(3)[3], InvTransform, findPos));
FemType: RefCell with type var:mesh_t simplex = refcell (meshData);
function bool insideTest (vec3 x)
{
  vec3 mid = -<$[3]> (x, [0.5e0, 0.5e0, 0.5e0]);
  return (<= (|()|<$[]> (mid[0]), 0.5e0) && (<= (|()|<$[]> (mid[1]), 0.5e0) && <= (|()|<$[]> (mid[2]), 0.5e0)));
  }
function vec3 fStep (vec3 x)
{
  vec3 xp = -<$[3]> (x, [0.5e0, 0.5e0, 0.5e0]);
  real f = •<$[3]; $[3]; $[]> (xp, xp);
  vec3 gf = *<$[3]> ((real)2, xp);
  return *<$[3]> (/<$[3]> (gf, •<$[3]; $[3]; $[]> (gf, gf)), -<$[]> (v0, f));
  }
function mat3 fPerp (vec3 x)
{
  vec3 xp = -<$[3]> (x, [0.5e0, 0.5e0, 0.5e0]);
  vec3 gf = *<$[3]> ((real)2, xp);
  vec3 n = normalize<$[3]> (gf);
  return -<$[3,3]> ($id<%3> (), ⊗<$[3]; $[3]; $[3,3]> (n, n));
  }
function real fStrength (vec3 x)
{
  vec3 xp = -<$[3]> (x, [0.5e0, 0.5e0, 0.5e0]);
  vec3 gf = *<$[3]> ((real)2, xp);
  return |()|<$[3]> (gf);
  }
function real phi (real r)
{
  return ^ (-<$[]> ((real)1, r), 4);
  }
function real phi' (real r)
{
  return * ((real)(unary - (4)), ^ (-<$[]> ((real)1, r), 3));
  }
function real enr (vec3 x)
{
  return phi (/ (|()|<$[3]> (x), rad));
  }
function vec3 frc (vec3 x)
{
  return /<$[3]> (*<$[3]> (* (phi' (/ (|()|<$[3]> (x), rad)), / ((real)1, rad)), x), |()|<$[3]> (x));
  }
strand particle (vec3 pos0, real hh0) in 3D
{
  output vec3 pos = pos0;
  real hh = hh0;
  vec3 step = $zero<$[3]> ();
  bool found = false;
  int nfs = 0;
  int test = 1;
  int testp = 0;
  update {
    if (! (insideTest (pos)) || == (fStrength (pos), (real)0))
      die;
      if ! (found) {
      step = fStep (pos);
      pos = +<$[3]> (pos, step);
      if > (/ (|()|<$[3]> (step), rad), eps) {
        nfs = + (nfs, 1);
        if > (nfs, 10)
          die;
          }
      else {
        found = true;
        testp = 1;
        }
      }
    else {
      pos = +<$[3]> (pos, fStep (pos));
      step = $zero<$[3]> ();
      real oldE = 0.e0;
      vec3 force = $zero<$[3]> ();
      int nn = 0;
      foreach (particle P in sphere<particle> (rad)) {
        oldE = +<$[]> (oldE, enr (-<$[3]> (P.pos, pos)));
        force = +<$[3]> (force, frc (-<$[3]> (P.pos, pos)));
        nn = + (nn, 1);
        }
      if == (0, nn) {
        new particle (+<$[3]> (pos, [* (0.5e0, rad), 0.e0, 0.e0]), hh);
        continue;
        }
      force = •<$[3,3]; $[3]; $[3]> (fPerp (pos), force);
      vec3 es = *<$[3]> (hh, force);
      if > (|()|<$[3]> (es), rad) {
        hh = * (hh, / (rad, |()|<$[3]> (es)));
        es = *<$[3]> (es, / (rad, |()|<$[3]> (es)));
        }
      vec3 samplePos = +<$[3]> (pos, es);
      vec3 fs = fStep (samplePos);
      if > (/ (|()|<$[3]> (fs), |()|<$[3]> (es)), 0.5e0) {
        hh = * (hh, 0.5e0);
        continue;
        }
      vec3 oldPos = pos;
      vec3 up = +<$[3]> (fs, es);
      pos = +<$[3]> (pos, up);
      real newE = sum ({enr (-<$[3]> (pos, P.pos)) | particle P in sphere<particle> (rad)});
      if > (-<$[]> (newE, oldE), •<$[3]; $[3]; $[]> (*<$[3]> (0.5e0, -<$[3]> (pos, oldPos)), unary -<$[3]> (force))) {
        pos = oldPos;
        hh = * (hh, 0.5e0);
        continue;
        }
      hh = * (hh, 0.11e1);
      step = up;
      if < (nn, 5)
        new particle (+<$[3]> (pos, *<$[3]> (* (0.5e0, rad), normalize<$[3]> (es))), hh);
        }
    }
  
}
collection {
    foreach (vec3 x in ipos) {
      new particle (x, 0.1e1);
      }
    }
  
update {
  int num = sum ({|P.test | particle P in all|});
  int numFound = sum ({|P.testp | particle P in all|});
  bool allFound = all ({|P.found | particle P in all|});
  real maxStep = max ({||()|<$[3]> (P.step) | particle P in all|});
  real maxDist = max ({||()|<$[3]> (-<$[3]> (P.pos, [0.5e0, 0.5e0, 0.5e0])) | particle P in all|});
  real minDist = min ({||()|<$[3]> (-<$[3]> (P.pos, [0.5e0, 0.5e0, 0.5e0])) | particle P in all|});
  vec2 averageDist = [minDist, maxDist];
  print ("One run:", allFound, " and ", / (maxStep, rad), " and ", < (/ (maxStep, rad), eps), " and ", numFound, " of ", num, " and ", averageDist, "\n");
  if (allFound && < (/ (maxStep, rad), eps)) {
    print ("CONVERGED!\n");
    stabilize_all;}
  }
/* Program end */
/* Simplified Program (after after simplify) start */
properties: GlobalInit,StabilizeAll,GlobalReduce,StrandSets,GlobalUpdate,NewStrands,StrandCommunication,StrandsMayDie,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData0467;
input FemData:Space 0space0473_intermedateGlobal0474;
input FemData:FemFunc 0data0475_intermedateGlobal0476;
input real rad0477 = <default>;
input real eps0478 = <default>;
input real v00479 = <default>;
input vec3[] ipos047A;
constants {
  rad0477 = 0.1e-1;
  eps0478 = 0.1e-1;
  v00479 = 0.625e-1;
}
global Femdata: MeshCell[] 0cell_meshData0468;
global Femdata: Space space0473;
global Femdata: FemFunc data0475;
global int dimm15B3;
global field(3)[] F15CA;
global Femdata: RefCell simplex15CB;
function bool#0 !=047B (Femdata: MeshCell cell1047C, Femdata: MeshCell cell1047D)
{
  int _t047E = extractFemItem(CellIndex(Mesh), int, cell1047C);
  int _t047F = extractFemItem(CellIndex(Mesh), int, cell1047D);
  bool _t0480 = prim !=0086 (_t047E, _t047F);
  return _t0480;
}
function bool#0 ==0481 (Femdata: MeshCell cell1047C, Femdata: MeshCell cell1047D)
{
  int _t0482 = extractFemItem(CellIndex(Mesh), int, cell1047C);
  int _t0483 = extractFemItem(CellIndex(Mesh), int, cell1047D);
  bool _t0484 = prim ==0082 (_t0482, _t0483);
  return _t0484;
}
function Femdata: MeshPos#2 findPos0485 (Femdata: Mesh mesh0486, vec3 pos0487)
{
  real _t0488 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0489 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t048A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn048B = [_t0488, _t0489, _t048A];
  newtonInt048C = 0;
  cellInt048D = extractFemItem(StartCell(Mesh), int, mesh0486);
  int _t048E = extractFemItem(NumCell(Mesh), int, mesh0486);
  int _t048F = 1;
  numCell0490 = prim -0024 (_t048E, _t048F);
  yayCells0491 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0486, pos0487 : vec3);
  foreach cellItter0495 in yayCells0491 {
    real _t0492 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0493 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0494 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn048B = [_t0492, _t0493, _t0494];
    cellInt048D = cellItter0495;
    field(3)[3] _t0496 = femField(mesh0486,cellInt048D,field(3)[3],Transform,);
    field(3)[3,3] _t0497 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0496);
    field(3)[3,3] _t0498 = prim inv015E<#∞; %3> (_t0497);
    real _t0499 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t049A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t049B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t049C = [_t0499, _t049A, _t049B];
    A049D = prim @00A5<#∞; %3; $[3,3]> (_t0498, _t049C);
    int _t049E = 0;
    int _t049F = 16;
    int[] _t04A0 = prim $range01C3 (_t049E, _t049F);
    foreach newtonItter04CF in _t04A0 {
      field(3)[3] _t04A1 = femField(mesh0486,cellInt048D,field(3)[3],Transform,);
      field(3)[3] _t04A2 = prim -002E<#∞; %3; $[3]> (_t04A1, pos0487);
      field(3)[3] _t04A3 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A049D, _t04A2);
      delta04A4 = prim @00A5<#∞; %3; $[3]> (_t04A3, xn048B);
      xn048B = prim -0026<$[3]> (xn048B, delta04A4);
      real _t04A5 = 0.1e-7;
      real _t04A6 = 0.1e-7;
      real _t04A7 = prim *0034 (_t04A5, _t04A6);
      real _t04A8 = prim •00CE<$[3]; $[3]; $[]> (delta04A4, delta04A4);
      bool _t04A9 = prim >=007E (_t04A7, _t04A8);
      if _t04A9 {
        real _t04AA = 0.1e1;
        real _t04AB = 0.1e-7;
        real _t04AC = prim +0017<$[]> (_t04AA, _t04AB);
        real _t04AD = 0.1e1;
        real _t04AE = 0.1e1;
        real _t04AF = 0.1e1;
        vec3 _t04B0 = [_t04AD, _t04AE, _t04AF];
        real _t04B1 = prim •00CE<$[3]; $[3]; $[]> (_t04B0, xn048B);
        bool _t04B2 = prim >0080 (_t04AC, _t04B1);
        real _t04B3 = 0.1e-7;
        real _t04B4 = 0.1e-7;
        real _t04B5 = 0.1e-7;
        vec3 _t04B6 = [_t04B3, _t04B4, _t04B5];
        vec3 _t04B7 = prim +0017<$[3]> (_t04B6, xn048B);
        real _t04B8 = _t04B7[0];
        real _t04B9 = -0.e0;
        bool _t04BA = prim >0080 (_t04B8, _t04B9);
        real _t04BB = 0.1e-7;
        real _t04BC = 0.1e-7;
        real _t04BD = 0.1e-7;
        vec3 _t04BE = [_t04BB, _t04BC, _t04BD];
        vec3 _t04BF = prim +0017<$[3]> (_t04BE, xn048B);
        real _t04C0 = _t04BF[1];
        real _t04C1 = -0.e0;
        bool _t04C2 = prim >0080 (_t04C0, _t04C1);
        real _t04C3 = 0.1e-7;
        real _t04C4 = 0.1e-7;
        real _t04C5 = 0.1e-7;
        vec3 _t04C6 = [_t04C3, _t04C4, _t04C5];
        vec3 _t04C7 = prim +0017<$[3]> (_t04C6, xn048B);
        real _t04C8 = _t04C7[2];
        real _t04C9 = -0.e0;
        bool _t04CA = prim >0080 (_t04C8, _t04C9);
        bool _t04CB = prim $and01C4 (_t04C2, _t04CA);
        bool _t04CC = prim $and01C4 (_t04BA, _t04CB);
        bool _t04CD = prim $and01C4 (_t04B2, _t04CC);
        if _t04CD {
          Femdata: MeshPos _t04CE = extractFemItemN((mesh0486, cellInt048D, xn048B, pos0487),AllBuild(MeshPos),);
          return _t04CE;
        }
      }
    }
  }
  Femdata: MeshPos _t04D0 = extractFemItemN((mesh0486),InvalidBuild(MeshPos),);
  return _t04D0;
}
function Femdata: RefCell#1 refcell04D1 (Femdata: Mesh arg004D2)
{
  Femdata: RefCell _t04D3 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004D2);
  return _t04D3;
}
function Femdata: MeshCell[]#0 cells04D4 (Femdata: Mesh arg004D5)
{
  Femdata: MeshCell[] _t04D6 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004D5);
  return _t04D6;
}
function Femdata: MeshCell[]#0 cells04D7 (Femdata: Mesh arg004D5)
{
  int _t04D8 = 0;
  int _t04D9 = extractFemItem(NumCell(Mesh), int, arg004D5);
  int[] _t04DA = prim $range01C3 (_t04D8, _t04D9);
  Femdata: MeshCell[] accum04DD = {};
  foreach i04DB in _t04DA {
    Femdata: MeshCell _t04DC = loadFem(MeshCell, arg004D5, i04DB);
    accum04DD = prim @0010<Femdata: MeshCell> (accum04DD, _t04DC);
  }
  return accum04DD;
}
function int#0 numCell04DE (Femdata: Mesh arg004D2)
{
  int _t04DF = extractFemItem(NumCell(Mesh), int, arg004D2);
  return _t04DF;
}
function tensor[3,3,3,3]#0 mesh_t_transform_304E0 (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04E4 = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  field(3)[3,3] _t04E5 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04E4);
  field(3)[3,3,3] _t04E6 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04E5);
  field(3)[3,3,3,3] _t04E7 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t04E6);
  tensor[3,3,3,3] _t04E8 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t04E7, pos04E1);
  return _t04E8;
}
function tensor[3,3,3]#0 mesh_t_transform_204E9 (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04EA = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  field(3)[3,3] _t04EB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04EA);
  field(3)[3,3,3] _t04EC = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04EB);
  tensor[3,3,3] _t04ED = prim @00A5<#∞; %3; $[3,3,3]> (_t04EC, pos04E1);
  return _t04ED;
}
function tensor[3,3]#0 mesh_t_transform_104EE (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04EF = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  field(3)[3,3] _t04F0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04EF);
  tensor[3,3] _t04F1 = prim @00A5<#∞; %3; $[3,3]> (_t04F0, pos04E1);
  return _t04F1;
}
function vec3#2 mesh_t_transform_004F2 (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04F3 = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  vec3 _t04F4 = prim @00A5<#∞; %3; $[3]> (_t04F3, pos04E1);
  return _t04F4;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse04F5 (vec3 pos04F6, int cellInt04F7, Femdata: Mesh mesh04F8)
{
  real _t04F9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04FA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04FB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04FC = [_t04F9, _t04FA, _t04FB];
  field(3)[3] _t04FD = femField(mesh04F8,cellInt04F7,field(3)[3],Transform,);
  field(3)[3,3] _t04FE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04FD);
  field(3)[3,3] _t04FF = prim inv015E<#∞; %3> (_t04FE);
  real _t0500 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0501 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0502 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t0503 = [_t0500, _t0501, _t0502];
  A0504 = prim @00A5<#∞; %3; $[3,3]> (_t04FF, _t0503);
  int _t0505 = 0;
  int _t0506 = 16;
  int[] _t0507 = prim $range01C3 (_t0505, _t0506);
  foreach itter0537 in _t0507 {
    field(3)[3] _t0508 = femField(mesh04F8,cellInt04F7,field(3)[3],Transform,);
    field(3)[3] _t0509 = prim -002E<#∞; %3; $[3]> (_t0508, pos04F6);
    field(3)[3] _t050A = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0504, _t0509);
    delta050B = prim @00A5<#∞; %3; $[3]> (_t050A, xn04FC);
    xn04FC = prim -0026<$[3]> (xn04FC, delta050B);
    real _t050C = 0.1e-7;
    real _t050D = 0.1e-7;
    real _t050E = prim *0034 (_t050C, _t050D);
    real _t050F = prim •00CE<$[3]; $[3]; $[]> (delta050B, delta050B);
    bool _t0510 = prim >=007E (_t050E, _t050F);
    if _t0510 {
      real _t0511 = 0.1e1;
      real _t0512 = 0.1e-7;
      real _t0513 = prim +0017<$[]> (_t0511, _t0512);
      real _t0514 = 0.1e1;
      real _t0515 = 0.1e1;
      real _t0516 = 0.1e1;
      vec3 _t0517 = [_t0514, _t0515, _t0516];
      real _t0518 = prim •00CE<$[3]; $[3]; $[]> (_t0517, xn04FC);
      bool _t0519 = prim >0080 (_t0513, _t0518);
      real _t051A = 0.1e-7;
      real _t051B = 0.1e-7;
      real _t051C = 0.1e-7;
      vec3 _t051D = [_t051A, _t051B, _t051C];
      vec3 _t051E = prim +0017<$[3]> (_t051D, xn04FC);
      real _t051F = _t051E[0];
      real _t0520 = -0.e0;
      bool _t0521 = prim >0080 (_t051F, _t0520);
      real _t0522 = 0.1e-7;
      real _t0523 = 0.1e-7;
      real _t0524 = 0.1e-7;
      vec3 _t0525 = [_t0522, _t0523, _t0524];
      vec3 _t0526 = prim +0017<$[3]> (_t0525, xn04FC);
      real _t0527 = _t0526[1];
      real _t0528 = -0.e0;
      bool _t0529 = prim >0080 (_t0527, _t0528);
      real _t052A = 0.1e-7;
      real _t052B = 0.1e-7;
      real _t052C = 0.1e-7;
      vec3 _t052D = [_t052A, _t052B, _t052C];
      vec3 _t052E = prim +0017<$[3]> (_t052D, xn04FC);
      real _t052F = _t052E[2];
      real _t0530 = -0.e0;
      bool _t0531 = prim >0080 (_t052F, _t0530);
      bool _t0532 = prim $and01C4 (_t0529, _t0531);
      bool _t0533 = prim $and01C4 (_t0521, _t0532);
      bool _t0534 = prim $and01C4 (_t0519, _t0533);
      if _t0534 {
        Femdata: MeshPos _t0535 = extractFemItemN((mesh04F8, cellInt04F7, xn04FC, pos04F6),AllBuild(MeshPos),);
        return _t0535;
      } else {
        Femdata: MeshPos _t0536 = extractFemItemN((mesh04F8),InvalidBuild(MeshPos),);
        return _t0536;
      }
    }
  }
  Femdata: MeshPos _t0538 = extractFemItemN((mesh04F8),InvalidBuild(MeshPos),);
  return _t0538;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos0539 (Femdata: MeshPos pos053A)
{
  bool _t053B = extractFemItem(WorldTest(MeshPos), bool, pos053A);
  if _t053B {
    vec3 _t053C = extractFemItem(RefPos(MeshPos), vec3, pos053A);
    int _t053D = extractFemItem(CellIndex(MeshPos), int, pos053A);
    Femdata: Mesh _t053E = extractFem(pos053A, Mesh);
    vec3 _t053F = func mesh_t_transform_004F2 (_t053C, _t053D, _t053E);
    Femdata: MeshPos _t0540 = extractFemItemN((pos053A, _t053F),NewWorld(MeshPos),);
    return _t0540;
  } else {
    return pos053A;
  }
}
function vec3#0 worldPos0541 (Femdata: MeshPos pos053A)
{
  vec3 _t0542 = extractFemItem(RefPos(MeshPos), vec3, pos053A);
  int _t0543 = extractFemItem(CellIndex(MeshPos), int, pos053A);
  Femdata: Mesh _t0544 = extractFem(pos053A, Mesh);
  vec3 _t0545 = func mesh_t_transform_004F2 (_t0542, _t0543, _t0544);
  return _t0545;
}
function Femdata: MeshPos#0 $exitPos0546 (Femdata: Mesh mesh0547, int cellId0548, vec3 refPos0549, vec3 dPos054A, real[2] time054B)
{
  int _t054C = -1;
  real _t054D = time054B[1];
  int _t054E = prim $r2i01B7 (_t054D);
  int[2] _t0550 = func nextCell4054F (_t054E, cellId0548, mesh0547);
  int _t0551 = 0;
  int _t0552 = prim $sub01C0<int; %2> (_t0550, _t0551);
  bool _t0553 = prim !=0086 (_t054C, _t0552);
  if _t0553 {
    string _t0554 = "face ";
    real _t0555 = time054B[1];
    int _t0556 = prim $r2i01B7 (_t0555);
    string _t0557 = " to ";
    real _t0558 = time054B[1];
    int _t0559 = prim $r2i01B7 (_t0558);
    int[2] _t055A = func nextCell4054F (_t0559, cellId0548, mesh0547);
    int _t055B = 1;
    int _t055C = prim $sub01C0<int; %2> (_t055A, _t055B);
    string _t055D = "\n";
    string _t055E = "got: ";
    real _t055F = 0.1e1;
    real _t0560 = 0.e0;
    real _t0561 = 0.e0;
    real _t0562 = 0.e0;
    vec4 _t0563 = [_t055F, _t0560, _t0561, _t0562];
    real _t0564 = 0.e0;
    real _t0565 = 0.1e1;
    real _t0566 = 0.e0;
    real _t0567 = 0.e0;
    vec4 _t0568 = [_t0564, _t0565, _t0566, _t0567];
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    real _t056B = 0.1e1;
    real _t056C = 0.e0;
    vec4 _t056D = [_t0569, _t056A, _t056B, _t056C];
    real _t056E = 0.971445146547e-16;
    real _t056F = 0.e0;
    real _t0570 = 0.e0;
    real _t0571 = 0.1e1;
    vec4 _t0572 = [_t056E, _t056F, _t0570, _t0571];
    tensor[4,4] _t0573 = [_t0563, _t0568, _t056D, _t0572];
    real _t0574 = 0.57735026919e0;
    real _t0575 = 0.57735026919e0;
    real _t0576 = 0.57735026919e0;
    real _t0577 = -0.57735026919e0;
    vec4 _t0578 = [_t0574, _t0575, _t0576, _t0577];
    real _t0579 = -0.333333333333e0;
    real _t057A = 0.666666666667e0;
    real _t057B = -0.333333333333e0;
    real _t057C = 0.333333333333e0;
    vec4 _t057D = [_t0579, _t057A, _t057B, _t057C];
    real _t057E = -0.333333333333e0;
    real _t057F = -0.333333333333e0;
    real _t0580 = 0.666666666667e0;
    real _t0581 = 0.333333333333e0;
    vec4 _t0582 = [_t057E, _t057F, _t0580, _t0581];
    real _t0583 = 0.971445146547e-16;
    real _t0584 = 0.e0;
    real _t0585 = 0.e0;
    real _t0586 = 0.1e1;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    tensor[4,4] _t0588 = [_t0578, _t057D, _t0582, _t0587];
    real _t0589 = -0.333333333333e0;
    real _t058A = 0.666666666667e0;
    real _t058B = -0.333333333333e0;
    real _t058C = 0.333333333333e0;
    vec4 _t058D = [_t0589, _t058A, _t058B, _t058C];
    real _t058E = -0.57735026919e0;
    real _t058F = -0.57735026919e0;
    real _t0590 = -0.57735026919e0;
    real _t0591 = 0.57735026919e0;
    vec4 _t0592 = [_t058E, _t058F, _t0590, _t0591];
    real _t0593 = -0.333333333333e0;
    real _t0594 = -0.333333333333e0;
    real _t0595 = 0.666666666667e0;
    real _t0596 = 0.333333333333e0;
    vec4 _t0597 = [_t0593, _t0594, _t0595, _t0596];
    real _t0598 = 0.971445146547e-16;
    real _t0599 = 0.e0;
    real _t059A = 0.e0;
    real _t059B = 0.1e1;
    vec4 _t059C = [_t0598, _t0599, _t059A, _t059B];
    tensor[4,4] _t059D = [_t058D, _t0592, _t0597, _t059C];
    real _t059E = -0.333333333333e0;
    real _t059F = 0.666666666667e0;
    real _t05A0 = -0.333333333333e0;
    real _t05A1 = 0.333333333333e0;
    vec4 _t05A2 = [_t059E, _t059F, _t05A0, _t05A1];
    real _t05A3 = -0.333333333333e0;
    real _t05A4 = -0.333333333333e0;
    real _t05A5 = 0.666666666667e0;
    real _t05A6 = 0.333333333333e0;
    vec4 _t05A7 = [_t05A3, _t05A4, _t05A5, _t05A6];
    real _t05A8 = 0.57735026919e0;
    real _t05A9 = 0.57735026919e0;
    real _t05AA = 0.57735026919e0;
    real _t05AB = -0.57735026919e0;
    vec4 _t05AC = [_t05A8, _t05A9, _t05AA, _t05AB];
    real _t05AD = 0.971445146547e-16;
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.1e1;
    vec4 _t05B1 = [_t05AD, _t05AE, _t05AF, _t05B0];
    tensor[4,4] _t05B2 = [_t05A2, _t05A7, _t05AC, _t05B1];
    tensor[4,4][4] _t05B3 = {_t0573, _t0588, _t059D, _t05B2};
    real _t05B4 = 0.57735026919e0;
    real _t05B5 = -0.1e1;
    real _t05B6 = -0.1e1;
    real _t05B7 = 0.1e1;
    vec4 _t05B8 = [_t05B4, _t05B5, _t05B6, _t05B7];
    real _t05B9 = 0.57735026919e0;
    real _t05BA = 0.1e1;
    real _t05BB = 0.e0;
    real _t05BC = 0.e0;
    vec4 _t05BD = [_t05B9, _t05BA, _t05BB, _t05BC];
    real _t05BE = 0.57735026919e0;
    real _t05BF = 0.e0;
    real _t05C0 = 0.1e1;
    real _t05C1 = 0.e0;
    vec4 _t05C2 = [_t05BE, _t05BF, _t05C0, _t05C1];
    real _t05C3 = 0.e0;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.e0;
    real _t05C6 = 0.1e1;
    vec4 _t05C7 = [_t05C3, _t05C4, _t05C5, _t05C6];
    tensor[4,4] _t05C8 = [_t05B8, _t05BD, _t05C2, _t05C7];
    real _t05C9 = 0.1e1;
    real _t05CA = 0.e0;
    real _t05CB = 0.e0;
    real _t05CC = 0.e0;
    vec4 _t05CD = [_t05C9, _t05CA, _t05CB, _t05CC];
    real _t05CE = 0.e0;
    real _t05CF = 0.1e1;
    real _t05D0 = 0.e0;
    real _t05D1 = 0.e0;
    vec4 _t05D2 = [_t05CE, _t05CF, _t05D0, _t05D1];
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    real _t05D5 = 0.1e1;
    real _t05D6 = 0.e0;
    vec4 _t05D7 = [_t05D3, _t05D4, _t05D5, _t05D6];
    real _t05D8 = 0.e0;
    real _t05D9 = 0.e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.1e1;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    tensor[4,4] _t05DD = [_t05CD, _t05D2, _t05D7, _t05DC];
    real _t05DE = 0.e0;
    real _t05DF = 0.1e1;
    real _t05E0 = 0.e0;
    real _t05E1 = 0.e0;
    vec4 _t05E2 = [_t05DE, _t05DF, _t05E0, _t05E1];
    real _t05E3 = -0.1e1;
    real _t05E4 = 0.e0;
    real _t05E5 = 0.e0;
    real _t05E6 = 0.e0;
    vec4 _t05E7 = [_t05E3, _t05E4, _t05E5, _t05E6];
    real _t05E8 = 0.e0;
    real _t05E9 = 0.e0;
    real _t05EA = 0.1e1;
    real _t05EB = 0.e0;
    vec4 _t05EC = [_t05E8, _t05E9, _t05EA, _t05EB];
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    real _t05EF = 0.e0;
    real _t05F0 = 0.1e1;
    vec4 _t05F1 = [_t05ED, _t05EE, _t05EF, _t05F0];
    tensor[4,4] _t05F2 = [_t05E2, _t05E7, _t05EC, _t05F1];
    real _t05F3 = 0.e0;
    real _t05F4 = 0.1e1;
    real _t05F5 = 0.e0;
    real _t05F6 = 0.e0;
    vec4 _t05F7 = [_t05F3, _t05F4, _t05F5, _t05F6];
    real _t05F8 = 0.e0;
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    real _t05FB = 0.e0;
    vec4 _t05FC = [_t05F8, _t05F9, _t05FA, _t05FB];
    real _t05FD = 0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    vec4 _t0601 = [_t05FD, _t05FE, _t05FF, _t0600];
    real _t0602 = 0.e0;
    real _t0603 = 0.e0;
    real _t0604 = 0.e0;
    real _t0605 = 0.1e1;
    vec4 _t0606 = [_t0602, _t0603, _t0604, _t0605];
    tensor[4,4] _t0607 = [_t05F7, _t05FC, _t0601, _t0606];
    tensor[4,4][4] _t0608 = {_t05C8, _t05DD, _t05F2, _t0607};
    real _t0609 = -0.1e1;
    real _t060A = -0.57735026919e0;
    real _t060B = -0.1e1;
    real _t060C = 0.1e1;
    vec4 _t060D = [_t0609, _t060A, _t060B, _t060C];
    real _t060E = 0.1e1;
    real _t060F = -0.57735026919e0;
    real _t0610 = 0.e0;
    real _t0611 = 0.e0;
    vec4 _t0612 = [_t060E, _t060F, _t0610, _t0611];
    real _t0613 = 0.e0;
    real _t0614 = -0.57735026919e0;
    real _t0615 = 0.1e1;
    real _t0616 = 0.e0;
    vec4 _t0617 = [_t0613, _t0614, _t0615, _t0616];
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    real _t061A = 0.e0;
    real _t061B = 0.1e1;
    vec4 _t061C = [_t0618, _t0619, _t061A, _t061B];
    tensor[4,4] _t061D = [_t060D, _t0612, _t0617, _t061C];
    real _t061E = 0.e0;
    real _t061F = -0.1e1;
    real _t0620 = 0.e0;
    real _t0621 = 0.e0;
    vec4 _t0622 = [_t061E, _t061F, _t0620, _t0621];
    real _t0623 = 0.1e1;
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.e0;
    vec4 _t0627 = [_t0623, _t0624, _t0625, _t0626];
    real _t0628 = 0.e0;
    real _t0629 = 0.e0;
    real _t062A = 0.1e1;
    real _t062B = 0.e0;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    real _t062F = 0.e0;
    real _t0630 = 0.1e1;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    tensor[4,4] _t0632 = [_t0622, _t0627, _t062C, _t0631];
    real _t0633 = 0.1e1;
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = 0.e0;
    vec4 _t0637 = [_t0633, _t0634, _t0635, _t0636];
    real _t0638 = 0.e0;
    real _t0639 = 0.1e1;
    real _t063A = 0.e0;
    real _t063B = 0.e0;
    vec4 _t063C = [_t0638, _t0639, _t063A, _t063B];
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    vec4 _t0641 = [_t063D, _t063E, _t063F, _t0640];
    real _t0642 = 0.e0;
    real _t0643 = 0.e0;
    real _t0644 = 0.e0;
    real _t0645 = 0.1e1;
    vec4 _t0646 = [_t0642, _t0643, _t0644, _t0645];
    tensor[4,4] _t0647 = [_t0637, _t063C, _t0641, _t0646];
    real _t0648 = 0.1e1;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.e0;
    vec4 _t064C = [_t0648, _t0649, _t064A, _t064B];
    real _t064D = 0.e0;
    real _t064E = 0.e0;
    real _t064F = 0.1e1;
    real _t0650 = 0.e0;
    vec4 _t0651 = [_t064D, _t064E, _t064F, _t0650];
    real _t0652 = 0.e0;
    real _t0653 = -0.1e1;
    real _t0654 = 0.e0;
    real _t0655 = 0.e0;
    vec4 _t0656 = [_t0652, _t0653, _t0654, _t0655];
    real _t0657 = 0.e0;
    real _t0658 = 0.e0;
    real _t0659 = 0.e0;
    real _t065A = 0.1e1;
    vec4 _t065B = [_t0657, _t0658, _t0659, _t065A];
    tensor[4,4] _t065C = [_t064C, _t0651, _t0656, _t065B];
    tensor[4,4][4] _t065D = {_t061D, _t0632, _t0647, _t065C};
    real _t065E = -0.1e1;
    real _t065F = -0.1e1;
    real _t0660 = 0.57735026919e0;
    real _t0661 = 0.1e1;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    real _t0663 = 0.1e1;
    real _t0664 = 0.e0;
    real _t0665 = 0.57735026919e0;
    real _t0666 = 0.e0;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    real _t0668 = 0.e0;
    real _t0669 = 0.1e1;
    real _t066A = 0.57735026919e0;
    real _t066B = 0.e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    real _t0670 = 0.1e1;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    tensor[4,4] _t0672 = [_t0662, _t0667, _t066C, _t0671];
    real _t0673 = 0.e0;
    real _t0674 = 0.e0;
    real _t0675 = 0.1e1;
    real _t0676 = 0.e0;
    vec4 _t0677 = [_t0673, _t0674, _t0675, _t0676];
    real _t0678 = 0.1e1;
    real _t0679 = 0.e0;
    real _t067A = 0.e0;
    real _t067B = 0.e0;
    vec4 _t067C = [_t0678, _t0679, _t067A, _t067B];
    real _t067D = 0.e0;
    real _t067E = 0.1e1;
    real _t067F = 0.e0;
    real _t0680 = 0.e0;
    vec4 _t0681 = [_t067D, _t067E, _t067F, _t0680];
    real _t0682 = 0.e0;
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = 0.1e1;
    vec4 _t0686 = [_t0682, _t0683, _t0684, _t0685];
    tensor[4,4] _t0687 = [_t0677, _t067C, _t0681, _t0686];
    real _t0688 = 0.1e1;
    real _t0689 = 0.e0;
    real _t068A = 0.e0;
    real _t068B = 0.e0;
    vec4 _t068C = [_t0688, _t0689, _t068A, _t068B];
    real _t068D = 0.e0;
    real _t068E = 0.e0;
    real _t068F = -0.1e1;
    real _t0690 = 0.e0;
    vec4 _t0691 = [_t068D, _t068E, _t068F, _t0690];
    real _t0692 = 0.e0;
    real _t0693 = 0.1e1;
    real _t0694 = 0.e0;
    real _t0695 = 0.e0;
    vec4 _t0696 = [_t0692, _t0693, _t0694, _t0695];
    real _t0697 = 0.e0;
    real _t0698 = 0.e0;
    real _t0699 = 0.e0;
    real _t069A = 0.1e1;
    vec4 _t069B = [_t0697, _t0698, _t0699, _t069A];
    tensor[4,4] _t069C = [_t068C, _t0691, _t0696, _t069B];
    real _t069D = 0.1e1;
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    real _t06A0 = 0.e0;
    vec4 _t06A1 = [_t069D, _t069E, _t069F, _t06A0];
    real _t06A2 = 0.e0;
    real _t06A3 = 0.1e1;
    real _t06A4 = 0.e0;
    real _t06A5 = 0.e0;
    vec4 _t06A6 = [_t06A2, _t06A3, _t06A4, _t06A5];
    real _t06A7 = 0.e0;
    real _t06A8 = 0.e0;
    real _t06A9 = 0.1e1;
    real _t06AA = 0.e0;
    vec4 _t06AB = [_t06A7, _t06A8, _t06A9, _t06AA];
    real _t06AC = 0.e0;
    real _t06AD = 0.e0;
    real _t06AE = 0.e0;
    real _t06AF = 0.1e1;
    vec4 _t06B0 = [_t06AC, _t06AD, _t06AE, _t06AF];
    tensor[4,4] _t06B1 = [_t06A1, _t06A6, _t06AB, _t06B0];
    tensor[4,4][4] _t06B2 = {_t0672, _t0687, _t069C, _t06B1};
    tensor[4,4][4][4] _t06B3 = {_t05B3, _t0608, _t065D, _t06B2};
    real _t06B4 = time054B[1];
    int _t06B5 = prim $r2i01B7 (_t06B4);
    tensor[4,4][4] _t06B6 = prim $sub01C0<tensor[4,4][4]; %4> (_t06B3, _t06B5);
    real _t06B7 = time054B[1];
    int _t06B8 = prim $r2i01B7 (_t06B7);
    int[2] _t06B9 = func nextCell4054F (_t06B8, cellId0548, mesh0547);
    int _t06BA = 1;
    int _t06BB = prim $sub01C0<int; %2> (_t06B9, _t06BA);
    tensor[4,4] _t06BC = prim $sub01C0<tensor[4,4]; %4> (_t06B6, _t06BB);
    string _t06BD = "\n";
    print (_t0554, _t0556, _t0557, _t055C, _t055D, _t055E, _t06BC, _t06BD);
    real _t06BE = time054B[1];
    int _t06BF = prim $r2i01B7 (_t06BE);
    int[2] _t06C0 = func nextCell4054F (_t06BF, cellId0548, mesh0547);
    int _t06C1 = 0;
    int _t06C2 = prim $sub01C0<int; %2> (_t06C0, _t06C1);
    real _t06C3 = 0.1e1;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.e0;
    real _t06C6 = 0.e0;
    vec4 _t06C7 = [_t06C3, _t06C4, _t06C5, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = 0.1e1;
    real _t06CA = 0.e0;
    real _t06CB = 0.e0;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = 0.1e1;
    real _t06D0 = 0.e0;
    vec4 _t06D1 = [_t06CD, _t06CE, _t06CF, _t06D0];
    real _t06D2 = 0.971445146547e-16;
    real _t06D3 = 0.e0;
    real _t06D4 = 0.e0;
    real _t06D5 = 0.1e1;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    tensor[4,4] _t06D7 = [_t06C7, _t06CC, _t06D1, _t06D6];
    real _t06D8 = 0.57735026919e0;
    real _t06D9 = 0.57735026919e0;
    real _t06DA = 0.57735026919e0;
    real _t06DB = -0.57735026919e0;
    vec4 _t06DC = [_t06D8, _t06D9, _t06DA, _t06DB];
    real _t06DD = -0.333333333333e0;
    real _t06DE = 0.666666666667e0;
    real _t06DF = -0.333333333333e0;
    real _t06E0 = 0.333333333333e0;
    vec4 _t06E1 = [_t06DD, _t06DE, _t06DF, _t06E0];
    real _t06E2 = -0.333333333333e0;
    real _t06E3 = -0.333333333333e0;
    real _t06E4 = 0.666666666667e0;
    real _t06E5 = 0.333333333333e0;
    vec4 _t06E6 = [_t06E2, _t06E3, _t06E4, _t06E5];
    real _t06E7 = 0.971445146547e-16;
    real _t06E8 = 0.e0;
    real _t06E9 = 0.e0;
    real _t06EA = 0.1e1;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    tensor[4,4] _t06EC = [_t06DC, _t06E1, _t06E6, _t06EB];
    real _t06ED = -0.333333333333e0;
    real _t06EE = 0.666666666667e0;
    real _t06EF = -0.333333333333e0;
    real _t06F0 = 0.333333333333e0;
    vec4 _t06F1 = [_t06ED, _t06EE, _t06EF, _t06F0];
    real _t06F2 = -0.57735026919e0;
    real _t06F3 = -0.57735026919e0;
    real _t06F4 = -0.57735026919e0;
    real _t06F5 = 0.57735026919e0;
    vec4 _t06F6 = [_t06F2, _t06F3, _t06F4, _t06F5];
    real _t06F7 = -0.333333333333e0;
    real _t06F8 = -0.333333333333e0;
    real _t06F9 = 0.666666666667e0;
    real _t06FA = 0.333333333333e0;
    vec4 _t06FB = [_t06F7, _t06F8, _t06F9, _t06FA];
    real _t06FC = 0.971445146547e-16;
    real _t06FD = 0.e0;
    real _t06FE = 0.e0;
    real _t06FF = 0.1e1;
    vec4 _t0700 = [_t06FC, _t06FD, _t06FE, _t06FF];
    tensor[4,4] _t0701 = [_t06F1, _t06F6, _t06FB, _t0700];
    real _t0702 = -0.333333333333e0;
    real _t0703 = 0.666666666667e0;
    real _t0704 = -0.333333333333e0;
    real _t0705 = 0.333333333333e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = -0.333333333333e0;
    real _t0708 = -0.333333333333e0;
    real _t0709 = 0.666666666667e0;
    real _t070A = 0.333333333333e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.57735026919e0;
    real _t070D = 0.57735026919e0;
    real _t070E = 0.57735026919e0;
    real _t070F = -0.57735026919e0;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    real _t0711 = 0.971445146547e-16;
    real _t0712 = 0.e0;
    real _t0713 = 0.e0;
    real _t0714 = 0.1e1;
    vec4 _t0715 = [_t0711, _t0712, _t0713, _t0714];
    tensor[4,4] _t0716 = [_t0706, _t070B, _t0710, _t0715];
    tensor[4,4][4] _t0717 = {_t06D7, _t06EC, _t0701, _t0716};
    real _t0718 = 0.57735026919e0;
    real _t0719 = -0.1e1;
    real _t071A = -0.1e1;
    real _t071B = 0.1e1;
    vec4 _t071C = [_t0718, _t0719, _t071A, _t071B];
    real _t071D = 0.57735026919e0;
    real _t071E = 0.1e1;
    real _t071F = 0.e0;
    real _t0720 = 0.e0;
    vec4 _t0721 = [_t071D, _t071E, _t071F, _t0720];
    real _t0722 = 0.57735026919e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    real _t0725 = 0.e0;
    vec4 _t0726 = [_t0722, _t0723, _t0724, _t0725];
    real _t0727 = 0.e0;
    real _t0728 = 0.e0;
    real _t0729 = 0.e0;
    real _t072A = 0.1e1;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    tensor[4,4] _t072C = [_t071C, _t0721, _t0726, _t072B];
    real _t072D = 0.1e1;
    real _t072E = 0.e0;
    real _t072F = 0.e0;
    real _t0730 = 0.e0;
    vec4 _t0731 = [_t072D, _t072E, _t072F, _t0730];
    real _t0732 = 0.e0;
    real _t0733 = 0.1e1;
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.1e1;
    real _t073A = 0.e0;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    real _t073E = 0.e0;
    real _t073F = 0.1e1;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    tensor[4,4] _t0741 = [_t0731, _t0736, _t073B, _t0740];
    real _t0742 = 0.e0;
    real _t0743 = 0.1e1;
    real _t0744 = 0.e0;
    real _t0745 = 0.e0;
    vec4 _t0746 = [_t0742, _t0743, _t0744, _t0745];
    real _t0747 = -0.1e1;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    real _t074A = 0.e0;
    vec4 _t074B = [_t0747, _t0748, _t0749, _t074A];
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.1e1;
    real _t074F = 0.e0;
    vec4 _t0750 = [_t074C, _t074D, _t074E, _t074F];
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    real _t0753 = 0.e0;
    real _t0754 = 0.1e1;
    vec4 _t0755 = [_t0751, _t0752, _t0753, _t0754];
    tensor[4,4] _t0756 = [_t0746, _t074B, _t0750, _t0755];
    real _t0757 = 0.e0;
    real _t0758 = 0.1e1;
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    vec4 _t075B = [_t0757, _t0758, _t0759, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    real _t075E = 0.1e1;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = 0.1e1;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.e0;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    real _t0766 = 0.e0;
    real _t0767 = 0.e0;
    real _t0768 = 0.e0;
    real _t0769 = 0.1e1;
    vec4 _t076A = [_t0766, _t0767, _t0768, _t0769];
    tensor[4,4] _t076B = [_t075B, _t0760, _t0765, _t076A];
    tensor[4,4][4] _t076C = {_t072C, _t0741, _t0756, _t076B};
    real _t076D = -0.1e1;
    real _t076E = -0.57735026919e0;
    real _t076F = -0.1e1;
    real _t0770 = 0.1e1;
    vec4 _t0771 = [_t076D, _t076E, _t076F, _t0770];
    real _t0772 = 0.1e1;
    real _t0773 = -0.57735026919e0;
    real _t0774 = 0.e0;
    real _t0775 = 0.e0;
    vec4 _t0776 = [_t0772, _t0773, _t0774, _t0775];
    real _t0777 = 0.e0;
    real _t0778 = -0.57735026919e0;
    real _t0779 = 0.1e1;
    real _t077A = 0.e0;
    vec4 _t077B = [_t0777, _t0778, _t0779, _t077A];
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    real _t077E = 0.e0;
    real _t077F = 0.1e1;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    tensor[4,4] _t0781 = [_t0771, _t0776, _t077B, _t0780];
    real _t0782 = 0.e0;
    real _t0783 = -0.1e1;
    real _t0784 = 0.e0;
    real _t0785 = 0.e0;
    vec4 _t0786 = [_t0782, _t0783, _t0784, _t0785];
    real _t0787 = 0.1e1;
    real _t0788 = 0.e0;
    real _t0789 = 0.e0;
    real _t078A = 0.e0;
    vec4 _t078B = [_t0787, _t0788, _t0789, _t078A];
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.1e1;
    real _t078F = 0.e0;
    vec4 _t0790 = [_t078C, _t078D, _t078E, _t078F];
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.1e1;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    tensor[4,4] _t0796 = [_t0786, _t078B, _t0790, _t0795];
    real _t0797 = 0.1e1;
    real _t0798 = 0.e0;
    real _t0799 = 0.e0;
    real _t079A = 0.e0;
    vec4 _t079B = [_t0797, _t0798, _t0799, _t079A];
    real _t079C = 0.e0;
    real _t079D = 0.1e1;
    real _t079E = 0.e0;
    real _t079F = 0.e0;
    vec4 _t07A0 = [_t079C, _t079D, _t079E, _t079F];
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.1e1;
    real _t07A4 = 0.e0;
    vec4 _t07A5 = [_t07A1, _t07A2, _t07A3, _t07A4];
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.e0;
    real _t07A9 = 0.1e1;
    vec4 _t07AA = [_t07A6, _t07A7, _t07A8, _t07A9];
    tensor[4,4] _t07AB = [_t079B, _t07A0, _t07A5, _t07AA];
    real _t07AC = 0.1e1;
    real _t07AD = 0.e0;
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    vec4 _t07B0 = [_t07AC, _t07AD, _t07AE, _t07AF];
    real _t07B1 = 0.e0;
    real _t07B2 = 0.e0;
    real _t07B3 = 0.1e1;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = -0.1e1;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.e0;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.e0;
    real _t07BE = 0.1e1;
    vec4 _t07BF = [_t07BB, _t07BC, _t07BD, _t07BE];
    tensor[4,4] _t07C0 = [_t07B0, _t07B5, _t07BA, _t07BF];
    tensor[4,4][4] _t07C1 = {_t0781, _t0796, _t07AB, _t07C0};
    real _t07C2 = -0.1e1;
    real _t07C3 = -0.1e1;
    real _t07C4 = 0.57735026919e0;
    real _t07C5 = 0.1e1;
    vec4 _t07C6 = [_t07C2, _t07C3, _t07C4, _t07C5];
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.57735026919e0;
    real _t07CA = 0.e0;
    vec4 _t07CB = [_t07C7, _t07C8, _t07C9, _t07CA];
    real _t07CC = 0.e0;
    real _t07CD = 0.1e1;
    real _t07CE = 0.57735026919e0;
    real _t07CF = 0.e0;
    vec4 _t07D0 = [_t07CC, _t07CD, _t07CE, _t07CF];
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.1e1;
    vec4 _t07D5 = [_t07D1, _t07D2, _t07D3, _t07D4];
    tensor[4,4] _t07D6 = [_t07C6, _t07CB, _t07D0, _t07D5];
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.1e1;
    real _t07DA = 0.e0;
    vec4 _t07DB = [_t07D7, _t07D8, _t07D9, _t07DA];
    real _t07DC = 0.1e1;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    real _t07DF = 0.e0;
    vec4 _t07E0 = [_t07DC, _t07DD, _t07DE, _t07DF];
    real _t07E1 = 0.e0;
    real _t07E2 = 0.1e1;
    real _t07E3 = 0.e0;
    real _t07E4 = 0.e0;
    vec4 _t07E5 = [_t07E1, _t07E2, _t07E3, _t07E4];
    real _t07E6 = 0.e0;
    real _t07E7 = 0.e0;
    real _t07E8 = 0.e0;
    real _t07E9 = 0.1e1;
    vec4 _t07EA = [_t07E6, _t07E7, _t07E8, _t07E9];
    tensor[4,4] _t07EB = [_t07DB, _t07E0, _t07E5, _t07EA];
    real _t07EC = 0.1e1;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    real _t07EF = 0.e0;
    vec4 _t07F0 = [_t07EC, _t07ED, _t07EE, _t07EF];
    real _t07F1 = 0.e0;
    real _t07F2 = 0.e0;
    real _t07F3 = -0.1e1;
    real _t07F4 = 0.e0;
    vec4 _t07F5 = [_t07F1, _t07F2, _t07F3, _t07F4];
    real _t07F6 = 0.e0;
    real _t07F7 = 0.1e1;
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    vec4 _t07FA = [_t07F6, _t07F7, _t07F8, _t07F9];
    real _t07FB = 0.e0;
    real _t07FC = 0.e0;
    real _t07FD = 0.e0;
    real _t07FE = 0.1e1;
    vec4 _t07FF = [_t07FB, _t07FC, _t07FD, _t07FE];
    tensor[4,4] _t0800 = [_t07F0, _t07F5, _t07FA, _t07FF];
    real _t0801 = 0.1e1;
    real _t0802 = 0.e0;
    real _t0803 = 0.e0;
    real _t0804 = 0.e0;
    vec4 _t0805 = [_t0801, _t0802, _t0803, _t0804];
    real _t0806 = 0.e0;
    real _t0807 = 0.1e1;
    real _t0808 = 0.e0;
    real _t0809 = 0.e0;
    vec4 _t080A = [_t0806, _t0807, _t0808, _t0809];
    real _t080B = 0.e0;
    real _t080C = 0.e0;
    real _t080D = 0.1e1;
    real _t080E = 0.e0;
    vec4 _t080F = [_t080B, _t080C, _t080D, _t080E];
    real _t0810 = 0.e0;
    real _t0811 = 0.e0;
    real _t0812 = 0.e0;
    real _t0813 = 0.1e1;
    vec4 _t0814 = [_t0810, _t0811, _t0812, _t0813];
    tensor[4,4] _t0815 = [_t0805, _t080A, _t080F, _t0814];
    tensor[4,4][4] _t0816 = {_t07D6, _t07EB, _t0800, _t0815};
    tensor[4,4][4][4] _t0817 = {_t0717, _t076C, _t07C1, _t0816};
    real _t0818 = time054B[1];
    int _t0819 = prim $r2i01B7 (_t0818);
    tensor[4,4][4] _t081A = prim $sub01C0<tensor[4,4][4]; %4> (_t0817, _t0819);
    real _t081B = time054B[1];
    int _t081C = prim $r2i01B7 (_t081B);
    int[2] _t081D = func nextCell4054F (_t081C, cellId0548, mesh0547);
    int _t081E = 1;
    int _t081F = prim $sub01C0<int; %2> (_t081D, _t081E);
    tensor[4,4] _t0820 = prim $sub01C0<tensor[4,4]; %4> (_t081A, _t081F);
    real _t0821 = time054B[0];
    vec3 _t0822 = prim *0036<$[3]> (_t0821, dPos054A);
    vec3 _t0823 = prim +0017<$[3]> (_t0822, refPos0549);
    real _t0824 = _t0823[0];
    real _t0825 = time054B[0];
    vec3 _t0826 = prim *0036<$[3]> (_t0825, dPos054A);
    vec3 _t0827 = prim +0017<$[3]> (_t0826, refPos0549);
    real _t0828 = _t0827[1];
    real _t0829 = time054B[0];
    vec3 _t082A = prim *0036<$[3]> (_t0829, dPos054A);
    vec3 _t082B = prim +0017<$[3]> (_t082A, refPos0549);
    real _t082C = _t082B[2];
    real _t082D = 0.1e1;
    vec4 _t082E = [_t0824, _t0828, _t082C, _t082D];
    vec4 _t082F = prim •00CE<$[4,4]; $[4]; $[4]> (_t0820, _t082E);
    real _t0830 = _t082F[0];
    real _t0831 = 0.1e1;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    real _t0834 = 0.e0;
    vec4 _t0835 = [_t0831, _t0832, _t0833, _t0834];
    real _t0836 = 0.e0;
    real _t0837 = 0.1e1;
    real _t0838 = 0.e0;
    real _t0839 = 0.e0;
    vec4 _t083A = [_t0836, _t0837, _t0838, _t0839];
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    real _t083D = 0.1e1;
    real _t083E = 0.e0;
    vec4 _t083F = [_t083B, _t083C, _t083D, _t083E];
    real _t0840 = 0.971445146547e-16;
    real _t0841 = 0.e0;
    real _t0842 = 0.e0;
    real _t0843 = 0.1e1;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    tensor[4,4] _t0845 = [_t0835, _t083A, _t083F, _t0844];
    real _t0846 = 0.57735026919e0;
    real _t0847 = 0.57735026919e0;
    real _t0848 = 0.57735026919e0;
    real _t0849 = -0.57735026919e0;
    vec4 _t084A = [_t0846, _t0847, _t0848, _t0849];
    real _t084B = -0.333333333333e0;
    real _t084C = 0.666666666667e0;
    real _t084D = -0.333333333333e0;
    real _t084E = 0.333333333333e0;
    vec4 _t084F = [_t084B, _t084C, _t084D, _t084E];
    real _t0850 = -0.333333333333e0;
    real _t0851 = -0.333333333333e0;
    real _t0852 = 0.666666666667e0;
    real _t0853 = 0.333333333333e0;
    vec4 _t0854 = [_t0850, _t0851, _t0852, _t0853];
    real _t0855 = 0.971445146547e-16;
    real _t0856 = 0.e0;
    real _t0857 = 0.e0;
    real _t0858 = 0.1e1;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    tensor[4,4] _t085A = [_t084A, _t084F, _t0854, _t0859];
    real _t085B = -0.333333333333e0;
    real _t085C = 0.666666666667e0;
    real _t085D = -0.333333333333e0;
    real _t085E = 0.333333333333e0;
    vec4 _t085F = [_t085B, _t085C, _t085D, _t085E];
    real _t0860 = -0.57735026919e0;
    real _t0861 = -0.57735026919e0;
    real _t0862 = -0.57735026919e0;
    real _t0863 = 0.57735026919e0;
    vec4 _t0864 = [_t0860, _t0861, _t0862, _t0863];
    real _t0865 = -0.333333333333e0;
    real _t0866 = -0.333333333333e0;
    real _t0867 = 0.666666666667e0;
    real _t0868 = 0.333333333333e0;
    vec4 _t0869 = [_t0865, _t0866, _t0867, _t0868];
    real _t086A = 0.971445146547e-16;
    real _t086B = 0.e0;
    real _t086C = 0.e0;
    real _t086D = 0.1e1;
    vec4 _t086E = [_t086A, _t086B, _t086C, _t086D];
    tensor[4,4] _t086F = [_t085F, _t0864, _t0869, _t086E];
    real _t0870 = -0.333333333333e0;
    real _t0871 = 0.666666666667e0;
    real _t0872 = -0.333333333333e0;
    real _t0873 = 0.333333333333e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = -0.333333333333e0;
    real _t0876 = -0.333333333333e0;
    real _t0877 = 0.666666666667e0;
    real _t0878 = 0.333333333333e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.57735026919e0;
    real _t087B = 0.57735026919e0;
    real _t087C = 0.57735026919e0;
    real _t087D = -0.57735026919e0;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    real _t087F = 0.971445146547e-16;
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.1e1;
    vec4 _t0883 = [_t087F, _t0880, _t0881, _t0882];
    tensor[4,4] _t0884 = [_t0874, _t0879, _t087E, _t0883];
    tensor[4,4][4] _t0885 = {_t0845, _t085A, _t086F, _t0884};
    real _t0886 = 0.57735026919e0;
    real _t0887 = -0.1e1;
    real _t0888 = -0.1e1;
    real _t0889 = 0.1e1;
    vec4 _t088A = [_t0886, _t0887, _t0888, _t0889];
    real _t088B = 0.57735026919e0;
    real _t088C = 0.1e1;
    real _t088D = 0.e0;
    real _t088E = 0.e0;
    vec4 _t088F = [_t088B, _t088C, _t088D, _t088E];
    real _t0890 = 0.57735026919e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    real _t0893 = 0.e0;
    vec4 _t0894 = [_t0890, _t0891, _t0892, _t0893];
    real _t0895 = 0.e0;
    real _t0896 = 0.e0;
    real _t0897 = 0.e0;
    real _t0898 = 0.1e1;
    vec4 _t0899 = [_t0895, _t0896, _t0897, _t0898];
    tensor[4,4] _t089A = [_t088A, _t088F, _t0894, _t0899];
    real _t089B = 0.1e1;
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    real _t089E = 0.e0;
    vec4 _t089F = [_t089B, _t089C, _t089D, _t089E];
    real _t08A0 = 0.e0;
    real _t08A1 = 0.1e1;
    real _t08A2 = 0.e0;
    real _t08A3 = 0.e0;
    vec4 _t08A4 = [_t08A0, _t08A1, _t08A2, _t08A3];
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.1e1;
    real _t08A8 = 0.e0;
    vec4 _t08A9 = [_t08A5, _t08A6, _t08A7, _t08A8];
    real _t08AA = 0.e0;
    real _t08AB = 0.e0;
    real _t08AC = 0.e0;
    real _t08AD = 0.1e1;
    vec4 _t08AE = [_t08AA, _t08AB, _t08AC, _t08AD];
    tensor[4,4] _t08AF = [_t089F, _t08A4, _t08A9, _t08AE];
    real _t08B0 = 0.e0;
    real _t08B1 = 0.1e1;
    real _t08B2 = 0.e0;
    real _t08B3 = 0.e0;
    vec4 _t08B4 = [_t08B0, _t08B1, _t08B2, _t08B3];
    real _t08B5 = -0.1e1;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    real _t08B8 = 0.e0;
    vec4 _t08B9 = [_t08B5, _t08B6, _t08B7, _t08B8];
    real _t08BA = 0.e0;
    real _t08BB = 0.e0;
    real _t08BC = 0.1e1;
    real _t08BD = 0.e0;
    vec4 _t08BE = [_t08BA, _t08BB, _t08BC, _t08BD];
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.e0;
    real _t08C2 = 0.1e1;
    vec4 _t08C3 = [_t08BF, _t08C0, _t08C1, _t08C2];
    tensor[4,4] _t08C4 = [_t08B4, _t08B9, _t08BE, _t08C3];
    real _t08C5 = 0.e0;
    real _t08C6 = 0.1e1;
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    vec4 _t08C9 = [_t08C5, _t08C6, _t08C7, _t08C8];
    real _t08CA = 0.e0;
    real _t08CB = 0.e0;
    real _t08CC = 0.1e1;
    real _t08CD = 0.e0;
    vec4 _t08CE = [_t08CA, _t08CB, _t08CC, _t08CD];
    real _t08CF = 0.1e1;
    real _t08D0 = 0.e0;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.e0;
    vec4 _t08D3 = [_t08CF, _t08D0, _t08D1, _t08D2];
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.e0;
    real _t08D7 = 0.1e1;
    vec4 _t08D8 = [_t08D4, _t08D5, _t08D6, _t08D7];
    tensor[4,4] _t08D9 = [_t08C9, _t08CE, _t08D3, _t08D8];
    tensor[4,4][4] _t08DA = {_t089A, _t08AF, _t08C4, _t08D9};
    real _t08DB = -0.1e1;
    real _t08DC = -0.57735026919e0;
    real _t08DD = -0.1e1;
    real _t08DE = 0.1e1;
    vec4 _t08DF = [_t08DB, _t08DC, _t08DD, _t08DE];
    real _t08E0 = 0.1e1;
    real _t08E1 = -0.57735026919e0;
    real _t08E2 = 0.e0;
    real _t08E3 = 0.e0;
    vec4 _t08E4 = [_t08E0, _t08E1, _t08E2, _t08E3];
    real _t08E5 = 0.e0;
    real _t08E6 = -0.57735026919e0;
    real _t08E7 = 0.1e1;
    real _t08E8 = 0.e0;
    vec4 _t08E9 = [_t08E5, _t08E6, _t08E7, _t08E8];
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    real _t08EC = 0.e0;
    real _t08ED = 0.1e1;
    vec4 _t08EE = [_t08EA, _t08EB, _t08EC, _t08ED];
    tensor[4,4] _t08EF = [_t08DF, _t08E4, _t08E9, _t08EE];
    real _t08F0 = 0.e0;
    real _t08F1 = -0.1e1;
    real _t08F2 = 0.e0;
    real _t08F3 = 0.e0;
    vec4 _t08F4 = [_t08F0, _t08F1, _t08F2, _t08F3];
    real _t08F5 = 0.1e1;
    real _t08F6 = 0.e0;
    real _t08F7 = 0.e0;
    real _t08F8 = 0.e0;
    vec4 _t08F9 = [_t08F5, _t08F6, _t08F7, _t08F8];
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    real _t08FC = 0.1e1;
    real _t08FD = 0.e0;
    vec4 _t08FE = [_t08FA, _t08FB, _t08FC, _t08FD];
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    real _t0901 = 0.e0;
    real _t0902 = 0.1e1;
    vec4 _t0903 = [_t08FF, _t0900, _t0901, _t0902];
    tensor[4,4] _t0904 = [_t08F4, _t08F9, _t08FE, _t0903];
    real _t0905 = 0.1e1;
    real _t0906 = 0.e0;
    real _t0907 = 0.e0;
    real _t0908 = 0.e0;
    vec4 _t0909 = [_t0905, _t0906, _t0907, _t0908];
    real _t090A = 0.e0;
    real _t090B = 0.1e1;
    real _t090C = 0.e0;
    real _t090D = 0.e0;
    vec4 _t090E = [_t090A, _t090B, _t090C, _t090D];
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    real _t0911 = 0.1e1;
    real _t0912 = 0.e0;
    vec4 _t0913 = [_t090F, _t0910, _t0911, _t0912];
    real _t0914 = 0.e0;
    real _t0915 = 0.e0;
    real _t0916 = 0.e0;
    real _t0917 = 0.1e1;
    vec4 _t0918 = [_t0914, _t0915, _t0916, _t0917];
    tensor[4,4] _t0919 = [_t0909, _t090E, _t0913, _t0918];
    real _t091A = 0.1e1;
    real _t091B = 0.e0;
    real _t091C = 0.e0;
    real _t091D = 0.e0;
    vec4 _t091E = [_t091A, _t091B, _t091C, _t091D];
    real _t091F = 0.e0;
    real _t0920 = 0.e0;
    real _t0921 = 0.1e1;
    real _t0922 = 0.e0;
    vec4 _t0923 = [_t091F, _t0920, _t0921, _t0922];
    real _t0924 = 0.e0;
    real _t0925 = -0.1e1;
    real _t0926 = 0.e0;
    real _t0927 = 0.e0;
    vec4 _t0928 = [_t0924, _t0925, _t0926, _t0927];
    real _t0929 = 0.e0;
    real _t092A = 0.e0;
    real _t092B = 0.e0;
    real _t092C = 0.1e1;
    vec4 _t092D = [_t0929, _t092A, _t092B, _t092C];
    tensor[4,4] _t092E = [_t091E, _t0923, _t0928, _t092D];
    tensor[4,4][4] _t092F = {_t08EF, _t0904, _t0919, _t092E};
    real _t0930 = -0.1e1;
    real _t0931 = -0.1e1;
    real _t0932 = 0.57735026919e0;
    real _t0933 = 0.1e1;
    vec4 _t0934 = [_t0930, _t0931, _t0932, _t0933];
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    real _t0937 = 0.57735026919e0;
    real _t0938 = 0.e0;
    vec4 _t0939 = [_t0935, _t0936, _t0937, _t0938];
    real _t093A = 0.e0;
    real _t093B = 0.1e1;
    real _t093C = 0.57735026919e0;
    real _t093D = 0.e0;
    vec4 _t093E = [_t093A, _t093B, _t093C, _t093D];
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    real _t0941 = 0.e0;
    real _t0942 = 0.1e1;
    vec4 _t0943 = [_t093F, _t0940, _t0941, _t0942];
    tensor[4,4] _t0944 = [_t0934, _t0939, _t093E, _t0943];
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    real _t0947 = 0.1e1;
    real _t0948 = 0.e0;
    vec4 _t0949 = [_t0945, _t0946, _t0947, _t0948];
    real _t094A = 0.1e1;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    real _t094D = 0.e0;
    vec4 _t094E = [_t094A, _t094B, _t094C, _t094D];
    real _t094F = 0.e0;
    real _t0950 = 0.1e1;
    real _t0951 = 0.e0;
    real _t0952 = 0.e0;
    vec4 _t0953 = [_t094F, _t0950, _t0951, _t0952];
    real _t0954 = 0.e0;
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    real _t0957 = 0.1e1;
    vec4 _t0958 = [_t0954, _t0955, _t0956, _t0957];
    tensor[4,4] _t0959 = [_t0949, _t094E, _t0953, _t0958];
    real _t095A = 0.1e1;
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    real _t095D = 0.e0;
    vec4 _t095E = [_t095A, _t095B, _t095C, _t095D];
    real _t095F = 0.e0;
    real _t0960 = 0.e0;
    real _t0961 = -0.1e1;
    real _t0962 = 0.e0;
    vec4 _t0963 = [_t095F, _t0960, _t0961, _t0962];
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    real _t0966 = 0.e0;
    real _t0967 = 0.e0;
    vec4 _t0968 = [_t0964, _t0965, _t0966, _t0967];
    real _t0969 = 0.e0;
    real _t096A = 0.e0;
    real _t096B = 0.e0;
    real _t096C = 0.1e1;
    vec4 _t096D = [_t0969, _t096A, _t096B, _t096C];
    tensor[4,4] _t096E = [_t095E, _t0963, _t0968, _t096D];
    real _t096F = 0.1e1;
    real _t0970 = 0.e0;
    real _t0971 = 0.e0;
    real _t0972 = 0.e0;
    vec4 _t0973 = [_t096F, _t0970, _t0971, _t0972];
    real _t0974 = 0.e0;
    real _t0975 = 0.1e1;
    real _t0976 = 0.e0;
    real _t0977 = 0.e0;
    vec4 _t0978 = [_t0974, _t0975, _t0976, _t0977];
    real _t0979 = 0.e0;
    real _t097A = 0.e0;
    real _t097B = 0.1e1;
    real _t097C = 0.e0;
    vec4 _t097D = [_t0979, _t097A, _t097B, _t097C];
    real _t097E = 0.e0;
    real _t097F = 0.e0;
    real _t0980 = 0.e0;
    real _t0981 = 0.1e1;
    vec4 _t0982 = [_t097E, _t097F, _t0980, _t0981];
    tensor[4,4] _t0983 = [_t0973, _t0978, _t097D, _t0982];
    tensor[4,4][4] _t0984 = {_t0944, _t0959, _t096E, _t0983};
    tensor[4,4][4][4] _t0985 = {_t0885, _t08DA, _t092F, _t0984};
    real _t0986 = time054B[1];
    int _t0987 = prim $r2i01B7 (_t0986);
    tensor[4,4][4] _t0988 = prim $sub01C0<tensor[4,4][4]; %4> (_t0985, _t0987);
    real _t0989 = time054B[1];
    int _t098A = prim $r2i01B7 (_t0989);
    int[2] _t098B = func nextCell4054F (_t098A, cellId0548, mesh0547);
    int _t098C = 1;
    int _t098D = prim $sub01C0<int; %2> (_t098B, _t098C);
    tensor[4,4] _t098E = prim $sub01C0<tensor[4,4]; %4> (_t0988, _t098D);
    real _t098F = time054B[0];
    vec3 _t0990 = prim *0036<$[3]> (_t098F, dPos054A);
    vec3 _t0991 = prim +0017<$[3]> (_t0990, refPos0549);
    real _t0992 = _t0991[0];
    real _t0993 = time054B[0];
    vec3 _t0994 = prim *0036<$[3]> (_t0993, dPos054A);
    vec3 _t0995 = prim +0017<$[3]> (_t0994, refPos0549);
    real _t0996 = _t0995[1];
    real _t0997 = time054B[0];
    vec3 _t0998 = prim *0036<$[3]> (_t0997, dPos054A);
    vec3 _t0999 = prim +0017<$[3]> (_t0998, refPos0549);
    real _t099A = _t0999[2];
    real _t099B = 0.1e1;
    vec4 _t099C = [_t0992, _t0996, _t099A, _t099B];
    vec4 _t099D = prim •00CE<$[4,4]; $[4]; $[4]> (_t098E, _t099C);
    real _t099E = _t099D[1];
    real _t099F = 0.1e1;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    real _t09A2 = 0.e0;
    vec4 _t09A3 = [_t099F, _t09A0, _t09A1, _t09A2];
    real _t09A4 = 0.e0;
    real _t09A5 = 0.1e1;
    real _t09A6 = 0.e0;
    real _t09A7 = 0.e0;
    vec4 _t09A8 = [_t09A4, _t09A5, _t09A6, _t09A7];
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    real _t09AB = 0.1e1;
    real _t09AC = 0.e0;
    vec4 _t09AD = [_t09A9, _t09AA, _t09AB, _t09AC];
    real _t09AE = 0.971445146547e-16;
    real _t09AF = 0.e0;
    real _t09B0 = 0.e0;
    real _t09B1 = 0.1e1;
    vec4 _t09B2 = [_t09AE, _t09AF, _t09B0, _t09B1];
    tensor[4,4] _t09B3 = [_t09A3, _t09A8, _t09AD, _t09B2];
    real _t09B4 = 0.57735026919e0;
    real _t09B5 = 0.57735026919e0;
    real _t09B6 = 0.57735026919e0;
    real _t09B7 = -0.57735026919e0;
    vec4 _t09B8 = [_t09B4, _t09B5, _t09B6, _t09B7];
    real _t09B9 = -0.333333333333e0;
    real _t09BA = 0.666666666667e0;
    real _t09BB = -0.333333333333e0;
    real _t09BC = 0.333333333333e0;
    vec4 _t09BD = [_t09B9, _t09BA, _t09BB, _t09BC];
    real _t09BE = -0.333333333333e0;
    real _t09BF = -0.333333333333e0;
    real _t09C0 = 0.666666666667e0;
    real _t09C1 = 0.333333333333e0;
    vec4 _t09C2 = [_t09BE, _t09BF, _t09C0, _t09C1];
    real _t09C3 = 0.971445146547e-16;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.e0;
    real _t09C6 = 0.1e1;
    vec4 _t09C7 = [_t09C3, _t09C4, _t09C5, _t09C6];
    tensor[4,4] _t09C8 = [_t09B8, _t09BD, _t09C2, _t09C7];
    real _t09C9 = -0.333333333333e0;
    real _t09CA = 0.666666666667e0;
    real _t09CB = -0.333333333333e0;
    real _t09CC = 0.333333333333e0;
    vec4 _t09CD = [_t09C9, _t09CA, _t09CB, _t09CC];
    real _t09CE = -0.57735026919e0;
    real _t09CF = -0.57735026919e0;
    real _t09D0 = -0.57735026919e0;
    real _t09D1 = 0.57735026919e0;
    vec4 _t09D2 = [_t09CE, _t09CF, _t09D0, _t09D1];
    real _t09D3 = -0.333333333333e0;
    real _t09D4 = -0.333333333333e0;
    real _t09D5 = 0.666666666667e0;
    real _t09D6 = 0.333333333333e0;
    vec4 _t09D7 = [_t09D3, _t09D4, _t09D5, _t09D6];
    real _t09D8 = 0.971445146547e-16;
    real _t09D9 = 0.e0;
    real _t09DA = 0.e0;
    real _t09DB = 0.1e1;
    vec4 _t09DC = [_t09D8, _t09D9, _t09DA, _t09DB];
    tensor[4,4] _t09DD = [_t09CD, _t09D2, _t09D7, _t09DC];
    real _t09DE = -0.333333333333e0;
    real _t09DF = 0.666666666667e0;
    real _t09E0 = -0.333333333333e0;
    real _t09E1 = 0.333333333333e0;
    vec4 _t09E2 = [_t09DE, _t09DF, _t09E0, _t09E1];
    real _t09E3 = -0.333333333333e0;
    real _t09E4 = -0.333333333333e0;
    real _t09E5 = 0.666666666667e0;
    real _t09E6 = 0.333333333333e0;
    vec4 _t09E7 = [_t09E3, _t09E4, _t09E5, _t09E6];
    real _t09E8 = 0.57735026919e0;
    real _t09E9 = 0.57735026919e0;
    real _t09EA = 0.57735026919e0;
    real _t09EB = -0.57735026919e0;
    vec4 _t09EC = [_t09E8, _t09E9, _t09EA, _t09EB];
    real _t09ED = 0.971445146547e-16;
    real _t09EE = 0.e0;
    real _t09EF = 0.e0;
    real _t09F0 = 0.1e1;
    vec4 _t09F1 = [_t09ED, _t09EE, _t09EF, _t09F0];
    tensor[4,4] _t09F2 = [_t09E2, _t09E7, _t09EC, _t09F1];
    tensor[4,4][4] _t09F3 = {_t09B3, _t09C8, _t09DD, _t09F2};
    real _t09F4 = 0.57735026919e0;
    real _t09F5 = -0.1e1;
    real _t09F6 = -0.1e1;
    real _t09F7 = 0.1e1;
    vec4 _t09F8 = [_t09F4, _t09F5, _t09F6, _t09F7];
    real _t09F9 = 0.57735026919e0;
    real _t09FA = 0.1e1;
    real _t09FB = 0.e0;
    real _t09FC = 0.e0;
    vec4 _t09FD = [_t09F9, _t09FA, _t09FB, _t09FC];
    real _t09FE = 0.57735026919e0;
    real _t09FF = 0.e0;
    real _t0A00 = 0.1e1;
    real _t0A01 = 0.e0;
    vec4 _t0A02 = [_t09FE, _t09FF, _t0A00, _t0A01];
    real _t0A03 = 0.e0;
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    real _t0A06 = 0.1e1;
    vec4 _t0A07 = [_t0A03, _t0A04, _t0A05, _t0A06];
    tensor[4,4] _t0A08 = [_t09F8, _t09FD, _t0A02, _t0A07];
    real _t0A09 = 0.1e1;
    real _t0A0A = 0.e0;
    real _t0A0B = 0.e0;
    real _t0A0C = 0.e0;
    vec4 _t0A0D = [_t0A09, _t0A0A, _t0A0B, _t0A0C];
    real _t0A0E = 0.e0;
    real _t0A0F = 0.1e1;
    real _t0A10 = 0.e0;
    real _t0A11 = 0.e0;
    vec4 _t0A12 = [_t0A0E, _t0A0F, _t0A10, _t0A11];
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    real _t0A15 = 0.1e1;
    real _t0A16 = 0.e0;
    vec4 _t0A17 = [_t0A13, _t0A14, _t0A15, _t0A16];
    real _t0A18 = 0.e0;
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    real _t0A1B = 0.1e1;
    vec4 _t0A1C = [_t0A18, _t0A19, _t0A1A, _t0A1B];
    tensor[4,4] _t0A1D = [_t0A0D, _t0A12, _t0A17, _t0A1C];
    real _t0A1E = 0.e0;
    real _t0A1F = 0.1e1;
    real _t0A20 = 0.e0;
    real _t0A21 = 0.e0;
    vec4 _t0A22 = [_t0A1E, _t0A1F, _t0A20, _t0A21];
    real _t0A23 = -0.1e1;
    real _t0A24 = 0.e0;
    real _t0A25 = 0.e0;
    real _t0A26 = 0.e0;
    vec4 _t0A27 = [_t0A23, _t0A24, _t0A25, _t0A26];
    real _t0A28 = 0.e0;
    real _t0A29 = 0.e0;
    real _t0A2A = 0.1e1;
    real _t0A2B = 0.e0;
    vec4 _t0A2C = [_t0A28, _t0A29, _t0A2A, _t0A2B];
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    real _t0A2F = 0.e0;
    real _t0A30 = 0.1e1;
    vec4 _t0A31 = [_t0A2D, _t0A2E, _t0A2F, _t0A30];
    tensor[4,4] _t0A32 = [_t0A22, _t0A27, _t0A2C, _t0A31];
    real _t0A33 = 0.e0;
    real _t0A34 = 0.1e1;
    real _t0A35 = 0.e0;
    real _t0A36 = 0.e0;
    vec4 _t0A37 = [_t0A33, _t0A34, _t0A35, _t0A36];
    real _t0A38 = 0.e0;
    real _t0A39 = 0.e0;
    real _t0A3A = 0.1e1;
    real _t0A3B = 0.e0;
    vec4 _t0A3C = [_t0A38, _t0A39, _t0A3A, _t0A3B];
    real _t0A3D = 0.1e1;
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    real _t0A40 = 0.e0;
    vec4 _t0A41 = [_t0A3D, _t0A3E, _t0A3F, _t0A40];
    real _t0A42 = 0.e0;
    real _t0A43 = 0.e0;
    real _t0A44 = 0.e0;
    real _t0A45 = 0.1e1;
    vec4 _t0A46 = [_t0A42, _t0A43, _t0A44, _t0A45];
    tensor[4,4] _t0A47 = [_t0A37, _t0A3C, _t0A41, _t0A46];
    tensor[4,4][4] _t0A48 = {_t0A08, _t0A1D, _t0A32, _t0A47};
    real _t0A49 = -0.1e1;
    real _t0A4A = -0.57735026919e0;
    real _t0A4B = -0.1e1;
    real _t0A4C = 0.1e1;
    vec4 _t0A4D = [_t0A49, _t0A4A, _t0A4B, _t0A4C];
    real _t0A4E = 0.1e1;
    real _t0A4F = -0.57735026919e0;
    real _t0A50 = 0.e0;
    real _t0A51 = 0.e0;
    vec4 _t0A52 = [_t0A4E, _t0A4F, _t0A50, _t0A51];
    real _t0A53 = 0.e0;
    real _t0A54 = -0.57735026919e0;
    real _t0A55 = 0.1e1;
    real _t0A56 = 0.e0;
    vec4 _t0A57 = [_t0A53, _t0A54, _t0A55, _t0A56];
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    real _t0A5A = 0.e0;
    real _t0A5B = 0.1e1;
    vec4 _t0A5C = [_t0A58, _t0A59, _t0A5A, _t0A5B];
    tensor[4,4] _t0A5D = [_t0A4D, _t0A52, _t0A57, _t0A5C];
    real _t0A5E = 0.e0;
    real _t0A5F = -0.1e1;
    real _t0A60 = 0.e0;
    real _t0A61 = 0.e0;
    vec4 _t0A62 = [_t0A5E, _t0A5F, _t0A60, _t0A61];
    real _t0A63 = 0.1e1;
    real _t0A64 = 0.e0;
    real _t0A65 = 0.e0;
    real _t0A66 = 0.e0;
    vec4 _t0A67 = [_t0A63, _t0A64, _t0A65, _t0A66];
    real _t0A68 = 0.e0;
    real _t0A69 = 0.e0;
    real _t0A6A = 0.1e1;
    real _t0A6B = 0.e0;
    vec4 _t0A6C = [_t0A68, _t0A69, _t0A6A, _t0A6B];
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    real _t0A6F = 0.e0;
    real _t0A70 = 0.1e1;
    vec4 _t0A71 = [_t0A6D, _t0A6E, _t0A6F, _t0A70];
    tensor[4,4] _t0A72 = [_t0A62, _t0A67, _t0A6C, _t0A71];
    real _t0A73 = 0.1e1;
    real _t0A74 = 0.e0;
    real _t0A75 = 0.e0;
    real _t0A76 = 0.e0;
    vec4 _t0A77 = [_t0A73, _t0A74, _t0A75, _t0A76];
    real _t0A78 = 0.e0;
    real _t0A79 = 0.1e1;
    real _t0A7A = 0.e0;
    real _t0A7B = 0.e0;
    vec4 _t0A7C = [_t0A78, _t0A79, _t0A7A, _t0A7B];
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    real _t0A7F = 0.1e1;
    real _t0A80 = 0.e0;
    vec4 _t0A81 = [_t0A7D, _t0A7E, _t0A7F, _t0A80];
    real _t0A82 = 0.e0;
    real _t0A83 = 0.e0;
    real _t0A84 = 0.e0;
    real _t0A85 = 0.1e1;
    vec4 _t0A86 = [_t0A82, _t0A83, _t0A84, _t0A85];
    tensor[4,4] _t0A87 = [_t0A77, _t0A7C, _t0A81, _t0A86];
    real _t0A88 = 0.1e1;
    real _t0A89 = 0.e0;
    real _t0A8A = 0.e0;
    real _t0A8B = 0.e0;
    vec4 _t0A8C = [_t0A88, _t0A89, _t0A8A, _t0A8B];
    real _t0A8D = 0.e0;
    real _t0A8E = 0.e0;
    real _t0A8F = 0.1e1;
    real _t0A90 = 0.e0;
    vec4 _t0A91 = [_t0A8D, _t0A8E, _t0A8F, _t0A90];
    real _t0A92 = 0.e0;
    real _t0A93 = -0.1e1;
    real _t0A94 = 0.e0;
    real _t0A95 = 0.e0;
    vec4 _t0A96 = [_t0A92, _t0A93, _t0A94, _t0A95];
    real _t0A97 = 0.e0;
    real _t0A98 = 0.e0;
    real _t0A99 = 0.e0;
    real _t0A9A = 0.1e1;
    vec4 _t0A9B = [_t0A97, _t0A98, _t0A99, _t0A9A];
    tensor[4,4] _t0A9C = [_t0A8C, _t0A91, _t0A96, _t0A9B];
    tensor[4,4][4] _t0A9D = {_t0A5D, _t0A72, _t0A87, _t0A9C};
    real _t0A9E = -0.1e1;
    real _t0A9F = -0.1e1;
    real _t0AA0 = 0.57735026919e0;
    real _t0AA1 = 0.1e1;
    vec4 _t0AA2 = [_t0A9E, _t0A9F, _t0AA0, _t0AA1];
    real _t0AA3 = 0.1e1;
    real _t0AA4 = 0.e0;
    real _t0AA5 = 0.57735026919e0;
    real _t0AA6 = 0.e0;
    vec4 _t0AA7 = [_t0AA3, _t0AA4, _t0AA5, _t0AA6];
    real _t0AA8 = 0.e0;
    real _t0AA9 = 0.1e1;
    real _t0AAA = 0.57735026919e0;
    real _t0AAB = 0.e0;
    vec4 _t0AAC = [_t0AA8, _t0AA9, _t0AAA, _t0AAB];
    real _t0AAD = 0.e0;
    real _t0AAE = 0.e0;
    real _t0AAF = 0.e0;
    real _t0AB0 = 0.1e1;
    vec4 _t0AB1 = [_t0AAD, _t0AAE, _t0AAF, _t0AB0];
    tensor[4,4] _t0AB2 = [_t0AA2, _t0AA7, _t0AAC, _t0AB1];
    real _t0AB3 = 0.e0;
    real _t0AB4 = 0.e0;
    real _t0AB5 = 0.1e1;
    real _t0AB6 = 0.e0;
    vec4 _t0AB7 = [_t0AB3, _t0AB4, _t0AB5, _t0AB6];
    real _t0AB8 = 0.1e1;
    real _t0AB9 = 0.e0;
    real _t0ABA = 0.e0;
    real _t0ABB = 0.e0;
    vec4 _t0ABC = [_t0AB8, _t0AB9, _t0ABA, _t0ABB];
    real _t0ABD = 0.e0;
    real _t0ABE = 0.1e1;
    real _t0ABF = 0.e0;
    real _t0AC0 = 0.e0;
    vec4 _t0AC1 = [_t0ABD, _t0ABE, _t0ABF, _t0AC0];
    real _t0AC2 = 0.e0;
    real _t0AC3 = 0.e0;
    real _t0AC4 = 0.e0;
    real _t0AC5 = 0.1e1;
    vec4 _t0AC6 = [_t0AC2, _t0AC3, _t0AC4, _t0AC5];
    tensor[4,4] _t0AC7 = [_t0AB7, _t0ABC, _t0AC1, _t0AC6];
    real _t0AC8 = 0.1e1;
    real _t0AC9 = 0.e0;
    real _t0ACA = 0.e0;
    real _t0ACB = 0.e0;
    vec4 _t0ACC = [_t0AC8, _t0AC9, _t0ACA, _t0ACB];
    real _t0ACD = 0.e0;
    real _t0ACE = 0.e0;
    real _t0ACF = -0.1e1;
    real _t0AD0 = 0.e0;
    vec4 _t0AD1 = [_t0ACD, _t0ACE, _t0ACF, _t0AD0];
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.1e1;
    real _t0AD4 = 0.e0;
    real _t0AD5 = 0.e0;
    vec4 _t0AD6 = [_t0AD2, _t0AD3, _t0AD4, _t0AD5];
    real _t0AD7 = 0.e0;
    real _t0AD8 = 0.e0;
    real _t0AD9 = 0.e0;
    real _t0ADA = 0.1e1;
    vec4 _t0ADB = [_t0AD7, _t0AD8, _t0AD9, _t0ADA];
    tensor[4,4] _t0ADC = [_t0ACC, _t0AD1, _t0AD6, _t0ADB];
    real _t0ADD = 0.1e1;
    real _t0ADE = 0.e0;
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.e0;
    vec4 _t0AE1 = [_t0ADD, _t0ADE, _t0ADF, _t0AE0];
    real _t0AE2 = 0.e0;
    real _t0AE3 = 0.1e1;
    real _t0AE4 = 0.e0;
    real _t0AE5 = 0.e0;
    vec4 _t0AE6 = [_t0AE2, _t0AE3, _t0AE4, _t0AE5];
    real _t0AE7 = 0.e0;
    real _t0AE8 = 0.e0;
    real _t0AE9 = 0.1e1;
    real _t0AEA = 0.e0;
    vec4 _t0AEB = [_t0AE7, _t0AE8, _t0AE9, _t0AEA];
    real _t0AEC = 0.e0;
    real _t0AED = 0.e0;
    real _t0AEE = 0.e0;
    real _t0AEF = 0.1e1;
    vec4 _t0AF0 = [_t0AEC, _t0AED, _t0AEE, _t0AEF];
    tensor[4,4] _t0AF1 = [_t0AE1, _t0AE6, _t0AEB, _t0AF0];
    tensor[4,4][4] _t0AF2 = {_t0AB2, _t0AC7, _t0ADC, _t0AF1};
    tensor[4,4][4][4] _t0AF3 = {_t09F3, _t0A48, _t0A9D, _t0AF2};
    real _t0AF4 = time054B[1];
    int _t0AF5 = prim $r2i01B7 (_t0AF4);
    tensor[4,4][4] _t0AF6 = prim $sub01C0<tensor[4,4][4]; %4> (_t0AF3, _t0AF5);
    real _t0AF7 = time054B[1];
    int _t0AF8 = prim $r2i01B7 (_t0AF7);
    int[2] _t0AF9 = func nextCell4054F (_t0AF8, cellId0548, mesh0547);
    int _t0AFA = 1;
    int _t0AFB = prim $sub01C0<int; %2> (_t0AF9, _t0AFA);
    tensor[4,4] _t0AFC = prim $sub01C0<tensor[4,4]; %4> (_t0AF6, _t0AFB);
    real _t0AFD = time054B[0];
    vec3 _t0AFE = prim *0036<$[3]> (_t0AFD, dPos054A);
    vec3 _t0AFF = prim +0017<$[3]> (_t0AFE, refPos0549);
    real _t0B00 = _t0AFF[0];
    real _t0B01 = time054B[0];
    vec3 _t0B02 = prim *0036<$[3]> (_t0B01, dPos054A);
    vec3 _t0B03 = prim +0017<$[3]> (_t0B02, refPos0549);
    real _t0B04 = _t0B03[1];
    real _t0B05 = time054B[0];
    vec3 _t0B06 = prim *0036<$[3]> (_t0B05, dPos054A);
    vec3 _t0B07 = prim +0017<$[3]> (_t0B06, refPos0549);
    real _t0B08 = _t0B07[2];
    real _t0B09 = 0.1e1;
    vec4 _t0B0A = [_t0B00, _t0B04, _t0B08, _t0B09];
    vec4 _t0B0B = prim •00CE<$[4,4]; $[4]; $[4]> (_t0AFC, _t0B0A);
    real _t0B0C = _t0B0B[2];
    vec3 _t0B0D = [_t0830, _t099E, _t0B0C];
    real _t0B0E = time054B[1];
    int _t0B0F = prim $r2i01B7 (_t0B0E);
    int[2] _t0B10 = func nextCell4054F (_t0B0F, cellId0548, mesh0547);
    int _t0B11 = 1;
    int _t0B12 = prim $sub01C0<int; %2> (_t0B10, _t0B11);
    Femdata: MeshPos _t0B13 = extractFemItemN((mesh0547, _t06C2, _t0B0D, _t0B12),RefBuild(Mesh),);
    return _t0B13;
  } else {
    real _t0B14 = time054B[0];
    vec3 _t0B15 = prim *0036<$[3]> (_t0B14, dPos054A);
    vec3 _t0B16 = prim +0017<$[3]> (_t0B15, refPos0549);
    Femdata: MeshPos _t0B17 = extractFemItemN((mesh0547, _t0B16),InvalidBuildBoundary(MeshPos),);
    return _t0B17;
  }
}
function int[2]#8 nextCell4054F (int faceIdx0B18, int cell0B19, Femdata: Mesh mesh0B1A)
{
  int _t0B1B = -1;
  bool _t0B1C = prim ==0082 (faceIdx0B18, _t0B1B);
  if _t0B1C {
    int _t0B1D = -1;
    int _t0B1E = -1;
    int[2] _t0B1F = {_t0B1D, _t0B1E};
    return _t0B1F;
  } else {
    int _t0B20 = 8;
    int _t0B21 = prim *0033 (cell0B19, _t0B20);
    int _t0B22 = 2;
    int _t0B23 = prim *0033 (faceIdx0B18, _t0B22);
    int _t0B24 = prim +0015 (_t0B21, _t0B23);
    int[2] _t0B25 = extractFemItemN((mesh0B1A, _t0B24),CellFaceCell(Mesh),);
    return _t0B25;
  }
}
function vec2#0 _enter0B26 (vec3 refPos0B27, vec3 dPos0B28)
{
  real time0B29 = +inf;
  int face0B2A = -1;
  real faceTime0B2B = -inf;
  string _t0B2C = "\ntest :";
  real _t0B2D = 0.57735026919e0;
  real _t0B2E = 0.57735026919e0;
  real _t0B2F = 0.57735026919e0;
  real _t0B30 = 0.57735026919e0;
  vec3 _t0B31 = [_t0B2E, _t0B2F, _t0B30];
  real _t0B32 = prim •00CE<$[3]; $[3]; $[]> (_t0B31, refPos0B27);
  real _t0B33 = prim -0026<$[]> (_t0B2D, _t0B32);
  real _t0B34 = 0.57735026919e0;
  real _t0B35 = 0.57735026919e0;
  real _t0B36 = 0.57735026919e0;
  vec3 _t0B37 = [_t0B34, _t0B35, _t0B36];
  real _t0B38 = prim •00CE<$[3]; $[3]; $[]> (_t0B37, dPos0B28);
  real _t0B39 = prim /0055 (_t0B33, _t0B38);
  string _t0B3A = " test2: ";
  real _t0B3B = 0.57735026919e0;
  real _t0B3C = 0.57735026919e0;
  real _t0B3D = 0.57735026919e0;
  vec3 _t0B3E = [_t0B3B, _t0B3C, _t0B3D];
  real _t0B3F = prim •00CE<$[3]; $[3]; $[]> (_t0B3E, dPos0B28);
  string _t0B40 = " insideTest: ";
  real _t0B41 = 0.1e1;
  real _t0B42 = 0.1e-7;
  real _t0B43 = prim +0017<$[]> (_t0B41, _t0B42);
  real _t0B44 = 0.1e1;
  real _t0B45 = 0.1e1;
  real _t0B46 = 0.1e1;
  vec3 _t0B47 = [_t0B44, _t0B45, _t0B46];
  real _t0B48 = 0.57735026919e0;
  real _t0B49 = 0.57735026919e0;
  real _t0B4A = 0.57735026919e0;
  real _t0B4B = 0.57735026919e0;
  vec3 _t0B4C = [_t0B49, _t0B4A, _t0B4B];
  real _t0B4D = prim •00CE<$[3]; $[3]; $[]> (_t0B4C, refPos0B27);
  real _t0B4E = prim -0026<$[]> (_t0B48, _t0B4D);
  real _t0B4F = 0.57735026919e0;
  real _t0B50 = 0.57735026919e0;
  real _t0B51 = 0.57735026919e0;
  vec3 _t0B52 = [_t0B4F, _t0B50, _t0B51];
  real _t0B53 = prim •00CE<$[3]; $[3]; $[]> (_t0B52, dPos0B28);
  real _t0B54 = prim /0055 (_t0B4E, _t0B53);
  vec3 _t0B55 = prim *0038<$[3]> (dPos0B28, _t0B54);
  vec3 _t0B56 = prim +0017<$[3]> (refPos0B27, _t0B55);
  real _t0B57 = prim •00CE<$[3]; $[3]; $[]> (_t0B47, _t0B56);
  bool _t0B58 = prim >0080 (_t0B43, _t0B57);
  real _t0B59 = 0.1e-7;
  real _t0B5A = 0.1e-7;
  real _t0B5B = 0.1e-7;
  vec3 _t0B5C = [_t0B59, _t0B5A, _t0B5B];
  real _t0B5D = 0.57735026919e0;
  real _t0B5E = 0.57735026919e0;
  real _t0B5F = 0.57735026919e0;
  real _t0B60 = 0.57735026919e0;
  vec3 _t0B61 = [_t0B5E, _t0B5F, _t0B60];
  real _t0B62 = prim •00CE<$[3]; $[3]; $[]> (_t0B61, refPos0B27);
  real _t0B63 = prim -0026<$[]> (_t0B5D, _t0B62);
  real _t0B64 = 0.57735026919e0;
  real _t0B65 = 0.57735026919e0;
  real _t0B66 = 0.57735026919e0;
  vec3 _t0B67 = [_t0B64, _t0B65, _t0B66];
  real _t0B68 = prim •00CE<$[3]; $[3]; $[]> (_t0B67, dPos0B28);
  real _t0B69 = prim /0055 (_t0B63, _t0B68);
  vec3 _t0B6A = prim *0038<$[3]> (dPos0B28, _t0B69);
  vec3 _t0B6B = prim +0017<$[3]> (refPos0B27, _t0B6A);
  vec3 _t0B6C = prim +0017<$[3]> (_t0B5C, _t0B6B);
  real _t0B6D = _t0B6C[0];
  real _t0B6E = -0.e0;
  bool _t0B6F = prim >0080 (_t0B6D, _t0B6E);
  real _t0B70 = 0.1e-7;
  real _t0B71 = 0.1e-7;
  real _t0B72 = 0.1e-7;
  vec3 _t0B73 = [_t0B70, _t0B71, _t0B72];
  real _t0B74 = 0.57735026919e0;
  real _t0B75 = 0.57735026919e0;
  real _t0B76 = 0.57735026919e0;
  real _t0B77 = 0.57735026919e0;
  vec3 _t0B78 = [_t0B75, _t0B76, _t0B77];
  real _t0B79 = prim •00CE<$[3]; $[3]; $[]> (_t0B78, refPos0B27);
  real _t0B7A = prim -0026<$[]> (_t0B74, _t0B79);
  real _t0B7B = 0.57735026919e0;
  real _t0B7C = 0.57735026919e0;
  real _t0B7D = 0.57735026919e0;
  vec3 _t0B7E = [_t0B7B, _t0B7C, _t0B7D];
  real _t0B7F = prim •00CE<$[3]; $[3]; $[]> (_t0B7E, dPos0B28);
  real _t0B80 = prim /0055 (_t0B7A, _t0B7F);
  vec3 _t0B81 = prim *0038<$[3]> (dPos0B28, _t0B80);
  vec3 _t0B82 = prim +0017<$[3]> (refPos0B27, _t0B81);
  vec3 _t0B83 = prim +0017<$[3]> (_t0B73, _t0B82);
  real _t0B84 = _t0B83[1];
  real _t0B85 = -0.e0;
  bool _t0B86 = prim >0080 (_t0B84, _t0B85);
  real _t0B87 = 0.1e-7;
  real _t0B88 = 0.1e-7;
  real _t0B89 = 0.1e-7;
  vec3 _t0B8A = [_t0B87, _t0B88, _t0B89];
  real _t0B8B = 0.57735026919e0;
  real _t0B8C = 0.57735026919e0;
  real _t0B8D = 0.57735026919e0;
  real _t0B8E = 0.57735026919e0;
  vec3 _t0B8F = [_t0B8C, _t0B8D, _t0B8E];
  real _t0B90 = prim •00CE<$[3]; $[3]; $[]> (_t0B8F, refPos0B27);
  real _t0B91 = prim -0026<$[]> (_t0B8B, _t0B90);
  real _t0B92 = 0.57735026919e0;
  real _t0B93 = 0.57735026919e0;
  real _t0B94 = 0.57735026919e0;
  vec3 _t0B95 = [_t0B92, _t0B93, _t0B94];
  real _t0B96 = prim •00CE<$[3]; $[3]; $[]> (_t0B95, dPos0B28);
  real _t0B97 = prim /0055 (_t0B91, _t0B96);
  vec3 _t0B98 = prim *0038<$[3]> (dPos0B28, _t0B97);
  vec3 _t0B99 = prim +0017<$[3]> (refPos0B27, _t0B98);
  vec3 _t0B9A = prim +0017<$[3]> (_t0B8A, _t0B99);
  real _t0B9B = _t0B9A[2];
  real _t0B9C = -0.e0;
  bool _t0B9D = prim >0080 (_t0B9B, _t0B9C);
  bool _t0B9E = prim $and01C4 (_t0B86, _t0B9D);
  bool _t0B9F = prim $and01C4 (_t0B6F, _t0B9E);
  bool _t0BA0 = prim $and01C4 (_t0B58, _t0B9F);
  string _t0BA1 = " dist: ";
  real _t0BA2 = 0.57735026919e0;
  real _t0BA3 = 0.57735026919e0;
  real _t0BA4 = 0.57735026919e0;
  real _t0BA5 = 0.57735026919e0;
  vec3 _t0BA6 = [_t0BA3, _t0BA4, _t0BA5];
  real _t0BA7 = prim •00CE<$[3]; $[3]; $[]> (_t0BA6, refPos0B27);
  real _t0BA8 = prim -0026<$[]> (_t0BA2, _t0BA7);
  real _t0BA9 = prim |()|00B5<$[]> (_t0BA8);
  string _t0BAA = "signed dist: ";
  real _t0BAB = 0.57735026919e0;
  real _t0BAC = 0.57735026919e0;
  real _t0BAD = 0.57735026919e0;
  real _t0BAE = 0.57735026919e0;
  vec3 _t0BAF = [_t0BAC, _t0BAD, _t0BAE];
  real _t0BB0 = prim •00CE<$[3]; $[3]; $[]> (_t0BAF, refPos0B27);
  real _t0BB1 = prim -0026<$[]> (_t0BAB, _t0BB0);
  string _t0BB2 = " face: ";
  int _t0BB3 = 0;
  string _t0BB4 = " place: ";
  real _t0BB5 = 0.57735026919e0;
  real _t0BB6 = 0.57735026919e0;
  real _t0BB7 = 0.57735026919e0;
  real _t0BB8 = 0.57735026919e0;
  vec3 _t0BB9 = [_t0BB6, _t0BB7, _t0BB8];
  real _t0BBA = prim •00CE<$[3]; $[3]; $[]> (_t0BB9, refPos0B27);
  real _t0BBB = prim -0026<$[]> (_t0BB5, _t0BBA);
  real _t0BBC = 0.57735026919e0;
  real _t0BBD = 0.57735026919e0;
  real _t0BBE = 0.57735026919e0;
  vec3 _t0BBF = [_t0BBC, _t0BBD, _t0BBE];
  real _t0BC0 = prim •00CE<$[3]; $[3]; $[]> (_t0BBF, dPos0B28);
  real _t0BC1 = prim /0055 (_t0BBB, _t0BC0);
  vec3 _t0BC2 = prim *0038<$[3]> (dPos0B28, _t0BC1);
  vec3 _t0BC3 = prim +0017<$[3]> (refPos0B27, _t0BC2);
  string _t0BC4 = " error: ";
  real _t0BC5 = 0.57735026919e0;
  real _t0BC6 = 0.57735026919e0;
  real _t0BC7 = 0.57735026919e0;
  real _t0BC8 = 0.57735026919e0;
  vec3 _t0BC9 = [_t0BC6, _t0BC7, _t0BC8];
  real _t0BCA = 0.57735026919e0;
  real _t0BCB = 0.57735026919e0;
  real _t0BCC = 0.57735026919e0;
  real _t0BCD = 0.57735026919e0;
  vec3 _t0BCE = [_t0BCB, _t0BCC, _t0BCD];
  real _t0BCF = prim •00CE<$[3]; $[3]; $[]> (_t0BCE, refPos0B27);
  real _t0BD0 = prim -0026<$[]> (_t0BCA, _t0BCF);
  real _t0BD1 = 0.57735026919e0;
  real _t0BD2 = 0.57735026919e0;
  real _t0BD3 = 0.57735026919e0;
  vec3 _t0BD4 = [_t0BD1, _t0BD2, _t0BD3];
  real _t0BD5 = prim •00CE<$[3]; $[3]; $[]> (_t0BD4, dPos0B28);
  real _t0BD6 = prim /0055 (_t0BD0, _t0BD5);
  vec3 _t0BD7 = prim *0038<$[3]> (dPos0B28, _t0BD6);
  vec3 _t0BD8 = prim +0017<$[3]> (refPos0B27, _t0BD7);
  real _t0BD9 = prim •00CE<$[3]; $[3]; $[]> (_t0BC9, _t0BD8);
  real _t0BDA = prim -0026<$[]> (_t0BC5, _t0BD9);
  real _t0BDB = prim |()|00B5<$[]> (_t0BDA);
  string _t0BDC = " offset :";
  string _t0BDD = " dp: ";
  string _t0BDE = " otherPossibleTime: ";
  string _t0BDF = "\n";
  print (_t0B2C, _t0B39, _t0B3A, _t0B3F, _t0B40, _t0BA0, _t0BA1, _t0BA9, _t0BAA, _t0BB1, _t0BB2, _t0BB3, _t0BB4, _t0BC3, _t0BC4, _t0BDB, _t0BDC, refPos0B27, _t0BDD, dPos0B28, _t0BDE, faceTime0B2B, _t0BDF);
  real _t0BE0 = 0.57735026919e0;
  real _t0BE1 = 0.57735026919e0;
  real _t0BE2 = 0.57735026919e0;
  real _t0BE3 = 0.57735026919e0;
  vec3 _t0BE4 = [_t0BE1, _t0BE2, _t0BE3];
  real _t0BE5 = prim •00CE<$[3]; $[3]; $[]> (_t0BE4, refPos0B27);
  real _t0BE6 = prim -0026<$[]> (_t0BE0, _t0BE5);
  real _t0BE7 = 0.57735026919e0;
  real _t0BE8 = 0.57735026919e0;
  real _t0BE9 = 0.57735026919e0;
  vec3 _t0BEA = [_t0BE7, _t0BE8, _t0BE9];
  real _t0BEB = prim •00CE<$[3]; $[3]; $[]> (_t0BEA, dPos0B28);
  real _t0BEC = prim /0055 (_t0BE6, _t0BEB);
  real _t0BED = -0.1e-7;
  bool _t0BEE = prim >=007E (_t0BEC, _t0BED);
  real _t0BEF = 0.57735026919e0;
  real _t0BF0 = 0.57735026919e0;
  real _t0BF1 = 0.57735026919e0;
  real _t0BF2 = 0.57735026919e0;
  vec3 _t0BF3 = [_t0BF0, _t0BF1, _t0BF2];
  real _t0BF4 = prim •00CE<$[3]; $[3]; $[]> (_t0BF3, refPos0B27);
  real _t0BF5 = prim -0026<$[]> (_t0BEF, _t0BF4);
  real _t0BF6 = 0.57735026919e0;
  real _t0BF7 = 0.57735026919e0;
  real _t0BF8 = 0.57735026919e0;
  vec3 _t0BF9 = [_t0BF6, _t0BF7, _t0BF8];
  real _t0BFA = prim •00CE<$[3]; $[3]; $[]> (_t0BF9, dPos0B28);
  real _t0BFB = prim /0055 (_t0BF5, _t0BFA);
  bool _t0BFC = prim >0080 (time0B29, _t0BFB);
  real _t0BFD = 0.57735026919e0;
  real _t0BFE = 0.57735026919e0;
  real _t0BFF = 0.57735026919e0;
  vec3 _t0C00 = [_t0BFD, _t0BFE, _t0BFF];
  real _t0C01 = prim •00CE<$[3]; $[3]; $[]> (_t0C00, dPos0B28);
  real _t0C02 = prim |()|00B5<$[]> (_t0C01);
  real _t0C03 = 0.1e-7;
  bool _t0C04 = prim >=007E (_t0C02, _t0C03);
  bool _t0C05 = prim $and01C4 (_t0BFC, _t0C04);
  bool _t0C06 = prim $and01C4 (_t0BEE, _t0C05);
  if _t0C06 {
    real _t0C07 = 0.1e1;
    real _t0C08 = 0.1e-7;
    real _t0C09 = prim +0017<$[]> (_t0C07, _t0C08);
    real _t0C0A = 0.1e1;
    real _t0C0B = 0.1e1;
    real _t0C0C = 0.1e1;
    vec3 _t0C0D = [_t0C0A, _t0C0B, _t0C0C];
    real _t0C0E = 0.57735026919e0;
    real _t0C0F = 0.57735026919e0;
    real _t0C10 = 0.57735026919e0;
    real _t0C11 = 0.57735026919e0;
    vec3 _t0C12 = [_t0C0F, _t0C10, _t0C11];
    real _t0C13 = prim •00CE<$[3]; $[3]; $[]> (_t0C12, refPos0B27);
    real _t0C14 = prim -0026<$[]> (_t0C0E, _t0C13);
    real _t0C15 = 0.57735026919e0;
    real _t0C16 = 0.57735026919e0;
    real _t0C17 = 0.57735026919e0;
    vec3 _t0C18 = [_t0C15, _t0C16, _t0C17];
    real _t0C19 = prim •00CE<$[3]; $[3]; $[]> (_t0C18, dPos0B28);
    real _t0C1A = prim /0055 (_t0C14, _t0C19);
    vec3 _t0C1B = prim *0038<$[3]> (dPos0B28, _t0C1A);
    vec3 _t0C1C = prim +0017<$[3]> (refPos0B27, _t0C1B);
    real _t0C1D = prim •00CE<$[3]; $[3]; $[]> (_t0C0D, _t0C1C);
    bool _t0C1E = prim >0080 (_t0C09, _t0C1D);
    real _t0C1F = 0.1e-7;
    real _t0C20 = 0.1e-7;
    real _t0C21 = 0.1e-7;
    vec3 _t0C22 = [_t0C1F, _t0C20, _t0C21];
    real _t0C23 = 0.57735026919e0;
    real _t0C24 = 0.57735026919e0;
    real _t0C25 = 0.57735026919e0;
    real _t0C26 = 0.57735026919e0;
    vec3 _t0C27 = [_t0C24, _t0C25, _t0C26];
    real _t0C28 = prim •00CE<$[3]; $[3]; $[]> (_t0C27, refPos0B27);
    real _t0C29 = prim -0026<$[]> (_t0C23, _t0C28);
    real _t0C2A = 0.57735026919e0;
    real _t0C2B = 0.57735026919e0;
    real _t0C2C = 0.57735026919e0;
    vec3 _t0C2D = [_t0C2A, _t0C2B, _t0C2C];
    real _t0C2E = prim •00CE<$[3]; $[3]; $[]> (_t0C2D, dPos0B28);
    real _t0C2F = prim /0055 (_t0C29, _t0C2E);
    vec3 _t0C30 = prim *0038<$[3]> (dPos0B28, _t0C2F);
    vec3 _t0C31 = prim +0017<$[3]> (refPos0B27, _t0C30);
    vec3 _t0C32 = prim +0017<$[3]> (_t0C22, _t0C31);
    real _t0C33 = _t0C32[0];
    real _t0C34 = -0.e0;
    bool _t0C35 = prim >0080 (_t0C33, _t0C34);
    real _t0C36 = 0.1e-7;
    real _t0C37 = 0.1e-7;
    real _t0C38 = 0.1e-7;
    vec3 _t0C39 = [_t0C36, _t0C37, _t0C38];
    real _t0C3A = 0.57735026919e0;
    real _t0C3B = 0.57735026919e0;
    real _t0C3C = 0.57735026919e0;
    real _t0C3D = 0.57735026919e0;
    vec3 _t0C3E = [_t0C3B, _t0C3C, _t0C3D];
    real _t0C3F = prim •00CE<$[3]; $[3]; $[]> (_t0C3E, refPos0B27);
    real _t0C40 = prim -0026<$[]> (_t0C3A, _t0C3F);
    real _t0C41 = 0.57735026919e0;
    real _t0C42 = 0.57735026919e0;
    real _t0C43 = 0.57735026919e0;
    vec3 _t0C44 = [_t0C41, _t0C42, _t0C43];
    real _t0C45 = prim •00CE<$[3]; $[3]; $[]> (_t0C44, dPos0B28);
    real _t0C46 = prim /0055 (_t0C40, _t0C45);
    vec3 _t0C47 = prim *0038<$[3]> (dPos0B28, _t0C46);
    vec3 _t0C48 = prim +0017<$[3]> (refPos0B27, _t0C47);
    vec3 _t0C49 = prim +0017<$[3]> (_t0C39, _t0C48);
    real _t0C4A = _t0C49[1];
    real _t0C4B = -0.e0;
    bool _t0C4C = prim >0080 (_t0C4A, _t0C4B);
    real _t0C4D = 0.1e-7;
    real _t0C4E = 0.1e-7;
    real _t0C4F = 0.1e-7;
    vec3 _t0C50 = [_t0C4D, _t0C4E, _t0C4F];
    real _t0C51 = 0.57735026919e0;
    real _t0C52 = 0.57735026919e0;
    real _t0C53 = 0.57735026919e0;
    real _t0C54 = 0.57735026919e0;
    vec3 _t0C55 = [_t0C52, _t0C53, _t0C54];
    real _t0C56 = prim •00CE<$[3]; $[3]; $[]> (_t0C55, refPos0B27);
    real _t0C57 = prim -0026<$[]> (_t0C51, _t0C56);
    real _t0C58 = 0.57735026919e0;
    real _t0C59 = 0.57735026919e0;
    real _t0C5A = 0.57735026919e0;
    vec3 _t0C5B = [_t0C58, _t0C59, _t0C5A];
    real _t0C5C = prim •00CE<$[3]; $[3]; $[]> (_t0C5B, dPos0B28);
    real _t0C5D = prim /0055 (_t0C57, _t0C5C);
    vec3 _t0C5E = prim *0038<$[3]> (dPos0B28, _t0C5D);
    vec3 _t0C5F = prim +0017<$[3]> (refPos0B27, _t0C5E);
    vec3 _t0C60 = prim +0017<$[3]> (_t0C50, _t0C5F);
    real _t0C61 = _t0C60[2];
    real _t0C62 = -0.e0;
    bool _t0C63 = prim >0080 (_t0C61, _t0C62);
    bool _t0C64 = prim $and01C4 (_t0C4C, _t0C63);
    bool _t0C65 = prim $and01C4 (_t0C35, _t0C64);
    bool _t0C66 = prim $and01C4 (_t0C1E, _t0C65);
    if _t0C66 {
      string _t0C67 = "Saving at this face!";
      real _t0C68 = 0.57735026919e0;
      real _t0C69 = 0.57735026919e0;
      real _t0C6A = 0.57735026919e0;
      real _t0C6B = 0.57735026919e0;
      vec3 _t0C6C = [_t0C69, _t0C6A, _t0C6B];
      real _t0C6D = prim •00CE<$[3]; $[3]; $[]> (_t0C6C, refPos0B27);
      real _t0C6E = prim -0026<$[]> (_t0C68, _t0C6D);
      real _t0C6F = 0.57735026919e0;
      real _t0C70 = 0.57735026919e0;
      real _t0C71 = 0.57735026919e0;
      vec3 _t0C72 = [_t0C6F, _t0C70, _t0C71];
      real _t0C73 = prim •00CE<$[3]; $[3]; $[]> (_t0C72, dPos0B28);
      real _t0C74 = prim /0055 (_t0C6E, _t0C73);
      real _t0C75 = 0.57735026919e0;
      real _t0C76 = 0.57735026919e0;
      real _t0C77 = 0.57735026919e0;
      real _t0C78 = 0.57735026919e0;
      vec3 _t0C79 = [_t0C76, _t0C77, _t0C78];
      real _t0C7A = prim •00CE<$[3]; $[3]; $[]> (_t0C79, refPos0B27);
      real _t0C7B = prim -0026<$[]> (_t0C75, _t0C7A);
      real _t0C7C = 0.57735026919e0;
      real _t0C7D = 0.57735026919e0;
      real _t0C7E = 0.57735026919e0;
      vec3 _t0C7F = [_t0C7C, _t0C7D, _t0C7E];
      real _t0C80 = prim •00CE<$[3]; $[3]; $[]> (_t0C7F, dPos0B28);
      real _t0C81 = prim /0055 (_t0C7B, _t0C80);
      bool _t0C82 = prim >0080 (time0B29, _t0C81);
      string _t0C83 = "\n";
      print (_t0C67, _t0C74, _t0C82, _t0C83);
      real _t0C84 = 0.57735026919e0;
      real _t0C85 = 0.57735026919e0;
      real _t0C86 = 0.57735026919e0;
      real _t0C87 = 0.57735026919e0;
      vec3 _t0C88 = [_t0C85, _t0C86, _t0C87];
      real _t0C89 = prim •00CE<$[3]; $[3]; $[]> (_t0C88, refPos0B27);
      real _t0C8A = prim -0026<$[]> (_t0C84, _t0C89);
      real _t0C8B = 0.57735026919e0;
      real _t0C8C = 0.57735026919e0;
      real _t0C8D = 0.57735026919e0;
      vec3 _t0C8E = [_t0C8B, _t0C8C, _t0C8D];
      real _t0C8F = prim •00CE<$[3]; $[3]; $[]> (_t0C8E, dPos0B28);
      time0B29 = prim /0055 (_t0C8A, _t0C8F);
      face0B2A = 0;
    }
  }
  string _t0C90 = "\ntest :";
  real _t0C91 = 0.e0;
  real _t0C92 = -0.1e1;
  real _t0C93 = 0.e0;
  real _t0C94 = 0.e0;
  vec3 _t0C95 = [_t0C92, _t0C93, _t0C94];
  real _t0C96 = prim •00CE<$[3]; $[3]; $[]> (_t0C95, refPos0B27);
  real _t0C97 = prim -0026<$[]> (_t0C91, _t0C96);
  real _t0C98 = -0.1e1;
  real _t0C99 = 0.e0;
  real _t0C9A = 0.e0;
  vec3 _t0C9B = [_t0C98, _t0C99, _t0C9A];
  real _t0C9C = prim •00CE<$[3]; $[3]; $[]> (_t0C9B, dPos0B28);
  real _t0C9D = prim /0055 (_t0C97, _t0C9C);
  string _t0C9E = " test2: ";
  real _t0C9F = -0.1e1;
  real _t0CA0 = 0.e0;
  real _t0CA1 = 0.e0;
  vec3 _t0CA2 = [_t0C9F, _t0CA0, _t0CA1];
  real _t0CA3 = prim •00CE<$[3]; $[3]; $[]> (_t0CA2, dPos0B28);
  string _t0CA4 = " insideTest: ";
  real _t0CA5 = 0.1e1;
  real _t0CA6 = 0.1e-7;
  real _t0CA7 = prim +0017<$[]> (_t0CA5, _t0CA6);
  real _t0CA8 = 0.1e1;
  real _t0CA9 = 0.1e1;
  real _t0CAA = 0.1e1;
  vec3 _t0CAB = [_t0CA8, _t0CA9, _t0CAA];
  real _t0CAC = 0.e0;
  real _t0CAD = -0.1e1;
  real _t0CAE = 0.e0;
  real _t0CAF = 0.e0;
  vec3 _t0CB0 = [_t0CAD, _t0CAE, _t0CAF];
  real _t0CB1 = prim •00CE<$[3]; $[3]; $[]> (_t0CB0, refPos0B27);
  real _t0CB2 = prim -0026<$[]> (_t0CAC, _t0CB1);
  real _t0CB3 = -0.1e1;
  real _t0CB4 = 0.e0;
  real _t0CB5 = 0.e0;
  vec3 _t0CB6 = [_t0CB3, _t0CB4, _t0CB5];
  real _t0CB7 = prim •00CE<$[3]; $[3]; $[]> (_t0CB6, dPos0B28);
  real _t0CB8 = prim /0055 (_t0CB2, _t0CB7);
  vec3 _t0CB9 = prim *0038<$[3]> (dPos0B28, _t0CB8);
  vec3 _t0CBA = prim +0017<$[3]> (refPos0B27, _t0CB9);
  real _t0CBB = prim •00CE<$[3]; $[3]; $[]> (_t0CAB, _t0CBA);
  bool _t0CBC = prim >0080 (_t0CA7, _t0CBB);
  real _t0CBD = 0.1e-7;
  real _t0CBE = 0.1e-7;
  real _t0CBF = 0.1e-7;
  vec3 _t0CC0 = [_t0CBD, _t0CBE, _t0CBF];
  real _t0CC1 = 0.e0;
  real _t0CC2 = -0.1e1;
  real _t0CC3 = 0.e0;
  real _t0CC4 = 0.e0;
  vec3 _t0CC5 = [_t0CC2, _t0CC3, _t0CC4];
  real _t0CC6 = prim •00CE<$[3]; $[3]; $[]> (_t0CC5, refPos0B27);
  real _t0CC7 = prim -0026<$[]> (_t0CC1, _t0CC6);
  real _t0CC8 = -0.1e1;
  real _t0CC9 = 0.e0;
  real _t0CCA = 0.e0;
  vec3 _t0CCB = [_t0CC8, _t0CC9, _t0CCA];
  real _t0CCC = prim •00CE<$[3]; $[3]; $[]> (_t0CCB, dPos0B28);
  real _t0CCD = prim /0055 (_t0CC7, _t0CCC);
  vec3 _t0CCE = prim *0038<$[3]> (dPos0B28, _t0CCD);
  vec3 _t0CCF = prim +0017<$[3]> (refPos0B27, _t0CCE);
  vec3 _t0CD0 = prim +0017<$[3]> (_t0CC0, _t0CCF);
  real _t0CD1 = _t0CD0[0];
  real _t0CD2 = -0.e0;
  bool _t0CD3 = prim >0080 (_t0CD1, _t0CD2);
  real _t0CD4 = 0.1e-7;
  real _t0CD5 = 0.1e-7;
  real _t0CD6 = 0.1e-7;
  vec3 _t0CD7 = [_t0CD4, _t0CD5, _t0CD6];
  real _t0CD8 = 0.e0;
  real _t0CD9 = -0.1e1;
  real _t0CDA = 0.e0;
  real _t0CDB = 0.e0;
  vec3 _t0CDC = [_t0CD9, _t0CDA, _t0CDB];
  real _t0CDD = prim •00CE<$[3]; $[3]; $[]> (_t0CDC, refPos0B27);
  real _t0CDE = prim -0026<$[]> (_t0CD8, _t0CDD);
  real _t0CDF = -0.1e1;
  real _t0CE0 = 0.e0;
  real _t0CE1 = 0.e0;
  vec3 _t0CE2 = [_t0CDF, _t0CE0, _t0CE1];
  real _t0CE3 = prim •00CE<$[3]; $[3]; $[]> (_t0CE2, dPos0B28);
  real _t0CE4 = prim /0055 (_t0CDE, _t0CE3);
  vec3 _t0CE5 = prim *0038<$[3]> (dPos0B28, _t0CE4);
  vec3 _t0CE6 = prim +0017<$[3]> (refPos0B27, _t0CE5);
  vec3 _t0CE7 = prim +0017<$[3]> (_t0CD7, _t0CE6);
  real _t0CE8 = _t0CE7[1];
  real _t0CE9 = -0.e0;
  bool _t0CEA = prim >0080 (_t0CE8, _t0CE9);
  real _t0CEB = 0.1e-7;
  real _t0CEC = 0.1e-7;
  real _t0CED = 0.1e-7;
  vec3 _t0CEE = [_t0CEB, _t0CEC, _t0CED];
  real _t0CEF = 0.e0;
  real _t0CF0 = -0.1e1;
  real _t0CF1 = 0.e0;
  real _t0CF2 = 0.e0;
  vec3 _t0CF3 = [_t0CF0, _t0CF1, _t0CF2];
  real _t0CF4 = prim •00CE<$[3]; $[3]; $[]> (_t0CF3, refPos0B27);
  real _t0CF5 = prim -0026<$[]> (_t0CEF, _t0CF4);
  real _t0CF6 = -0.1e1;
  real _t0CF7 = 0.e0;
  real _t0CF8 = 0.e0;
  vec3 _t0CF9 = [_t0CF6, _t0CF7, _t0CF8];
  real _t0CFA = prim •00CE<$[3]; $[3]; $[]> (_t0CF9, dPos0B28);
  real _t0CFB = prim /0055 (_t0CF5, _t0CFA);
  vec3 _t0CFC = prim *0038<$[3]> (dPos0B28, _t0CFB);
  vec3 _t0CFD = prim +0017<$[3]> (refPos0B27, _t0CFC);
  vec3 _t0CFE = prim +0017<$[3]> (_t0CEE, _t0CFD);
  real _t0CFF = _t0CFE[2];
  real _t0D00 = -0.e0;
  bool _t0D01 = prim >0080 (_t0CFF, _t0D00);
  bool _t0D02 = prim $and01C4 (_t0CEA, _t0D01);
  bool _t0D03 = prim $and01C4 (_t0CD3, _t0D02);
  bool _t0D04 = prim $and01C4 (_t0CBC, _t0D03);
  string _t0D05 = " dist: ";
  real _t0D06 = 0.e0;
  real _t0D07 = -0.1e1;
  real _t0D08 = 0.e0;
  real _t0D09 = 0.e0;
  vec3 _t0D0A = [_t0D07, _t0D08, _t0D09];
  real _t0D0B = prim •00CE<$[3]; $[3]; $[]> (_t0D0A, refPos0B27);
  real _t0D0C = prim -0026<$[]> (_t0D06, _t0D0B);
  real _t0D0D = prim |()|00B5<$[]> (_t0D0C);
  string _t0D0E = "signed dist: ";
  real _t0D0F = 0.e0;
  real _t0D10 = -0.1e1;
  real _t0D11 = 0.e0;
  real _t0D12 = 0.e0;
  vec3 _t0D13 = [_t0D10, _t0D11, _t0D12];
  real _t0D14 = prim •00CE<$[3]; $[3]; $[]> (_t0D13, refPos0B27);
  real _t0D15 = prim -0026<$[]> (_t0D0F, _t0D14);
  string _t0D16 = " face: ";
  int _t0D17 = 1;
  string _t0D18 = " place: ";
  real _t0D19 = 0.e0;
  real _t0D1A = -0.1e1;
  real _t0D1B = 0.e0;
  real _t0D1C = 0.e0;
  vec3 _t0D1D = [_t0D1A, _t0D1B, _t0D1C];
  real _t0D1E = prim •00CE<$[3]; $[3]; $[]> (_t0D1D, refPos0B27);
  real _t0D1F = prim -0026<$[]> (_t0D19, _t0D1E);
  real _t0D20 = -0.1e1;
  real _t0D21 = 0.e0;
  real _t0D22 = 0.e0;
  vec3 _t0D23 = [_t0D20, _t0D21, _t0D22];
  real _t0D24 = prim •00CE<$[3]; $[3]; $[]> (_t0D23, dPos0B28);
  real _t0D25 = prim /0055 (_t0D1F, _t0D24);
  vec3 _t0D26 = prim *0038<$[3]> (dPos0B28, _t0D25);
  vec3 _t0D27 = prim +0017<$[3]> (refPos0B27, _t0D26);
  string _t0D28 = " error: ";
  real _t0D29 = 0.e0;
  real _t0D2A = -0.1e1;
  real _t0D2B = 0.e0;
  real _t0D2C = 0.e0;
  vec3 _t0D2D = [_t0D2A, _t0D2B, _t0D2C];
  real _t0D2E = 0.e0;
  real _t0D2F = -0.1e1;
  real _t0D30 = 0.e0;
  real _t0D31 = 0.e0;
  vec3 _t0D32 = [_t0D2F, _t0D30, _t0D31];
  real _t0D33 = prim •00CE<$[3]; $[3]; $[]> (_t0D32, refPos0B27);
  real _t0D34 = prim -0026<$[]> (_t0D2E, _t0D33);
  real _t0D35 = -0.1e1;
  real _t0D36 = 0.e0;
  real _t0D37 = 0.e0;
  vec3 _t0D38 = [_t0D35, _t0D36, _t0D37];
  real _t0D39 = prim •00CE<$[3]; $[3]; $[]> (_t0D38, dPos0B28);
  real _t0D3A = prim /0055 (_t0D34, _t0D39);
  vec3 _t0D3B = prim *0038<$[3]> (dPos0B28, _t0D3A);
  vec3 _t0D3C = prim +0017<$[3]> (refPos0B27, _t0D3B);
  real _t0D3D = prim •00CE<$[3]; $[3]; $[]> (_t0D2D, _t0D3C);
  real _t0D3E = prim -0026<$[]> (_t0D29, _t0D3D);
  real _t0D3F = prim |()|00B5<$[]> (_t0D3E);
  string _t0D40 = " offset :";
  string _t0D41 = " dp: ";
  string _t0D42 = " otherPossibleTime: ";
  string _t0D43 = "\n";
  print (_t0C90, _t0C9D, _t0C9E, _t0CA3, _t0CA4, _t0D04, _t0D05, _t0D0D, _t0D0E, _t0D15, _t0D16, _t0D17, _t0D18, _t0D27, _t0D28, _t0D3F, _t0D40, refPos0B27, _t0D41, dPos0B28, _t0D42, faceTime0B2B, _t0D43);
  real _t0D44 = 0.e0;
  real _t0D45 = -0.1e1;
  real _t0D46 = 0.e0;
  real _t0D47 = 0.e0;
  vec3 _t0D48 = [_t0D45, _t0D46, _t0D47];
  real _t0D49 = prim •00CE<$[3]; $[3]; $[]> (_t0D48, refPos0B27);
  real _t0D4A = prim -0026<$[]> (_t0D44, _t0D49);
  real _t0D4B = -0.1e1;
  real _t0D4C = 0.e0;
  real _t0D4D = 0.e0;
  vec3 _t0D4E = [_t0D4B, _t0D4C, _t0D4D];
  real _t0D4F = prim •00CE<$[3]; $[3]; $[]> (_t0D4E, dPos0B28);
  real _t0D50 = prim /0055 (_t0D4A, _t0D4F);
  real _t0D51 = -0.1e-7;
  bool _t0D52 = prim >=007E (_t0D50, _t0D51);
  real _t0D53 = 0.e0;
  real _t0D54 = -0.1e1;
  real _t0D55 = 0.e0;
  real _t0D56 = 0.e0;
  vec3 _t0D57 = [_t0D54, _t0D55, _t0D56];
  real _t0D58 = prim •00CE<$[3]; $[3]; $[]> (_t0D57, refPos0B27);
  real _t0D59 = prim -0026<$[]> (_t0D53, _t0D58);
  real _t0D5A = -0.1e1;
  real _t0D5B = 0.e0;
  real _t0D5C = 0.e0;
  vec3 _t0D5D = [_t0D5A, _t0D5B, _t0D5C];
  real _t0D5E = prim •00CE<$[3]; $[3]; $[]> (_t0D5D, dPos0B28);
  real _t0D5F = prim /0055 (_t0D59, _t0D5E);
  bool _t0D60 = prim >0080 (time0B29, _t0D5F);
  real _t0D61 = -0.1e1;
  real _t0D62 = 0.e0;
  real _t0D63 = 0.e0;
  vec3 _t0D64 = [_t0D61, _t0D62, _t0D63];
  real _t0D65 = prim •00CE<$[3]; $[3]; $[]> (_t0D64, dPos0B28);
  real _t0D66 = prim |()|00B5<$[]> (_t0D65);
  real _t0D67 = 0.1e-7;
  bool _t0D68 = prim >=007E (_t0D66, _t0D67);
  bool _t0D69 = prim $and01C4 (_t0D60, _t0D68);
  bool _t0D6A = prim $and01C4 (_t0D52, _t0D69);
  if _t0D6A {
    real _t0D6B = 0.1e1;
    real _t0D6C = 0.1e-7;
    real _t0D6D = prim +0017<$[]> (_t0D6B, _t0D6C);
    real _t0D6E = 0.1e1;
    real _t0D6F = 0.1e1;
    real _t0D70 = 0.1e1;
    vec3 _t0D71 = [_t0D6E, _t0D6F, _t0D70];
    real _t0D72 = 0.e0;
    real _t0D73 = -0.1e1;
    real _t0D74 = 0.e0;
    real _t0D75 = 0.e0;
    vec3 _t0D76 = [_t0D73, _t0D74, _t0D75];
    real _t0D77 = prim •00CE<$[3]; $[3]; $[]> (_t0D76, refPos0B27);
    real _t0D78 = prim -0026<$[]> (_t0D72, _t0D77);
    real _t0D79 = -0.1e1;
    real _t0D7A = 0.e0;
    real _t0D7B = 0.e0;
    vec3 _t0D7C = [_t0D79, _t0D7A, _t0D7B];
    real _t0D7D = prim •00CE<$[3]; $[3]; $[]> (_t0D7C, dPos0B28);
    real _t0D7E = prim /0055 (_t0D78, _t0D7D);
    vec3 _t0D7F = prim *0038<$[3]> (dPos0B28, _t0D7E);
    vec3 _t0D80 = prim +0017<$[3]> (refPos0B27, _t0D7F);
    real _t0D81 = prim •00CE<$[3]; $[3]; $[]> (_t0D71, _t0D80);
    bool _t0D82 = prim >0080 (_t0D6D, _t0D81);
    real _t0D83 = 0.1e-7;
    real _t0D84 = 0.1e-7;
    real _t0D85 = 0.1e-7;
    vec3 _t0D86 = [_t0D83, _t0D84, _t0D85];
    real _t0D87 = 0.e0;
    real _t0D88 = -0.1e1;
    real _t0D89 = 0.e0;
    real _t0D8A = 0.e0;
    vec3 _t0D8B = [_t0D88, _t0D89, _t0D8A];
    real _t0D8C = prim •00CE<$[3]; $[3]; $[]> (_t0D8B, refPos0B27);
    real _t0D8D = prim -0026<$[]> (_t0D87, _t0D8C);
    real _t0D8E = -0.1e1;
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    vec3 _t0D91 = [_t0D8E, _t0D8F, _t0D90];
    real _t0D92 = prim •00CE<$[3]; $[3]; $[]> (_t0D91, dPos0B28);
    real _t0D93 = prim /0055 (_t0D8D, _t0D92);
    vec3 _t0D94 = prim *0038<$[3]> (dPos0B28, _t0D93);
    vec3 _t0D95 = prim +0017<$[3]> (refPos0B27, _t0D94);
    vec3 _t0D96 = prim +0017<$[3]> (_t0D86, _t0D95);
    real _t0D97 = _t0D96[0];
    real _t0D98 = -0.e0;
    bool _t0D99 = prim >0080 (_t0D97, _t0D98);
    real _t0D9A = 0.1e-7;
    real _t0D9B = 0.1e-7;
    real _t0D9C = 0.1e-7;
    vec3 _t0D9D = [_t0D9A, _t0D9B, _t0D9C];
    real _t0D9E = 0.e0;
    real _t0D9F = -0.1e1;
    real _t0DA0 = 0.e0;
    real _t0DA1 = 0.e0;
    vec3 _t0DA2 = [_t0D9F, _t0DA0, _t0DA1];
    real _t0DA3 = prim •00CE<$[3]; $[3]; $[]> (_t0DA2, refPos0B27);
    real _t0DA4 = prim -0026<$[]> (_t0D9E, _t0DA3);
    real _t0DA5 = -0.1e1;
    real _t0DA6 = 0.e0;
    real _t0DA7 = 0.e0;
    vec3 _t0DA8 = [_t0DA5, _t0DA6, _t0DA7];
    real _t0DA9 = prim •00CE<$[3]; $[3]; $[]> (_t0DA8, dPos0B28);
    real _t0DAA = prim /0055 (_t0DA4, _t0DA9);
    vec3 _t0DAB = prim *0038<$[3]> (dPos0B28, _t0DAA);
    vec3 _t0DAC = prim +0017<$[3]> (refPos0B27, _t0DAB);
    vec3 _t0DAD = prim +0017<$[3]> (_t0D9D, _t0DAC);
    real _t0DAE = _t0DAD[1];
    real _t0DAF = -0.e0;
    bool _t0DB0 = prim >0080 (_t0DAE, _t0DAF);
    real _t0DB1 = 0.1e-7;
    real _t0DB2 = 0.1e-7;
    real _t0DB3 = 0.1e-7;
    vec3 _t0DB4 = [_t0DB1, _t0DB2, _t0DB3];
    real _t0DB5 = 0.e0;
    real _t0DB6 = -0.1e1;
    real _t0DB7 = 0.e0;
    real _t0DB8 = 0.e0;
    vec3 _t0DB9 = [_t0DB6, _t0DB7, _t0DB8];
    real _t0DBA = prim •00CE<$[3]; $[3]; $[]> (_t0DB9, refPos0B27);
    real _t0DBB = prim -0026<$[]> (_t0DB5, _t0DBA);
    real _t0DBC = -0.1e1;
    real _t0DBD = 0.e0;
    real _t0DBE = 0.e0;
    vec3 _t0DBF = [_t0DBC, _t0DBD, _t0DBE];
    real _t0DC0 = prim •00CE<$[3]; $[3]; $[]> (_t0DBF, dPos0B28);
    real _t0DC1 = prim /0055 (_t0DBB, _t0DC0);
    vec3 _t0DC2 = prim *0038<$[3]> (dPos0B28, _t0DC1);
    vec3 _t0DC3 = prim +0017<$[3]> (refPos0B27, _t0DC2);
    vec3 _t0DC4 = prim +0017<$[3]> (_t0DB4, _t0DC3);
    real _t0DC5 = _t0DC4[2];
    real _t0DC6 = -0.e0;
    bool _t0DC7 = prim >0080 (_t0DC5, _t0DC6);
    bool _t0DC8 = prim $and01C4 (_t0DB0, _t0DC7);
    bool _t0DC9 = prim $and01C4 (_t0D99, _t0DC8);
    bool _t0DCA = prim $and01C4 (_t0D82, _t0DC9);
    if _t0DCA {
      string _t0DCB = "Saving at this face!";
      real _t0DCC = 0.e0;
      real _t0DCD = -0.1e1;
      real _t0DCE = 0.e0;
      real _t0DCF = 0.e0;
      vec3 _t0DD0 = [_t0DCD, _t0DCE, _t0DCF];
      real _t0DD1 = prim •00CE<$[3]; $[3]; $[]> (_t0DD0, refPos0B27);
      real _t0DD2 = prim -0026<$[]> (_t0DCC, _t0DD1);
      real _t0DD3 = -0.1e1;
      real _t0DD4 = 0.e0;
      real _t0DD5 = 0.e0;
      vec3 _t0DD6 = [_t0DD3, _t0DD4, _t0DD5];
      real _t0DD7 = prim •00CE<$[3]; $[3]; $[]> (_t0DD6, dPos0B28);
      real _t0DD8 = prim /0055 (_t0DD2, _t0DD7);
      real _t0DD9 = 0.e0;
      real _t0DDA = -0.1e1;
      real _t0DDB = 0.e0;
      real _t0DDC = 0.e0;
      vec3 _t0DDD = [_t0DDA, _t0DDB, _t0DDC];
      real _t0DDE = prim •00CE<$[3]; $[3]; $[]> (_t0DDD, refPos0B27);
      real _t0DDF = prim -0026<$[]> (_t0DD9, _t0DDE);
      real _t0DE0 = -0.1e1;
      real _t0DE1 = 0.e0;
      real _t0DE2 = 0.e0;
      vec3 _t0DE3 = [_t0DE0, _t0DE1, _t0DE2];
      real _t0DE4 = prim •00CE<$[3]; $[3]; $[]> (_t0DE3, dPos0B28);
      real _t0DE5 = prim /0055 (_t0DDF, _t0DE4);
      bool _t0DE6 = prim >0080 (time0B29, _t0DE5);
      string _t0DE7 = "\n";
      print (_t0DCB, _t0DD8, _t0DE6, _t0DE7);
      real _t0DE8 = 0.e0;
      real _t0DE9 = -0.1e1;
      real _t0DEA = 0.e0;
      real _t0DEB = 0.e0;
      vec3 _t0DEC = [_t0DE9, _t0DEA, _t0DEB];
      real _t0DED = prim •00CE<$[3]; $[3]; $[]> (_t0DEC, refPos0B27);
      real _t0DEE = prim -0026<$[]> (_t0DE8, _t0DED);
      real _t0DEF = -0.1e1;
      real _t0DF0 = 0.e0;
      real _t0DF1 = 0.e0;
      vec3 _t0DF2 = [_t0DEF, _t0DF0, _t0DF1];
      real _t0DF3 = prim •00CE<$[3]; $[3]; $[]> (_t0DF2, dPos0B28);
      time0B29 = prim /0055 (_t0DEE, _t0DF3);
      face0B2A = 1;
    }
  }
  string _t0DF4 = "\ntest :";
  real _t0DF5 = 0.e0;
  real _t0DF6 = 0.e0;
  real _t0DF7 = -0.1e1;
  real _t0DF8 = 0.e0;
  vec3 _t0DF9 = [_t0DF6, _t0DF7, _t0DF8];
  real _t0DFA = prim •00CE<$[3]; $[3]; $[]> (_t0DF9, refPos0B27);
  real _t0DFB = prim -0026<$[]> (_t0DF5, _t0DFA);
  real _t0DFC = 0.e0;
  real _t0DFD = -0.1e1;
  real _t0DFE = 0.e0;
  vec3 _t0DFF = [_t0DFC, _t0DFD, _t0DFE];
  real _t0E00 = prim •00CE<$[3]; $[3]; $[]> (_t0DFF, dPos0B28);
  real _t0E01 = prim /0055 (_t0DFB, _t0E00);
  string _t0E02 = " test2: ";
  real _t0E03 = 0.e0;
  real _t0E04 = -0.1e1;
  real _t0E05 = 0.e0;
  vec3 _t0E06 = [_t0E03, _t0E04, _t0E05];
  real _t0E07 = prim •00CE<$[3]; $[3]; $[]> (_t0E06, dPos0B28);
  string _t0E08 = " insideTest: ";
  real _t0E09 = 0.1e1;
  real _t0E0A = 0.1e-7;
  real _t0E0B = prim +0017<$[]> (_t0E09, _t0E0A);
  real _t0E0C = 0.1e1;
  real _t0E0D = 0.1e1;
  real _t0E0E = 0.1e1;
  vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
  real _t0E10 = 0.e0;
  real _t0E11 = 0.e0;
  real _t0E12 = -0.1e1;
  real _t0E13 = 0.e0;
  vec3 _t0E14 = [_t0E11, _t0E12, _t0E13];
  real _t0E15 = prim •00CE<$[3]; $[3]; $[]> (_t0E14, refPos0B27);
  real _t0E16 = prim -0026<$[]> (_t0E10, _t0E15);
  real _t0E17 = 0.e0;
  real _t0E18 = -0.1e1;
  real _t0E19 = 0.e0;
  vec3 _t0E1A = [_t0E17, _t0E18, _t0E19];
  real _t0E1B = prim •00CE<$[3]; $[3]; $[]> (_t0E1A, dPos0B28);
  real _t0E1C = prim /0055 (_t0E16, _t0E1B);
  vec3 _t0E1D = prim *0038<$[3]> (dPos0B28, _t0E1C);
  vec3 _t0E1E = prim +0017<$[3]> (refPos0B27, _t0E1D);
  real _t0E1F = prim •00CE<$[3]; $[3]; $[]> (_t0E0F, _t0E1E);
  bool _t0E20 = prim >0080 (_t0E0B, _t0E1F);
  real _t0E21 = 0.1e-7;
  real _t0E22 = 0.1e-7;
  real _t0E23 = 0.1e-7;
  vec3 _t0E24 = [_t0E21, _t0E22, _t0E23];
  real _t0E25 = 0.e0;
  real _t0E26 = 0.e0;
  real _t0E27 = -0.1e1;
  real _t0E28 = 0.e0;
  vec3 _t0E29 = [_t0E26, _t0E27, _t0E28];
  real _t0E2A = prim •00CE<$[3]; $[3]; $[]> (_t0E29, refPos0B27);
  real _t0E2B = prim -0026<$[]> (_t0E25, _t0E2A);
  real _t0E2C = 0.e0;
  real _t0E2D = -0.1e1;
  real _t0E2E = 0.e0;
  vec3 _t0E2F = [_t0E2C, _t0E2D, _t0E2E];
  real _t0E30 = prim •00CE<$[3]; $[3]; $[]> (_t0E2F, dPos0B28);
  real _t0E31 = prim /0055 (_t0E2B, _t0E30);
  vec3 _t0E32 = prim *0038<$[3]> (dPos0B28, _t0E31);
  vec3 _t0E33 = prim +0017<$[3]> (refPos0B27, _t0E32);
  vec3 _t0E34 = prim +0017<$[3]> (_t0E24, _t0E33);
  real _t0E35 = _t0E34[0];
  real _t0E36 = -0.e0;
  bool _t0E37 = prim >0080 (_t0E35, _t0E36);
  real _t0E38 = 0.1e-7;
  real _t0E39 = 0.1e-7;
  real _t0E3A = 0.1e-7;
  vec3 _t0E3B = [_t0E38, _t0E39, _t0E3A];
  real _t0E3C = 0.e0;
  real _t0E3D = 0.e0;
  real _t0E3E = -0.1e1;
  real _t0E3F = 0.e0;
  vec3 _t0E40 = [_t0E3D, _t0E3E, _t0E3F];
  real _t0E41 = prim •00CE<$[3]; $[3]; $[]> (_t0E40, refPos0B27);
  real _t0E42 = prim -0026<$[]> (_t0E3C, _t0E41);
  real _t0E43 = 0.e0;
  real _t0E44 = -0.1e1;
  real _t0E45 = 0.e0;
  vec3 _t0E46 = [_t0E43, _t0E44, _t0E45];
  real _t0E47 = prim •00CE<$[3]; $[3]; $[]> (_t0E46, dPos0B28);
  real _t0E48 = prim /0055 (_t0E42, _t0E47);
  vec3 _t0E49 = prim *0038<$[3]> (dPos0B28, _t0E48);
  vec3 _t0E4A = prim +0017<$[3]> (refPos0B27, _t0E49);
  vec3 _t0E4B = prim +0017<$[3]> (_t0E3B, _t0E4A);
  real _t0E4C = _t0E4B[1];
  real _t0E4D = -0.e0;
  bool _t0E4E = prim >0080 (_t0E4C, _t0E4D);
  real _t0E4F = 0.1e-7;
  real _t0E50 = 0.1e-7;
  real _t0E51 = 0.1e-7;
  vec3 _t0E52 = [_t0E4F, _t0E50, _t0E51];
  real _t0E53 = 0.e0;
  real _t0E54 = 0.e0;
  real _t0E55 = -0.1e1;
  real _t0E56 = 0.e0;
  vec3 _t0E57 = [_t0E54, _t0E55, _t0E56];
  real _t0E58 = prim •00CE<$[3]; $[3]; $[]> (_t0E57, refPos0B27);
  real _t0E59 = prim -0026<$[]> (_t0E53, _t0E58);
  real _t0E5A = 0.e0;
  real _t0E5B = -0.1e1;
  real _t0E5C = 0.e0;
  vec3 _t0E5D = [_t0E5A, _t0E5B, _t0E5C];
  real _t0E5E = prim •00CE<$[3]; $[3]; $[]> (_t0E5D, dPos0B28);
  real _t0E5F = prim /0055 (_t0E59, _t0E5E);
  vec3 _t0E60 = prim *0038<$[3]> (dPos0B28, _t0E5F);
  vec3 _t0E61 = prim +0017<$[3]> (refPos0B27, _t0E60);
  vec3 _t0E62 = prim +0017<$[3]> (_t0E52, _t0E61);
  real _t0E63 = _t0E62[2];
  real _t0E64 = -0.e0;
  bool _t0E65 = prim >0080 (_t0E63, _t0E64);
  bool _t0E66 = prim $and01C4 (_t0E4E, _t0E65);
  bool _t0E67 = prim $and01C4 (_t0E37, _t0E66);
  bool _t0E68 = prim $and01C4 (_t0E20, _t0E67);
  string _t0E69 = " dist: ";
  real _t0E6A = 0.e0;
  real _t0E6B = 0.e0;
  real _t0E6C = -0.1e1;
  real _t0E6D = 0.e0;
  vec3 _t0E6E = [_t0E6B, _t0E6C, _t0E6D];
  real _t0E6F = prim •00CE<$[3]; $[3]; $[]> (_t0E6E, refPos0B27);
  real _t0E70 = prim -0026<$[]> (_t0E6A, _t0E6F);
  real _t0E71 = prim |()|00B5<$[]> (_t0E70);
  string _t0E72 = "signed dist: ";
  real _t0E73 = 0.e0;
  real _t0E74 = 0.e0;
  real _t0E75 = -0.1e1;
  real _t0E76 = 0.e0;
  vec3 _t0E77 = [_t0E74, _t0E75, _t0E76];
  real _t0E78 = prim •00CE<$[3]; $[3]; $[]> (_t0E77, refPos0B27);
  real _t0E79 = prim -0026<$[]> (_t0E73, _t0E78);
  string _t0E7A = " face: ";
  int _t0E7B = 2;
  string _t0E7C = " place: ";
  real _t0E7D = 0.e0;
  real _t0E7E = 0.e0;
  real _t0E7F = -0.1e1;
  real _t0E80 = 0.e0;
  vec3 _t0E81 = [_t0E7E, _t0E7F, _t0E80];
  real _t0E82 = prim •00CE<$[3]; $[3]; $[]> (_t0E81, refPos0B27);
  real _t0E83 = prim -0026<$[]> (_t0E7D, _t0E82);
  real _t0E84 = 0.e0;
  real _t0E85 = -0.1e1;
  real _t0E86 = 0.e0;
  vec3 _t0E87 = [_t0E84, _t0E85, _t0E86];
  real _t0E88 = prim •00CE<$[3]; $[3]; $[]> (_t0E87, dPos0B28);
  real _t0E89 = prim /0055 (_t0E83, _t0E88);
  vec3 _t0E8A = prim *0038<$[3]> (dPos0B28, _t0E89);
  vec3 _t0E8B = prim +0017<$[3]> (refPos0B27, _t0E8A);
  string _t0E8C = " error: ";
  real _t0E8D = 0.e0;
  real _t0E8E = 0.e0;
  real _t0E8F = -0.1e1;
  real _t0E90 = 0.e0;
  vec3 _t0E91 = [_t0E8E, _t0E8F, _t0E90];
  real _t0E92 = 0.e0;
  real _t0E93 = 0.e0;
  real _t0E94 = -0.1e1;
  real _t0E95 = 0.e0;
  vec3 _t0E96 = [_t0E93, _t0E94, _t0E95];
  real _t0E97 = prim •00CE<$[3]; $[3]; $[]> (_t0E96, refPos0B27);
  real _t0E98 = prim -0026<$[]> (_t0E92, _t0E97);
  real _t0E99 = 0.e0;
  real _t0E9A = -0.1e1;
  real _t0E9B = 0.e0;
  vec3 _t0E9C = [_t0E99, _t0E9A, _t0E9B];
  real _t0E9D = prim •00CE<$[3]; $[3]; $[]> (_t0E9C, dPos0B28);
  real _t0E9E = prim /0055 (_t0E98, _t0E9D);
  vec3 _t0E9F = prim *0038<$[3]> (dPos0B28, _t0E9E);
  vec3 _t0EA0 = prim +0017<$[3]> (refPos0B27, _t0E9F);
  real _t0EA1 = prim •00CE<$[3]; $[3]; $[]> (_t0E91, _t0EA0);
  real _t0EA2 = prim -0026<$[]> (_t0E8D, _t0EA1);
  real _t0EA3 = prim |()|00B5<$[]> (_t0EA2);
  string _t0EA4 = " offset :";
  string _t0EA5 = " dp: ";
  string _t0EA6 = " otherPossibleTime: ";
  string _t0EA7 = "\n";
  print (_t0DF4, _t0E01, _t0E02, _t0E07, _t0E08, _t0E68, _t0E69, _t0E71, _t0E72, _t0E79, _t0E7A, _t0E7B, _t0E7C, _t0E8B, _t0E8C, _t0EA3, _t0EA4, refPos0B27, _t0EA5, dPos0B28, _t0EA6, faceTime0B2B, _t0EA7);
  real _t0EA8 = 0.e0;
  real _t0EA9 = 0.e0;
  real _t0EAA = -0.1e1;
  real _t0EAB = 0.e0;
  vec3 _t0EAC = [_t0EA9, _t0EAA, _t0EAB];
  real _t0EAD = prim •00CE<$[3]; $[3]; $[]> (_t0EAC, refPos0B27);
  real _t0EAE = prim -0026<$[]> (_t0EA8, _t0EAD);
  real _t0EAF = 0.e0;
  real _t0EB0 = -0.1e1;
  real _t0EB1 = 0.e0;
  vec3 _t0EB2 = [_t0EAF, _t0EB0, _t0EB1];
  real _t0EB3 = prim •00CE<$[3]; $[3]; $[]> (_t0EB2, dPos0B28);
  real _t0EB4 = prim /0055 (_t0EAE, _t0EB3);
  real _t0EB5 = -0.1e-7;
  bool _t0EB6 = prim >=007E (_t0EB4, _t0EB5);
  real _t0EB7 = 0.e0;
  real _t0EB8 = 0.e0;
  real _t0EB9 = -0.1e1;
  real _t0EBA = 0.e0;
  vec3 _t0EBB = [_t0EB8, _t0EB9, _t0EBA];
  real _t0EBC = prim •00CE<$[3]; $[3]; $[]> (_t0EBB, refPos0B27);
  real _t0EBD = prim -0026<$[]> (_t0EB7, _t0EBC);
  real _t0EBE = 0.e0;
  real _t0EBF = -0.1e1;
  real _t0EC0 = 0.e0;
  vec3 _t0EC1 = [_t0EBE, _t0EBF, _t0EC0];
  real _t0EC2 = prim •00CE<$[3]; $[3]; $[]> (_t0EC1, dPos0B28);
  real _t0EC3 = prim /0055 (_t0EBD, _t0EC2);
  bool _t0EC4 = prim >0080 (time0B29, _t0EC3);
  real _t0EC5 = 0.e0;
  real _t0EC6 = -0.1e1;
  real _t0EC7 = 0.e0;
  vec3 _t0EC8 = [_t0EC5, _t0EC6, _t0EC7];
  real _t0EC9 = prim •00CE<$[3]; $[3]; $[]> (_t0EC8, dPos0B28);
  real _t0ECA = prim |()|00B5<$[]> (_t0EC9);
  real _t0ECB = 0.1e-7;
  bool _t0ECC = prim >=007E (_t0ECA, _t0ECB);
  bool _t0ECD = prim $and01C4 (_t0EC4, _t0ECC);
  bool _t0ECE = prim $and01C4 (_t0EB6, _t0ECD);
  if _t0ECE {
    real _t0ECF = 0.1e1;
    real _t0ED0 = 0.1e-7;
    real _t0ED1 = prim +0017<$[]> (_t0ECF, _t0ED0);
    real _t0ED2 = 0.1e1;
    real _t0ED3 = 0.1e1;
    real _t0ED4 = 0.1e1;
    vec3 _t0ED5 = [_t0ED2, _t0ED3, _t0ED4];
    real _t0ED6 = 0.e0;
    real _t0ED7 = 0.e0;
    real _t0ED8 = -0.1e1;
    real _t0ED9 = 0.e0;
    vec3 _t0EDA = [_t0ED7, _t0ED8, _t0ED9];
    real _t0EDB = prim •00CE<$[3]; $[3]; $[]> (_t0EDA, refPos0B27);
    real _t0EDC = prim -0026<$[]> (_t0ED6, _t0EDB);
    real _t0EDD = 0.e0;
    real _t0EDE = -0.1e1;
    real _t0EDF = 0.e0;
    vec3 _t0EE0 = [_t0EDD, _t0EDE, _t0EDF];
    real _t0EE1 = prim •00CE<$[3]; $[3]; $[]> (_t0EE0, dPos0B28);
    real _t0EE2 = prim /0055 (_t0EDC, _t0EE1);
    vec3 _t0EE3 = prim *0038<$[3]> (dPos0B28, _t0EE2);
    vec3 _t0EE4 = prim +0017<$[3]> (refPos0B27, _t0EE3);
    real _t0EE5 = prim •00CE<$[3]; $[3]; $[]> (_t0ED5, _t0EE4);
    bool _t0EE6 = prim >0080 (_t0ED1, _t0EE5);
    real _t0EE7 = 0.1e-7;
    real _t0EE8 = 0.1e-7;
    real _t0EE9 = 0.1e-7;
    vec3 _t0EEA = [_t0EE7, _t0EE8, _t0EE9];
    real _t0EEB = 0.e0;
    real _t0EEC = 0.e0;
    real _t0EED = -0.1e1;
    real _t0EEE = 0.e0;
    vec3 _t0EEF = [_t0EEC, _t0EED, _t0EEE];
    real _t0EF0 = prim •00CE<$[3]; $[3]; $[]> (_t0EEF, refPos0B27);
    real _t0EF1 = prim -0026<$[]> (_t0EEB, _t0EF0);
    real _t0EF2 = 0.e0;
    real _t0EF3 = -0.1e1;
    real _t0EF4 = 0.e0;
    vec3 _t0EF5 = [_t0EF2, _t0EF3, _t0EF4];
    real _t0EF6 = prim •00CE<$[3]; $[3]; $[]> (_t0EF5, dPos0B28);
    real _t0EF7 = prim /0055 (_t0EF1, _t0EF6);
    vec3 _t0EF8 = prim *0038<$[3]> (dPos0B28, _t0EF7);
    vec3 _t0EF9 = prim +0017<$[3]> (refPos0B27, _t0EF8);
    vec3 _t0EFA = prim +0017<$[3]> (_t0EEA, _t0EF9);
    real _t0EFB = _t0EFA[0];
    real _t0EFC = -0.e0;
    bool _t0EFD = prim >0080 (_t0EFB, _t0EFC);
    real _t0EFE = 0.1e-7;
    real _t0EFF = 0.1e-7;
    real _t0F00 = 0.1e-7;
    vec3 _t0F01 = [_t0EFE, _t0EFF, _t0F00];
    real _t0F02 = 0.e0;
    real _t0F03 = 0.e0;
    real _t0F04 = -0.1e1;
    real _t0F05 = 0.e0;
    vec3 _t0F06 = [_t0F03, _t0F04, _t0F05];
    real _t0F07 = prim •00CE<$[3]; $[3]; $[]> (_t0F06, refPos0B27);
    real _t0F08 = prim -0026<$[]> (_t0F02, _t0F07);
    real _t0F09 = 0.e0;
    real _t0F0A = -0.1e1;
    real _t0F0B = 0.e0;
    vec3 _t0F0C = [_t0F09, _t0F0A, _t0F0B];
    real _t0F0D = prim •00CE<$[3]; $[3]; $[]> (_t0F0C, dPos0B28);
    real _t0F0E = prim /0055 (_t0F08, _t0F0D);
    vec3 _t0F0F = prim *0038<$[3]> (dPos0B28, _t0F0E);
    vec3 _t0F10 = prim +0017<$[3]> (refPos0B27, _t0F0F);
    vec3 _t0F11 = prim +0017<$[3]> (_t0F01, _t0F10);
    real _t0F12 = _t0F11[1];
    real _t0F13 = -0.e0;
    bool _t0F14 = prim >0080 (_t0F12, _t0F13);
    real _t0F15 = 0.1e-7;
    real _t0F16 = 0.1e-7;
    real _t0F17 = 0.1e-7;
    vec3 _t0F18 = [_t0F15, _t0F16, _t0F17];
    real _t0F19 = 0.e0;
    real _t0F1A = 0.e0;
    real _t0F1B = -0.1e1;
    real _t0F1C = 0.e0;
    vec3 _t0F1D = [_t0F1A, _t0F1B, _t0F1C];
    real _t0F1E = prim •00CE<$[3]; $[3]; $[]> (_t0F1D, refPos0B27);
    real _t0F1F = prim -0026<$[]> (_t0F19, _t0F1E);
    real _t0F20 = 0.e0;
    real _t0F21 = -0.1e1;
    real _t0F22 = 0.e0;
    vec3 _t0F23 = [_t0F20, _t0F21, _t0F22];
    real _t0F24 = prim •00CE<$[3]; $[3]; $[]> (_t0F23, dPos0B28);
    real _t0F25 = prim /0055 (_t0F1F, _t0F24);
    vec3 _t0F26 = prim *0038<$[3]> (dPos0B28, _t0F25);
    vec3 _t0F27 = prim +0017<$[3]> (refPos0B27, _t0F26);
    vec3 _t0F28 = prim +0017<$[3]> (_t0F18, _t0F27);
    real _t0F29 = _t0F28[2];
    real _t0F2A = -0.e0;
    bool _t0F2B = prim >0080 (_t0F29, _t0F2A);
    bool _t0F2C = prim $and01C4 (_t0F14, _t0F2B);
    bool _t0F2D = prim $and01C4 (_t0EFD, _t0F2C);
    bool _t0F2E = prim $and01C4 (_t0EE6, _t0F2D);
    if _t0F2E {
      string _t0F2F = "Saving at this face!";
      real _t0F30 = 0.e0;
      real _t0F31 = 0.e0;
      real _t0F32 = -0.1e1;
      real _t0F33 = 0.e0;
      vec3 _t0F34 = [_t0F31, _t0F32, _t0F33];
      real _t0F35 = prim •00CE<$[3]; $[3]; $[]> (_t0F34, refPos0B27);
      real _t0F36 = prim -0026<$[]> (_t0F30, _t0F35);
      real _t0F37 = 0.e0;
      real _t0F38 = -0.1e1;
      real _t0F39 = 0.e0;
      vec3 _t0F3A = [_t0F37, _t0F38, _t0F39];
      real _t0F3B = prim •00CE<$[3]; $[3]; $[]> (_t0F3A, dPos0B28);
      real _t0F3C = prim /0055 (_t0F36, _t0F3B);
      real _t0F3D = 0.e0;
      real _t0F3E = 0.e0;
      real _t0F3F = -0.1e1;
      real _t0F40 = 0.e0;
      vec3 _t0F41 = [_t0F3E, _t0F3F, _t0F40];
      real _t0F42 = prim •00CE<$[3]; $[3]; $[]> (_t0F41, refPos0B27);
      real _t0F43 = prim -0026<$[]> (_t0F3D, _t0F42);
      real _t0F44 = 0.e0;
      real _t0F45 = -0.1e1;
      real _t0F46 = 0.e0;
      vec3 _t0F47 = [_t0F44, _t0F45, _t0F46];
      real _t0F48 = prim •00CE<$[3]; $[3]; $[]> (_t0F47, dPos0B28);
      real _t0F49 = prim /0055 (_t0F43, _t0F48);
      bool _t0F4A = prim >0080 (time0B29, _t0F49);
      string _t0F4B = "\n";
      print (_t0F2F, _t0F3C, _t0F4A, _t0F4B);
      real _t0F4C = 0.e0;
      real _t0F4D = 0.e0;
      real _t0F4E = -0.1e1;
      real _t0F4F = 0.e0;
      vec3 _t0F50 = [_t0F4D, _t0F4E, _t0F4F];
      real _t0F51 = prim •00CE<$[3]; $[3]; $[]> (_t0F50, refPos0B27);
      real _t0F52 = prim -0026<$[]> (_t0F4C, _t0F51);
      real _t0F53 = 0.e0;
      real _t0F54 = -0.1e1;
      real _t0F55 = 0.e0;
      vec3 _t0F56 = [_t0F53, _t0F54, _t0F55];
      real _t0F57 = prim •00CE<$[3]; $[3]; $[]> (_t0F56, dPos0B28);
      time0B29 = prim /0055 (_t0F52, _t0F57);
      face0B2A = 2;
    }
  }
  string _t0F58 = "\ntest :";
  real _t0F59 = 0.e0;
  real _t0F5A = 0.e0;
  real _t0F5B = 0.e0;
  real _t0F5C = -0.1e1;
  vec3 _t0F5D = [_t0F5A, _t0F5B, _t0F5C];
  real _t0F5E = prim •00CE<$[3]; $[3]; $[]> (_t0F5D, refPos0B27);
  real _t0F5F = prim -0026<$[]> (_t0F59, _t0F5E);
  real _t0F60 = 0.e0;
  real _t0F61 = 0.e0;
  real _t0F62 = -0.1e1;
  vec3 _t0F63 = [_t0F60, _t0F61, _t0F62];
  real _t0F64 = prim •00CE<$[3]; $[3]; $[]> (_t0F63, dPos0B28);
  real _t0F65 = prim /0055 (_t0F5F, _t0F64);
  string _t0F66 = " test2: ";
  real _t0F67 = 0.e0;
  real _t0F68 = 0.e0;
  real _t0F69 = -0.1e1;
  vec3 _t0F6A = [_t0F67, _t0F68, _t0F69];
  real _t0F6B = prim •00CE<$[3]; $[3]; $[]> (_t0F6A, dPos0B28);
  string _t0F6C = " insideTest: ";
  real _t0F6D = 0.1e1;
  real _t0F6E = 0.1e-7;
  real _t0F6F = prim +0017<$[]> (_t0F6D, _t0F6E);
  real _t0F70 = 0.1e1;
  real _t0F71 = 0.1e1;
  real _t0F72 = 0.1e1;
  vec3 _t0F73 = [_t0F70, _t0F71, _t0F72];
  real _t0F74 = 0.e0;
  real _t0F75 = 0.e0;
  real _t0F76 = 0.e0;
  real _t0F77 = -0.1e1;
  vec3 _t0F78 = [_t0F75, _t0F76, _t0F77];
  real _t0F79 = prim •00CE<$[3]; $[3]; $[]> (_t0F78, refPos0B27);
  real _t0F7A = prim -0026<$[]> (_t0F74, _t0F79);
  real _t0F7B = 0.e0;
  real _t0F7C = 0.e0;
  real _t0F7D = -0.1e1;
  vec3 _t0F7E = [_t0F7B, _t0F7C, _t0F7D];
  real _t0F7F = prim •00CE<$[3]; $[3]; $[]> (_t0F7E, dPos0B28);
  real _t0F80 = prim /0055 (_t0F7A, _t0F7F);
  vec3 _t0F81 = prim *0038<$[3]> (dPos0B28, _t0F80);
  vec3 _t0F82 = prim +0017<$[3]> (refPos0B27, _t0F81);
  real _t0F83 = prim •00CE<$[3]; $[3]; $[]> (_t0F73, _t0F82);
  bool _t0F84 = prim >0080 (_t0F6F, _t0F83);
  real _t0F85 = 0.1e-7;
  real _t0F86 = 0.1e-7;
  real _t0F87 = 0.1e-7;
  vec3 _t0F88 = [_t0F85, _t0F86, _t0F87];
  real _t0F89 = 0.e0;
  real _t0F8A = 0.e0;
  real _t0F8B = 0.e0;
  real _t0F8C = -0.1e1;
  vec3 _t0F8D = [_t0F8A, _t0F8B, _t0F8C];
  real _t0F8E = prim •00CE<$[3]; $[3]; $[]> (_t0F8D, refPos0B27);
  real _t0F8F = prim -0026<$[]> (_t0F89, _t0F8E);
  real _t0F90 = 0.e0;
  real _t0F91 = 0.e0;
  real _t0F92 = -0.1e1;
  vec3 _t0F93 = [_t0F90, _t0F91, _t0F92];
  real _t0F94 = prim •00CE<$[3]; $[3]; $[]> (_t0F93, dPos0B28);
  real _t0F95 = prim /0055 (_t0F8F, _t0F94);
  vec3 _t0F96 = prim *0038<$[3]> (dPos0B28, _t0F95);
  vec3 _t0F97 = prim +0017<$[3]> (refPos0B27, _t0F96);
  vec3 _t0F98 = prim +0017<$[3]> (_t0F88, _t0F97);
  real _t0F99 = _t0F98[0];
  real _t0F9A = -0.e0;
  bool _t0F9B = prim >0080 (_t0F99, _t0F9A);
  real _t0F9C = 0.1e-7;
  real _t0F9D = 0.1e-7;
  real _t0F9E = 0.1e-7;
  vec3 _t0F9F = [_t0F9C, _t0F9D, _t0F9E];
  real _t0FA0 = 0.e0;
  real _t0FA1 = 0.e0;
  real _t0FA2 = 0.e0;
  real _t0FA3 = -0.1e1;
  vec3 _t0FA4 = [_t0FA1, _t0FA2, _t0FA3];
  real _t0FA5 = prim •00CE<$[3]; $[3]; $[]> (_t0FA4, refPos0B27);
  real _t0FA6 = prim -0026<$[]> (_t0FA0, _t0FA5);
  real _t0FA7 = 0.e0;
  real _t0FA8 = 0.e0;
  real _t0FA9 = -0.1e1;
  vec3 _t0FAA = [_t0FA7, _t0FA8, _t0FA9];
  real _t0FAB = prim •00CE<$[3]; $[3]; $[]> (_t0FAA, dPos0B28);
  real _t0FAC = prim /0055 (_t0FA6, _t0FAB);
  vec3 _t0FAD = prim *0038<$[3]> (dPos0B28, _t0FAC);
  vec3 _t0FAE = prim +0017<$[3]> (refPos0B27, _t0FAD);
  vec3 _t0FAF = prim +0017<$[3]> (_t0F9F, _t0FAE);
  real _t0FB0 = _t0FAF[1];
  real _t0FB1 = -0.e0;
  bool _t0FB2 = prim >0080 (_t0FB0, _t0FB1);
  real _t0FB3 = 0.1e-7;
  real _t0FB4 = 0.1e-7;
  real _t0FB5 = 0.1e-7;
  vec3 _t0FB6 = [_t0FB3, _t0FB4, _t0FB5];
  real _t0FB7 = 0.e0;
  real _t0FB8 = 0.e0;
  real _t0FB9 = 0.e0;
  real _t0FBA = -0.1e1;
  vec3 _t0FBB = [_t0FB8, _t0FB9, _t0FBA];
  real _t0FBC = prim •00CE<$[3]; $[3]; $[]> (_t0FBB, refPos0B27);
  real _t0FBD = prim -0026<$[]> (_t0FB7, _t0FBC);
  real _t0FBE = 0.e0;
  real _t0FBF = 0.e0;
  real _t0FC0 = -0.1e1;
  vec3 _t0FC1 = [_t0FBE, _t0FBF, _t0FC0];
  real _t0FC2 = prim •00CE<$[3]; $[3]; $[]> (_t0FC1, dPos0B28);
  real _t0FC3 = prim /0055 (_t0FBD, _t0FC2);
  vec3 _t0FC4 = prim *0038<$[3]> (dPos0B28, _t0FC3);
  vec3 _t0FC5 = prim +0017<$[3]> (refPos0B27, _t0FC4);
  vec3 _t0FC6 = prim +0017<$[3]> (_t0FB6, _t0FC5);
  real _t0FC7 = _t0FC6[2];
  real _t0FC8 = -0.e0;
  bool _t0FC9 = prim >0080 (_t0FC7, _t0FC8);
  bool _t0FCA = prim $and01C4 (_t0FB2, _t0FC9);
  bool _t0FCB = prim $and01C4 (_t0F9B, _t0FCA);
  bool _t0FCC = prim $and01C4 (_t0F84, _t0FCB);
  string _t0FCD = " dist: ";
  real _t0FCE = 0.e0;
  real _t0FCF = 0.e0;
  real _t0FD0 = 0.e0;
  real _t0FD1 = -0.1e1;
  vec3 _t0FD2 = [_t0FCF, _t0FD0, _t0FD1];
  real _t0FD3 = prim •00CE<$[3]; $[3]; $[]> (_t0FD2, refPos0B27);
  real _t0FD4 = prim -0026<$[]> (_t0FCE, _t0FD3);
  real _t0FD5 = prim |()|00B5<$[]> (_t0FD4);
  string _t0FD6 = "signed dist: ";
  real _t0FD7 = 0.e0;
  real _t0FD8 = 0.e0;
  real _t0FD9 = 0.e0;
  real _t0FDA = -0.1e1;
  vec3 _t0FDB = [_t0FD8, _t0FD9, _t0FDA];
  real _t0FDC = prim •00CE<$[3]; $[3]; $[]> (_t0FDB, refPos0B27);
  real _t0FDD = prim -0026<$[]> (_t0FD7, _t0FDC);
  string _t0FDE = " face: ";
  int _t0FDF = 3;
  string _t0FE0 = " place: ";
  real _t0FE1 = 0.e0;
  real _t0FE2 = 0.e0;
  real _t0FE3 = 0.e0;
  real _t0FE4 = -0.1e1;
  vec3 _t0FE5 = [_t0FE2, _t0FE3, _t0FE4];
  real _t0FE6 = prim •00CE<$[3]; $[3]; $[]> (_t0FE5, refPos0B27);
  real _t0FE7 = prim -0026<$[]> (_t0FE1, _t0FE6);
  real _t0FE8 = 0.e0;
  real _t0FE9 = 0.e0;
  real _t0FEA = -0.1e1;
  vec3 _t0FEB = [_t0FE8, _t0FE9, _t0FEA];
  real _t0FEC = prim •00CE<$[3]; $[3]; $[]> (_t0FEB, dPos0B28);
  real _t0FED = prim /0055 (_t0FE7, _t0FEC);
  vec3 _t0FEE = prim *0038<$[3]> (dPos0B28, _t0FED);
  vec3 _t0FEF = prim +0017<$[3]> (refPos0B27, _t0FEE);
  string _t0FF0 = " error: ";
  real _t0FF1 = 0.e0;
  real _t0FF2 = 0.e0;
  real _t0FF3 = 0.e0;
  real _t0FF4 = -0.1e1;
  vec3 _t0FF5 = [_t0FF2, _t0FF3, _t0FF4];
  real _t0FF6 = 0.e0;
  real _t0FF7 = 0.e0;
  real _t0FF8 = 0.e0;
  real _t0FF9 = -0.1e1;
  vec3 _t0FFA = [_t0FF7, _t0FF8, _t0FF9];
  real _t0FFB = prim •00CE<$[3]; $[3]; $[]> (_t0FFA, refPos0B27);
  real _t0FFC = prim -0026<$[]> (_t0FF6, _t0FFB);
  real _t0FFD = 0.e0;
  real _t0FFE = 0.e0;
  real _t0FFF = -0.1e1;
  vec3 _t1000 = [_t0FFD, _t0FFE, _t0FFF];
  real _t1001 = prim •00CE<$[3]; $[3]; $[]> (_t1000, dPos0B28);
  real _t1002 = prim /0055 (_t0FFC, _t1001);
  vec3 _t1003 = prim *0038<$[3]> (dPos0B28, _t1002);
  vec3 _t1004 = prim +0017<$[3]> (refPos0B27, _t1003);
  real _t1005 = prim •00CE<$[3]; $[3]; $[]> (_t0FF5, _t1004);
  real _t1006 = prim -0026<$[]> (_t0FF1, _t1005);
  real _t1007 = prim |()|00B5<$[]> (_t1006);
  string _t1008 = " offset :";
  string _t1009 = " dp: ";
  string _t100A = " otherPossibleTime: ";
  string _t100B = "\n";
  print (_t0F58, _t0F65, _t0F66, _t0F6B, _t0F6C, _t0FCC, _t0FCD, _t0FD5, _t0FD6, _t0FDD, _t0FDE, _t0FDF, _t0FE0, _t0FEF, _t0FF0, _t1007, _t1008, refPos0B27, _t1009, dPos0B28, _t100A, faceTime0B2B, _t100B);
  real _t100C = 0.e0;
  real _t100D = 0.e0;
  real _t100E = 0.e0;
  real _t100F = -0.1e1;
  vec3 _t1010 = [_t100D, _t100E, _t100F];
  real _t1011 = prim •00CE<$[3]; $[3]; $[]> (_t1010, refPos0B27);
  real _t1012 = prim -0026<$[]> (_t100C, _t1011);
  real _t1013 = 0.e0;
  real _t1014 = 0.e0;
  real _t1015 = -0.1e1;
  vec3 _t1016 = [_t1013, _t1014, _t1015];
  real _t1017 = prim •00CE<$[3]; $[3]; $[]> (_t1016, dPos0B28);
  real _t1018 = prim /0055 (_t1012, _t1017);
  real _t1019 = -0.1e-7;
  bool _t101A = prim >=007E (_t1018, _t1019);
  real _t101B = 0.e0;
  real _t101C = 0.e0;
  real _t101D = 0.e0;
  real _t101E = -0.1e1;
  vec3 _t101F = [_t101C, _t101D, _t101E];
  real _t1020 = prim •00CE<$[3]; $[3]; $[]> (_t101F, refPos0B27);
  real _t1021 = prim -0026<$[]> (_t101B, _t1020);
  real _t1022 = 0.e0;
  real _t1023 = 0.e0;
  real _t1024 = -0.1e1;
  vec3 _t1025 = [_t1022, _t1023, _t1024];
  real _t1026 = prim •00CE<$[3]; $[3]; $[]> (_t1025, dPos0B28);
  real _t1027 = prim /0055 (_t1021, _t1026);
  bool _t1028 = prim >0080 (time0B29, _t1027);
  real _t1029 = 0.e0;
  real _t102A = 0.e0;
  real _t102B = -0.1e1;
  vec3 _t102C = [_t1029, _t102A, _t102B];
  real _t102D = prim •00CE<$[3]; $[3]; $[]> (_t102C, dPos0B28);
  real _t102E = prim |()|00B5<$[]> (_t102D);
  real _t102F = 0.1e-7;
  bool _t1030 = prim >=007E (_t102E, _t102F);
  bool _t1031 = prim $and01C4 (_t1028, _t1030);
  bool _t1032 = prim $and01C4 (_t101A, _t1031);
  if _t1032 {
    real _t1033 = 0.1e1;
    real _t1034 = 0.1e-7;
    real _t1035 = prim +0017<$[]> (_t1033, _t1034);
    real _t1036 = 0.1e1;
    real _t1037 = 0.1e1;
    real _t1038 = 0.1e1;
    vec3 _t1039 = [_t1036, _t1037, _t1038];
    real _t103A = 0.e0;
    real _t103B = 0.e0;
    real _t103C = 0.e0;
    real _t103D = -0.1e1;
    vec3 _t103E = [_t103B, _t103C, _t103D];
    real _t103F = prim •00CE<$[3]; $[3]; $[]> (_t103E, refPos0B27);
    real _t1040 = prim -0026<$[]> (_t103A, _t103F);
    real _t1041 = 0.e0;
    real _t1042 = 0.e0;
    real _t1043 = -0.1e1;
    vec3 _t1044 = [_t1041, _t1042, _t1043];
    real _t1045 = prim •00CE<$[3]; $[3]; $[]> (_t1044, dPos0B28);
    real _t1046 = prim /0055 (_t1040, _t1045);
    vec3 _t1047 = prim *0038<$[3]> (dPos0B28, _t1046);
    vec3 _t1048 = prim +0017<$[3]> (refPos0B27, _t1047);
    real _t1049 = prim •00CE<$[3]; $[3]; $[]> (_t1039, _t1048);
    bool _t104A = prim >0080 (_t1035, _t1049);
    real _t104B = 0.1e-7;
    real _t104C = 0.1e-7;
    real _t104D = 0.1e-7;
    vec3 _t104E = [_t104B, _t104C, _t104D];
    real _t104F = 0.e0;
    real _t1050 = 0.e0;
    real _t1051 = 0.e0;
    real _t1052 = -0.1e1;
    vec3 _t1053 = [_t1050, _t1051, _t1052];
    real _t1054 = prim •00CE<$[3]; $[3]; $[]> (_t1053, refPos0B27);
    real _t1055 = prim -0026<$[]> (_t104F, _t1054);
    real _t1056 = 0.e0;
    real _t1057 = 0.e0;
    real _t1058 = -0.1e1;
    vec3 _t1059 = [_t1056, _t1057, _t1058];
    real _t105A = prim •00CE<$[3]; $[3]; $[]> (_t1059, dPos0B28);
    real _t105B = prim /0055 (_t1055, _t105A);
    vec3 _t105C = prim *0038<$[3]> (dPos0B28, _t105B);
    vec3 _t105D = prim +0017<$[3]> (refPos0B27, _t105C);
    vec3 _t105E = prim +0017<$[3]> (_t104E, _t105D);
    real _t105F = _t105E[0];
    real _t1060 = -0.e0;
    bool _t1061 = prim >0080 (_t105F, _t1060);
    real _t1062 = 0.1e-7;
    real _t1063 = 0.1e-7;
    real _t1064 = 0.1e-7;
    vec3 _t1065 = [_t1062, _t1063, _t1064];
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    real _t1068 = 0.e0;
    real _t1069 = -0.1e1;
    vec3 _t106A = [_t1067, _t1068, _t1069];
    real _t106B = prim •00CE<$[3]; $[3]; $[]> (_t106A, refPos0B27);
    real _t106C = prim -0026<$[]> (_t1066, _t106B);
    real _t106D = 0.e0;
    real _t106E = 0.e0;
    real _t106F = -0.1e1;
    vec3 _t1070 = [_t106D, _t106E, _t106F];
    real _t1071 = prim •00CE<$[3]; $[3]; $[]> (_t1070, dPos0B28);
    real _t1072 = prim /0055 (_t106C, _t1071);
    vec3 _t1073 = prim *0038<$[3]> (dPos0B28, _t1072);
    vec3 _t1074 = prim +0017<$[3]> (refPos0B27, _t1073);
    vec3 _t1075 = prim +0017<$[3]> (_t1065, _t1074);
    real _t1076 = _t1075[1];
    real _t1077 = -0.e0;
    bool _t1078 = prim >0080 (_t1076, _t1077);
    real _t1079 = 0.1e-7;
    real _t107A = 0.1e-7;
    real _t107B = 0.1e-7;
    vec3 _t107C = [_t1079, _t107A, _t107B];
    real _t107D = 0.e0;
    real _t107E = 0.e0;
    real _t107F = 0.e0;
    real _t1080 = -0.1e1;
    vec3 _t1081 = [_t107E, _t107F, _t1080];
    real _t1082 = prim •00CE<$[3]; $[3]; $[]> (_t1081, refPos0B27);
    real _t1083 = prim -0026<$[]> (_t107D, _t1082);
    real _t1084 = 0.e0;
    real _t1085 = 0.e0;
    real _t1086 = -0.1e1;
    vec3 _t1087 = [_t1084, _t1085, _t1086];
    real _t1088 = prim •00CE<$[3]; $[3]; $[]> (_t1087, dPos0B28);
    real _t1089 = prim /0055 (_t1083, _t1088);
    vec3 _t108A = prim *0038<$[3]> (dPos0B28, _t1089);
    vec3 _t108B = prim +0017<$[3]> (refPos0B27, _t108A);
    vec3 _t108C = prim +0017<$[3]> (_t107C, _t108B);
    real _t108D = _t108C[2];
    real _t108E = -0.e0;
    bool _t108F = prim >0080 (_t108D, _t108E);
    bool _t1090 = prim $and01C4 (_t1078, _t108F);
    bool _t1091 = prim $and01C4 (_t1061, _t1090);
    bool _t1092 = prim $and01C4 (_t104A, _t1091);
    if _t1092 {
      string _t1093 = "Saving at this face!";
      real _t1094 = 0.e0;
      real _t1095 = 0.e0;
      real _t1096 = 0.e0;
      real _t1097 = -0.1e1;
      vec3 _t1098 = [_t1095, _t1096, _t1097];
      real _t1099 = prim •00CE<$[3]; $[3]; $[]> (_t1098, refPos0B27);
      real _t109A = prim -0026<$[]> (_t1094, _t1099);
      real _t109B = 0.e0;
      real _t109C = 0.e0;
      real _t109D = -0.1e1;
      vec3 _t109E = [_t109B, _t109C, _t109D];
      real _t109F = prim •00CE<$[3]; $[3]; $[]> (_t109E, dPos0B28);
      real _t10A0 = prim /0055 (_t109A, _t109F);
      real _t10A1 = 0.e0;
      real _t10A2 = 0.e0;
      real _t10A3 = 0.e0;
      real _t10A4 = -0.1e1;
      vec3 _t10A5 = [_t10A2, _t10A3, _t10A4];
      real _t10A6 = prim •00CE<$[3]; $[3]; $[]> (_t10A5, refPos0B27);
      real _t10A7 = prim -0026<$[]> (_t10A1, _t10A6);
      real _t10A8 = 0.e0;
      real _t10A9 = 0.e0;
      real _t10AA = -0.1e1;
      vec3 _t10AB = [_t10A8, _t10A9, _t10AA];
      real _t10AC = prim •00CE<$[3]; $[3]; $[]> (_t10AB, dPos0B28);
      real _t10AD = prim /0055 (_t10A7, _t10AC);
      bool _t10AE = prim >0080 (time0B29, _t10AD);
      string _t10AF = "\n";
      print (_t1093, _t10A0, _t10AE, _t10AF);
      real _t10B0 = 0.e0;
      real _t10B1 = 0.e0;
      real _t10B2 = 0.e0;
      real _t10B3 = -0.1e1;
      vec3 _t10B4 = [_t10B1, _t10B2, _t10B3];
      real _t10B5 = prim •00CE<$[3]; $[3]; $[]> (_t10B4, refPos0B27);
      real _t10B6 = prim -0026<$[]> (_t10B0, _t10B5);
      real _t10B7 = 0.e0;
      real _t10B8 = 0.e0;
      real _t10B9 = -0.1e1;
      vec3 _t10BA = [_t10B7, _t10B8, _t10B9];
      real _t10BB = prim •00CE<$[3]; $[3]; $[]> (_t10BA, dPos0B28);
      time0B29 = prim /0055 (_t10B6, _t10BB);
      face0B2A = 3;
    }
  }
  int _t10BC = -1;
  bool _t10BD = prim !=0086 (face0B2A, _t10BC);
  real _t10BE = 0.1e1;
  real _t10BF = 0.1e-7;
  real _t10C0 = prim +0017<$[]> (_t10BE, _t10BF);
  real _t10C1 = 0.1e1;
  real _t10C2 = 0.1e1;
  real _t10C3 = 0.1e1;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = 0.e0;
  real _t10C6 = prim max0125 (time0B29, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0B28, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0B27, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, _t10C8);
  bool _t10CA = prim >0080 (_t10C0, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.e0;
  real _t10D0 = prim max0125 (time0B29, _t10CF);
  vec3 _t10D1 = prim *0038<$[3]> (dPos0B28, _t10D0);
  vec3 _t10D2 = prim +0017<$[3]> (refPos0B27, _t10D1);
  vec3 _t10D3 = prim +0017<$[3]> (_t10CE, _t10D2);
  real _t10D4 = _t10D3[0];
  real _t10D5 = -0.e0;
  bool _t10D6 = prim >0080 (_t10D4, _t10D5);
  real _t10D7 = 0.1e-7;
  real _t10D8 = 0.1e-7;
  real _t10D9 = 0.1e-7;
  vec3 _t10DA = [_t10D7, _t10D8, _t10D9];
  real _t10DB = 0.e0;
  real _t10DC = prim max0125 (time0B29, _t10DB);
  vec3 _t10DD = prim *0038<$[3]> (dPos0B28, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (refPos0B27, _t10DD);
  vec3 _t10DF = prim +0017<$[3]> (_t10DA, _t10DE);
  real _t10E0 = _t10DF[1];
  real _t10E1 = -0.e0;
  bool _t10E2 = prim >0080 (_t10E0, _t10E1);
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  real _t10E5 = 0.1e-7;
  vec3 _t10E6 = [_t10E3, _t10E4, _t10E5];
  real _t10E7 = 0.e0;
  real _t10E8 = prim max0125 (time0B29, _t10E7);
  vec3 _t10E9 = prim *0038<$[3]> (dPos0B28, _t10E8);
  vec3 _t10EA = prim +0017<$[3]> (refPos0B27, _t10E9);
  vec3 _t10EB = prim +0017<$[3]> (_t10E6, _t10EA);
  real _t10EC = _t10EB[2];
  real _t10ED = -0.e0;
  bool _t10EE = prim >0080 (_t10EC, _t10ED);
  bool _t10EF = prim $and01C4 (_t10E2, _t10EE);
  bool _t10F0 = prim $and01C4 (_t10D6, _t10EF);
  bool _t10F1 = prim $and01C4 (_t10CA, _t10F0);
  bool _t10F2 = prim $and01C4 (_t10BD, _t10F1);
  if _t10F2 {
    string _t10F3 = "\nReturning via standard : ";
    real _t10F4 = 0.e0;
    real _t10F5 = prim max0125 (time0B29, _t10F4);
    real _t10F6 = (real)face0B2A;
    vec2 _t10F7 = [_t10F5, _t10F6];
    string _t10F8 = "\n";
    print (_t10F3, _t10F7, _t10F8);
    real _t10F9 = 0.e0;
    real _t10FA = prim max0125 (time0B29, _t10F9);
    real _t10FB = (real)face0B2A;
    vec2 _t10FC = [_t10FA, _t10FB];
    return _t10FC;
  } else {
    real _t10FD = -0.1e1;
    real _t10FE = -0.1e1;
    vec2 _t10FF = [_t10FD, _t10FE];
    return _t10FF;
  }
}
function vec2#0 _exit1100 (vec3 refPos0B27, vec3 dPos0B28, int i1101)
{
  real time1102 = +inf;
  int face1103 = -1;
  real faceTime1104 = -inf;
  string _t1105 = "\ntest :";
  real _t1106 = 0.57735026919e0;
  real _t1107 = 0.57735026919e0;
  real _t1108 = 0.57735026919e0;
  real _t1109 = 0.57735026919e0;
  vec3 _t110A = [_t1107, _t1108, _t1109];
  real _t110B = prim •00CE<$[3]; $[3]; $[]> (_t110A, refPos0B27);
  real _t110C = prim -0026<$[]> (_t1106, _t110B);
  real _t110D = 0.57735026919e0;
  real _t110E = 0.57735026919e0;
  real _t110F = 0.57735026919e0;
  vec3 _t1110 = [_t110D, _t110E, _t110F];
  real _t1111 = prim •00CE<$[3]; $[3]; $[]> (_t1110, dPos0B28);
  real _t1112 = prim /0055 (_t110C, _t1111);
  string _t1113 = " test2: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  vec3 _t1117 = [_t1114, _t1115, _t1116];
  real _t1118 = prim •00CE<$[3]; $[3]; $[]> (_t1117, dPos0B28);
  string _t1119 = " insideTest: ";
  real _t111A = 0.1e1;
  real _t111B = 0.1e-7;
  real _t111C = prim +0017<$[]> (_t111A, _t111B);
  real _t111D = 0.1e1;
  real _t111E = 0.1e1;
  real _t111F = 0.1e1;
  vec3 _t1120 = [_t111D, _t111E, _t111F];
  real _t1121 = 0.57735026919e0;
  real _t1122 = 0.57735026919e0;
  real _t1123 = 0.57735026919e0;
  real _t1124 = 0.57735026919e0;
  vec3 _t1125 = [_t1122, _t1123, _t1124];
  real _t1126 = prim •00CE<$[3]; $[3]; $[]> (_t1125, refPos0B27);
  real _t1127 = prim -0026<$[]> (_t1121, _t1126);
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, dPos0B28);
  real _t112D = prim /0055 (_t1127, _t112C);
  vec3 _t112E = prim *0038<$[3]> (dPos0B28, _t112D);
  vec3 _t112F = prim +0017<$[3]> (refPos0B27, _t112E);
  real _t1130 = prim •00CE<$[3]; $[3]; $[]> (_t1120, _t112F);
  bool _t1131 = prim >0080 (_t111C, _t1130);
  real _t1132 = 0.1e-7;
  real _t1133 = 0.1e-7;
  real _t1134 = 0.1e-7;
  vec3 _t1135 = [_t1132, _t1133, _t1134];
  real _t1136 = 0.57735026919e0;
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  vec3 _t113A = [_t1137, _t1138, _t1139];
  real _t113B = prim •00CE<$[3]; $[3]; $[]> (_t113A, refPos0B27);
  real _t113C = prim -0026<$[]> (_t1136, _t113B);
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, dPos0B28);
  real _t1142 = prim /0055 (_t113C, _t1141);
  vec3 _t1143 = prim *0038<$[3]> (dPos0B28, _t1142);
  vec3 _t1144 = prim +0017<$[3]> (refPos0B27, _t1143);
  vec3 _t1145 = prim +0017<$[3]> (_t1135, _t1144);
  real _t1146 = _t1145[0];
  real _t1147 = -0.e0;
  bool _t1148 = prim >0080 (_t1146, _t1147);
  real _t1149 = 0.1e-7;
  real _t114A = 0.1e-7;
  real _t114B = 0.1e-7;
  vec3 _t114C = [_t1149, _t114A, _t114B];
  real _t114D = 0.57735026919e0;
  real _t114E = 0.57735026919e0;
  real _t114F = 0.57735026919e0;
  real _t1150 = 0.57735026919e0;
  vec3 _t1151 = [_t114E, _t114F, _t1150];
  real _t1152 = prim •00CE<$[3]; $[3]; $[]> (_t1151, refPos0B27);
  real _t1153 = prim -0026<$[]> (_t114D, _t1152);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  vec3 _t1157 = [_t1154, _t1155, _t1156];
  real _t1158 = prim •00CE<$[3]; $[3]; $[]> (_t1157, dPos0B28);
  real _t1159 = prim /0055 (_t1153, _t1158);
  vec3 _t115A = prim *0038<$[3]> (dPos0B28, _t1159);
  vec3 _t115B = prim +0017<$[3]> (refPos0B27, _t115A);
  vec3 _t115C = prim +0017<$[3]> (_t114C, _t115B);
  real _t115D = _t115C[1];
  real _t115E = -0.e0;
  bool _t115F = prim >0080 (_t115D, _t115E);
  real _t1160 = 0.1e-7;
  real _t1161 = 0.1e-7;
  real _t1162 = 0.1e-7;
  vec3 _t1163 = [_t1160, _t1161, _t1162];
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  real _t1167 = 0.57735026919e0;
  vec3 _t1168 = [_t1165, _t1166, _t1167];
  real _t1169 = prim •00CE<$[3]; $[3]; $[]> (_t1168, refPos0B27);
  real _t116A = prim -0026<$[]> (_t1164, _t1169);
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  real _t116D = 0.57735026919e0;
  vec3 _t116E = [_t116B, _t116C, _t116D];
  real _t116F = prim •00CE<$[3]; $[3]; $[]> (_t116E, dPos0B28);
  real _t1170 = prim /0055 (_t116A, _t116F);
  vec3 _t1171 = prim *0038<$[3]> (dPos0B28, _t1170);
  vec3 _t1172 = prim +0017<$[3]> (refPos0B27, _t1171);
  vec3 _t1173 = prim +0017<$[3]> (_t1163, _t1172);
  real _t1174 = _t1173[2];
  real _t1175 = -0.e0;
  bool _t1176 = prim >0080 (_t1174, _t1175);
  bool _t1177 = prim $and01C4 (_t115F, _t1176);
  bool _t1178 = prim $and01C4 (_t1148, _t1177);
  bool _t1179 = prim $and01C4 (_t1131, _t1178);
  string _t117A = " dist: ";
  real _t117B = 0.57735026919e0;
  real _t117C = 0.57735026919e0;
  real _t117D = 0.57735026919e0;
  real _t117E = 0.57735026919e0;
  vec3 _t117F = [_t117C, _t117D, _t117E];
  real _t1180 = prim •00CE<$[3]; $[3]; $[]> (_t117F, refPos0B27);
  real _t1181 = prim -0026<$[]> (_t117B, _t1180);
  real _t1182 = prim |()|00B5<$[]> (_t1181);
  string _t1183 = "signed dist: ";
  real _t1184 = 0.57735026919e0;
  real _t1185 = 0.57735026919e0;
  real _t1186 = 0.57735026919e0;
  real _t1187 = 0.57735026919e0;
  vec3 _t1188 = [_t1185, _t1186, _t1187];
  real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, refPos0B27);
  real _t118A = prim -0026<$[]> (_t1184, _t1189);
  string _t118B = " face: ";
  int _t118C = 0;
  string _t118D = " place: ";
  real _t118E = 0.57735026919e0;
  real _t118F = 0.57735026919e0;
  real _t1190 = 0.57735026919e0;
  real _t1191 = 0.57735026919e0;
  vec3 _t1192 = [_t118F, _t1190, _t1191];
  real _t1193 = prim •00CE<$[3]; $[3]; $[]> (_t1192, refPos0B27);
  real _t1194 = prim -0026<$[]> (_t118E, _t1193);
  real _t1195 = 0.57735026919e0;
  real _t1196 = 0.57735026919e0;
  real _t1197 = 0.57735026919e0;
  vec3 _t1198 = [_t1195, _t1196, _t1197];
  real _t1199 = prim •00CE<$[3]; $[3]; $[]> (_t1198, dPos0B28);
  real _t119A = prim /0055 (_t1194, _t1199);
  vec3 _t119B = prim *0038<$[3]> (dPos0B28, _t119A);
  vec3 _t119C = prim +0017<$[3]> (refPos0B27, _t119B);
  string _t119D = " error: ";
  real _t119E = 0.57735026919e0;
  real _t119F = 0.57735026919e0;
  real _t11A0 = 0.57735026919e0;
  real _t11A1 = 0.57735026919e0;
  vec3 _t11A2 = [_t119F, _t11A0, _t11A1];
  real _t11A3 = 0.57735026919e0;
  real _t11A4 = 0.57735026919e0;
  real _t11A5 = 0.57735026919e0;
  real _t11A6 = 0.57735026919e0;
  vec3 _t11A7 = [_t11A4, _t11A5, _t11A6];
  real _t11A8 = prim •00CE<$[3]; $[3]; $[]> (_t11A7, refPos0B27);
  real _t11A9 = prim -0026<$[]> (_t11A3, _t11A8);
  real _t11AA = 0.57735026919e0;
  real _t11AB = 0.57735026919e0;
  real _t11AC = 0.57735026919e0;
  vec3 _t11AD = [_t11AA, _t11AB, _t11AC];
  real _t11AE = prim •00CE<$[3]; $[3]; $[]> (_t11AD, dPos0B28);
  real _t11AF = prim /0055 (_t11A9, _t11AE);
  vec3 _t11B0 = prim *0038<$[3]> (dPos0B28, _t11AF);
  vec3 _t11B1 = prim +0017<$[3]> (refPos0B27, _t11B0);
  real _t11B2 = prim •00CE<$[3]; $[3]; $[]> (_t11A2, _t11B1);
  real _t11B3 = prim -0026<$[]> (_t119E, _t11B2);
  real _t11B4 = prim |()|00B5<$[]> (_t11B3);
  string _t11B5 = " offset :";
  string _t11B6 = " dp: ";
  string _t11B7 = " otherPossibleTime: ";
  string _t11B8 = "\n";
  string _t11B9 = "\n original face: ";
  string _t11BA = " ";
  print (_t1105, _t1112, _t1113, _t1118, _t1119, _t1179, _t117A, _t1182, _t1183, _t118A, _t118B, _t118C, _t118D, _t119C, _t119D, _t11B4, _t11B5, refPos0B27, _t11B6, dPos0B28, _t11B7, faceTime1104, _t11B8, _t11B9, i1101, _t11BA);
  real _t11BB = 0.57735026919e0;
  real _t11BC = 0.57735026919e0;
  real _t11BD = 0.57735026919e0;
  real _t11BE = 0.57735026919e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, refPos0B27);
  real _t11C1 = prim -0026<$[]> (_t11BB, _t11C0);
  real _t11C2 = 0.57735026919e0;
  real _t11C3 = 0.57735026919e0;
  real _t11C4 = 0.57735026919e0;
  vec3 _t11C5 = [_t11C2, _t11C3, _t11C4];
  real _t11C6 = prim •00CE<$[3]; $[3]; $[]> (_t11C5, dPos0B28);
  real _t11C7 = prim /0055 (_t11C1, _t11C6);
  real _t11C8 = -0.1e-7;
  bool _t11C9 = prim >=007E (_t11C7, _t11C8);
  real _t11CA = 0.57735026919e0;
  real _t11CB = 0.57735026919e0;
  real _t11CC = 0.57735026919e0;
  real _t11CD = 0.57735026919e0;
  vec3 _t11CE = [_t11CB, _t11CC, _t11CD];
  real _t11CF = prim •00CE<$[3]; $[3]; $[]> (_t11CE, refPos0B27);
  real _t11D0 = prim -0026<$[]> (_t11CA, _t11CF);
  real _t11D1 = 0.57735026919e0;
  real _t11D2 = 0.57735026919e0;
  real _t11D3 = 0.57735026919e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, dPos0B28);
  real _t11D6 = prim /0055 (_t11D0, _t11D5);
  bool _t11D7 = prim >0080 (time1102, _t11D6);
  real _t11D8 = 0.57735026919e0;
  real _t11D9 = 0.57735026919e0;
  real _t11DA = 0.57735026919e0;
  vec3 _t11DB = [_t11D8, _t11D9, _t11DA];
  real _t11DC = prim •00CE<$[3]; $[3]; $[]> (_t11DB, dPos0B28);
  real _t11DD = prim |()|00B5<$[]> (_t11DC);
  real _t11DE = 0.1e-7;
  bool _t11DF = prim >=007E (_t11DD, _t11DE);
  bool _t11E0 = prim $and01C4 (_t11D7, _t11DF);
  bool _t11E1 = prim $and01C4 (_t11C9, _t11E0);
  if _t11E1 {
    int _t11E2 = 0;
    bool _t11E3 = prim !=0086 (i1101, _t11E2);
    if _t11E3 {
      string _t11E4 = "Saving at this face!";
      real _t11E5 = 0.57735026919e0;
      real _t11E6 = 0.57735026919e0;
      real _t11E7 = 0.57735026919e0;
      real _t11E8 = 0.57735026919e0;
      vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
      real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0B27);
      real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
      real _t11EC = 0.57735026919e0;
      real _t11ED = 0.57735026919e0;
      real _t11EE = 0.57735026919e0;
      vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
      real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0B28);
      real _t11F1 = prim /0055 (_t11EB, _t11F0);
      real _t11F2 = 0.57735026919e0;
      real _t11F3 = 0.57735026919e0;
      real _t11F4 = 0.57735026919e0;
      real _t11F5 = 0.57735026919e0;
      vec3 _t11F6 = [_t11F3, _t11F4, _t11F5];
      real _t11F7 = prim •00CE<$[3]; $[3]; $[]> (_t11F6, refPos0B27);
      real _t11F8 = prim -0026<$[]> (_t11F2, _t11F7);
      real _t11F9 = 0.57735026919e0;
      real _t11FA = 0.57735026919e0;
      real _t11FB = 0.57735026919e0;
      vec3 _t11FC = [_t11F9, _t11FA, _t11FB];
      real _t11FD = prim •00CE<$[3]; $[3]; $[]> (_t11FC, dPos0B28);
      real _t11FE = prim /0055 (_t11F8, _t11FD);
      bool _t11FF = prim >0080 (time1102, _t11FE);
      string _t1200 = "\n";
      print (_t11E4, _t11F1, _t11FF, _t1200);
      real _t1201 = 0.57735026919e0;
      real _t1202 = 0.57735026919e0;
      real _t1203 = 0.57735026919e0;
      real _t1204 = 0.57735026919e0;
      vec3 _t1205 = [_t1202, _t1203, _t1204];
      real _t1206 = prim •00CE<$[3]; $[3]; $[]> (_t1205, refPos0B27);
      real _t1207 = prim -0026<$[]> (_t1201, _t1206);
      real _t1208 = 0.57735026919e0;
      real _t1209 = 0.57735026919e0;
      real _t120A = 0.57735026919e0;
      vec3 _t120B = [_t1208, _t1209, _t120A];
      real _t120C = prim •00CE<$[3]; $[3]; $[]> (_t120B, dPos0B28);
      time1102 = prim /0055 (_t1207, _t120C);
      face1103 = 0;
    } else {
      real _t120D = 0.57735026919e0;
      real _t120E = 0.57735026919e0;
      real _t120F = 0.57735026919e0;
      real _t1210 = 0.57735026919e0;
      vec3 _t1211 = [_t120E, _t120F, _t1210];
      real _t1212 = prim •00CE<$[3]; $[3]; $[]> (_t1211, refPos0B27);
      real _t1213 = prim -0026<$[]> (_t120D, _t1212);
      real _t1214 = 0.57735026919e0;
      real _t1215 = 0.57735026919e0;
      real _t1216 = 0.57735026919e0;
      vec3 _t1217 = [_t1214, _t1215, _t1216];
      real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, dPos0B28);
      faceTime1104 = prim /0055 (_t1213, _t1218);
      string _t1219 = "Saving backup time: ";
      string _t121A = "\n";
      print (_t1219, faceTime1104, _t121A);
    }
  }
  string _t121B = "\ntest :";
  real _t121C = 0.e0;
  real _t121D = -0.1e1;
  real _t121E = 0.e0;
  real _t121F = 0.e0;
  vec3 _t1220 = [_t121D, _t121E, _t121F];
  real _t1221 = prim •00CE<$[3]; $[3]; $[]> (_t1220, refPos0B27);
  real _t1222 = prim -0026<$[]> (_t121C, _t1221);
  real _t1223 = -0.1e1;
  real _t1224 = 0.e0;
  real _t1225 = 0.e0;
  vec3 _t1226 = [_t1223, _t1224, _t1225];
  real _t1227 = prim •00CE<$[3]; $[3]; $[]> (_t1226, dPos0B28);
  real _t1228 = prim /0055 (_t1222, _t1227);
  string _t1229 = " test2: ";
  real _t122A = -0.1e1;
  real _t122B = 0.e0;
  real _t122C = 0.e0;
  vec3 _t122D = [_t122A, _t122B, _t122C];
  real _t122E = prim •00CE<$[3]; $[3]; $[]> (_t122D, dPos0B28);
  string _t122F = " insideTest: ";
  real _t1230 = 0.1e1;
  real _t1231 = 0.1e-7;
  real _t1232 = prim +0017<$[]> (_t1230, _t1231);
  real _t1233 = 0.1e1;
  real _t1234 = 0.1e1;
  real _t1235 = 0.1e1;
  vec3 _t1236 = [_t1233, _t1234, _t1235];
  real _t1237 = 0.e0;
  real _t1238 = -0.1e1;
  real _t1239 = 0.e0;
  real _t123A = 0.e0;
  vec3 _t123B = [_t1238, _t1239, _t123A];
  real _t123C = prim •00CE<$[3]; $[3]; $[]> (_t123B, refPos0B27);
  real _t123D = prim -0026<$[]> (_t1237, _t123C);
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, dPos0B28);
  real _t1243 = prim /0055 (_t123D, _t1242);
  vec3 _t1244 = prim *0038<$[3]> (dPos0B28, _t1243);
  vec3 _t1245 = prim +0017<$[3]> (refPos0B27, _t1244);
  real _t1246 = prim •00CE<$[3]; $[3]; $[]> (_t1236, _t1245);
  bool _t1247 = prim >0080 (_t1232, _t1246);
  real _t1248 = 0.1e-7;
  real _t1249 = 0.1e-7;
  real _t124A = 0.1e-7;
  vec3 _t124B = [_t1248, _t1249, _t124A];
  real _t124C = 0.e0;
  real _t124D = -0.1e1;
  real _t124E = 0.e0;
  real _t124F = 0.e0;
  vec3 _t1250 = [_t124D, _t124E, _t124F];
  real _t1251 = prim •00CE<$[3]; $[3]; $[]> (_t1250, refPos0B27);
  real _t1252 = prim -0026<$[]> (_t124C, _t1251);
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, dPos0B28);
  real _t1258 = prim /0055 (_t1252, _t1257);
  vec3 _t1259 = prim *0038<$[3]> (dPos0B28, _t1258);
  vec3 _t125A = prim +0017<$[3]> (refPos0B27, _t1259);
  vec3 _t125B = prim +0017<$[3]> (_t124B, _t125A);
  real _t125C = _t125B[0];
  real _t125D = -0.e0;
  bool _t125E = prim >0080 (_t125C, _t125D);
  real _t125F = 0.1e-7;
  real _t1260 = 0.1e-7;
  real _t1261 = 0.1e-7;
  vec3 _t1262 = [_t125F, _t1260, _t1261];
  real _t1263 = 0.e0;
  real _t1264 = -0.1e1;
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  vec3 _t1267 = [_t1264, _t1265, _t1266];
  real _t1268 = prim •00CE<$[3]; $[3]; $[]> (_t1267, refPos0B27);
  real _t1269 = prim -0026<$[]> (_t1263, _t1268);
  real _t126A = -0.1e1;
  real _t126B = 0.e0;
  real _t126C = 0.e0;
  vec3 _t126D = [_t126A, _t126B, _t126C];
  real _t126E = prim •00CE<$[3]; $[3]; $[]> (_t126D, dPos0B28);
  real _t126F = prim /0055 (_t1269, _t126E);
  vec3 _t1270 = prim *0038<$[3]> (dPos0B28, _t126F);
  vec3 _t1271 = prim +0017<$[3]> (refPos0B27, _t1270);
  vec3 _t1272 = prim +0017<$[3]> (_t1262, _t1271);
  real _t1273 = _t1272[1];
  real _t1274 = -0.e0;
  bool _t1275 = prim >0080 (_t1273, _t1274);
  real _t1276 = 0.1e-7;
  real _t1277 = 0.1e-7;
  real _t1278 = 0.1e-7;
  vec3 _t1279 = [_t1276, _t1277, _t1278];
  real _t127A = 0.e0;
  real _t127B = -0.1e1;
  real _t127C = 0.e0;
  real _t127D = 0.e0;
  vec3 _t127E = [_t127B, _t127C, _t127D];
  real _t127F = prim •00CE<$[3]; $[3]; $[]> (_t127E, refPos0B27);
  real _t1280 = prim -0026<$[]> (_t127A, _t127F);
  real _t1281 = -0.1e1;
  real _t1282 = 0.e0;
  real _t1283 = 0.e0;
  vec3 _t1284 = [_t1281, _t1282, _t1283];
  real _t1285 = prim •00CE<$[3]; $[3]; $[]> (_t1284, dPos0B28);
  real _t1286 = prim /0055 (_t1280, _t1285);
  vec3 _t1287 = prim *0038<$[3]> (dPos0B28, _t1286);
  vec3 _t1288 = prim +0017<$[3]> (refPos0B27, _t1287);
  vec3 _t1289 = prim +0017<$[3]> (_t1279, _t1288);
  real _t128A = _t1289[2];
  real _t128B = -0.e0;
  bool _t128C = prim >0080 (_t128A, _t128B);
  bool _t128D = prim $and01C4 (_t1275, _t128C);
  bool _t128E = prim $and01C4 (_t125E, _t128D);
  bool _t128F = prim $and01C4 (_t1247, _t128E);
  string _t1290 = " dist: ";
  real _t1291 = 0.e0;
  real _t1292 = -0.1e1;
  real _t1293 = 0.e0;
  real _t1294 = 0.e0;
  vec3 _t1295 = [_t1292, _t1293, _t1294];
  real _t1296 = prim •00CE<$[3]; $[3]; $[]> (_t1295, refPos0B27);
  real _t1297 = prim -0026<$[]> (_t1291, _t1296);
  real _t1298 = prim |()|00B5<$[]> (_t1297);
  string _t1299 = "signed dist: ";
  real _t129A = 0.e0;
  real _t129B = -0.1e1;
  real _t129C = 0.e0;
  real _t129D = 0.e0;
  vec3 _t129E = [_t129B, _t129C, _t129D];
  real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, refPos0B27);
  real _t12A0 = prim -0026<$[]> (_t129A, _t129F);
  string _t12A1 = " face: ";
  int _t12A2 = 1;
  string _t12A3 = " place: ";
  real _t12A4 = 0.e0;
  real _t12A5 = -0.1e1;
  real _t12A6 = 0.e0;
  real _t12A7 = 0.e0;
  vec3 _t12A8 = [_t12A5, _t12A6, _t12A7];
  real _t12A9 = prim •00CE<$[3]; $[3]; $[]> (_t12A8, refPos0B27);
  real _t12AA = prim -0026<$[]> (_t12A4, _t12A9);
  real _t12AB = -0.1e1;
  real _t12AC = 0.e0;
  real _t12AD = 0.e0;
  vec3 _t12AE = [_t12AB, _t12AC, _t12AD];
  real _t12AF = prim •00CE<$[3]; $[3]; $[]> (_t12AE, dPos0B28);
  real _t12B0 = prim /0055 (_t12AA, _t12AF);
  vec3 _t12B1 = prim *0038<$[3]> (dPos0B28, _t12B0);
  vec3 _t12B2 = prim +0017<$[3]> (refPos0B27, _t12B1);
  string _t12B3 = " error: ";
  real _t12B4 = 0.e0;
  real _t12B5 = -0.1e1;
  real _t12B6 = 0.e0;
  real _t12B7 = 0.e0;
  vec3 _t12B8 = [_t12B5, _t12B6, _t12B7];
  real _t12B9 = 0.e0;
  real _t12BA = -0.1e1;
  real _t12BB = 0.e0;
  real _t12BC = 0.e0;
  vec3 _t12BD = [_t12BA, _t12BB, _t12BC];
  real _t12BE = prim •00CE<$[3]; $[3]; $[]> (_t12BD, refPos0B27);
  real _t12BF = prim -0026<$[]> (_t12B9, _t12BE);
  real _t12C0 = -0.1e1;
  real _t12C1 = 0.e0;
  real _t12C2 = 0.e0;
  vec3 _t12C3 = [_t12C0, _t12C1, _t12C2];
  real _t12C4 = prim •00CE<$[3]; $[3]; $[]> (_t12C3, dPos0B28);
  real _t12C5 = prim /0055 (_t12BF, _t12C4);
  vec3 _t12C6 = prim *0038<$[3]> (dPos0B28, _t12C5);
  vec3 _t12C7 = prim +0017<$[3]> (refPos0B27, _t12C6);
  real _t12C8 = prim •00CE<$[3]; $[3]; $[]> (_t12B8, _t12C7);
  real _t12C9 = prim -0026<$[]> (_t12B4, _t12C8);
  real _t12CA = prim |()|00B5<$[]> (_t12C9);
  string _t12CB = " offset :";
  string _t12CC = " dp: ";
  string _t12CD = " otherPossibleTime: ";
  string _t12CE = "\n";
  string _t12CF = "\n original face: ";
  string _t12D0 = " ";
  print (_t121B, _t1228, _t1229, _t122E, _t122F, _t128F, _t1290, _t1298, _t1299, _t12A0, _t12A1, _t12A2, _t12A3, _t12B2, _t12B3, _t12CA, _t12CB, refPos0B27, _t12CC, dPos0B28, _t12CD, faceTime1104, _t12CE, _t12CF, i1101, _t12D0);
  real _t12D1 = 0.e0;
  real _t12D2 = -0.1e1;
  real _t12D3 = 0.e0;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, refPos0B27);
  real _t12D7 = prim -0026<$[]> (_t12D1, _t12D6);
  real _t12D8 = -0.1e1;
  real _t12D9 = 0.e0;
  real _t12DA = 0.e0;
  vec3 _t12DB = [_t12D8, _t12D9, _t12DA];
  real _t12DC = prim •00CE<$[3]; $[3]; $[]> (_t12DB, dPos0B28);
  real _t12DD = prim /0055 (_t12D7, _t12DC);
  real _t12DE = -0.1e-7;
  bool _t12DF = prim >=007E (_t12DD, _t12DE);
  real _t12E0 = 0.e0;
  real _t12E1 = -0.1e1;
  real _t12E2 = 0.e0;
  real _t12E3 = 0.e0;
  vec3 _t12E4 = [_t12E1, _t12E2, _t12E3];
  real _t12E5 = prim •00CE<$[3]; $[3]; $[]> (_t12E4, refPos0B27);
  real _t12E6 = prim -0026<$[]> (_t12E0, _t12E5);
  real _t12E7 = -0.1e1;
  real _t12E8 = 0.e0;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, dPos0B28);
  real _t12EC = prim /0055 (_t12E6, _t12EB);
  bool _t12ED = prim >0080 (time1102, _t12EC);
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  real _t12F0 = 0.e0;
  vec3 _t12F1 = [_t12EE, _t12EF, _t12F0];
  real _t12F2 = prim •00CE<$[3]; $[3]; $[]> (_t12F1, dPos0B28);
  real _t12F3 = prim |()|00B5<$[]> (_t12F2);
  real _t12F4 = 0.1e-7;
  bool _t12F5 = prim >=007E (_t12F3, _t12F4);
  bool _t12F6 = prim $and01C4 (_t12ED, _t12F5);
  bool _t12F7 = prim $and01C4 (_t12DF, _t12F6);
  if _t12F7 {
    int _t12F8 = 1;
    bool _t12F9 = prim !=0086 (i1101, _t12F8);
    if _t12F9 {
      string _t12FA = "Saving at this face!";
      real _t12FB = 0.e0;
      real _t12FC = -0.1e1;
      real _t12FD = 0.e0;
      real _t12FE = 0.e0;
      vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
      real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0B27);
      real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
      real _t1302 = -0.1e1;
      real _t1303 = 0.e0;
      real _t1304 = 0.e0;
      vec3 _t1305 = [_t1302, _t1303, _t1304];
      real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0B28);
      real _t1307 = prim /0055 (_t1301, _t1306);
      real _t1308 = 0.e0;
      real _t1309 = -0.1e1;
      real _t130A = 0.e0;
      real _t130B = 0.e0;
      vec3 _t130C = [_t1309, _t130A, _t130B];
      real _t130D = prim •00CE<$[3]; $[3]; $[]> (_t130C, refPos0B27);
      real _t130E = prim -0026<$[]> (_t1308, _t130D);
      real _t130F = -0.1e1;
      real _t1310 = 0.e0;
      real _t1311 = 0.e0;
      vec3 _t1312 = [_t130F, _t1310, _t1311];
      real _t1313 = prim •00CE<$[3]; $[3]; $[]> (_t1312, dPos0B28);
      real _t1314 = prim /0055 (_t130E, _t1313);
      bool _t1315 = prim >0080 (time1102, _t1314);
      string _t1316 = "\n";
      print (_t12FA, _t1307, _t1315, _t1316);
      real _t1317 = 0.e0;
      real _t1318 = -0.1e1;
      real _t1319 = 0.e0;
      real _t131A = 0.e0;
      vec3 _t131B = [_t1318, _t1319, _t131A];
      real _t131C = prim •00CE<$[3]; $[3]; $[]> (_t131B, refPos0B27);
      real _t131D = prim -0026<$[]> (_t1317, _t131C);
      real _t131E = -0.1e1;
      real _t131F = 0.e0;
      real _t1320 = 0.e0;
      vec3 _t1321 = [_t131E, _t131F, _t1320];
      real _t1322 = prim •00CE<$[3]; $[3]; $[]> (_t1321, dPos0B28);
      time1102 = prim /0055 (_t131D, _t1322);
      face1103 = 1;
    } else {
      real _t1323 = 0.e0;
      real _t1324 = -0.1e1;
      real _t1325 = 0.e0;
      real _t1326 = 0.e0;
      vec3 _t1327 = [_t1324, _t1325, _t1326];
      real _t1328 = prim •00CE<$[3]; $[3]; $[]> (_t1327, refPos0B27);
      real _t1329 = prim -0026<$[]> (_t1323, _t1328);
      real _t132A = -0.1e1;
      real _t132B = 0.e0;
      real _t132C = 0.e0;
      vec3 _t132D = [_t132A, _t132B, _t132C];
      real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, dPos0B28);
      faceTime1104 = prim /0055 (_t1329, _t132E);
      string _t132F = "Saving backup time: ";
      string _t1330 = "\n";
      print (_t132F, faceTime1104, _t1330);
    }
  }
  string _t1331 = "\ntest :";
  real _t1332 = 0.e0;
  real _t1333 = 0.e0;
  real _t1334 = -0.1e1;
  real _t1335 = 0.e0;
  vec3 _t1336 = [_t1333, _t1334, _t1335];
  real _t1337 = prim •00CE<$[3]; $[3]; $[]> (_t1336, refPos0B27);
  real _t1338 = prim -0026<$[]> (_t1332, _t1337);
  real _t1339 = 0.e0;
  real _t133A = -0.1e1;
  real _t133B = 0.e0;
  vec3 _t133C = [_t1339, _t133A, _t133B];
  real _t133D = prim •00CE<$[3]; $[3]; $[]> (_t133C, dPos0B28);
  real _t133E = prim /0055 (_t1338, _t133D);
  string _t133F = " test2: ";
  real _t1340 = 0.e0;
  real _t1341 = -0.1e1;
  real _t1342 = 0.e0;
  vec3 _t1343 = [_t1340, _t1341, _t1342];
  real _t1344 = prim •00CE<$[3]; $[3]; $[]> (_t1343, dPos0B28);
  string _t1345 = " insideTest: ";
  real _t1346 = 0.1e1;
  real _t1347 = 0.1e-7;
  real _t1348 = prim +0017<$[]> (_t1346, _t1347);
  real _t1349 = 0.1e1;
  real _t134A = 0.1e1;
  real _t134B = 0.1e1;
  vec3 _t134C = [_t1349, _t134A, _t134B];
  real _t134D = 0.e0;
  real _t134E = 0.e0;
  real _t134F = -0.1e1;
  real _t1350 = 0.e0;
  vec3 _t1351 = [_t134E, _t134F, _t1350];
  real _t1352 = prim •00CE<$[3]; $[3]; $[]> (_t1351, refPos0B27);
  real _t1353 = prim -0026<$[]> (_t134D, _t1352);
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, dPos0B28);
  real _t1359 = prim /0055 (_t1353, _t1358);
  vec3 _t135A = prim *0038<$[3]> (dPos0B28, _t1359);
  vec3 _t135B = prim +0017<$[3]> (refPos0B27, _t135A);
  real _t135C = prim •00CE<$[3]; $[3]; $[]> (_t134C, _t135B);
  bool _t135D = prim >0080 (_t1348, _t135C);
  real _t135E = 0.1e-7;
  real _t135F = 0.1e-7;
  real _t1360 = 0.1e-7;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = 0.e0;
  real _t1363 = 0.e0;
  real _t1364 = -0.1e1;
  real _t1365 = 0.e0;
  vec3 _t1366 = [_t1363, _t1364, _t1365];
  real _t1367 = prim •00CE<$[3]; $[3]; $[]> (_t1366, refPos0B27);
  real _t1368 = prim -0026<$[]> (_t1362, _t1367);
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, dPos0B28);
  real _t136E = prim /0055 (_t1368, _t136D);
  vec3 _t136F = prim *0038<$[3]> (dPos0B28, _t136E);
  vec3 _t1370 = prim +0017<$[3]> (refPos0B27, _t136F);
  vec3 _t1371 = prim +0017<$[3]> (_t1361, _t1370);
  real _t1372 = _t1371[0];
  real _t1373 = -0.e0;
  bool _t1374 = prim >0080 (_t1372, _t1373);
  real _t1375 = 0.1e-7;
  real _t1376 = 0.1e-7;
  real _t1377 = 0.1e-7;
  vec3 _t1378 = [_t1375, _t1376, _t1377];
  real _t1379 = 0.e0;
  real _t137A = 0.e0;
  real _t137B = -0.1e1;
  real _t137C = 0.e0;
  vec3 _t137D = [_t137A, _t137B, _t137C];
  real _t137E = prim •00CE<$[3]; $[3]; $[]> (_t137D, refPos0B27);
  real _t137F = prim -0026<$[]> (_t1379, _t137E);
  real _t1380 = 0.e0;
  real _t1381 = -0.1e1;
  real _t1382 = 0.e0;
  vec3 _t1383 = [_t1380, _t1381, _t1382];
  real _t1384 = prim •00CE<$[3]; $[3]; $[]> (_t1383, dPos0B28);
  real _t1385 = prim /0055 (_t137F, _t1384);
  vec3 _t1386 = prim *0038<$[3]> (dPos0B28, _t1385);
  vec3 _t1387 = prim +0017<$[3]> (refPos0B27, _t1386);
  vec3 _t1388 = prim +0017<$[3]> (_t1378, _t1387);
  real _t1389 = _t1388[1];
  real _t138A = -0.e0;
  bool _t138B = prim >0080 (_t1389, _t138A);
  real _t138C = 0.1e-7;
  real _t138D = 0.1e-7;
  real _t138E = 0.1e-7;
  vec3 _t138F = [_t138C, _t138D, _t138E];
  real _t1390 = 0.e0;
  real _t1391 = 0.e0;
  real _t1392 = -0.1e1;
  real _t1393 = 0.e0;
  vec3 _t1394 = [_t1391, _t1392, _t1393];
  real _t1395 = prim •00CE<$[3]; $[3]; $[]> (_t1394, refPos0B27);
  real _t1396 = prim -0026<$[]> (_t1390, _t1395);
  real _t1397 = 0.e0;
  real _t1398 = -0.1e1;
  real _t1399 = 0.e0;
  vec3 _t139A = [_t1397, _t1398, _t1399];
  real _t139B = prim •00CE<$[3]; $[3]; $[]> (_t139A, dPos0B28);
  real _t139C = prim /0055 (_t1396, _t139B);
  vec3 _t139D = prim *0038<$[3]> (dPos0B28, _t139C);
  vec3 _t139E = prim +0017<$[3]> (refPos0B27, _t139D);
  vec3 _t139F = prim +0017<$[3]> (_t138F, _t139E);
  real _t13A0 = _t139F[2];
  real _t13A1 = -0.e0;
  bool _t13A2 = prim >0080 (_t13A0, _t13A1);
  bool _t13A3 = prim $and01C4 (_t138B, _t13A2);
  bool _t13A4 = prim $and01C4 (_t1374, _t13A3);
  bool _t13A5 = prim $and01C4 (_t135D, _t13A4);
  string _t13A6 = " dist: ";
  real _t13A7 = 0.e0;
  real _t13A8 = 0.e0;
  real _t13A9 = -0.1e1;
  real _t13AA = 0.e0;
  vec3 _t13AB = [_t13A8, _t13A9, _t13AA];
  real _t13AC = prim •00CE<$[3]; $[3]; $[]> (_t13AB, refPos0B27);
  real _t13AD = prim -0026<$[]> (_t13A7, _t13AC);
  real _t13AE = prim |()|00B5<$[]> (_t13AD);
  string _t13AF = "signed dist: ";
  real _t13B0 = 0.e0;
  real _t13B1 = 0.e0;
  real _t13B2 = -0.1e1;
  real _t13B3 = 0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, refPos0B27);
  real _t13B6 = prim -0026<$[]> (_t13B0, _t13B5);
  string _t13B7 = " face: ";
  int _t13B8 = 2;
  string _t13B9 = " place: ";
  real _t13BA = 0.e0;
  real _t13BB = 0.e0;
  real _t13BC = -0.1e1;
  real _t13BD = 0.e0;
  vec3 _t13BE = [_t13BB, _t13BC, _t13BD];
  real _t13BF = prim •00CE<$[3]; $[3]; $[]> (_t13BE, refPos0B27);
  real _t13C0 = prim -0026<$[]> (_t13BA, _t13BF);
  real _t13C1 = 0.e0;
  real _t13C2 = -0.1e1;
  real _t13C3 = 0.e0;
  vec3 _t13C4 = [_t13C1, _t13C2, _t13C3];
  real _t13C5 = prim •00CE<$[3]; $[3]; $[]> (_t13C4, dPos0B28);
  real _t13C6 = prim /0055 (_t13C0, _t13C5);
  vec3 _t13C7 = prim *0038<$[3]> (dPos0B28, _t13C6);
  vec3 _t13C8 = prim +0017<$[3]> (refPos0B27, _t13C7);
  string _t13C9 = " error: ";
  real _t13CA = 0.e0;
  real _t13CB = 0.e0;
  real _t13CC = -0.1e1;
  real _t13CD = 0.e0;
  vec3 _t13CE = [_t13CB, _t13CC, _t13CD];
  real _t13CF = 0.e0;
  real _t13D0 = 0.e0;
  real _t13D1 = -0.1e1;
  real _t13D2 = 0.e0;
  vec3 _t13D3 = [_t13D0, _t13D1, _t13D2];
  real _t13D4 = prim •00CE<$[3]; $[3]; $[]> (_t13D3, refPos0B27);
  real _t13D5 = prim -0026<$[]> (_t13CF, _t13D4);
  real _t13D6 = 0.e0;
  real _t13D7 = -0.1e1;
  real _t13D8 = 0.e0;
  vec3 _t13D9 = [_t13D6, _t13D7, _t13D8];
  real _t13DA = prim •00CE<$[3]; $[3]; $[]> (_t13D9, dPos0B28);
  real _t13DB = prim /0055 (_t13D5, _t13DA);
  vec3 _t13DC = prim *0038<$[3]> (dPos0B28, _t13DB);
  vec3 _t13DD = prim +0017<$[3]> (refPos0B27, _t13DC);
  real _t13DE = prim •00CE<$[3]; $[3]; $[]> (_t13CE, _t13DD);
  real _t13DF = prim -0026<$[]> (_t13CA, _t13DE);
  real _t13E0 = prim |()|00B5<$[]> (_t13DF);
  string _t13E1 = " offset :";
  string _t13E2 = " dp: ";
  string _t13E3 = " otherPossibleTime: ";
  string _t13E4 = "\n";
  string _t13E5 = "\n original face: ";
  string _t13E6 = " ";
  print (_t1331, _t133E, _t133F, _t1344, _t1345, _t13A5, _t13A6, _t13AE, _t13AF, _t13B6, _t13B7, _t13B8, _t13B9, _t13C8, _t13C9, _t13E0, _t13E1, refPos0B27, _t13E2, dPos0B28, _t13E3, faceTime1104, _t13E4, _t13E5, i1101, _t13E6);
  real _t13E7 = 0.e0;
  real _t13E8 = 0.e0;
  real _t13E9 = -0.1e1;
  real _t13EA = 0.e0;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, refPos0B27);
  real _t13ED = prim -0026<$[]> (_t13E7, _t13EC);
  real _t13EE = 0.e0;
  real _t13EF = -0.1e1;
  real _t13F0 = 0.e0;
  vec3 _t13F1 = [_t13EE, _t13EF, _t13F0];
  real _t13F2 = prim •00CE<$[3]; $[3]; $[]> (_t13F1, dPos0B28);
  real _t13F3 = prim /0055 (_t13ED, _t13F2);
  real _t13F4 = -0.1e-7;
  bool _t13F5 = prim >=007E (_t13F3, _t13F4);
  real _t13F6 = 0.e0;
  real _t13F7 = 0.e0;
  real _t13F8 = -0.1e1;
  real _t13F9 = 0.e0;
  vec3 _t13FA = [_t13F7, _t13F8, _t13F9];
  real _t13FB = prim •00CE<$[3]; $[3]; $[]> (_t13FA, refPos0B27);
  real _t13FC = prim -0026<$[]> (_t13F6, _t13FB);
  real _t13FD = 0.e0;
  real _t13FE = -0.1e1;
  real _t13FF = 0.e0;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, dPos0B28);
  real _t1402 = prim /0055 (_t13FC, _t1401);
  bool _t1403 = prim >0080 (time1102, _t1402);
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  real _t1406 = 0.e0;
  vec3 _t1407 = [_t1404, _t1405, _t1406];
  real _t1408 = prim •00CE<$[3]; $[3]; $[]> (_t1407, dPos0B28);
  real _t1409 = prim |()|00B5<$[]> (_t1408);
  real _t140A = 0.1e-7;
  bool _t140B = prim >=007E (_t1409, _t140A);
  bool _t140C = prim $and01C4 (_t1403, _t140B);
  bool _t140D = prim $and01C4 (_t13F5, _t140C);
  if _t140D {
    int _t140E = 2;
    bool _t140F = prim !=0086 (i1101, _t140E);
    if _t140F {
      string _t1410 = "Saving at this face!";
      real _t1411 = 0.e0;
      real _t1412 = 0.e0;
      real _t1413 = -0.1e1;
      real _t1414 = 0.e0;
      vec3 _t1415 = [_t1412, _t1413, _t1414];
      real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0B27);
      real _t1417 = prim -0026<$[]> (_t1411, _t1416);
      real _t1418 = 0.e0;
      real _t1419 = -0.1e1;
      real _t141A = 0.e0;
      vec3 _t141B = [_t1418, _t1419, _t141A];
      real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0B28);
      real _t141D = prim /0055 (_t1417, _t141C);
      real _t141E = 0.e0;
      real _t141F = 0.e0;
      real _t1420 = -0.1e1;
      real _t1421 = 0.e0;
      vec3 _t1422 = [_t141F, _t1420, _t1421];
      real _t1423 = prim •00CE<$[3]; $[3]; $[]> (_t1422, refPos0B27);
      real _t1424 = prim -0026<$[]> (_t141E, _t1423);
      real _t1425 = 0.e0;
      real _t1426 = -0.1e1;
      real _t1427 = 0.e0;
      vec3 _t1428 = [_t1425, _t1426, _t1427];
      real _t1429 = prim •00CE<$[3]; $[3]; $[]> (_t1428, dPos0B28);
      real _t142A = prim /0055 (_t1424, _t1429);
      bool _t142B = prim >0080 (time1102, _t142A);
      string _t142C = "\n";
      print (_t1410, _t141D, _t142B, _t142C);
      real _t142D = 0.e0;
      real _t142E = 0.e0;
      real _t142F = -0.1e1;
      real _t1430 = 0.e0;
      vec3 _t1431 = [_t142E, _t142F, _t1430];
      real _t1432 = prim •00CE<$[3]; $[3]; $[]> (_t1431, refPos0B27);
      real _t1433 = prim -0026<$[]> (_t142D, _t1432);
      real _t1434 = 0.e0;
      real _t1435 = -0.1e1;
      real _t1436 = 0.e0;
      vec3 _t1437 = [_t1434, _t1435, _t1436];
      real _t1438 = prim •00CE<$[3]; $[3]; $[]> (_t1437, dPos0B28);
      time1102 = prim /0055 (_t1433, _t1438);
      face1103 = 2;
    } else {
      real _t1439 = 0.e0;
      real _t143A = 0.e0;
      real _t143B = -0.1e1;
      real _t143C = 0.e0;
      vec3 _t143D = [_t143A, _t143B, _t143C];
      real _t143E = prim •00CE<$[3]; $[3]; $[]> (_t143D, refPos0B27);
      real _t143F = prim -0026<$[]> (_t1439, _t143E);
      real _t1440 = 0.e0;
      real _t1441 = -0.1e1;
      real _t1442 = 0.e0;
      vec3 _t1443 = [_t1440, _t1441, _t1442];
      real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, dPos0B28);
      faceTime1104 = prim /0055 (_t143F, _t1444);
      string _t1445 = "Saving backup time: ";
      string _t1446 = "\n";
      print (_t1445, faceTime1104, _t1446);
    }
  }
  string _t1447 = "\ntest :";
  real _t1448 = 0.e0;
  real _t1449 = 0.e0;
  real _t144A = 0.e0;
  real _t144B = -0.1e1;
  vec3 _t144C = [_t1449, _t144A, _t144B];
  real _t144D = prim •00CE<$[3]; $[3]; $[]> (_t144C, refPos0B27);
  real _t144E = prim -0026<$[]> (_t1448, _t144D);
  real _t144F = 0.e0;
  real _t1450 = 0.e0;
  real _t1451 = -0.1e1;
  vec3 _t1452 = [_t144F, _t1450, _t1451];
  real _t1453 = prim •00CE<$[3]; $[3]; $[]> (_t1452, dPos0B28);
  real _t1454 = prim /0055 (_t144E, _t1453);
  string _t1455 = " test2: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = -0.1e1;
  vec3 _t1459 = [_t1456, _t1457, _t1458];
  real _t145A = prim •00CE<$[3]; $[3]; $[]> (_t1459, dPos0B28);
  string _t145B = " insideTest: ";
  real _t145C = 0.1e1;
  real _t145D = 0.1e-7;
  real _t145E = prim +0017<$[]> (_t145C, _t145D);
  real _t145F = 0.1e1;
  real _t1460 = 0.1e1;
  real _t1461 = 0.1e1;
  vec3 _t1462 = [_t145F, _t1460, _t1461];
  real _t1463 = 0.e0;
  real _t1464 = 0.e0;
  real _t1465 = 0.e0;
  real _t1466 = -0.1e1;
  vec3 _t1467 = [_t1464, _t1465, _t1466];
  real _t1468 = prim •00CE<$[3]; $[3]; $[]> (_t1467, refPos0B27);
  real _t1469 = prim -0026<$[]> (_t1463, _t1468);
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, dPos0B28);
  real _t146F = prim /0055 (_t1469, _t146E);
  vec3 _t1470 = prim *0038<$[3]> (dPos0B28, _t146F);
  vec3 _t1471 = prim +0017<$[3]> (refPos0B27, _t1470);
  real _t1472 = prim •00CE<$[3]; $[3]; $[]> (_t1462, _t1471);
  bool _t1473 = prim >0080 (_t145E, _t1472);
  real _t1474 = 0.1e-7;
  real _t1475 = 0.1e-7;
  real _t1476 = 0.1e-7;
  vec3 _t1477 = [_t1474, _t1475, _t1476];
  real _t1478 = 0.e0;
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = -0.1e1;
  vec3 _t147C = [_t1479, _t147A, _t147B];
  real _t147D = prim •00CE<$[3]; $[3]; $[]> (_t147C, refPos0B27);
  real _t147E = prim -0026<$[]> (_t1478, _t147D);
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, dPos0B28);
  real _t1484 = prim /0055 (_t147E, _t1483);
  vec3 _t1485 = prim *0038<$[3]> (dPos0B28, _t1484);
  vec3 _t1486 = prim +0017<$[3]> (refPos0B27, _t1485);
  vec3 _t1487 = prim +0017<$[3]> (_t1477, _t1486);
  real _t1488 = _t1487[0];
  real _t1489 = -0.e0;
  bool _t148A = prim >0080 (_t1488, _t1489);
  real _t148B = 0.1e-7;
  real _t148C = 0.1e-7;
  real _t148D = 0.1e-7;
  vec3 _t148E = [_t148B, _t148C, _t148D];
  real _t148F = 0.e0;
  real _t1490 = 0.e0;
  real _t1491 = 0.e0;
  real _t1492 = -0.1e1;
  vec3 _t1493 = [_t1490, _t1491, _t1492];
  real _t1494 = prim •00CE<$[3]; $[3]; $[]> (_t1493, refPos0B27);
  real _t1495 = prim -0026<$[]> (_t148F, _t1494);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = -0.1e1;
  vec3 _t1499 = [_t1496, _t1497, _t1498];
  real _t149A = prim •00CE<$[3]; $[3]; $[]> (_t1499, dPos0B28);
  real _t149B = prim /0055 (_t1495, _t149A);
  vec3 _t149C = prim *0038<$[3]> (dPos0B28, _t149B);
  vec3 _t149D = prim +0017<$[3]> (refPos0B27, _t149C);
  vec3 _t149E = prim +0017<$[3]> (_t148E, _t149D);
  real _t149F = _t149E[1];
  real _t14A0 = -0.e0;
  bool _t14A1 = prim >0080 (_t149F, _t14A0);
  real _t14A2 = 0.1e-7;
  real _t14A3 = 0.1e-7;
  real _t14A4 = 0.1e-7;
  vec3 _t14A5 = [_t14A2, _t14A3, _t14A4];
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = 0.e0;
  real _t14A9 = -0.1e1;
  vec3 _t14AA = [_t14A7, _t14A8, _t14A9];
  real _t14AB = prim •00CE<$[3]; $[3]; $[]> (_t14AA, refPos0B27);
  real _t14AC = prim -0026<$[]> (_t14A6, _t14AB);
  real _t14AD = 0.e0;
  real _t14AE = 0.e0;
  real _t14AF = -0.1e1;
  vec3 _t14B0 = [_t14AD, _t14AE, _t14AF];
  real _t14B1 = prim •00CE<$[3]; $[3]; $[]> (_t14B0, dPos0B28);
  real _t14B2 = prim /0055 (_t14AC, _t14B1);
  vec3 _t14B3 = prim *0038<$[3]> (dPos0B28, _t14B2);
  vec3 _t14B4 = prim +0017<$[3]> (refPos0B27, _t14B3);
  vec3 _t14B5 = prim +0017<$[3]> (_t14A5, _t14B4);
  real _t14B6 = _t14B5[2];
  real _t14B7 = -0.e0;
  bool _t14B8 = prim >0080 (_t14B6, _t14B7);
  bool _t14B9 = prim $and01C4 (_t14A1, _t14B8);
  bool _t14BA = prim $and01C4 (_t148A, _t14B9);
  bool _t14BB = prim $and01C4 (_t1473, _t14BA);
  string _t14BC = " dist: ";
  real _t14BD = 0.e0;
  real _t14BE = 0.e0;
  real _t14BF = 0.e0;
  real _t14C0 = -0.1e1;
  vec3 _t14C1 = [_t14BE, _t14BF, _t14C0];
  real _t14C2 = prim •00CE<$[3]; $[3]; $[]> (_t14C1, refPos0B27);
  real _t14C3 = prim -0026<$[]> (_t14BD, _t14C2);
  real _t14C4 = prim |()|00B5<$[]> (_t14C3);
  string _t14C5 = "signed dist: ";
  real _t14C6 = 0.e0;
  real _t14C7 = 0.e0;
  real _t14C8 = 0.e0;
  real _t14C9 = -0.1e1;
  vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
  real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, refPos0B27);
  real _t14CC = prim -0026<$[]> (_t14C6, _t14CB);
  string _t14CD = " face: ";
  int _t14CE = 3;
  string _t14CF = " place: ";
  real _t14D0 = 0.e0;
  real _t14D1 = 0.e0;
  real _t14D2 = 0.e0;
  real _t14D3 = -0.1e1;
  vec3 _t14D4 = [_t14D1, _t14D2, _t14D3];
  real _t14D5 = prim •00CE<$[3]; $[3]; $[]> (_t14D4, refPos0B27);
  real _t14D6 = prim -0026<$[]> (_t14D0, _t14D5);
  real _t14D7 = 0.e0;
  real _t14D8 = 0.e0;
  real _t14D9 = -0.1e1;
  vec3 _t14DA = [_t14D7, _t14D8, _t14D9];
  real _t14DB = prim •00CE<$[3]; $[3]; $[]> (_t14DA, dPos0B28);
  real _t14DC = prim /0055 (_t14D6, _t14DB);
  vec3 _t14DD = prim *0038<$[3]> (dPos0B28, _t14DC);
  vec3 _t14DE = prim +0017<$[3]> (refPos0B27, _t14DD);
  string _t14DF = " error: ";
  real _t14E0 = 0.e0;
  real _t14E1 = 0.e0;
  real _t14E2 = 0.e0;
  real _t14E3 = -0.1e1;
  vec3 _t14E4 = [_t14E1, _t14E2, _t14E3];
  real _t14E5 = 0.e0;
  real _t14E6 = 0.e0;
  real _t14E7 = 0.e0;
  real _t14E8 = -0.1e1;
  vec3 _t14E9 = [_t14E6, _t14E7, _t14E8];
  real _t14EA = prim •00CE<$[3]; $[3]; $[]> (_t14E9, refPos0B27);
  real _t14EB = prim -0026<$[]> (_t14E5, _t14EA);
  real _t14EC = 0.e0;
  real _t14ED = 0.e0;
  real _t14EE = -0.1e1;
  vec3 _t14EF = [_t14EC, _t14ED, _t14EE];
  real _t14F0 = prim •00CE<$[3]; $[3]; $[]> (_t14EF, dPos0B28);
  real _t14F1 = prim /0055 (_t14EB, _t14F0);
  vec3 _t14F2 = prim *0038<$[3]> (dPos0B28, _t14F1);
  vec3 _t14F3 = prim +0017<$[3]> (refPos0B27, _t14F2);
  real _t14F4 = prim •00CE<$[3]; $[3]; $[]> (_t14E4, _t14F3);
  real _t14F5 = prim -0026<$[]> (_t14E0, _t14F4);
  real _t14F6 = prim |()|00B5<$[]> (_t14F5);
  string _t14F7 = " offset :";
  string _t14F8 = " dp: ";
  string _t14F9 = " otherPossibleTime: ";
  string _t14FA = "\n";
  string _t14FB = "\n original face: ";
  string _t14FC = " ";
  print (_t1447, _t1454, _t1455, _t145A, _t145B, _t14BB, _t14BC, _t14C4, _t14C5, _t14CC, _t14CD, _t14CE, _t14CF, _t14DE, _t14DF, _t14F6, _t14F7, refPos0B27, _t14F8, dPos0B28, _t14F9, faceTime1104, _t14FA, _t14FB, i1101, _t14FC);
  real _t14FD = 0.e0;
  real _t14FE = 0.e0;
  real _t14FF = 0.e0;
  real _t1500 = -0.1e1;
  vec3 _t1501 = [_t14FE, _t14FF, _t1500];
  real _t1502 = prim •00CE<$[3]; $[3]; $[]> (_t1501, refPos0B27);
  real _t1503 = prim -0026<$[]> (_t14FD, _t1502);
  real _t1504 = 0.e0;
  real _t1505 = 0.e0;
  real _t1506 = -0.1e1;
  vec3 _t1507 = [_t1504, _t1505, _t1506];
  real _t1508 = prim •00CE<$[3]; $[3]; $[]> (_t1507, dPos0B28);
  real _t1509 = prim /0055 (_t1503, _t1508);
  real _t150A = -0.1e-7;
  bool _t150B = prim >=007E (_t1509, _t150A);
  real _t150C = 0.e0;
  real _t150D = 0.e0;
  real _t150E = 0.e0;
  real _t150F = -0.1e1;
  vec3 _t1510 = [_t150D, _t150E, _t150F];
  real _t1511 = prim •00CE<$[3]; $[3]; $[]> (_t1510, refPos0B27);
  real _t1512 = prim -0026<$[]> (_t150C, _t1511);
  real _t1513 = 0.e0;
  real _t1514 = 0.e0;
  real _t1515 = -0.1e1;
  vec3 _t1516 = [_t1513, _t1514, _t1515];
  real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, dPos0B28);
  real _t1518 = prim /0055 (_t1512, _t1517);
  bool _t1519 = prim >0080 (time1102, _t1518);
  real _t151A = 0.e0;
  real _t151B = 0.e0;
  real _t151C = -0.1e1;
  vec3 _t151D = [_t151A, _t151B, _t151C];
  real _t151E = prim •00CE<$[3]; $[3]; $[]> (_t151D, dPos0B28);
  real _t151F = prim |()|00B5<$[]> (_t151E);
  real _t1520 = 0.1e-7;
  bool _t1521 = prim >=007E (_t151F, _t1520);
  bool _t1522 = prim $and01C4 (_t1519, _t1521);
  bool _t1523 = prim $and01C4 (_t150B, _t1522);
  if _t1523 {
    int _t1524 = 3;
    bool _t1525 = prim !=0086 (i1101, _t1524);
    if _t1525 {
      string _t1526 = "Saving at this face!";
      real _t1527 = 0.e0;
      real _t1528 = 0.e0;
      real _t1529 = 0.e0;
      real _t152A = -0.1e1;
      vec3 _t152B = [_t1528, _t1529, _t152A];
      real _t152C = prim •00CE<$[3]; $[3]; $[]> (_t152B, refPos0B27);
      real _t152D = prim -0026<$[]> (_t1527, _t152C);
      real _t152E = 0.e0;
      real _t152F = 0.e0;
      real _t1530 = -0.1e1;
      vec3 _t1531 = [_t152E, _t152F, _t1530];
      real _t1532 = prim •00CE<$[3]; $[3]; $[]> (_t1531, dPos0B28);
      real _t1533 = prim /0055 (_t152D, _t1532);
      real _t1534 = 0.e0;
      real _t1535 = 0.e0;
      real _t1536 = 0.e0;
      real _t1537 = -0.1e1;
      vec3 _t1538 = [_t1535, _t1536, _t1537];
      real _t1539 = prim •00CE<$[3]; $[3]; $[]> (_t1538, refPos0B27);
      real _t153A = prim -0026<$[]> (_t1534, _t1539);
      real _t153B = 0.e0;
      real _t153C = 0.e0;
      real _t153D = -0.1e1;
      vec3 _t153E = [_t153B, _t153C, _t153D];
      real _t153F = prim •00CE<$[3]; $[3]; $[]> (_t153E, dPos0B28);
      real _t1540 = prim /0055 (_t153A, _t153F);
      bool _t1541 = prim >0080 (time1102, _t1540);
      string _t1542 = "\n";
      print (_t1526, _t1533, _t1541, _t1542);
      real _t1543 = 0.e0;
      real _t1544 = 0.e0;
      real _t1545 = 0.e0;
      real _t1546 = -0.1e1;
      vec3 _t1547 = [_t1544, _t1545, _t1546];
      real _t1548 = prim •00CE<$[3]; $[3]; $[]> (_t1547, refPos0B27);
      real _t1549 = prim -0026<$[]> (_t1543, _t1548);
      real _t154A = 0.e0;
      real _t154B = 0.e0;
      real _t154C = -0.1e1;
      vec3 _t154D = [_t154A, _t154B, _t154C];
      real _t154E = prim •00CE<$[3]; $[3]; $[]> (_t154D, dPos0B28);
      time1102 = prim /0055 (_t1549, _t154E);
      face1103 = 3;
    } else {
      real _t154F = 0.e0;
      real _t1550 = 0.e0;
      real _t1551 = 0.e0;
      real _t1552 = -0.1e1;
      vec3 _t1553 = [_t1550, _t1551, _t1552];
      real _t1554 = prim •00CE<$[3]; $[3]; $[]> (_t1553, refPos0B27);
      real _t1555 = prim -0026<$[]> (_t154F, _t1554);
      real _t1556 = 0.e0;
      real _t1557 = 0.e0;
      real _t1558 = -0.1e1;
      vec3 _t1559 = [_t1556, _t1557, _t1558];
      real _t155A = prim •00CE<$[3]; $[3]; $[]> (_t1559, dPos0B28);
      faceTime1104 = prim /0055 (_t1555, _t155A);
      string _t155B = "Saving backup time: ";
      string _t155C = "\n";
      print (_t155B, faceTime1104, _t155C);
    }
  }
  int _t155D = -1;
  bool _t155E = prim !=0086 (face1103, _t155D);
  real _t155F = 0.1e1;
  real _t1560 = 0.1e-7;
  real _t1561 = prim +0017<$[]> (_t155F, _t1560);
  real _t1562 = 0.1e1;
  real _t1563 = 0.1e1;
  real _t1564 = 0.1e1;
  vec3 _t1565 = [_t1562, _t1563, _t1564];
  real _t1566 = 0.e0;
  real _t1567 = prim max0125 (time1102, _t1566);
  vec3 _t1568 = prim *0038<$[3]> (dPos0B28, _t1567);
  vec3 _t1569 = prim +0017<$[3]> (refPos0B27, _t1568);
  real _t156A = prim •00CE<$[3]; $[3]; $[]> (_t1565, _t1569);
  bool _t156B = prim >0080 (_t1561, _t156A);
  real _t156C = 0.1e-7;
  real _t156D = 0.1e-7;
  real _t156E = 0.1e-7;
  vec3 _t156F = [_t156C, _t156D, _t156E];
  real _t1570 = 0.e0;
  real _t1571 = prim max0125 (time1102, _t1570);
  vec3 _t1572 = prim *0038<$[3]> (dPos0B28, _t1571);
  vec3 _t1573 = prim +0017<$[3]> (refPos0B27, _t1572);
  vec3 _t1574 = prim +0017<$[3]> (_t156F, _t1573);
  real _t1575 = _t1574[0];
  real _t1576 = -0.e0;
  bool _t1577 = prim >0080 (_t1575, _t1576);
  real _t1578 = 0.1e-7;
  real _t1579 = 0.1e-7;
  real _t157A = 0.1e-7;
  vec3 _t157B = [_t1578, _t1579, _t157A];
  real _t157C = 0.e0;
  real _t157D = prim max0125 (time1102, _t157C);
  vec3 _t157E = prim *0038<$[3]> (dPos0B28, _t157D);
  vec3 _t157F = prim +0017<$[3]> (refPos0B27, _t157E);
  vec3 _t1580 = prim +0017<$[3]> (_t157B, _t157F);
  real _t1581 = _t1580[1];
  real _t1582 = -0.e0;
  bool _t1583 = prim >0080 (_t1581, _t1582);
  real _t1584 = 0.1e-7;
  real _t1585 = 0.1e-7;
  real _t1586 = 0.1e-7;
  vec3 _t1587 = [_t1584, _t1585, _t1586];
  real _t1588 = 0.e0;
  real _t1589 = prim max0125 (time1102, _t1588);
  vec3 _t158A = prim *0038<$[3]> (dPos0B28, _t1589);
  vec3 _t158B = prim +0017<$[3]> (refPos0B27, _t158A);
  vec3 _t158C = prim +0017<$[3]> (_t1587, _t158B);
  real _t158D = _t158C[2];
  real _t158E = -0.e0;
  bool _t158F = prim >0080 (_t158D, _t158E);
  bool _t1590 = prim $and01C4 (_t1583, _t158F);
  bool _t1591 = prim $and01C4 (_t1577, _t1590);
  bool _t1592 = prim $and01C4 (_t156B, _t1591);
  bool _t1593 = prim $and01C4 (_t155E, _t1592);
  if _t1593 {
    string _t1594 = "\nReturning via standard : ";
    real _t1595 = 0.e0;
    real _t1596 = prim max0125 (time1102, _t1595);
    real _t1597 = (real)face1103;
    vec2 _t1598 = [_t1596, _t1597];
    string _t1599 = "\n";
    print (_t1594, _t1598, _t1599);
    real _t159A = 0.e0;
    real _t159B = prim max0125 (time1102, _t159A);
    real _t159C = (real)face1103;
    vec2 _t159D = [_t159B, _t159C];
    return _t159D;
  } else {
    real _t159E = -inf;
    bool _t159F = prim ==0084 (_t159E, faceTime1104);
    if _t159F {
      string _t15A0 = "\nReturning via fail : ";
      real _t15A1 = -0.1e1;
      real _t15A2 = -0.1e1;
      vec2 _t15A3 = [_t15A1, _t15A2];
      string _t15A4 = "\n";
      print (_t15A0, _t15A3, _t15A4);
      real _t15A5 = -0.1e1;
      real _t15A6 = -0.1e1;
      vec2 _t15A7 = [_t15A5, _t15A6];
      return _t15A7;
    } else {
      string _t15A8 = "\nReturning via backup : ";
      real _t15A9 = 0.e0;
      real _t15AA = prim max0125 (faceTime1104, _t15A9);
      real _t15AB = (real)i1101;
      vec2 _t15AC = [_t15AA, _t15AB];
      string _t15AD = "\n";
      print (_t15A8, _t15AC, _t15AD);
      real _t15AE = 0.e0;
      real _t15AF = prim max0125 (faceTime1104, _t15AE);
      real _t15B0 = (real)i1101;
      vec2 _t15B1 = [_t15AF, _t15B0];
      return _t15B1;
    }
  }
}
function Femdata: Mesh#0 domain15B4 (Femdata: Space arg015B5)
{
  Femdata: Mesh _t15B6 = extractFem(arg015B5, Mesh);
  return _t15B6;
}
function Femdata: Space#0 space15B7 (Femdata: FemFunc arg015B8)
{
  Femdata: Space _t15B9 = extractFem(arg015B8, Space);
  return _t15B9;
}
function Femdata: FuncCell#0 funcCell15BA (Femdata: FemFunc arg015BB, Femdata: MeshCell arg115BC)
{
  int _t15BD = extractFemItem(CellIndex(MeshCell), int, arg115BC);
  Femdata: FuncCell _t15BE = loadFem(FuncCell, arg015BB, _t15BD);
  return _t15BE;
}
function bool#1 insideTest15CC (vec3 x15CD)
{
  real _t15CE = 0.5e0;
  real _t15CF = 0.5e0;
  real _t15D0 = 0.5e0;
  vec3 _t15D1 = [_t15CE, _t15CF, _t15D0];
  vec3 mid15D2 = prim -0026<$[3]> (x15CD, _t15D1);
  bool _t15D3;
  real _t15D4 = mid15D2[0];
  real _t15D5 = prim |()|00B5<$[]> (_t15D4);
  real _t15D6 = 0.5e0;
  bool _t15D7 = prim <=007C (_t15D5, _t15D6);
  if _t15D7 {
    bool _t15D8;
    real _t15D9 = mid15D2[1];
    real _t15DA = prim |()|00B5<$[]> (_t15D9);
    real _t15DB = 0.5e0;
    bool _t15DC = prim <=007C (_t15DA, _t15DB);
    if _t15DC {
      real _t15DD = mid15D2[2];
      real _t15DE = prim |()|00B5<$[]> (_t15DD);
      real _t15DF = 0.5e0;
      _t15D8 = prim <=007C (_t15DE, _t15DF);
    } else {
      _t15D8 = false;
    }
    _t15D3 = _t15D8;
  } else {
    _t15D3 = false;
  }
  return _t15D3;
}
function vec3#3 fStep15E0 (vec3 x15E1)
{
  real _t15E2 = 0.5e0;
  real _t15E3 = 0.5e0;
  real _t15E4 = 0.5e0;
  vec3 _t15E5 = [_t15E2, _t15E3, _t15E4];
  vec3 xp15E6 = prim -0026<$[3]> (x15E1, _t15E5);
  real f15E7 = prim •00CE<$[3]; $[3]; $[]> (xp15E6, xp15E6);
  real _t15E8 = 0.2e1;
  vec3 gf15E9 = prim *0036<$[3]> (_t15E8, xp15E6);
  real _t15EA = prim •00CE<$[3]; $[3]; $[]> (gf15E9, gf15E9);
  vec3 _t15EB = prim /0057<$[3]> (gf15E9, _t15EA);
  real _t15EC = prim -0026<$[]> (v00479, f15E7);
  vec3 _t15ED = prim *0038<$[3]> (_t15EB, _t15EC);
  return _t15ED;
}
function tensor[3,3]#1 fPerp15EE (vec3 x15EF)
{
  real _t15F0 = 0.5e0;
  real _t15F1 = 0.5e0;
  real _t15F2 = 0.5e0;
  vec3 _t15F3 = [_t15F0, _t15F1, _t15F2];
  vec3 xp15F4 = prim -0026<$[3]> (x15EF, _t15F3);
  real _t15F5 = 0.2e1;
  vec3 gf15F6 = prim *0036<$[3]> (_t15F5, xp15F4);
  vec3 n15F7 = prim normalize0137<$[3]> (gf15F6);
  tensor[3,3] _t15F8 = prim $id01B9<%3> ();
  tensor[3,3] _t15F9 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (n15F7, n15F7);
  tensor[3,3] _t15FA = prim -0026<$[3,3]> (_t15F8, _t15F9);
  return _t15FA;
}
function real#1 fStrength15FB (vec3 x15FC)
{
  real _t15FD = 0.5e0;
  real _t15FE = 0.5e0;
  real _t15FF = 0.5e0;
  vec3 _t1600 = [_t15FD, _t15FE, _t15FF];
  vec3 xp1601 = prim -0026<$[3]> (x15FC, _t1600);
  real _t1602 = 0.2e1;
  vec3 gf1603 = prim *0036<$[3]> (_t1602, xp1601);
  real _t1604 = prim |()|00B5<$[3]> (gf1603);
  return _t1604;
}
function real#1 phi1605 (real r1606)
{
  real _t1607 = 0.1e1;
  real _t1608 = prim -0026<$[]> (_t1607, r1606);
  int _t1609 = 4;
  real _t160A = prim ^0068 (_t1608, _t1609);
  return _t160A;
}
function real#1 phi'160B (real r160C)
{
  int _t160D = -4;
  real _t160E = (real)_t160D;
  real _t160F = 0.1e1;
  real _t1610 = prim -0026<$[]> (_t160F, r160C);
  int _t1611 = 3;
  real _t1612 = prim ^0068 (_t1610, _t1611);
  real _t1613 = prim *0034 (_t160E, _t1612);
  return _t1613;
}
function real#2 enr1614 (vec3 x1615)
{
  real _t1616 = prim |()|00B5<$[3]> (x1615);
  real _t1617 = prim /0055 (_t1616, rad0477);
  real _t1618 = func phi1605 (_t1617);
  return _t1618;
}
function vec3#1 frc1619 (vec3 x161A)
{
  real _t161B = prim |()|00B5<$[3]> (x161A);
  real _t161C = prim /0055 (_t161B, rad0477);
  real _t161D = func phi'160B (_t161C);
  real _t161E = 0.1e1;
  real _t161F = prim /0055 (_t161E, rad0477);
  real _t1620 = prim *0034 (_t161D, _t161F);
  vec3 _t1621 = prim *0036<$[3]> (_t1620, x161A);
  real _t1622 = prim |()|00B5<$[3]> (x161A);
  vec3 _t1623 = prim /0057<$[3]> (_t1621, _t1622);
  return _t1623;
}
globalInit {
  int _t046B = 0;
  int _t0469 = 1;
  int _t046D = extractFemItem(NumCell(Mesh), int, meshData0467);
  int _t046C = prim -0024 (_t046D, _t0469);
  int[] _t0470 = prim $range01C3 (_t046B, _t046C);
  Femdata: MeshCell[] _t0471 = {};
  foreach _t046F in _t0470 {
    Femdata: MeshCell _t0472 = loadFem(MeshCell, meshData0467, _t046F);
    _t0471 = prim @0010<Femdata: MeshCell> (_t0471, _t0472);
  }
  0cell_meshData0468 = _t0471;
  space0473 = loadFem(Space, 0space0473_intermedateGlobal0474, meshData0467);
  data0475 = loadFem(FemFunc, 0data0475_intermedateGlobal0476, space0473);
  int _t15B2 = 3;
  dimm15B3 = _t15B2;
  Femdata: Space _t15BF = extractFem(data0475, Space);
  Femdata: Space _t15C0 = extractFem(data0475, Space);
  Femdata: Mesh _t15C1 = extractFem(_t15C0, Mesh);
  field(3)[] _t15C2 = femField(data0475,_t15C1,field(3)[],refField,findPos0485 );
  Femdata: Space _t15C3 = extractFem(data0475, Space);
  Femdata: Mesh _t15C4 = extractFem(_t15C3, Mesh);
  Femdata: Space _t15C5 = extractFem(data0475, Space);
  Femdata: Mesh _t15C6 = extractFem(_t15C5, Mesh);
  Femdata: Space _t15C7 = extractFem(data0475, Space);
  Femdata: Mesh _t15C8 = extractFem(_t15C7, Mesh);
  field(3)[3] _t15C9 = femField(_t15C4,_t15C8,field(3)[3],InvTransform,findPos0485 );
  F15CA = prim ∘0164<#∞; %3; $[]; %3; $[3]> (_t15C2, _t15C9);
  simplex15CB = func refcell04D1 (meshData0467);
}
strand particle (vec3 pos01624, real hh01625) in 3D {
  output vec3 pos1626;
  output vec3 _pos1627;
  real hh1628;
  vec3 step1629;
  bool found162A;
  int nfs162B;
  int test162C;
  int testp162D;
  {
    pos1626 = pos01624;
    _pos1627 = pos1626;
    hh1628 = hh01625;
    step1629 = prim $zero01BB<$[3]> ();
    found162A = false;
    nfs162B = 0;
    test162C = 1;
    testp162D = 0;
  }
  update
  {
    bool _t162E;
    bool _t162F = func insideTest15CC (pos1626);
    bool _t1630 = prim !00BC (_t162F);
    if _t1630 {
      _t162E = true;
    } else {
      real _t1631 = func fStrength15FB (pos1626);
      real _t1632 = 0.e0;
      _t162E = prim ==0084 (_t1631, _t1632);
    }
    if _t162E {
      die;
    }
    bool _t1633 = prim !00BC (found162A);
    if _t1633 {
      step1629 = func fStep15E0 (pos1626);
      pos1626 = prim +0017<$[3]> (pos1626, step1629);
      _pos1627 = pos1626;
      real _t1634 = prim |()|00B5<$[3]> (step1629);
      real _t1635 = prim /0055 (_t1634, rad0477);
      bool _t1636 = prim >0080 (_t1635, eps0478);
      if _t1636 {
        int _t1637 = 1;
        nfs162B = prim +0015 (nfs162B, _t1637);
        int _t1638 = 10;
        bool _t1639 = prim >007F (nfs162B, _t1638);
        if _t1639 {
          die;
        }
      } else {
        found162A = true;
        testp162D = 1;
      }
    } else {
      vec3 _t163A = func fStep15E0 (pos1626);
      pos1626 = prim +0017<$[3]> (pos1626, _t163A);
      _pos1627 = pos1626;
      step1629 = prim $zero01BB<$[3]> ();
      real oldE163B = 0.e0;
      vec3 force163C = prim $zero01BB<$[3]> ();
      int nn163D = 0;
      particle[] _t163E = prim sphere0198<particle> (_pos1627, rad0477);
      foreach P163F in _t163E {
        vec3 _t1640 = P163F.pos1626;
        vec3 _t1641 = prim -0026<$[3]> (_t1640, pos1626);
        real _t1642 = func enr1614 (_t1641);
        oldE163B = prim +0017<$[]> (oldE163B, _t1642);
        vec3 _t1643 = P163F.pos1626;
        vec3 _t1644 = prim -0026<$[3]> (_t1643, pos1626);
        vec3 _t1645 = func frc1619 (_t1644);
        force163C = prim +0017<$[3]> (force163C, _t1645);
        int _t1646 = 1;
        nn163D = prim +0015 (nn163D, _t1646);
      }
      int _t1647 = 0;
      bool _t1648 = prim ==0082 (_t1647, nn163D);
      if _t1648 {
        real _t1649 = 0.5e0;
        real _t164A = prim *0034 (_t1649, rad0477);
        real _t164B = 0.e0;
        real _t164C = 0.e0;
        vec3 _t164D = [_t164A, _t164B, _t164C];
        vec3 _t164E = prim +0017<$[3]> (pos1626, _t164D);
        new particle (_t164E, hh1628);
        continue;
      }
      tensor[3,3] _t164F = func fPerp15EE (pos1626);
      force163C = prim •00CE<$[3,3]; $[3]; $[3]> (_t164F, force163C);
      vec3 es1650 = prim *0036<$[3]> (hh1628, force163C);
      real _t1651 = prim |()|00B5<$[3]> (es1650);
      bool _t1652 = prim >0080 (_t1651, rad0477);
      if _t1652 {
        real _t1653 = prim |()|00B5<$[3]> (es1650);
        real _t1654 = prim /0055 (rad0477, _t1653);
        hh1628 = prim *0034 (hh1628, _t1654);
        real _t1655 = prim |()|00B5<$[3]> (es1650);
        real _t1656 = prim /0055 (rad0477, _t1655);
        es1650 = prim *0038<$[3]> (es1650, _t1656);
      }
      vec3 samplePos1657 = prim +0017<$[3]> (pos1626, es1650);
      vec3 fs1658 = func fStep15E0 (samplePos1657);
      real _t1659 = prim |()|00B5<$[3]> (fs1658);
      real _t165A = prim |()|00B5<$[3]> (es1650);
      real _t165B = prim /0055 (_t1659, _t165A);
      real _t165C = 0.5e0;
      bool _t165D = prim >0080 (_t165B, _t165C);
      if _t165D {
        real _t165E = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t165E);
        continue;
      }
      vec3 oldPos165F = pos1626;
      vec3 up1660 = prim +0017<$[3]> (fs1658, es1650);
      pos1626 = prim +0017<$[3]> (pos1626, up1660);
      _pos1627 = pos1626;
      particle[] _t1661 = prim sphere0198<particle> (_pos1627, rad0477);
      real accum1666 = 0.e0;
      foreach P1662 in _t1661 {
        vec3 _t1663 = P1662.pos1626;
        vec3 _t1664 = prim -0026<$[3]> (pos1626, _t1663);
        real _t1665 = func enr1614 (_t1664);
        accum1666 = prim +0017<$[]> (accum1666, _t1665);
      }
      real newE1667 = accum1666;
      real _t1668 = prim -0026<$[]> (newE1667, oldE163B);
      real _t1669 = 0.5e0;
      vec3 _t166A = prim -0026<$[3]> (pos1626, oldPos165F);
      vec3 _t166B = prim *0036<$[3]> (_t1669, _t166A);
      vec3 _t166C = prim unary -008B<$[3]> (force163C);
      real _t166D = prim •00CE<$[3]; $[3]; $[]> (_t166B, _t166C);
      bool _t166E = prim >0080 (_t1668, _t166D);
      if _t166E {
        pos1626 = oldPos165F;
        _pos1627 = pos1626;
        real _t166F = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t166F);
        continue;
      }
      real _t1670 = 0.11e1;
      hh1628 = prim *0034 (hh1628, _t1670);
      step1629 = up1660;
      int _t1671 = 5;
      bool _t1672 = prim <0079 (nn163D, _t1671);
      if _t1672 {
        real _t1673 = 0.5e0;
        real _t1674 = prim *0034 (_t1673, rad0477);
        vec3 _t1675 = prim normalize0137<$[3]> (es1650);
        vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
        vec3 _t1677 = prim +0017<$[3]> (pos1626, _t1676);
        new particle (_t1677, hh1628);
      }
    }
  }
}
collection {
  foreach x1678 in ipos047A {
    real _t1679 = 0.1e1;
    new particle (x1678, _t1679);
  }
}
update {
  int res167A= sum<int> { (P167D) => {
      int _t167E = P167D.test162C;
      return _t167E;
    } (P167B, P167B)
  | P167B in all };
  int num1680 = res167A;
  int res1681= sum<int> { (P1684) => {
      int _t1685 = P1684.testp162D;
      return _t1685;
    } (P1682, P1682)
  | P1682 in all };
  int numFound1687 = res1681;
  bool res1688= all { (P168B) => {
      bool _t168C = P168B.found162A;
      return _t168C;
    } (P1689, P1689)
  | P1689 in all };
  bool allFound168E = res1688;
  real res168F= max<real> { (P1693) => {
      vec3 _t1694 = P1693.step1629;
      real _t1695 = prim |()|00B5<$[3]> (_t1694);
      return _t1695;
    } (P1690, P1690)
  | P1690 in all };
  real maxStep1697 = res168F;
  real res1698= max<real> { (P16A1) => {
      vec3 _t16A2 = P16A1.pos1626;
      real _t16A3 = 0.5e0;
      real _t16A4 = 0.5e0;
      real _t16A5 = 0.5e0;
      vec3 _t16A6 = [_t16A3, _t16A4, _t16A5];
      vec3 _t16A7 = prim -0026<$[3]> (_t16A2, _t16A6);
      real _t16A8 = prim |()|00B5<$[3]> (_t16A7);
      return _t16A8;
    } (P1699, P1699)
  | P1699 in all };
  real maxDist16AA = res1698;
  real res16AB= min<real> { (P16B4) => {
      vec3 _t16B5 = P16B4.pos1626;
      real _t16B6 = 0.5e0;
      real _t16B7 = 0.5e0;
      real _t16B8 = 0.5e0;
      vec3 _t16B9 = [_t16B6, _t16B7, _t16B8];
      vec3 _t16BA = prim -0026<$[3]> (_t16B5, _t16B9);
      real _t16BB = prim |()|00B5<$[3]> (_t16BA);
      return _t16BB;
    } (P16AC, P16AC)
  | P16AC in all };
  real minDist16BD = res16AB;
  vec2 averageDist16BE = [minDist16BD, maxDist16AA];
  string _t16BF = "One run:";
  string _t16C0 = " and ";
  real _t16C1 = prim /0055 (maxStep1697, rad0477);
  string _t16C2 = " and ";
  real _t16C3 = prim /0055 (maxStep1697, rad0477);
  bool _t16C4 = prim <007A (_t16C3, eps0478);
  string _t16C5 = " and ";
  string _t16C6 = " of ";
  string _t16C7 = " and ";
  string _t16C8 = "\n";
  print (_t16BF, allFound168E, _t16C0, _t16C1, _t16C2, _t16C4, _t16C5, numFound1687, _t16C6, num1680, _t16C7, averageDist16BE, _t16C8);
  if allFound168E {
    real _t16C9 = prim /0055 (maxStep1697, rad0477);
    bool _t16CA = prim <007A (_t16C9, eps0478);
    if _t16CA {
      string _t16CB = "CONVERGED!\n";
      print (_t16CB);
      stabilize_all;
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (1)) start */
properties: GlobalInit,StabilizeAll,GlobalReduce,StrandSets,GlobalUpdate,NewStrands,StrandCommunication,StrandsMayDie,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData0467;
input FemData:Space 0space0473_intermedateGlobal0474;
input FemData:FemFunc 0data0475_intermedateGlobal0476;
input real rad0477 = <default>;
input real eps0478 = <default>;
input real v00479 = <default>;
input vec3[] ipos047A;
constants {
  rad0477 = 0.1e-1;
  eps0478 = 0.1e-1;
  v00479 = 0.625e-1;
}
function bool#0 !=047B (Femdata: MeshCell cell1047C, Femdata: MeshCell cell1047D)
{
  int _t047E = extractFemItem(CellIndex(Mesh), int, cell1047C);
  int _t047F = extractFemItem(CellIndex(Mesh), int, cell1047D);
  bool _t0480 = prim !=0086 (_t047E, _t047F);
  return _t0480;
}
function bool#0 ==0481 (Femdata: MeshCell cell1047C, Femdata: MeshCell cell1047D)
{
  int _t0482 = extractFemItem(CellIndex(Mesh), int, cell1047C);
  int _t0483 = extractFemItem(CellIndex(Mesh), int, cell1047D);
  bool _t0484 = prim ==0082 (_t0482, _t0483);
  return _t0484;
}
function Femdata: MeshPos#0 findPos0485 (Femdata: Mesh mesh0486, vec3 pos0487)
{
  real _t0488 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0489 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t048A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn048B = [_t0488, _t0489, _t048A];
  newtonInt048C = 0;
  cellInt048D = extractFemItem(StartCell(Mesh), int, mesh0486);
  int _t048E = extractFemItem(NumCell(Mesh), int, mesh0486);
  int _t048F = 1;
  numCell0490 = prim -0024 (_t048E, _t048F);
  yayCells0491 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0486, pos0487 : vec3);
  foreach cellItter0495 in yayCells0491 {
    real _t0492 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0493 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0494 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn048B = [_t0492, _t0493, _t0494];
    cellInt048D = cellItter0495;
    field(3)[3] _t0496 = femField(mesh0486,cellInt048D,field(3)[3],Transform,);
    field(3)[3,3] _t0497 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0496);
    field(3)[3,3] _t0498 = prim inv015E<#∞; %3> (_t0497);
    real _t0499 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t049A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t049B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t049C = [_t0499, _t049A, _t049B];
    A049D = prim @00A5<#∞; %3; $[3,3]> (_t0498, _t049C);
    int _t049E = 0;
    int _t049F = 16;
    int[] _t04A0 = prim $range01C3 (_t049E, _t049F);
    foreach newtonItter04CF in _t04A0 {
      field(3)[3] _t04A1 = femField(mesh0486,cellInt048D,field(3)[3],Transform,);
      field(3)[3] _t04A2 = prim -002E<#∞; %3; $[3]> (_t04A1, pos0487);
      field(3)[3] _t04A3 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A049D, _t04A2);
      delta04A4 = prim @00A5<#∞; %3; $[3]> (_t04A3, xn048B);
      xn048B = prim -0026<$[3]> (xn048B, delta04A4);
      real _t04A5 = 0.1e-7;
      real _t04A6 = 0.1e-7;
      real _t04A7 = prim *0034 (_t04A5, _t04A6);
      real _t04A8 = prim •00CE<$[3]; $[3]; $[]> (delta04A4, delta04A4);
      bool _t04A9 = prim >=007E (_t04A7, _t04A8);
      if _t04A9 {
        real _t04AA = 0.1e1;
        real _t04AB = 0.1e-7;
        real _t04AC = prim +0017<$[]> (_t04AA, _t04AB);
        real _t04AD = 0.1e1;
        real _t04AE = 0.1e1;
        real _t04AF = 0.1e1;
        vec3 _t04B0 = [_t04AD, _t04AE, _t04AF];
        real _t04B1 = prim •00CE<$[3]; $[3]; $[]> (_t04B0, xn048B);
        bool _t04B2 = prim >0080 (_t04AC, _t04B1);
        real _t04B3 = 0.1e-7;
        real _t04B4 = 0.1e-7;
        real _t04B5 = 0.1e-7;
        vec3 _t04B6 = [_t04B3, _t04B4, _t04B5];
        vec3 _t04B7 = prim +0017<$[3]> (_t04B6, xn048B);
        real _t04B8 = _t04B7[0];
        real _t04B9 = -0.e0;
        bool _t04BA = prim >0080 (_t04B8, _t04B9);
        real _t04BB = 0.1e-7;
        real _t04BC = 0.1e-7;
        real _t04BD = 0.1e-7;
        vec3 _t04BE = [_t04BB, _t04BC, _t04BD];
        vec3 _t04BF = prim +0017<$[3]> (_t04BE, xn048B);
        real _t04C0 = _t04BF[1];
        real _t04C1 = -0.e0;
        bool _t04C2 = prim >0080 (_t04C0, _t04C1);
        real _t04C3 = 0.1e-7;
        real _t04C4 = 0.1e-7;
        real _t04C5 = 0.1e-7;
        vec3 _t04C6 = [_t04C3, _t04C4, _t04C5];
        vec3 _t04C7 = prim +0017<$[3]> (_t04C6, xn048B);
        real _t04C8 = _t04C7[2];
        real _t04C9 = -0.e0;
        bool _t04CA = prim >0080 (_t04C8, _t04C9);
        bool _t04CB = prim $and01C4 (_t04C2, _t04CA);
        bool _t04CC = prim $and01C4 (_t04BA, _t04CB);
        bool _t04CD = prim $and01C4 (_t04B2, _t04CC);
        if _t04CD {
          Femdata: MeshPos _t04CE = extractFemItemN((mesh0486, cellInt048D, xn048B, pos0487),AllBuild(MeshPos),);
          return _t04CE;
        }
      }
    }
  }
  Femdata: MeshPos _t04D0 = extractFemItemN((mesh0486),InvalidBuild(MeshPos),);
  return _t04D0;
}
function Femdata: RefCell#1 refcell04D1 (Femdata: Mesh arg004D2)
{
  Femdata: RefCell _t04D3 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004D2);
  return _t04D3;
}
function Femdata: MeshCell[]#0 cells04D4 (Femdata: Mesh arg004D5)
{
  Femdata: MeshCell[] _t04D6 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004D5);
  return _t04D6;
}
function Femdata: MeshCell[]#0 cells04D7 (Femdata: Mesh arg004D5)
{
  int _t04D8 = 0;
  int _t04D9 = extractFemItem(NumCell(Mesh), int, arg004D5);
  int[] _t04DA = prim $range01C3 (_t04D8, _t04D9);
  Femdata: MeshCell[] accum04DD = {};
  foreach i04DB in _t04DA {
    Femdata: MeshCell _t04DC = loadFem(MeshCell, arg004D5, i04DB);
    accum04DD = prim @0010<Femdata: MeshCell> (accum04DD, _t04DC);
  }
  return accum04DD;
}
function int#0 numCell04DE (Femdata: Mesh arg004D2)
{
  int _t04DF = extractFemItem(NumCell(Mesh), int, arg004D2);
  return _t04DF;
}
function tensor[3,3,3,3]#0 mesh_t_transform_304E0 (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04E4 = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  field(3)[3,3] _t04E5 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04E4);
  field(3)[3,3,3] _t04E6 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04E5);
  field(3)[3,3,3,3] _t04E7 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t04E6);
  tensor[3,3,3,3] _t04E8 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t04E7, pos04E1);
  return _t04E8;
}
function tensor[3,3,3]#0 mesh_t_transform_204E9 (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04EA = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  field(3)[3,3] _t04EB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04EA);
  field(3)[3,3,3] _t04EC = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04EB);
  tensor[3,3,3] _t04ED = prim @00A5<#∞; %3; $[3,3,3]> (_t04EC, pos04E1);
  return _t04ED;
}
function tensor[3,3]#0 mesh_t_transform_104EE (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04EF = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  field(3)[3,3] _t04F0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04EF);
  tensor[3,3] _t04F1 = prim @00A5<#∞; %3; $[3,3]> (_t04F0, pos04E1);
  return _t04F1;
}
function vec3#2 mesh_t_transform_004F2 (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04F3 = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  vec3 _t04F4 = prim @00A5<#∞; %3; $[3]> (_t04F3, pos04E1);
  return _t04F4;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse04F5 (vec3 pos04F6, int cellInt04F7, Femdata: Mesh mesh04F8)
{
  real _t04F9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04FA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04FB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04FC = [_t04F9, _t04FA, _t04FB];
  field(3)[3] _t04FD = femField(mesh04F8,cellInt04F7,field(3)[3],Transform,);
  field(3)[3,3] _t04FE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04FD);
  field(3)[3,3] _t04FF = prim inv015E<#∞; %3> (_t04FE);
  real _t0500 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0501 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0502 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t0503 = [_t0500, _t0501, _t0502];
  A0504 = prim @00A5<#∞; %3; $[3,3]> (_t04FF, _t0503);
  int _t0505 = 0;
  int _t0506 = 16;
  int[] _t0507 = prim $range01C3 (_t0505, _t0506);
  foreach itter0537 in _t0507 {
    field(3)[3] _t0508 = femField(mesh04F8,cellInt04F7,field(3)[3],Transform,);
    field(3)[3] _t0509 = prim -002E<#∞; %3; $[3]> (_t0508, pos04F6);
    field(3)[3] _t050A = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0504, _t0509);
    delta050B = prim @00A5<#∞; %3; $[3]> (_t050A, xn04FC);
    xn04FC = prim -0026<$[3]> (xn04FC, delta050B);
    real _t050C = 0.1e-7;
    real _t050D = 0.1e-7;
    real _t050E = prim *0034 (_t050C, _t050D);
    real _t050F = prim •00CE<$[3]; $[3]; $[]> (delta050B, delta050B);
    bool _t0510 = prim >=007E (_t050E, _t050F);
    if _t0510 {
      real _t0511 = 0.1e1;
      real _t0512 = 0.1e-7;
      real _t0513 = prim +0017<$[]> (_t0511, _t0512);
      real _t0514 = 0.1e1;
      real _t0515 = 0.1e1;
      real _t0516 = 0.1e1;
      vec3 _t0517 = [_t0514, _t0515, _t0516];
      real _t0518 = prim •00CE<$[3]; $[3]; $[]> (_t0517, xn04FC);
      bool _t0519 = prim >0080 (_t0513, _t0518);
      real _t051A = 0.1e-7;
      real _t051B = 0.1e-7;
      real _t051C = 0.1e-7;
      vec3 _t051D = [_t051A, _t051B, _t051C];
      vec3 _t051E = prim +0017<$[3]> (_t051D, xn04FC);
      real _t051F = _t051E[0];
      real _t0520 = -0.e0;
      bool _t0521 = prim >0080 (_t051F, _t0520);
      real _t0522 = 0.1e-7;
      real _t0523 = 0.1e-7;
      real _t0524 = 0.1e-7;
      vec3 _t0525 = [_t0522, _t0523, _t0524];
      vec3 _t0526 = prim +0017<$[3]> (_t0525, xn04FC);
      real _t0527 = _t0526[1];
      real _t0528 = -0.e0;
      bool _t0529 = prim >0080 (_t0527, _t0528);
      real _t052A = 0.1e-7;
      real _t052B = 0.1e-7;
      real _t052C = 0.1e-7;
      vec3 _t052D = [_t052A, _t052B, _t052C];
      vec3 _t052E = prim +0017<$[3]> (_t052D, xn04FC);
      real _t052F = _t052E[2];
      real _t0530 = -0.e0;
      bool _t0531 = prim >0080 (_t052F, _t0530);
      bool _t0532 = prim $and01C4 (_t0529, _t0531);
      bool _t0533 = prim $and01C4 (_t0521, _t0532);
      bool _t0534 = prim $and01C4 (_t0519, _t0533);
      if _t0534 {
        Femdata: MeshPos _t0535 = extractFemItemN((mesh04F8, cellInt04F7, xn04FC, pos04F6),AllBuild(MeshPos),);
        return _t0535;
      } else {
        Femdata: MeshPos _t0536 = extractFemItemN((mesh04F8),InvalidBuild(MeshPos),);
        return _t0536;
      }
    }
  }
  Femdata: MeshPos _t0538 = extractFemItemN((mesh04F8),InvalidBuild(MeshPos),);
  return _t0538;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos0539 (Femdata: MeshPos pos053A)
{
  bool _t053B = extractFemItem(WorldTest(MeshPos), bool, pos053A);
  if _t053B {
    vec3 _t053C = extractFemItem(RefPos(MeshPos), vec3, pos053A);
    int _t053D = extractFemItem(CellIndex(MeshPos), int, pos053A);
    Femdata: Mesh _t053E = extractFem(pos053A, Mesh);
    vec3 _t053F = func mesh_t_transform_004F2 (_t053C, _t053D, _t053E);
    Femdata: MeshPos _t0540 = extractFemItemN((pos053A, _t053F),NewWorld(MeshPos),);
    return _t0540;
  } else {
    return pos053A;
  }
}
function vec3#0 worldPos0541 (Femdata: MeshPos pos053A)
{
  vec3 _t0542 = extractFemItem(RefPos(MeshPos), vec3, pos053A);
  int _t0543 = extractFemItem(CellIndex(MeshPos), int, pos053A);
  Femdata: Mesh _t0544 = extractFem(pos053A, Mesh);
  vec3 _t0545 = func mesh_t_transform_004F2 (_t0542, _t0543, _t0544);
  return _t0545;
}
function Femdata: MeshPos#0 $exitPos0546 (Femdata: Mesh mesh0547, int cellId0548, vec3 refPos0549, vec3 dPos054A, real[2] time054B)
{
  int _t054C = -1;
  real _t054D = time054B[1];
  int _t054E = prim $r2i01B7 (_t054D);
  int[2] _t0550 = func nextCell4054F (_t054E, cellId0548, mesh0547);
  int _t0551 = 0;
  int _t0552 = prim $sub01C0<int; %2> (_t0550, _t0551);
  bool _t0553 = prim !=0086 (_t054C, _t0552);
  if _t0553 {
    string _t0554 = "face ";
    real _t0555 = time054B[1];
    int _t0556 = prim $r2i01B7 (_t0555);
    string _t0557 = " to ";
    real _t0558 = time054B[1];
    int _t0559 = prim $r2i01B7 (_t0558);
    int[2] _t055A = func nextCell4054F (_t0559, cellId0548, mesh0547);
    int _t055B = 1;
    int _t055C = prim $sub01C0<int; %2> (_t055A, _t055B);
    string _t055D = "\n";
    string _t055E = "got: ";
    real _t055F = 0.1e1;
    real _t0560 = 0.e0;
    real _t0561 = 0.e0;
    real _t0562 = 0.e0;
    vec4 _t0563 = [_t055F, _t0560, _t0561, _t0562];
    real _t0564 = 0.e0;
    real _t0565 = 0.1e1;
    real _t0566 = 0.e0;
    real _t0567 = 0.e0;
    vec4 _t0568 = [_t0564, _t0565, _t0566, _t0567];
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    real _t056B = 0.1e1;
    real _t056C = 0.e0;
    vec4 _t056D = [_t0569, _t056A, _t056B, _t056C];
    real _t056E = 0.971445146547e-16;
    real _t056F = 0.e0;
    real _t0570 = 0.e0;
    real _t0571 = 0.1e1;
    vec4 _t0572 = [_t056E, _t056F, _t0570, _t0571];
    tensor[4,4] _t0573 = [_t0563, _t0568, _t056D, _t0572];
    real _t0574 = 0.57735026919e0;
    real _t0575 = 0.57735026919e0;
    real _t0576 = 0.57735026919e0;
    real _t0577 = -0.57735026919e0;
    vec4 _t0578 = [_t0574, _t0575, _t0576, _t0577];
    real _t0579 = -0.333333333333e0;
    real _t057A = 0.666666666667e0;
    real _t057B = -0.333333333333e0;
    real _t057C = 0.333333333333e0;
    vec4 _t057D = [_t0579, _t057A, _t057B, _t057C];
    real _t057E = -0.333333333333e0;
    real _t057F = -0.333333333333e0;
    real _t0580 = 0.666666666667e0;
    real _t0581 = 0.333333333333e0;
    vec4 _t0582 = [_t057E, _t057F, _t0580, _t0581];
    real _t0583 = 0.971445146547e-16;
    real _t0584 = 0.e0;
    real _t0585 = 0.e0;
    real _t0586 = 0.1e1;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    tensor[4,4] _t0588 = [_t0578, _t057D, _t0582, _t0587];
    real _t0589 = -0.333333333333e0;
    real _t058A = 0.666666666667e0;
    real _t058B = -0.333333333333e0;
    real _t058C = 0.333333333333e0;
    vec4 _t058D = [_t0589, _t058A, _t058B, _t058C];
    real _t058E = -0.57735026919e0;
    real _t058F = -0.57735026919e0;
    real _t0590 = -0.57735026919e0;
    real _t0591 = 0.57735026919e0;
    vec4 _t0592 = [_t058E, _t058F, _t0590, _t0591];
    real _t0593 = -0.333333333333e0;
    real _t0594 = -0.333333333333e0;
    real _t0595 = 0.666666666667e0;
    real _t0596 = 0.333333333333e0;
    vec4 _t0597 = [_t0593, _t0594, _t0595, _t0596];
    real _t0598 = 0.971445146547e-16;
    real _t0599 = 0.e0;
    real _t059A = 0.e0;
    real _t059B = 0.1e1;
    vec4 _t059C = [_t0598, _t0599, _t059A, _t059B];
    tensor[4,4] _t059D = [_t058D, _t0592, _t0597, _t059C];
    real _t059E = -0.333333333333e0;
    real _t059F = 0.666666666667e0;
    real _t05A0 = -0.333333333333e0;
    real _t05A1 = 0.333333333333e0;
    vec4 _t05A2 = [_t059E, _t059F, _t05A0, _t05A1];
    real _t05A3 = -0.333333333333e0;
    real _t05A4 = -0.333333333333e0;
    real _t05A5 = 0.666666666667e0;
    real _t05A6 = 0.333333333333e0;
    vec4 _t05A7 = [_t05A3, _t05A4, _t05A5, _t05A6];
    real _t05A8 = 0.57735026919e0;
    real _t05A9 = 0.57735026919e0;
    real _t05AA = 0.57735026919e0;
    real _t05AB = -0.57735026919e0;
    vec4 _t05AC = [_t05A8, _t05A9, _t05AA, _t05AB];
    real _t05AD = 0.971445146547e-16;
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.1e1;
    vec4 _t05B1 = [_t05AD, _t05AE, _t05AF, _t05B0];
    tensor[4,4] _t05B2 = [_t05A2, _t05A7, _t05AC, _t05B1];
    tensor[4,4][4] _t05B3 = {_t0573, _t0588, _t059D, _t05B2};
    real _t05B4 = 0.57735026919e0;
    real _t05B5 = -0.1e1;
    real _t05B6 = -0.1e1;
    real _t05B7 = 0.1e1;
    vec4 _t05B8 = [_t05B4, _t05B5, _t05B6, _t05B7];
    real _t05B9 = 0.57735026919e0;
    real _t05BA = 0.1e1;
    real _t05BB = 0.e0;
    real _t05BC = 0.e0;
    vec4 _t05BD = [_t05B9, _t05BA, _t05BB, _t05BC];
    real _t05BE = 0.57735026919e0;
    real _t05BF = 0.e0;
    real _t05C0 = 0.1e1;
    real _t05C1 = 0.e0;
    vec4 _t05C2 = [_t05BE, _t05BF, _t05C0, _t05C1];
    real _t05C3 = 0.e0;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.e0;
    real _t05C6 = 0.1e1;
    vec4 _t05C7 = [_t05C3, _t05C4, _t05C5, _t05C6];
    tensor[4,4] _t05C8 = [_t05B8, _t05BD, _t05C2, _t05C7];
    real _t05C9 = 0.1e1;
    real _t05CA = 0.e0;
    real _t05CB = 0.e0;
    real _t05CC = 0.e0;
    vec4 _t05CD = [_t05C9, _t05CA, _t05CB, _t05CC];
    real _t05CE = 0.e0;
    real _t05CF = 0.1e1;
    real _t05D0 = 0.e0;
    real _t05D1 = 0.e0;
    vec4 _t05D2 = [_t05CE, _t05CF, _t05D0, _t05D1];
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    real _t05D5 = 0.1e1;
    real _t05D6 = 0.e0;
    vec4 _t05D7 = [_t05D3, _t05D4, _t05D5, _t05D6];
    real _t05D8 = 0.e0;
    real _t05D9 = 0.e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.1e1;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    tensor[4,4] _t05DD = [_t05CD, _t05D2, _t05D7, _t05DC];
    real _t05DE = 0.e0;
    real _t05DF = 0.1e1;
    real _t05E0 = 0.e0;
    real _t05E1 = 0.e0;
    vec4 _t05E2 = [_t05DE, _t05DF, _t05E0, _t05E1];
    real _t05E3 = -0.1e1;
    real _t05E4 = 0.e0;
    real _t05E5 = 0.e0;
    real _t05E6 = 0.e0;
    vec4 _t05E7 = [_t05E3, _t05E4, _t05E5, _t05E6];
    real _t05E8 = 0.e0;
    real _t05E9 = 0.e0;
    real _t05EA = 0.1e1;
    real _t05EB = 0.e0;
    vec4 _t05EC = [_t05E8, _t05E9, _t05EA, _t05EB];
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    real _t05EF = 0.e0;
    real _t05F0 = 0.1e1;
    vec4 _t05F1 = [_t05ED, _t05EE, _t05EF, _t05F0];
    tensor[4,4] _t05F2 = [_t05E2, _t05E7, _t05EC, _t05F1];
    real _t05F3 = 0.e0;
    real _t05F4 = 0.1e1;
    real _t05F5 = 0.e0;
    real _t05F6 = 0.e0;
    vec4 _t05F7 = [_t05F3, _t05F4, _t05F5, _t05F6];
    real _t05F8 = 0.e0;
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    real _t05FB = 0.e0;
    vec4 _t05FC = [_t05F8, _t05F9, _t05FA, _t05FB];
    real _t05FD = 0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    vec4 _t0601 = [_t05FD, _t05FE, _t05FF, _t0600];
    real _t0602 = 0.e0;
    real _t0603 = 0.e0;
    real _t0604 = 0.e0;
    real _t0605 = 0.1e1;
    vec4 _t0606 = [_t0602, _t0603, _t0604, _t0605];
    tensor[4,4] _t0607 = [_t05F7, _t05FC, _t0601, _t0606];
    tensor[4,4][4] _t0608 = {_t05C8, _t05DD, _t05F2, _t0607};
    real _t0609 = -0.1e1;
    real _t060A = -0.57735026919e0;
    real _t060B = -0.1e1;
    real _t060C = 0.1e1;
    vec4 _t060D = [_t0609, _t060A, _t060B, _t060C];
    real _t060E = 0.1e1;
    real _t060F = -0.57735026919e0;
    real _t0610 = 0.e0;
    real _t0611 = 0.e0;
    vec4 _t0612 = [_t060E, _t060F, _t0610, _t0611];
    real _t0613 = 0.e0;
    real _t0614 = -0.57735026919e0;
    real _t0615 = 0.1e1;
    real _t0616 = 0.e0;
    vec4 _t0617 = [_t0613, _t0614, _t0615, _t0616];
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    real _t061A = 0.e0;
    real _t061B = 0.1e1;
    vec4 _t061C = [_t0618, _t0619, _t061A, _t061B];
    tensor[4,4] _t061D = [_t060D, _t0612, _t0617, _t061C];
    real _t061E = 0.e0;
    real _t061F = -0.1e1;
    real _t0620 = 0.e0;
    real _t0621 = 0.e0;
    vec4 _t0622 = [_t061E, _t061F, _t0620, _t0621];
    real _t0623 = 0.1e1;
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.e0;
    vec4 _t0627 = [_t0623, _t0624, _t0625, _t0626];
    real _t0628 = 0.e0;
    real _t0629 = 0.e0;
    real _t062A = 0.1e1;
    real _t062B = 0.e0;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    real _t062F = 0.e0;
    real _t0630 = 0.1e1;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    tensor[4,4] _t0632 = [_t0622, _t0627, _t062C, _t0631];
    real _t0633 = 0.1e1;
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = 0.e0;
    vec4 _t0637 = [_t0633, _t0634, _t0635, _t0636];
    real _t0638 = 0.e0;
    real _t0639 = 0.1e1;
    real _t063A = 0.e0;
    real _t063B = 0.e0;
    vec4 _t063C = [_t0638, _t0639, _t063A, _t063B];
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    vec4 _t0641 = [_t063D, _t063E, _t063F, _t0640];
    real _t0642 = 0.e0;
    real _t0643 = 0.e0;
    real _t0644 = 0.e0;
    real _t0645 = 0.1e1;
    vec4 _t0646 = [_t0642, _t0643, _t0644, _t0645];
    tensor[4,4] _t0647 = [_t0637, _t063C, _t0641, _t0646];
    real _t0648 = 0.1e1;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.e0;
    vec4 _t064C = [_t0648, _t0649, _t064A, _t064B];
    real _t064D = 0.e0;
    real _t064E = 0.e0;
    real _t064F = 0.1e1;
    real _t0650 = 0.e0;
    vec4 _t0651 = [_t064D, _t064E, _t064F, _t0650];
    real _t0652 = 0.e0;
    real _t0653 = -0.1e1;
    real _t0654 = 0.e0;
    real _t0655 = 0.e0;
    vec4 _t0656 = [_t0652, _t0653, _t0654, _t0655];
    real _t0657 = 0.e0;
    real _t0658 = 0.e0;
    real _t0659 = 0.e0;
    real _t065A = 0.1e1;
    vec4 _t065B = [_t0657, _t0658, _t0659, _t065A];
    tensor[4,4] _t065C = [_t064C, _t0651, _t0656, _t065B];
    tensor[4,4][4] _t065D = {_t061D, _t0632, _t0647, _t065C};
    real _t065E = -0.1e1;
    real _t065F = -0.1e1;
    real _t0660 = 0.57735026919e0;
    real _t0661 = 0.1e1;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    real _t0663 = 0.1e1;
    real _t0664 = 0.e0;
    real _t0665 = 0.57735026919e0;
    real _t0666 = 0.e0;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    real _t0668 = 0.e0;
    real _t0669 = 0.1e1;
    real _t066A = 0.57735026919e0;
    real _t066B = 0.e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    real _t0670 = 0.1e1;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    tensor[4,4] _t0672 = [_t0662, _t0667, _t066C, _t0671];
    real _t0673 = 0.e0;
    real _t0674 = 0.e0;
    real _t0675 = 0.1e1;
    real _t0676 = 0.e0;
    vec4 _t0677 = [_t0673, _t0674, _t0675, _t0676];
    real _t0678 = 0.1e1;
    real _t0679 = 0.e0;
    real _t067A = 0.e0;
    real _t067B = 0.e0;
    vec4 _t067C = [_t0678, _t0679, _t067A, _t067B];
    real _t067D = 0.e0;
    real _t067E = 0.1e1;
    real _t067F = 0.e0;
    real _t0680 = 0.e0;
    vec4 _t0681 = [_t067D, _t067E, _t067F, _t0680];
    real _t0682 = 0.e0;
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = 0.1e1;
    vec4 _t0686 = [_t0682, _t0683, _t0684, _t0685];
    tensor[4,4] _t0687 = [_t0677, _t067C, _t0681, _t0686];
    real _t0688 = 0.1e1;
    real _t0689 = 0.e0;
    real _t068A = 0.e0;
    real _t068B = 0.e0;
    vec4 _t068C = [_t0688, _t0689, _t068A, _t068B];
    real _t068D = 0.e0;
    real _t068E = 0.e0;
    real _t068F = -0.1e1;
    real _t0690 = 0.e0;
    vec4 _t0691 = [_t068D, _t068E, _t068F, _t0690];
    real _t0692 = 0.e0;
    real _t0693 = 0.1e1;
    real _t0694 = 0.e0;
    real _t0695 = 0.e0;
    vec4 _t0696 = [_t0692, _t0693, _t0694, _t0695];
    real _t0697 = 0.e0;
    real _t0698 = 0.e0;
    real _t0699 = 0.e0;
    real _t069A = 0.1e1;
    vec4 _t069B = [_t0697, _t0698, _t0699, _t069A];
    tensor[4,4] _t069C = [_t068C, _t0691, _t0696, _t069B];
    real _t069D = 0.1e1;
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    real _t06A0 = 0.e0;
    vec4 _t06A1 = [_t069D, _t069E, _t069F, _t06A0];
    real _t06A2 = 0.e0;
    real _t06A3 = 0.1e1;
    real _t06A4 = 0.e0;
    real _t06A5 = 0.e0;
    vec4 _t06A6 = [_t06A2, _t06A3, _t06A4, _t06A5];
    real _t06A7 = 0.e0;
    real _t06A8 = 0.e0;
    real _t06A9 = 0.1e1;
    real _t06AA = 0.e0;
    vec4 _t06AB = [_t06A7, _t06A8, _t06A9, _t06AA];
    real _t06AC = 0.e0;
    real _t06AD = 0.e0;
    real _t06AE = 0.e0;
    real _t06AF = 0.1e1;
    vec4 _t06B0 = [_t06AC, _t06AD, _t06AE, _t06AF];
    tensor[4,4] _t06B1 = [_t06A1, _t06A6, _t06AB, _t06B0];
    tensor[4,4][4] _t06B2 = {_t0672, _t0687, _t069C, _t06B1};
    tensor[4,4][4][4] _t06B3 = {_t05B3, _t0608, _t065D, _t06B2};
    real _t06B4 = time054B[1];
    int _t06B5 = prim $r2i01B7 (_t06B4);
    tensor[4,4][4] _t06B6 = prim $sub01C0<tensor[4,4][4]; %4> (_t06B3, _t06B5);
    real _t06B7 = time054B[1];
    int _t06B8 = prim $r2i01B7 (_t06B7);
    int[2] _t06B9 = func nextCell4054F (_t06B8, cellId0548, mesh0547);
    int _t06BA = 1;
    int _t06BB = prim $sub01C0<int; %2> (_t06B9, _t06BA);
    tensor[4,4] _t06BC = prim $sub01C0<tensor[4,4]; %4> (_t06B6, _t06BB);
    string _t06BD = "\n";
    print (_t0554, _t0556, _t0557, _t055C, _t055D, _t055E, _t06BC, _t06BD);
    real _t06BE = time054B[1];
    int _t06BF = prim $r2i01B7 (_t06BE);
    int[2] _t06C0 = func nextCell4054F (_t06BF, cellId0548, mesh0547);
    int _t06C1 = 0;
    int _t06C2 = prim $sub01C0<int; %2> (_t06C0, _t06C1);
    real _t06C3 = 0.1e1;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.e0;
    real _t06C6 = 0.e0;
    vec4 _t06C7 = [_t06C3, _t06C4, _t06C5, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = 0.1e1;
    real _t06CA = 0.e0;
    real _t06CB = 0.e0;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = 0.1e1;
    real _t06D0 = 0.e0;
    vec4 _t06D1 = [_t06CD, _t06CE, _t06CF, _t06D0];
    real _t06D2 = 0.971445146547e-16;
    real _t06D3 = 0.e0;
    real _t06D4 = 0.e0;
    real _t06D5 = 0.1e1;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    tensor[4,4] _t06D7 = [_t06C7, _t06CC, _t06D1, _t06D6];
    real _t06D8 = 0.57735026919e0;
    real _t06D9 = 0.57735026919e0;
    real _t06DA = 0.57735026919e0;
    real _t06DB = -0.57735026919e0;
    vec4 _t06DC = [_t06D8, _t06D9, _t06DA, _t06DB];
    real _t06DD = -0.333333333333e0;
    real _t06DE = 0.666666666667e0;
    real _t06DF = -0.333333333333e0;
    real _t06E0 = 0.333333333333e0;
    vec4 _t06E1 = [_t06DD, _t06DE, _t06DF, _t06E0];
    real _t06E2 = -0.333333333333e0;
    real _t06E3 = -0.333333333333e0;
    real _t06E4 = 0.666666666667e0;
    real _t06E5 = 0.333333333333e0;
    vec4 _t06E6 = [_t06E2, _t06E3, _t06E4, _t06E5];
    real _t06E7 = 0.971445146547e-16;
    real _t06E8 = 0.e0;
    real _t06E9 = 0.e0;
    real _t06EA = 0.1e1;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    tensor[4,4] _t06EC = [_t06DC, _t06E1, _t06E6, _t06EB];
    real _t06ED = -0.333333333333e0;
    real _t06EE = 0.666666666667e0;
    real _t06EF = -0.333333333333e0;
    real _t06F0 = 0.333333333333e0;
    vec4 _t06F1 = [_t06ED, _t06EE, _t06EF, _t06F0];
    real _t06F2 = -0.57735026919e0;
    real _t06F3 = -0.57735026919e0;
    real _t06F4 = -0.57735026919e0;
    real _t06F5 = 0.57735026919e0;
    vec4 _t06F6 = [_t06F2, _t06F3, _t06F4, _t06F5];
    real _t06F7 = -0.333333333333e0;
    real _t06F8 = -0.333333333333e0;
    real _t06F9 = 0.666666666667e0;
    real _t06FA = 0.333333333333e0;
    vec4 _t06FB = [_t06F7, _t06F8, _t06F9, _t06FA];
    real _t06FC = 0.971445146547e-16;
    real _t06FD = 0.e0;
    real _t06FE = 0.e0;
    real _t06FF = 0.1e1;
    vec4 _t0700 = [_t06FC, _t06FD, _t06FE, _t06FF];
    tensor[4,4] _t0701 = [_t06F1, _t06F6, _t06FB, _t0700];
    real _t0702 = -0.333333333333e0;
    real _t0703 = 0.666666666667e0;
    real _t0704 = -0.333333333333e0;
    real _t0705 = 0.333333333333e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = -0.333333333333e0;
    real _t0708 = -0.333333333333e0;
    real _t0709 = 0.666666666667e0;
    real _t070A = 0.333333333333e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.57735026919e0;
    real _t070D = 0.57735026919e0;
    real _t070E = 0.57735026919e0;
    real _t070F = -0.57735026919e0;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    real _t0711 = 0.971445146547e-16;
    real _t0712 = 0.e0;
    real _t0713 = 0.e0;
    real _t0714 = 0.1e1;
    vec4 _t0715 = [_t0711, _t0712, _t0713, _t0714];
    tensor[4,4] _t0716 = [_t0706, _t070B, _t0710, _t0715];
    tensor[4,4][4] _t0717 = {_t06D7, _t06EC, _t0701, _t0716};
    real _t0718 = 0.57735026919e0;
    real _t0719 = -0.1e1;
    real _t071A = -0.1e1;
    real _t071B = 0.1e1;
    vec4 _t071C = [_t0718, _t0719, _t071A, _t071B];
    real _t071D = 0.57735026919e0;
    real _t071E = 0.1e1;
    real _t071F = 0.e0;
    real _t0720 = 0.e0;
    vec4 _t0721 = [_t071D, _t071E, _t071F, _t0720];
    real _t0722 = 0.57735026919e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    real _t0725 = 0.e0;
    vec4 _t0726 = [_t0722, _t0723, _t0724, _t0725];
    real _t0727 = 0.e0;
    real _t0728 = 0.e0;
    real _t0729 = 0.e0;
    real _t072A = 0.1e1;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    tensor[4,4] _t072C = [_t071C, _t0721, _t0726, _t072B];
    real _t072D = 0.1e1;
    real _t072E = 0.e0;
    real _t072F = 0.e0;
    real _t0730 = 0.e0;
    vec4 _t0731 = [_t072D, _t072E, _t072F, _t0730];
    real _t0732 = 0.e0;
    real _t0733 = 0.1e1;
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.1e1;
    real _t073A = 0.e0;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    real _t073E = 0.e0;
    real _t073F = 0.1e1;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    tensor[4,4] _t0741 = [_t0731, _t0736, _t073B, _t0740];
    real _t0742 = 0.e0;
    real _t0743 = 0.1e1;
    real _t0744 = 0.e0;
    real _t0745 = 0.e0;
    vec4 _t0746 = [_t0742, _t0743, _t0744, _t0745];
    real _t0747 = -0.1e1;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    real _t074A = 0.e0;
    vec4 _t074B = [_t0747, _t0748, _t0749, _t074A];
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.1e1;
    real _t074F = 0.e0;
    vec4 _t0750 = [_t074C, _t074D, _t074E, _t074F];
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    real _t0753 = 0.e0;
    real _t0754 = 0.1e1;
    vec4 _t0755 = [_t0751, _t0752, _t0753, _t0754];
    tensor[4,4] _t0756 = [_t0746, _t074B, _t0750, _t0755];
    real _t0757 = 0.e0;
    real _t0758 = 0.1e1;
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    vec4 _t075B = [_t0757, _t0758, _t0759, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    real _t075E = 0.1e1;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = 0.1e1;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.e0;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    real _t0766 = 0.e0;
    real _t0767 = 0.e0;
    real _t0768 = 0.e0;
    real _t0769 = 0.1e1;
    vec4 _t076A = [_t0766, _t0767, _t0768, _t0769];
    tensor[4,4] _t076B = [_t075B, _t0760, _t0765, _t076A];
    tensor[4,4][4] _t076C = {_t072C, _t0741, _t0756, _t076B};
    real _t076D = -0.1e1;
    real _t076E = -0.57735026919e0;
    real _t076F = -0.1e1;
    real _t0770 = 0.1e1;
    vec4 _t0771 = [_t076D, _t076E, _t076F, _t0770];
    real _t0772 = 0.1e1;
    real _t0773 = -0.57735026919e0;
    real _t0774 = 0.e0;
    real _t0775 = 0.e0;
    vec4 _t0776 = [_t0772, _t0773, _t0774, _t0775];
    real _t0777 = 0.e0;
    real _t0778 = -0.57735026919e0;
    real _t0779 = 0.1e1;
    real _t077A = 0.e0;
    vec4 _t077B = [_t0777, _t0778, _t0779, _t077A];
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    real _t077E = 0.e0;
    real _t077F = 0.1e1;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    tensor[4,4] _t0781 = [_t0771, _t0776, _t077B, _t0780];
    real _t0782 = 0.e0;
    real _t0783 = -0.1e1;
    real _t0784 = 0.e0;
    real _t0785 = 0.e0;
    vec4 _t0786 = [_t0782, _t0783, _t0784, _t0785];
    real _t0787 = 0.1e1;
    real _t0788 = 0.e0;
    real _t0789 = 0.e0;
    real _t078A = 0.e0;
    vec4 _t078B = [_t0787, _t0788, _t0789, _t078A];
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.1e1;
    real _t078F = 0.e0;
    vec4 _t0790 = [_t078C, _t078D, _t078E, _t078F];
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.1e1;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    tensor[4,4] _t0796 = [_t0786, _t078B, _t0790, _t0795];
    real _t0797 = 0.1e1;
    real _t0798 = 0.e0;
    real _t0799 = 0.e0;
    real _t079A = 0.e0;
    vec4 _t079B = [_t0797, _t0798, _t0799, _t079A];
    real _t079C = 0.e0;
    real _t079D = 0.1e1;
    real _t079E = 0.e0;
    real _t079F = 0.e0;
    vec4 _t07A0 = [_t079C, _t079D, _t079E, _t079F];
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.1e1;
    real _t07A4 = 0.e0;
    vec4 _t07A5 = [_t07A1, _t07A2, _t07A3, _t07A4];
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.e0;
    real _t07A9 = 0.1e1;
    vec4 _t07AA = [_t07A6, _t07A7, _t07A8, _t07A9];
    tensor[4,4] _t07AB = [_t079B, _t07A0, _t07A5, _t07AA];
    real _t07AC = 0.1e1;
    real _t07AD = 0.e0;
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    vec4 _t07B0 = [_t07AC, _t07AD, _t07AE, _t07AF];
    real _t07B1 = 0.e0;
    real _t07B2 = 0.e0;
    real _t07B3 = 0.1e1;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = -0.1e1;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.e0;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.e0;
    real _t07BE = 0.1e1;
    vec4 _t07BF = [_t07BB, _t07BC, _t07BD, _t07BE];
    tensor[4,4] _t07C0 = [_t07B0, _t07B5, _t07BA, _t07BF];
    tensor[4,4][4] _t07C1 = {_t0781, _t0796, _t07AB, _t07C0};
    real _t07C2 = -0.1e1;
    real _t07C3 = -0.1e1;
    real _t07C4 = 0.57735026919e0;
    real _t07C5 = 0.1e1;
    vec4 _t07C6 = [_t07C2, _t07C3, _t07C4, _t07C5];
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.57735026919e0;
    real _t07CA = 0.e0;
    vec4 _t07CB = [_t07C7, _t07C8, _t07C9, _t07CA];
    real _t07CC = 0.e0;
    real _t07CD = 0.1e1;
    real _t07CE = 0.57735026919e0;
    real _t07CF = 0.e0;
    vec4 _t07D0 = [_t07CC, _t07CD, _t07CE, _t07CF];
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.1e1;
    vec4 _t07D5 = [_t07D1, _t07D2, _t07D3, _t07D4];
    tensor[4,4] _t07D6 = [_t07C6, _t07CB, _t07D0, _t07D5];
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.1e1;
    real _t07DA = 0.e0;
    vec4 _t07DB = [_t07D7, _t07D8, _t07D9, _t07DA];
    real _t07DC = 0.1e1;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    real _t07DF = 0.e0;
    vec4 _t07E0 = [_t07DC, _t07DD, _t07DE, _t07DF];
    real _t07E1 = 0.e0;
    real _t07E2 = 0.1e1;
    real _t07E3 = 0.e0;
    real _t07E4 = 0.e0;
    vec4 _t07E5 = [_t07E1, _t07E2, _t07E3, _t07E4];
    real _t07E6 = 0.e0;
    real _t07E7 = 0.e0;
    real _t07E8 = 0.e0;
    real _t07E9 = 0.1e1;
    vec4 _t07EA = [_t07E6, _t07E7, _t07E8, _t07E9];
    tensor[4,4] _t07EB = [_t07DB, _t07E0, _t07E5, _t07EA];
    real _t07EC = 0.1e1;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    real _t07EF = 0.e0;
    vec4 _t07F0 = [_t07EC, _t07ED, _t07EE, _t07EF];
    real _t07F1 = 0.e0;
    real _t07F2 = 0.e0;
    real _t07F3 = -0.1e1;
    real _t07F4 = 0.e0;
    vec4 _t07F5 = [_t07F1, _t07F2, _t07F3, _t07F4];
    real _t07F6 = 0.e0;
    real _t07F7 = 0.1e1;
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    vec4 _t07FA = [_t07F6, _t07F7, _t07F8, _t07F9];
    real _t07FB = 0.e0;
    real _t07FC = 0.e0;
    real _t07FD = 0.e0;
    real _t07FE = 0.1e1;
    vec4 _t07FF = [_t07FB, _t07FC, _t07FD, _t07FE];
    tensor[4,4] _t0800 = [_t07F0, _t07F5, _t07FA, _t07FF];
    real _t0801 = 0.1e1;
    real _t0802 = 0.e0;
    real _t0803 = 0.e0;
    real _t0804 = 0.e0;
    vec4 _t0805 = [_t0801, _t0802, _t0803, _t0804];
    real _t0806 = 0.e0;
    real _t0807 = 0.1e1;
    real _t0808 = 0.e0;
    real _t0809 = 0.e0;
    vec4 _t080A = [_t0806, _t0807, _t0808, _t0809];
    real _t080B = 0.e0;
    real _t080C = 0.e0;
    real _t080D = 0.1e1;
    real _t080E = 0.e0;
    vec4 _t080F = [_t080B, _t080C, _t080D, _t080E];
    real _t0810 = 0.e0;
    real _t0811 = 0.e0;
    real _t0812 = 0.e0;
    real _t0813 = 0.1e1;
    vec4 _t0814 = [_t0810, _t0811, _t0812, _t0813];
    tensor[4,4] _t0815 = [_t0805, _t080A, _t080F, _t0814];
    tensor[4,4][4] _t0816 = {_t07D6, _t07EB, _t0800, _t0815};
    tensor[4,4][4][4] _t0817 = {_t0717, _t076C, _t07C1, _t0816};
    real _t0818 = time054B[1];
    int _t0819 = prim $r2i01B7 (_t0818);
    tensor[4,4][4] _t081A = prim $sub01C0<tensor[4,4][4]; %4> (_t0817, _t0819);
    real _t081B = time054B[1];
    int _t081C = prim $r2i01B7 (_t081B);
    int[2] _t081D = func nextCell4054F (_t081C, cellId0548, mesh0547);
    int _t081E = 1;
    int _t081F = prim $sub01C0<int; %2> (_t081D, _t081E);
    tensor[4,4] _t0820 = prim $sub01C0<tensor[4,4]; %4> (_t081A, _t081F);
    real _t0821 = time054B[0];
    vec3 _t0822 = prim *0036<$[3]> (_t0821, dPos054A);
    vec3 _t0823 = prim +0017<$[3]> (_t0822, refPos0549);
    real _t0824 = _t0823[0];
    real _t0825 = time054B[0];
    vec3 _t0826 = prim *0036<$[3]> (_t0825, dPos054A);
    vec3 _t0827 = prim +0017<$[3]> (_t0826, refPos0549);
    real _t0828 = _t0827[1];
    real _t0829 = time054B[0];
    vec3 _t082A = prim *0036<$[3]> (_t0829, dPos054A);
    vec3 _t082B = prim +0017<$[3]> (_t082A, refPos0549);
    real _t082C = _t082B[2];
    real _t082D = 0.1e1;
    vec4 _t082E = [_t0824, _t0828, _t082C, _t082D];
    vec4 _t082F = prim •00CE<$[4,4]; $[4]; $[4]> (_t0820, _t082E);
    real _t0830 = _t082F[0];
    real _t0831 = 0.1e1;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    real _t0834 = 0.e0;
    vec4 _t0835 = [_t0831, _t0832, _t0833, _t0834];
    real _t0836 = 0.e0;
    real _t0837 = 0.1e1;
    real _t0838 = 0.e0;
    real _t0839 = 0.e0;
    vec4 _t083A = [_t0836, _t0837, _t0838, _t0839];
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    real _t083D = 0.1e1;
    real _t083E = 0.e0;
    vec4 _t083F = [_t083B, _t083C, _t083D, _t083E];
    real _t0840 = 0.971445146547e-16;
    real _t0841 = 0.e0;
    real _t0842 = 0.e0;
    real _t0843 = 0.1e1;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    tensor[4,4] _t0845 = [_t0835, _t083A, _t083F, _t0844];
    real _t0846 = 0.57735026919e0;
    real _t0847 = 0.57735026919e0;
    real _t0848 = 0.57735026919e0;
    real _t0849 = -0.57735026919e0;
    vec4 _t084A = [_t0846, _t0847, _t0848, _t0849];
    real _t084B = -0.333333333333e0;
    real _t084C = 0.666666666667e0;
    real _t084D = -0.333333333333e0;
    real _t084E = 0.333333333333e0;
    vec4 _t084F = [_t084B, _t084C, _t084D, _t084E];
    real _t0850 = -0.333333333333e0;
    real _t0851 = -0.333333333333e0;
    real _t0852 = 0.666666666667e0;
    real _t0853 = 0.333333333333e0;
    vec4 _t0854 = [_t0850, _t0851, _t0852, _t0853];
    real _t0855 = 0.971445146547e-16;
    real _t0856 = 0.e0;
    real _t0857 = 0.e0;
    real _t0858 = 0.1e1;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    tensor[4,4] _t085A = [_t084A, _t084F, _t0854, _t0859];
    real _t085B = -0.333333333333e0;
    real _t085C = 0.666666666667e0;
    real _t085D = -0.333333333333e0;
    real _t085E = 0.333333333333e0;
    vec4 _t085F = [_t085B, _t085C, _t085D, _t085E];
    real _t0860 = -0.57735026919e0;
    real _t0861 = -0.57735026919e0;
    real _t0862 = -0.57735026919e0;
    real _t0863 = 0.57735026919e0;
    vec4 _t0864 = [_t0860, _t0861, _t0862, _t0863];
    real _t0865 = -0.333333333333e0;
    real _t0866 = -0.333333333333e0;
    real _t0867 = 0.666666666667e0;
    real _t0868 = 0.333333333333e0;
    vec4 _t0869 = [_t0865, _t0866, _t0867, _t0868];
    real _t086A = 0.971445146547e-16;
    real _t086B = 0.e0;
    real _t086C = 0.e0;
    real _t086D = 0.1e1;
    vec4 _t086E = [_t086A, _t086B, _t086C, _t086D];
    tensor[4,4] _t086F = [_t085F, _t0864, _t0869, _t086E];
    real _t0870 = -0.333333333333e0;
    real _t0871 = 0.666666666667e0;
    real _t0872 = -0.333333333333e0;
    real _t0873 = 0.333333333333e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = -0.333333333333e0;
    real _t0876 = -0.333333333333e0;
    real _t0877 = 0.666666666667e0;
    real _t0878 = 0.333333333333e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.57735026919e0;
    real _t087B = 0.57735026919e0;
    real _t087C = 0.57735026919e0;
    real _t087D = -0.57735026919e0;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    real _t087F = 0.971445146547e-16;
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.1e1;
    vec4 _t0883 = [_t087F, _t0880, _t0881, _t0882];
    tensor[4,4] _t0884 = [_t0874, _t0879, _t087E, _t0883];
    tensor[4,4][4] _t0885 = {_t0845, _t085A, _t086F, _t0884};
    real _t0886 = 0.57735026919e0;
    real _t0887 = -0.1e1;
    real _t0888 = -0.1e1;
    real _t0889 = 0.1e1;
    vec4 _t088A = [_t0886, _t0887, _t0888, _t0889];
    real _t088B = 0.57735026919e0;
    real _t088C = 0.1e1;
    real _t088D = 0.e0;
    real _t088E = 0.e0;
    vec4 _t088F = [_t088B, _t088C, _t088D, _t088E];
    real _t0890 = 0.57735026919e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    real _t0893 = 0.e0;
    vec4 _t0894 = [_t0890, _t0891, _t0892, _t0893];
    real _t0895 = 0.e0;
    real _t0896 = 0.e0;
    real _t0897 = 0.e0;
    real _t0898 = 0.1e1;
    vec4 _t0899 = [_t0895, _t0896, _t0897, _t0898];
    tensor[4,4] _t089A = [_t088A, _t088F, _t0894, _t0899];
    real _t089B = 0.1e1;
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    real _t089E = 0.e0;
    vec4 _t089F = [_t089B, _t089C, _t089D, _t089E];
    real _t08A0 = 0.e0;
    real _t08A1 = 0.1e1;
    real _t08A2 = 0.e0;
    real _t08A3 = 0.e0;
    vec4 _t08A4 = [_t08A0, _t08A1, _t08A2, _t08A3];
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.1e1;
    real _t08A8 = 0.e0;
    vec4 _t08A9 = [_t08A5, _t08A6, _t08A7, _t08A8];
    real _t08AA = 0.e0;
    real _t08AB = 0.e0;
    real _t08AC = 0.e0;
    real _t08AD = 0.1e1;
    vec4 _t08AE = [_t08AA, _t08AB, _t08AC, _t08AD];
    tensor[4,4] _t08AF = [_t089F, _t08A4, _t08A9, _t08AE];
    real _t08B0 = 0.e0;
    real _t08B1 = 0.1e1;
    real _t08B2 = 0.e0;
    real _t08B3 = 0.e0;
    vec4 _t08B4 = [_t08B0, _t08B1, _t08B2, _t08B3];
    real _t08B5 = -0.1e1;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    real _t08B8 = 0.e0;
    vec4 _t08B9 = [_t08B5, _t08B6, _t08B7, _t08B8];
    real _t08BA = 0.e0;
    real _t08BB = 0.e0;
    real _t08BC = 0.1e1;
    real _t08BD = 0.e0;
    vec4 _t08BE = [_t08BA, _t08BB, _t08BC, _t08BD];
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.e0;
    real _t08C2 = 0.1e1;
    vec4 _t08C3 = [_t08BF, _t08C0, _t08C1, _t08C2];
    tensor[4,4] _t08C4 = [_t08B4, _t08B9, _t08BE, _t08C3];
    real _t08C5 = 0.e0;
    real _t08C6 = 0.1e1;
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    vec4 _t08C9 = [_t08C5, _t08C6, _t08C7, _t08C8];
    real _t08CA = 0.e0;
    real _t08CB = 0.e0;
    real _t08CC = 0.1e1;
    real _t08CD = 0.e0;
    vec4 _t08CE = [_t08CA, _t08CB, _t08CC, _t08CD];
    real _t08CF = 0.1e1;
    real _t08D0 = 0.e0;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.e0;
    vec4 _t08D3 = [_t08CF, _t08D0, _t08D1, _t08D2];
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.e0;
    real _t08D7 = 0.1e1;
    vec4 _t08D8 = [_t08D4, _t08D5, _t08D6, _t08D7];
    tensor[4,4] _t08D9 = [_t08C9, _t08CE, _t08D3, _t08D8];
    tensor[4,4][4] _t08DA = {_t089A, _t08AF, _t08C4, _t08D9};
    real _t08DB = -0.1e1;
    real _t08DC = -0.57735026919e0;
    real _t08DD = -0.1e1;
    real _t08DE = 0.1e1;
    vec4 _t08DF = [_t08DB, _t08DC, _t08DD, _t08DE];
    real _t08E0 = 0.1e1;
    real _t08E1 = -0.57735026919e0;
    real _t08E2 = 0.e0;
    real _t08E3 = 0.e0;
    vec4 _t08E4 = [_t08E0, _t08E1, _t08E2, _t08E3];
    real _t08E5 = 0.e0;
    real _t08E6 = -0.57735026919e0;
    real _t08E7 = 0.1e1;
    real _t08E8 = 0.e0;
    vec4 _t08E9 = [_t08E5, _t08E6, _t08E7, _t08E8];
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    real _t08EC = 0.e0;
    real _t08ED = 0.1e1;
    vec4 _t08EE = [_t08EA, _t08EB, _t08EC, _t08ED];
    tensor[4,4] _t08EF = [_t08DF, _t08E4, _t08E9, _t08EE];
    real _t08F0 = 0.e0;
    real _t08F1 = -0.1e1;
    real _t08F2 = 0.e0;
    real _t08F3 = 0.e0;
    vec4 _t08F4 = [_t08F0, _t08F1, _t08F2, _t08F3];
    real _t08F5 = 0.1e1;
    real _t08F6 = 0.e0;
    real _t08F7 = 0.e0;
    real _t08F8 = 0.e0;
    vec4 _t08F9 = [_t08F5, _t08F6, _t08F7, _t08F8];
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    real _t08FC = 0.1e1;
    real _t08FD = 0.e0;
    vec4 _t08FE = [_t08FA, _t08FB, _t08FC, _t08FD];
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    real _t0901 = 0.e0;
    real _t0902 = 0.1e1;
    vec4 _t0903 = [_t08FF, _t0900, _t0901, _t0902];
    tensor[4,4] _t0904 = [_t08F4, _t08F9, _t08FE, _t0903];
    real _t0905 = 0.1e1;
    real _t0906 = 0.e0;
    real _t0907 = 0.e0;
    real _t0908 = 0.e0;
    vec4 _t0909 = [_t0905, _t0906, _t0907, _t0908];
    real _t090A = 0.e0;
    real _t090B = 0.1e1;
    real _t090C = 0.e0;
    real _t090D = 0.e0;
    vec4 _t090E = [_t090A, _t090B, _t090C, _t090D];
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    real _t0911 = 0.1e1;
    real _t0912 = 0.e0;
    vec4 _t0913 = [_t090F, _t0910, _t0911, _t0912];
    real _t0914 = 0.e0;
    real _t0915 = 0.e0;
    real _t0916 = 0.e0;
    real _t0917 = 0.1e1;
    vec4 _t0918 = [_t0914, _t0915, _t0916, _t0917];
    tensor[4,4] _t0919 = [_t0909, _t090E, _t0913, _t0918];
    real _t091A = 0.1e1;
    real _t091B = 0.e0;
    real _t091C = 0.e0;
    real _t091D = 0.e0;
    vec4 _t091E = [_t091A, _t091B, _t091C, _t091D];
    real _t091F = 0.e0;
    real _t0920 = 0.e0;
    real _t0921 = 0.1e1;
    real _t0922 = 0.e0;
    vec4 _t0923 = [_t091F, _t0920, _t0921, _t0922];
    real _t0924 = 0.e0;
    real _t0925 = -0.1e1;
    real _t0926 = 0.e0;
    real _t0927 = 0.e0;
    vec4 _t0928 = [_t0924, _t0925, _t0926, _t0927];
    real _t0929 = 0.e0;
    real _t092A = 0.e0;
    real _t092B = 0.e0;
    real _t092C = 0.1e1;
    vec4 _t092D = [_t0929, _t092A, _t092B, _t092C];
    tensor[4,4] _t092E = [_t091E, _t0923, _t0928, _t092D];
    tensor[4,4][4] _t092F = {_t08EF, _t0904, _t0919, _t092E};
    real _t0930 = -0.1e1;
    real _t0931 = -0.1e1;
    real _t0932 = 0.57735026919e0;
    real _t0933 = 0.1e1;
    vec4 _t0934 = [_t0930, _t0931, _t0932, _t0933];
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    real _t0937 = 0.57735026919e0;
    real _t0938 = 0.e0;
    vec4 _t0939 = [_t0935, _t0936, _t0937, _t0938];
    real _t093A = 0.e0;
    real _t093B = 0.1e1;
    real _t093C = 0.57735026919e0;
    real _t093D = 0.e0;
    vec4 _t093E = [_t093A, _t093B, _t093C, _t093D];
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    real _t0941 = 0.e0;
    real _t0942 = 0.1e1;
    vec4 _t0943 = [_t093F, _t0940, _t0941, _t0942];
    tensor[4,4] _t0944 = [_t0934, _t0939, _t093E, _t0943];
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    real _t0947 = 0.1e1;
    real _t0948 = 0.e0;
    vec4 _t0949 = [_t0945, _t0946, _t0947, _t0948];
    real _t094A = 0.1e1;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    real _t094D = 0.e0;
    vec4 _t094E = [_t094A, _t094B, _t094C, _t094D];
    real _t094F = 0.e0;
    real _t0950 = 0.1e1;
    real _t0951 = 0.e0;
    real _t0952 = 0.e0;
    vec4 _t0953 = [_t094F, _t0950, _t0951, _t0952];
    real _t0954 = 0.e0;
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    real _t0957 = 0.1e1;
    vec4 _t0958 = [_t0954, _t0955, _t0956, _t0957];
    tensor[4,4] _t0959 = [_t0949, _t094E, _t0953, _t0958];
    real _t095A = 0.1e1;
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    real _t095D = 0.e0;
    vec4 _t095E = [_t095A, _t095B, _t095C, _t095D];
    real _t095F = 0.e0;
    real _t0960 = 0.e0;
    real _t0961 = -0.1e1;
    real _t0962 = 0.e0;
    vec4 _t0963 = [_t095F, _t0960, _t0961, _t0962];
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    real _t0966 = 0.e0;
    real _t0967 = 0.e0;
    vec4 _t0968 = [_t0964, _t0965, _t0966, _t0967];
    real _t0969 = 0.e0;
    real _t096A = 0.e0;
    real _t096B = 0.e0;
    real _t096C = 0.1e1;
    vec4 _t096D = [_t0969, _t096A, _t096B, _t096C];
    tensor[4,4] _t096E = [_t095E, _t0963, _t0968, _t096D];
    real _t096F = 0.1e1;
    real _t0970 = 0.e0;
    real _t0971 = 0.e0;
    real _t0972 = 0.e0;
    vec4 _t0973 = [_t096F, _t0970, _t0971, _t0972];
    real _t0974 = 0.e0;
    real _t0975 = 0.1e1;
    real _t0976 = 0.e0;
    real _t0977 = 0.e0;
    vec4 _t0978 = [_t0974, _t0975, _t0976, _t0977];
    real _t0979 = 0.e0;
    real _t097A = 0.e0;
    real _t097B = 0.1e1;
    real _t097C = 0.e0;
    vec4 _t097D = [_t0979, _t097A, _t097B, _t097C];
    real _t097E = 0.e0;
    real _t097F = 0.e0;
    real _t0980 = 0.e0;
    real _t0981 = 0.1e1;
    vec4 _t0982 = [_t097E, _t097F, _t0980, _t0981];
    tensor[4,4] _t0983 = [_t0973, _t0978, _t097D, _t0982];
    tensor[4,4][4] _t0984 = {_t0944, _t0959, _t096E, _t0983};
    tensor[4,4][4][4] _t0985 = {_t0885, _t08DA, _t092F, _t0984};
    real _t0986 = time054B[1];
    int _t0987 = prim $r2i01B7 (_t0986);
    tensor[4,4][4] _t0988 = prim $sub01C0<tensor[4,4][4]; %4> (_t0985, _t0987);
    real _t0989 = time054B[1];
    int _t098A = prim $r2i01B7 (_t0989);
    int[2] _t098B = func nextCell4054F (_t098A, cellId0548, mesh0547);
    int _t098C = 1;
    int _t098D = prim $sub01C0<int; %2> (_t098B, _t098C);
    tensor[4,4] _t098E = prim $sub01C0<tensor[4,4]; %4> (_t0988, _t098D);
    real _t098F = time054B[0];
    vec3 _t0990 = prim *0036<$[3]> (_t098F, dPos054A);
    vec3 _t0991 = prim +0017<$[3]> (_t0990, refPos0549);
    real _t0992 = _t0991[0];
    real _t0993 = time054B[0];
    vec3 _t0994 = prim *0036<$[3]> (_t0993, dPos054A);
    vec3 _t0995 = prim +0017<$[3]> (_t0994, refPos0549);
    real _t0996 = _t0995[1];
    real _t0997 = time054B[0];
    vec3 _t0998 = prim *0036<$[3]> (_t0997, dPos054A);
    vec3 _t0999 = prim +0017<$[3]> (_t0998, refPos0549);
    real _t099A = _t0999[2];
    real _t099B = 0.1e1;
    vec4 _t099C = [_t0992, _t0996, _t099A, _t099B];
    vec4 _t099D = prim •00CE<$[4,4]; $[4]; $[4]> (_t098E, _t099C);
    real _t099E = _t099D[1];
    real _t099F = 0.1e1;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    real _t09A2 = 0.e0;
    vec4 _t09A3 = [_t099F, _t09A0, _t09A1, _t09A2];
    real _t09A4 = 0.e0;
    real _t09A5 = 0.1e1;
    real _t09A6 = 0.e0;
    real _t09A7 = 0.e0;
    vec4 _t09A8 = [_t09A4, _t09A5, _t09A6, _t09A7];
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    real _t09AB = 0.1e1;
    real _t09AC = 0.e0;
    vec4 _t09AD = [_t09A9, _t09AA, _t09AB, _t09AC];
    real _t09AE = 0.971445146547e-16;
    real _t09AF = 0.e0;
    real _t09B0 = 0.e0;
    real _t09B1 = 0.1e1;
    vec4 _t09B2 = [_t09AE, _t09AF, _t09B0, _t09B1];
    tensor[4,4] _t09B3 = [_t09A3, _t09A8, _t09AD, _t09B2];
    real _t09B4 = 0.57735026919e0;
    real _t09B5 = 0.57735026919e0;
    real _t09B6 = 0.57735026919e0;
    real _t09B7 = -0.57735026919e0;
    vec4 _t09B8 = [_t09B4, _t09B5, _t09B6, _t09B7];
    real _t09B9 = -0.333333333333e0;
    real _t09BA = 0.666666666667e0;
    real _t09BB = -0.333333333333e0;
    real _t09BC = 0.333333333333e0;
    vec4 _t09BD = [_t09B9, _t09BA, _t09BB, _t09BC];
    real _t09BE = -0.333333333333e0;
    real _t09BF = -0.333333333333e0;
    real _t09C0 = 0.666666666667e0;
    real _t09C1 = 0.333333333333e0;
    vec4 _t09C2 = [_t09BE, _t09BF, _t09C0, _t09C1];
    real _t09C3 = 0.971445146547e-16;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.e0;
    real _t09C6 = 0.1e1;
    vec4 _t09C7 = [_t09C3, _t09C4, _t09C5, _t09C6];
    tensor[4,4] _t09C8 = [_t09B8, _t09BD, _t09C2, _t09C7];
    real _t09C9 = -0.333333333333e0;
    real _t09CA = 0.666666666667e0;
    real _t09CB = -0.333333333333e0;
    real _t09CC = 0.333333333333e0;
    vec4 _t09CD = [_t09C9, _t09CA, _t09CB, _t09CC];
    real _t09CE = -0.57735026919e0;
    real _t09CF = -0.57735026919e0;
    real _t09D0 = -0.57735026919e0;
    real _t09D1 = 0.57735026919e0;
    vec4 _t09D2 = [_t09CE, _t09CF, _t09D0, _t09D1];
    real _t09D3 = -0.333333333333e0;
    real _t09D4 = -0.333333333333e0;
    real _t09D5 = 0.666666666667e0;
    real _t09D6 = 0.333333333333e0;
    vec4 _t09D7 = [_t09D3, _t09D4, _t09D5, _t09D6];
    real _t09D8 = 0.971445146547e-16;
    real _t09D9 = 0.e0;
    real _t09DA = 0.e0;
    real _t09DB = 0.1e1;
    vec4 _t09DC = [_t09D8, _t09D9, _t09DA, _t09DB];
    tensor[4,4] _t09DD = [_t09CD, _t09D2, _t09D7, _t09DC];
    real _t09DE = -0.333333333333e0;
    real _t09DF = 0.666666666667e0;
    real _t09E0 = -0.333333333333e0;
    real _t09E1 = 0.333333333333e0;
    vec4 _t09E2 = [_t09DE, _t09DF, _t09E0, _t09E1];
    real _t09E3 = -0.333333333333e0;
    real _t09E4 = -0.333333333333e0;
    real _t09E5 = 0.666666666667e0;
    real _t09E6 = 0.333333333333e0;
    vec4 _t09E7 = [_t09E3, _t09E4, _t09E5, _t09E6];
    real _t09E8 = 0.57735026919e0;
    real _t09E9 = 0.57735026919e0;
    real _t09EA = 0.57735026919e0;
    real _t09EB = -0.57735026919e0;
    vec4 _t09EC = [_t09E8, _t09E9, _t09EA, _t09EB];
    real _t09ED = 0.971445146547e-16;
    real _t09EE = 0.e0;
    real _t09EF = 0.e0;
    real _t09F0 = 0.1e1;
    vec4 _t09F1 = [_t09ED, _t09EE, _t09EF, _t09F0];
    tensor[4,4] _t09F2 = [_t09E2, _t09E7, _t09EC, _t09F1];
    tensor[4,4][4] _t09F3 = {_t09B3, _t09C8, _t09DD, _t09F2};
    real _t09F4 = 0.57735026919e0;
    real _t09F5 = -0.1e1;
    real _t09F6 = -0.1e1;
    real _t09F7 = 0.1e1;
    vec4 _t09F8 = [_t09F4, _t09F5, _t09F6, _t09F7];
    real _t09F9 = 0.57735026919e0;
    real _t09FA = 0.1e1;
    real _t09FB = 0.e0;
    real _t09FC = 0.e0;
    vec4 _t09FD = [_t09F9, _t09FA, _t09FB, _t09FC];
    real _t09FE = 0.57735026919e0;
    real _t09FF = 0.e0;
    real _t0A00 = 0.1e1;
    real _t0A01 = 0.e0;
    vec4 _t0A02 = [_t09FE, _t09FF, _t0A00, _t0A01];
    real _t0A03 = 0.e0;
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    real _t0A06 = 0.1e1;
    vec4 _t0A07 = [_t0A03, _t0A04, _t0A05, _t0A06];
    tensor[4,4] _t0A08 = [_t09F8, _t09FD, _t0A02, _t0A07];
    real _t0A09 = 0.1e1;
    real _t0A0A = 0.e0;
    real _t0A0B = 0.e0;
    real _t0A0C = 0.e0;
    vec4 _t0A0D = [_t0A09, _t0A0A, _t0A0B, _t0A0C];
    real _t0A0E = 0.e0;
    real _t0A0F = 0.1e1;
    real _t0A10 = 0.e0;
    real _t0A11 = 0.e0;
    vec4 _t0A12 = [_t0A0E, _t0A0F, _t0A10, _t0A11];
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    real _t0A15 = 0.1e1;
    real _t0A16 = 0.e0;
    vec4 _t0A17 = [_t0A13, _t0A14, _t0A15, _t0A16];
    real _t0A18 = 0.e0;
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    real _t0A1B = 0.1e1;
    vec4 _t0A1C = [_t0A18, _t0A19, _t0A1A, _t0A1B];
    tensor[4,4] _t0A1D = [_t0A0D, _t0A12, _t0A17, _t0A1C];
    real _t0A1E = 0.e0;
    real _t0A1F = 0.1e1;
    real _t0A20 = 0.e0;
    real _t0A21 = 0.e0;
    vec4 _t0A22 = [_t0A1E, _t0A1F, _t0A20, _t0A21];
    real _t0A23 = -0.1e1;
    real _t0A24 = 0.e0;
    real _t0A25 = 0.e0;
    real _t0A26 = 0.e0;
    vec4 _t0A27 = [_t0A23, _t0A24, _t0A25, _t0A26];
    real _t0A28 = 0.e0;
    real _t0A29 = 0.e0;
    real _t0A2A = 0.1e1;
    real _t0A2B = 0.e0;
    vec4 _t0A2C = [_t0A28, _t0A29, _t0A2A, _t0A2B];
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    real _t0A2F = 0.e0;
    real _t0A30 = 0.1e1;
    vec4 _t0A31 = [_t0A2D, _t0A2E, _t0A2F, _t0A30];
    tensor[4,4] _t0A32 = [_t0A22, _t0A27, _t0A2C, _t0A31];
    real _t0A33 = 0.e0;
    real _t0A34 = 0.1e1;
    real _t0A35 = 0.e0;
    real _t0A36 = 0.e0;
    vec4 _t0A37 = [_t0A33, _t0A34, _t0A35, _t0A36];
    real _t0A38 = 0.e0;
    real _t0A39 = 0.e0;
    real _t0A3A = 0.1e1;
    real _t0A3B = 0.e0;
    vec4 _t0A3C = [_t0A38, _t0A39, _t0A3A, _t0A3B];
    real _t0A3D = 0.1e1;
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    real _t0A40 = 0.e0;
    vec4 _t0A41 = [_t0A3D, _t0A3E, _t0A3F, _t0A40];
    real _t0A42 = 0.e0;
    real _t0A43 = 0.e0;
    real _t0A44 = 0.e0;
    real _t0A45 = 0.1e1;
    vec4 _t0A46 = [_t0A42, _t0A43, _t0A44, _t0A45];
    tensor[4,4] _t0A47 = [_t0A37, _t0A3C, _t0A41, _t0A46];
    tensor[4,4][4] _t0A48 = {_t0A08, _t0A1D, _t0A32, _t0A47};
    real _t0A49 = -0.1e1;
    real _t0A4A = -0.57735026919e0;
    real _t0A4B = -0.1e1;
    real _t0A4C = 0.1e1;
    vec4 _t0A4D = [_t0A49, _t0A4A, _t0A4B, _t0A4C];
    real _t0A4E = 0.1e1;
    real _t0A4F = -0.57735026919e0;
    real _t0A50 = 0.e0;
    real _t0A51 = 0.e0;
    vec4 _t0A52 = [_t0A4E, _t0A4F, _t0A50, _t0A51];
    real _t0A53 = 0.e0;
    real _t0A54 = -0.57735026919e0;
    real _t0A55 = 0.1e1;
    real _t0A56 = 0.e0;
    vec4 _t0A57 = [_t0A53, _t0A54, _t0A55, _t0A56];
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    real _t0A5A = 0.e0;
    real _t0A5B = 0.1e1;
    vec4 _t0A5C = [_t0A58, _t0A59, _t0A5A, _t0A5B];
    tensor[4,4] _t0A5D = [_t0A4D, _t0A52, _t0A57, _t0A5C];
    real _t0A5E = 0.e0;
    real _t0A5F = -0.1e1;
    real _t0A60 = 0.e0;
    real _t0A61 = 0.e0;
    vec4 _t0A62 = [_t0A5E, _t0A5F, _t0A60, _t0A61];
    real _t0A63 = 0.1e1;
    real _t0A64 = 0.e0;
    real _t0A65 = 0.e0;
    real _t0A66 = 0.e0;
    vec4 _t0A67 = [_t0A63, _t0A64, _t0A65, _t0A66];
    real _t0A68 = 0.e0;
    real _t0A69 = 0.e0;
    real _t0A6A = 0.1e1;
    real _t0A6B = 0.e0;
    vec4 _t0A6C = [_t0A68, _t0A69, _t0A6A, _t0A6B];
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    real _t0A6F = 0.e0;
    real _t0A70 = 0.1e1;
    vec4 _t0A71 = [_t0A6D, _t0A6E, _t0A6F, _t0A70];
    tensor[4,4] _t0A72 = [_t0A62, _t0A67, _t0A6C, _t0A71];
    real _t0A73 = 0.1e1;
    real _t0A74 = 0.e0;
    real _t0A75 = 0.e0;
    real _t0A76 = 0.e0;
    vec4 _t0A77 = [_t0A73, _t0A74, _t0A75, _t0A76];
    real _t0A78 = 0.e0;
    real _t0A79 = 0.1e1;
    real _t0A7A = 0.e0;
    real _t0A7B = 0.e0;
    vec4 _t0A7C = [_t0A78, _t0A79, _t0A7A, _t0A7B];
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    real _t0A7F = 0.1e1;
    real _t0A80 = 0.e0;
    vec4 _t0A81 = [_t0A7D, _t0A7E, _t0A7F, _t0A80];
    real _t0A82 = 0.e0;
    real _t0A83 = 0.e0;
    real _t0A84 = 0.e0;
    real _t0A85 = 0.1e1;
    vec4 _t0A86 = [_t0A82, _t0A83, _t0A84, _t0A85];
    tensor[4,4] _t0A87 = [_t0A77, _t0A7C, _t0A81, _t0A86];
    real _t0A88 = 0.1e1;
    real _t0A89 = 0.e0;
    real _t0A8A = 0.e0;
    real _t0A8B = 0.e0;
    vec4 _t0A8C = [_t0A88, _t0A89, _t0A8A, _t0A8B];
    real _t0A8D = 0.e0;
    real _t0A8E = 0.e0;
    real _t0A8F = 0.1e1;
    real _t0A90 = 0.e0;
    vec4 _t0A91 = [_t0A8D, _t0A8E, _t0A8F, _t0A90];
    real _t0A92 = 0.e0;
    real _t0A93 = -0.1e1;
    real _t0A94 = 0.e0;
    real _t0A95 = 0.e0;
    vec4 _t0A96 = [_t0A92, _t0A93, _t0A94, _t0A95];
    real _t0A97 = 0.e0;
    real _t0A98 = 0.e0;
    real _t0A99 = 0.e0;
    real _t0A9A = 0.1e1;
    vec4 _t0A9B = [_t0A97, _t0A98, _t0A99, _t0A9A];
    tensor[4,4] _t0A9C = [_t0A8C, _t0A91, _t0A96, _t0A9B];
    tensor[4,4][4] _t0A9D = {_t0A5D, _t0A72, _t0A87, _t0A9C};
    real _t0A9E = -0.1e1;
    real _t0A9F = -0.1e1;
    real _t0AA0 = 0.57735026919e0;
    real _t0AA1 = 0.1e1;
    vec4 _t0AA2 = [_t0A9E, _t0A9F, _t0AA0, _t0AA1];
    real _t0AA3 = 0.1e1;
    real _t0AA4 = 0.e0;
    real _t0AA5 = 0.57735026919e0;
    real _t0AA6 = 0.e0;
    vec4 _t0AA7 = [_t0AA3, _t0AA4, _t0AA5, _t0AA6];
    real _t0AA8 = 0.e0;
    real _t0AA9 = 0.1e1;
    real _t0AAA = 0.57735026919e0;
    real _t0AAB = 0.e0;
    vec4 _t0AAC = [_t0AA8, _t0AA9, _t0AAA, _t0AAB];
    real _t0AAD = 0.e0;
    real _t0AAE = 0.e0;
    real _t0AAF = 0.e0;
    real _t0AB0 = 0.1e1;
    vec4 _t0AB1 = [_t0AAD, _t0AAE, _t0AAF, _t0AB0];
    tensor[4,4] _t0AB2 = [_t0AA2, _t0AA7, _t0AAC, _t0AB1];
    real _t0AB3 = 0.e0;
    real _t0AB4 = 0.e0;
    real _t0AB5 = 0.1e1;
    real _t0AB6 = 0.e0;
    vec4 _t0AB7 = [_t0AB3, _t0AB4, _t0AB5, _t0AB6];
    real _t0AB8 = 0.1e1;
    real _t0AB9 = 0.e0;
    real _t0ABA = 0.e0;
    real _t0ABB = 0.e0;
    vec4 _t0ABC = [_t0AB8, _t0AB9, _t0ABA, _t0ABB];
    real _t0ABD = 0.e0;
    real _t0ABE = 0.1e1;
    real _t0ABF = 0.e0;
    real _t0AC0 = 0.e0;
    vec4 _t0AC1 = [_t0ABD, _t0ABE, _t0ABF, _t0AC0];
    real _t0AC2 = 0.e0;
    real _t0AC3 = 0.e0;
    real _t0AC4 = 0.e0;
    real _t0AC5 = 0.1e1;
    vec4 _t0AC6 = [_t0AC2, _t0AC3, _t0AC4, _t0AC5];
    tensor[4,4] _t0AC7 = [_t0AB7, _t0ABC, _t0AC1, _t0AC6];
    real _t0AC8 = 0.1e1;
    real _t0AC9 = 0.e0;
    real _t0ACA = 0.e0;
    real _t0ACB = 0.e0;
    vec4 _t0ACC = [_t0AC8, _t0AC9, _t0ACA, _t0ACB];
    real _t0ACD = 0.e0;
    real _t0ACE = 0.e0;
    real _t0ACF = -0.1e1;
    real _t0AD0 = 0.e0;
    vec4 _t0AD1 = [_t0ACD, _t0ACE, _t0ACF, _t0AD0];
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.1e1;
    real _t0AD4 = 0.e0;
    real _t0AD5 = 0.e0;
    vec4 _t0AD6 = [_t0AD2, _t0AD3, _t0AD4, _t0AD5];
    real _t0AD7 = 0.e0;
    real _t0AD8 = 0.e0;
    real _t0AD9 = 0.e0;
    real _t0ADA = 0.1e1;
    vec4 _t0ADB = [_t0AD7, _t0AD8, _t0AD9, _t0ADA];
    tensor[4,4] _t0ADC = [_t0ACC, _t0AD1, _t0AD6, _t0ADB];
    real _t0ADD = 0.1e1;
    real _t0ADE = 0.e0;
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.e0;
    vec4 _t0AE1 = [_t0ADD, _t0ADE, _t0ADF, _t0AE0];
    real _t0AE2 = 0.e0;
    real _t0AE3 = 0.1e1;
    real _t0AE4 = 0.e0;
    real _t0AE5 = 0.e0;
    vec4 _t0AE6 = [_t0AE2, _t0AE3, _t0AE4, _t0AE5];
    real _t0AE7 = 0.e0;
    real _t0AE8 = 0.e0;
    real _t0AE9 = 0.1e1;
    real _t0AEA = 0.e0;
    vec4 _t0AEB = [_t0AE7, _t0AE8, _t0AE9, _t0AEA];
    real _t0AEC = 0.e0;
    real _t0AED = 0.e0;
    real _t0AEE = 0.e0;
    real _t0AEF = 0.1e1;
    vec4 _t0AF0 = [_t0AEC, _t0AED, _t0AEE, _t0AEF];
    tensor[4,4] _t0AF1 = [_t0AE1, _t0AE6, _t0AEB, _t0AF0];
    tensor[4,4][4] _t0AF2 = {_t0AB2, _t0AC7, _t0ADC, _t0AF1};
    tensor[4,4][4][4] _t0AF3 = {_t09F3, _t0A48, _t0A9D, _t0AF2};
    real _t0AF4 = time054B[1];
    int _t0AF5 = prim $r2i01B7 (_t0AF4);
    tensor[4,4][4] _t0AF6 = prim $sub01C0<tensor[4,4][4]; %4> (_t0AF3, _t0AF5);
    real _t0AF7 = time054B[1];
    int _t0AF8 = prim $r2i01B7 (_t0AF7);
    int[2] _t0AF9 = func nextCell4054F (_t0AF8, cellId0548, mesh0547);
    int _t0AFA = 1;
    int _t0AFB = prim $sub01C0<int; %2> (_t0AF9, _t0AFA);
    tensor[4,4] _t0AFC = prim $sub01C0<tensor[4,4]; %4> (_t0AF6, _t0AFB);
    real _t0AFD = time054B[0];
    vec3 _t0AFE = prim *0036<$[3]> (_t0AFD, dPos054A);
    vec3 _t0AFF = prim +0017<$[3]> (_t0AFE, refPos0549);
    real _t0B00 = _t0AFF[0];
    real _t0B01 = time054B[0];
    vec3 _t0B02 = prim *0036<$[3]> (_t0B01, dPos054A);
    vec3 _t0B03 = prim +0017<$[3]> (_t0B02, refPos0549);
    real _t0B04 = _t0B03[1];
    real _t0B05 = time054B[0];
    vec3 _t0B06 = prim *0036<$[3]> (_t0B05, dPos054A);
    vec3 _t0B07 = prim +0017<$[3]> (_t0B06, refPos0549);
    real _t0B08 = _t0B07[2];
    real _t0B09 = 0.1e1;
    vec4 _t0B0A = [_t0B00, _t0B04, _t0B08, _t0B09];
    vec4 _t0B0B = prim •00CE<$[4,4]; $[4]; $[4]> (_t0AFC, _t0B0A);
    real _t0B0C = _t0B0B[2];
    vec3 _t0B0D = [_t0830, _t099E, _t0B0C];
    real _t0B0E = time054B[1];
    int _t0B0F = prim $r2i01B7 (_t0B0E);
    int[2] _t0B10 = func nextCell4054F (_t0B0F, cellId0548, mesh0547);
    int _t0B11 = 1;
    int _t0B12 = prim $sub01C0<int; %2> (_t0B10, _t0B11);
    Femdata: MeshPos _t0B13 = extractFemItemN((mesh0547, _t06C2, _t0B0D, _t0B12),RefBuild(Mesh),);
    return _t0B13;
  } else {
    real _t0B14 = time054B[0];
    vec3 _t0B15 = prim *0036<$[3]> (_t0B14, dPos054A);
    vec3 _t0B16 = prim +0017<$[3]> (_t0B15, refPos0549);
    Femdata: MeshPos _t0B17 = extractFemItemN((mesh0547, _t0B16),InvalidBuildBoundary(MeshPos),);
    return _t0B17;
  }
}
function int[2]#8 nextCell4054F (int faceIdx0B18, int cell0B19, Femdata: Mesh mesh0B1A)
{
  int _t0B1B = -1;
  bool _t0B1C = prim ==0082 (faceIdx0B18, _t0B1B);
  if _t0B1C {
    int _t0B1D = -1;
    int _t0B1E = -1;
    int[2] _t0B1F = {_t0B1D, _t0B1E};
    return _t0B1F;
  } else {
    int _t0B20 = 8;
    int _t0B21 = prim *0033 (cell0B19, _t0B20);
    int _t0B22 = 2;
    int _t0B23 = prim *0033 (faceIdx0B18, _t0B22);
    int _t0B24 = prim +0015 (_t0B21, _t0B23);
    int[2] _t0B25 = extractFemItemN((mesh0B1A, _t0B24),CellFaceCell(Mesh),);
    return _t0B25;
  }
}
function vec2#0 _enter0B26 (vec3 refPos0B27, vec3 dPos0B28)
{
  real time0B29 = +inf;
  int face0B2A = -1;
  real faceTime0B2B = -inf;
  string _t0B2C = "\ntest :";
  real _t0B2D = 0.57735026919e0;
  real _t0B2E = 0.57735026919e0;
  real _t0B2F = 0.57735026919e0;
  real _t0B30 = 0.57735026919e0;
  vec3 _t0B31 = [_t0B2E, _t0B2F, _t0B30];
  real _t0B32 = prim •00CE<$[3]; $[3]; $[]> (_t0B31, refPos0B27);
  real _t0B33 = prim -0026<$[]> (_t0B2D, _t0B32);
  real _t0B34 = 0.57735026919e0;
  real _t0B35 = 0.57735026919e0;
  real _t0B36 = 0.57735026919e0;
  vec3 _t0B37 = [_t0B34, _t0B35, _t0B36];
  real _t0B38 = prim •00CE<$[3]; $[3]; $[]> (_t0B37, dPos0B28);
  real _t0B39 = prim /0055 (_t0B33, _t0B38);
  string _t0B3A = " test2: ";
  real _t0B3B = 0.57735026919e0;
  real _t0B3C = 0.57735026919e0;
  real _t0B3D = 0.57735026919e0;
  vec3 _t0B3E = [_t0B3B, _t0B3C, _t0B3D];
  real _t0B3F = prim •00CE<$[3]; $[3]; $[]> (_t0B3E, dPos0B28);
  string _t0B40 = " insideTest: ";
  real _t0B41 = 0.1e1;
  real _t0B42 = 0.1e-7;
  real _t0B43 = prim +0017<$[]> (_t0B41, _t0B42);
  real _t0B44 = 0.1e1;
  real _t0B45 = 0.1e1;
  real _t0B46 = 0.1e1;
  vec3 _t0B47 = [_t0B44, _t0B45, _t0B46];
  real _t0B48 = 0.57735026919e0;
  real _t0B49 = 0.57735026919e0;
  real _t0B4A = 0.57735026919e0;
  real _t0B4B = 0.57735026919e0;
  vec3 _t0B4C = [_t0B49, _t0B4A, _t0B4B];
  real _t0B4D = prim •00CE<$[3]; $[3]; $[]> (_t0B4C, refPos0B27);
  real _t0B4E = prim -0026<$[]> (_t0B48, _t0B4D);
  real _t0B4F = 0.57735026919e0;
  real _t0B50 = 0.57735026919e0;
  real _t0B51 = 0.57735026919e0;
  vec3 _t0B52 = [_t0B4F, _t0B50, _t0B51];
  real _t0B53 = prim •00CE<$[3]; $[3]; $[]> (_t0B52, dPos0B28);
  real _t0B54 = prim /0055 (_t0B4E, _t0B53);
  vec3 _t0B55 = prim *0038<$[3]> (dPos0B28, _t0B54);
  vec3 _t0B56 = prim +0017<$[3]> (refPos0B27, _t0B55);
  real _t0B57 = prim •00CE<$[3]; $[3]; $[]> (_t0B47, _t0B56);
  bool _t0B58 = prim >0080 (_t0B43, _t0B57);
  real _t0B59 = 0.1e-7;
  real _t0B5A = 0.1e-7;
  real _t0B5B = 0.1e-7;
  vec3 _t0B5C = [_t0B59, _t0B5A, _t0B5B];
  real _t0B5D = 0.57735026919e0;
  real _t0B5E = 0.57735026919e0;
  real _t0B5F = 0.57735026919e0;
  real _t0B60 = 0.57735026919e0;
  vec3 _t0B61 = [_t0B5E, _t0B5F, _t0B60];
  real _t0B62 = prim •00CE<$[3]; $[3]; $[]> (_t0B61, refPos0B27);
  real _t0B63 = prim -0026<$[]> (_t0B5D, _t0B62);
  real _t0B64 = 0.57735026919e0;
  real _t0B65 = 0.57735026919e0;
  real _t0B66 = 0.57735026919e0;
  vec3 _t0B67 = [_t0B64, _t0B65, _t0B66];
  real _t0B68 = prim •00CE<$[3]; $[3]; $[]> (_t0B67, dPos0B28);
  real _t0B69 = prim /0055 (_t0B63, _t0B68);
  vec3 _t0B6A = prim *0038<$[3]> (dPos0B28, _t0B69);
  vec3 _t0B6B = prim +0017<$[3]> (refPos0B27, _t0B6A);
  vec3 _t0B6C = prim +0017<$[3]> (_t0B5C, _t0B6B);
  real _t0B6D = _t0B6C[0];
  real _t0B6E = -0.e0;
  bool _t0B6F = prim >0080 (_t0B6D, _t0B6E);
  real _t0B70 = 0.1e-7;
  real _t0B71 = 0.1e-7;
  real _t0B72 = 0.1e-7;
  vec3 _t0B73 = [_t0B70, _t0B71, _t0B72];
  real _t0B74 = 0.57735026919e0;
  real _t0B75 = 0.57735026919e0;
  real _t0B76 = 0.57735026919e0;
  real _t0B77 = 0.57735026919e0;
  vec3 _t0B78 = [_t0B75, _t0B76, _t0B77];
  real _t0B79 = prim •00CE<$[3]; $[3]; $[]> (_t0B78, refPos0B27);
  real _t0B7A = prim -0026<$[]> (_t0B74, _t0B79);
  real _t0B7B = 0.57735026919e0;
  real _t0B7C = 0.57735026919e0;
  real _t0B7D = 0.57735026919e0;
  vec3 _t0B7E = [_t0B7B, _t0B7C, _t0B7D];
  real _t0B7F = prim •00CE<$[3]; $[3]; $[]> (_t0B7E, dPos0B28);
  real _t0B80 = prim /0055 (_t0B7A, _t0B7F);
  vec3 _t0B81 = prim *0038<$[3]> (dPos0B28, _t0B80);
  vec3 _t0B82 = prim +0017<$[3]> (refPos0B27, _t0B81);
  vec3 _t0B83 = prim +0017<$[3]> (_t0B73, _t0B82);
  real _t0B84 = _t0B83[1];
  real _t0B85 = -0.e0;
  bool _t0B86 = prim >0080 (_t0B84, _t0B85);
  real _t0B87 = 0.1e-7;
  real _t0B88 = 0.1e-7;
  real _t0B89 = 0.1e-7;
  vec3 _t0B8A = [_t0B87, _t0B88, _t0B89];
  real _t0B8B = 0.57735026919e0;
  real _t0B8C = 0.57735026919e0;
  real _t0B8D = 0.57735026919e0;
  real _t0B8E = 0.57735026919e0;
  vec3 _t0B8F = [_t0B8C, _t0B8D, _t0B8E];
  real _t0B90 = prim •00CE<$[3]; $[3]; $[]> (_t0B8F, refPos0B27);
  real _t0B91 = prim -0026<$[]> (_t0B8B, _t0B90);
  real _t0B92 = 0.57735026919e0;
  real _t0B93 = 0.57735026919e0;
  real _t0B94 = 0.57735026919e0;
  vec3 _t0B95 = [_t0B92, _t0B93, _t0B94];
  real _t0B96 = prim •00CE<$[3]; $[3]; $[]> (_t0B95, dPos0B28);
  real _t0B97 = prim /0055 (_t0B91, _t0B96);
  vec3 _t0B98 = prim *0038<$[3]> (dPos0B28, _t0B97);
  vec3 _t0B99 = prim +0017<$[3]> (refPos0B27, _t0B98);
  vec3 _t0B9A = prim +0017<$[3]> (_t0B8A, _t0B99);
  real _t0B9B = _t0B9A[2];
  real _t0B9C = -0.e0;
  bool _t0B9D = prim >0080 (_t0B9B, _t0B9C);
  bool _t0B9E = prim $and01C4 (_t0B86, _t0B9D);
  bool _t0B9F = prim $and01C4 (_t0B6F, _t0B9E);
  bool _t0BA0 = prim $and01C4 (_t0B58, _t0B9F);
  string _t0BA1 = " dist: ";
  real _t0BA2 = 0.57735026919e0;
  real _t0BA3 = 0.57735026919e0;
  real _t0BA4 = 0.57735026919e0;
  real _t0BA5 = 0.57735026919e0;
  vec3 _t0BA6 = [_t0BA3, _t0BA4, _t0BA5];
  real _t0BA7 = prim •00CE<$[3]; $[3]; $[]> (_t0BA6, refPos0B27);
  real _t0BA8 = prim -0026<$[]> (_t0BA2, _t0BA7);
  real _t0BA9 = prim |()|00B5<$[]> (_t0BA8);
  string _t0BAA = "signed dist: ";
  real _t0BAB = 0.57735026919e0;
  real _t0BAC = 0.57735026919e0;
  real _t0BAD = 0.57735026919e0;
  real _t0BAE = 0.57735026919e0;
  vec3 _t0BAF = [_t0BAC, _t0BAD, _t0BAE];
  real _t0BB0 = prim •00CE<$[3]; $[3]; $[]> (_t0BAF, refPos0B27);
  real _t0BB1 = prim -0026<$[]> (_t0BAB, _t0BB0);
  string _t0BB2 = " face: ";
  int _t0BB3 = 0;
  string _t0BB4 = " place: ";
  real _t0BB5 = 0.57735026919e0;
  real _t0BB6 = 0.57735026919e0;
  real _t0BB7 = 0.57735026919e0;
  real _t0BB8 = 0.57735026919e0;
  vec3 _t0BB9 = [_t0BB6, _t0BB7, _t0BB8];
  real _t0BBA = prim •00CE<$[3]; $[3]; $[]> (_t0BB9, refPos0B27);
  real _t0BBB = prim -0026<$[]> (_t0BB5, _t0BBA);
  real _t0BBC = 0.57735026919e0;
  real _t0BBD = 0.57735026919e0;
  real _t0BBE = 0.57735026919e0;
  vec3 _t0BBF = [_t0BBC, _t0BBD, _t0BBE];
  real _t0BC0 = prim •00CE<$[3]; $[3]; $[]> (_t0BBF, dPos0B28);
  real _t0BC1 = prim /0055 (_t0BBB, _t0BC0);
  vec3 _t0BC2 = prim *0038<$[3]> (dPos0B28, _t0BC1);
  vec3 _t0BC3 = prim +0017<$[3]> (refPos0B27, _t0BC2);
  string _t0BC4 = " error: ";
  real _t0BC5 = 0.57735026919e0;
  real _t0BC6 = 0.57735026919e0;
  real _t0BC7 = 0.57735026919e0;
  real _t0BC8 = 0.57735026919e0;
  vec3 _t0BC9 = [_t0BC6, _t0BC7, _t0BC8];
  real _t0BCA = 0.57735026919e0;
  real _t0BCB = 0.57735026919e0;
  real _t0BCC = 0.57735026919e0;
  real _t0BCD = 0.57735026919e0;
  vec3 _t0BCE = [_t0BCB, _t0BCC, _t0BCD];
  real _t0BCF = prim •00CE<$[3]; $[3]; $[]> (_t0BCE, refPos0B27);
  real _t0BD0 = prim -0026<$[]> (_t0BCA, _t0BCF);
  real _t0BD1 = 0.57735026919e0;
  real _t0BD2 = 0.57735026919e0;
  real _t0BD3 = 0.57735026919e0;
  vec3 _t0BD4 = [_t0BD1, _t0BD2, _t0BD3];
  real _t0BD5 = prim •00CE<$[3]; $[3]; $[]> (_t0BD4, dPos0B28);
  real _t0BD6 = prim /0055 (_t0BD0, _t0BD5);
  vec3 _t0BD7 = prim *0038<$[3]> (dPos0B28, _t0BD6);
  vec3 _t0BD8 = prim +0017<$[3]> (refPos0B27, _t0BD7);
  real _t0BD9 = prim •00CE<$[3]; $[3]; $[]> (_t0BC9, _t0BD8);
  real _t0BDA = prim -0026<$[]> (_t0BC5, _t0BD9);
  real _t0BDB = prim |()|00B5<$[]> (_t0BDA);
  string _t0BDC = " offset :";
  string _t0BDD = " dp: ";
  string _t0BDE = " otherPossibleTime: ";
  string _t0BDF = "\n";
  print (_t0B2C, _t0B39, _t0B3A, _t0B3F, _t0B40, _t0BA0, _t0BA1, _t0BA9, _t0BAA, _t0BB1, _t0BB2, _t0BB3, _t0BB4, _t0BC3, _t0BC4, _t0BDB, _t0BDC, refPos0B27, _t0BDD, dPos0B28, _t0BDE, faceTime0B2B, _t0BDF);
  real _t0BE0 = 0.57735026919e0;
  real _t0BE1 = 0.57735026919e0;
  real _t0BE2 = 0.57735026919e0;
  real _t0BE3 = 0.57735026919e0;
  vec3 _t0BE4 = [_t0BE1, _t0BE2, _t0BE3];
  real _t0BE5 = prim •00CE<$[3]; $[3]; $[]> (_t0BE4, refPos0B27);
  real _t0BE6 = prim -0026<$[]> (_t0BE0, _t0BE5);
  real _t0BE7 = 0.57735026919e0;
  real _t0BE8 = 0.57735026919e0;
  real _t0BE9 = 0.57735026919e0;
  vec3 _t0BEA = [_t0BE7, _t0BE8, _t0BE9];
  real _t0BEB = prim •00CE<$[3]; $[3]; $[]> (_t0BEA, dPos0B28);
  real _t0BEC = prim /0055 (_t0BE6, _t0BEB);
  real _t0BED = -0.1e-7;
  bool _t0BEE = prim >=007E (_t0BEC, _t0BED);
  real _t0BEF = 0.57735026919e0;
  real _t0BF0 = 0.57735026919e0;
  real _t0BF1 = 0.57735026919e0;
  real _t0BF2 = 0.57735026919e0;
  vec3 _t0BF3 = [_t0BF0, _t0BF1, _t0BF2];
  real _t0BF4 = prim •00CE<$[3]; $[3]; $[]> (_t0BF3, refPos0B27);
  real _t0BF5 = prim -0026<$[]> (_t0BEF, _t0BF4);
  real _t0BF6 = 0.57735026919e0;
  real _t0BF7 = 0.57735026919e0;
  real _t0BF8 = 0.57735026919e0;
  vec3 _t0BF9 = [_t0BF6, _t0BF7, _t0BF8];
  real _t0BFA = prim •00CE<$[3]; $[3]; $[]> (_t0BF9, dPos0B28);
  real _t0BFB = prim /0055 (_t0BF5, _t0BFA);
  bool _t0BFC = prim >0080 (time0B29, _t0BFB);
  real _t0BFD = 0.57735026919e0;
  real _t0BFE = 0.57735026919e0;
  real _t0BFF = 0.57735026919e0;
  vec3 _t0C00 = [_t0BFD, _t0BFE, _t0BFF];
  real _t0C01 = prim •00CE<$[3]; $[3]; $[]> (_t0C00, dPos0B28);
  real _t0C02 = prim |()|00B5<$[]> (_t0C01);
  real _t0C03 = 0.1e-7;
  bool _t0C04 = prim >=007E (_t0C02, _t0C03);
  bool _t0C05 = prim $and01C4 (_t0BFC, _t0C04);
  bool _t0C06 = prim $and01C4 (_t0BEE, _t0C05);
  if _t0C06 {
    real _t0C07 = 0.1e1;
    real _t0C08 = 0.1e-7;
    real _t0C09 = prim +0017<$[]> (_t0C07, _t0C08);
    real _t0C0A = 0.1e1;
    real _t0C0B = 0.1e1;
    real _t0C0C = 0.1e1;
    vec3 _t0C0D = [_t0C0A, _t0C0B, _t0C0C];
    real _t0C0E = 0.57735026919e0;
    real _t0C0F = 0.57735026919e0;
    real _t0C10 = 0.57735026919e0;
    real _t0C11 = 0.57735026919e0;
    vec3 _t0C12 = [_t0C0F, _t0C10, _t0C11];
    real _t0C13 = prim •00CE<$[3]; $[3]; $[]> (_t0C12, refPos0B27);
    real _t0C14 = prim -0026<$[]> (_t0C0E, _t0C13);
    real _t0C15 = 0.57735026919e0;
    real _t0C16 = 0.57735026919e0;
    real _t0C17 = 0.57735026919e0;
    vec3 _t0C18 = [_t0C15, _t0C16, _t0C17];
    real _t0C19 = prim •00CE<$[3]; $[3]; $[]> (_t0C18, dPos0B28);
    real _t0C1A = prim /0055 (_t0C14, _t0C19);
    vec3 _t0C1B = prim *0038<$[3]> (dPos0B28, _t0C1A);
    vec3 _t0C1C = prim +0017<$[3]> (refPos0B27, _t0C1B);
    real _t0C1D = prim •00CE<$[3]; $[3]; $[]> (_t0C0D, _t0C1C);
    bool _t0C1E = prim >0080 (_t0C09, _t0C1D);
    real _t0C1F = 0.1e-7;
    real _t0C20 = 0.1e-7;
    real _t0C21 = 0.1e-7;
    vec3 _t0C22 = [_t0C1F, _t0C20, _t0C21];
    real _t0C23 = 0.57735026919e0;
    real _t0C24 = 0.57735026919e0;
    real _t0C25 = 0.57735026919e0;
    real _t0C26 = 0.57735026919e0;
    vec3 _t0C27 = [_t0C24, _t0C25, _t0C26];
    real _t0C28 = prim •00CE<$[3]; $[3]; $[]> (_t0C27, refPos0B27);
    real _t0C29 = prim -0026<$[]> (_t0C23, _t0C28);
    real _t0C2A = 0.57735026919e0;
    real _t0C2B = 0.57735026919e0;
    real _t0C2C = 0.57735026919e0;
    vec3 _t0C2D = [_t0C2A, _t0C2B, _t0C2C];
    real _t0C2E = prim •00CE<$[3]; $[3]; $[]> (_t0C2D, dPos0B28);
    real _t0C2F = prim /0055 (_t0C29, _t0C2E);
    vec3 _t0C30 = prim *0038<$[3]> (dPos0B28, _t0C2F);
    vec3 _t0C31 = prim +0017<$[3]> (refPos0B27, _t0C30);
    vec3 _t0C32 = prim +0017<$[3]> (_t0C22, _t0C31);
    real _t0C33 = _t0C32[0];
    real _t0C34 = -0.e0;
    bool _t0C35 = prim >0080 (_t0C33, _t0C34);
    real _t0C36 = 0.1e-7;
    real _t0C37 = 0.1e-7;
    real _t0C38 = 0.1e-7;
    vec3 _t0C39 = [_t0C36, _t0C37, _t0C38];
    real _t0C3A = 0.57735026919e0;
    real _t0C3B = 0.57735026919e0;
    real _t0C3C = 0.57735026919e0;
    real _t0C3D = 0.57735026919e0;
    vec3 _t0C3E = [_t0C3B, _t0C3C, _t0C3D];
    real _t0C3F = prim •00CE<$[3]; $[3]; $[]> (_t0C3E, refPos0B27);
    real _t0C40 = prim -0026<$[]> (_t0C3A, _t0C3F);
    real _t0C41 = 0.57735026919e0;
    real _t0C42 = 0.57735026919e0;
    real _t0C43 = 0.57735026919e0;
    vec3 _t0C44 = [_t0C41, _t0C42, _t0C43];
    real _t0C45 = prim •00CE<$[3]; $[3]; $[]> (_t0C44, dPos0B28);
    real _t0C46 = prim /0055 (_t0C40, _t0C45);
    vec3 _t0C47 = prim *0038<$[3]> (dPos0B28, _t0C46);
    vec3 _t0C48 = prim +0017<$[3]> (refPos0B27, _t0C47);
    vec3 _t0C49 = prim +0017<$[3]> (_t0C39, _t0C48);
    real _t0C4A = _t0C49[1];
    real _t0C4B = -0.e0;
    bool _t0C4C = prim >0080 (_t0C4A, _t0C4B);
    real _t0C4D = 0.1e-7;
    real _t0C4E = 0.1e-7;
    real _t0C4F = 0.1e-7;
    vec3 _t0C50 = [_t0C4D, _t0C4E, _t0C4F];
    real _t0C51 = 0.57735026919e0;
    real _t0C52 = 0.57735026919e0;
    real _t0C53 = 0.57735026919e0;
    real _t0C54 = 0.57735026919e0;
    vec3 _t0C55 = [_t0C52, _t0C53, _t0C54];
    real _t0C56 = prim •00CE<$[3]; $[3]; $[]> (_t0C55, refPos0B27);
    real _t0C57 = prim -0026<$[]> (_t0C51, _t0C56);
    real _t0C58 = 0.57735026919e0;
    real _t0C59 = 0.57735026919e0;
    real _t0C5A = 0.57735026919e0;
    vec3 _t0C5B = [_t0C58, _t0C59, _t0C5A];
    real _t0C5C = prim •00CE<$[3]; $[3]; $[]> (_t0C5B, dPos0B28);
    real _t0C5D = prim /0055 (_t0C57, _t0C5C);
    vec3 _t0C5E = prim *0038<$[3]> (dPos0B28, _t0C5D);
    vec3 _t0C5F = prim +0017<$[3]> (refPos0B27, _t0C5E);
    vec3 _t0C60 = prim +0017<$[3]> (_t0C50, _t0C5F);
    real _t0C61 = _t0C60[2];
    real _t0C62 = -0.e0;
    bool _t0C63 = prim >0080 (_t0C61, _t0C62);
    bool _t0C64 = prim $and01C4 (_t0C4C, _t0C63);
    bool _t0C65 = prim $and01C4 (_t0C35, _t0C64);
    bool _t0C66 = prim $and01C4 (_t0C1E, _t0C65);
    if _t0C66 {
      string _t0C67 = "Saving at this face!";
      real _t0C68 = 0.57735026919e0;
      real _t0C69 = 0.57735026919e0;
      real _t0C6A = 0.57735026919e0;
      real _t0C6B = 0.57735026919e0;
      vec3 _t0C6C = [_t0C69, _t0C6A, _t0C6B];
      real _t0C6D = prim •00CE<$[3]; $[3]; $[]> (_t0C6C, refPos0B27);
      real _t0C6E = prim -0026<$[]> (_t0C68, _t0C6D);
      real _t0C6F = 0.57735026919e0;
      real _t0C70 = 0.57735026919e0;
      real _t0C71 = 0.57735026919e0;
      vec3 _t0C72 = [_t0C6F, _t0C70, _t0C71];
      real _t0C73 = prim •00CE<$[3]; $[3]; $[]> (_t0C72, dPos0B28);
      real _t0C74 = prim /0055 (_t0C6E, _t0C73);
      real _t0C75 = 0.57735026919e0;
      real _t0C76 = 0.57735026919e0;
      real _t0C77 = 0.57735026919e0;
      real _t0C78 = 0.57735026919e0;
      vec3 _t0C79 = [_t0C76, _t0C77, _t0C78];
      real _t0C7A = prim •00CE<$[3]; $[3]; $[]> (_t0C79, refPos0B27);
      real _t0C7B = prim -0026<$[]> (_t0C75, _t0C7A);
      real _t0C7C = 0.57735026919e0;
      real _t0C7D = 0.57735026919e0;
      real _t0C7E = 0.57735026919e0;
      vec3 _t0C7F = [_t0C7C, _t0C7D, _t0C7E];
      real _t0C80 = prim •00CE<$[3]; $[3]; $[]> (_t0C7F, dPos0B28);
      real _t0C81 = prim /0055 (_t0C7B, _t0C80);
      bool _t0C82 = prim >0080 (time0B29, _t0C81);
      string _t0C83 = "\n";
      print (_t0C67, _t0C74, _t0C82, _t0C83);
      real _t0C84 = 0.57735026919e0;
      real _t0C85 = 0.57735026919e0;
      real _t0C86 = 0.57735026919e0;
      real _t0C87 = 0.57735026919e0;
      vec3 _t0C88 = [_t0C85, _t0C86, _t0C87];
      real _t0C89 = prim •00CE<$[3]; $[3]; $[]> (_t0C88, refPos0B27);
      real _t0C8A = prim -0026<$[]> (_t0C84, _t0C89);
      real _t0C8B = 0.57735026919e0;
      real _t0C8C = 0.57735026919e0;
      real _t0C8D = 0.57735026919e0;
      vec3 _t0C8E = [_t0C8B, _t0C8C, _t0C8D];
      real _t0C8F = prim •00CE<$[3]; $[3]; $[]> (_t0C8E, dPos0B28);
      time0B29 = prim /0055 (_t0C8A, _t0C8F);
      face0B2A = 0;
    }
  }
  string _t0C90 = "\ntest :";
  real _t0C91 = 0.e0;
  real _t0C92 = -0.1e1;
  real _t0C93 = 0.e0;
  real _t0C94 = 0.e0;
  vec3 _t0C95 = [_t0C92, _t0C93, _t0C94];
  real _t0C96 = prim •00CE<$[3]; $[3]; $[]> (_t0C95, refPos0B27);
  real _t0C97 = prim -0026<$[]> (_t0C91, _t0C96);
  real _t0C98 = -0.1e1;
  real _t0C99 = 0.e0;
  real _t0C9A = 0.e0;
  vec3 _t0C9B = [_t0C98, _t0C99, _t0C9A];
  real _t0C9C = prim •00CE<$[3]; $[3]; $[]> (_t0C9B, dPos0B28);
  real _t0C9D = prim /0055 (_t0C97, _t0C9C);
  string _t0C9E = " test2: ";
  real _t0C9F = -0.1e1;
  real _t0CA0 = 0.e0;
  real _t0CA1 = 0.e0;
  vec3 _t0CA2 = [_t0C9F, _t0CA0, _t0CA1];
  real _t0CA3 = prim •00CE<$[3]; $[3]; $[]> (_t0CA2, dPos0B28);
  string _t0CA4 = " insideTest: ";
  real _t0CA5 = 0.1e1;
  real _t0CA6 = 0.1e-7;
  real _t0CA7 = prim +0017<$[]> (_t0CA5, _t0CA6);
  real _t0CA8 = 0.1e1;
  real _t0CA9 = 0.1e1;
  real _t0CAA = 0.1e1;
  vec3 _t0CAB = [_t0CA8, _t0CA9, _t0CAA];
  real _t0CAC = 0.e0;
  real _t0CAD = -0.1e1;
  real _t0CAE = 0.e0;
  real _t0CAF = 0.e0;
  vec3 _t0CB0 = [_t0CAD, _t0CAE, _t0CAF];
  real _t0CB1 = prim •00CE<$[3]; $[3]; $[]> (_t0CB0, refPos0B27);
  real _t0CB2 = prim -0026<$[]> (_t0CAC, _t0CB1);
  real _t0CB3 = -0.1e1;
  real _t0CB4 = 0.e0;
  real _t0CB5 = 0.e0;
  vec3 _t0CB6 = [_t0CB3, _t0CB4, _t0CB5];
  real _t0CB7 = prim •00CE<$[3]; $[3]; $[]> (_t0CB6, dPos0B28);
  real _t0CB8 = prim /0055 (_t0CB2, _t0CB7);
  vec3 _t0CB9 = prim *0038<$[3]> (dPos0B28, _t0CB8);
  vec3 _t0CBA = prim +0017<$[3]> (refPos0B27, _t0CB9);
  real _t0CBB = prim •00CE<$[3]; $[3]; $[]> (_t0CAB, _t0CBA);
  bool _t0CBC = prim >0080 (_t0CA7, _t0CBB);
  real _t0CBD = 0.1e-7;
  real _t0CBE = 0.1e-7;
  real _t0CBF = 0.1e-7;
  vec3 _t0CC0 = [_t0CBD, _t0CBE, _t0CBF];
  real _t0CC1 = 0.e0;
  real _t0CC2 = -0.1e1;
  real _t0CC3 = 0.e0;
  real _t0CC4 = 0.e0;
  vec3 _t0CC5 = [_t0CC2, _t0CC3, _t0CC4];
  real _t0CC6 = prim •00CE<$[3]; $[3]; $[]> (_t0CC5, refPos0B27);
  real _t0CC7 = prim -0026<$[]> (_t0CC1, _t0CC6);
  real _t0CC8 = -0.1e1;
  real _t0CC9 = 0.e0;
  real _t0CCA = 0.e0;
  vec3 _t0CCB = [_t0CC8, _t0CC9, _t0CCA];
  real _t0CCC = prim •00CE<$[3]; $[3]; $[]> (_t0CCB, dPos0B28);
  real _t0CCD = prim /0055 (_t0CC7, _t0CCC);
  vec3 _t0CCE = prim *0038<$[3]> (dPos0B28, _t0CCD);
  vec3 _t0CCF = prim +0017<$[3]> (refPos0B27, _t0CCE);
  vec3 _t0CD0 = prim +0017<$[3]> (_t0CC0, _t0CCF);
  real _t0CD1 = _t0CD0[0];
  real _t0CD2 = -0.e0;
  bool _t0CD3 = prim >0080 (_t0CD1, _t0CD2);
  real _t0CD4 = 0.1e-7;
  real _t0CD5 = 0.1e-7;
  real _t0CD6 = 0.1e-7;
  vec3 _t0CD7 = [_t0CD4, _t0CD5, _t0CD6];
  real _t0CD8 = 0.e0;
  real _t0CD9 = -0.1e1;
  real _t0CDA = 0.e0;
  real _t0CDB = 0.e0;
  vec3 _t0CDC = [_t0CD9, _t0CDA, _t0CDB];
  real _t0CDD = prim •00CE<$[3]; $[3]; $[]> (_t0CDC, refPos0B27);
  real _t0CDE = prim -0026<$[]> (_t0CD8, _t0CDD);
  real _t0CDF = -0.1e1;
  real _t0CE0 = 0.e0;
  real _t0CE1 = 0.e0;
  vec3 _t0CE2 = [_t0CDF, _t0CE0, _t0CE1];
  real _t0CE3 = prim •00CE<$[3]; $[3]; $[]> (_t0CE2, dPos0B28);
  real _t0CE4 = prim /0055 (_t0CDE, _t0CE3);
  vec3 _t0CE5 = prim *0038<$[3]> (dPos0B28, _t0CE4);
  vec3 _t0CE6 = prim +0017<$[3]> (refPos0B27, _t0CE5);
  vec3 _t0CE7 = prim +0017<$[3]> (_t0CD7, _t0CE6);
  real _t0CE8 = _t0CE7[1];
  real _t0CE9 = -0.e0;
  bool _t0CEA = prim >0080 (_t0CE8, _t0CE9);
  real _t0CEB = 0.1e-7;
  real _t0CEC = 0.1e-7;
  real _t0CED = 0.1e-7;
  vec3 _t0CEE = [_t0CEB, _t0CEC, _t0CED];
  real _t0CEF = 0.e0;
  real _t0CF0 = -0.1e1;
  real _t0CF1 = 0.e0;
  real _t0CF2 = 0.e0;
  vec3 _t0CF3 = [_t0CF0, _t0CF1, _t0CF2];
  real _t0CF4 = prim •00CE<$[3]; $[3]; $[]> (_t0CF3, refPos0B27);
  real _t0CF5 = prim -0026<$[]> (_t0CEF, _t0CF4);
  real _t0CF6 = -0.1e1;
  real _t0CF7 = 0.e0;
  real _t0CF8 = 0.e0;
  vec3 _t0CF9 = [_t0CF6, _t0CF7, _t0CF8];
  real _t0CFA = prim •00CE<$[3]; $[3]; $[]> (_t0CF9, dPos0B28);
  real _t0CFB = prim /0055 (_t0CF5, _t0CFA);
  vec3 _t0CFC = prim *0038<$[3]> (dPos0B28, _t0CFB);
  vec3 _t0CFD = prim +0017<$[3]> (refPos0B27, _t0CFC);
  vec3 _t0CFE = prim +0017<$[3]> (_t0CEE, _t0CFD);
  real _t0CFF = _t0CFE[2];
  real _t0D00 = -0.e0;
  bool _t0D01 = prim >0080 (_t0CFF, _t0D00);
  bool _t0D02 = prim $and01C4 (_t0CEA, _t0D01);
  bool _t0D03 = prim $and01C4 (_t0CD3, _t0D02);
  bool _t0D04 = prim $and01C4 (_t0CBC, _t0D03);
  string _t0D05 = " dist: ";
  real _t0D06 = 0.e0;
  real _t0D07 = -0.1e1;
  real _t0D08 = 0.e0;
  real _t0D09 = 0.e0;
  vec3 _t0D0A = [_t0D07, _t0D08, _t0D09];
  real _t0D0B = prim •00CE<$[3]; $[3]; $[]> (_t0D0A, refPos0B27);
  real _t0D0C = prim -0026<$[]> (_t0D06, _t0D0B);
  real _t0D0D = prim |()|00B5<$[]> (_t0D0C);
  string _t0D0E = "signed dist: ";
  real _t0D0F = 0.e0;
  real _t0D10 = -0.1e1;
  real _t0D11 = 0.e0;
  real _t0D12 = 0.e0;
  vec3 _t0D13 = [_t0D10, _t0D11, _t0D12];
  real _t0D14 = prim •00CE<$[3]; $[3]; $[]> (_t0D13, refPos0B27);
  real _t0D15 = prim -0026<$[]> (_t0D0F, _t0D14);
  string _t0D16 = " face: ";
  int _t0D17 = 1;
  string _t0D18 = " place: ";
  real _t0D19 = 0.e0;
  real _t0D1A = -0.1e1;
  real _t0D1B = 0.e0;
  real _t0D1C = 0.e0;
  vec3 _t0D1D = [_t0D1A, _t0D1B, _t0D1C];
  real _t0D1E = prim •00CE<$[3]; $[3]; $[]> (_t0D1D, refPos0B27);
  real _t0D1F = prim -0026<$[]> (_t0D19, _t0D1E);
  real _t0D20 = -0.1e1;
  real _t0D21 = 0.e0;
  real _t0D22 = 0.e0;
  vec3 _t0D23 = [_t0D20, _t0D21, _t0D22];
  real _t0D24 = prim •00CE<$[3]; $[3]; $[]> (_t0D23, dPos0B28);
  real _t0D25 = prim /0055 (_t0D1F, _t0D24);
  vec3 _t0D26 = prim *0038<$[3]> (dPos0B28, _t0D25);
  vec3 _t0D27 = prim +0017<$[3]> (refPos0B27, _t0D26);
  string _t0D28 = " error: ";
  real _t0D29 = 0.e0;
  real _t0D2A = -0.1e1;
  real _t0D2B = 0.e0;
  real _t0D2C = 0.e0;
  vec3 _t0D2D = [_t0D2A, _t0D2B, _t0D2C];
  real _t0D2E = 0.e0;
  real _t0D2F = -0.1e1;
  real _t0D30 = 0.e0;
  real _t0D31 = 0.e0;
  vec3 _t0D32 = [_t0D2F, _t0D30, _t0D31];
  real _t0D33 = prim •00CE<$[3]; $[3]; $[]> (_t0D32, refPos0B27);
  real _t0D34 = prim -0026<$[]> (_t0D2E, _t0D33);
  real _t0D35 = -0.1e1;
  real _t0D36 = 0.e0;
  real _t0D37 = 0.e0;
  vec3 _t0D38 = [_t0D35, _t0D36, _t0D37];
  real _t0D39 = prim •00CE<$[3]; $[3]; $[]> (_t0D38, dPos0B28);
  real _t0D3A = prim /0055 (_t0D34, _t0D39);
  vec3 _t0D3B = prim *0038<$[3]> (dPos0B28, _t0D3A);
  vec3 _t0D3C = prim +0017<$[3]> (refPos0B27, _t0D3B);
  real _t0D3D = prim •00CE<$[3]; $[3]; $[]> (_t0D2D, _t0D3C);
  real _t0D3E = prim -0026<$[]> (_t0D29, _t0D3D);
  real _t0D3F = prim |()|00B5<$[]> (_t0D3E);
  string _t0D40 = " offset :";
  string _t0D41 = " dp: ";
  string _t0D42 = " otherPossibleTime: ";
  string _t0D43 = "\n";
  print (_t0C90, _t0C9D, _t0C9E, _t0CA3, _t0CA4, _t0D04, _t0D05, _t0D0D, _t0D0E, _t0D15, _t0D16, _t0D17, _t0D18, _t0D27, _t0D28, _t0D3F, _t0D40, refPos0B27, _t0D41, dPos0B28, _t0D42, faceTime0B2B, _t0D43);
  real _t0D44 = 0.e0;
  real _t0D45 = -0.1e1;
  real _t0D46 = 0.e0;
  real _t0D47 = 0.e0;
  vec3 _t0D48 = [_t0D45, _t0D46, _t0D47];
  real _t0D49 = prim •00CE<$[3]; $[3]; $[]> (_t0D48, refPos0B27);
  real _t0D4A = prim -0026<$[]> (_t0D44, _t0D49);
  real _t0D4B = -0.1e1;
  real _t0D4C = 0.e0;
  real _t0D4D = 0.e0;
  vec3 _t0D4E = [_t0D4B, _t0D4C, _t0D4D];
  real _t0D4F = prim •00CE<$[3]; $[3]; $[]> (_t0D4E, dPos0B28);
  real _t0D50 = prim /0055 (_t0D4A, _t0D4F);
  real _t0D51 = -0.1e-7;
  bool _t0D52 = prim >=007E (_t0D50, _t0D51);
  real _t0D53 = 0.e0;
  real _t0D54 = -0.1e1;
  real _t0D55 = 0.e0;
  real _t0D56 = 0.e0;
  vec3 _t0D57 = [_t0D54, _t0D55, _t0D56];
  real _t0D58 = prim •00CE<$[3]; $[3]; $[]> (_t0D57, refPos0B27);
  real _t0D59 = prim -0026<$[]> (_t0D53, _t0D58);
  real _t0D5A = -0.1e1;
  real _t0D5B = 0.e0;
  real _t0D5C = 0.e0;
  vec3 _t0D5D = [_t0D5A, _t0D5B, _t0D5C];
  real _t0D5E = prim •00CE<$[3]; $[3]; $[]> (_t0D5D, dPos0B28);
  real _t0D5F = prim /0055 (_t0D59, _t0D5E);
  bool _t0D60 = prim >0080 (time0B29, _t0D5F);
  real _t0D61 = -0.1e1;
  real _t0D62 = 0.e0;
  real _t0D63 = 0.e0;
  vec3 _t0D64 = [_t0D61, _t0D62, _t0D63];
  real _t0D65 = prim •00CE<$[3]; $[3]; $[]> (_t0D64, dPos0B28);
  real _t0D66 = prim |()|00B5<$[]> (_t0D65);
  real _t0D67 = 0.1e-7;
  bool _t0D68 = prim >=007E (_t0D66, _t0D67);
  bool _t0D69 = prim $and01C4 (_t0D60, _t0D68);
  bool _t0D6A = prim $and01C4 (_t0D52, _t0D69);
  if _t0D6A {
    real _t0D6B = 0.1e1;
    real _t0D6C = 0.1e-7;
    real _t0D6D = prim +0017<$[]> (_t0D6B, _t0D6C);
    real _t0D6E = 0.1e1;
    real _t0D6F = 0.1e1;
    real _t0D70 = 0.1e1;
    vec3 _t0D71 = [_t0D6E, _t0D6F, _t0D70];
    real _t0D72 = 0.e0;
    real _t0D73 = -0.1e1;
    real _t0D74 = 0.e0;
    real _t0D75 = 0.e0;
    vec3 _t0D76 = [_t0D73, _t0D74, _t0D75];
    real _t0D77 = prim •00CE<$[3]; $[3]; $[]> (_t0D76, refPos0B27);
    real _t0D78 = prim -0026<$[]> (_t0D72, _t0D77);
    real _t0D79 = -0.1e1;
    real _t0D7A = 0.e0;
    real _t0D7B = 0.e0;
    vec3 _t0D7C = [_t0D79, _t0D7A, _t0D7B];
    real _t0D7D = prim •00CE<$[3]; $[3]; $[]> (_t0D7C, dPos0B28);
    real _t0D7E = prim /0055 (_t0D78, _t0D7D);
    vec3 _t0D7F = prim *0038<$[3]> (dPos0B28, _t0D7E);
    vec3 _t0D80 = prim +0017<$[3]> (refPos0B27, _t0D7F);
    real _t0D81 = prim •00CE<$[3]; $[3]; $[]> (_t0D71, _t0D80);
    bool _t0D82 = prim >0080 (_t0D6D, _t0D81);
    real _t0D83 = 0.1e-7;
    real _t0D84 = 0.1e-7;
    real _t0D85 = 0.1e-7;
    vec3 _t0D86 = [_t0D83, _t0D84, _t0D85];
    real _t0D87 = 0.e0;
    real _t0D88 = -0.1e1;
    real _t0D89 = 0.e0;
    real _t0D8A = 0.e0;
    vec3 _t0D8B = [_t0D88, _t0D89, _t0D8A];
    real _t0D8C = prim •00CE<$[3]; $[3]; $[]> (_t0D8B, refPos0B27);
    real _t0D8D = prim -0026<$[]> (_t0D87, _t0D8C);
    real _t0D8E = -0.1e1;
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    vec3 _t0D91 = [_t0D8E, _t0D8F, _t0D90];
    real _t0D92 = prim •00CE<$[3]; $[3]; $[]> (_t0D91, dPos0B28);
    real _t0D93 = prim /0055 (_t0D8D, _t0D92);
    vec3 _t0D94 = prim *0038<$[3]> (dPos0B28, _t0D93);
    vec3 _t0D95 = prim +0017<$[3]> (refPos0B27, _t0D94);
    vec3 _t0D96 = prim +0017<$[3]> (_t0D86, _t0D95);
    real _t0D97 = _t0D96[0];
    real _t0D98 = -0.e0;
    bool _t0D99 = prim >0080 (_t0D97, _t0D98);
    real _t0D9A = 0.1e-7;
    real _t0D9B = 0.1e-7;
    real _t0D9C = 0.1e-7;
    vec3 _t0D9D = [_t0D9A, _t0D9B, _t0D9C];
    real _t0D9E = 0.e0;
    real _t0D9F = -0.1e1;
    real _t0DA0 = 0.e0;
    real _t0DA1 = 0.e0;
    vec3 _t0DA2 = [_t0D9F, _t0DA0, _t0DA1];
    real _t0DA3 = prim •00CE<$[3]; $[3]; $[]> (_t0DA2, refPos0B27);
    real _t0DA4 = prim -0026<$[]> (_t0D9E, _t0DA3);
    real _t0DA5 = -0.1e1;
    real _t0DA6 = 0.e0;
    real _t0DA7 = 0.e0;
    vec3 _t0DA8 = [_t0DA5, _t0DA6, _t0DA7];
    real _t0DA9 = prim •00CE<$[3]; $[3]; $[]> (_t0DA8, dPos0B28);
    real _t0DAA = prim /0055 (_t0DA4, _t0DA9);
    vec3 _t0DAB = prim *0038<$[3]> (dPos0B28, _t0DAA);
    vec3 _t0DAC = prim +0017<$[3]> (refPos0B27, _t0DAB);
    vec3 _t0DAD = prim +0017<$[3]> (_t0D9D, _t0DAC);
    real _t0DAE = _t0DAD[1];
    real _t0DAF = -0.e0;
    bool _t0DB0 = prim >0080 (_t0DAE, _t0DAF);
    real _t0DB1 = 0.1e-7;
    real _t0DB2 = 0.1e-7;
    real _t0DB3 = 0.1e-7;
    vec3 _t0DB4 = [_t0DB1, _t0DB2, _t0DB3];
    real _t0DB5 = 0.e0;
    real _t0DB6 = -0.1e1;
    real _t0DB7 = 0.e0;
    real _t0DB8 = 0.e0;
    vec3 _t0DB9 = [_t0DB6, _t0DB7, _t0DB8];
    real _t0DBA = prim •00CE<$[3]; $[3]; $[]> (_t0DB9, refPos0B27);
    real _t0DBB = prim -0026<$[]> (_t0DB5, _t0DBA);
    real _t0DBC = -0.1e1;
    real _t0DBD = 0.e0;
    real _t0DBE = 0.e0;
    vec3 _t0DBF = [_t0DBC, _t0DBD, _t0DBE];
    real _t0DC0 = prim •00CE<$[3]; $[3]; $[]> (_t0DBF, dPos0B28);
    real _t0DC1 = prim /0055 (_t0DBB, _t0DC0);
    vec3 _t0DC2 = prim *0038<$[3]> (dPos0B28, _t0DC1);
    vec3 _t0DC3 = prim +0017<$[3]> (refPos0B27, _t0DC2);
    vec3 _t0DC4 = prim +0017<$[3]> (_t0DB4, _t0DC3);
    real _t0DC5 = _t0DC4[2];
    real _t0DC6 = -0.e0;
    bool _t0DC7 = prim >0080 (_t0DC5, _t0DC6);
    bool _t0DC8 = prim $and01C4 (_t0DB0, _t0DC7);
    bool _t0DC9 = prim $and01C4 (_t0D99, _t0DC8);
    bool _t0DCA = prim $and01C4 (_t0D82, _t0DC9);
    if _t0DCA {
      string _t0DCB = "Saving at this face!";
      real _t0DCC = 0.e0;
      real _t0DCD = -0.1e1;
      real _t0DCE = 0.e0;
      real _t0DCF = 0.e0;
      vec3 _t0DD0 = [_t0DCD, _t0DCE, _t0DCF];
      real _t0DD1 = prim •00CE<$[3]; $[3]; $[]> (_t0DD0, refPos0B27);
      real _t0DD2 = prim -0026<$[]> (_t0DCC, _t0DD1);
      real _t0DD3 = -0.1e1;
      real _t0DD4 = 0.e0;
      real _t0DD5 = 0.e0;
      vec3 _t0DD6 = [_t0DD3, _t0DD4, _t0DD5];
      real _t0DD7 = prim •00CE<$[3]; $[3]; $[]> (_t0DD6, dPos0B28);
      real _t0DD8 = prim /0055 (_t0DD2, _t0DD7);
      real _t0DD9 = 0.e0;
      real _t0DDA = -0.1e1;
      real _t0DDB = 0.e0;
      real _t0DDC = 0.e0;
      vec3 _t0DDD = [_t0DDA, _t0DDB, _t0DDC];
      real _t0DDE = prim •00CE<$[3]; $[3]; $[]> (_t0DDD, refPos0B27);
      real _t0DDF = prim -0026<$[]> (_t0DD9, _t0DDE);
      real _t0DE0 = -0.1e1;
      real _t0DE1 = 0.e0;
      real _t0DE2 = 0.e0;
      vec3 _t0DE3 = [_t0DE0, _t0DE1, _t0DE2];
      real _t0DE4 = prim •00CE<$[3]; $[3]; $[]> (_t0DE3, dPos0B28);
      real _t0DE5 = prim /0055 (_t0DDF, _t0DE4);
      bool _t0DE6 = prim >0080 (time0B29, _t0DE5);
      string _t0DE7 = "\n";
      print (_t0DCB, _t0DD8, _t0DE6, _t0DE7);
      real _t0DE8 = 0.e0;
      real _t0DE9 = -0.1e1;
      real _t0DEA = 0.e0;
      real _t0DEB = 0.e0;
      vec3 _t0DEC = [_t0DE9, _t0DEA, _t0DEB];
      real _t0DED = prim •00CE<$[3]; $[3]; $[]> (_t0DEC, refPos0B27);
      real _t0DEE = prim -0026<$[]> (_t0DE8, _t0DED);
      real _t0DEF = -0.1e1;
      real _t0DF0 = 0.e0;
      real _t0DF1 = 0.e0;
      vec3 _t0DF2 = [_t0DEF, _t0DF0, _t0DF1];
      real _t0DF3 = prim •00CE<$[3]; $[3]; $[]> (_t0DF2, dPos0B28);
      time0B29 = prim /0055 (_t0DEE, _t0DF3);
      face0B2A = 1;
    }
  }
  string _t0DF4 = "\ntest :";
  real _t0DF5 = 0.e0;
  real _t0DF6 = 0.e0;
  real _t0DF7 = -0.1e1;
  real _t0DF8 = 0.e0;
  vec3 _t0DF9 = [_t0DF6, _t0DF7, _t0DF8];
  real _t0DFA = prim •00CE<$[3]; $[3]; $[]> (_t0DF9, refPos0B27);
  real _t0DFB = prim -0026<$[]> (_t0DF5, _t0DFA);
  real _t0DFC = 0.e0;
  real _t0DFD = -0.1e1;
  real _t0DFE = 0.e0;
  vec3 _t0DFF = [_t0DFC, _t0DFD, _t0DFE];
  real _t0E00 = prim •00CE<$[3]; $[3]; $[]> (_t0DFF, dPos0B28);
  real _t0E01 = prim /0055 (_t0DFB, _t0E00);
  string _t0E02 = " test2: ";
  real _t0E03 = 0.e0;
  real _t0E04 = -0.1e1;
  real _t0E05 = 0.e0;
  vec3 _t0E06 = [_t0E03, _t0E04, _t0E05];
  real _t0E07 = prim •00CE<$[3]; $[3]; $[]> (_t0E06, dPos0B28);
  string _t0E08 = " insideTest: ";
  real _t0E09 = 0.1e1;
  real _t0E0A = 0.1e-7;
  real _t0E0B = prim +0017<$[]> (_t0E09, _t0E0A);
  real _t0E0C = 0.1e1;
  real _t0E0D = 0.1e1;
  real _t0E0E = 0.1e1;
  vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
  real _t0E10 = 0.e0;
  real _t0E11 = 0.e0;
  real _t0E12 = -0.1e1;
  real _t0E13 = 0.e0;
  vec3 _t0E14 = [_t0E11, _t0E12, _t0E13];
  real _t0E15 = prim •00CE<$[3]; $[3]; $[]> (_t0E14, refPos0B27);
  real _t0E16 = prim -0026<$[]> (_t0E10, _t0E15);
  real _t0E17 = 0.e0;
  real _t0E18 = -0.1e1;
  real _t0E19 = 0.e0;
  vec3 _t0E1A = [_t0E17, _t0E18, _t0E19];
  real _t0E1B = prim •00CE<$[3]; $[3]; $[]> (_t0E1A, dPos0B28);
  real _t0E1C = prim /0055 (_t0E16, _t0E1B);
  vec3 _t0E1D = prim *0038<$[3]> (dPos0B28, _t0E1C);
  vec3 _t0E1E = prim +0017<$[3]> (refPos0B27, _t0E1D);
  real _t0E1F = prim •00CE<$[3]; $[3]; $[]> (_t0E0F, _t0E1E);
  bool _t0E20 = prim >0080 (_t0E0B, _t0E1F);
  real _t0E21 = 0.1e-7;
  real _t0E22 = 0.1e-7;
  real _t0E23 = 0.1e-7;
  vec3 _t0E24 = [_t0E21, _t0E22, _t0E23];
  real _t0E25 = 0.e0;
  real _t0E26 = 0.e0;
  real _t0E27 = -0.1e1;
  real _t0E28 = 0.e0;
  vec3 _t0E29 = [_t0E26, _t0E27, _t0E28];
  real _t0E2A = prim •00CE<$[3]; $[3]; $[]> (_t0E29, refPos0B27);
  real _t0E2B = prim -0026<$[]> (_t0E25, _t0E2A);
  real _t0E2C = 0.e0;
  real _t0E2D = -0.1e1;
  real _t0E2E = 0.e0;
  vec3 _t0E2F = [_t0E2C, _t0E2D, _t0E2E];
  real _t0E30 = prim •00CE<$[3]; $[3]; $[]> (_t0E2F, dPos0B28);
  real _t0E31 = prim /0055 (_t0E2B, _t0E30);
  vec3 _t0E32 = prim *0038<$[3]> (dPos0B28, _t0E31);
  vec3 _t0E33 = prim +0017<$[3]> (refPos0B27, _t0E32);
  vec3 _t0E34 = prim +0017<$[3]> (_t0E24, _t0E33);
  real _t0E35 = _t0E34[0];
  real _t0E36 = -0.e0;
  bool _t0E37 = prim >0080 (_t0E35, _t0E36);
  real _t0E38 = 0.1e-7;
  real _t0E39 = 0.1e-7;
  real _t0E3A = 0.1e-7;
  vec3 _t0E3B = [_t0E38, _t0E39, _t0E3A];
  real _t0E3C = 0.e0;
  real _t0E3D = 0.e0;
  real _t0E3E = -0.1e1;
  real _t0E3F = 0.e0;
  vec3 _t0E40 = [_t0E3D, _t0E3E, _t0E3F];
  real _t0E41 = prim •00CE<$[3]; $[3]; $[]> (_t0E40, refPos0B27);
  real _t0E42 = prim -0026<$[]> (_t0E3C, _t0E41);
  real _t0E43 = 0.e0;
  real _t0E44 = -0.1e1;
  real _t0E45 = 0.e0;
  vec3 _t0E46 = [_t0E43, _t0E44, _t0E45];
  real _t0E47 = prim •00CE<$[3]; $[3]; $[]> (_t0E46, dPos0B28);
  real _t0E48 = prim /0055 (_t0E42, _t0E47);
  vec3 _t0E49 = prim *0038<$[3]> (dPos0B28, _t0E48);
  vec3 _t0E4A = prim +0017<$[3]> (refPos0B27, _t0E49);
  vec3 _t0E4B = prim +0017<$[3]> (_t0E3B, _t0E4A);
  real _t0E4C = _t0E4B[1];
  real _t0E4D = -0.e0;
  bool _t0E4E = prim >0080 (_t0E4C, _t0E4D);
  real _t0E4F = 0.1e-7;
  real _t0E50 = 0.1e-7;
  real _t0E51 = 0.1e-7;
  vec3 _t0E52 = [_t0E4F, _t0E50, _t0E51];
  real _t0E53 = 0.e0;
  real _t0E54 = 0.e0;
  real _t0E55 = -0.1e1;
  real _t0E56 = 0.e0;
  vec3 _t0E57 = [_t0E54, _t0E55, _t0E56];
  real _t0E58 = prim •00CE<$[3]; $[3]; $[]> (_t0E57, refPos0B27);
  real _t0E59 = prim -0026<$[]> (_t0E53, _t0E58);
  real _t0E5A = 0.e0;
  real _t0E5B = -0.1e1;
  real _t0E5C = 0.e0;
  vec3 _t0E5D = [_t0E5A, _t0E5B, _t0E5C];
  real _t0E5E = prim •00CE<$[3]; $[3]; $[]> (_t0E5D, dPos0B28);
  real _t0E5F = prim /0055 (_t0E59, _t0E5E);
  vec3 _t0E60 = prim *0038<$[3]> (dPos0B28, _t0E5F);
  vec3 _t0E61 = prim +0017<$[3]> (refPos0B27, _t0E60);
  vec3 _t0E62 = prim +0017<$[3]> (_t0E52, _t0E61);
  real _t0E63 = _t0E62[2];
  real _t0E64 = -0.e0;
  bool _t0E65 = prim >0080 (_t0E63, _t0E64);
  bool _t0E66 = prim $and01C4 (_t0E4E, _t0E65);
  bool _t0E67 = prim $and01C4 (_t0E37, _t0E66);
  bool _t0E68 = prim $and01C4 (_t0E20, _t0E67);
  string _t0E69 = " dist: ";
  real _t0E6A = 0.e0;
  real _t0E6B = 0.e0;
  real _t0E6C = -0.1e1;
  real _t0E6D = 0.e0;
  vec3 _t0E6E = [_t0E6B, _t0E6C, _t0E6D];
  real _t0E6F = prim •00CE<$[3]; $[3]; $[]> (_t0E6E, refPos0B27);
  real _t0E70 = prim -0026<$[]> (_t0E6A, _t0E6F);
  real _t0E71 = prim |()|00B5<$[]> (_t0E70);
  string _t0E72 = "signed dist: ";
  real _t0E73 = 0.e0;
  real _t0E74 = 0.e0;
  real _t0E75 = -0.1e1;
  real _t0E76 = 0.e0;
  vec3 _t0E77 = [_t0E74, _t0E75, _t0E76];
  real _t0E78 = prim •00CE<$[3]; $[3]; $[]> (_t0E77, refPos0B27);
  real _t0E79 = prim -0026<$[]> (_t0E73, _t0E78);
  string _t0E7A = " face: ";
  int _t0E7B = 2;
  string _t0E7C = " place: ";
  real _t0E7D = 0.e0;
  real _t0E7E = 0.e0;
  real _t0E7F = -0.1e1;
  real _t0E80 = 0.e0;
  vec3 _t0E81 = [_t0E7E, _t0E7F, _t0E80];
  real _t0E82 = prim •00CE<$[3]; $[3]; $[]> (_t0E81, refPos0B27);
  real _t0E83 = prim -0026<$[]> (_t0E7D, _t0E82);
  real _t0E84 = 0.e0;
  real _t0E85 = -0.1e1;
  real _t0E86 = 0.e0;
  vec3 _t0E87 = [_t0E84, _t0E85, _t0E86];
  real _t0E88 = prim •00CE<$[3]; $[3]; $[]> (_t0E87, dPos0B28);
  real _t0E89 = prim /0055 (_t0E83, _t0E88);
  vec3 _t0E8A = prim *0038<$[3]> (dPos0B28, _t0E89);
  vec3 _t0E8B = prim +0017<$[3]> (refPos0B27, _t0E8A);
  string _t0E8C = " error: ";
  real _t0E8D = 0.e0;
  real _t0E8E = 0.e0;
  real _t0E8F = -0.1e1;
  real _t0E90 = 0.e0;
  vec3 _t0E91 = [_t0E8E, _t0E8F, _t0E90];
  real _t0E92 = 0.e0;
  real _t0E93 = 0.e0;
  real _t0E94 = -0.1e1;
  real _t0E95 = 0.e0;
  vec3 _t0E96 = [_t0E93, _t0E94, _t0E95];
  real _t0E97 = prim •00CE<$[3]; $[3]; $[]> (_t0E96, refPos0B27);
  real _t0E98 = prim -0026<$[]> (_t0E92, _t0E97);
  real _t0E99 = 0.e0;
  real _t0E9A = -0.1e1;
  real _t0E9B = 0.e0;
  vec3 _t0E9C = [_t0E99, _t0E9A, _t0E9B];
  real _t0E9D = prim •00CE<$[3]; $[3]; $[]> (_t0E9C, dPos0B28);
  real _t0E9E = prim /0055 (_t0E98, _t0E9D);
  vec3 _t0E9F = prim *0038<$[3]> (dPos0B28, _t0E9E);
  vec3 _t0EA0 = prim +0017<$[3]> (refPos0B27, _t0E9F);
  real _t0EA1 = prim •00CE<$[3]; $[3]; $[]> (_t0E91, _t0EA0);
  real _t0EA2 = prim -0026<$[]> (_t0E8D, _t0EA1);
  real _t0EA3 = prim |()|00B5<$[]> (_t0EA2);
  string _t0EA4 = " offset :";
  string _t0EA5 = " dp: ";
  string _t0EA6 = " otherPossibleTime: ";
  string _t0EA7 = "\n";
  print (_t0DF4, _t0E01, _t0E02, _t0E07, _t0E08, _t0E68, _t0E69, _t0E71, _t0E72, _t0E79, _t0E7A, _t0E7B, _t0E7C, _t0E8B, _t0E8C, _t0EA3, _t0EA4, refPos0B27, _t0EA5, dPos0B28, _t0EA6, faceTime0B2B, _t0EA7);
  real _t0EA8 = 0.e0;
  real _t0EA9 = 0.e0;
  real _t0EAA = -0.1e1;
  real _t0EAB = 0.e0;
  vec3 _t0EAC = [_t0EA9, _t0EAA, _t0EAB];
  real _t0EAD = prim •00CE<$[3]; $[3]; $[]> (_t0EAC, refPos0B27);
  real _t0EAE = prim -0026<$[]> (_t0EA8, _t0EAD);
  real _t0EAF = 0.e0;
  real _t0EB0 = -0.1e1;
  real _t0EB1 = 0.e0;
  vec3 _t0EB2 = [_t0EAF, _t0EB0, _t0EB1];
  real _t0EB3 = prim •00CE<$[3]; $[3]; $[]> (_t0EB2, dPos0B28);
  real _t0EB4 = prim /0055 (_t0EAE, _t0EB3);
  real _t0EB5 = -0.1e-7;
  bool _t0EB6 = prim >=007E (_t0EB4, _t0EB5);
  real _t0EB7 = 0.e0;
  real _t0EB8 = 0.e0;
  real _t0EB9 = -0.1e1;
  real _t0EBA = 0.e0;
  vec3 _t0EBB = [_t0EB8, _t0EB9, _t0EBA];
  real _t0EBC = prim •00CE<$[3]; $[3]; $[]> (_t0EBB, refPos0B27);
  real _t0EBD = prim -0026<$[]> (_t0EB7, _t0EBC);
  real _t0EBE = 0.e0;
  real _t0EBF = -0.1e1;
  real _t0EC0 = 0.e0;
  vec3 _t0EC1 = [_t0EBE, _t0EBF, _t0EC0];
  real _t0EC2 = prim •00CE<$[3]; $[3]; $[]> (_t0EC1, dPos0B28);
  real _t0EC3 = prim /0055 (_t0EBD, _t0EC2);
  bool _t0EC4 = prim >0080 (time0B29, _t0EC3);
  real _t0EC5 = 0.e0;
  real _t0EC6 = -0.1e1;
  real _t0EC7 = 0.e0;
  vec3 _t0EC8 = [_t0EC5, _t0EC6, _t0EC7];
  real _t0EC9 = prim •00CE<$[3]; $[3]; $[]> (_t0EC8, dPos0B28);
  real _t0ECA = prim |()|00B5<$[]> (_t0EC9);
  real _t0ECB = 0.1e-7;
  bool _t0ECC = prim >=007E (_t0ECA, _t0ECB);
  bool _t0ECD = prim $and01C4 (_t0EC4, _t0ECC);
  bool _t0ECE = prim $and01C4 (_t0EB6, _t0ECD);
  if _t0ECE {
    real _t0ECF = 0.1e1;
    real _t0ED0 = 0.1e-7;
    real _t0ED1 = prim +0017<$[]> (_t0ECF, _t0ED0);
    real _t0ED2 = 0.1e1;
    real _t0ED3 = 0.1e1;
    real _t0ED4 = 0.1e1;
    vec3 _t0ED5 = [_t0ED2, _t0ED3, _t0ED4];
    real _t0ED6 = 0.e0;
    real _t0ED7 = 0.e0;
    real _t0ED8 = -0.1e1;
    real _t0ED9 = 0.e0;
    vec3 _t0EDA = [_t0ED7, _t0ED8, _t0ED9];
    real _t0EDB = prim •00CE<$[3]; $[3]; $[]> (_t0EDA, refPos0B27);
    real _t0EDC = prim -0026<$[]> (_t0ED6, _t0EDB);
    real _t0EDD = 0.e0;
    real _t0EDE = -0.1e1;
    real _t0EDF = 0.e0;
    vec3 _t0EE0 = [_t0EDD, _t0EDE, _t0EDF];
    real _t0EE1 = prim •00CE<$[3]; $[3]; $[]> (_t0EE0, dPos0B28);
    real _t0EE2 = prim /0055 (_t0EDC, _t0EE1);
    vec3 _t0EE3 = prim *0038<$[3]> (dPos0B28, _t0EE2);
    vec3 _t0EE4 = prim +0017<$[3]> (refPos0B27, _t0EE3);
    real _t0EE5 = prim •00CE<$[3]; $[3]; $[]> (_t0ED5, _t0EE4);
    bool _t0EE6 = prim >0080 (_t0ED1, _t0EE5);
    real _t0EE7 = 0.1e-7;
    real _t0EE8 = 0.1e-7;
    real _t0EE9 = 0.1e-7;
    vec3 _t0EEA = [_t0EE7, _t0EE8, _t0EE9];
    real _t0EEB = 0.e0;
    real _t0EEC = 0.e0;
    real _t0EED = -0.1e1;
    real _t0EEE = 0.e0;
    vec3 _t0EEF = [_t0EEC, _t0EED, _t0EEE];
    real _t0EF0 = prim •00CE<$[3]; $[3]; $[]> (_t0EEF, refPos0B27);
    real _t0EF1 = prim -0026<$[]> (_t0EEB, _t0EF0);
    real _t0EF2 = 0.e0;
    real _t0EF3 = -0.1e1;
    real _t0EF4 = 0.e0;
    vec3 _t0EF5 = [_t0EF2, _t0EF3, _t0EF4];
    real _t0EF6 = prim •00CE<$[3]; $[3]; $[]> (_t0EF5, dPos0B28);
    real _t0EF7 = prim /0055 (_t0EF1, _t0EF6);
    vec3 _t0EF8 = prim *0038<$[3]> (dPos0B28, _t0EF7);
    vec3 _t0EF9 = prim +0017<$[3]> (refPos0B27, _t0EF8);
    vec3 _t0EFA = prim +0017<$[3]> (_t0EEA, _t0EF9);
    real _t0EFB = _t0EFA[0];
    real _t0EFC = -0.e0;
    bool _t0EFD = prim >0080 (_t0EFB, _t0EFC);
    real _t0EFE = 0.1e-7;
    real _t0EFF = 0.1e-7;
    real _t0F00 = 0.1e-7;
    vec3 _t0F01 = [_t0EFE, _t0EFF, _t0F00];
    real _t0F02 = 0.e0;
    real _t0F03 = 0.e0;
    real _t0F04 = -0.1e1;
    real _t0F05 = 0.e0;
    vec3 _t0F06 = [_t0F03, _t0F04, _t0F05];
    real _t0F07 = prim •00CE<$[3]; $[3]; $[]> (_t0F06, refPos0B27);
    real _t0F08 = prim -0026<$[]> (_t0F02, _t0F07);
    real _t0F09 = 0.e0;
    real _t0F0A = -0.1e1;
    real _t0F0B = 0.e0;
    vec3 _t0F0C = [_t0F09, _t0F0A, _t0F0B];
    real _t0F0D = prim •00CE<$[3]; $[3]; $[]> (_t0F0C, dPos0B28);
    real _t0F0E = prim /0055 (_t0F08, _t0F0D);
    vec3 _t0F0F = prim *0038<$[3]> (dPos0B28, _t0F0E);
    vec3 _t0F10 = prim +0017<$[3]> (refPos0B27, _t0F0F);
    vec3 _t0F11 = prim +0017<$[3]> (_t0F01, _t0F10);
    real _t0F12 = _t0F11[1];
    real _t0F13 = -0.e0;
    bool _t0F14 = prim >0080 (_t0F12, _t0F13);
    real _t0F15 = 0.1e-7;
    real _t0F16 = 0.1e-7;
    real _t0F17 = 0.1e-7;
    vec3 _t0F18 = [_t0F15, _t0F16, _t0F17];
    real _t0F19 = 0.e0;
    real _t0F1A = 0.e0;
    real _t0F1B = -0.1e1;
    real _t0F1C = 0.e0;
    vec3 _t0F1D = [_t0F1A, _t0F1B, _t0F1C];
    real _t0F1E = prim •00CE<$[3]; $[3]; $[]> (_t0F1D, refPos0B27);
    real _t0F1F = prim -0026<$[]> (_t0F19, _t0F1E);
    real _t0F20 = 0.e0;
    real _t0F21 = -0.1e1;
    real _t0F22 = 0.e0;
    vec3 _t0F23 = [_t0F20, _t0F21, _t0F22];
    real _t0F24 = prim •00CE<$[3]; $[3]; $[]> (_t0F23, dPos0B28);
    real _t0F25 = prim /0055 (_t0F1F, _t0F24);
    vec3 _t0F26 = prim *0038<$[3]> (dPos0B28, _t0F25);
    vec3 _t0F27 = prim +0017<$[3]> (refPos0B27, _t0F26);
    vec3 _t0F28 = prim +0017<$[3]> (_t0F18, _t0F27);
    real _t0F29 = _t0F28[2];
    real _t0F2A = -0.e0;
    bool _t0F2B = prim >0080 (_t0F29, _t0F2A);
    bool _t0F2C = prim $and01C4 (_t0F14, _t0F2B);
    bool _t0F2D = prim $and01C4 (_t0EFD, _t0F2C);
    bool _t0F2E = prim $and01C4 (_t0EE6, _t0F2D);
    if _t0F2E {
      string _t0F2F = "Saving at this face!";
      real _t0F30 = 0.e0;
      real _t0F31 = 0.e0;
      real _t0F32 = -0.1e1;
      real _t0F33 = 0.e0;
      vec3 _t0F34 = [_t0F31, _t0F32, _t0F33];
      real _t0F35 = prim •00CE<$[3]; $[3]; $[]> (_t0F34, refPos0B27);
      real _t0F36 = prim -0026<$[]> (_t0F30, _t0F35);
      real _t0F37 = 0.e0;
      real _t0F38 = -0.1e1;
      real _t0F39 = 0.e0;
      vec3 _t0F3A = [_t0F37, _t0F38, _t0F39];
      real _t0F3B = prim •00CE<$[3]; $[3]; $[]> (_t0F3A, dPos0B28);
      real _t0F3C = prim /0055 (_t0F36, _t0F3B);
      real _t0F3D = 0.e0;
      real _t0F3E = 0.e0;
      real _t0F3F = -0.1e1;
      real _t0F40 = 0.e0;
      vec3 _t0F41 = [_t0F3E, _t0F3F, _t0F40];
      real _t0F42 = prim •00CE<$[3]; $[3]; $[]> (_t0F41, refPos0B27);
      real _t0F43 = prim -0026<$[]> (_t0F3D, _t0F42);
      real _t0F44 = 0.e0;
      real _t0F45 = -0.1e1;
      real _t0F46 = 0.e0;
      vec3 _t0F47 = [_t0F44, _t0F45, _t0F46];
      real _t0F48 = prim •00CE<$[3]; $[3]; $[]> (_t0F47, dPos0B28);
      real _t0F49 = prim /0055 (_t0F43, _t0F48);
      bool _t0F4A = prim >0080 (time0B29, _t0F49);
      string _t0F4B = "\n";
      print (_t0F2F, _t0F3C, _t0F4A, _t0F4B);
      real _t0F4C = 0.e0;
      real _t0F4D = 0.e0;
      real _t0F4E = -0.1e1;
      real _t0F4F = 0.e0;
      vec3 _t0F50 = [_t0F4D, _t0F4E, _t0F4F];
      real _t0F51 = prim •00CE<$[3]; $[3]; $[]> (_t0F50, refPos0B27);
      real _t0F52 = prim -0026<$[]> (_t0F4C, _t0F51);
      real _t0F53 = 0.e0;
      real _t0F54 = -0.1e1;
      real _t0F55 = 0.e0;
      vec3 _t0F56 = [_t0F53, _t0F54, _t0F55];
      real _t0F57 = prim •00CE<$[3]; $[3]; $[]> (_t0F56, dPos0B28);
      time0B29 = prim /0055 (_t0F52, _t0F57);
      face0B2A = 2;
    }
  }
  string _t0F58 = "\ntest :";
  real _t0F59 = 0.e0;
  real _t0F5A = 0.e0;
  real _t0F5B = 0.e0;
  real _t0F5C = -0.1e1;
  vec3 _t0F5D = [_t0F5A, _t0F5B, _t0F5C];
  real _t0F5E = prim •00CE<$[3]; $[3]; $[]> (_t0F5D, refPos0B27);
  real _t0F5F = prim -0026<$[]> (_t0F59, _t0F5E);
  real _t0F60 = 0.e0;
  real _t0F61 = 0.e0;
  real _t0F62 = -0.1e1;
  vec3 _t0F63 = [_t0F60, _t0F61, _t0F62];
  real _t0F64 = prim •00CE<$[3]; $[3]; $[]> (_t0F63, dPos0B28);
  real _t0F65 = prim /0055 (_t0F5F, _t0F64);
  string _t0F66 = " test2: ";
  real _t0F67 = 0.e0;
  real _t0F68 = 0.e0;
  real _t0F69 = -0.1e1;
  vec3 _t0F6A = [_t0F67, _t0F68, _t0F69];
  real _t0F6B = prim •00CE<$[3]; $[3]; $[]> (_t0F6A, dPos0B28);
  string _t0F6C = " insideTest: ";
  real _t0F6D = 0.1e1;
  real _t0F6E = 0.1e-7;
  real _t0F6F = prim +0017<$[]> (_t0F6D, _t0F6E);
  real _t0F70 = 0.1e1;
  real _t0F71 = 0.1e1;
  real _t0F72 = 0.1e1;
  vec3 _t0F73 = [_t0F70, _t0F71, _t0F72];
  real _t0F74 = 0.e0;
  real _t0F75 = 0.e0;
  real _t0F76 = 0.e0;
  real _t0F77 = -0.1e1;
  vec3 _t0F78 = [_t0F75, _t0F76, _t0F77];
  real _t0F79 = prim •00CE<$[3]; $[3]; $[]> (_t0F78, refPos0B27);
  real _t0F7A = prim -0026<$[]> (_t0F74, _t0F79);
  real _t0F7B = 0.e0;
  real _t0F7C = 0.e0;
  real _t0F7D = -0.1e1;
  vec3 _t0F7E = [_t0F7B, _t0F7C, _t0F7D];
  real _t0F7F = prim •00CE<$[3]; $[3]; $[]> (_t0F7E, dPos0B28);
  real _t0F80 = prim /0055 (_t0F7A, _t0F7F);
  vec3 _t0F81 = prim *0038<$[3]> (dPos0B28, _t0F80);
  vec3 _t0F82 = prim +0017<$[3]> (refPos0B27, _t0F81);
  real _t0F83 = prim •00CE<$[3]; $[3]; $[]> (_t0F73, _t0F82);
  bool _t0F84 = prim >0080 (_t0F6F, _t0F83);
  real _t0F85 = 0.1e-7;
  real _t0F86 = 0.1e-7;
  real _t0F87 = 0.1e-7;
  vec3 _t0F88 = [_t0F85, _t0F86, _t0F87];
  real _t0F89 = 0.e0;
  real _t0F8A = 0.e0;
  real _t0F8B = 0.e0;
  real _t0F8C = -0.1e1;
  vec3 _t0F8D = [_t0F8A, _t0F8B, _t0F8C];
  real _t0F8E = prim •00CE<$[3]; $[3]; $[]> (_t0F8D, refPos0B27);
  real _t0F8F = prim -0026<$[]> (_t0F89, _t0F8E);
  real _t0F90 = 0.e0;
  real _t0F91 = 0.e0;
  real _t0F92 = -0.1e1;
  vec3 _t0F93 = [_t0F90, _t0F91, _t0F92];
  real _t0F94 = prim •00CE<$[3]; $[3]; $[]> (_t0F93, dPos0B28);
  real _t0F95 = prim /0055 (_t0F8F, _t0F94);
  vec3 _t0F96 = prim *0038<$[3]> (dPos0B28, _t0F95);
  vec3 _t0F97 = prim +0017<$[3]> (refPos0B27, _t0F96);
  vec3 _t0F98 = prim +0017<$[3]> (_t0F88, _t0F97);
  real _t0F99 = _t0F98[0];
  real _t0F9A = -0.e0;
  bool _t0F9B = prim >0080 (_t0F99, _t0F9A);
  real _t0F9C = 0.1e-7;
  real _t0F9D = 0.1e-7;
  real _t0F9E = 0.1e-7;
  vec3 _t0F9F = [_t0F9C, _t0F9D, _t0F9E];
  real _t0FA0 = 0.e0;
  real _t0FA1 = 0.e0;
  real _t0FA2 = 0.e0;
  real _t0FA3 = -0.1e1;
  vec3 _t0FA4 = [_t0FA1, _t0FA2, _t0FA3];
  real _t0FA5 = prim •00CE<$[3]; $[3]; $[]> (_t0FA4, refPos0B27);
  real _t0FA6 = prim -0026<$[]> (_t0FA0, _t0FA5);
  real _t0FA7 = 0.e0;
  real _t0FA8 = 0.e0;
  real _t0FA9 = -0.1e1;
  vec3 _t0FAA = [_t0FA7, _t0FA8, _t0FA9];
  real _t0FAB = prim •00CE<$[3]; $[3]; $[]> (_t0FAA, dPos0B28);
  real _t0FAC = prim /0055 (_t0FA6, _t0FAB);
  vec3 _t0FAD = prim *0038<$[3]> (dPos0B28, _t0FAC);
  vec3 _t0FAE = prim +0017<$[3]> (refPos0B27, _t0FAD);
  vec3 _t0FAF = prim +0017<$[3]> (_t0F9F, _t0FAE);
  real _t0FB0 = _t0FAF[1];
  real _t0FB1 = -0.e0;
  bool _t0FB2 = prim >0080 (_t0FB0, _t0FB1);
  real _t0FB3 = 0.1e-7;
  real _t0FB4 = 0.1e-7;
  real _t0FB5 = 0.1e-7;
  vec3 _t0FB6 = [_t0FB3, _t0FB4, _t0FB5];
  real _t0FB7 = 0.e0;
  real _t0FB8 = 0.e0;
  real _t0FB9 = 0.e0;
  real _t0FBA = -0.1e1;
  vec3 _t0FBB = [_t0FB8, _t0FB9, _t0FBA];
  real _t0FBC = prim •00CE<$[3]; $[3]; $[]> (_t0FBB, refPos0B27);
  real _t0FBD = prim -0026<$[]> (_t0FB7, _t0FBC);
  real _t0FBE = 0.e0;
  real _t0FBF = 0.e0;
  real _t0FC0 = -0.1e1;
  vec3 _t0FC1 = [_t0FBE, _t0FBF, _t0FC0];
  real _t0FC2 = prim •00CE<$[3]; $[3]; $[]> (_t0FC1, dPos0B28);
  real _t0FC3 = prim /0055 (_t0FBD, _t0FC2);
  vec3 _t0FC4 = prim *0038<$[3]> (dPos0B28, _t0FC3);
  vec3 _t0FC5 = prim +0017<$[3]> (refPos0B27, _t0FC4);
  vec3 _t0FC6 = prim +0017<$[3]> (_t0FB6, _t0FC5);
  real _t0FC7 = _t0FC6[2];
  real _t0FC8 = -0.e0;
  bool _t0FC9 = prim >0080 (_t0FC7, _t0FC8);
  bool _t0FCA = prim $and01C4 (_t0FB2, _t0FC9);
  bool _t0FCB = prim $and01C4 (_t0F9B, _t0FCA);
  bool _t0FCC = prim $and01C4 (_t0F84, _t0FCB);
  string _t0FCD = " dist: ";
  real _t0FCE = 0.e0;
  real _t0FCF = 0.e0;
  real _t0FD0 = 0.e0;
  real _t0FD1 = -0.1e1;
  vec3 _t0FD2 = [_t0FCF, _t0FD0, _t0FD1];
  real _t0FD3 = prim •00CE<$[3]; $[3]; $[]> (_t0FD2, refPos0B27);
  real _t0FD4 = prim -0026<$[]> (_t0FCE, _t0FD3);
  real _t0FD5 = prim |()|00B5<$[]> (_t0FD4);
  string _t0FD6 = "signed dist: ";
  real _t0FD7 = 0.e0;
  real _t0FD8 = 0.e0;
  real _t0FD9 = 0.e0;
  real _t0FDA = -0.1e1;
  vec3 _t0FDB = [_t0FD8, _t0FD9, _t0FDA];
  real _t0FDC = prim •00CE<$[3]; $[3]; $[]> (_t0FDB, refPos0B27);
  real _t0FDD = prim -0026<$[]> (_t0FD7, _t0FDC);
  string _t0FDE = " face: ";
  int _t0FDF = 3;
  string _t0FE0 = " place: ";
  real _t0FE1 = 0.e0;
  real _t0FE2 = 0.e0;
  real _t0FE3 = 0.e0;
  real _t0FE4 = -0.1e1;
  vec3 _t0FE5 = [_t0FE2, _t0FE3, _t0FE4];
  real _t0FE6 = prim •00CE<$[3]; $[3]; $[]> (_t0FE5, refPos0B27);
  real _t0FE7 = prim -0026<$[]> (_t0FE1, _t0FE6);
  real _t0FE8 = 0.e0;
  real _t0FE9 = 0.e0;
  real _t0FEA = -0.1e1;
  vec3 _t0FEB = [_t0FE8, _t0FE9, _t0FEA];
  real _t0FEC = prim •00CE<$[3]; $[3]; $[]> (_t0FEB, dPos0B28);
  real _t0FED = prim /0055 (_t0FE7, _t0FEC);
  vec3 _t0FEE = prim *0038<$[3]> (dPos0B28, _t0FED);
  vec3 _t0FEF = prim +0017<$[3]> (refPos0B27, _t0FEE);
  string _t0FF0 = " error: ";
  real _t0FF1 = 0.e0;
  real _t0FF2 = 0.e0;
  real _t0FF3 = 0.e0;
  real _t0FF4 = -0.1e1;
  vec3 _t0FF5 = [_t0FF2, _t0FF3, _t0FF4];
  real _t0FF6 = 0.e0;
  real _t0FF7 = 0.e0;
  real _t0FF8 = 0.e0;
  real _t0FF9 = -0.1e1;
  vec3 _t0FFA = [_t0FF7, _t0FF8, _t0FF9];
  real _t0FFB = prim •00CE<$[3]; $[3]; $[]> (_t0FFA, refPos0B27);
  real _t0FFC = prim -0026<$[]> (_t0FF6, _t0FFB);
  real _t0FFD = 0.e0;
  real _t0FFE = 0.e0;
  real _t0FFF = -0.1e1;
  vec3 _t1000 = [_t0FFD, _t0FFE, _t0FFF];
  real _t1001 = prim •00CE<$[3]; $[3]; $[]> (_t1000, dPos0B28);
  real _t1002 = prim /0055 (_t0FFC, _t1001);
  vec3 _t1003 = prim *0038<$[3]> (dPos0B28, _t1002);
  vec3 _t1004 = prim +0017<$[3]> (refPos0B27, _t1003);
  real _t1005 = prim •00CE<$[3]; $[3]; $[]> (_t0FF5, _t1004);
  real _t1006 = prim -0026<$[]> (_t0FF1, _t1005);
  real _t1007 = prim |()|00B5<$[]> (_t1006);
  string _t1008 = " offset :";
  string _t1009 = " dp: ";
  string _t100A = " otherPossibleTime: ";
  string _t100B = "\n";
  print (_t0F58, _t0F65, _t0F66, _t0F6B, _t0F6C, _t0FCC, _t0FCD, _t0FD5, _t0FD6, _t0FDD, _t0FDE, _t0FDF, _t0FE0, _t0FEF, _t0FF0, _t1007, _t1008, refPos0B27, _t1009, dPos0B28, _t100A, faceTime0B2B, _t100B);
  real _t100C = 0.e0;
  real _t100D = 0.e0;
  real _t100E = 0.e0;
  real _t100F = -0.1e1;
  vec3 _t1010 = [_t100D, _t100E, _t100F];
  real _t1011 = prim •00CE<$[3]; $[3]; $[]> (_t1010, refPos0B27);
  real _t1012 = prim -0026<$[]> (_t100C, _t1011);
  real _t1013 = 0.e0;
  real _t1014 = 0.e0;
  real _t1015 = -0.1e1;
  vec3 _t1016 = [_t1013, _t1014, _t1015];
  real _t1017 = prim •00CE<$[3]; $[3]; $[]> (_t1016, dPos0B28);
  real _t1018 = prim /0055 (_t1012, _t1017);
  real _t1019 = -0.1e-7;
  bool _t101A = prim >=007E (_t1018, _t1019);
  real _t101B = 0.e0;
  real _t101C = 0.e0;
  real _t101D = 0.e0;
  real _t101E = -0.1e1;
  vec3 _t101F = [_t101C, _t101D, _t101E];
  real _t1020 = prim •00CE<$[3]; $[3]; $[]> (_t101F, refPos0B27);
  real _t1021 = prim -0026<$[]> (_t101B, _t1020);
  real _t1022 = 0.e0;
  real _t1023 = 0.e0;
  real _t1024 = -0.1e1;
  vec3 _t1025 = [_t1022, _t1023, _t1024];
  real _t1026 = prim •00CE<$[3]; $[3]; $[]> (_t1025, dPos0B28);
  real _t1027 = prim /0055 (_t1021, _t1026);
  bool _t1028 = prim >0080 (time0B29, _t1027);
  real _t1029 = 0.e0;
  real _t102A = 0.e0;
  real _t102B = -0.1e1;
  vec3 _t102C = [_t1029, _t102A, _t102B];
  real _t102D = prim •00CE<$[3]; $[3]; $[]> (_t102C, dPos0B28);
  real _t102E = prim |()|00B5<$[]> (_t102D);
  real _t102F = 0.1e-7;
  bool _t1030 = prim >=007E (_t102E, _t102F);
  bool _t1031 = prim $and01C4 (_t1028, _t1030);
  bool _t1032 = prim $and01C4 (_t101A, _t1031);
  if _t1032 {
    real _t1033 = 0.1e1;
    real _t1034 = 0.1e-7;
    real _t1035 = prim +0017<$[]> (_t1033, _t1034);
    real _t1036 = 0.1e1;
    real _t1037 = 0.1e1;
    real _t1038 = 0.1e1;
    vec3 _t1039 = [_t1036, _t1037, _t1038];
    real _t103A = 0.e0;
    real _t103B = 0.e0;
    real _t103C = 0.e0;
    real _t103D = -0.1e1;
    vec3 _t103E = [_t103B, _t103C, _t103D];
    real _t103F = prim •00CE<$[3]; $[3]; $[]> (_t103E, refPos0B27);
    real _t1040 = prim -0026<$[]> (_t103A, _t103F);
    real _t1041 = 0.e0;
    real _t1042 = 0.e0;
    real _t1043 = -0.1e1;
    vec3 _t1044 = [_t1041, _t1042, _t1043];
    real _t1045 = prim •00CE<$[3]; $[3]; $[]> (_t1044, dPos0B28);
    real _t1046 = prim /0055 (_t1040, _t1045);
    vec3 _t1047 = prim *0038<$[3]> (dPos0B28, _t1046);
    vec3 _t1048 = prim +0017<$[3]> (refPos0B27, _t1047);
    real _t1049 = prim •00CE<$[3]; $[3]; $[]> (_t1039, _t1048);
    bool _t104A = prim >0080 (_t1035, _t1049);
    real _t104B = 0.1e-7;
    real _t104C = 0.1e-7;
    real _t104D = 0.1e-7;
    vec3 _t104E = [_t104B, _t104C, _t104D];
    real _t104F = 0.e0;
    real _t1050 = 0.e0;
    real _t1051 = 0.e0;
    real _t1052 = -0.1e1;
    vec3 _t1053 = [_t1050, _t1051, _t1052];
    real _t1054 = prim •00CE<$[3]; $[3]; $[]> (_t1053, refPos0B27);
    real _t1055 = prim -0026<$[]> (_t104F, _t1054);
    real _t1056 = 0.e0;
    real _t1057 = 0.e0;
    real _t1058 = -0.1e1;
    vec3 _t1059 = [_t1056, _t1057, _t1058];
    real _t105A = prim •00CE<$[3]; $[3]; $[]> (_t1059, dPos0B28);
    real _t105B = prim /0055 (_t1055, _t105A);
    vec3 _t105C = prim *0038<$[3]> (dPos0B28, _t105B);
    vec3 _t105D = prim +0017<$[3]> (refPos0B27, _t105C);
    vec3 _t105E = prim +0017<$[3]> (_t104E, _t105D);
    real _t105F = _t105E[0];
    real _t1060 = -0.e0;
    bool _t1061 = prim >0080 (_t105F, _t1060);
    real _t1062 = 0.1e-7;
    real _t1063 = 0.1e-7;
    real _t1064 = 0.1e-7;
    vec3 _t1065 = [_t1062, _t1063, _t1064];
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    real _t1068 = 0.e0;
    real _t1069 = -0.1e1;
    vec3 _t106A = [_t1067, _t1068, _t1069];
    real _t106B = prim •00CE<$[3]; $[3]; $[]> (_t106A, refPos0B27);
    real _t106C = prim -0026<$[]> (_t1066, _t106B);
    real _t106D = 0.e0;
    real _t106E = 0.e0;
    real _t106F = -0.1e1;
    vec3 _t1070 = [_t106D, _t106E, _t106F];
    real _t1071 = prim •00CE<$[3]; $[3]; $[]> (_t1070, dPos0B28);
    real _t1072 = prim /0055 (_t106C, _t1071);
    vec3 _t1073 = prim *0038<$[3]> (dPos0B28, _t1072);
    vec3 _t1074 = prim +0017<$[3]> (refPos0B27, _t1073);
    vec3 _t1075 = prim +0017<$[3]> (_t1065, _t1074);
    real _t1076 = _t1075[1];
    real _t1077 = -0.e0;
    bool _t1078 = prim >0080 (_t1076, _t1077);
    real _t1079 = 0.1e-7;
    real _t107A = 0.1e-7;
    real _t107B = 0.1e-7;
    vec3 _t107C = [_t1079, _t107A, _t107B];
    real _t107D = 0.e0;
    real _t107E = 0.e0;
    real _t107F = 0.e0;
    real _t1080 = -0.1e1;
    vec3 _t1081 = [_t107E, _t107F, _t1080];
    real _t1082 = prim •00CE<$[3]; $[3]; $[]> (_t1081, refPos0B27);
    real _t1083 = prim -0026<$[]> (_t107D, _t1082);
    real _t1084 = 0.e0;
    real _t1085 = 0.e0;
    real _t1086 = -0.1e1;
    vec3 _t1087 = [_t1084, _t1085, _t1086];
    real _t1088 = prim •00CE<$[3]; $[3]; $[]> (_t1087, dPos0B28);
    real _t1089 = prim /0055 (_t1083, _t1088);
    vec3 _t108A = prim *0038<$[3]> (dPos0B28, _t1089);
    vec3 _t108B = prim +0017<$[3]> (refPos0B27, _t108A);
    vec3 _t108C = prim +0017<$[3]> (_t107C, _t108B);
    real _t108D = _t108C[2];
    real _t108E = -0.e0;
    bool _t108F = prim >0080 (_t108D, _t108E);
    bool _t1090 = prim $and01C4 (_t1078, _t108F);
    bool _t1091 = prim $and01C4 (_t1061, _t1090);
    bool _t1092 = prim $and01C4 (_t104A, _t1091);
    if _t1092 {
      string _t1093 = "Saving at this face!";
      real _t1094 = 0.e0;
      real _t1095 = 0.e0;
      real _t1096 = 0.e0;
      real _t1097 = -0.1e1;
      vec3 _t1098 = [_t1095, _t1096, _t1097];
      real _t1099 = prim •00CE<$[3]; $[3]; $[]> (_t1098, refPos0B27);
      real _t109A = prim -0026<$[]> (_t1094, _t1099);
      real _t109B = 0.e0;
      real _t109C = 0.e0;
      real _t109D = -0.1e1;
      vec3 _t109E = [_t109B, _t109C, _t109D];
      real _t109F = prim •00CE<$[3]; $[3]; $[]> (_t109E, dPos0B28);
      real _t10A0 = prim /0055 (_t109A, _t109F);
      real _t10A1 = 0.e0;
      real _t10A2 = 0.e0;
      real _t10A3 = 0.e0;
      real _t10A4 = -0.1e1;
      vec3 _t10A5 = [_t10A2, _t10A3, _t10A4];
      real _t10A6 = prim •00CE<$[3]; $[3]; $[]> (_t10A5, refPos0B27);
      real _t10A7 = prim -0026<$[]> (_t10A1, _t10A6);
      real _t10A8 = 0.e0;
      real _t10A9 = 0.e0;
      real _t10AA = -0.1e1;
      vec3 _t10AB = [_t10A8, _t10A9, _t10AA];
      real _t10AC = prim •00CE<$[3]; $[3]; $[]> (_t10AB, dPos0B28);
      real _t10AD = prim /0055 (_t10A7, _t10AC);
      bool _t10AE = prim >0080 (time0B29, _t10AD);
      string _t10AF = "\n";
      print (_t1093, _t10A0, _t10AE, _t10AF);
      real _t10B0 = 0.e0;
      real _t10B1 = 0.e0;
      real _t10B2 = 0.e0;
      real _t10B3 = -0.1e1;
      vec3 _t10B4 = [_t10B1, _t10B2, _t10B3];
      real _t10B5 = prim •00CE<$[3]; $[3]; $[]> (_t10B4, refPos0B27);
      real _t10B6 = prim -0026<$[]> (_t10B0, _t10B5);
      real _t10B7 = 0.e0;
      real _t10B8 = 0.e0;
      real _t10B9 = -0.1e1;
      vec3 _t10BA = [_t10B7, _t10B8, _t10B9];
      real _t10BB = prim •00CE<$[3]; $[3]; $[]> (_t10BA, dPos0B28);
      time0B29 = prim /0055 (_t10B6, _t10BB);
      face0B2A = 3;
    }
  }
  int _t10BC = -1;
  bool _t10BD = prim !=0086 (face0B2A, _t10BC);
  real _t10BE = 0.1e1;
  real _t10BF = 0.1e-7;
  real _t10C0 = prim +0017<$[]> (_t10BE, _t10BF);
  real _t10C1 = 0.1e1;
  real _t10C2 = 0.1e1;
  real _t10C3 = 0.1e1;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = 0.e0;
  real _t10C6 = prim max0125 (time0B29, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0B28, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0B27, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, _t10C8);
  bool _t10CA = prim >0080 (_t10C0, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.e0;
  real _t10D0 = prim max0125 (time0B29, _t10CF);
  vec3 _t10D1 = prim *0038<$[3]> (dPos0B28, _t10D0);
  vec3 _t10D2 = prim +0017<$[3]> (refPos0B27, _t10D1);
  vec3 _t10D3 = prim +0017<$[3]> (_t10CE, _t10D2);
  real _t10D4 = _t10D3[0];
  real _t10D5 = -0.e0;
  bool _t10D6 = prim >0080 (_t10D4, _t10D5);
  real _t10D7 = 0.1e-7;
  real _t10D8 = 0.1e-7;
  real _t10D9 = 0.1e-7;
  vec3 _t10DA = [_t10D7, _t10D8, _t10D9];
  real _t10DB = 0.e0;
  real _t10DC = prim max0125 (time0B29, _t10DB);
  vec3 _t10DD = prim *0038<$[3]> (dPos0B28, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (refPos0B27, _t10DD);
  vec3 _t10DF = prim +0017<$[3]> (_t10DA, _t10DE);
  real _t10E0 = _t10DF[1];
  real _t10E1 = -0.e0;
  bool _t10E2 = prim >0080 (_t10E0, _t10E1);
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  real _t10E5 = 0.1e-7;
  vec3 _t10E6 = [_t10E3, _t10E4, _t10E5];
  real _t10E7 = 0.e0;
  real _t10E8 = prim max0125 (time0B29, _t10E7);
  vec3 _t10E9 = prim *0038<$[3]> (dPos0B28, _t10E8);
  vec3 _t10EA = prim +0017<$[3]> (refPos0B27, _t10E9);
  vec3 _t10EB = prim +0017<$[3]> (_t10E6, _t10EA);
  real _t10EC = _t10EB[2];
  real _t10ED = -0.e0;
  bool _t10EE = prim >0080 (_t10EC, _t10ED);
  bool _t10EF = prim $and01C4 (_t10E2, _t10EE);
  bool _t10F0 = prim $and01C4 (_t10D6, _t10EF);
  bool _t10F1 = prim $and01C4 (_t10CA, _t10F0);
  bool _t10F2 = prim $and01C4 (_t10BD, _t10F1);
  if _t10F2 {
    string _t10F3 = "\nReturning via standard : ";
    real _t10F4 = 0.e0;
    real _t10F5 = prim max0125 (time0B29, _t10F4);
    real _t10F6 = (real)face0B2A;
    vec2 _t10F7 = [_t10F5, _t10F6];
    string _t10F8 = "\n";
    print (_t10F3, _t10F7, _t10F8);
    real _t10F9 = 0.e0;
    real _t10FA = prim max0125 (time0B29, _t10F9);
    real _t10FB = (real)face0B2A;
    vec2 _t10FC = [_t10FA, _t10FB];
    return _t10FC;
  } else {
    real _t10FD = -0.1e1;
    real _t10FE = -0.1e1;
    vec2 _t10FF = [_t10FD, _t10FE];
    return _t10FF;
  }
}
function vec2#0 _exit1100 (vec3 refPos0B27, vec3 dPos0B28, int i1101)
{
  real time1102 = +inf;
  int face1103 = -1;
  real faceTime1104 = -inf;
  string _t1105 = "\ntest :";
  real _t1106 = 0.57735026919e0;
  real _t1107 = 0.57735026919e0;
  real _t1108 = 0.57735026919e0;
  real _t1109 = 0.57735026919e0;
  vec3 _t110A = [_t1107, _t1108, _t1109];
  real _t110B = prim •00CE<$[3]; $[3]; $[]> (_t110A, refPos0B27);
  real _t110C = prim -0026<$[]> (_t1106, _t110B);
  real _t110D = 0.57735026919e0;
  real _t110E = 0.57735026919e0;
  real _t110F = 0.57735026919e0;
  vec3 _t1110 = [_t110D, _t110E, _t110F];
  real _t1111 = prim •00CE<$[3]; $[3]; $[]> (_t1110, dPos0B28);
  real _t1112 = prim /0055 (_t110C, _t1111);
  string _t1113 = " test2: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  vec3 _t1117 = [_t1114, _t1115, _t1116];
  real _t1118 = prim •00CE<$[3]; $[3]; $[]> (_t1117, dPos0B28);
  string _t1119 = " insideTest: ";
  real _t111A = 0.1e1;
  real _t111B = 0.1e-7;
  real _t111C = prim +0017<$[]> (_t111A, _t111B);
  real _t111D = 0.1e1;
  real _t111E = 0.1e1;
  real _t111F = 0.1e1;
  vec3 _t1120 = [_t111D, _t111E, _t111F];
  real _t1121 = 0.57735026919e0;
  real _t1122 = 0.57735026919e0;
  real _t1123 = 0.57735026919e0;
  real _t1124 = 0.57735026919e0;
  vec3 _t1125 = [_t1122, _t1123, _t1124];
  real _t1126 = prim •00CE<$[3]; $[3]; $[]> (_t1125, refPos0B27);
  real _t1127 = prim -0026<$[]> (_t1121, _t1126);
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, dPos0B28);
  real _t112D = prim /0055 (_t1127, _t112C);
  vec3 _t112E = prim *0038<$[3]> (dPos0B28, _t112D);
  vec3 _t112F = prim +0017<$[3]> (refPos0B27, _t112E);
  real _t1130 = prim •00CE<$[3]; $[3]; $[]> (_t1120, _t112F);
  bool _t1131 = prim >0080 (_t111C, _t1130);
  real _t1132 = 0.1e-7;
  real _t1133 = 0.1e-7;
  real _t1134 = 0.1e-7;
  vec3 _t1135 = [_t1132, _t1133, _t1134];
  real _t1136 = 0.57735026919e0;
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  vec3 _t113A = [_t1137, _t1138, _t1139];
  real _t113B = prim •00CE<$[3]; $[3]; $[]> (_t113A, refPos0B27);
  real _t113C = prim -0026<$[]> (_t1136, _t113B);
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, dPos0B28);
  real _t1142 = prim /0055 (_t113C, _t1141);
  vec3 _t1143 = prim *0038<$[3]> (dPos0B28, _t1142);
  vec3 _t1144 = prim +0017<$[3]> (refPos0B27, _t1143);
  vec3 _t1145 = prim +0017<$[3]> (_t1135, _t1144);
  real _t1146 = _t1145[0];
  real _t1147 = -0.e0;
  bool _t1148 = prim >0080 (_t1146, _t1147);
  real _t1149 = 0.1e-7;
  real _t114A = 0.1e-7;
  real _t114B = 0.1e-7;
  vec3 _t114C = [_t1149, _t114A, _t114B];
  real _t114D = 0.57735026919e0;
  real _t114E = 0.57735026919e0;
  real _t114F = 0.57735026919e0;
  real _t1150 = 0.57735026919e0;
  vec3 _t1151 = [_t114E, _t114F, _t1150];
  real _t1152 = prim •00CE<$[3]; $[3]; $[]> (_t1151, refPos0B27);
  real _t1153 = prim -0026<$[]> (_t114D, _t1152);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  vec3 _t1157 = [_t1154, _t1155, _t1156];
  real _t1158 = prim •00CE<$[3]; $[3]; $[]> (_t1157, dPos0B28);
  real _t1159 = prim /0055 (_t1153, _t1158);
  vec3 _t115A = prim *0038<$[3]> (dPos0B28, _t1159);
  vec3 _t115B = prim +0017<$[3]> (refPos0B27, _t115A);
  vec3 _t115C = prim +0017<$[3]> (_t114C, _t115B);
  real _t115D = _t115C[1];
  real _t115E = -0.e0;
  bool _t115F = prim >0080 (_t115D, _t115E);
  real _t1160 = 0.1e-7;
  real _t1161 = 0.1e-7;
  real _t1162 = 0.1e-7;
  vec3 _t1163 = [_t1160, _t1161, _t1162];
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  real _t1167 = 0.57735026919e0;
  vec3 _t1168 = [_t1165, _t1166, _t1167];
  real _t1169 = prim •00CE<$[3]; $[3]; $[]> (_t1168, refPos0B27);
  real _t116A = prim -0026<$[]> (_t1164, _t1169);
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  real _t116D = 0.57735026919e0;
  vec3 _t116E = [_t116B, _t116C, _t116D];
  real _t116F = prim •00CE<$[3]; $[3]; $[]> (_t116E, dPos0B28);
  real _t1170 = prim /0055 (_t116A, _t116F);
  vec3 _t1171 = prim *0038<$[3]> (dPos0B28, _t1170);
  vec3 _t1172 = prim +0017<$[3]> (refPos0B27, _t1171);
  vec3 _t1173 = prim +0017<$[3]> (_t1163, _t1172);
  real _t1174 = _t1173[2];
  real _t1175 = -0.e0;
  bool _t1176 = prim >0080 (_t1174, _t1175);
  bool _t1177 = prim $and01C4 (_t115F, _t1176);
  bool _t1178 = prim $and01C4 (_t1148, _t1177);
  bool _t1179 = prim $and01C4 (_t1131, _t1178);
  string _t117A = " dist: ";
  real _t117B = 0.57735026919e0;
  real _t117C = 0.57735026919e0;
  real _t117D = 0.57735026919e0;
  real _t117E = 0.57735026919e0;
  vec3 _t117F = [_t117C, _t117D, _t117E];
  real _t1180 = prim •00CE<$[3]; $[3]; $[]> (_t117F, refPos0B27);
  real _t1181 = prim -0026<$[]> (_t117B, _t1180);
  real _t1182 = prim |()|00B5<$[]> (_t1181);
  string _t1183 = "signed dist: ";
  real _t1184 = 0.57735026919e0;
  real _t1185 = 0.57735026919e0;
  real _t1186 = 0.57735026919e0;
  real _t1187 = 0.57735026919e0;
  vec3 _t1188 = [_t1185, _t1186, _t1187];
  real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, refPos0B27);
  real _t118A = prim -0026<$[]> (_t1184, _t1189);
  string _t118B = " face: ";
  int _t118C = 0;
  string _t118D = " place: ";
  real _t118E = 0.57735026919e0;
  real _t118F = 0.57735026919e0;
  real _t1190 = 0.57735026919e0;
  real _t1191 = 0.57735026919e0;
  vec3 _t1192 = [_t118F, _t1190, _t1191];
  real _t1193 = prim •00CE<$[3]; $[3]; $[]> (_t1192, refPos0B27);
  real _t1194 = prim -0026<$[]> (_t118E, _t1193);
  real _t1195 = 0.57735026919e0;
  real _t1196 = 0.57735026919e0;
  real _t1197 = 0.57735026919e0;
  vec3 _t1198 = [_t1195, _t1196, _t1197];
  real _t1199 = prim •00CE<$[3]; $[3]; $[]> (_t1198, dPos0B28);
  real _t119A = prim /0055 (_t1194, _t1199);
  vec3 _t119B = prim *0038<$[3]> (dPos0B28, _t119A);
  vec3 _t119C = prim +0017<$[3]> (refPos0B27, _t119B);
  string _t119D = " error: ";
  real _t119E = 0.57735026919e0;
  real _t119F = 0.57735026919e0;
  real _t11A0 = 0.57735026919e0;
  real _t11A1 = 0.57735026919e0;
  vec3 _t11A2 = [_t119F, _t11A0, _t11A1];
  real _t11A3 = 0.57735026919e0;
  real _t11A4 = 0.57735026919e0;
  real _t11A5 = 0.57735026919e0;
  real _t11A6 = 0.57735026919e0;
  vec3 _t11A7 = [_t11A4, _t11A5, _t11A6];
  real _t11A8 = prim •00CE<$[3]; $[3]; $[]> (_t11A7, refPos0B27);
  real _t11A9 = prim -0026<$[]> (_t11A3, _t11A8);
  real _t11AA = 0.57735026919e0;
  real _t11AB = 0.57735026919e0;
  real _t11AC = 0.57735026919e0;
  vec3 _t11AD = [_t11AA, _t11AB, _t11AC];
  real _t11AE = prim •00CE<$[3]; $[3]; $[]> (_t11AD, dPos0B28);
  real _t11AF = prim /0055 (_t11A9, _t11AE);
  vec3 _t11B0 = prim *0038<$[3]> (dPos0B28, _t11AF);
  vec3 _t11B1 = prim +0017<$[3]> (refPos0B27, _t11B0);
  real _t11B2 = prim •00CE<$[3]; $[3]; $[]> (_t11A2, _t11B1);
  real _t11B3 = prim -0026<$[]> (_t119E, _t11B2);
  real _t11B4 = prim |()|00B5<$[]> (_t11B3);
  string _t11B5 = " offset :";
  string _t11B6 = " dp: ";
  string _t11B7 = " otherPossibleTime: ";
  string _t11B8 = "\n";
  string _t11B9 = "\n original face: ";
  string _t11BA = " ";
  print (_t1105, _t1112, _t1113, _t1118, _t1119, _t1179, _t117A, _t1182, _t1183, _t118A, _t118B, _t118C, _t118D, _t119C, _t119D, _t11B4, _t11B5, refPos0B27, _t11B6, dPos0B28, _t11B7, faceTime1104, _t11B8, _t11B9, i1101, _t11BA);
  real _t11BB = 0.57735026919e0;
  real _t11BC = 0.57735026919e0;
  real _t11BD = 0.57735026919e0;
  real _t11BE = 0.57735026919e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, refPos0B27);
  real _t11C1 = prim -0026<$[]> (_t11BB, _t11C0);
  real _t11C2 = 0.57735026919e0;
  real _t11C3 = 0.57735026919e0;
  real _t11C4 = 0.57735026919e0;
  vec3 _t11C5 = [_t11C2, _t11C3, _t11C4];
  real _t11C6 = prim •00CE<$[3]; $[3]; $[]> (_t11C5, dPos0B28);
  real _t11C7 = prim /0055 (_t11C1, _t11C6);
  real _t11C8 = -0.1e-7;
  bool _t11C9 = prim >=007E (_t11C7, _t11C8);
  real _t11CA = 0.57735026919e0;
  real _t11CB = 0.57735026919e0;
  real _t11CC = 0.57735026919e0;
  real _t11CD = 0.57735026919e0;
  vec3 _t11CE = [_t11CB, _t11CC, _t11CD];
  real _t11CF = prim •00CE<$[3]; $[3]; $[]> (_t11CE, refPos0B27);
  real _t11D0 = prim -0026<$[]> (_t11CA, _t11CF);
  real _t11D1 = 0.57735026919e0;
  real _t11D2 = 0.57735026919e0;
  real _t11D3 = 0.57735026919e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, dPos0B28);
  real _t11D6 = prim /0055 (_t11D0, _t11D5);
  bool _t11D7 = prim >0080 (time1102, _t11D6);
  real _t11D8 = 0.57735026919e0;
  real _t11D9 = 0.57735026919e0;
  real _t11DA = 0.57735026919e0;
  vec3 _t11DB = [_t11D8, _t11D9, _t11DA];
  real _t11DC = prim •00CE<$[3]; $[3]; $[]> (_t11DB, dPos0B28);
  real _t11DD = prim |()|00B5<$[]> (_t11DC);
  real _t11DE = 0.1e-7;
  bool _t11DF = prim >=007E (_t11DD, _t11DE);
  bool _t11E0 = prim $and01C4 (_t11D7, _t11DF);
  bool _t11E1 = prim $and01C4 (_t11C9, _t11E0);
  if _t11E1 {
    int _t11E2 = 0;
    bool _t11E3 = prim !=0086 (i1101, _t11E2);
    if _t11E3 {
      string _t11E4 = "Saving at this face!";
      real _t11E5 = 0.57735026919e0;
      real _t11E6 = 0.57735026919e0;
      real _t11E7 = 0.57735026919e0;
      real _t11E8 = 0.57735026919e0;
      vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
      real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0B27);
      real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
      real _t11EC = 0.57735026919e0;
      real _t11ED = 0.57735026919e0;
      real _t11EE = 0.57735026919e0;
      vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
      real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0B28);
      real _t11F1 = prim /0055 (_t11EB, _t11F0);
      real _t11F2 = 0.57735026919e0;
      real _t11F3 = 0.57735026919e0;
      real _t11F4 = 0.57735026919e0;
      real _t11F5 = 0.57735026919e0;
      vec3 _t11F6 = [_t11F3, _t11F4, _t11F5];
      real _t11F7 = prim •00CE<$[3]; $[3]; $[]> (_t11F6, refPos0B27);
      real _t11F8 = prim -0026<$[]> (_t11F2, _t11F7);
      real _t11F9 = 0.57735026919e0;
      real _t11FA = 0.57735026919e0;
      real _t11FB = 0.57735026919e0;
      vec3 _t11FC = [_t11F9, _t11FA, _t11FB];
      real _t11FD = prim •00CE<$[3]; $[3]; $[]> (_t11FC, dPos0B28);
      real _t11FE = prim /0055 (_t11F8, _t11FD);
      bool _t11FF = prim >0080 (time1102, _t11FE);
      string _t1200 = "\n";
      print (_t11E4, _t11F1, _t11FF, _t1200);
      real _t1201 = 0.57735026919e0;
      real _t1202 = 0.57735026919e0;
      real _t1203 = 0.57735026919e0;
      real _t1204 = 0.57735026919e0;
      vec3 _t1205 = [_t1202, _t1203, _t1204];
      real _t1206 = prim •00CE<$[3]; $[3]; $[]> (_t1205, refPos0B27);
      real _t1207 = prim -0026<$[]> (_t1201, _t1206);
      real _t1208 = 0.57735026919e0;
      real _t1209 = 0.57735026919e0;
      real _t120A = 0.57735026919e0;
      vec3 _t120B = [_t1208, _t1209, _t120A];
      real _t120C = prim •00CE<$[3]; $[3]; $[]> (_t120B, dPos0B28);
      time1102 = prim /0055 (_t1207, _t120C);
      face1103 = 0;
    } else {
      real _t120D = 0.57735026919e0;
      real _t120E = 0.57735026919e0;
      real _t120F = 0.57735026919e0;
      real _t1210 = 0.57735026919e0;
      vec3 _t1211 = [_t120E, _t120F, _t1210];
      real _t1212 = prim •00CE<$[3]; $[3]; $[]> (_t1211, refPos0B27);
      real _t1213 = prim -0026<$[]> (_t120D, _t1212);
      real _t1214 = 0.57735026919e0;
      real _t1215 = 0.57735026919e0;
      real _t1216 = 0.57735026919e0;
      vec3 _t1217 = [_t1214, _t1215, _t1216];
      real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, dPos0B28);
      faceTime1104 = prim /0055 (_t1213, _t1218);
      string _t1219 = "Saving backup time: ";
      string _t121A = "\n";
      print (_t1219, faceTime1104, _t121A);
    }
  }
  string _t121B = "\ntest :";
  real _t121C = 0.e0;
  real _t121D = -0.1e1;
  real _t121E = 0.e0;
  real _t121F = 0.e0;
  vec3 _t1220 = [_t121D, _t121E, _t121F];
  real _t1221 = prim •00CE<$[3]; $[3]; $[]> (_t1220, refPos0B27);
  real _t1222 = prim -0026<$[]> (_t121C, _t1221);
  real _t1223 = -0.1e1;
  real _t1224 = 0.e0;
  real _t1225 = 0.e0;
  vec3 _t1226 = [_t1223, _t1224, _t1225];
  real _t1227 = prim •00CE<$[3]; $[3]; $[]> (_t1226, dPos0B28);
  real _t1228 = prim /0055 (_t1222, _t1227);
  string _t1229 = " test2: ";
  real _t122A = -0.1e1;
  real _t122B = 0.e0;
  real _t122C = 0.e0;
  vec3 _t122D = [_t122A, _t122B, _t122C];
  real _t122E = prim •00CE<$[3]; $[3]; $[]> (_t122D, dPos0B28);
  string _t122F = " insideTest: ";
  real _t1230 = 0.1e1;
  real _t1231 = 0.1e-7;
  real _t1232 = prim +0017<$[]> (_t1230, _t1231);
  real _t1233 = 0.1e1;
  real _t1234 = 0.1e1;
  real _t1235 = 0.1e1;
  vec3 _t1236 = [_t1233, _t1234, _t1235];
  real _t1237 = 0.e0;
  real _t1238 = -0.1e1;
  real _t1239 = 0.e0;
  real _t123A = 0.e0;
  vec3 _t123B = [_t1238, _t1239, _t123A];
  real _t123C = prim •00CE<$[3]; $[3]; $[]> (_t123B, refPos0B27);
  real _t123D = prim -0026<$[]> (_t1237, _t123C);
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, dPos0B28);
  real _t1243 = prim /0055 (_t123D, _t1242);
  vec3 _t1244 = prim *0038<$[3]> (dPos0B28, _t1243);
  vec3 _t1245 = prim +0017<$[3]> (refPos0B27, _t1244);
  real _t1246 = prim •00CE<$[3]; $[3]; $[]> (_t1236, _t1245);
  bool _t1247 = prim >0080 (_t1232, _t1246);
  real _t1248 = 0.1e-7;
  real _t1249 = 0.1e-7;
  real _t124A = 0.1e-7;
  vec3 _t124B = [_t1248, _t1249, _t124A];
  real _t124C = 0.e0;
  real _t124D = -0.1e1;
  real _t124E = 0.e0;
  real _t124F = 0.e0;
  vec3 _t1250 = [_t124D, _t124E, _t124F];
  real _t1251 = prim •00CE<$[3]; $[3]; $[]> (_t1250, refPos0B27);
  real _t1252 = prim -0026<$[]> (_t124C, _t1251);
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, dPos0B28);
  real _t1258 = prim /0055 (_t1252, _t1257);
  vec3 _t1259 = prim *0038<$[3]> (dPos0B28, _t1258);
  vec3 _t125A = prim +0017<$[3]> (refPos0B27, _t1259);
  vec3 _t125B = prim +0017<$[3]> (_t124B, _t125A);
  real _t125C = _t125B[0];
  real _t125D = -0.e0;
  bool _t125E = prim >0080 (_t125C, _t125D);
  real _t125F = 0.1e-7;
  real _t1260 = 0.1e-7;
  real _t1261 = 0.1e-7;
  vec3 _t1262 = [_t125F, _t1260, _t1261];
  real _t1263 = 0.e0;
  real _t1264 = -0.1e1;
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  vec3 _t1267 = [_t1264, _t1265, _t1266];
  real _t1268 = prim •00CE<$[3]; $[3]; $[]> (_t1267, refPos0B27);
  real _t1269 = prim -0026<$[]> (_t1263, _t1268);
  real _t126A = -0.1e1;
  real _t126B = 0.e0;
  real _t126C = 0.e0;
  vec3 _t126D = [_t126A, _t126B, _t126C];
  real _t126E = prim •00CE<$[3]; $[3]; $[]> (_t126D, dPos0B28);
  real _t126F = prim /0055 (_t1269, _t126E);
  vec3 _t1270 = prim *0038<$[3]> (dPos0B28, _t126F);
  vec3 _t1271 = prim +0017<$[3]> (refPos0B27, _t1270);
  vec3 _t1272 = prim +0017<$[3]> (_t1262, _t1271);
  real _t1273 = _t1272[1];
  real _t1274 = -0.e0;
  bool _t1275 = prim >0080 (_t1273, _t1274);
  real _t1276 = 0.1e-7;
  real _t1277 = 0.1e-7;
  real _t1278 = 0.1e-7;
  vec3 _t1279 = [_t1276, _t1277, _t1278];
  real _t127A = 0.e0;
  real _t127B = -0.1e1;
  real _t127C = 0.e0;
  real _t127D = 0.e0;
  vec3 _t127E = [_t127B, _t127C, _t127D];
  real _t127F = prim •00CE<$[3]; $[3]; $[]> (_t127E, refPos0B27);
  real _t1280 = prim -0026<$[]> (_t127A, _t127F);
  real _t1281 = -0.1e1;
  real _t1282 = 0.e0;
  real _t1283 = 0.e0;
  vec3 _t1284 = [_t1281, _t1282, _t1283];
  real _t1285 = prim •00CE<$[3]; $[3]; $[]> (_t1284, dPos0B28);
  real _t1286 = prim /0055 (_t1280, _t1285);
  vec3 _t1287 = prim *0038<$[3]> (dPos0B28, _t1286);
  vec3 _t1288 = prim +0017<$[3]> (refPos0B27, _t1287);
  vec3 _t1289 = prim +0017<$[3]> (_t1279, _t1288);
  real _t128A = _t1289[2];
  real _t128B = -0.e0;
  bool _t128C = prim >0080 (_t128A, _t128B);
  bool _t128D = prim $and01C4 (_t1275, _t128C);
  bool _t128E = prim $and01C4 (_t125E, _t128D);
  bool _t128F = prim $and01C4 (_t1247, _t128E);
  string _t1290 = " dist: ";
  real _t1291 = 0.e0;
  real _t1292 = -0.1e1;
  real _t1293 = 0.e0;
  real _t1294 = 0.e0;
  vec3 _t1295 = [_t1292, _t1293, _t1294];
  real _t1296 = prim •00CE<$[3]; $[3]; $[]> (_t1295, refPos0B27);
  real _t1297 = prim -0026<$[]> (_t1291, _t1296);
  real _t1298 = prim |()|00B5<$[]> (_t1297);
  string _t1299 = "signed dist: ";
  real _t129A = 0.e0;
  real _t129B = -0.1e1;
  real _t129C = 0.e0;
  real _t129D = 0.e0;
  vec3 _t129E = [_t129B, _t129C, _t129D];
  real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, refPos0B27);
  real _t12A0 = prim -0026<$[]> (_t129A, _t129F);
  string _t12A1 = " face: ";
  int _t12A2 = 1;
  string _t12A3 = " place: ";
  real _t12A4 = 0.e0;
  real _t12A5 = -0.1e1;
  real _t12A6 = 0.e0;
  real _t12A7 = 0.e0;
  vec3 _t12A8 = [_t12A5, _t12A6, _t12A7];
  real _t12A9 = prim •00CE<$[3]; $[3]; $[]> (_t12A8, refPos0B27);
  real _t12AA = prim -0026<$[]> (_t12A4, _t12A9);
  real _t12AB = -0.1e1;
  real _t12AC = 0.e0;
  real _t12AD = 0.e0;
  vec3 _t12AE = [_t12AB, _t12AC, _t12AD];
  real _t12AF = prim •00CE<$[3]; $[3]; $[]> (_t12AE, dPos0B28);
  real _t12B0 = prim /0055 (_t12AA, _t12AF);
  vec3 _t12B1 = prim *0038<$[3]> (dPos0B28, _t12B0);
  vec3 _t12B2 = prim +0017<$[3]> (refPos0B27, _t12B1);
  string _t12B3 = " error: ";
  real _t12B4 = 0.e0;
  real _t12B5 = -0.1e1;
  real _t12B6 = 0.e0;
  real _t12B7 = 0.e0;
  vec3 _t12B8 = [_t12B5, _t12B6, _t12B7];
  real _t12B9 = 0.e0;
  real _t12BA = -0.1e1;
  real _t12BB = 0.e0;
  real _t12BC = 0.e0;
  vec3 _t12BD = [_t12BA, _t12BB, _t12BC];
  real _t12BE = prim •00CE<$[3]; $[3]; $[]> (_t12BD, refPos0B27);
  real _t12BF = prim -0026<$[]> (_t12B9, _t12BE);
  real _t12C0 = -0.1e1;
  real _t12C1 = 0.e0;
  real _t12C2 = 0.e0;
  vec3 _t12C3 = [_t12C0, _t12C1, _t12C2];
  real _t12C4 = prim •00CE<$[3]; $[3]; $[]> (_t12C3, dPos0B28);
  real _t12C5 = prim /0055 (_t12BF, _t12C4);
  vec3 _t12C6 = prim *0038<$[3]> (dPos0B28, _t12C5);
  vec3 _t12C7 = prim +0017<$[3]> (refPos0B27, _t12C6);
  real _t12C8 = prim •00CE<$[3]; $[3]; $[]> (_t12B8, _t12C7);
  real _t12C9 = prim -0026<$[]> (_t12B4, _t12C8);
  real _t12CA = prim |()|00B5<$[]> (_t12C9);
  string _t12CB = " offset :";
  string _t12CC = " dp: ";
  string _t12CD = " otherPossibleTime: ";
  string _t12CE = "\n";
  string _t12CF = "\n original face: ";
  string _t12D0 = " ";
  print (_t121B, _t1228, _t1229, _t122E, _t122F, _t128F, _t1290, _t1298, _t1299, _t12A0, _t12A1, _t12A2, _t12A3, _t12B2, _t12B3, _t12CA, _t12CB, refPos0B27, _t12CC, dPos0B28, _t12CD, faceTime1104, _t12CE, _t12CF, i1101, _t12D0);
  real _t12D1 = 0.e0;
  real _t12D2 = -0.1e1;
  real _t12D3 = 0.e0;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, refPos0B27);
  real _t12D7 = prim -0026<$[]> (_t12D1, _t12D6);
  real _t12D8 = -0.1e1;
  real _t12D9 = 0.e0;
  real _t12DA = 0.e0;
  vec3 _t12DB = [_t12D8, _t12D9, _t12DA];
  real _t12DC = prim •00CE<$[3]; $[3]; $[]> (_t12DB, dPos0B28);
  real _t12DD = prim /0055 (_t12D7, _t12DC);
  real _t12DE = -0.1e-7;
  bool _t12DF = prim >=007E (_t12DD, _t12DE);
  real _t12E0 = 0.e0;
  real _t12E1 = -0.1e1;
  real _t12E2 = 0.e0;
  real _t12E3 = 0.e0;
  vec3 _t12E4 = [_t12E1, _t12E2, _t12E3];
  real _t12E5 = prim •00CE<$[3]; $[3]; $[]> (_t12E4, refPos0B27);
  real _t12E6 = prim -0026<$[]> (_t12E0, _t12E5);
  real _t12E7 = -0.1e1;
  real _t12E8 = 0.e0;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, dPos0B28);
  real _t12EC = prim /0055 (_t12E6, _t12EB);
  bool _t12ED = prim >0080 (time1102, _t12EC);
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  real _t12F0 = 0.e0;
  vec3 _t12F1 = [_t12EE, _t12EF, _t12F0];
  real _t12F2 = prim •00CE<$[3]; $[3]; $[]> (_t12F1, dPos0B28);
  real _t12F3 = prim |()|00B5<$[]> (_t12F2);
  real _t12F4 = 0.1e-7;
  bool _t12F5 = prim >=007E (_t12F3, _t12F4);
  bool _t12F6 = prim $and01C4 (_t12ED, _t12F5);
  bool _t12F7 = prim $and01C4 (_t12DF, _t12F6);
  if _t12F7 {
    int _t12F8 = 1;
    bool _t12F9 = prim !=0086 (i1101, _t12F8);
    if _t12F9 {
      string _t12FA = "Saving at this face!";
      real _t12FB = 0.e0;
      real _t12FC = -0.1e1;
      real _t12FD = 0.e0;
      real _t12FE = 0.e0;
      vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
      real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0B27);
      real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
      real _t1302 = -0.1e1;
      real _t1303 = 0.e0;
      real _t1304 = 0.e0;
      vec3 _t1305 = [_t1302, _t1303, _t1304];
      real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0B28);
      real _t1307 = prim /0055 (_t1301, _t1306);
      real _t1308 = 0.e0;
      real _t1309 = -0.1e1;
      real _t130A = 0.e0;
      real _t130B = 0.e0;
      vec3 _t130C = [_t1309, _t130A, _t130B];
      real _t130D = prim •00CE<$[3]; $[3]; $[]> (_t130C, refPos0B27);
      real _t130E = prim -0026<$[]> (_t1308, _t130D);
      real _t130F = -0.1e1;
      real _t1310 = 0.e0;
      real _t1311 = 0.e0;
      vec3 _t1312 = [_t130F, _t1310, _t1311];
      real _t1313 = prim •00CE<$[3]; $[3]; $[]> (_t1312, dPos0B28);
      real _t1314 = prim /0055 (_t130E, _t1313);
      bool _t1315 = prim >0080 (time1102, _t1314);
      string _t1316 = "\n";
      print (_t12FA, _t1307, _t1315, _t1316);
      real _t1317 = 0.e0;
      real _t1318 = -0.1e1;
      real _t1319 = 0.e0;
      real _t131A = 0.e0;
      vec3 _t131B = [_t1318, _t1319, _t131A];
      real _t131C = prim •00CE<$[3]; $[3]; $[]> (_t131B, refPos0B27);
      real _t131D = prim -0026<$[]> (_t1317, _t131C);
      real _t131E = -0.1e1;
      real _t131F = 0.e0;
      real _t1320 = 0.e0;
      vec3 _t1321 = [_t131E, _t131F, _t1320];
      real _t1322 = prim •00CE<$[3]; $[3]; $[]> (_t1321, dPos0B28);
      time1102 = prim /0055 (_t131D, _t1322);
      face1103 = 1;
    } else {
      real _t1323 = 0.e0;
      real _t1324 = -0.1e1;
      real _t1325 = 0.e0;
      real _t1326 = 0.e0;
      vec3 _t1327 = [_t1324, _t1325, _t1326];
      real _t1328 = prim •00CE<$[3]; $[3]; $[]> (_t1327, refPos0B27);
      real _t1329 = prim -0026<$[]> (_t1323, _t1328);
      real _t132A = -0.1e1;
      real _t132B = 0.e0;
      real _t132C = 0.e0;
      vec3 _t132D = [_t132A, _t132B, _t132C];
      real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, dPos0B28);
      faceTime1104 = prim /0055 (_t1329, _t132E);
      string _t132F = "Saving backup time: ";
      string _t1330 = "\n";
      print (_t132F, faceTime1104, _t1330);
    }
  }
  string _t1331 = "\ntest :";
  real _t1332 = 0.e0;
  real _t1333 = 0.e0;
  real _t1334 = -0.1e1;
  real _t1335 = 0.e0;
  vec3 _t1336 = [_t1333, _t1334, _t1335];
  real _t1337 = prim •00CE<$[3]; $[3]; $[]> (_t1336, refPos0B27);
  real _t1338 = prim -0026<$[]> (_t1332, _t1337);
  real _t1339 = 0.e0;
  real _t133A = -0.1e1;
  real _t133B = 0.e0;
  vec3 _t133C = [_t1339, _t133A, _t133B];
  real _t133D = prim •00CE<$[3]; $[3]; $[]> (_t133C, dPos0B28);
  real _t133E = prim /0055 (_t1338, _t133D);
  string _t133F = " test2: ";
  real _t1340 = 0.e0;
  real _t1341 = -0.1e1;
  real _t1342 = 0.e0;
  vec3 _t1343 = [_t1340, _t1341, _t1342];
  real _t1344 = prim •00CE<$[3]; $[3]; $[]> (_t1343, dPos0B28);
  string _t1345 = " insideTest: ";
  real _t1346 = 0.1e1;
  real _t1347 = 0.1e-7;
  real _t1348 = prim +0017<$[]> (_t1346, _t1347);
  real _t1349 = 0.1e1;
  real _t134A = 0.1e1;
  real _t134B = 0.1e1;
  vec3 _t134C = [_t1349, _t134A, _t134B];
  real _t134D = 0.e0;
  real _t134E = 0.e0;
  real _t134F = -0.1e1;
  real _t1350 = 0.e0;
  vec3 _t1351 = [_t134E, _t134F, _t1350];
  real _t1352 = prim •00CE<$[3]; $[3]; $[]> (_t1351, refPos0B27);
  real _t1353 = prim -0026<$[]> (_t134D, _t1352);
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, dPos0B28);
  real _t1359 = prim /0055 (_t1353, _t1358);
  vec3 _t135A = prim *0038<$[3]> (dPos0B28, _t1359);
  vec3 _t135B = prim +0017<$[3]> (refPos0B27, _t135A);
  real _t135C = prim •00CE<$[3]; $[3]; $[]> (_t134C, _t135B);
  bool _t135D = prim >0080 (_t1348, _t135C);
  real _t135E = 0.1e-7;
  real _t135F = 0.1e-7;
  real _t1360 = 0.1e-7;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = 0.e0;
  real _t1363 = 0.e0;
  real _t1364 = -0.1e1;
  real _t1365 = 0.e0;
  vec3 _t1366 = [_t1363, _t1364, _t1365];
  real _t1367 = prim •00CE<$[3]; $[3]; $[]> (_t1366, refPos0B27);
  real _t1368 = prim -0026<$[]> (_t1362, _t1367);
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, dPos0B28);
  real _t136E = prim /0055 (_t1368, _t136D);
  vec3 _t136F = prim *0038<$[3]> (dPos0B28, _t136E);
  vec3 _t1370 = prim +0017<$[3]> (refPos0B27, _t136F);
  vec3 _t1371 = prim +0017<$[3]> (_t1361, _t1370);
  real _t1372 = _t1371[0];
  real _t1373 = -0.e0;
  bool _t1374 = prim >0080 (_t1372, _t1373);
  real _t1375 = 0.1e-7;
  real _t1376 = 0.1e-7;
  real _t1377 = 0.1e-7;
  vec3 _t1378 = [_t1375, _t1376, _t1377];
  real _t1379 = 0.e0;
  real _t137A = 0.e0;
  real _t137B = -0.1e1;
  real _t137C = 0.e0;
  vec3 _t137D = [_t137A, _t137B, _t137C];
  real _t137E = prim •00CE<$[3]; $[3]; $[]> (_t137D, refPos0B27);
  real _t137F = prim -0026<$[]> (_t1379, _t137E);
  real _t1380 = 0.e0;
  real _t1381 = -0.1e1;
  real _t1382 = 0.e0;
  vec3 _t1383 = [_t1380, _t1381, _t1382];
  real _t1384 = prim •00CE<$[3]; $[3]; $[]> (_t1383, dPos0B28);
  real _t1385 = prim /0055 (_t137F, _t1384);
  vec3 _t1386 = prim *0038<$[3]> (dPos0B28, _t1385);
  vec3 _t1387 = prim +0017<$[3]> (refPos0B27, _t1386);
  vec3 _t1388 = prim +0017<$[3]> (_t1378, _t1387);
  real _t1389 = _t1388[1];
  real _t138A = -0.e0;
  bool _t138B = prim >0080 (_t1389, _t138A);
  real _t138C = 0.1e-7;
  real _t138D = 0.1e-7;
  real _t138E = 0.1e-7;
  vec3 _t138F = [_t138C, _t138D, _t138E];
  real _t1390 = 0.e0;
  real _t1391 = 0.e0;
  real _t1392 = -0.1e1;
  real _t1393 = 0.e0;
  vec3 _t1394 = [_t1391, _t1392, _t1393];
  real _t1395 = prim •00CE<$[3]; $[3]; $[]> (_t1394, refPos0B27);
  real _t1396 = prim -0026<$[]> (_t1390, _t1395);
  real _t1397 = 0.e0;
  real _t1398 = -0.1e1;
  real _t1399 = 0.e0;
  vec3 _t139A = [_t1397, _t1398, _t1399];
  real _t139B = prim •00CE<$[3]; $[3]; $[]> (_t139A, dPos0B28);
  real _t139C = prim /0055 (_t1396, _t139B);
  vec3 _t139D = prim *0038<$[3]> (dPos0B28, _t139C);
  vec3 _t139E = prim +0017<$[3]> (refPos0B27, _t139D);
  vec3 _t139F = prim +0017<$[3]> (_t138F, _t139E);
  real _t13A0 = _t139F[2];
  real _t13A1 = -0.e0;
  bool _t13A2 = prim >0080 (_t13A0, _t13A1);
  bool _t13A3 = prim $and01C4 (_t138B, _t13A2);
  bool _t13A4 = prim $and01C4 (_t1374, _t13A3);
  bool _t13A5 = prim $and01C4 (_t135D, _t13A4);
  string _t13A6 = " dist: ";
  real _t13A7 = 0.e0;
  real _t13A8 = 0.e0;
  real _t13A9 = -0.1e1;
  real _t13AA = 0.e0;
  vec3 _t13AB = [_t13A8, _t13A9, _t13AA];
  real _t13AC = prim •00CE<$[3]; $[3]; $[]> (_t13AB, refPos0B27);
  real _t13AD = prim -0026<$[]> (_t13A7, _t13AC);
  real _t13AE = prim |()|00B5<$[]> (_t13AD);
  string _t13AF = "signed dist: ";
  real _t13B0 = 0.e0;
  real _t13B1 = 0.e0;
  real _t13B2 = -0.1e1;
  real _t13B3 = 0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, refPos0B27);
  real _t13B6 = prim -0026<$[]> (_t13B0, _t13B5);
  string _t13B7 = " face: ";
  int _t13B8 = 2;
  string _t13B9 = " place: ";
  real _t13BA = 0.e0;
  real _t13BB = 0.e0;
  real _t13BC = -0.1e1;
  real _t13BD = 0.e0;
  vec3 _t13BE = [_t13BB, _t13BC, _t13BD];
  real _t13BF = prim •00CE<$[3]; $[3]; $[]> (_t13BE, refPos0B27);
  real _t13C0 = prim -0026<$[]> (_t13BA, _t13BF);
  real _t13C1 = 0.e0;
  real _t13C2 = -0.1e1;
  real _t13C3 = 0.e0;
  vec3 _t13C4 = [_t13C1, _t13C2, _t13C3];
  real _t13C5 = prim •00CE<$[3]; $[3]; $[]> (_t13C4, dPos0B28);
  real _t13C6 = prim /0055 (_t13C0, _t13C5);
  vec3 _t13C7 = prim *0038<$[3]> (dPos0B28, _t13C6);
  vec3 _t13C8 = prim +0017<$[3]> (refPos0B27, _t13C7);
  string _t13C9 = " error: ";
  real _t13CA = 0.e0;
  real _t13CB = 0.e0;
  real _t13CC = -0.1e1;
  real _t13CD = 0.e0;
  vec3 _t13CE = [_t13CB, _t13CC, _t13CD];
  real _t13CF = 0.e0;
  real _t13D0 = 0.e0;
  real _t13D1 = -0.1e1;
  real _t13D2 = 0.e0;
  vec3 _t13D3 = [_t13D0, _t13D1, _t13D2];
  real _t13D4 = prim •00CE<$[3]; $[3]; $[]> (_t13D3, refPos0B27);
  real _t13D5 = prim -0026<$[]> (_t13CF, _t13D4);
  real _t13D6 = 0.e0;
  real _t13D7 = -0.1e1;
  real _t13D8 = 0.e0;
  vec3 _t13D9 = [_t13D6, _t13D7, _t13D8];
  real _t13DA = prim •00CE<$[3]; $[3]; $[]> (_t13D9, dPos0B28);
  real _t13DB = prim /0055 (_t13D5, _t13DA);
  vec3 _t13DC = prim *0038<$[3]> (dPos0B28, _t13DB);
  vec3 _t13DD = prim +0017<$[3]> (refPos0B27, _t13DC);
  real _t13DE = prim •00CE<$[3]; $[3]; $[]> (_t13CE, _t13DD);
  real _t13DF = prim -0026<$[]> (_t13CA, _t13DE);
  real _t13E0 = prim |()|00B5<$[]> (_t13DF);
  string _t13E1 = " offset :";
  string _t13E2 = " dp: ";
  string _t13E3 = " otherPossibleTime: ";
  string _t13E4 = "\n";
  string _t13E5 = "\n original face: ";
  string _t13E6 = " ";
  print (_t1331, _t133E, _t133F, _t1344, _t1345, _t13A5, _t13A6, _t13AE, _t13AF, _t13B6, _t13B7, _t13B8, _t13B9, _t13C8, _t13C9, _t13E0, _t13E1, refPos0B27, _t13E2, dPos0B28, _t13E3, faceTime1104, _t13E4, _t13E5, i1101, _t13E6);
  real _t13E7 = 0.e0;
  real _t13E8 = 0.e0;
  real _t13E9 = -0.1e1;
  real _t13EA = 0.e0;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, refPos0B27);
  real _t13ED = prim -0026<$[]> (_t13E7, _t13EC);
  real _t13EE = 0.e0;
  real _t13EF = -0.1e1;
  real _t13F0 = 0.e0;
  vec3 _t13F1 = [_t13EE, _t13EF, _t13F0];
  real _t13F2 = prim •00CE<$[3]; $[3]; $[]> (_t13F1, dPos0B28);
  real _t13F3 = prim /0055 (_t13ED, _t13F2);
  real _t13F4 = -0.1e-7;
  bool _t13F5 = prim >=007E (_t13F3, _t13F4);
  real _t13F6 = 0.e0;
  real _t13F7 = 0.e0;
  real _t13F8 = -0.1e1;
  real _t13F9 = 0.e0;
  vec3 _t13FA = [_t13F7, _t13F8, _t13F9];
  real _t13FB = prim •00CE<$[3]; $[3]; $[]> (_t13FA, refPos0B27);
  real _t13FC = prim -0026<$[]> (_t13F6, _t13FB);
  real _t13FD = 0.e0;
  real _t13FE = -0.1e1;
  real _t13FF = 0.e0;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, dPos0B28);
  real _t1402 = prim /0055 (_t13FC, _t1401);
  bool _t1403 = prim >0080 (time1102, _t1402);
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  real _t1406 = 0.e0;
  vec3 _t1407 = [_t1404, _t1405, _t1406];
  real _t1408 = prim •00CE<$[3]; $[3]; $[]> (_t1407, dPos0B28);
  real _t1409 = prim |()|00B5<$[]> (_t1408);
  real _t140A = 0.1e-7;
  bool _t140B = prim >=007E (_t1409, _t140A);
  bool _t140C = prim $and01C4 (_t1403, _t140B);
  bool _t140D = prim $and01C4 (_t13F5, _t140C);
  if _t140D {
    int _t140E = 2;
    bool _t140F = prim !=0086 (i1101, _t140E);
    if _t140F {
      string _t1410 = "Saving at this face!";
      real _t1411 = 0.e0;
      real _t1412 = 0.e0;
      real _t1413 = -0.1e1;
      real _t1414 = 0.e0;
      vec3 _t1415 = [_t1412, _t1413, _t1414];
      real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0B27);
      real _t1417 = prim -0026<$[]> (_t1411, _t1416);
      real _t1418 = 0.e0;
      real _t1419 = -0.1e1;
      real _t141A = 0.e0;
      vec3 _t141B = [_t1418, _t1419, _t141A];
      real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0B28);
      real _t141D = prim /0055 (_t1417, _t141C);
      real _t141E = 0.e0;
      real _t141F = 0.e0;
      real _t1420 = -0.1e1;
      real _t1421 = 0.e0;
      vec3 _t1422 = [_t141F, _t1420, _t1421];
      real _t1423 = prim •00CE<$[3]; $[3]; $[]> (_t1422, refPos0B27);
      real _t1424 = prim -0026<$[]> (_t141E, _t1423);
      real _t1425 = 0.e0;
      real _t1426 = -0.1e1;
      real _t1427 = 0.e0;
      vec3 _t1428 = [_t1425, _t1426, _t1427];
      real _t1429 = prim •00CE<$[3]; $[3]; $[]> (_t1428, dPos0B28);
      real _t142A = prim /0055 (_t1424, _t1429);
      bool _t142B = prim >0080 (time1102, _t142A);
      string _t142C = "\n";
      print (_t1410, _t141D, _t142B, _t142C);
      real _t142D = 0.e0;
      real _t142E = 0.e0;
      real _t142F = -0.1e1;
      real _t1430 = 0.e0;
      vec3 _t1431 = [_t142E, _t142F, _t1430];
      real _t1432 = prim •00CE<$[3]; $[3]; $[]> (_t1431, refPos0B27);
      real _t1433 = prim -0026<$[]> (_t142D, _t1432);
      real _t1434 = 0.e0;
      real _t1435 = -0.1e1;
      real _t1436 = 0.e0;
      vec3 _t1437 = [_t1434, _t1435, _t1436];
      real _t1438 = prim •00CE<$[3]; $[3]; $[]> (_t1437, dPos0B28);
      time1102 = prim /0055 (_t1433, _t1438);
      face1103 = 2;
    } else {
      real _t1439 = 0.e0;
      real _t143A = 0.e0;
      real _t143B = -0.1e1;
      real _t143C = 0.e0;
      vec3 _t143D = [_t143A, _t143B, _t143C];
      real _t143E = prim •00CE<$[3]; $[3]; $[]> (_t143D, refPos0B27);
      real _t143F = prim -0026<$[]> (_t1439, _t143E);
      real _t1440 = 0.e0;
      real _t1441 = -0.1e1;
      real _t1442 = 0.e0;
      vec3 _t1443 = [_t1440, _t1441, _t1442];
      real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, dPos0B28);
      faceTime1104 = prim /0055 (_t143F, _t1444);
      string _t1445 = "Saving backup time: ";
      string _t1446 = "\n";
      print (_t1445, faceTime1104, _t1446);
    }
  }
  string _t1447 = "\ntest :";
  real _t1448 = 0.e0;
  real _t1449 = 0.e0;
  real _t144A = 0.e0;
  real _t144B = -0.1e1;
  vec3 _t144C = [_t1449, _t144A, _t144B];
  real _t144D = prim •00CE<$[3]; $[3]; $[]> (_t144C, refPos0B27);
  real _t144E = prim -0026<$[]> (_t1448, _t144D);
  real _t144F = 0.e0;
  real _t1450 = 0.e0;
  real _t1451 = -0.1e1;
  vec3 _t1452 = [_t144F, _t1450, _t1451];
  real _t1453 = prim •00CE<$[3]; $[3]; $[]> (_t1452, dPos0B28);
  real _t1454 = prim /0055 (_t144E, _t1453);
  string _t1455 = " test2: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = -0.1e1;
  vec3 _t1459 = [_t1456, _t1457, _t1458];
  real _t145A = prim •00CE<$[3]; $[3]; $[]> (_t1459, dPos0B28);
  string _t145B = " insideTest: ";
  real _t145C = 0.1e1;
  real _t145D = 0.1e-7;
  real _t145E = prim +0017<$[]> (_t145C, _t145D);
  real _t145F = 0.1e1;
  real _t1460 = 0.1e1;
  real _t1461 = 0.1e1;
  vec3 _t1462 = [_t145F, _t1460, _t1461];
  real _t1463 = 0.e0;
  real _t1464 = 0.e0;
  real _t1465 = 0.e0;
  real _t1466 = -0.1e1;
  vec3 _t1467 = [_t1464, _t1465, _t1466];
  real _t1468 = prim •00CE<$[3]; $[3]; $[]> (_t1467, refPos0B27);
  real _t1469 = prim -0026<$[]> (_t1463, _t1468);
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, dPos0B28);
  real _t146F = prim /0055 (_t1469, _t146E);
  vec3 _t1470 = prim *0038<$[3]> (dPos0B28, _t146F);
  vec3 _t1471 = prim +0017<$[3]> (refPos0B27, _t1470);
  real _t1472 = prim •00CE<$[3]; $[3]; $[]> (_t1462, _t1471);
  bool _t1473 = prim >0080 (_t145E, _t1472);
  real _t1474 = 0.1e-7;
  real _t1475 = 0.1e-7;
  real _t1476 = 0.1e-7;
  vec3 _t1477 = [_t1474, _t1475, _t1476];
  real _t1478 = 0.e0;
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = -0.1e1;
  vec3 _t147C = [_t1479, _t147A, _t147B];
  real _t147D = prim •00CE<$[3]; $[3]; $[]> (_t147C, refPos0B27);
  real _t147E = prim -0026<$[]> (_t1478, _t147D);
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, dPos0B28);
  real _t1484 = prim /0055 (_t147E, _t1483);
  vec3 _t1485 = prim *0038<$[3]> (dPos0B28, _t1484);
  vec3 _t1486 = prim +0017<$[3]> (refPos0B27, _t1485);
  vec3 _t1487 = prim +0017<$[3]> (_t1477, _t1486);
  real _t1488 = _t1487[0];
  real _t1489 = -0.e0;
  bool _t148A = prim >0080 (_t1488, _t1489);
  real _t148B = 0.1e-7;
  real _t148C = 0.1e-7;
  real _t148D = 0.1e-7;
  vec3 _t148E = [_t148B, _t148C, _t148D];
  real _t148F = 0.e0;
  real _t1490 = 0.e0;
  real _t1491 = 0.e0;
  real _t1492 = -0.1e1;
  vec3 _t1493 = [_t1490, _t1491, _t1492];
  real _t1494 = prim •00CE<$[3]; $[3]; $[]> (_t1493, refPos0B27);
  real _t1495 = prim -0026<$[]> (_t148F, _t1494);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = -0.1e1;
  vec3 _t1499 = [_t1496, _t1497, _t1498];
  real _t149A = prim •00CE<$[3]; $[3]; $[]> (_t1499, dPos0B28);
  real _t149B = prim /0055 (_t1495, _t149A);
  vec3 _t149C = prim *0038<$[3]> (dPos0B28, _t149B);
  vec3 _t149D = prim +0017<$[3]> (refPos0B27, _t149C);
  vec3 _t149E = prim +0017<$[3]> (_t148E, _t149D);
  real _t149F = _t149E[1];
  real _t14A0 = -0.e0;
  bool _t14A1 = prim >0080 (_t149F, _t14A0);
  real _t14A2 = 0.1e-7;
  real _t14A3 = 0.1e-7;
  real _t14A4 = 0.1e-7;
  vec3 _t14A5 = [_t14A2, _t14A3, _t14A4];
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = 0.e0;
  real _t14A9 = -0.1e1;
  vec3 _t14AA = [_t14A7, _t14A8, _t14A9];
  real _t14AB = prim •00CE<$[3]; $[3]; $[]> (_t14AA, refPos0B27);
  real _t14AC = prim -0026<$[]> (_t14A6, _t14AB);
  real _t14AD = 0.e0;
  real _t14AE = 0.e0;
  real _t14AF = -0.1e1;
  vec3 _t14B0 = [_t14AD, _t14AE, _t14AF];
  real _t14B1 = prim •00CE<$[3]; $[3]; $[]> (_t14B0, dPos0B28);
  real _t14B2 = prim /0055 (_t14AC, _t14B1);
  vec3 _t14B3 = prim *0038<$[3]> (dPos0B28, _t14B2);
  vec3 _t14B4 = prim +0017<$[3]> (refPos0B27, _t14B3);
  vec3 _t14B5 = prim +0017<$[3]> (_t14A5, _t14B4);
  real _t14B6 = _t14B5[2];
  real _t14B7 = -0.e0;
  bool _t14B8 = prim >0080 (_t14B6, _t14B7);
  bool _t14B9 = prim $and01C4 (_t14A1, _t14B8);
  bool _t14BA = prim $and01C4 (_t148A, _t14B9);
  bool _t14BB = prim $and01C4 (_t1473, _t14BA);
  string _t14BC = " dist: ";
  real _t14BD = 0.e0;
  real _t14BE = 0.e0;
  real _t14BF = 0.e0;
  real _t14C0 = -0.1e1;
  vec3 _t14C1 = [_t14BE, _t14BF, _t14C0];
  real _t14C2 = prim •00CE<$[3]; $[3]; $[]> (_t14C1, refPos0B27);
  real _t14C3 = prim -0026<$[]> (_t14BD, _t14C2);
  real _t14C4 = prim |()|00B5<$[]> (_t14C3);
  string _t14C5 = "signed dist: ";
  real _t14C6 = 0.e0;
  real _t14C7 = 0.e0;
  real _t14C8 = 0.e0;
  real _t14C9 = -0.1e1;
  vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
  real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, refPos0B27);
  real _t14CC = prim -0026<$[]> (_t14C6, _t14CB);
  string _t14CD = " face: ";
  int _t14CE = 3;
  string _t14CF = " place: ";
  real _t14D0 = 0.e0;
  real _t14D1 = 0.e0;
  real _t14D2 = 0.e0;
  real _t14D3 = -0.1e1;
  vec3 _t14D4 = [_t14D1, _t14D2, _t14D3];
  real _t14D5 = prim •00CE<$[3]; $[3]; $[]> (_t14D4, refPos0B27);
  real _t14D6 = prim -0026<$[]> (_t14D0, _t14D5);
  real _t14D7 = 0.e0;
  real _t14D8 = 0.e0;
  real _t14D9 = -0.1e1;
  vec3 _t14DA = [_t14D7, _t14D8, _t14D9];
  real _t14DB = prim •00CE<$[3]; $[3]; $[]> (_t14DA, dPos0B28);
  real _t14DC = prim /0055 (_t14D6, _t14DB);
  vec3 _t14DD = prim *0038<$[3]> (dPos0B28, _t14DC);
  vec3 _t14DE = prim +0017<$[3]> (refPos0B27, _t14DD);
  string _t14DF = " error: ";
  real _t14E0 = 0.e0;
  real _t14E1 = 0.e0;
  real _t14E2 = 0.e0;
  real _t14E3 = -0.1e1;
  vec3 _t14E4 = [_t14E1, _t14E2, _t14E3];
  real _t14E5 = 0.e0;
  real _t14E6 = 0.e0;
  real _t14E7 = 0.e0;
  real _t14E8 = -0.1e1;
  vec3 _t14E9 = [_t14E6, _t14E7, _t14E8];
  real _t14EA = prim •00CE<$[3]; $[3]; $[]> (_t14E9, refPos0B27);
  real _t14EB = prim -0026<$[]> (_t14E5, _t14EA);
  real _t14EC = 0.e0;
  real _t14ED = 0.e0;
  real _t14EE = -0.1e1;
  vec3 _t14EF = [_t14EC, _t14ED, _t14EE];
  real _t14F0 = prim •00CE<$[3]; $[3]; $[]> (_t14EF, dPos0B28);
  real _t14F1 = prim /0055 (_t14EB, _t14F0);
  vec3 _t14F2 = prim *0038<$[3]> (dPos0B28, _t14F1);
  vec3 _t14F3 = prim +0017<$[3]> (refPos0B27, _t14F2);
  real _t14F4 = prim •00CE<$[3]; $[3]; $[]> (_t14E4, _t14F3);
  real _t14F5 = prim -0026<$[]> (_t14E0, _t14F4);
  real _t14F6 = prim |()|00B5<$[]> (_t14F5);
  string _t14F7 = " offset :";
  string _t14F8 = " dp: ";
  string _t14F9 = " otherPossibleTime: ";
  string _t14FA = "\n";
  string _t14FB = "\n original face: ";
  string _t14FC = " ";
  print (_t1447, _t1454, _t1455, _t145A, _t145B, _t14BB, _t14BC, _t14C4, _t14C5, _t14CC, _t14CD, _t14CE, _t14CF, _t14DE, _t14DF, _t14F6, _t14F7, refPos0B27, _t14F8, dPos0B28, _t14F9, faceTime1104, _t14FA, _t14FB, i1101, _t14FC);
  real _t14FD = 0.e0;
  real _t14FE = 0.e0;
  real _t14FF = 0.e0;
  real _t1500 = -0.1e1;
  vec3 _t1501 = [_t14FE, _t14FF, _t1500];
  real _t1502 = prim •00CE<$[3]; $[3]; $[]> (_t1501, refPos0B27);
  real _t1503 = prim -0026<$[]> (_t14FD, _t1502);
  real _t1504 = 0.e0;
  real _t1505 = 0.e0;
  real _t1506 = -0.1e1;
  vec3 _t1507 = [_t1504, _t1505, _t1506];
  real _t1508 = prim •00CE<$[3]; $[3]; $[]> (_t1507, dPos0B28);
  real _t1509 = prim /0055 (_t1503, _t1508);
  real _t150A = -0.1e-7;
  bool _t150B = prim >=007E (_t1509, _t150A);
  real _t150C = 0.e0;
  real _t150D = 0.e0;
  real _t150E = 0.e0;
  real _t150F = -0.1e1;
  vec3 _t1510 = [_t150D, _t150E, _t150F];
  real _t1511 = prim •00CE<$[3]; $[3]; $[]> (_t1510, refPos0B27);
  real _t1512 = prim -0026<$[]> (_t150C, _t1511);
  real _t1513 = 0.e0;
  real _t1514 = 0.e0;
  real _t1515 = -0.1e1;
  vec3 _t1516 = [_t1513, _t1514, _t1515];
  real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, dPos0B28);
  real _t1518 = prim /0055 (_t1512, _t1517);
  bool _t1519 = prim >0080 (time1102, _t1518);
  real _t151A = 0.e0;
  real _t151B = 0.e0;
  real _t151C = -0.1e1;
  vec3 _t151D = [_t151A, _t151B, _t151C];
  real _t151E = prim •00CE<$[3]; $[3]; $[]> (_t151D, dPos0B28);
  real _t151F = prim |()|00B5<$[]> (_t151E);
  real _t1520 = 0.1e-7;
  bool _t1521 = prim >=007E (_t151F, _t1520);
  bool _t1522 = prim $and01C4 (_t1519, _t1521);
  bool _t1523 = prim $and01C4 (_t150B, _t1522);
  if _t1523 {
    int _t1524 = 3;
    bool _t1525 = prim !=0086 (i1101, _t1524);
    if _t1525 {
      string _t1526 = "Saving at this face!";
      real _t1527 = 0.e0;
      real _t1528 = 0.e0;
      real _t1529 = 0.e0;
      real _t152A = -0.1e1;
      vec3 _t152B = [_t1528, _t1529, _t152A];
      real _t152C = prim •00CE<$[3]; $[3]; $[]> (_t152B, refPos0B27);
      real _t152D = prim -0026<$[]> (_t1527, _t152C);
      real _t152E = 0.e0;
      real _t152F = 0.e0;
      real _t1530 = -0.1e1;
      vec3 _t1531 = [_t152E, _t152F, _t1530];
      real _t1532 = prim •00CE<$[3]; $[3]; $[]> (_t1531, dPos0B28);
      real _t1533 = prim /0055 (_t152D, _t1532);
      real _t1534 = 0.e0;
      real _t1535 = 0.e0;
      real _t1536 = 0.e0;
      real _t1537 = -0.1e1;
      vec3 _t1538 = [_t1535, _t1536, _t1537];
      real _t1539 = prim •00CE<$[3]; $[3]; $[]> (_t1538, refPos0B27);
      real _t153A = prim -0026<$[]> (_t1534, _t1539);
      real _t153B = 0.e0;
      real _t153C = 0.e0;
      real _t153D = -0.1e1;
      vec3 _t153E = [_t153B, _t153C, _t153D];
      real _t153F = prim •00CE<$[3]; $[3]; $[]> (_t153E, dPos0B28);
      real _t1540 = prim /0055 (_t153A, _t153F);
      bool _t1541 = prim >0080 (time1102, _t1540);
      string _t1542 = "\n";
      print (_t1526, _t1533, _t1541, _t1542);
      real _t1543 = 0.e0;
      real _t1544 = 0.e0;
      real _t1545 = 0.e0;
      real _t1546 = -0.1e1;
      vec3 _t1547 = [_t1544, _t1545, _t1546];
      real _t1548 = prim •00CE<$[3]; $[3]; $[]> (_t1547, refPos0B27);
      real _t1549 = prim -0026<$[]> (_t1543, _t1548);
      real _t154A = 0.e0;
      real _t154B = 0.e0;
      real _t154C = -0.1e1;
      vec3 _t154D = [_t154A, _t154B, _t154C];
      real _t154E = prim •00CE<$[3]; $[3]; $[]> (_t154D, dPos0B28);
      time1102 = prim /0055 (_t1549, _t154E);
      face1103 = 3;
    } else {
      real _t154F = 0.e0;
      real _t1550 = 0.e0;
      real _t1551 = 0.e0;
      real _t1552 = -0.1e1;
      vec3 _t1553 = [_t1550, _t1551, _t1552];
      real _t1554 = prim •00CE<$[3]; $[3]; $[]> (_t1553, refPos0B27);
      real _t1555 = prim -0026<$[]> (_t154F, _t1554);
      real _t1556 = 0.e0;
      real _t1557 = 0.e0;
      real _t1558 = -0.1e1;
      vec3 _t1559 = [_t1556, _t1557, _t1558];
      real _t155A = prim •00CE<$[3]; $[3]; $[]> (_t1559, dPos0B28);
      faceTime1104 = prim /0055 (_t1555, _t155A);
      string _t155B = "Saving backup time: ";
      string _t155C = "\n";
      print (_t155B, faceTime1104, _t155C);
    }
  }
  int _t155D = -1;
  bool _t155E = prim !=0086 (face1103, _t155D);
  real _t155F = 0.1e1;
  real _t1560 = 0.1e-7;
  real _t1561 = prim +0017<$[]> (_t155F, _t1560);
  real _t1562 = 0.1e1;
  real _t1563 = 0.1e1;
  real _t1564 = 0.1e1;
  vec3 _t1565 = [_t1562, _t1563, _t1564];
  real _t1566 = 0.e0;
  real _t1567 = prim max0125 (time1102, _t1566);
  vec3 _t1568 = prim *0038<$[3]> (dPos0B28, _t1567);
  vec3 _t1569 = prim +0017<$[3]> (refPos0B27, _t1568);
  real _t156A = prim •00CE<$[3]; $[3]; $[]> (_t1565, _t1569);
  bool _t156B = prim >0080 (_t1561, _t156A);
  real _t156C = 0.1e-7;
  real _t156D = 0.1e-7;
  real _t156E = 0.1e-7;
  vec3 _t156F = [_t156C, _t156D, _t156E];
  real _t1570 = 0.e0;
  real _t1571 = prim max0125 (time1102, _t1570);
  vec3 _t1572 = prim *0038<$[3]> (dPos0B28, _t1571);
  vec3 _t1573 = prim +0017<$[3]> (refPos0B27, _t1572);
  vec3 _t1574 = prim +0017<$[3]> (_t156F, _t1573);
  real _t1575 = _t1574[0];
  real _t1576 = -0.e0;
  bool _t1577 = prim >0080 (_t1575, _t1576);
  real _t1578 = 0.1e-7;
  real _t1579 = 0.1e-7;
  real _t157A = 0.1e-7;
  vec3 _t157B = [_t1578, _t1579, _t157A];
  real _t157C = 0.e0;
  real _t157D = prim max0125 (time1102, _t157C);
  vec3 _t157E = prim *0038<$[3]> (dPos0B28, _t157D);
  vec3 _t157F = prim +0017<$[3]> (refPos0B27, _t157E);
  vec3 _t1580 = prim +0017<$[3]> (_t157B, _t157F);
  real _t1581 = _t1580[1];
  real _t1582 = -0.e0;
  bool _t1583 = prim >0080 (_t1581, _t1582);
  real _t1584 = 0.1e-7;
  real _t1585 = 0.1e-7;
  real _t1586 = 0.1e-7;
  vec3 _t1587 = [_t1584, _t1585, _t1586];
  real _t1588 = 0.e0;
  real _t1589 = prim max0125 (time1102, _t1588);
  vec3 _t158A = prim *0038<$[3]> (dPos0B28, _t1589);
  vec3 _t158B = prim +0017<$[3]> (refPos0B27, _t158A);
  vec3 _t158C = prim +0017<$[3]> (_t1587, _t158B);
  real _t158D = _t158C[2];
  real _t158E = -0.e0;
  bool _t158F = prim >0080 (_t158D, _t158E);
  bool _t1590 = prim $and01C4 (_t1583, _t158F);
  bool _t1591 = prim $and01C4 (_t1577, _t1590);
  bool _t1592 = prim $and01C4 (_t156B, _t1591);
  bool _t1593 = prim $and01C4 (_t155E, _t1592);
  if _t1593 {
    string _t1594 = "\nReturning via standard : ";
    real _t1595 = 0.e0;
    real _t1596 = prim max0125 (time1102, _t1595);
    real _t1597 = (real)face1103;
    vec2 _t1598 = [_t1596, _t1597];
    string _t1599 = "\n";
    print (_t1594, _t1598, _t1599);
    real _t159A = 0.e0;
    real _t159B = prim max0125 (time1102, _t159A);
    real _t159C = (real)face1103;
    vec2 _t159D = [_t159B, _t159C];
    return _t159D;
  } else {
    real _t159E = -inf;
    bool _t159F = prim ==0084 (_t159E, faceTime1104);
    if _t159F {
      string _t15A0 = "\nReturning via fail : ";
      real _t15A1 = -0.1e1;
      real _t15A2 = -0.1e1;
      vec2 _t15A3 = [_t15A1, _t15A2];
      string _t15A4 = "\n";
      print (_t15A0, _t15A3, _t15A4);
      real _t15A5 = -0.1e1;
      real _t15A6 = -0.1e1;
      vec2 _t15A7 = [_t15A5, _t15A6];
      return _t15A7;
    } else {
      string _t15A8 = "\nReturning via backup : ";
      real _t15A9 = 0.e0;
      real _t15AA = prim max0125 (faceTime1104, _t15A9);
      real _t15AB = (real)i1101;
      vec2 _t15AC = [_t15AA, _t15AB];
      string _t15AD = "\n";
      print (_t15A8, _t15AC, _t15AD);
      real _t15AE = 0.e0;
      real _t15AF = prim max0125 (faceTime1104, _t15AE);
      real _t15B0 = (real)i1101;
      vec2 _t15B1 = [_t15AF, _t15B0];
      return _t15B1;
    }
  }
}
function Femdata: Mesh#0 domain15B4 (Femdata: Space arg015B5)
{
  Femdata: Mesh _t15B6 = extractFem(arg015B5, Mesh);
  return _t15B6;
}
function Femdata: Space#0 space15B7 (Femdata: FemFunc arg015B8)
{
  Femdata: Space _t15B9 = extractFem(arg015B8, Space);
  return _t15B9;
}
function Femdata: FuncCell#0 funcCell15BA (Femdata: FemFunc arg015BB, Femdata: MeshCell arg115BC)
{
  int _t15BD = extractFemItem(CellIndex(MeshCell), int, arg115BC);
  Femdata: FuncCell _t15BE = loadFem(FuncCell, arg015BB, _t15BD);
  return _t15BE;
}
function bool#1 insideTest15CC (vec3 x15CD)
{
  real _t15CE = 0.5e0;
  real _t15CF = 0.5e0;
  real _t15D0 = 0.5e0;
  vec3 _t15D1 = [_t15CE, _t15CF, _t15D0];
  vec3 mid15D2 = prim -0026<$[3]> (x15CD, _t15D1);
  bool _t15D3;
  real _t15D4 = mid15D2[0];
  real _t15D5 = prim |()|00B5<$[]> (_t15D4);
  real _t15D6 = 0.5e0;
  bool _t15D7 = prim <=007C (_t15D5, _t15D6);
  if _t15D7 {
    bool _t15D8;
    real _t15D9 = mid15D2[1];
    real _t15DA = prim |()|00B5<$[]> (_t15D9);
    real _t15DB = 0.5e0;
    bool _t15DC = prim <=007C (_t15DA, _t15DB);
    if _t15DC {
      real _t15DD = mid15D2[2];
      real _t15DE = prim |()|00B5<$[]> (_t15DD);
      real _t15DF = 0.5e0;
      _t15D8 = prim <=007C (_t15DE, _t15DF);
    } else {
      _t15D8 = false;
    }
    _t15D3 = _t15D8;
  } else {
    _t15D3 = false;
  }
  return _t15D3;
}
function vec3#3 fStep15E0 (vec3 x15E1)
{
  real _t15E2 = 0.5e0;
  real _t15E3 = 0.5e0;
  real _t15E4 = 0.5e0;
  vec3 _t15E5 = [_t15E2, _t15E3, _t15E4];
  vec3 xp15E6 = prim -0026<$[3]> (x15E1, _t15E5);
  real f15E7 = prim •00CE<$[3]; $[3]; $[]> (xp15E6, xp15E6);
  real _t15E8 = 0.2e1;
  vec3 gf15E9 = prim *0036<$[3]> (_t15E8, xp15E6);
  real _t15EA = prim •00CE<$[3]; $[3]; $[]> (gf15E9, gf15E9);
  vec3 _t15EB = prim /0057<$[3]> (gf15E9, _t15EA);
  real _t15EC = prim -0026<$[]> (v00479, f15E7);
  vec3 _t15ED = prim *0038<$[3]> (_t15EB, _t15EC);
  return _t15ED;
}
function tensor[3,3]#1 fPerp15EE (vec3 x15EF)
{
  real _t15F0 = 0.5e0;
  real _t15F1 = 0.5e0;
  real _t15F2 = 0.5e0;
  vec3 _t15F3 = [_t15F0, _t15F1, _t15F2];
  vec3 xp15F4 = prim -0026<$[3]> (x15EF, _t15F3);
  real _t15F5 = 0.2e1;
  vec3 gf15F6 = prim *0036<$[3]> (_t15F5, xp15F4);
  vec3 n15F7 = prim normalize0137<$[3]> (gf15F6);
  tensor[3,3] _t15F8 = prim $id01B9<%3> ();
  tensor[3,3] _t15F9 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (n15F7, n15F7);
  tensor[3,3] _t15FA = prim -0026<$[3,3]> (_t15F8, _t15F9);
  return _t15FA;
}
function real#1 fStrength15FB (vec3 x15FC)
{
  real _t15FD = 0.5e0;
  real _t15FE = 0.5e0;
  real _t15FF = 0.5e0;
  vec3 _t1600 = [_t15FD, _t15FE, _t15FF];
  vec3 xp1601 = prim -0026<$[3]> (x15FC, _t1600);
  real _t1602 = 0.2e1;
  vec3 gf1603 = prim *0036<$[3]> (_t1602, xp1601);
  real _t1604 = prim |()|00B5<$[3]> (gf1603);
  return _t1604;
}
function real#1 phi1605 (real r1606)
{
  real _t1607 = 0.1e1;
  real _t1608 = prim -0026<$[]> (_t1607, r1606);
  int _t1609 = 4;
  real _t160A = prim ^0068 (_t1608, _t1609);
  return _t160A;
}
function real#1 phi'160B (real r160C)
{
  int _t160D = -4;
  real _t160E = (real)_t160D;
  real _t160F = 0.1e1;
  real _t1610 = prim -0026<$[]> (_t160F, r160C);
  int _t1611 = 3;
  real _t1612 = prim ^0068 (_t1610, _t1611);
  real _t1613 = prim *0034 (_t160E, _t1612);
  return _t1613;
}
function real#2 enr1614 (vec3 x1615)
{
  real _t1616 = prim |()|00B5<$[3]> (x1615);
  real _t1617 = prim /0055 (_t1616, rad0477);
  real _t1618 = func phi1605 (_t1617);
  return _t1618;
}
function vec3#1 frc1619 (vec3 x161A)
{
  real _t161B = prim |()|00B5<$[3]> (x161A);
  real _t161C = prim /0055 (_t161B, rad0477);
  real _t161D = func phi'160B (_t161C);
  real _t161E = 0.1e1;
  real _t161F = prim /0055 (_t161E, rad0477);
  real _t1620 = prim *0034 (_t161D, _t161F);
  vec3 _t1621 = prim *0036<$[3]> (_t1620, x161A);
  real _t1622 = prim |()|00B5<$[3]> (x161A);
  vec3 _t1623 = prim /0057<$[3]> (_t1621, _t1622);
  return _t1623;
}
globalInit {
  int _t046B = 0;
  int _t0469 = 1;
  int _t046D = extractFemItem(NumCell(Mesh), int, meshData0467);
  int _t046C = prim -0024 (_t046D, _t0469);
  int[] _t0470 = prim $range01C3 (_t046B, _t046C);
  Femdata: MeshCell[] _t0471 = {};
  foreach _t046F in _t0470 {
    Femdata: MeshCell _t0472 = loadFem(MeshCell, meshData0467, _t046F);
    _t0471 = prim @0010<Femdata: MeshCell> (_t0471, _t0472);
  }
  simplex15CB = func refcell04D1 (meshData0467);
}
strand particle (vec3 pos01624, real hh01625) in 3D {
  output vec3 pos1626;
  output vec3 _pos1627;
  real hh1628;
  vec3 step1629;
  bool found162A;
  int nfs162B;
  int test162C;
  int testp162D;
  {
    pos1626 = pos01624;
    _pos1627 = pos1626;
    hh1628 = hh01625;
    step1629 = prim $zero01BB<$[3]> ();
    found162A = false;
    nfs162B = 0;
    test162C = 1;
    testp162D = 0;
  }
  update
  {
    bool _t162E;
    bool _t162F = func insideTest15CC (pos1626);
    bool _t1630 = prim !00BC (_t162F);
    if _t1630 {
      _t162E = true;
    } else {
      real _t1631 = func fStrength15FB (pos1626);
      real _t1632 = 0.e0;
      _t162E = prim ==0084 (_t1631, _t1632);
    }
    if _t162E {
      die;
    }
    bool _t1633 = prim !00BC (found162A);
    if _t1633 {
      step1629 = func fStep15E0 (pos1626);
      pos1626 = prim +0017<$[3]> (pos1626, step1629);
      _pos1627 = pos1626;
      real _t1634 = prim |()|00B5<$[3]> (step1629);
      real _t1635 = prim /0055 (_t1634, rad0477);
      bool _t1636 = prim >0080 (_t1635, eps0478);
      if _t1636 {
        int _t1637 = 1;
        nfs162B = prim +0015 (nfs162B, _t1637);
        int _t1638 = 10;
        bool _t1639 = prim >007F (nfs162B, _t1638);
        if _t1639 {
          die;
        }
      } else {
        found162A = true;
        testp162D = 1;
      }
    } else {
      vec3 _t163A = func fStep15E0 (pos1626);
      pos1626 = prim +0017<$[3]> (pos1626, _t163A);
      _pos1627 = pos1626;
      step1629 = prim $zero01BB<$[3]> ();
      real oldE163B = 0.e0;
      vec3 force163C = prim $zero01BB<$[3]> ();
      int nn163D = 0;
      particle[] _t163E = prim sphere0198<particle> (_pos1627, rad0477);
      foreach P163F in _t163E {
        vec3 _t1640 = P163F.pos1626;
        vec3 _t1641 = prim -0026<$[3]> (_t1640, pos1626);
        real _t1642 = func enr1614 (_t1641);
        oldE163B = prim +0017<$[]> (oldE163B, _t1642);
        vec3 _t1643 = P163F.pos1626;
        vec3 _t1644 = prim -0026<$[3]> (_t1643, pos1626);
        vec3 _t1645 = func frc1619 (_t1644);
        force163C = prim +0017<$[3]> (force163C, _t1645);
        int _t1646 = 1;
        nn163D = prim +0015 (nn163D, _t1646);
      }
      int _t1647 = 0;
      bool _t1648 = prim ==0082 (_t1647, nn163D);
      if _t1648 {
        real _t1649 = 0.5e0;
        real _t164A = prim *0034 (_t1649, rad0477);
        real _t164B = 0.e0;
        real _t164C = 0.e0;
        vec3 _t164D = [_t164A, _t164B, _t164C];
        vec3 _t164E = prim +0017<$[3]> (pos1626, _t164D);
        new particle (_t164E, hh1628);
        continue;
      }
      tensor[3,3] _t164F = func fPerp15EE (pos1626);
      force163C = prim •00CE<$[3,3]; $[3]; $[3]> (_t164F, force163C);
      vec3 es1650 = prim *0036<$[3]> (hh1628, force163C);
      real _t1651 = prim |()|00B5<$[3]> (es1650);
      bool _t1652 = prim >0080 (_t1651, rad0477);
      if _t1652 {
        real _t1653 = prim |()|00B5<$[3]> (es1650);
        real _t1654 = prim /0055 (rad0477, _t1653);
        hh1628 = prim *0034 (hh1628, _t1654);
        real _t1655 = prim |()|00B5<$[3]> (es1650);
        real _t1656 = prim /0055 (rad0477, _t1655);
        es1650 = prim *0038<$[3]> (es1650, _t1656);
      }
      vec3 samplePos1657 = prim +0017<$[3]> (pos1626, es1650);
      vec3 fs1658 = func fStep15E0 (samplePos1657);
      real _t1659 = prim |()|00B5<$[3]> (fs1658);
      real _t165A = prim |()|00B5<$[3]> (es1650);
      real _t165B = prim /0055 (_t1659, _t165A);
      real _t165C = 0.5e0;
      bool _t165D = prim >0080 (_t165B, _t165C);
      if _t165D {
        real _t165E = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t165E);
        continue;
      }
      vec3 oldPos165F = pos1626;
      vec3 up1660 = prim +0017<$[3]> (fs1658, es1650);
      pos1626 = prim +0017<$[3]> (pos1626, up1660);
      _pos1627 = pos1626;
      particle[] _t1661 = prim sphere0198<particle> (_pos1627, rad0477);
      real accum1666 = 0.e0;
      foreach P1662 in _t1661 {
        vec3 _t1663 = P1662.pos1626;
        vec3 _t1664 = prim -0026<$[3]> (pos1626, _t1663);
        real _t1665 = func enr1614 (_t1664);
        accum1666 = prim +0017<$[]> (accum1666, _t1665);
      }
      real newE1667 = accum1666;
      real _t1668 = prim -0026<$[]> (newE1667, oldE163B);
      real _t1669 = 0.5e0;
      vec3 _t166A = prim -0026<$[3]> (pos1626, oldPos165F);
      vec3 _t166B = prim *0036<$[3]> (_t1669, _t166A);
      vec3 _t166C = prim unary -008B<$[3]> (force163C);
      real _t166D = prim •00CE<$[3]; $[3]; $[]> (_t166B, _t166C);
      bool _t166E = prim >0080 (_t1668, _t166D);
      if _t166E {
        pos1626 = oldPos165F;
        _pos1627 = pos1626;
        real _t166F = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t166F);
        continue;
      }
      real _t1670 = 0.11e1;
      hh1628 = prim *0034 (hh1628, _t1670);
      step1629 = up1660;
      int _t1671 = 5;
      bool _t1672 = prim <0079 (nn163D, _t1671);
      if _t1672 {
        real _t1673 = 0.5e0;
        real _t1674 = prim *0034 (_t1673, rad0477);
        vec3 _t1675 = prim normalize0137<$[3]> (es1650);
        vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
        vec3 _t1677 = prim +0017<$[3]> (pos1626, _t1676);
        new particle (_t1677, hh1628);
      }
    }
  }
}
collection {
  foreach x1678 in ipos047A {
    real _t1679 = 0.1e1;
    new particle (x1678, _t1679);
  }
}
update {
  int res167A= sum<int> { (P167D) => {
      int _t167E = P167D.test162C;
      return _t167E;
    } (P167B, P167B)
  | P167B in all };
  int num1680 = res167A;
  int res1681= sum<int> { (P1684) => {
      int _t1685 = P1684.testp162D;
      return _t1685;
    } (P1682, P1682)
  | P1682 in all };
  int numFound1687 = res1681;
  bool res1688= all { (P168B) => {
      bool _t168C = P168B.found162A;
      return _t168C;
    } (P1689, P1689)
  | P1689 in all };
  bool allFound168E = res1688;
  real res168F= max<real> { (P1693) => {
      vec3 _t1694 = P1693.step1629;
      real _t1695 = prim |()|00B5<$[3]> (_t1694);
      return _t1695;
    } (P1690, P1690)
  | P1690 in all };
  real maxStep1697 = res168F;
  real res1698= max<real> { (P16A1) => {
      vec3 _t16A2 = P16A1.pos1626;
      real _t16A3 = 0.5e0;
      real _t16A4 = 0.5e0;
      real _t16A5 = 0.5e0;
      vec3 _t16A6 = [_t16A3, _t16A4, _t16A5];
      vec3 _t16A7 = prim -0026<$[3]> (_t16A2, _t16A6);
      real _t16A8 = prim |()|00B5<$[3]> (_t16A7);
      return _t16A8;
    } (P1699, P1699)
  | P1699 in all };
  real maxDist16AA = res1698;
  real res16AB= min<real> { (P16B4) => {
      vec3 _t16B5 = P16B4.pos1626;
      real _t16B6 = 0.5e0;
      real _t16B7 = 0.5e0;
      real _t16B8 = 0.5e0;
      vec3 _t16B9 = [_t16B6, _t16B7, _t16B8];
      vec3 _t16BA = prim -0026<$[3]> (_t16B5, _t16B9);
      real _t16BB = prim |()|00B5<$[3]> (_t16BA);
      return _t16BB;
    } (P16AC, P16AC)
  | P16AC in all };
  real minDist16BD = res16AB;
  vec2 averageDist16BE = [minDist16BD, maxDist16AA];
  string _t16BF = "One run:";
  string _t16C0 = " and ";
  real _t16C1 = prim /0055 (maxStep1697, rad0477);
  string _t16C2 = " and ";
  real _t16C3 = prim /0055 (maxStep1697, rad0477);
  bool _t16C4 = prim <007A (_t16C3, eps0478);
  string _t16C5 = " and ";
  string _t16C6 = " of ";
  string _t16C7 = " and ";
  string _t16C8 = "\n";
  print (_t16BF, allFound168E, _t16C0, _t16C1, _t16C2, _t16C4, _t16C5, numFound1687, _t16C6, num1680, _t16C7, averageDist16BE, _t16C8);
  if allFound168E {
    real _t16C9 = prim /0055 (maxStep1697, rad0477);
    bool _t16CA = prim <007A (_t16C9, eps0478);
    if _t16CA {
      string _t16CB = "CONVERGED!\n";
      print (_t16CB);
      stabilize_all;
    }
  }
}
/* Program end */
/* Simplified Program (after after map-reduce-fusion) start */
properties: GlobalInit,StabilizeAll,GlobalReduce,StrandSets,GlobalUpdate,NewStrands,StrandCommunication,StrandsMayDie,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData0467;
input FemData:Space 0space0473_intermedateGlobal0474;
input FemData:FemFunc 0data0475_intermedateGlobal0476;
input real rad0477 = <default>;
input real eps0478 = <default>;
input real v00479 = <default>;
input vec3[] ipos047A;
constants {
  rad0477 = 0.1e-1;
  eps0478 = 0.1e-1;
  v00479 = 0.625e-1;
}
function bool#0 !=047B (Femdata: MeshCell cell1047C, Femdata: MeshCell cell1047D)
{
  int _t047E = extractFemItem(CellIndex(Mesh), int, cell1047C);
  int _t047F = extractFemItem(CellIndex(Mesh), int, cell1047D);
  bool _t0480 = prim !=0086 (_t047E, _t047F);
  return _t0480;
}
function bool#0 ==0481 (Femdata: MeshCell cell1047C, Femdata: MeshCell cell1047D)
{
  int _t0482 = extractFemItem(CellIndex(Mesh), int, cell1047C);
  int _t0483 = extractFemItem(CellIndex(Mesh), int, cell1047D);
  bool _t0484 = prim ==0082 (_t0482, _t0483);
  return _t0484;
}
function Femdata: MeshPos#0 findPos0485 (Femdata: Mesh mesh0486, vec3 pos0487)
{
  real _t0488 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0489 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t048A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn048B = [_t0488, _t0489, _t048A];
  newtonInt048C = 0;
  cellInt048D = extractFemItem(StartCell(Mesh), int, mesh0486);
  int _t048E = extractFemItem(NumCell(Mesh), int, mesh0486);
  int _t048F = 1;
  numCell0490 = prim -0024 (_t048E, _t048F);
  yayCells0491 = extractFemItem2(NearbyCell(File=spat.in)(Mesh), vec3, mesh0486, pos0487 : vec3);
  foreach cellItter0495 in yayCells0491 {
    real _t0492 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0493 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t0494 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    xn048B = [_t0492, _t0493, _t0494];
    cellInt048D = cellItter0495;
    field(3)[3] _t0496 = femField(mesh0486,cellInt048D,field(3)[3],Transform,);
    field(3)[3,3] _t0497 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t0496);
    field(3)[3,3] _t0498 = prim inv015E<#∞; %3> (_t0497);
    real _t0499 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t049A = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    real _t049B = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
    vec3 _t049C = [_t0499, _t049A, _t049B];
    A049D = prim @00A5<#∞; %3; $[3,3]> (_t0498, _t049C);
    int _t049E = 0;
    int _t049F = 16;
    int[] _t04A0 = prim $range01C3 (_t049E, _t049F);
    foreach newtonItter04CF in _t04A0 {
      field(3)[3] _t04A1 = femField(mesh0486,cellInt048D,field(3)[3],Transform,);
      field(3)[3] _t04A2 = prim -002E<#∞; %3; $[3]> (_t04A1, pos0487);
      field(3)[3] _t04A3 = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A049D, _t04A2);
      delta04A4 = prim @00A5<#∞; %3; $[3]> (_t04A3, xn048B);
      xn048B = prim -0026<$[3]> (xn048B, delta04A4);
      real _t04A5 = 0.1e-7;
      real _t04A6 = 0.1e-7;
      real _t04A7 = prim *0034 (_t04A5, _t04A6);
      real _t04A8 = prim •00CE<$[3]; $[3]; $[]> (delta04A4, delta04A4);
      bool _t04A9 = prim >=007E (_t04A7, _t04A8);
      if _t04A9 {
        real _t04AA = 0.1e1;
        real _t04AB = 0.1e-7;
        real _t04AC = prim +0017<$[]> (_t04AA, _t04AB);
        real _t04AD = 0.1e1;
        real _t04AE = 0.1e1;
        real _t04AF = 0.1e1;
        vec3 _t04B0 = [_t04AD, _t04AE, _t04AF];
        real _t04B1 = prim •00CE<$[3]; $[3]; $[]> (_t04B0, xn048B);
        bool _t04B2 = prim >0080 (_t04AC, _t04B1);
        real _t04B3 = 0.1e-7;
        real _t04B4 = 0.1e-7;
        real _t04B5 = 0.1e-7;
        vec3 _t04B6 = [_t04B3, _t04B4, _t04B5];
        vec3 _t04B7 = prim +0017<$[3]> (_t04B6, xn048B);
        real _t04B8 = _t04B7[0];
        real _t04B9 = -0.e0;
        bool _t04BA = prim >0080 (_t04B8, _t04B9);
        real _t04BB = 0.1e-7;
        real _t04BC = 0.1e-7;
        real _t04BD = 0.1e-7;
        vec3 _t04BE = [_t04BB, _t04BC, _t04BD];
        vec3 _t04BF = prim +0017<$[3]> (_t04BE, xn048B);
        real _t04C0 = _t04BF[1];
        real _t04C1 = -0.e0;
        bool _t04C2 = prim >0080 (_t04C0, _t04C1);
        real _t04C3 = 0.1e-7;
        real _t04C4 = 0.1e-7;
        real _t04C5 = 0.1e-7;
        vec3 _t04C6 = [_t04C3, _t04C4, _t04C5];
        vec3 _t04C7 = prim +0017<$[3]> (_t04C6, xn048B);
        real _t04C8 = _t04C7[2];
        real _t04C9 = -0.e0;
        bool _t04CA = prim >0080 (_t04C8, _t04C9);
        bool _t04CB = prim $and01C4 (_t04C2, _t04CA);
        bool _t04CC = prim $and01C4 (_t04BA, _t04CB);
        bool _t04CD = prim $and01C4 (_t04B2, _t04CC);
        if _t04CD {
          Femdata: MeshPos _t04CE = extractFemItemN((mesh0486, cellInt048D, xn048B, pos0487),AllBuild(MeshPos),);
          return _t04CE;
        }
      }
    }
  }
  Femdata: MeshPos _t04D0 = extractFemItemN((mesh0486),InvalidBuild(MeshPos),);
  return _t04D0;
}
function Femdata: RefCell#1 refcell04D1 (Femdata: Mesh arg004D2)
{
  Femdata: RefCell _t04D3 = extractFemItem(RefCell(Mesh), Femdata: RefCell, arg004D2);
  return _t04D3;
}
function Femdata: MeshCell[]#0 cells04D4 (Femdata: Mesh arg004D5)
{
  Femdata: MeshCell[] _t04D6 = extractFemItem(Cells(Mesh), Femdata: MeshCell[], arg004D5);
  return _t04D6;
}
function Femdata: MeshCell[]#0 cells04D7 (Femdata: Mesh arg004D5)
{
  int _t04D8 = 0;
  int _t04D9 = extractFemItem(NumCell(Mesh), int, arg004D5);
  int[] _t04DA = prim $range01C3 (_t04D8, _t04D9);
  Femdata: MeshCell[] accum04DD = {};
  foreach i04DB in _t04DA {
    Femdata: MeshCell _t04DC = loadFem(MeshCell, arg004D5, i04DB);
    accum04DD = prim @0010<Femdata: MeshCell> (accum04DD, _t04DC);
  }
  return accum04DD;
}
function int#0 numCell04DE (Femdata: Mesh arg004D2)
{
  int _t04DF = extractFemItem(NumCell(Mesh), int, arg004D2);
  return _t04DF;
}
function tensor[3,3,3,3]#0 mesh_t_transform_304E0 (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04E4 = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  field(3)[3,3] _t04E5 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04E4);
  field(3)[3,3,3] _t04E6 = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04E5);
  field(3)[3,3,3,3] _t04E7 = prim ∇⊗00AD<#∞; %3; $[3,3]; %3> (_t04E6);
  tensor[3,3,3,3] _t04E8 = prim @00A5<#∞; %3; $[3,3,3,3]> (_t04E7, pos04E1);
  return _t04E8;
}
function tensor[3,3,3]#0 mesh_t_transform_204E9 (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04EA = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  field(3)[3,3] _t04EB = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04EA);
  field(3)[3,3,3] _t04EC = prim ∇⊗00AD<#∞; %3; $[3]; %3> (_t04EB);
  tensor[3,3,3] _t04ED = prim @00A5<#∞; %3; $[3,3,3]> (_t04EC, pos04E1);
  return _t04ED;
}
function tensor[3,3]#0 mesh_t_transform_104EE (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04EF = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  field(3)[3,3] _t04F0 = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04EF);
  tensor[3,3] _t04F1 = prim @00A5<#∞; %3; $[3,3]> (_t04F0, pos04E1);
  return _t04F1;
}
function vec3#2 mesh_t_transform_004F2 (vec3 pos04E1, int cell04E2, Femdata: Mesh mesh04E3)
{
  field(3)[3] _t04F3 = femField(mesh04E3,cell04E2,field(3)[3],Transform,);
  vec3 _t04F4 = prim @00A5<#∞; %3; $[3]> (_t04F3, pos04E1);
  return _t04F4;
}
function Femdata: MeshPos#0 _mesh_t_newtonInverse04F5 (vec3 pos04F6, int cellInt04F7, Femdata: Mesh mesh04F8)
{
  real _t04F9 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04FA = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t04FB = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  xn04FC = [_t04F9, _t04FA, _t04FB];
  field(3)[3] _t04FD = femField(mesh04F8,cellInt04F7,field(3)[3],Transform,);
  field(3)[3,3] _t04FE = prim ∇⊗00AD<#∞; %3; $[]; %3> (_t04FD);
  field(3)[3,3] _t04FF = prim inv015E<#∞; %3> (_t04FE);
  real _t0500 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0501 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  real _t0502 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333e0;
  vec3 _t0503 = [_t0500, _t0501, _t0502];
  A0504 = prim @00A5<#∞; %3; $[3,3]> (_t04FF, _t0503);
  int _t0505 = 0;
  int _t0506 = 16;
  int[] _t0507 = prim $range01C3 (_t0505, _t0506);
  foreach itter0537 in _t0507 {
    field(3)[3] _t0508 = femField(mesh04F8,cellInt04F7,field(3)[3],Transform,);
    field(3)[3] _t0509 = prim -002E<#∞; %3; $[3]> (_t0508, pos04F6);
    field(3)[3] _t050A = prim •00D4<#∞; %3; $[3,3]; $[3]; $[3]> (A0504, _t0509);
    delta050B = prim @00A5<#∞; %3; $[3]> (_t050A, xn04FC);
    xn04FC = prim -0026<$[3]> (xn04FC, delta050B);
    real _t050C = 0.1e-7;
    real _t050D = 0.1e-7;
    real _t050E = prim *0034 (_t050C, _t050D);
    real _t050F = prim •00CE<$[3]; $[3]; $[]> (delta050B, delta050B);
    bool _t0510 = prim >=007E (_t050E, _t050F);
    if _t0510 {
      real _t0511 = 0.1e1;
      real _t0512 = 0.1e-7;
      real _t0513 = prim +0017<$[]> (_t0511, _t0512);
      real _t0514 = 0.1e1;
      real _t0515 = 0.1e1;
      real _t0516 = 0.1e1;
      vec3 _t0517 = [_t0514, _t0515, _t0516];
      real _t0518 = prim •00CE<$[3]; $[3]; $[]> (_t0517, xn04FC);
      bool _t0519 = prim >0080 (_t0513, _t0518);
      real _t051A = 0.1e-7;
      real _t051B = 0.1e-7;
      real _t051C = 0.1e-7;
      vec3 _t051D = [_t051A, _t051B, _t051C];
      vec3 _t051E = prim +0017<$[3]> (_t051D, xn04FC);
      real _t051F = _t051E[0];
      real _t0520 = -0.e0;
      bool _t0521 = prim >0080 (_t051F, _t0520);
      real _t0522 = 0.1e-7;
      real _t0523 = 0.1e-7;
      real _t0524 = 0.1e-7;
      vec3 _t0525 = [_t0522, _t0523, _t0524];
      vec3 _t0526 = prim +0017<$[3]> (_t0525, xn04FC);
      real _t0527 = _t0526[1];
      real _t0528 = -0.e0;
      bool _t0529 = prim >0080 (_t0527, _t0528);
      real _t052A = 0.1e-7;
      real _t052B = 0.1e-7;
      real _t052C = 0.1e-7;
      vec3 _t052D = [_t052A, _t052B, _t052C];
      vec3 _t052E = prim +0017<$[3]> (_t052D, xn04FC);
      real _t052F = _t052E[2];
      real _t0530 = -0.e0;
      bool _t0531 = prim >0080 (_t052F, _t0530);
      bool _t0532 = prim $and01C4 (_t0529, _t0531);
      bool _t0533 = prim $and01C4 (_t0521, _t0532);
      bool _t0534 = prim $and01C4 (_t0519, _t0533);
      if _t0534 {
        Femdata: MeshPos _t0535 = extractFemItemN((mesh04F8, cellInt04F7, xn04FC, pos04F6),AllBuild(MeshPos),);
        return _t0535;
      } else {
        Femdata: MeshPos _t0536 = extractFemItemN((mesh04F8),InvalidBuild(MeshPos),);
        return _t0536;
      }
    }
  }
  Femdata: MeshPos _t0538 = extractFemItemN((mesh04F8),InvalidBuild(MeshPos),);
  return _t0538;
}
function Femdata: MeshPos#0 _mesh_pos_mesh_t_build_world_pos0539 (Femdata: MeshPos pos053A)
{
  bool _t053B = extractFemItem(WorldTest(MeshPos), bool, pos053A);
  if _t053B {
    vec3 _t053C = extractFemItem(RefPos(MeshPos), vec3, pos053A);
    int _t053D = extractFemItem(CellIndex(MeshPos), int, pos053A);
    Femdata: Mesh _t053E = extractFem(pos053A, Mesh);
    vec3 _t053F = func mesh_t_transform_004F2 (_t053C, _t053D, _t053E);
    Femdata: MeshPos _t0540 = extractFemItemN((pos053A, _t053F),NewWorld(MeshPos),);
    return _t0540;
  } else {
    return pos053A;
  }
}
function vec3#0 worldPos0541 (Femdata: MeshPos pos053A)
{
  vec3 _t0542 = extractFemItem(RefPos(MeshPos), vec3, pos053A);
  int _t0543 = extractFemItem(CellIndex(MeshPos), int, pos053A);
  Femdata: Mesh _t0544 = extractFem(pos053A, Mesh);
  vec3 _t0545 = func mesh_t_transform_004F2 (_t0542, _t0543, _t0544);
  return _t0545;
}
function Femdata: MeshPos#0 $exitPos0546 (Femdata: Mesh mesh0547, int cellId0548, vec3 refPos0549, vec3 dPos054A, real[2] time054B)
{
  int _t054C = -1;
  real _t054D = time054B[1];
  int _t054E = prim $r2i01B7 (_t054D);
  int[2] _t0550 = func nextCell4054F (_t054E, cellId0548, mesh0547);
  int _t0551 = 0;
  int _t0552 = prim $sub01C0<int; %2> (_t0550, _t0551);
  bool _t0553 = prim !=0086 (_t054C, _t0552);
  if _t0553 {
    string _t0554 = "face ";
    real _t0555 = time054B[1];
    int _t0556 = prim $r2i01B7 (_t0555);
    string _t0557 = " to ";
    real _t0558 = time054B[1];
    int _t0559 = prim $r2i01B7 (_t0558);
    int[2] _t055A = func nextCell4054F (_t0559, cellId0548, mesh0547);
    int _t055B = 1;
    int _t055C = prim $sub01C0<int; %2> (_t055A, _t055B);
    string _t055D = "\n";
    string _t055E = "got: ";
    real _t055F = 0.1e1;
    real _t0560 = 0.e0;
    real _t0561 = 0.e0;
    real _t0562 = 0.e0;
    vec4 _t0563 = [_t055F, _t0560, _t0561, _t0562];
    real _t0564 = 0.e0;
    real _t0565 = 0.1e1;
    real _t0566 = 0.e0;
    real _t0567 = 0.e0;
    vec4 _t0568 = [_t0564, _t0565, _t0566, _t0567];
    real _t0569 = 0.e0;
    real _t056A = 0.e0;
    real _t056B = 0.1e1;
    real _t056C = 0.e0;
    vec4 _t056D = [_t0569, _t056A, _t056B, _t056C];
    real _t056E = 0.971445146547e-16;
    real _t056F = 0.e0;
    real _t0570 = 0.e0;
    real _t0571 = 0.1e1;
    vec4 _t0572 = [_t056E, _t056F, _t0570, _t0571];
    tensor[4,4] _t0573 = [_t0563, _t0568, _t056D, _t0572];
    real _t0574 = 0.57735026919e0;
    real _t0575 = 0.57735026919e0;
    real _t0576 = 0.57735026919e0;
    real _t0577 = -0.57735026919e0;
    vec4 _t0578 = [_t0574, _t0575, _t0576, _t0577];
    real _t0579 = -0.333333333333e0;
    real _t057A = 0.666666666667e0;
    real _t057B = -0.333333333333e0;
    real _t057C = 0.333333333333e0;
    vec4 _t057D = [_t0579, _t057A, _t057B, _t057C];
    real _t057E = -0.333333333333e0;
    real _t057F = -0.333333333333e0;
    real _t0580 = 0.666666666667e0;
    real _t0581 = 0.333333333333e0;
    vec4 _t0582 = [_t057E, _t057F, _t0580, _t0581];
    real _t0583 = 0.971445146547e-16;
    real _t0584 = 0.e0;
    real _t0585 = 0.e0;
    real _t0586 = 0.1e1;
    vec4 _t0587 = [_t0583, _t0584, _t0585, _t0586];
    tensor[4,4] _t0588 = [_t0578, _t057D, _t0582, _t0587];
    real _t0589 = -0.333333333333e0;
    real _t058A = 0.666666666667e0;
    real _t058B = -0.333333333333e0;
    real _t058C = 0.333333333333e0;
    vec4 _t058D = [_t0589, _t058A, _t058B, _t058C];
    real _t058E = -0.57735026919e0;
    real _t058F = -0.57735026919e0;
    real _t0590 = -0.57735026919e0;
    real _t0591 = 0.57735026919e0;
    vec4 _t0592 = [_t058E, _t058F, _t0590, _t0591];
    real _t0593 = -0.333333333333e0;
    real _t0594 = -0.333333333333e0;
    real _t0595 = 0.666666666667e0;
    real _t0596 = 0.333333333333e0;
    vec4 _t0597 = [_t0593, _t0594, _t0595, _t0596];
    real _t0598 = 0.971445146547e-16;
    real _t0599 = 0.e0;
    real _t059A = 0.e0;
    real _t059B = 0.1e1;
    vec4 _t059C = [_t0598, _t0599, _t059A, _t059B];
    tensor[4,4] _t059D = [_t058D, _t0592, _t0597, _t059C];
    real _t059E = -0.333333333333e0;
    real _t059F = 0.666666666667e0;
    real _t05A0 = -0.333333333333e0;
    real _t05A1 = 0.333333333333e0;
    vec4 _t05A2 = [_t059E, _t059F, _t05A0, _t05A1];
    real _t05A3 = -0.333333333333e0;
    real _t05A4 = -0.333333333333e0;
    real _t05A5 = 0.666666666667e0;
    real _t05A6 = 0.333333333333e0;
    vec4 _t05A7 = [_t05A3, _t05A4, _t05A5, _t05A6];
    real _t05A8 = 0.57735026919e0;
    real _t05A9 = 0.57735026919e0;
    real _t05AA = 0.57735026919e0;
    real _t05AB = -0.57735026919e0;
    vec4 _t05AC = [_t05A8, _t05A9, _t05AA, _t05AB];
    real _t05AD = 0.971445146547e-16;
    real _t05AE = 0.e0;
    real _t05AF = 0.e0;
    real _t05B0 = 0.1e1;
    vec4 _t05B1 = [_t05AD, _t05AE, _t05AF, _t05B0];
    tensor[4,4] _t05B2 = [_t05A2, _t05A7, _t05AC, _t05B1];
    tensor[4,4][4] _t05B3 = {_t0573, _t0588, _t059D, _t05B2};
    real _t05B4 = 0.57735026919e0;
    real _t05B5 = -0.1e1;
    real _t05B6 = -0.1e1;
    real _t05B7 = 0.1e1;
    vec4 _t05B8 = [_t05B4, _t05B5, _t05B6, _t05B7];
    real _t05B9 = 0.57735026919e0;
    real _t05BA = 0.1e1;
    real _t05BB = 0.e0;
    real _t05BC = 0.e0;
    vec4 _t05BD = [_t05B9, _t05BA, _t05BB, _t05BC];
    real _t05BE = 0.57735026919e0;
    real _t05BF = 0.e0;
    real _t05C0 = 0.1e1;
    real _t05C1 = 0.e0;
    vec4 _t05C2 = [_t05BE, _t05BF, _t05C0, _t05C1];
    real _t05C3 = 0.e0;
    real _t05C4 = 0.e0;
    real _t05C5 = 0.e0;
    real _t05C6 = 0.1e1;
    vec4 _t05C7 = [_t05C3, _t05C4, _t05C5, _t05C6];
    tensor[4,4] _t05C8 = [_t05B8, _t05BD, _t05C2, _t05C7];
    real _t05C9 = 0.1e1;
    real _t05CA = 0.e0;
    real _t05CB = 0.e0;
    real _t05CC = 0.e0;
    vec4 _t05CD = [_t05C9, _t05CA, _t05CB, _t05CC];
    real _t05CE = 0.e0;
    real _t05CF = 0.1e1;
    real _t05D0 = 0.e0;
    real _t05D1 = 0.e0;
    vec4 _t05D2 = [_t05CE, _t05CF, _t05D0, _t05D1];
    real _t05D3 = 0.e0;
    real _t05D4 = 0.e0;
    real _t05D5 = 0.1e1;
    real _t05D6 = 0.e0;
    vec4 _t05D7 = [_t05D3, _t05D4, _t05D5, _t05D6];
    real _t05D8 = 0.e0;
    real _t05D9 = 0.e0;
    real _t05DA = 0.e0;
    real _t05DB = 0.1e1;
    vec4 _t05DC = [_t05D8, _t05D9, _t05DA, _t05DB];
    tensor[4,4] _t05DD = [_t05CD, _t05D2, _t05D7, _t05DC];
    real _t05DE = 0.e0;
    real _t05DF = 0.1e1;
    real _t05E0 = 0.e0;
    real _t05E1 = 0.e0;
    vec4 _t05E2 = [_t05DE, _t05DF, _t05E0, _t05E1];
    real _t05E3 = -0.1e1;
    real _t05E4 = 0.e0;
    real _t05E5 = 0.e0;
    real _t05E6 = 0.e0;
    vec4 _t05E7 = [_t05E3, _t05E4, _t05E5, _t05E6];
    real _t05E8 = 0.e0;
    real _t05E9 = 0.e0;
    real _t05EA = 0.1e1;
    real _t05EB = 0.e0;
    vec4 _t05EC = [_t05E8, _t05E9, _t05EA, _t05EB];
    real _t05ED = 0.e0;
    real _t05EE = 0.e0;
    real _t05EF = 0.e0;
    real _t05F0 = 0.1e1;
    vec4 _t05F1 = [_t05ED, _t05EE, _t05EF, _t05F0];
    tensor[4,4] _t05F2 = [_t05E2, _t05E7, _t05EC, _t05F1];
    real _t05F3 = 0.e0;
    real _t05F4 = 0.1e1;
    real _t05F5 = 0.e0;
    real _t05F6 = 0.e0;
    vec4 _t05F7 = [_t05F3, _t05F4, _t05F5, _t05F6];
    real _t05F8 = 0.e0;
    real _t05F9 = 0.e0;
    real _t05FA = 0.1e1;
    real _t05FB = 0.e0;
    vec4 _t05FC = [_t05F8, _t05F9, _t05FA, _t05FB];
    real _t05FD = 0.1e1;
    real _t05FE = 0.e0;
    real _t05FF = 0.e0;
    real _t0600 = 0.e0;
    vec4 _t0601 = [_t05FD, _t05FE, _t05FF, _t0600];
    real _t0602 = 0.e0;
    real _t0603 = 0.e0;
    real _t0604 = 0.e0;
    real _t0605 = 0.1e1;
    vec4 _t0606 = [_t0602, _t0603, _t0604, _t0605];
    tensor[4,4] _t0607 = [_t05F7, _t05FC, _t0601, _t0606];
    tensor[4,4][4] _t0608 = {_t05C8, _t05DD, _t05F2, _t0607};
    real _t0609 = -0.1e1;
    real _t060A = -0.57735026919e0;
    real _t060B = -0.1e1;
    real _t060C = 0.1e1;
    vec4 _t060D = [_t0609, _t060A, _t060B, _t060C];
    real _t060E = 0.1e1;
    real _t060F = -0.57735026919e0;
    real _t0610 = 0.e0;
    real _t0611 = 0.e0;
    vec4 _t0612 = [_t060E, _t060F, _t0610, _t0611];
    real _t0613 = 0.e0;
    real _t0614 = -0.57735026919e0;
    real _t0615 = 0.1e1;
    real _t0616 = 0.e0;
    vec4 _t0617 = [_t0613, _t0614, _t0615, _t0616];
    real _t0618 = 0.e0;
    real _t0619 = 0.e0;
    real _t061A = 0.e0;
    real _t061B = 0.1e1;
    vec4 _t061C = [_t0618, _t0619, _t061A, _t061B];
    tensor[4,4] _t061D = [_t060D, _t0612, _t0617, _t061C];
    real _t061E = 0.e0;
    real _t061F = -0.1e1;
    real _t0620 = 0.e0;
    real _t0621 = 0.e0;
    vec4 _t0622 = [_t061E, _t061F, _t0620, _t0621];
    real _t0623 = 0.1e1;
    real _t0624 = 0.e0;
    real _t0625 = 0.e0;
    real _t0626 = 0.e0;
    vec4 _t0627 = [_t0623, _t0624, _t0625, _t0626];
    real _t0628 = 0.e0;
    real _t0629 = 0.e0;
    real _t062A = 0.1e1;
    real _t062B = 0.e0;
    vec4 _t062C = [_t0628, _t0629, _t062A, _t062B];
    real _t062D = 0.e0;
    real _t062E = 0.e0;
    real _t062F = 0.e0;
    real _t0630 = 0.1e1;
    vec4 _t0631 = [_t062D, _t062E, _t062F, _t0630];
    tensor[4,4] _t0632 = [_t0622, _t0627, _t062C, _t0631];
    real _t0633 = 0.1e1;
    real _t0634 = 0.e0;
    real _t0635 = 0.e0;
    real _t0636 = 0.e0;
    vec4 _t0637 = [_t0633, _t0634, _t0635, _t0636];
    real _t0638 = 0.e0;
    real _t0639 = 0.1e1;
    real _t063A = 0.e0;
    real _t063B = 0.e0;
    vec4 _t063C = [_t0638, _t0639, _t063A, _t063B];
    real _t063D = 0.e0;
    real _t063E = 0.e0;
    real _t063F = 0.1e1;
    real _t0640 = 0.e0;
    vec4 _t0641 = [_t063D, _t063E, _t063F, _t0640];
    real _t0642 = 0.e0;
    real _t0643 = 0.e0;
    real _t0644 = 0.e0;
    real _t0645 = 0.1e1;
    vec4 _t0646 = [_t0642, _t0643, _t0644, _t0645];
    tensor[4,4] _t0647 = [_t0637, _t063C, _t0641, _t0646];
    real _t0648 = 0.1e1;
    real _t0649 = 0.e0;
    real _t064A = 0.e0;
    real _t064B = 0.e0;
    vec4 _t064C = [_t0648, _t0649, _t064A, _t064B];
    real _t064D = 0.e0;
    real _t064E = 0.e0;
    real _t064F = 0.1e1;
    real _t0650 = 0.e0;
    vec4 _t0651 = [_t064D, _t064E, _t064F, _t0650];
    real _t0652 = 0.e0;
    real _t0653 = -0.1e1;
    real _t0654 = 0.e0;
    real _t0655 = 0.e0;
    vec4 _t0656 = [_t0652, _t0653, _t0654, _t0655];
    real _t0657 = 0.e0;
    real _t0658 = 0.e0;
    real _t0659 = 0.e0;
    real _t065A = 0.1e1;
    vec4 _t065B = [_t0657, _t0658, _t0659, _t065A];
    tensor[4,4] _t065C = [_t064C, _t0651, _t0656, _t065B];
    tensor[4,4][4] _t065D = {_t061D, _t0632, _t0647, _t065C};
    real _t065E = -0.1e1;
    real _t065F = -0.1e1;
    real _t0660 = 0.57735026919e0;
    real _t0661 = 0.1e1;
    vec4 _t0662 = [_t065E, _t065F, _t0660, _t0661];
    real _t0663 = 0.1e1;
    real _t0664 = 0.e0;
    real _t0665 = 0.57735026919e0;
    real _t0666 = 0.e0;
    vec4 _t0667 = [_t0663, _t0664, _t0665, _t0666];
    real _t0668 = 0.e0;
    real _t0669 = 0.1e1;
    real _t066A = 0.57735026919e0;
    real _t066B = 0.e0;
    vec4 _t066C = [_t0668, _t0669, _t066A, _t066B];
    real _t066D = 0.e0;
    real _t066E = 0.e0;
    real _t066F = 0.e0;
    real _t0670 = 0.1e1;
    vec4 _t0671 = [_t066D, _t066E, _t066F, _t0670];
    tensor[4,4] _t0672 = [_t0662, _t0667, _t066C, _t0671];
    real _t0673 = 0.e0;
    real _t0674 = 0.e0;
    real _t0675 = 0.1e1;
    real _t0676 = 0.e0;
    vec4 _t0677 = [_t0673, _t0674, _t0675, _t0676];
    real _t0678 = 0.1e1;
    real _t0679 = 0.e0;
    real _t067A = 0.e0;
    real _t067B = 0.e0;
    vec4 _t067C = [_t0678, _t0679, _t067A, _t067B];
    real _t067D = 0.e0;
    real _t067E = 0.1e1;
    real _t067F = 0.e0;
    real _t0680 = 0.e0;
    vec4 _t0681 = [_t067D, _t067E, _t067F, _t0680];
    real _t0682 = 0.e0;
    real _t0683 = 0.e0;
    real _t0684 = 0.e0;
    real _t0685 = 0.1e1;
    vec4 _t0686 = [_t0682, _t0683, _t0684, _t0685];
    tensor[4,4] _t0687 = [_t0677, _t067C, _t0681, _t0686];
    real _t0688 = 0.1e1;
    real _t0689 = 0.e0;
    real _t068A = 0.e0;
    real _t068B = 0.e0;
    vec4 _t068C = [_t0688, _t0689, _t068A, _t068B];
    real _t068D = 0.e0;
    real _t068E = 0.e0;
    real _t068F = -0.1e1;
    real _t0690 = 0.e0;
    vec4 _t0691 = [_t068D, _t068E, _t068F, _t0690];
    real _t0692 = 0.e0;
    real _t0693 = 0.1e1;
    real _t0694 = 0.e0;
    real _t0695 = 0.e0;
    vec4 _t0696 = [_t0692, _t0693, _t0694, _t0695];
    real _t0697 = 0.e0;
    real _t0698 = 0.e0;
    real _t0699 = 0.e0;
    real _t069A = 0.1e1;
    vec4 _t069B = [_t0697, _t0698, _t0699, _t069A];
    tensor[4,4] _t069C = [_t068C, _t0691, _t0696, _t069B];
    real _t069D = 0.1e1;
    real _t069E = 0.e0;
    real _t069F = 0.e0;
    real _t06A0 = 0.e0;
    vec4 _t06A1 = [_t069D, _t069E, _t069F, _t06A0];
    real _t06A2 = 0.e0;
    real _t06A3 = 0.1e1;
    real _t06A4 = 0.e0;
    real _t06A5 = 0.e0;
    vec4 _t06A6 = [_t06A2, _t06A3, _t06A4, _t06A5];
    real _t06A7 = 0.e0;
    real _t06A8 = 0.e0;
    real _t06A9 = 0.1e1;
    real _t06AA = 0.e0;
    vec4 _t06AB = [_t06A7, _t06A8, _t06A9, _t06AA];
    real _t06AC = 0.e0;
    real _t06AD = 0.e0;
    real _t06AE = 0.e0;
    real _t06AF = 0.1e1;
    vec4 _t06B0 = [_t06AC, _t06AD, _t06AE, _t06AF];
    tensor[4,4] _t06B1 = [_t06A1, _t06A6, _t06AB, _t06B0];
    tensor[4,4][4] _t06B2 = {_t0672, _t0687, _t069C, _t06B1};
    tensor[4,4][4][4] _t06B3 = {_t05B3, _t0608, _t065D, _t06B2};
    real _t06B4 = time054B[1];
    int _t06B5 = prim $r2i01B7 (_t06B4);
    tensor[4,4][4] _t06B6 = prim $sub01C0<tensor[4,4][4]; %4> (_t06B3, _t06B5);
    real _t06B7 = time054B[1];
    int _t06B8 = prim $r2i01B7 (_t06B7);
    int[2] _t06B9 = func nextCell4054F (_t06B8, cellId0548, mesh0547);
    int _t06BA = 1;
    int _t06BB = prim $sub01C0<int; %2> (_t06B9, _t06BA);
    tensor[4,4] _t06BC = prim $sub01C0<tensor[4,4]; %4> (_t06B6, _t06BB);
    string _t06BD = "\n";
    print (_t0554, _t0556, _t0557, _t055C, _t055D, _t055E, _t06BC, _t06BD);
    real _t06BE = time054B[1];
    int _t06BF = prim $r2i01B7 (_t06BE);
    int[2] _t06C0 = func nextCell4054F (_t06BF, cellId0548, mesh0547);
    int _t06C1 = 0;
    int _t06C2 = prim $sub01C0<int; %2> (_t06C0, _t06C1);
    real _t06C3 = 0.1e1;
    real _t06C4 = 0.e0;
    real _t06C5 = 0.e0;
    real _t06C6 = 0.e0;
    vec4 _t06C7 = [_t06C3, _t06C4, _t06C5, _t06C6];
    real _t06C8 = 0.e0;
    real _t06C9 = 0.1e1;
    real _t06CA = 0.e0;
    real _t06CB = 0.e0;
    vec4 _t06CC = [_t06C8, _t06C9, _t06CA, _t06CB];
    real _t06CD = 0.e0;
    real _t06CE = 0.e0;
    real _t06CF = 0.1e1;
    real _t06D0 = 0.e0;
    vec4 _t06D1 = [_t06CD, _t06CE, _t06CF, _t06D0];
    real _t06D2 = 0.971445146547e-16;
    real _t06D3 = 0.e0;
    real _t06D4 = 0.e0;
    real _t06D5 = 0.1e1;
    vec4 _t06D6 = [_t06D2, _t06D3, _t06D4, _t06D5];
    tensor[4,4] _t06D7 = [_t06C7, _t06CC, _t06D1, _t06D6];
    real _t06D8 = 0.57735026919e0;
    real _t06D9 = 0.57735026919e0;
    real _t06DA = 0.57735026919e0;
    real _t06DB = -0.57735026919e0;
    vec4 _t06DC = [_t06D8, _t06D9, _t06DA, _t06DB];
    real _t06DD = -0.333333333333e0;
    real _t06DE = 0.666666666667e0;
    real _t06DF = -0.333333333333e0;
    real _t06E0 = 0.333333333333e0;
    vec4 _t06E1 = [_t06DD, _t06DE, _t06DF, _t06E0];
    real _t06E2 = -0.333333333333e0;
    real _t06E3 = -0.333333333333e0;
    real _t06E4 = 0.666666666667e0;
    real _t06E5 = 0.333333333333e0;
    vec4 _t06E6 = [_t06E2, _t06E3, _t06E4, _t06E5];
    real _t06E7 = 0.971445146547e-16;
    real _t06E8 = 0.e0;
    real _t06E9 = 0.e0;
    real _t06EA = 0.1e1;
    vec4 _t06EB = [_t06E7, _t06E8, _t06E9, _t06EA];
    tensor[4,4] _t06EC = [_t06DC, _t06E1, _t06E6, _t06EB];
    real _t06ED = -0.333333333333e0;
    real _t06EE = 0.666666666667e0;
    real _t06EF = -0.333333333333e0;
    real _t06F0 = 0.333333333333e0;
    vec4 _t06F1 = [_t06ED, _t06EE, _t06EF, _t06F0];
    real _t06F2 = -0.57735026919e0;
    real _t06F3 = -0.57735026919e0;
    real _t06F4 = -0.57735026919e0;
    real _t06F5 = 0.57735026919e0;
    vec4 _t06F6 = [_t06F2, _t06F3, _t06F4, _t06F5];
    real _t06F7 = -0.333333333333e0;
    real _t06F8 = -0.333333333333e0;
    real _t06F9 = 0.666666666667e0;
    real _t06FA = 0.333333333333e0;
    vec4 _t06FB = [_t06F7, _t06F8, _t06F9, _t06FA];
    real _t06FC = 0.971445146547e-16;
    real _t06FD = 0.e0;
    real _t06FE = 0.e0;
    real _t06FF = 0.1e1;
    vec4 _t0700 = [_t06FC, _t06FD, _t06FE, _t06FF];
    tensor[4,4] _t0701 = [_t06F1, _t06F6, _t06FB, _t0700];
    real _t0702 = -0.333333333333e0;
    real _t0703 = 0.666666666667e0;
    real _t0704 = -0.333333333333e0;
    real _t0705 = 0.333333333333e0;
    vec4 _t0706 = [_t0702, _t0703, _t0704, _t0705];
    real _t0707 = -0.333333333333e0;
    real _t0708 = -0.333333333333e0;
    real _t0709 = 0.666666666667e0;
    real _t070A = 0.333333333333e0;
    vec4 _t070B = [_t0707, _t0708, _t0709, _t070A];
    real _t070C = 0.57735026919e0;
    real _t070D = 0.57735026919e0;
    real _t070E = 0.57735026919e0;
    real _t070F = -0.57735026919e0;
    vec4 _t0710 = [_t070C, _t070D, _t070E, _t070F];
    real _t0711 = 0.971445146547e-16;
    real _t0712 = 0.e0;
    real _t0713 = 0.e0;
    real _t0714 = 0.1e1;
    vec4 _t0715 = [_t0711, _t0712, _t0713, _t0714];
    tensor[4,4] _t0716 = [_t0706, _t070B, _t0710, _t0715];
    tensor[4,4][4] _t0717 = {_t06D7, _t06EC, _t0701, _t0716};
    real _t0718 = 0.57735026919e0;
    real _t0719 = -0.1e1;
    real _t071A = -0.1e1;
    real _t071B = 0.1e1;
    vec4 _t071C = [_t0718, _t0719, _t071A, _t071B];
    real _t071D = 0.57735026919e0;
    real _t071E = 0.1e1;
    real _t071F = 0.e0;
    real _t0720 = 0.e0;
    vec4 _t0721 = [_t071D, _t071E, _t071F, _t0720];
    real _t0722 = 0.57735026919e0;
    real _t0723 = 0.e0;
    real _t0724 = 0.1e1;
    real _t0725 = 0.e0;
    vec4 _t0726 = [_t0722, _t0723, _t0724, _t0725];
    real _t0727 = 0.e0;
    real _t0728 = 0.e0;
    real _t0729 = 0.e0;
    real _t072A = 0.1e1;
    vec4 _t072B = [_t0727, _t0728, _t0729, _t072A];
    tensor[4,4] _t072C = [_t071C, _t0721, _t0726, _t072B];
    real _t072D = 0.1e1;
    real _t072E = 0.e0;
    real _t072F = 0.e0;
    real _t0730 = 0.e0;
    vec4 _t0731 = [_t072D, _t072E, _t072F, _t0730];
    real _t0732 = 0.e0;
    real _t0733 = 0.1e1;
    real _t0734 = 0.e0;
    real _t0735 = 0.e0;
    vec4 _t0736 = [_t0732, _t0733, _t0734, _t0735];
    real _t0737 = 0.e0;
    real _t0738 = 0.e0;
    real _t0739 = 0.1e1;
    real _t073A = 0.e0;
    vec4 _t073B = [_t0737, _t0738, _t0739, _t073A];
    real _t073C = 0.e0;
    real _t073D = 0.e0;
    real _t073E = 0.e0;
    real _t073F = 0.1e1;
    vec4 _t0740 = [_t073C, _t073D, _t073E, _t073F];
    tensor[4,4] _t0741 = [_t0731, _t0736, _t073B, _t0740];
    real _t0742 = 0.e0;
    real _t0743 = 0.1e1;
    real _t0744 = 0.e0;
    real _t0745 = 0.e0;
    vec4 _t0746 = [_t0742, _t0743, _t0744, _t0745];
    real _t0747 = -0.1e1;
    real _t0748 = 0.e0;
    real _t0749 = 0.e0;
    real _t074A = 0.e0;
    vec4 _t074B = [_t0747, _t0748, _t0749, _t074A];
    real _t074C = 0.e0;
    real _t074D = 0.e0;
    real _t074E = 0.1e1;
    real _t074F = 0.e0;
    vec4 _t0750 = [_t074C, _t074D, _t074E, _t074F];
    real _t0751 = 0.e0;
    real _t0752 = 0.e0;
    real _t0753 = 0.e0;
    real _t0754 = 0.1e1;
    vec4 _t0755 = [_t0751, _t0752, _t0753, _t0754];
    tensor[4,4] _t0756 = [_t0746, _t074B, _t0750, _t0755];
    real _t0757 = 0.e0;
    real _t0758 = 0.1e1;
    real _t0759 = 0.e0;
    real _t075A = 0.e0;
    vec4 _t075B = [_t0757, _t0758, _t0759, _t075A];
    real _t075C = 0.e0;
    real _t075D = 0.e0;
    real _t075E = 0.1e1;
    real _t075F = 0.e0;
    vec4 _t0760 = [_t075C, _t075D, _t075E, _t075F];
    real _t0761 = 0.1e1;
    real _t0762 = 0.e0;
    real _t0763 = 0.e0;
    real _t0764 = 0.e0;
    vec4 _t0765 = [_t0761, _t0762, _t0763, _t0764];
    real _t0766 = 0.e0;
    real _t0767 = 0.e0;
    real _t0768 = 0.e0;
    real _t0769 = 0.1e1;
    vec4 _t076A = [_t0766, _t0767, _t0768, _t0769];
    tensor[4,4] _t076B = [_t075B, _t0760, _t0765, _t076A];
    tensor[4,4][4] _t076C = {_t072C, _t0741, _t0756, _t076B};
    real _t076D = -0.1e1;
    real _t076E = -0.57735026919e0;
    real _t076F = -0.1e1;
    real _t0770 = 0.1e1;
    vec4 _t0771 = [_t076D, _t076E, _t076F, _t0770];
    real _t0772 = 0.1e1;
    real _t0773 = -0.57735026919e0;
    real _t0774 = 0.e0;
    real _t0775 = 0.e0;
    vec4 _t0776 = [_t0772, _t0773, _t0774, _t0775];
    real _t0777 = 0.e0;
    real _t0778 = -0.57735026919e0;
    real _t0779 = 0.1e1;
    real _t077A = 0.e0;
    vec4 _t077B = [_t0777, _t0778, _t0779, _t077A];
    real _t077C = 0.e0;
    real _t077D = 0.e0;
    real _t077E = 0.e0;
    real _t077F = 0.1e1;
    vec4 _t0780 = [_t077C, _t077D, _t077E, _t077F];
    tensor[4,4] _t0781 = [_t0771, _t0776, _t077B, _t0780];
    real _t0782 = 0.e0;
    real _t0783 = -0.1e1;
    real _t0784 = 0.e0;
    real _t0785 = 0.e0;
    vec4 _t0786 = [_t0782, _t0783, _t0784, _t0785];
    real _t0787 = 0.1e1;
    real _t0788 = 0.e0;
    real _t0789 = 0.e0;
    real _t078A = 0.e0;
    vec4 _t078B = [_t0787, _t0788, _t0789, _t078A];
    real _t078C = 0.e0;
    real _t078D = 0.e0;
    real _t078E = 0.1e1;
    real _t078F = 0.e0;
    vec4 _t0790 = [_t078C, _t078D, _t078E, _t078F];
    real _t0791 = 0.e0;
    real _t0792 = 0.e0;
    real _t0793 = 0.e0;
    real _t0794 = 0.1e1;
    vec4 _t0795 = [_t0791, _t0792, _t0793, _t0794];
    tensor[4,4] _t0796 = [_t0786, _t078B, _t0790, _t0795];
    real _t0797 = 0.1e1;
    real _t0798 = 0.e0;
    real _t0799 = 0.e0;
    real _t079A = 0.e0;
    vec4 _t079B = [_t0797, _t0798, _t0799, _t079A];
    real _t079C = 0.e0;
    real _t079D = 0.1e1;
    real _t079E = 0.e0;
    real _t079F = 0.e0;
    vec4 _t07A0 = [_t079C, _t079D, _t079E, _t079F];
    real _t07A1 = 0.e0;
    real _t07A2 = 0.e0;
    real _t07A3 = 0.1e1;
    real _t07A4 = 0.e0;
    vec4 _t07A5 = [_t07A1, _t07A2, _t07A3, _t07A4];
    real _t07A6 = 0.e0;
    real _t07A7 = 0.e0;
    real _t07A8 = 0.e0;
    real _t07A9 = 0.1e1;
    vec4 _t07AA = [_t07A6, _t07A7, _t07A8, _t07A9];
    tensor[4,4] _t07AB = [_t079B, _t07A0, _t07A5, _t07AA];
    real _t07AC = 0.1e1;
    real _t07AD = 0.e0;
    real _t07AE = 0.e0;
    real _t07AF = 0.e0;
    vec4 _t07B0 = [_t07AC, _t07AD, _t07AE, _t07AF];
    real _t07B1 = 0.e0;
    real _t07B2 = 0.e0;
    real _t07B3 = 0.1e1;
    real _t07B4 = 0.e0;
    vec4 _t07B5 = [_t07B1, _t07B2, _t07B3, _t07B4];
    real _t07B6 = 0.e0;
    real _t07B7 = -0.1e1;
    real _t07B8 = 0.e0;
    real _t07B9 = 0.e0;
    vec4 _t07BA = [_t07B6, _t07B7, _t07B8, _t07B9];
    real _t07BB = 0.e0;
    real _t07BC = 0.e0;
    real _t07BD = 0.e0;
    real _t07BE = 0.1e1;
    vec4 _t07BF = [_t07BB, _t07BC, _t07BD, _t07BE];
    tensor[4,4] _t07C0 = [_t07B0, _t07B5, _t07BA, _t07BF];
    tensor[4,4][4] _t07C1 = {_t0781, _t0796, _t07AB, _t07C0};
    real _t07C2 = -0.1e1;
    real _t07C3 = -0.1e1;
    real _t07C4 = 0.57735026919e0;
    real _t07C5 = 0.1e1;
    vec4 _t07C6 = [_t07C2, _t07C3, _t07C4, _t07C5];
    real _t07C7 = 0.1e1;
    real _t07C8 = 0.e0;
    real _t07C9 = 0.57735026919e0;
    real _t07CA = 0.e0;
    vec4 _t07CB = [_t07C7, _t07C8, _t07C9, _t07CA];
    real _t07CC = 0.e0;
    real _t07CD = 0.1e1;
    real _t07CE = 0.57735026919e0;
    real _t07CF = 0.e0;
    vec4 _t07D0 = [_t07CC, _t07CD, _t07CE, _t07CF];
    real _t07D1 = 0.e0;
    real _t07D2 = 0.e0;
    real _t07D3 = 0.e0;
    real _t07D4 = 0.1e1;
    vec4 _t07D5 = [_t07D1, _t07D2, _t07D3, _t07D4];
    tensor[4,4] _t07D6 = [_t07C6, _t07CB, _t07D0, _t07D5];
    real _t07D7 = 0.e0;
    real _t07D8 = 0.e0;
    real _t07D9 = 0.1e1;
    real _t07DA = 0.e0;
    vec4 _t07DB = [_t07D7, _t07D8, _t07D9, _t07DA];
    real _t07DC = 0.1e1;
    real _t07DD = 0.e0;
    real _t07DE = 0.e0;
    real _t07DF = 0.e0;
    vec4 _t07E0 = [_t07DC, _t07DD, _t07DE, _t07DF];
    real _t07E1 = 0.e0;
    real _t07E2 = 0.1e1;
    real _t07E3 = 0.e0;
    real _t07E4 = 0.e0;
    vec4 _t07E5 = [_t07E1, _t07E2, _t07E3, _t07E4];
    real _t07E6 = 0.e0;
    real _t07E7 = 0.e0;
    real _t07E8 = 0.e0;
    real _t07E9 = 0.1e1;
    vec4 _t07EA = [_t07E6, _t07E7, _t07E8, _t07E9];
    tensor[4,4] _t07EB = [_t07DB, _t07E0, _t07E5, _t07EA];
    real _t07EC = 0.1e1;
    real _t07ED = 0.e0;
    real _t07EE = 0.e0;
    real _t07EF = 0.e0;
    vec4 _t07F0 = [_t07EC, _t07ED, _t07EE, _t07EF];
    real _t07F1 = 0.e0;
    real _t07F2 = 0.e0;
    real _t07F3 = -0.1e1;
    real _t07F4 = 0.e0;
    vec4 _t07F5 = [_t07F1, _t07F2, _t07F3, _t07F4];
    real _t07F6 = 0.e0;
    real _t07F7 = 0.1e1;
    real _t07F8 = 0.e0;
    real _t07F9 = 0.e0;
    vec4 _t07FA = [_t07F6, _t07F7, _t07F8, _t07F9];
    real _t07FB = 0.e0;
    real _t07FC = 0.e0;
    real _t07FD = 0.e0;
    real _t07FE = 0.1e1;
    vec4 _t07FF = [_t07FB, _t07FC, _t07FD, _t07FE];
    tensor[4,4] _t0800 = [_t07F0, _t07F5, _t07FA, _t07FF];
    real _t0801 = 0.1e1;
    real _t0802 = 0.e0;
    real _t0803 = 0.e0;
    real _t0804 = 0.e0;
    vec4 _t0805 = [_t0801, _t0802, _t0803, _t0804];
    real _t0806 = 0.e0;
    real _t0807 = 0.1e1;
    real _t0808 = 0.e0;
    real _t0809 = 0.e0;
    vec4 _t080A = [_t0806, _t0807, _t0808, _t0809];
    real _t080B = 0.e0;
    real _t080C = 0.e0;
    real _t080D = 0.1e1;
    real _t080E = 0.e0;
    vec4 _t080F = [_t080B, _t080C, _t080D, _t080E];
    real _t0810 = 0.e0;
    real _t0811 = 0.e0;
    real _t0812 = 0.e0;
    real _t0813 = 0.1e1;
    vec4 _t0814 = [_t0810, _t0811, _t0812, _t0813];
    tensor[4,4] _t0815 = [_t0805, _t080A, _t080F, _t0814];
    tensor[4,4][4] _t0816 = {_t07D6, _t07EB, _t0800, _t0815};
    tensor[4,4][4][4] _t0817 = {_t0717, _t076C, _t07C1, _t0816};
    real _t0818 = time054B[1];
    int _t0819 = prim $r2i01B7 (_t0818);
    tensor[4,4][4] _t081A = prim $sub01C0<tensor[4,4][4]; %4> (_t0817, _t0819);
    real _t081B = time054B[1];
    int _t081C = prim $r2i01B7 (_t081B);
    int[2] _t081D = func nextCell4054F (_t081C, cellId0548, mesh0547);
    int _t081E = 1;
    int _t081F = prim $sub01C0<int; %2> (_t081D, _t081E);
    tensor[4,4] _t0820 = prim $sub01C0<tensor[4,4]; %4> (_t081A, _t081F);
    real _t0821 = time054B[0];
    vec3 _t0822 = prim *0036<$[3]> (_t0821, dPos054A);
    vec3 _t0823 = prim +0017<$[3]> (_t0822, refPos0549);
    real _t0824 = _t0823[0];
    real _t0825 = time054B[0];
    vec3 _t0826 = prim *0036<$[3]> (_t0825, dPos054A);
    vec3 _t0827 = prim +0017<$[3]> (_t0826, refPos0549);
    real _t0828 = _t0827[1];
    real _t0829 = time054B[0];
    vec3 _t082A = prim *0036<$[3]> (_t0829, dPos054A);
    vec3 _t082B = prim +0017<$[3]> (_t082A, refPos0549);
    real _t082C = _t082B[2];
    real _t082D = 0.1e1;
    vec4 _t082E = [_t0824, _t0828, _t082C, _t082D];
    vec4 _t082F = prim •00CE<$[4,4]; $[4]; $[4]> (_t0820, _t082E);
    real _t0830 = _t082F[0];
    real _t0831 = 0.1e1;
    real _t0832 = 0.e0;
    real _t0833 = 0.e0;
    real _t0834 = 0.e0;
    vec4 _t0835 = [_t0831, _t0832, _t0833, _t0834];
    real _t0836 = 0.e0;
    real _t0837 = 0.1e1;
    real _t0838 = 0.e0;
    real _t0839 = 0.e0;
    vec4 _t083A = [_t0836, _t0837, _t0838, _t0839];
    real _t083B = 0.e0;
    real _t083C = 0.e0;
    real _t083D = 0.1e1;
    real _t083E = 0.e0;
    vec4 _t083F = [_t083B, _t083C, _t083D, _t083E];
    real _t0840 = 0.971445146547e-16;
    real _t0841 = 0.e0;
    real _t0842 = 0.e0;
    real _t0843 = 0.1e1;
    vec4 _t0844 = [_t0840, _t0841, _t0842, _t0843];
    tensor[4,4] _t0845 = [_t0835, _t083A, _t083F, _t0844];
    real _t0846 = 0.57735026919e0;
    real _t0847 = 0.57735026919e0;
    real _t0848 = 0.57735026919e0;
    real _t0849 = -0.57735026919e0;
    vec4 _t084A = [_t0846, _t0847, _t0848, _t0849];
    real _t084B = -0.333333333333e0;
    real _t084C = 0.666666666667e0;
    real _t084D = -0.333333333333e0;
    real _t084E = 0.333333333333e0;
    vec4 _t084F = [_t084B, _t084C, _t084D, _t084E];
    real _t0850 = -0.333333333333e0;
    real _t0851 = -0.333333333333e0;
    real _t0852 = 0.666666666667e0;
    real _t0853 = 0.333333333333e0;
    vec4 _t0854 = [_t0850, _t0851, _t0852, _t0853];
    real _t0855 = 0.971445146547e-16;
    real _t0856 = 0.e0;
    real _t0857 = 0.e0;
    real _t0858 = 0.1e1;
    vec4 _t0859 = [_t0855, _t0856, _t0857, _t0858];
    tensor[4,4] _t085A = [_t084A, _t084F, _t0854, _t0859];
    real _t085B = -0.333333333333e0;
    real _t085C = 0.666666666667e0;
    real _t085D = -0.333333333333e0;
    real _t085E = 0.333333333333e0;
    vec4 _t085F = [_t085B, _t085C, _t085D, _t085E];
    real _t0860 = -0.57735026919e0;
    real _t0861 = -0.57735026919e0;
    real _t0862 = -0.57735026919e0;
    real _t0863 = 0.57735026919e0;
    vec4 _t0864 = [_t0860, _t0861, _t0862, _t0863];
    real _t0865 = -0.333333333333e0;
    real _t0866 = -0.333333333333e0;
    real _t0867 = 0.666666666667e0;
    real _t0868 = 0.333333333333e0;
    vec4 _t0869 = [_t0865, _t0866, _t0867, _t0868];
    real _t086A = 0.971445146547e-16;
    real _t086B = 0.e0;
    real _t086C = 0.e0;
    real _t086D = 0.1e1;
    vec4 _t086E = [_t086A, _t086B, _t086C, _t086D];
    tensor[4,4] _t086F = [_t085F, _t0864, _t0869, _t086E];
    real _t0870 = -0.333333333333e0;
    real _t0871 = 0.666666666667e0;
    real _t0872 = -0.333333333333e0;
    real _t0873 = 0.333333333333e0;
    vec4 _t0874 = [_t0870, _t0871, _t0872, _t0873];
    real _t0875 = -0.333333333333e0;
    real _t0876 = -0.333333333333e0;
    real _t0877 = 0.666666666667e0;
    real _t0878 = 0.333333333333e0;
    vec4 _t0879 = [_t0875, _t0876, _t0877, _t0878];
    real _t087A = 0.57735026919e0;
    real _t087B = 0.57735026919e0;
    real _t087C = 0.57735026919e0;
    real _t087D = -0.57735026919e0;
    vec4 _t087E = [_t087A, _t087B, _t087C, _t087D];
    real _t087F = 0.971445146547e-16;
    real _t0880 = 0.e0;
    real _t0881 = 0.e0;
    real _t0882 = 0.1e1;
    vec4 _t0883 = [_t087F, _t0880, _t0881, _t0882];
    tensor[4,4] _t0884 = [_t0874, _t0879, _t087E, _t0883];
    tensor[4,4][4] _t0885 = {_t0845, _t085A, _t086F, _t0884};
    real _t0886 = 0.57735026919e0;
    real _t0887 = -0.1e1;
    real _t0888 = -0.1e1;
    real _t0889 = 0.1e1;
    vec4 _t088A = [_t0886, _t0887, _t0888, _t0889];
    real _t088B = 0.57735026919e0;
    real _t088C = 0.1e1;
    real _t088D = 0.e0;
    real _t088E = 0.e0;
    vec4 _t088F = [_t088B, _t088C, _t088D, _t088E];
    real _t0890 = 0.57735026919e0;
    real _t0891 = 0.e0;
    real _t0892 = 0.1e1;
    real _t0893 = 0.e0;
    vec4 _t0894 = [_t0890, _t0891, _t0892, _t0893];
    real _t0895 = 0.e0;
    real _t0896 = 0.e0;
    real _t0897 = 0.e0;
    real _t0898 = 0.1e1;
    vec4 _t0899 = [_t0895, _t0896, _t0897, _t0898];
    tensor[4,4] _t089A = [_t088A, _t088F, _t0894, _t0899];
    real _t089B = 0.1e1;
    real _t089C = 0.e0;
    real _t089D = 0.e0;
    real _t089E = 0.e0;
    vec4 _t089F = [_t089B, _t089C, _t089D, _t089E];
    real _t08A0 = 0.e0;
    real _t08A1 = 0.1e1;
    real _t08A2 = 0.e0;
    real _t08A3 = 0.e0;
    vec4 _t08A4 = [_t08A0, _t08A1, _t08A2, _t08A3];
    real _t08A5 = 0.e0;
    real _t08A6 = 0.e0;
    real _t08A7 = 0.1e1;
    real _t08A8 = 0.e0;
    vec4 _t08A9 = [_t08A5, _t08A6, _t08A7, _t08A8];
    real _t08AA = 0.e0;
    real _t08AB = 0.e0;
    real _t08AC = 0.e0;
    real _t08AD = 0.1e1;
    vec4 _t08AE = [_t08AA, _t08AB, _t08AC, _t08AD];
    tensor[4,4] _t08AF = [_t089F, _t08A4, _t08A9, _t08AE];
    real _t08B0 = 0.e0;
    real _t08B1 = 0.1e1;
    real _t08B2 = 0.e0;
    real _t08B3 = 0.e0;
    vec4 _t08B4 = [_t08B0, _t08B1, _t08B2, _t08B3];
    real _t08B5 = -0.1e1;
    real _t08B6 = 0.e0;
    real _t08B7 = 0.e0;
    real _t08B8 = 0.e0;
    vec4 _t08B9 = [_t08B5, _t08B6, _t08B7, _t08B8];
    real _t08BA = 0.e0;
    real _t08BB = 0.e0;
    real _t08BC = 0.1e1;
    real _t08BD = 0.e0;
    vec4 _t08BE = [_t08BA, _t08BB, _t08BC, _t08BD];
    real _t08BF = 0.e0;
    real _t08C0 = 0.e0;
    real _t08C1 = 0.e0;
    real _t08C2 = 0.1e1;
    vec4 _t08C3 = [_t08BF, _t08C0, _t08C1, _t08C2];
    tensor[4,4] _t08C4 = [_t08B4, _t08B9, _t08BE, _t08C3];
    real _t08C5 = 0.e0;
    real _t08C6 = 0.1e1;
    real _t08C7 = 0.e0;
    real _t08C8 = 0.e0;
    vec4 _t08C9 = [_t08C5, _t08C6, _t08C7, _t08C8];
    real _t08CA = 0.e0;
    real _t08CB = 0.e0;
    real _t08CC = 0.1e1;
    real _t08CD = 0.e0;
    vec4 _t08CE = [_t08CA, _t08CB, _t08CC, _t08CD];
    real _t08CF = 0.1e1;
    real _t08D0 = 0.e0;
    real _t08D1 = 0.e0;
    real _t08D2 = 0.e0;
    vec4 _t08D3 = [_t08CF, _t08D0, _t08D1, _t08D2];
    real _t08D4 = 0.e0;
    real _t08D5 = 0.e0;
    real _t08D6 = 0.e0;
    real _t08D7 = 0.1e1;
    vec4 _t08D8 = [_t08D4, _t08D5, _t08D6, _t08D7];
    tensor[4,4] _t08D9 = [_t08C9, _t08CE, _t08D3, _t08D8];
    tensor[4,4][4] _t08DA = {_t089A, _t08AF, _t08C4, _t08D9};
    real _t08DB = -0.1e1;
    real _t08DC = -0.57735026919e0;
    real _t08DD = -0.1e1;
    real _t08DE = 0.1e1;
    vec4 _t08DF = [_t08DB, _t08DC, _t08DD, _t08DE];
    real _t08E0 = 0.1e1;
    real _t08E1 = -0.57735026919e0;
    real _t08E2 = 0.e0;
    real _t08E3 = 0.e0;
    vec4 _t08E4 = [_t08E0, _t08E1, _t08E2, _t08E3];
    real _t08E5 = 0.e0;
    real _t08E6 = -0.57735026919e0;
    real _t08E7 = 0.1e1;
    real _t08E8 = 0.e0;
    vec4 _t08E9 = [_t08E5, _t08E6, _t08E7, _t08E8];
    real _t08EA = 0.e0;
    real _t08EB = 0.e0;
    real _t08EC = 0.e0;
    real _t08ED = 0.1e1;
    vec4 _t08EE = [_t08EA, _t08EB, _t08EC, _t08ED];
    tensor[4,4] _t08EF = [_t08DF, _t08E4, _t08E9, _t08EE];
    real _t08F0 = 0.e0;
    real _t08F1 = -0.1e1;
    real _t08F2 = 0.e0;
    real _t08F3 = 0.e0;
    vec4 _t08F4 = [_t08F0, _t08F1, _t08F2, _t08F3];
    real _t08F5 = 0.1e1;
    real _t08F6 = 0.e0;
    real _t08F7 = 0.e0;
    real _t08F8 = 0.e0;
    vec4 _t08F9 = [_t08F5, _t08F6, _t08F7, _t08F8];
    real _t08FA = 0.e0;
    real _t08FB = 0.e0;
    real _t08FC = 0.1e1;
    real _t08FD = 0.e0;
    vec4 _t08FE = [_t08FA, _t08FB, _t08FC, _t08FD];
    real _t08FF = 0.e0;
    real _t0900 = 0.e0;
    real _t0901 = 0.e0;
    real _t0902 = 0.1e1;
    vec4 _t0903 = [_t08FF, _t0900, _t0901, _t0902];
    tensor[4,4] _t0904 = [_t08F4, _t08F9, _t08FE, _t0903];
    real _t0905 = 0.1e1;
    real _t0906 = 0.e0;
    real _t0907 = 0.e0;
    real _t0908 = 0.e0;
    vec4 _t0909 = [_t0905, _t0906, _t0907, _t0908];
    real _t090A = 0.e0;
    real _t090B = 0.1e1;
    real _t090C = 0.e0;
    real _t090D = 0.e0;
    vec4 _t090E = [_t090A, _t090B, _t090C, _t090D];
    real _t090F = 0.e0;
    real _t0910 = 0.e0;
    real _t0911 = 0.1e1;
    real _t0912 = 0.e0;
    vec4 _t0913 = [_t090F, _t0910, _t0911, _t0912];
    real _t0914 = 0.e0;
    real _t0915 = 0.e0;
    real _t0916 = 0.e0;
    real _t0917 = 0.1e1;
    vec4 _t0918 = [_t0914, _t0915, _t0916, _t0917];
    tensor[4,4] _t0919 = [_t0909, _t090E, _t0913, _t0918];
    real _t091A = 0.1e1;
    real _t091B = 0.e0;
    real _t091C = 0.e0;
    real _t091D = 0.e0;
    vec4 _t091E = [_t091A, _t091B, _t091C, _t091D];
    real _t091F = 0.e0;
    real _t0920 = 0.e0;
    real _t0921 = 0.1e1;
    real _t0922 = 0.e0;
    vec4 _t0923 = [_t091F, _t0920, _t0921, _t0922];
    real _t0924 = 0.e0;
    real _t0925 = -0.1e1;
    real _t0926 = 0.e0;
    real _t0927 = 0.e0;
    vec4 _t0928 = [_t0924, _t0925, _t0926, _t0927];
    real _t0929 = 0.e0;
    real _t092A = 0.e0;
    real _t092B = 0.e0;
    real _t092C = 0.1e1;
    vec4 _t092D = [_t0929, _t092A, _t092B, _t092C];
    tensor[4,4] _t092E = [_t091E, _t0923, _t0928, _t092D];
    tensor[4,4][4] _t092F = {_t08EF, _t0904, _t0919, _t092E};
    real _t0930 = -0.1e1;
    real _t0931 = -0.1e1;
    real _t0932 = 0.57735026919e0;
    real _t0933 = 0.1e1;
    vec4 _t0934 = [_t0930, _t0931, _t0932, _t0933];
    real _t0935 = 0.1e1;
    real _t0936 = 0.e0;
    real _t0937 = 0.57735026919e0;
    real _t0938 = 0.e0;
    vec4 _t0939 = [_t0935, _t0936, _t0937, _t0938];
    real _t093A = 0.e0;
    real _t093B = 0.1e1;
    real _t093C = 0.57735026919e0;
    real _t093D = 0.e0;
    vec4 _t093E = [_t093A, _t093B, _t093C, _t093D];
    real _t093F = 0.e0;
    real _t0940 = 0.e0;
    real _t0941 = 0.e0;
    real _t0942 = 0.1e1;
    vec4 _t0943 = [_t093F, _t0940, _t0941, _t0942];
    tensor[4,4] _t0944 = [_t0934, _t0939, _t093E, _t0943];
    real _t0945 = 0.e0;
    real _t0946 = 0.e0;
    real _t0947 = 0.1e1;
    real _t0948 = 0.e0;
    vec4 _t0949 = [_t0945, _t0946, _t0947, _t0948];
    real _t094A = 0.1e1;
    real _t094B = 0.e0;
    real _t094C = 0.e0;
    real _t094D = 0.e0;
    vec4 _t094E = [_t094A, _t094B, _t094C, _t094D];
    real _t094F = 0.e0;
    real _t0950 = 0.1e1;
    real _t0951 = 0.e0;
    real _t0952 = 0.e0;
    vec4 _t0953 = [_t094F, _t0950, _t0951, _t0952];
    real _t0954 = 0.e0;
    real _t0955 = 0.e0;
    real _t0956 = 0.e0;
    real _t0957 = 0.1e1;
    vec4 _t0958 = [_t0954, _t0955, _t0956, _t0957];
    tensor[4,4] _t0959 = [_t0949, _t094E, _t0953, _t0958];
    real _t095A = 0.1e1;
    real _t095B = 0.e0;
    real _t095C = 0.e0;
    real _t095D = 0.e0;
    vec4 _t095E = [_t095A, _t095B, _t095C, _t095D];
    real _t095F = 0.e0;
    real _t0960 = 0.e0;
    real _t0961 = -0.1e1;
    real _t0962 = 0.e0;
    vec4 _t0963 = [_t095F, _t0960, _t0961, _t0962];
    real _t0964 = 0.e0;
    real _t0965 = 0.1e1;
    real _t0966 = 0.e0;
    real _t0967 = 0.e0;
    vec4 _t0968 = [_t0964, _t0965, _t0966, _t0967];
    real _t0969 = 0.e0;
    real _t096A = 0.e0;
    real _t096B = 0.e0;
    real _t096C = 0.1e1;
    vec4 _t096D = [_t0969, _t096A, _t096B, _t096C];
    tensor[4,4] _t096E = [_t095E, _t0963, _t0968, _t096D];
    real _t096F = 0.1e1;
    real _t0970 = 0.e0;
    real _t0971 = 0.e0;
    real _t0972 = 0.e0;
    vec4 _t0973 = [_t096F, _t0970, _t0971, _t0972];
    real _t0974 = 0.e0;
    real _t0975 = 0.1e1;
    real _t0976 = 0.e0;
    real _t0977 = 0.e0;
    vec4 _t0978 = [_t0974, _t0975, _t0976, _t0977];
    real _t0979 = 0.e0;
    real _t097A = 0.e0;
    real _t097B = 0.1e1;
    real _t097C = 0.e0;
    vec4 _t097D = [_t0979, _t097A, _t097B, _t097C];
    real _t097E = 0.e0;
    real _t097F = 0.e0;
    real _t0980 = 0.e0;
    real _t0981 = 0.1e1;
    vec4 _t0982 = [_t097E, _t097F, _t0980, _t0981];
    tensor[4,4] _t0983 = [_t0973, _t0978, _t097D, _t0982];
    tensor[4,4][4] _t0984 = {_t0944, _t0959, _t096E, _t0983};
    tensor[4,4][4][4] _t0985 = {_t0885, _t08DA, _t092F, _t0984};
    real _t0986 = time054B[1];
    int _t0987 = prim $r2i01B7 (_t0986);
    tensor[4,4][4] _t0988 = prim $sub01C0<tensor[4,4][4]; %4> (_t0985, _t0987);
    real _t0989 = time054B[1];
    int _t098A = prim $r2i01B7 (_t0989);
    int[2] _t098B = func nextCell4054F (_t098A, cellId0548, mesh0547);
    int _t098C = 1;
    int _t098D = prim $sub01C0<int; %2> (_t098B, _t098C);
    tensor[4,4] _t098E = prim $sub01C0<tensor[4,4]; %4> (_t0988, _t098D);
    real _t098F = time054B[0];
    vec3 _t0990 = prim *0036<$[3]> (_t098F, dPos054A);
    vec3 _t0991 = prim +0017<$[3]> (_t0990, refPos0549);
    real _t0992 = _t0991[0];
    real _t0993 = time054B[0];
    vec3 _t0994 = prim *0036<$[3]> (_t0993, dPos054A);
    vec3 _t0995 = prim +0017<$[3]> (_t0994, refPos0549);
    real _t0996 = _t0995[1];
    real _t0997 = time054B[0];
    vec3 _t0998 = prim *0036<$[3]> (_t0997, dPos054A);
    vec3 _t0999 = prim +0017<$[3]> (_t0998, refPos0549);
    real _t099A = _t0999[2];
    real _t099B = 0.1e1;
    vec4 _t099C = [_t0992, _t0996, _t099A, _t099B];
    vec4 _t099D = prim •00CE<$[4,4]; $[4]; $[4]> (_t098E, _t099C);
    real _t099E = _t099D[1];
    real _t099F = 0.1e1;
    real _t09A0 = 0.e0;
    real _t09A1 = 0.e0;
    real _t09A2 = 0.e0;
    vec4 _t09A3 = [_t099F, _t09A0, _t09A1, _t09A2];
    real _t09A4 = 0.e0;
    real _t09A5 = 0.1e1;
    real _t09A6 = 0.e0;
    real _t09A7 = 0.e0;
    vec4 _t09A8 = [_t09A4, _t09A5, _t09A6, _t09A7];
    real _t09A9 = 0.e0;
    real _t09AA = 0.e0;
    real _t09AB = 0.1e1;
    real _t09AC = 0.e0;
    vec4 _t09AD = [_t09A9, _t09AA, _t09AB, _t09AC];
    real _t09AE = 0.971445146547e-16;
    real _t09AF = 0.e0;
    real _t09B0 = 0.e0;
    real _t09B1 = 0.1e1;
    vec4 _t09B2 = [_t09AE, _t09AF, _t09B0, _t09B1];
    tensor[4,4] _t09B3 = [_t09A3, _t09A8, _t09AD, _t09B2];
    real _t09B4 = 0.57735026919e0;
    real _t09B5 = 0.57735026919e0;
    real _t09B6 = 0.57735026919e0;
    real _t09B7 = -0.57735026919e0;
    vec4 _t09B8 = [_t09B4, _t09B5, _t09B6, _t09B7];
    real _t09B9 = -0.333333333333e0;
    real _t09BA = 0.666666666667e0;
    real _t09BB = -0.333333333333e0;
    real _t09BC = 0.333333333333e0;
    vec4 _t09BD = [_t09B9, _t09BA, _t09BB, _t09BC];
    real _t09BE = -0.333333333333e0;
    real _t09BF = -0.333333333333e0;
    real _t09C0 = 0.666666666667e0;
    real _t09C1 = 0.333333333333e0;
    vec4 _t09C2 = [_t09BE, _t09BF, _t09C0, _t09C1];
    real _t09C3 = 0.971445146547e-16;
    real _t09C4 = 0.e0;
    real _t09C5 = 0.e0;
    real _t09C6 = 0.1e1;
    vec4 _t09C7 = [_t09C3, _t09C4, _t09C5, _t09C6];
    tensor[4,4] _t09C8 = [_t09B8, _t09BD, _t09C2, _t09C7];
    real _t09C9 = -0.333333333333e0;
    real _t09CA = 0.666666666667e0;
    real _t09CB = -0.333333333333e0;
    real _t09CC = 0.333333333333e0;
    vec4 _t09CD = [_t09C9, _t09CA, _t09CB, _t09CC];
    real _t09CE = -0.57735026919e0;
    real _t09CF = -0.57735026919e0;
    real _t09D0 = -0.57735026919e0;
    real _t09D1 = 0.57735026919e0;
    vec4 _t09D2 = [_t09CE, _t09CF, _t09D0, _t09D1];
    real _t09D3 = -0.333333333333e0;
    real _t09D4 = -0.333333333333e0;
    real _t09D5 = 0.666666666667e0;
    real _t09D6 = 0.333333333333e0;
    vec4 _t09D7 = [_t09D3, _t09D4, _t09D5, _t09D6];
    real _t09D8 = 0.971445146547e-16;
    real _t09D9 = 0.e0;
    real _t09DA = 0.e0;
    real _t09DB = 0.1e1;
    vec4 _t09DC = [_t09D8, _t09D9, _t09DA, _t09DB];
    tensor[4,4] _t09DD = [_t09CD, _t09D2, _t09D7, _t09DC];
    real _t09DE = -0.333333333333e0;
    real _t09DF = 0.666666666667e0;
    real _t09E0 = -0.333333333333e0;
    real _t09E1 = 0.333333333333e0;
    vec4 _t09E2 = [_t09DE, _t09DF, _t09E0, _t09E1];
    real _t09E3 = -0.333333333333e0;
    real _t09E4 = -0.333333333333e0;
    real _t09E5 = 0.666666666667e0;
    real _t09E6 = 0.333333333333e0;
    vec4 _t09E7 = [_t09E3, _t09E4, _t09E5, _t09E6];
    real _t09E8 = 0.57735026919e0;
    real _t09E9 = 0.57735026919e0;
    real _t09EA = 0.57735026919e0;
    real _t09EB = -0.57735026919e0;
    vec4 _t09EC = [_t09E8, _t09E9, _t09EA, _t09EB];
    real _t09ED = 0.971445146547e-16;
    real _t09EE = 0.e0;
    real _t09EF = 0.e0;
    real _t09F0 = 0.1e1;
    vec4 _t09F1 = [_t09ED, _t09EE, _t09EF, _t09F0];
    tensor[4,4] _t09F2 = [_t09E2, _t09E7, _t09EC, _t09F1];
    tensor[4,4][4] _t09F3 = {_t09B3, _t09C8, _t09DD, _t09F2};
    real _t09F4 = 0.57735026919e0;
    real _t09F5 = -0.1e1;
    real _t09F6 = -0.1e1;
    real _t09F7 = 0.1e1;
    vec4 _t09F8 = [_t09F4, _t09F5, _t09F6, _t09F7];
    real _t09F9 = 0.57735026919e0;
    real _t09FA = 0.1e1;
    real _t09FB = 0.e0;
    real _t09FC = 0.e0;
    vec4 _t09FD = [_t09F9, _t09FA, _t09FB, _t09FC];
    real _t09FE = 0.57735026919e0;
    real _t09FF = 0.e0;
    real _t0A00 = 0.1e1;
    real _t0A01 = 0.e0;
    vec4 _t0A02 = [_t09FE, _t09FF, _t0A00, _t0A01];
    real _t0A03 = 0.e0;
    real _t0A04 = 0.e0;
    real _t0A05 = 0.e0;
    real _t0A06 = 0.1e1;
    vec4 _t0A07 = [_t0A03, _t0A04, _t0A05, _t0A06];
    tensor[4,4] _t0A08 = [_t09F8, _t09FD, _t0A02, _t0A07];
    real _t0A09 = 0.1e1;
    real _t0A0A = 0.e0;
    real _t0A0B = 0.e0;
    real _t0A0C = 0.e0;
    vec4 _t0A0D = [_t0A09, _t0A0A, _t0A0B, _t0A0C];
    real _t0A0E = 0.e0;
    real _t0A0F = 0.1e1;
    real _t0A10 = 0.e0;
    real _t0A11 = 0.e0;
    vec4 _t0A12 = [_t0A0E, _t0A0F, _t0A10, _t0A11];
    real _t0A13 = 0.e0;
    real _t0A14 = 0.e0;
    real _t0A15 = 0.1e1;
    real _t0A16 = 0.e0;
    vec4 _t0A17 = [_t0A13, _t0A14, _t0A15, _t0A16];
    real _t0A18 = 0.e0;
    real _t0A19 = 0.e0;
    real _t0A1A = 0.e0;
    real _t0A1B = 0.1e1;
    vec4 _t0A1C = [_t0A18, _t0A19, _t0A1A, _t0A1B];
    tensor[4,4] _t0A1D = [_t0A0D, _t0A12, _t0A17, _t0A1C];
    real _t0A1E = 0.e0;
    real _t0A1F = 0.1e1;
    real _t0A20 = 0.e0;
    real _t0A21 = 0.e0;
    vec4 _t0A22 = [_t0A1E, _t0A1F, _t0A20, _t0A21];
    real _t0A23 = -0.1e1;
    real _t0A24 = 0.e0;
    real _t0A25 = 0.e0;
    real _t0A26 = 0.e0;
    vec4 _t0A27 = [_t0A23, _t0A24, _t0A25, _t0A26];
    real _t0A28 = 0.e0;
    real _t0A29 = 0.e0;
    real _t0A2A = 0.1e1;
    real _t0A2B = 0.e0;
    vec4 _t0A2C = [_t0A28, _t0A29, _t0A2A, _t0A2B];
    real _t0A2D = 0.e0;
    real _t0A2E = 0.e0;
    real _t0A2F = 0.e0;
    real _t0A30 = 0.1e1;
    vec4 _t0A31 = [_t0A2D, _t0A2E, _t0A2F, _t0A30];
    tensor[4,4] _t0A32 = [_t0A22, _t0A27, _t0A2C, _t0A31];
    real _t0A33 = 0.e0;
    real _t0A34 = 0.1e1;
    real _t0A35 = 0.e0;
    real _t0A36 = 0.e0;
    vec4 _t0A37 = [_t0A33, _t0A34, _t0A35, _t0A36];
    real _t0A38 = 0.e0;
    real _t0A39 = 0.e0;
    real _t0A3A = 0.1e1;
    real _t0A3B = 0.e0;
    vec4 _t0A3C = [_t0A38, _t0A39, _t0A3A, _t0A3B];
    real _t0A3D = 0.1e1;
    real _t0A3E = 0.e0;
    real _t0A3F = 0.e0;
    real _t0A40 = 0.e0;
    vec4 _t0A41 = [_t0A3D, _t0A3E, _t0A3F, _t0A40];
    real _t0A42 = 0.e0;
    real _t0A43 = 0.e0;
    real _t0A44 = 0.e0;
    real _t0A45 = 0.1e1;
    vec4 _t0A46 = [_t0A42, _t0A43, _t0A44, _t0A45];
    tensor[4,4] _t0A47 = [_t0A37, _t0A3C, _t0A41, _t0A46];
    tensor[4,4][4] _t0A48 = {_t0A08, _t0A1D, _t0A32, _t0A47};
    real _t0A49 = -0.1e1;
    real _t0A4A = -0.57735026919e0;
    real _t0A4B = -0.1e1;
    real _t0A4C = 0.1e1;
    vec4 _t0A4D = [_t0A49, _t0A4A, _t0A4B, _t0A4C];
    real _t0A4E = 0.1e1;
    real _t0A4F = -0.57735026919e0;
    real _t0A50 = 0.e0;
    real _t0A51 = 0.e0;
    vec4 _t0A52 = [_t0A4E, _t0A4F, _t0A50, _t0A51];
    real _t0A53 = 0.e0;
    real _t0A54 = -0.57735026919e0;
    real _t0A55 = 0.1e1;
    real _t0A56 = 0.e0;
    vec4 _t0A57 = [_t0A53, _t0A54, _t0A55, _t0A56];
    real _t0A58 = 0.e0;
    real _t0A59 = 0.e0;
    real _t0A5A = 0.e0;
    real _t0A5B = 0.1e1;
    vec4 _t0A5C = [_t0A58, _t0A59, _t0A5A, _t0A5B];
    tensor[4,4] _t0A5D = [_t0A4D, _t0A52, _t0A57, _t0A5C];
    real _t0A5E = 0.e0;
    real _t0A5F = -0.1e1;
    real _t0A60 = 0.e0;
    real _t0A61 = 0.e0;
    vec4 _t0A62 = [_t0A5E, _t0A5F, _t0A60, _t0A61];
    real _t0A63 = 0.1e1;
    real _t0A64 = 0.e0;
    real _t0A65 = 0.e0;
    real _t0A66 = 0.e0;
    vec4 _t0A67 = [_t0A63, _t0A64, _t0A65, _t0A66];
    real _t0A68 = 0.e0;
    real _t0A69 = 0.e0;
    real _t0A6A = 0.1e1;
    real _t0A6B = 0.e0;
    vec4 _t0A6C = [_t0A68, _t0A69, _t0A6A, _t0A6B];
    real _t0A6D = 0.e0;
    real _t0A6E = 0.e0;
    real _t0A6F = 0.e0;
    real _t0A70 = 0.1e1;
    vec4 _t0A71 = [_t0A6D, _t0A6E, _t0A6F, _t0A70];
    tensor[4,4] _t0A72 = [_t0A62, _t0A67, _t0A6C, _t0A71];
    real _t0A73 = 0.1e1;
    real _t0A74 = 0.e0;
    real _t0A75 = 0.e0;
    real _t0A76 = 0.e0;
    vec4 _t0A77 = [_t0A73, _t0A74, _t0A75, _t0A76];
    real _t0A78 = 0.e0;
    real _t0A79 = 0.1e1;
    real _t0A7A = 0.e0;
    real _t0A7B = 0.e0;
    vec4 _t0A7C = [_t0A78, _t0A79, _t0A7A, _t0A7B];
    real _t0A7D = 0.e0;
    real _t0A7E = 0.e0;
    real _t0A7F = 0.1e1;
    real _t0A80 = 0.e0;
    vec4 _t0A81 = [_t0A7D, _t0A7E, _t0A7F, _t0A80];
    real _t0A82 = 0.e0;
    real _t0A83 = 0.e0;
    real _t0A84 = 0.e0;
    real _t0A85 = 0.1e1;
    vec4 _t0A86 = [_t0A82, _t0A83, _t0A84, _t0A85];
    tensor[4,4] _t0A87 = [_t0A77, _t0A7C, _t0A81, _t0A86];
    real _t0A88 = 0.1e1;
    real _t0A89 = 0.e0;
    real _t0A8A = 0.e0;
    real _t0A8B = 0.e0;
    vec4 _t0A8C = [_t0A88, _t0A89, _t0A8A, _t0A8B];
    real _t0A8D = 0.e0;
    real _t0A8E = 0.e0;
    real _t0A8F = 0.1e1;
    real _t0A90 = 0.e0;
    vec4 _t0A91 = [_t0A8D, _t0A8E, _t0A8F, _t0A90];
    real _t0A92 = 0.e0;
    real _t0A93 = -0.1e1;
    real _t0A94 = 0.e0;
    real _t0A95 = 0.e0;
    vec4 _t0A96 = [_t0A92, _t0A93, _t0A94, _t0A95];
    real _t0A97 = 0.e0;
    real _t0A98 = 0.e0;
    real _t0A99 = 0.e0;
    real _t0A9A = 0.1e1;
    vec4 _t0A9B = [_t0A97, _t0A98, _t0A99, _t0A9A];
    tensor[4,4] _t0A9C = [_t0A8C, _t0A91, _t0A96, _t0A9B];
    tensor[4,4][4] _t0A9D = {_t0A5D, _t0A72, _t0A87, _t0A9C};
    real _t0A9E = -0.1e1;
    real _t0A9F = -0.1e1;
    real _t0AA0 = 0.57735026919e0;
    real _t0AA1 = 0.1e1;
    vec4 _t0AA2 = [_t0A9E, _t0A9F, _t0AA0, _t0AA1];
    real _t0AA3 = 0.1e1;
    real _t0AA4 = 0.e0;
    real _t0AA5 = 0.57735026919e0;
    real _t0AA6 = 0.e0;
    vec4 _t0AA7 = [_t0AA3, _t0AA4, _t0AA5, _t0AA6];
    real _t0AA8 = 0.e0;
    real _t0AA9 = 0.1e1;
    real _t0AAA = 0.57735026919e0;
    real _t0AAB = 0.e0;
    vec4 _t0AAC = [_t0AA8, _t0AA9, _t0AAA, _t0AAB];
    real _t0AAD = 0.e0;
    real _t0AAE = 0.e0;
    real _t0AAF = 0.e0;
    real _t0AB0 = 0.1e1;
    vec4 _t0AB1 = [_t0AAD, _t0AAE, _t0AAF, _t0AB0];
    tensor[4,4] _t0AB2 = [_t0AA2, _t0AA7, _t0AAC, _t0AB1];
    real _t0AB3 = 0.e0;
    real _t0AB4 = 0.e0;
    real _t0AB5 = 0.1e1;
    real _t0AB6 = 0.e0;
    vec4 _t0AB7 = [_t0AB3, _t0AB4, _t0AB5, _t0AB6];
    real _t0AB8 = 0.1e1;
    real _t0AB9 = 0.e0;
    real _t0ABA = 0.e0;
    real _t0ABB = 0.e0;
    vec4 _t0ABC = [_t0AB8, _t0AB9, _t0ABA, _t0ABB];
    real _t0ABD = 0.e0;
    real _t0ABE = 0.1e1;
    real _t0ABF = 0.e0;
    real _t0AC0 = 0.e0;
    vec4 _t0AC1 = [_t0ABD, _t0ABE, _t0ABF, _t0AC0];
    real _t0AC2 = 0.e0;
    real _t0AC3 = 0.e0;
    real _t0AC4 = 0.e0;
    real _t0AC5 = 0.1e1;
    vec4 _t0AC6 = [_t0AC2, _t0AC3, _t0AC4, _t0AC5];
    tensor[4,4] _t0AC7 = [_t0AB7, _t0ABC, _t0AC1, _t0AC6];
    real _t0AC8 = 0.1e1;
    real _t0AC9 = 0.e0;
    real _t0ACA = 0.e0;
    real _t0ACB = 0.e0;
    vec4 _t0ACC = [_t0AC8, _t0AC9, _t0ACA, _t0ACB];
    real _t0ACD = 0.e0;
    real _t0ACE = 0.e0;
    real _t0ACF = -0.1e1;
    real _t0AD0 = 0.e0;
    vec4 _t0AD1 = [_t0ACD, _t0ACE, _t0ACF, _t0AD0];
    real _t0AD2 = 0.e0;
    real _t0AD3 = 0.1e1;
    real _t0AD4 = 0.e0;
    real _t0AD5 = 0.e0;
    vec4 _t0AD6 = [_t0AD2, _t0AD3, _t0AD4, _t0AD5];
    real _t0AD7 = 0.e0;
    real _t0AD8 = 0.e0;
    real _t0AD9 = 0.e0;
    real _t0ADA = 0.1e1;
    vec4 _t0ADB = [_t0AD7, _t0AD8, _t0AD9, _t0ADA];
    tensor[4,4] _t0ADC = [_t0ACC, _t0AD1, _t0AD6, _t0ADB];
    real _t0ADD = 0.1e1;
    real _t0ADE = 0.e0;
    real _t0ADF = 0.e0;
    real _t0AE0 = 0.e0;
    vec4 _t0AE1 = [_t0ADD, _t0ADE, _t0ADF, _t0AE0];
    real _t0AE2 = 0.e0;
    real _t0AE3 = 0.1e1;
    real _t0AE4 = 0.e0;
    real _t0AE5 = 0.e0;
    vec4 _t0AE6 = [_t0AE2, _t0AE3, _t0AE4, _t0AE5];
    real _t0AE7 = 0.e0;
    real _t0AE8 = 0.e0;
    real _t0AE9 = 0.1e1;
    real _t0AEA = 0.e0;
    vec4 _t0AEB = [_t0AE7, _t0AE8, _t0AE9, _t0AEA];
    real _t0AEC = 0.e0;
    real _t0AED = 0.e0;
    real _t0AEE = 0.e0;
    real _t0AEF = 0.1e1;
    vec4 _t0AF0 = [_t0AEC, _t0AED, _t0AEE, _t0AEF];
    tensor[4,4] _t0AF1 = [_t0AE1, _t0AE6, _t0AEB, _t0AF0];
    tensor[4,4][4] _t0AF2 = {_t0AB2, _t0AC7, _t0ADC, _t0AF1};
    tensor[4,4][4][4] _t0AF3 = {_t09F3, _t0A48, _t0A9D, _t0AF2};
    real _t0AF4 = time054B[1];
    int _t0AF5 = prim $r2i01B7 (_t0AF4);
    tensor[4,4][4] _t0AF6 = prim $sub01C0<tensor[4,4][4]; %4> (_t0AF3, _t0AF5);
    real _t0AF7 = time054B[1];
    int _t0AF8 = prim $r2i01B7 (_t0AF7);
    int[2] _t0AF9 = func nextCell4054F (_t0AF8, cellId0548, mesh0547);
    int _t0AFA = 1;
    int _t0AFB = prim $sub01C0<int; %2> (_t0AF9, _t0AFA);
    tensor[4,4] _t0AFC = prim $sub01C0<tensor[4,4]; %4> (_t0AF6, _t0AFB);
    real _t0AFD = time054B[0];
    vec3 _t0AFE = prim *0036<$[3]> (_t0AFD, dPos054A);
    vec3 _t0AFF = prim +0017<$[3]> (_t0AFE, refPos0549);
    real _t0B00 = _t0AFF[0];
    real _t0B01 = time054B[0];
    vec3 _t0B02 = prim *0036<$[3]> (_t0B01, dPos054A);
    vec3 _t0B03 = prim +0017<$[3]> (_t0B02, refPos0549);
    real _t0B04 = _t0B03[1];
    real _t0B05 = time054B[0];
    vec3 _t0B06 = prim *0036<$[3]> (_t0B05, dPos054A);
    vec3 _t0B07 = prim +0017<$[3]> (_t0B06, refPos0549);
    real _t0B08 = _t0B07[2];
    real _t0B09 = 0.1e1;
    vec4 _t0B0A = [_t0B00, _t0B04, _t0B08, _t0B09];
    vec4 _t0B0B = prim •00CE<$[4,4]; $[4]; $[4]> (_t0AFC, _t0B0A);
    real _t0B0C = _t0B0B[2];
    vec3 _t0B0D = [_t0830, _t099E, _t0B0C];
    real _t0B0E = time054B[1];
    int _t0B0F = prim $r2i01B7 (_t0B0E);
    int[2] _t0B10 = func nextCell4054F (_t0B0F, cellId0548, mesh0547);
    int _t0B11 = 1;
    int _t0B12 = prim $sub01C0<int; %2> (_t0B10, _t0B11);
    Femdata: MeshPos _t0B13 = extractFemItemN((mesh0547, _t06C2, _t0B0D, _t0B12),RefBuild(Mesh),);
    return _t0B13;
  } else {
    real _t0B14 = time054B[0];
    vec3 _t0B15 = prim *0036<$[3]> (_t0B14, dPos054A);
    vec3 _t0B16 = prim +0017<$[3]> (_t0B15, refPos0549);
    Femdata: MeshPos _t0B17 = extractFemItemN((mesh0547, _t0B16),InvalidBuildBoundary(MeshPos),);
    return _t0B17;
  }
}
function int[2]#8 nextCell4054F (int faceIdx0B18, int cell0B19, Femdata: Mesh mesh0B1A)
{
  int _t0B1B = -1;
  bool _t0B1C = prim ==0082 (faceIdx0B18, _t0B1B);
  if _t0B1C {
    int _t0B1D = -1;
    int _t0B1E = -1;
    int[2] _t0B1F = {_t0B1D, _t0B1E};
    return _t0B1F;
  } else {
    int _t0B20 = 8;
    int _t0B21 = prim *0033 (cell0B19, _t0B20);
    int _t0B22 = 2;
    int _t0B23 = prim *0033 (faceIdx0B18, _t0B22);
    int _t0B24 = prim +0015 (_t0B21, _t0B23);
    int[2] _t0B25 = extractFemItemN((mesh0B1A, _t0B24),CellFaceCell(Mesh),);
    return _t0B25;
  }
}
function vec2#0 _enter0B26 (vec3 refPos0B27, vec3 dPos0B28)
{
  real time0B29 = +inf;
  int face0B2A = -1;
  real faceTime0B2B = -inf;
  string _t0B2C = "\ntest :";
  real _t0B2D = 0.57735026919e0;
  real _t0B2E = 0.57735026919e0;
  real _t0B2F = 0.57735026919e0;
  real _t0B30 = 0.57735026919e0;
  vec3 _t0B31 = [_t0B2E, _t0B2F, _t0B30];
  real _t0B32 = prim •00CE<$[3]; $[3]; $[]> (_t0B31, refPos0B27);
  real _t0B33 = prim -0026<$[]> (_t0B2D, _t0B32);
  real _t0B34 = 0.57735026919e0;
  real _t0B35 = 0.57735026919e0;
  real _t0B36 = 0.57735026919e0;
  vec3 _t0B37 = [_t0B34, _t0B35, _t0B36];
  real _t0B38 = prim •00CE<$[3]; $[3]; $[]> (_t0B37, dPos0B28);
  real _t0B39 = prim /0055 (_t0B33, _t0B38);
  string _t0B3A = " test2: ";
  real _t0B3B = 0.57735026919e0;
  real _t0B3C = 0.57735026919e0;
  real _t0B3D = 0.57735026919e0;
  vec3 _t0B3E = [_t0B3B, _t0B3C, _t0B3D];
  real _t0B3F = prim •00CE<$[3]; $[3]; $[]> (_t0B3E, dPos0B28);
  string _t0B40 = " insideTest: ";
  real _t0B41 = 0.1e1;
  real _t0B42 = 0.1e-7;
  real _t0B43 = prim +0017<$[]> (_t0B41, _t0B42);
  real _t0B44 = 0.1e1;
  real _t0B45 = 0.1e1;
  real _t0B46 = 0.1e1;
  vec3 _t0B47 = [_t0B44, _t0B45, _t0B46];
  real _t0B48 = 0.57735026919e0;
  real _t0B49 = 0.57735026919e0;
  real _t0B4A = 0.57735026919e0;
  real _t0B4B = 0.57735026919e0;
  vec3 _t0B4C = [_t0B49, _t0B4A, _t0B4B];
  real _t0B4D = prim •00CE<$[3]; $[3]; $[]> (_t0B4C, refPos0B27);
  real _t0B4E = prim -0026<$[]> (_t0B48, _t0B4D);
  real _t0B4F = 0.57735026919e0;
  real _t0B50 = 0.57735026919e0;
  real _t0B51 = 0.57735026919e0;
  vec3 _t0B52 = [_t0B4F, _t0B50, _t0B51];
  real _t0B53 = prim •00CE<$[3]; $[3]; $[]> (_t0B52, dPos0B28);
  real _t0B54 = prim /0055 (_t0B4E, _t0B53);
  vec3 _t0B55 = prim *0038<$[3]> (dPos0B28, _t0B54);
  vec3 _t0B56 = prim +0017<$[3]> (refPos0B27, _t0B55);
  real _t0B57 = prim •00CE<$[3]; $[3]; $[]> (_t0B47, _t0B56);
  bool _t0B58 = prim >0080 (_t0B43, _t0B57);
  real _t0B59 = 0.1e-7;
  real _t0B5A = 0.1e-7;
  real _t0B5B = 0.1e-7;
  vec3 _t0B5C = [_t0B59, _t0B5A, _t0B5B];
  real _t0B5D = 0.57735026919e0;
  real _t0B5E = 0.57735026919e0;
  real _t0B5F = 0.57735026919e0;
  real _t0B60 = 0.57735026919e0;
  vec3 _t0B61 = [_t0B5E, _t0B5F, _t0B60];
  real _t0B62 = prim •00CE<$[3]; $[3]; $[]> (_t0B61, refPos0B27);
  real _t0B63 = prim -0026<$[]> (_t0B5D, _t0B62);
  real _t0B64 = 0.57735026919e0;
  real _t0B65 = 0.57735026919e0;
  real _t0B66 = 0.57735026919e0;
  vec3 _t0B67 = [_t0B64, _t0B65, _t0B66];
  real _t0B68 = prim •00CE<$[3]; $[3]; $[]> (_t0B67, dPos0B28);
  real _t0B69 = prim /0055 (_t0B63, _t0B68);
  vec3 _t0B6A = prim *0038<$[3]> (dPos0B28, _t0B69);
  vec3 _t0B6B = prim +0017<$[3]> (refPos0B27, _t0B6A);
  vec3 _t0B6C = prim +0017<$[3]> (_t0B5C, _t0B6B);
  real _t0B6D = _t0B6C[0];
  real _t0B6E = -0.e0;
  bool _t0B6F = prim >0080 (_t0B6D, _t0B6E);
  real _t0B70 = 0.1e-7;
  real _t0B71 = 0.1e-7;
  real _t0B72 = 0.1e-7;
  vec3 _t0B73 = [_t0B70, _t0B71, _t0B72];
  real _t0B74 = 0.57735026919e0;
  real _t0B75 = 0.57735026919e0;
  real _t0B76 = 0.57735026919e0;
  real _t0B77 = 0.57735026919e0;
  vec3 _t0B78 = [_t0B75, _t0B76, _t0B77];
  real _t0B79 = prim •00CE<$[3]; $[3]; $[]> (_t0B78, refPos0B27);
  real _t0B7A = prim -0026<$[]> (_t0B74, _t0B79);
  real _t0B7B = 0.57735026919e0;
  real _t0B7C = 0.57735026919e0;
  real _t0B7D = 0.57735026919e0;
  vec3 _t0B7E = [_t0B7B, _t0B7C, _t0B7D];
  real _t0B7F = prim •00CE<$[3]; $[3]; $[]> (_t0B7E, dPos0B28);
  real _t0B80 = prim /0055 (_t0B7A, _t0B7F);
  vec3 _t0B81 = prim *0038<$[3]> (dPos0B28, _t0B80);
  vec3 _t0B82 = prim +0017<$[3]> (refPos0B27, _t0B81);
  vec3 _t0B83 = prim +0017<$[3]> (_t0B73, _t0B82);
  real _t0B84 = _t0B83[1];
  real _t0B85 = -0.e0;
  bool _t0B86 = prim >0080 (_t0B84, _t0B85);
  real _t0B87 = 0.1e-7;
  real _t0B88 = 0.1e-7;
  real _t0B89 = 0.1e-7;
  vec3 _t0B8A = [_t0B87, _t0B88, _t0B89];
  real _t0B8B = 0.57735026919e0;
  real _t0B8C = 0.57735026919e0;
  real _t0B8D = 0.57735026919e0;
  real _t0B8E = 0.57735026919e0;
  vec3 _t0B8F = [_t0B8C, _t0B8D, _t0B8E];
  real _t0B90 = prim •00CE<$[3]; $[3]; $[]> (_t0B8F, refPos0B27);
  real _t0B91 = prim -0026<$[]> (_t0B8B, _t0B90);
  real _t0B92 = 0.57735026919e0;
  real _t0B93 = 0.57735026919e0;
  real _t0B94 = 0.57735026919e0;
  vec3 _t0B95 = [_t0B92, _t0B93, _t0B94];
  real _t0B96 = prim •00CE<$[3]; $[3]; $[]> (_t0B95, dPos0B28);
  real _t0B97 = prim /0055 (_t0B91, _t0B96);
  vec3 _t0B98 = prim *0038<$[3]> (dPos0B28, _t0B97);
  vec3 _t0B99 = prim +0017<$[3]> (refPos0B27, _t0B98);
  vec3 _t0B9A = prim +0017<$[3]> (_t0B8A, _t0B99);
  real _t0B9B = _t0B9A[2];
  real _t0B9C = -0.e0;
  bool _t0B9D = prim >0080 (_t0B9B, _t0B9C);
  bool _t0B9E = prim $and01C4 (_t0B86, _t0B9D);
  bool _t0B9F = prim $and01C4 (_t0B6F, _t0B9E);
  bool _t0BA0 = prim $and01C4 (_t0B58, _t0B9F);
  string _t0BA1 = " dist: ";
  real _t0BA2 = 0.57735026919e0;
  real _t0BA3 = 0.57735026919e0;
  real _t0BA4 = 0.57735026919e0;
  real _t0BA5 = 0.57735026919e0;
  vec3 _t0BA6 = [_t0BA3, _t0BA4, _t0BA5];
  real _t0BA7 = prim •00CE<$[3]; $[3]; $[]> (_t0BA6, refPos0B27);
  real _t0BA8 = prim -0026<$[]> (_t0BA2, _t0BA7);
  real _t0BA9 = prim |()|00B5<$[]> (_t0BA8);
  string _t0BAA = "signed dist: ";
  real _t0BAB = 0.57735026919e0;
  real _t0BAC = 0.57735026919e0;
  real _t0BAD = 0.57735026919e0;
  real _t0BAE = 0.57735026919e0;
  vec3 _t0BAF = [_t0BAC, _t0BAD, _t0BAE];
  real _t0BB0 = prim •00CE<$[3]; $[3]; $[]> (_t0BAF, refPos0B27);
  real _t0BB1 = prim -0026<$[]> (_t0BAB, _t0BB0);
  string _t0BB2 = " face: ";
  int _t0BB3 = 0;
  string _t0BB4 = " place: ";
  real _t0BB5 = 0.57735026919e0;
  real _t0BB6 = 0.57735026919e0;
  real _t0BB7 = 0.57735026919e0;
  real _t0BB8 = 0.57735026919e0;
  vec3 _t0BB9 = [_t0BB6, _t0BB7, _t0BB8];
  real _t0BBA = prim •00CE<$[3]; $[3]; $[]> (_t0BB9, refPos0B27);
  real _t0BBB = prim -0026<$[]> (_t0BB5, _t0BBA);
  real _t0BBC = 0.57735026919e0;
  real _t0BBD = 0.57735026919e0;
  real _t0BBE = 0.57735026919e0;
  vec3 _t0BBF = [_t0BBC, _t0BBD, _t0BBE];
  real _t0BC0 = prim •00CE<$[3]; $[3]; $[]> (_t0BBF, dPos0B28);
  real _t0BC1 = prim /0055 (_t0BBB, _t0BC0);
  vec3 _t0BC2 = prim *0038<$[3]> (dPos0B28, _t0BC1);
  vec3 _t0BC3 = prim +0017<$[3]> (refPos0B27, _t0BC2);
  string _t0BC4 = " error: ";
  real _t0BC5 = 0.57735026919e0;
  real _t0BC6 = 0.57735026919e0;
  real _t0BC7 = 0.57735026919e0;
  real _t0BC8 = 0.57735026919e0;
  vec3 _t0BC9 = [_t0BC6, _t0BC7, _t0BC8];
  real _t0BCA = 0.57735026919e0;
  real _t0BCB = 0.57735026919e0;
  real _t0BCC = 0.57735026919e0;
  real _t0BCD = 0.57735026919e0;
  vec3 _t0BCE = [_t0BCB, _t0BCC, _t0BCD];
  real _t0BCF = prim •00CE<$[3]; $[3]; $[]> (_t0BCE, refPos0B27);
  real _t0BD0 = prim -0026<$[]> (_t0BCA, _t0BCF);
  real _t0BD1 = 0.57735026919e0;
  real _t0BD2 = 0.57735026919e0;
  real _t0BD3 = 0.57735026919e0;
  vec3 _t0BD4 = [_t0BD1, _t0BD2, _t0BD3];
  real _t0BD5 = prim •00CE<$[3]; $[3]; $[]> (_t0BD4, dPos0B28);
  real _t0BD6 = prim /0055 (_t0BD0, _t0BD5);
  vec3 _t0BD7 = prim *0038<$[3]> (dPos0B28, _t0BD6);
  vec3 _t0BD8 = prim +0017<$[3]> (refPos0B27, _t0BD7);
  real _t0BD9 = prim •00CE<$[3]; $[3]; $[]> (_t0BC9, _t0BD8);
  real _t0BDA = prim -0026<$[]> (_t0BC5, _t0BD9);
  real _t0BDB = prim |()|00B5<$[]> (_t0BDA);
  string _t0BDC = " offset :";
  string _t0BDD = " dp: ";
  string _t0BDE = " otherPossibleTime: ";
  string _t0BDF = "\n";
  print (_t0B2C, _t0B39, _t0B3A, _t0B3F, _t0B40, _t0BA0, _t0BA1, _t0BA9, _t0BAA, _t0BB1, _t0BB2, _t0BB3, _t0BB4, _t0BC3, _t0BC4, _t0BDB, _t0BDC, refPos0B27, _t0BDD, dPos0B28, _t0BDE, faceTime0B2B, _t0BDF);
  real _t0BE0 = 0.57735026919e0;
  real _t0BE1 = 0.57735026919e0;
  real _t0BE2 = 0.57735026919e0;
  real _t0BE3 = 0.57735026919e0;
  vec3 _t0BE4 = [_t0BE1, _t0BE2, _t0BE3];
  real _t0BE5 = prim •00CE<$[3]; $[3]; $[]> (_t0BE4, refPos0B27);
  real _t0BE6 = prim -0026<$[]> (_t0BE0, _t0BE5);
  real _t0BE7 = 0.57735026919e0;
  real _t0BE8 = 0.57735026919e0;
  real _t0BE9 = 0.57735026919e0;
  vec3 _t0BEA = [_t0BE7, _t0BE8, _t0BE9];
  real _t0BEB = prim •00CE<$[3]; $[3]; $[]> (_t0BEA, dPos0B28);
  real _t0BEC = prim /0055 (_t0BE6, _t0BEB);
  real _t0BED = -0.1e-7;
  bool _t0BEE = prim >=007E (_t0BEC, _t0BED);
  real _t0BEF = 0.57735026919e0;
  real _t0BF0 = 0.57735026919e0;
  real _t0BF1 = 0.57735026919e0;
  real _t0BF2 = 0.57735026919e0;
  vec3 _t0BF3 = [_t0BF0, _t0BF1, _t0BF2];
  real _t0BF4 = prim •00CE<$[3]; $[3]; $[]> (_t0BF3, refPos0B27);
  real _t0BF5 = prim -0026<$[]> (_t0BEF, _t0BF4);
  real _t0BF6 = 0.57735026919e0;
  real _t0BF7 = 0.57735026919e0;
  real _t0BF8 = 0.57735026919e0;
  vec3 _t0BF9 = [_t0BF6, _t0BF7, _t0BF8];
  real _t0BFA = prim •00CE<$[3]; $[3]; $[]> (_t0BF9, dPos0B28);
  real _t0BFB = prim /0055 (_t0BF5, _t0BFA);
  bool _t0BFC = prim >0080 (time0B29, _t0BFB);
  real _t0BFD = 0.57735026919e0;
  real _t0BFE = 0.57735026919e0;
  real _t0BFF = 0.57735026919e0;
  vec3 _t0C00 = [_t0BFD, _t0BFE, _t0BFF];
  real _t0C01 = prim •00CE<$[3]; $[3]; $[]> (_t0C00, dPos0B28);
  real _t0C02 = prim |()|00B5<$[]> (_t0C01);
  real _t0C03 = 0.1e-7;
  bool _t0C04 = prim >=007E (_t0C02, _t0C03);
  bool _t0C05 = prim $and01C4 (_t0BFC, _t0C04);
  bool _t0C06 = prim $and01C4 (_t0BEE, _t0C05);
  if _t0C06 {
    real _t0C07 = 0.1e1;
    real _t0C08 = 0.1e-7;
    real _t0C09 = prim +0017<$[]> (_t0C07, _t0C08);
    real _t0C0A = 0.1e1;
    real _t0C0B = 0.1e1;
    real _t0C0C = 0.1e1;
    vec3 _t0C0D = [_t0C0A, _t0C0B, _t0C0C];
    real _t0C0E = 0.57735026919e0;
    real _t0C0F = 0.57735026919e0;
    real _t0C10 = 0.57735026919e0;
    real _t0C11 = 0.57735026919e0;
    vec3 _t0C12 = [_t0C0F, _t0C10, _t0C11];
    real _t0C13 = prim •00CE<$[3]; $[3]; $[]> (_t0C12, refPos0B27);
    real _t0C14 = prim -0026<$[]> (_t0C0E, _t0C13);
    real _t0C15 = 0.57735026919e0;
    real _t0C16 = 0.57735026919e0;
    real _t0C17 = 0.57735026919e0;
    vec3 _t0C18 = [_t0C15, _t0C16, _t0C17];
    real _t0C19 = prim •00CE<$[3]; $[3]; $[]> (_t0C18, dPos0B28);
    real _t0C1A = prim /0055 (_t0C14, _t0C19);
    vec3 _t0C1B = prim *0038<$[3]> (dPos0B28, _t0C1A);
    vec3 _t0C1C = prim +0017<$[3]> (refPos0B27, _t0C1B);
    real _t0C1D = prim •00CE<$[3]; $[3]; $[]> (_t0C0D, _t0C1C);
    bool _t0C1E = prim >0080 (_t0C09, _t0C1D);
    real _t0C1F = 0.1e-7;
    real _t0C20 = 0.1e-7;
    real _t0C21 = 0.1e-7;
    vec3 _t0C22 = [_t0C1F, _t0C20, _t0C21];
    real _t0C23 = 0.57735026919e0;
    real _t0C24 = 0.57735026919e0;
    real _t0C25 = 0.57735026919e0;
    real _t0C26 = 0.57735026919e0;
    vec3 _t0C27 = [_t0C24, _t0C25, _t0C26];
    real _t0C28 = prim •00CE<$[3]; $[3]; $[]> (_t0C27, refPos0B27);
    real _t0C29 = prim -0026<$[]> (_t0C23, _t0C28);
    real _t0C2A = 0.57735026919e0;
    real _t0C2B = 0.57735026919e0;
    real _t0C2C = 0.57735026919e0;
    vec3 _t0C2D = [_t0C2A, _t0C2B, _t0C2C];
    real _t0C2E = prim •00CE<$[3]; $[3]; $[]> (_t0C2D, dPos0B28);
    real _t0C2F = prim /0055 (_t0C29, _t0C2E);
    vec3 _t0C30 = prim *0038<$[3]> (dPos0B28, _t0C2F);
    vec3 _t0C31 = prim +0017<$[3]> (refPos0B27, _t0C30);
    vec3 _t0C32 = prim +0017<$[3]> (_t0C22, _t0C31);
    real _t0C33 = _t0C32[0];
    real _t0C34 = -0.e0;
    bool _t0C35 = prim >0080 (_t0C33, _t0C34);
    real _t0C36 = 0.1e-7;
    real _t0C37 = 0.1e-7;
    real _t0C38 = 0.1e-7;
    vec3 _t0C39 = [_t0C36, _t0C37, _t0C38];
    real _t0C3A = 0.57735026919e0;
    real _t0C3B = 0.57735026919e0;
    real _t0C3C = 0.57735026919e0;
    real _t0C3D = 0.57735026919e0;
    vec3 _t0C3E = [_t0C3B, _t0C3C, _t0C3D];
    real _t0C3F = prim •00CE<$[3]; $[3]; $[]> (_t0C3E, refPos0B27);
    real _t0C40 = prim -0026<$[]> (_t0C3A, _t0C3F);
    real _t0C41 = 0.57735026919e0;
    real _t0C42 = 0.57735026919e0;
    real _t0C43 = 0.57735026919e0;
    vec3 _t0C44 = [_t0C41, _t0C42, _t0C43];
    real _t0C45 = prim •00CE<$[3]; $[3]; $[]> (_t0C44, dPos0B28);
    real _t0C46 = prim /0055 (_t0C40, _t0C45);
    vec3 _t0C47 = prim *0038<$[3]> (dPos0B28, _t0C46);
    vec3 _t0C48 = prim +0017<$[3]> (refPos0B27, _t0C47);
    vec3 _t0C49 = prim +0017<$[3]> (_t0C39, _t0C48);
    real _t0C4A = _t0C49[1];
    real _t0C4B = -0.e0;
    bool _t0C4C = prim >0080 (_t0C4A, _t0C4B);
    real _t0C4D = 0.1e-7;
    real _t0C4E = 0.1e-7;
    real _t0C4F = 0.1e-7;
    vec3 _t0C50 = [_t0C4D, _t0C4E, _t0C4F];
    real _t0C51 = 0.57735026919e0;
    real _t0C52 = 0.57735026919e0;
    real _t0C53 = 0.57735026919e0;
    real _t0C54 = 0.57735026919e0;
    vec3 _t0C55 = [_t0C52, _t0C53, _t0C54];
    real _t0C56 = prim •00CE<$[3]; $[3]; $[]> (_t0C55, refPos0B27);
    real _t0C57 = prim -0026<$[]> (_t0C51, _t0C56);
    real _t0C58 = 0.57735026919e0;
    real _t0C59 = 0.57735026919e0;
    real _t0C5A = 0.57735026919e0;
    vec3 _t0C5B = [_t0C58, _t0C59, _t0C5A];
    real _t0C5C = prim •00CE<$[3]; $[3]; $[]> (_t0C5B, dPos0B28);
    real _t0C5D = prim /0055 (_t0C57, _t0C5C);
    vec3 _t0C5E = prim *0038<$[3]> (dPos0B28, _t0C5D);
    vec3 _t0C5F = prim +0017<$[3]> (refPos0B27, _t0C5E);
    vec3 _t0C60 = prim +0017<$[3]> (_t0C50, _t0C5F);
    real _t0C61 = _t0C60[2];
    real _t0C62 = -0.e0;
    bool _t0C63 = prim >0080 (_t0C61, _t0C62);
    bool _t0C64 = prim $and01C4 (_t0C4C, _t0C63);
    bool _t0C65 = prim $and01C4 (_t0C35, _t0C64);
    bool _t0C66 = prim $and01C4 (_t0C1E, _t0C65);
    if _t0C66 {
      string _t0C67 = "Saving at this face!";
      real _t0C68 = 0.57735026919e0;
      real _t0C69 = 0.57735026919e0;
      real _t0C6A = 0.57735026919e0;
      real _t0C6B = 0.57735026919e0;
      vec3 _t0C6C = [_t0C69, _t0C6A, _t0C6B];
      real _t0C6D = prim •00CE<$[3]; $[3]; $[]> (_t0C6C, refPos0B27);
      real _t0C6E = prim -0026<$[]> (_t0C68, _t0C6D);
      real _t0C6F = 0.57735026919e0;
      real _t0C70 = 0.57735026919e0;
      real _t0C71 = 0.57735026919e0;
      vec3 _t0C72 = [_t0C6F, _t0C70, _t0C71];
      real _t0C73 = prim •00CE<$[3]; $[3]; $[]> (_t0C72, dPos0B28);
      real _t0C74 = prim /0055 (_t0C6E, _t0C73);
      real _t0C75 = 0.57735026919e0;
      real _t0C76 = 0.57735026919e0;
      real _t0C77 = 0.57735026919e0;
      real _t0C78 = 0.57735026919e0;
      vec3 _t0C79 = [_t0C76, _t0C77, _t0C78];
      real _t0C7A = prim •00CE<$[3]; $[3]; $[]> (_t0C79, refPos0B27);
      real _t0C7B = prim -0026<$[]> (_t0C75, _t0C7A);
      real _t0C7C = 0.57735026919e0;
      real _t0C7D = 0.57735026919e0;
      real _t0C7E = 0.57735026919e0;
      vec3 _t0C7F = [_t0C7C, _t0C7D, _t0C7E];
      real _t0C80 = prim •00CE<$[3]; $[3]; $[]> (_t0C7F, dPos0B28);
      real _t0C81 = prim /0055 (_t0C7B, _t0C80);
      bool _t0C82 = prim >0080 (time0B29, _t0C81);
      string _t0C83 = "\n";
      print (_t0C67, _t0C74, _t0C82, _t0C83);
      real _t0C84 = 0.57735026919e0;
      real _t0C85 = 0.57735026919e0;
      real _t0C86 = 0.57735026919e0;
      real _t0C87 = 0.57735026919e0;
      vec3 _t0C88 = [_t0C85, _t0C86, _t0C87];
      real _t0C89 = prim •00CE<$[3]; $[3]; $[]> (_t0C88, refPos0B27);
      real _t0C8A = prim -0026<$[]> (_t0C84, _t0C89);
      real _t0C8B = 0.57735026919e0;
      real _t0C8C = 0.57735026919e0;
      real _t0C8D = 0.57735026919e0;
      vec3 _t0C8E = [_t0C8B, _t0C8C, _t0C8D];
      real _t0C8F = prim •00CE<$[3]; $[3]; $[]> (_t0C8E, dPos0B28);
      time0B29 = prim /0055 (_t0C8A, _t0C8F);
      face0B2A = 0;
    }
  }
  string _t0C90 = "\ntest :";
  real _t0C91 = 0.e0;
  real _t0C92 = -0.1e1;
  real _t0C93 = 0.e0;
  real _t0C94 = 0.e0;
  vec3 _t0C95 = [_t0C92, _t0C93, _t0C94];
  real _t0C96 = prim •00CE<$[3]; $[3]; $[]> (_t0C95, refPos0B27);
  real _t0C97 = prim -0026<$[]> (_t0C91, _t0C96);
  real _t0C98 = -0.1e1;
  real _t0C99 = 0.e0;
  real _t0C9A = 0.e0;
  vec3 _t0C9B = [_t0C98, _t0C99, _t0C9A];
  real _t0C9C = prim •00CE<$[3]; $[3]; $[]> (_t0C9B, dPos0B28);
  real _t0C9D = prim /0055 (_t0C97, _t0C9C);
  string _t0C9E = " test2: ";
  real _t0C9F = -0.1e1;
  real _t0CA0 = 0.e0;
  real _t0CA1 = 0.e0;
  vec3 _t0CA2 = [_t0C9F, _t0CA0, _t0CA1];
  real _t0CA3 = prim •00CE<$[3]; $[3]; $[]> (_t0CA2, dPos0B28);
  string _t0CA4 = " insideTest: ";
  real _t0CA5 = 0.1e1;
  real _t0CA6 = 0.1e-7;
  real _t0CA7 = prim +0017<$[]> (_t0CA5, _t0CA6);
  real _t0CA8 = 0.1e1;
  real _t0CA9 = 0.1e1;
  real _t0CAA = 0.1e1;
  vec3 _t0CAB = [_t0CA8, _t0CA9, _t0CAA];
  real _t0CAC = 0.e0;
  real _t0CAD = -0.1e1;
  real _t0CAE = 0.e0;
  real _t0CAF = 0.e0;
  vec3 _t0CB0 = [_t0CAD, _t0CAE, _t0CAF];
  real _t0CB1 = prim •00CE<$[3]; $[3]; $[]> (_t0CB0, refPos0B27);
  real _t0CB2 = prim -0026<$[]> (_t0CAC, _t0CB1);
  real _t0CB3 = -0.1e1;
  real _t0CB4 = 0.e0;
  real _t0CB5 = 0.e0;
  vec3 _t0CB6 = [_t0CB3, _t0CB4, _t0CB5];
  real _t0CB7 = prim •00CE<$[3]; $[3]; $[]> (_t0CB6, dPos0B28);
  real _t0CB8 = prim /0055 (_t0CB2, _t0CB7);
  vec3 _t0CB9 = prim *0038<$[3]> (dPos0B28, _t0CB8);
  vec3 _t0CBA = prim +0017<$[3]> (refPos0B27, _t0CB9);
  real _t0CBB = prim •00CE<$[3]; $[3]; $[]> (_t0CAB, _t0CBA);
  bool _t0CBC = prim >0080 (_t0CA7, _t0CBB);
  real _t0CBD = 0.1e-7;
  real _t0CBE = 0.1e-7;
  real _t0CBF = 0.1e-7;
  vec3 _t0CC0 = [_t0CBD, _t0CBE, _t0CBF];
  real _t0CC1 = 0.e0;
  real _t0CC2 = -0.1e1;
  real _t0CC3 = 0.e0;
  real _t0CC4 = 0.e0;
  vec3 _t0CC5 = [_t0CC2, _t0CC3, _t0CC4];
  real _t0CC6 = prim •00CE<$[3]; $[3]; $[]> (_t0CC5, refPos0B27);
  real _t0CC7 = prim -0026<$[]> (_t0CC1, _t0CC6);
  real _t0CC8 = -0.1e1;
  real _t0CC9 = 0.e0;
  real _t0CCA = 0.e0;
  vec3 _t0CCB = [_t0CC8, _t0CC9, _t0CCA];
  real _t0CCC = prim •00CE<$[3]; $[3]; $[]> (_t0CCB, dPos0B28);
  real _t0CCD = prim /0055 (_t0CC7, _t0CCC);
  vec3 _t0CCE = prim *0038<$[3]> (dPos0B28, _t0CCD);
  vec3 _t0CCF = prim +0017<$[3]> (refPos0B27, _t0CCE);
  vec3 _t0CD0 = prim +0017<$[3]> (_t0CC0, _t0CCF);
  real _t0CD1 = _t0CD0[0];
  real _t0CD2 = -0.e0;
  bool _t0CD3 = prim >0080 (_t0CD1, _t0CD2);
  real _t0CD4 = 0.1e-7;
  real _t0CD5 = 0.1e-7;
  real _t0CD6 = 0.1e-7;
  vec3 _t0CD7 = [_t0CD4, _t0CD5, _t0CD6];
  real _t0CD8 = 0.e0;
  real _t0CD9 = -0.1e1;
  real _t0CDA = 0.e0;
  real _t0CDB = 0.e0;
  vec3 _t0CDC = [_t0CD9, _t0CDA, _t0CDB];
  real _t0CDD = prim •00CE<$[3]; $[3]; $[]> (_t0CDC, refPos0B27);
  real _t0CDE = prim -0026<$[]> (_t0CD8, _t0CDD);
  real _t0CDF = -0.1e1;
  real _t0CE0 = 0.e0;
  real _t0CE1 = 0.e0;
  vec3 _t0CE2 = [_t0CDF, _t0CE0, _t0CE1];
  real _t0CE3 = prim •00CE<$[3]; $[3]; $[]> (_t0CE2, dPos0B28);
  real _t0CE4 = prim /0055 (_t0CDE, _t0CE3);
  vec3 _t0CE5 = prim *0038<$[3]> (dPos0B28, _t0CE4);
  vec3 _t0CE6 = prim +0017<$[3]> (refPos0B27, _t0CE5);
  vec3 _t0CE7 = prim +0017<$[3]> (_t0CD7, _t0CE6);
  real _t0CE8 = _t0CE7[1];
  real _t0CE9 = -0.e0;
  bool _t0CEA = prim >0080 (_t0CE8, _t0CE9);
  real _t0CEB = 0.1e-7;
  real _t0CEC = 0.1e-7;
  real _t0CED = 0.1e-7;
  vec3 _t0CEE = [_t0CEB, _t0CEC, _t0CED];
  real _t0CEF = 0.e0;
  real _t0CF0 = -0.1e1;
  real _t0CF1 = 0.e0;
  real _t0CF2 = 0.e0;
  vec3 _t0CF3 = [_t0CF0, _t0CF1, _t0CF2];
  real _t0CF4 = prim •00CE<$[3]; $[3]; $[]> (_t0CF3, refPos0B27);
  real _t0CF5 = prim -0026<$[]> (_t0CEF, _t0CF4);
  real _t0CF6 = -0.1e1;
  real _t0CF7 = 0.e0;
  real _t0CF8 = 0.e0;
  vec3 _t0CF9 = [_t0CF6, _t0CF7, _t0CF8];
  real _t0CFA = prim •00CE<$[3]; $[3]; $[]> (_t0CF9, dPos0B28);
  real _t0CFB = prim /0055 (_t0CF5, _t0CFA);
  vec3 _t0CFC = prim *0038<$[3]> (dPos0B28, _t0CFB);
  vec3 _t0CFD = prim +0017<$[3]> (refPos0B27, _t0CFC);
  vec3 _t0CFE = prim +0017<$[3]> (_t0CEE, _t0CFD);
  real _t0CFF = _t0CFE[2];
  real _t0D00 = -0.e0;
  bool _t0D01 = prim >0080 (_t0CFF, _t0D00);
  bool _t0D02 = prim $and01C4 (_t0CEA, _t0D01);
  bool _t0D03 = prim $and01C4 (_t0CD3, _t0D02);
  bool _t0D04 = prim $and01C4 (_t0CBC, _t0D03);
  string _t0D05 = " dist: ";
  real _t0D06 = 0.e0;
  real _t0D07 = -0.1e1;
  real _t0D08 = 0.e0;
  real _t0D09 = 0.e0;
  vec3 _t0D0A = [_t0D07, _t0D08, _t0D09];
  real _t0D0B = prim •00CE<$[3]; $[3]; $[]> (_t0D0A, refPos0B27);
  real _t0D0C = prim -0026<$[]> (_t0D06, _t0D0B);
  real _t0D0D = prim |()|00B5<$[]> (_t0D0C);
  string _t0D0E = "signed dist: ";
  real _t0D0F = 0.e0;
  real _t0D10 = -0.1e1;
  real _t0D11 = 0.e0;
  real _t0D12 = 0.e0;
  vec3 _t0D13 = [_t0D10, _t0D11, _t0D12];
  real _t0D14 = prim •00CE<$[3]; $[3]; $[]> (_t0D13, refPos0B27);
  real _t0D15 = prim -0026<$[]> (_t0D0F, _t0D14);
  string _t0D16 = " face: ";
  int _t0D17 = 1;
  string _t0D18 = " place: ";
  real _t0D19 = 0.e0;
  real _t0D1A = -0.1e1;
  real _t0D1B = 0.e0;
  real _t0D1C = 0.e0;
  vec3 _t0D1D = [_t0D1A, _t0D1B, _t0D1C];
  real _t0D1E = prim •00CE<$[3]; $[3]; $[]> (_t0D1D, refPos0B27);
  real _t0D1F = prim -0026<$[]> (_t0D19, _t0D1E);
  real _t0D20 = -0.1e1;
  real _t0D21 = 0.e0;
  real _t0D22 = 0.e0;
  vec3 _t0D23 = [_t0D20, _t0D21, _t0D22];
  real _t0D24 = prim •00CE<$[3]; $[3]; $[]> (_t0D23, dPos0B28);
  real _t0D25 = prim /0055 (_t0D1F, _t0D24);
  vec3 _t0D26 = prim *0038<$[3]> (dPos0B28, _t0D25);
  vec3 _t0D27 = prim +0017<$[3]> (refPos0B27, _t0D26);
  string _t0D28 = " error: ";
  real _t0D29 = 0.e0;
  real _t0D2A = -0.1e1;
  real _t0D2B = 0.e0;
  real _t0D2C = 0.e0;
  vec3 _t0D2D = [_t0D2A, _t0D2B, _t0D2C];
  real _t0D2E = 0.e0;
  real _t0D2F = -0.1e1;
  real _t0D30 = 0.e0;
  real _t0D31 = 0.e0;
  vec3 _t0D32 = [_t0D2F, _t0D30, _t0D31];
  real _t0D33 = prim •00CE<$[3]; $[3]; $[]> (_t0D32, refPos0B27);
  real _t0D34 = prim -0026<$[]> (_t0D2E, _t0D33);
  real _t0D35 = -0.1e1;
  real _t0D36 = 0.e0;
  real _t0D37 = 0.e0;
  vec3 _t0D38 = [_t0D35, _t0D36, _t0D37];
  real _t0D39 = prim •00CE<$[3]; $[3]; $[]> (_t0D38, dPos0B28);
  real _t0D3A = prim /0055 (_t0D34, _t0D39);
  vec3 _t0D3B = prim *0038<$[3]> (dPos0B28, _t0D3A);
  vec3 _t0D3C = prim +0017<$[3]> (refPos0B27, _t0D3B);
  real _t0D3D = prim •00CE<$[3]; $[3]; $[]> (_t0D2D, _t0D3C);
  real _t0D3E = prim -0026<$[]> (_t0D29, _t0D3D);
  real _t0D3F = prim |()|00B5<$[]> (_t0D3E);
  string _t0D40 = " offset :";
  string _t0D41 = " dp: ";
  string _t0D42 = " otherPossibleTime: ";
  string _t0D43 = "\n";
  print (_t0C90, _t0C9D, _t0C9E, _t0CA3, _t0CA4, _t0D04, _t0D05, _t0D0D, _t0D0E, _t0D15, _t0D16, _t0D17, _t0D18, _t0D27, _t0D28, _t0D3F, _t0D40, refPos0B27, _t0D41, dPos0B28, _t0D42, faceTime0B2B, _t0D43);
  real _t0D44 = 0.e0;
  real _t0D45 = -0.1e1;
  real _t0D46 = 0.e0;
  real _t0D47 = 0.e0;
  vec3 _t0D48 = [_t0D45, _t0D46, _t0D47];
  real _t0D49 = prim •00CE<$[3]; $[3]; $[]> (_t0D48, refPos0B27);
  real _t0D4A = prim -0026<$[]> (_t0D44, _t0D49);
  real _t0D4B = -0.1e1;
  real _t0D4C = 0.e0;
  real _t0D4D = 0.e0;
  vec3 _t0D4E = [_t0D4B, _t0D4C, _t0D4D];
  real _t0D4F = prim •00CE<$[3]; $[3]; $[]> (_t0D4E, dPos0B28);
  real _t0D50 = prim /0055 (_t0D4A, _t0D4F);
  real _t0D51 = -0.1e-7;
  bool _t0D52 = prim >=007E (_t0D50, _t0D51);
  real _t0D53 = 0.e0;
  real _t0D54 = -0.1e1;
  real _t0D55 = 0.e0;
  real _t0D56 = 0.e0;
  vec3 _t0D57 = [_t0D54, _t0D55, _t0D56];
  real _t0D58 = prim •00CE<$[3]; $[3]; $[]> (_t0D57, refPos0B27);
  real _t0D59 = prim -0026<$[]> (_t0D53, _t0D58);
  real _t0D5A = -0.1e1;
  real _t0D5B = 0.e0;
  real _t0D5C = 0.e0;
  vec3 _t0D5D = [_t0D5A, _t0D5B, _t0D5C];
  real _t0D5E = prim •00CE<$[3]; $[3]; $[]> (_t0D5D, dPos0B28);
  real _t0D5F = prim /0055 (_t0D59, _t0D5E);
  bool _t0D60 = prim >0080 (time0B29, _t0D5F);
  real _t0D61 = -0.1e1;
  real _t0D62 = 0.e0;
  real _t0D63 = 0.e0;
  vec3 _t0D64 = [_t0D61, _t0D62, _t0D63];
  real _t0D65 = prim •00CE<$[3]; $[3]; $[]> (_t0D64, dPos0B28);
  real _t0D66 = prim |()|00B5<$[]> (_t0D65);
  real _t0D67 = 0.1e-7;
  bool _t0D68 = prim >=007E (_t0D66, _t0D67);
  bool _t0D69 = prim $and01C4 (_t0D60, _t0D68);
  bool _t0D6A = prim $and01C4 (_t0D52, _t0D69);
  if _t0D6A {
    real _t0D6B = 0.1e1;
    real _t0D6C = 0.1e-7;
    real _t0D6D = prim +0017<$[]> (_t0D6B, _t0D6C);
    real _t0D6E = 0.1e1;
    real _t0D6F = 0.1e1;
    real _t0D70 = 0.1e1;
    vec3 _t0D71 = [_t0D6E, _t0D6F, _t0D70];
    real _t0D72 = 0.e0;
    real _t0D73 = -0.1e1;
    real _t0D74 = 0.e0;
    real _t0D75 = 0.e0;
    vec3 _t0D76 = [_t0D73, _t0D74, _t0D75];
    real _t0D77 = prim •00CE<$[3]; $[3]; $[]> (_t0D76, refPos0B27);
    real _t0D78 = prim -0026<$[]> (_t0D72, _t0D77);
    real _t0D79 = -0.1e1;
    real _t0D7A = 0.e0;
    real _t0D7B = 0.e0;
    vec3 _t0D7C = [_t0D79, _t0D7A, _t0D7B];
    real _t0D7D = prim •00CE<$[3]; $[3]; $[]> (_t0D7C, dPos0B28);
    real _t0D7E = prim /0055 (_t0D78, _t0D7D);
    vec3 _t0D7F = prim *0038<$[3]> (dPos0B28, _t0D7E);
    vec3 _t0D80 = prim +0017<$[3]> (refPos0B27, _t0D7F);
    real _t0D81 = prim •00CE<$[3]; $[3]; $[]> (_t0D71, _t0D80);
    bool _t0D82 = prim >0080 (_t0D6D, _t0D81);
    real _t0D83 = 0.1e-7;
    real _t0D84 = 0.1e-7;
    real _t0D85 = 0.1e-7;
    vec3 _t0D86 = [_t0D83, _t0D84, _t0D85];
    real _t0D87 = 0.e0;
    real _t0D88 = -0.1e1;
    real _t0D89 = 0.e0;
    real _t0D8A = 0.e0;
    vec3 _t0D8B = [_t0D88, _t0D89, _t0D8A];
    real _t0D8C = prim •00CE<$[3]; $[3]; $[]> (_t0D8B, refPos0B27);
    real _t0D8D = prim -0026<$[]> (_t0D87, _t0D8C);
    real _t0D8E = -0.1e1;
    real _t0D8F = 0.e0;
    real _t0D90 = 0.e0;
    vec3 _t0D91 = [_t0D8E, _t0D8F, _t0D90];
    real _t0D92 = prim •00CE<$[3]; $[3]; $[]> (_t0D91, dPos0B28);
    real _t0D93 = prim /0055 (_t0D8D, _t0D92);
    vec3 _t0D94 = prim *0038<$[3]> (dPos0B28, _t0D93);
    vec3 _t0D95 = prim +0017<$[3]> (refPos0B27, _t0D94);
    vec3 _t0D96 = prim +0017<$[3]> (_t0D86, _t0D95);
    real _t0D97 = _t0D96[0];
    real _t0D98 = -0.e0;
    bool _t0D99 = prim >0080 (_t0D97, _t0D98);
    real _t0D9A = 0.1e-7;
    real _t0D9B = 0.1e-7;
    real _t0D9C = 0.1e-7;
    vec3 _t0D9D = [_t0D9A, _t0D9B, _t0D9C];
    real _t0D9E = 0.e0;
    real _t0D9F = -0.1e1;
    real _t0DA0 = 0.e0;
    real _t0DA1 = 0.e0;
    vec3 _t0DA2 = [_t0D9F, _t0DA0, _t0DA1];
    real _t0DA3 = prim •00CE<$[3]; $[3]; $[]> (_t0DA2, refPos0B27);
    real _t0DA4 = prim -0026<$[]> (_t0D9E, _t0DA3);
    real _t0DA5 = -0.1e1;
    real _t0DA6 = 0.e0;
    real _t0DA7 = 0.e0;
    vec3 _t0DA8 = [_t0DA5, _t0DA6, _t0DA7];
    real _t0DA9 = prim •00CE<$[3]; $[3]; $[]> (_t0DA8, dPos0B28);
    real _t0DAA = prim /0055 (_t0DA4, _t0DA9);
    vec3 _t0DAB = prim *0038<$[3]> (dPos0B28, _t0DAA);
    vec3 _t0DAC = prim +0017<$[3]> (refPos0B27, _t0DAB);
    vec3 _t0DAD = prim +0017<$[3]> (_t0D9D, _t0DAC);
    real _t0DAE = _t0DAD[1];
    real _t0DAF = -0.e0;
    bool _t0DB0 = prim >0080 (_t0DAE, _t0DAF);
    real _t0DB1 = 0.1e-7;
    real _t0DB2 = 0.1e-7;
    real _t0DB3 = 0.1e-7;
    vec3 _t0DB4 = [_t0DB1, _t0DB2, _t0DB3];
    real _t0DB5 = 0.e0;
    real _t0DB6 = -0.1e1;
    real _t0DB7 = 0.e0;
    real _t0DB8 = 0.e0;
    vec3 _t0DB9 = [_t0DB6, _t0DB7, _t0DB8];
    real _t0DBA = prim •00CE<$[3]; $[3]; $[]> (_t0DB9, refPos0B27);
    real _t0DBB = prim -0026<$[]> (_t0DB5, _t0DBA);
    real _t0DBC = -0.1e1;
    real _t0DBD = 0.e0;
    real _t0DBE = 0.e0;
    vec3 _t0DBF = [_t0DBC, _t0DBD, _t0DBE];
    real _t0DC0 = prim •00CE<$[3]; $[3]; $[]> (_t0DBF, dPos0B28);
    real _t0DC1 = prim /0055 (_t0DBB, _t0DC0);
    vec3 _t0DC2 = prim *0038<$[3]> (dPos0B28, _t0DC1);
    vec3 _t0DC3 = prim +0017<$[3]> (refPos0B27, _t0DC2);
    vec3 _t0DC4 = prim +0017<$[3]> (_t0DB4, _t0DC3);
    real _t0DC5 = _t0DC4[2];
    real _t0DC6 = -0.e0;
    bool _t0DC7 = prim >0080 (_t0DC5, _t0DC6);
    bool _t0DC8 = prim $and01C4 (_t0DB0, _t0DC7);
    bool _t0DC9 = prim $and01C4 (_t0D99, _t0DC8);
    bool _t0DCA = prim $and01C4 (_t0D82, _t0DC9);
    if _t0DCA {
      string _t0DCB = "Saving at this face!";
      real _t0DCC = 0.e0;
      real _t0DCD = -0.1e1;
      real _t0DCE = 0.e0;
      real _t0DCF = 0.e0;
      vec3 _t0DD0 = [_t0DCD, _t0DCE, _t0DCF];
      real _t0DD1 = prim •00CE<$[3]; $[3]; $[]> (_t0DD0, refPos0B27);
      real _t0DD2 = prim -0026<$[]> (_t0DCC, _t0DD1);
      real _t0DD3 = -0.1e1;
      real _t0DD4 = 0.e0;
      real _t0DD5 = 0.e0;
      vec3 _t0DD6 = [_t0DD3, _t0DD4, _t0DD5];
      real _t0DD7 = prim •00CE<$[3]; $[3]; $[]> (_t0DD6, dPos0B28);
      real _t0DD8 = prim /0055 (_t0DD2, _t0DD7);
      real _t0DD9 = 0.e0;
      real _t0DDA = -0.1e1;
      real _t0DDB = 0.e0;
      real _t0DDC = 0.e0;
      vec3 _t0DDD = [_t0DDA, _t0DDB, _t0DDC];
      real _t0DDE = prim •00CE<$[3]; $[3]; $[]> (_t0DDD, refPos0B27);
      real _t0DDF = prim -0026<$[]> (_t0DD9, _t0DDE);
      real _t0DE0 = -0.1e1;
      real _t0DE1 = 0.e0;
      real _t0DE2 = 0.e0;
      vec3 _t0DE3 = [_t0DE0, _t0DE1, _t0DE2];
      real _t0DE4 = prim •00CE<$[3]; $[3]; $[]> (_t0DE3, dPos0B28);
      real _t0DE5 = prim /0055 (_t0DDF, _t0DE4);
      bool _t0DE6 = prim >0080 (time0B29, _t0DE5);
      string _t0DE7 = "\n";
      print (_t0DCB, _t0DD8, _t0DE6, _t0DE7);
      real _t0DE8 = 0.e0;
      real _t0DE9 = -0.1e1;
      real _t0DEA = 0.e0;
      real _t0DEB = 0.e0;
      vec3 _t0DEC = [_t0DE9, _t0DEA, _t0DEB];
      real _t0DED = prim •00CE<$[3]; $[3]; $[]> (_t0DEC, refPos0B27);
      real _t0DEE = prim -0026<$[]> (_t0DE8, _t0DED);
      real _t0DEF = -0.1e1;
      real _t0DF0 = 0.e0;
      real _t0DF1 = 0.e0;
      vec3 _t0DF2 = [_t0DEF, _t0DF0, _t0DF1];
      real _t0DF3 = prim •00CE<$[3]; $[3]; $[]> (_t0DF2, dPos0B28);
      time0B29 = prim /0055 (_t0DEE, _t0DF3);
      face0B2A = 1;
    }
  }
  string _t0DF4 = "\ntest :";
  real _t0DF5 = 0.e0;
  real _t0DF6 = 0.e0;
  real _t0DF7 = -0.1e1;
  real _t0DF8 = 0.e0;
  vec3 _t0DF9 = [_t0DF6, _t0DF7, _t0DF8];
  real _t0DFA = prim •00CE<$[3]; $[3]; $[]> (_t0DF9, refPos0B27);
  real _t0DFB = prim -0026<$[]> (_t0DF5, _t0DFA);
  real _t0DFC = 0.e0;
  real _t0DFD = -0.1e1;
  real _t0DFE = 0.e0;
  vec3 _t0DFF = [_t0DFC, _t0DFD, _t0DFE];
  real _t0E00 = prim •00CE<$[3]; $[3]; $[]> (_t0DFF, dPos0B28);
  real _t0E01 = prim /0055 (_t0DFB, _t0E00);
  string _t0E02 = " test2: ";
  real _t0E03 = 0.e0;
  real _t0E04 = -0.1e1;
  real _t0E05 = 0.e0;
  vec3 _t0E06 = [_t0E03, _t0E04, _t0E05];
  real _t0E07 = prim •00CE<$[3]; $[3]; $[]> (_t0E06, dPos0B28);
  string _t0E08 = " insideTest: ";
  real _t0E09 = 0.1e1;
  real _t0E0A = 0.1e-7;
  real _t0E0B = prim +0017<$[]> (_t0E09, _t0E0A);
  real _t0E0C = 0.1e1;
  real _t0E0D = 0.1e1;
  real _t0E0E = 0.1e1;
  vec3 _t0E0F = [_t0E0C, _t0E0D, _t0E0E];
  real _t0E10 = 0.e0;
  real _t0E11 = 0.e0;
  real _t0E12 = -0.1e1;
  real _t0E13 = 0.e0;
  vec3 _t0E14 = [_t0E11, _t0E12, _t0E13];
  real _t0E15 = prim •00CE<$[3]; $[3]; $[]> (_t0E14, refPos0B27);
  real _t0E16 = prim -0026<$[]> (_t0E10, _t0E15);
  real _t0E17 = 0.e0;
  real _t0E18 = -0.1e1;
  real _t0E19 = 0.e0;
  vec3 _t0E1A = [_t0E17, _t0E18, _t0E19];
  real _t0E1B = prim •00CE<$[3]; $[3]; $[]> (_t0E1A, dPos0B28);
  real _t0E1C = prim /0055 (_t0E16, _t0E1B);
  vec3 _t0E1D = prim *0038<$[3]> (dPos0B28, _t0E1C);
  vec3 _t0E1E = prim +0017<$[3]> (refPos0B27, _t0E1D);
  real _t0E1F = prim •00CE<$[3]; $[3]; $[]> (_t0E0F, _t0E1E);
  bool _t0E20 = prim >0080 (_t0E0B, _t0E1F);
  real _t0E21 = 0.1e-7;
  real _t0E22 = 0.1e-7;
  real _t0E23 = 0.1e-7;
  vec3 _t0E24 = [_t0E21, _t0E22, _t0E23];
  real _t0E25 = 0.e0;
  real _t0E26 = 0.e0;
  real _t0E27 = -0.1e1;
  real _t0E28 = 0.e0;
  vec3 _t0E29 = [_t0E26, _t0E27, _t0E28];
  real _t0E2A = prim •00CE<$[3]; $[3]; $[]> (_t0E29, refPos0B27);
  real _t0E2B = prim -0026<$[]> (_t0E25, _t0E2A);
  real _t0E2C = 0.e0;
  real _t0E2D = -0.1e1;
  real _t0E2E = 0.e0;
  vec3 _t0E2F = [_t0E2C, _t0E2D, _t0E2E];
  real _t0E30 = prim •00CE<$[3]; $[3]; $[]> (_t0E2F, dPos0B28);
  real _t0E31 = prim /0055 (_t0E2B, _t0E30);
  vec3 _t0E32 = prim *0038<$[3]> (dPos0B28, _t0E31);
  vec3 _t0E33 = prim +0017<$[3]> (refPos0B27, _t0E32);
  vec3 _t0E34 = prim +0017<$[3]> (_t0E24, _t0E33);
  real _t0E35 = _t0E34[0];
  real _t0E36 = -0.e0;
  bool _t0E37 = prim >0080 (_t0E35, _t0E36);
  real _t0E38 = 0.1e-7;
  real _t0E39 = 0.1e-7;
  real _t0E3A = 0.1e-7;
  vec3 _t0E3B = [_t0E38, _t0E39, _t0E3A];
  real _t0E3C = 0.e0;
  real _t0E3D = 0.e0;
  real _t0E3E = -0.1e1;
  real _t0E3F = 0.e0;
  vec3 _t0E40 = [_t0E3D, _t0E3E, _t0E3F];
  real _t0E41 = prim •00CE<$[3]; $[3]; $[]> (_t0E40, refPos0B27);
  real _t0E42 = prim -0026<$[]> (_t0E3C, _t0E41);
  real _t0E43 = 0.e0;
  real _t0E44 = -0.1e1;
  real _t0E45 = 0.e0;
  vec3 _t0E46 = [_t0E43, _t0E44, _t0E45];
  real _t0E47 = prim •00CE<$[3]; $[3]; $[]> (_t0E46, dPos0B28);
  real _t0E48 = prim /0055 (_t0E42, _t0E47);
  vec3 _t0E49 = prim *0038<$[3]> (dPos0B28, _t0E48);
  vec3 _t0E4A = prim +0017<$[3]> (refPos0B27, _t0E49);
  vec3 _t0E4B = prim +0017<$[3]> (_t0E3B, _t0E4A);
  real _t0E4C = _t0E4B[1];
  real _t0E4D = -0.e0;
  bool _t0E4E = prim >0080 (_t0E4C, _t0E4D);
  real _t0E4F = 0.1e-7;
  real _t0E50 = 0.1e-7;
  real _t0E51 = 0.1e-7;
  vec3 _t0E52 = [_t0E4F, _t0E50, _t0E51];
  real _t0E53 = 0.e0;
  real _t0E54 = 0.e0;
  real _t0E55 = -0.1e1;
  real _t0E56 = 0.e0;
  vec3 _t0E57 = [_t0E54, _t0E55, _t0E56];
  real _t0E58 = prim •00CE<$[3]; $[3]; $[]> (_t0E57, refPos0B27);
  real _t0E59 = prim -0026<$[]> (_t0E53, _t0E58);
  real _t0E5A = 0.e0;
  real _t0E5B = -0.1e1;
  real _t0E5C = 0.e0;
  vec3 _t0E5D = [_t0E5A, _t0E5B, _t0E5C];
  real _t0E5E = prim •00CE<$[3]; $[3]; $[]> (_t0E5D, dPos0B28);
  real _t0E5F = prim /0055 (_t0E59, _t0E5E);
  vec3 _t0E60 = prim *0038<$[3]> (dPos0B28, _t0E5F);
  vec3 _t0E61 = prim +0017<$[3]> (refPos0B27, _t0E60);
  vec3 _t0E62 = prim +0017<$[3]> (_t0E52, _t0E61);
  real _t0E63 = _t0E62[2];
  real _t0E64 = -0.e0;
  bool _t0E65 = prim >0080 (_t0E63, _t0E64);
  bool _t0E66 = prim $and01C4 (_t0E4E, _t0E65);
  bool _t0E67 = prim $and01C4 (_t0E37, _t0E66);
  bool _t0E68 = prim $and01C4 (_t0E20, _t0E67);
  string _t0E69 = " dist: ";
  real _t0E6A = 0.e0;
  real _t0E6B = 0.e0;
  real _t0E6C = -0.1e1;
  real _t0E6D = 0.e0;
  vec3 _t0E6E = [_t0E6B, _t0E6C, _t0E6D];
  real _t0E6F = prim •00CE<$[3]; $[3]; $[]> (_t0E6E, refPos0B27);
  real _t0E70 = prim -0026<$[]> (_t0E6A, _t0E6F);
  real _t0E71 = prim |()|00B5<$[]> (_t0E70);
  string _t0E72 = "signed dist: ";
  real _t0E73 = 0.e0;
  real _t0E74 = 0.e0;
  real _t0E75 = -0.1e1;
  real _t0E76 = 0.e0;
  vec3 _t0E77 = [_t0E74, _t0E75, _t0E76];
  real _t0E78 = prim •00CE<$[3]; $[3]; $[]> (_t0E77, refPos0B27);
  real _t0E79 = prim -0026<$[]> (_t0E73, _t0E78);
  string _t0E7A = " face: ";
  int _t0E7B = 2;
  string _t0E7C = " place: ";
  real _t0E7D = 0.e0;
  real _t0E7E = 0.e0;
  real _t0E7F = -0.1e1;
  real _t0E80 = 0.e0;
  vec3 _t0E81 = [_t0E7E, _t0E7F, _t0E80];
  real _t0E82 = prim •00CE<$[3]; $[3]; $[]> (_t0E81, refPos0B27);
  real _t0E83 = prim -0026<$[]> (_t0E7D, _t0E82);
  real _t0E84 = 0.e0;
  real _t0E85 = -0.1e1;
  real _t0E86 = 0.e0;
  vec3 _t0E87 = [_t0E84, _t0E85, _t0E86];
  real _t0E88 = prim •00CE<$[3]; $[3]; $[]> (_t0E87, dPos0B28);
  real _t0E89 = prim /0055 (_t0E83, _t0E88);
  vec3 _t0E8A = prim *0038<$[3]> (dPos0B28, _t0E89);
  vec3 _t0E8B = prim +0017<$[3]> (refPos0B27, _t0E8A);
  string _t0E8C = " error: ";
  real _t0E8D = 0.e0;
  real _t0E8E = 0.e0;
  real _t0E8F = -0.1e1;
  real _t0E90 = 0.e0;
  vec3 _t0E91 = [_t0E8E, _t0E8F, _t0E90];
  real _t0E92 = 0.e0;
  real _t0E93 = 0.e0;
  real _t0E94 = -0.1e1;
  real _t0E95 = 0.e0;
  vec3 _t0E96 = [_t0E93, _t0E94, _t0E95];
  real _t0E97 = prim •00CE<$[3]; $[3]; $[]> (_t0E96, refPos0B27);
  real _t0E98 = prim -0026<$[]> (_t0E92, _t0E97);
  real _t0E99 = 0.e0;
  real _t0E9A = -0.1e1;
  real _t0E9B = 0.e0;
  vec3 _t0E9C = [_t0E99, _t0E9A, _t0E9B];
  real _t0E9D = prim •00CE<$[3]; $[3]; $[]> (_t0E9C, dPos0B28);
  real _t0E9E = prim /0055 (_t0E98, _t0E9D);
  vec3 _t0E9F = prim *0038<$[3]> (dPos0B28, _t0E9E);
  vec3 _t0EA0 = prim +0017<$[3]> (refPos0B27, _t0E9F);
  real _t0EA1 = prim •00CE<$[3]; $[3]; $[]> (_t0E91, _t0EA0);
  real _t0EA2 = prim -0026<$[]> (_t0E8D, _t0EA1);
  real _t0EA3 = prim |()|00B5<$[]> (_t0EA2);
  string _t0EA4 = " offset :";
  string _t0EA5 = " dp: ";
  string _t0EA6 = " otherPossibleTime: ";
  string _t0EA7 = "\n";
  print (_t0DF4, _t0E01, _t0E02, _t0E07, _t0E08, _t0E68, _t0E69, _t0E71, _t0E72, _t0E79, _t0E7A, _t0E7B, _t0E7C, _t0E8B, _t0E8C, _t0EA3, _t0EA4, refPos0B27, _t0EA5, dPos0B28, _t0EA6, faceTime0B2B, _t0EA7);
  real _t0EA8 = 0.e0;
  real _t0EA9 = 0.e0;
  real _t0EAA = -0.1e1;
  real _t0EAB = 0.e0;
  vec3 _t0EAC = [_t0EA9, _t0EAA, _t0EAB];
  real _t0EAD = prim •00CE<$[3]; $[3]; $[]> (_t0EAC, refPos0B27);
  real _t0EAE = prim -0026<$[]> (_t0EA8, _t0EAD);
  real _t0EAF = 0.e0;
  real _t0EB0 = -0.1e1;
  real _t0EB1 = 0.e0;
  vec3 _t0EB2 = [_t0EAF, _t0EB0, _t0EB1];
  real _t0EB3 = prim •00CE<$[3]; $[3]; $[]> (_t0EB2, dPos0B28);
  real _t0EB4 = prim /0055 (_t0EAE, _t0EB3);
  real _t0EB5 = -0.1e-7;
  bool _t0EB6 = prim >=007E (_t0EB4, _t0EB5);
  real _t0EB7 = 0.e0;
  real _t0EB8 = 0.e0;
  real _t0EB9 = -0.1e1;
  real _t0EBA = 0.e0;
  vec3 _t0EBB = [_t0EB8, _t0EB9, _t0EBA];
  real _t0EBC = prim •00CE<$[3]; $[3]; $[]> (_t0EBB, refPos0B27);
  real _t0EBD = prim -0026<$[]> (_t0EB7, _t0EBC);
  real _t0EBE = 0.e0;
  real _t0EBF = -0.1e1;
  real _t0EC0 = 0.e0;
  vec3 _t0EC1 = [_t0EBE, _t0EBF, _t0EC0];
  real _t0EC2 = prim •00CE<$[3]; $[3]; $[]> (_t0EC1, dPos0B28);
  real _t0EC3 = prim /0055 (_t0EBD, _t0EC2);
  bool _t0EC4 = prim >0080 (time0B29, _t0EC3);
  real _t0EC5 = 0.e0;
  real _t0EC6 = -0.1e1;
  real _t0EC7 = 0.e0;
  vec3 _t0EC8 = [_t0EC5, _t0EC6, _t0EC7];
  real _t0EC9 = prim •00CE<$[3]; $[3]; $[]> (_t0EC8, dPos0B28);
  real _t0ECA = prim |()|00B5<$[]> (_t0EC9);
  real _t0ECB = 0.1e-7;
  bool _t0ECC = prim >=007E (_t0ECA, _t0ECB);
  bool _t0ECD = prim $and01C4 (_t0EC4, _t0ECC);
  bool _t0ECE = prim $and01C4 (_t0EB6, _t0ECD);
  if _t0ECE {
    real _t0ECF = 0.1e1;
    real _t0ED0 = 0.1e-7;
    real _t0ED1 = prim +0017<$[]> (_t0ECF, _t0ED0);
    real _t0ED2 = 0.1e1;
    real _t0ED3 = 0.1e1;
    real _t0ED4 = 0.1e1;
    vec3 _t0ED5 = [_t0ED2, _t0ED3, _t0ED4];
    real _t0ED6 = 0.e0;
    real _t0ED7 = 0.e0;
    real _t0ED8 = -0.1e1;
    real _t0ED9 = 0.e0;
    vec3 _t0EDA = [_t0ED7, _t0ED8, _t0ED9];
    real _t0EDB = prim •00CE<$[3]; $[3]; $[]> (_t0EDA, refPos0B27);
    real _t0EDC = prim -0026<$[]> (_t0ED6, _t0EDB);
    real _t0EDD = 0.e0;
    real _t0EDE = -0.1e1;
    real _t0EDF = 0.e0;
    vec3 _t0EE0 = [_t0EDD, _t0EDE, _t0EDF];
    real _t0EE1 = prim •00CE<$[3]; $[3]; $[]> (_t0EE0, dPos0B28);
    real _t0EE2 = prim /0055 (_t0EDC, _t0EE1);
    vec3 _t0EE3 = prim *0038<$[3]> (dPos0B28, _t0EE2);
    vec3 _t0EE4 = prim +0017<$[3]> (refPos0B27, _t0EE3);
    real _t0EE5 = prim •00CE<$[3]; $[3]; $[]> (_t0ED5, _t0EE4);
    bool _t0EE6 = prim >0080 (_t0ED1, _t0EE5);
    real _t0EE7 = 0.1e-7;
    real _t0EE8 = 0.1e-7;
    real _t0EE9 = 0.1e-7;
    vec3 _t0EEA = [_t0EE7, _t0EE8, _t0EE9];
    real _t0EEB = 0.e0;
    real _t0EEC = 0.e0;
    real _t0EED = -0.1e1;
    real _t0EEE = 0.e0;
    vec3 _t0EEF = [_t0EEC, _t0EED, _t0EEE];
    real _t0EF0 = prim •00CE<$[3]; $[3]; $[]> (_t0EEF, refPos0B27);
    real _t0EF1 = prim -0026<$[]> (_t0EEB, _t0EF0);
    real _t0EF2 = 0.e0;
    real _t0EF3 = -0.1e1;
    real _t0EF4 = 0.e0;
    vec3 _t0EF5 = [_t0EF2, _t0EF3, _t0EF4];
    real _t0EF6 = prim •00CE<$[3]; $[3]; $[]> (_t0EF5, dPos0B28);
    real _t0EF7 = prim /0055 (_t0EF1, _t0EF6);
    vec3 _t0EF8 = prim *0038<$[3]> (dPos0B28, _t0EF7);
    vec3 _t0EF9 = prim +0017<$[3]> (refPos0B27, _t0EF8);
    vec3 _t0EFA = prim +0017<$[3]> (_t0EEA, _t0EF9);
    real _t0EFB = _t0EFA[0];
    real _t0EFC = -0.e0;
    bool _t0EFD = prim >0080 (_t0EFB, _t0EFC);
    real _t0EFE = 0.1e-7;
    real _t0EFF = 0.1e-7;
    real _t0F00 = 0.1e-7;
    vec3 _t0F01 = [_t0EFE, _t0EFF, _t0F00];
    real _t0F02 = 0.e0;
    real _t0F03 = 0.e0;
    real _t0F04 = -0.1e1;
    real _t0F05 = 0.e0;
    vec3 _t0F06 = [_t0F03, _t0F04, _t0F05];
    real _t0F07 = prim •00CE<$[3]; $[3]; $[]> (_t0F06, refPos0B27);
    real _t0F08 = prim -0026<$[]> (_t0F02, _t0F07);
    real _t0F09 = 0.e0;
    real _t0F0A = -0.1e1;
    real _t0F0B = 0.e0;
    vec3 _t0F0C = [_t0F09, _t0F0A, _t0F0B];
    real _t0F0D = prim •00CE<$[3]; $[3]; $[]> (_t0F0C, dPos0B28);
    real _t0F0E = prim /0055 (_t0F08, _t0F0D);
    vec3 _t0F0F = prim *0038<$[3]> (dPos0B28, _t0F0E);
    vec3 _t0F10 = prim +0017<$[3]> (refPos0B27, _t0F0F);
    vec3 _t0F11 = prim +0017<$[3]> (_t0F01, _t0F10);
    real _t0F12 = _t0F11[1];
    real _t0F13 = -0.e0;
    bool _t0F14 = prim >0080 (_t0F12, _t0F13);
    real _t0F15 = 0.1e-7;
    real _t0F16 = 0.1e-7;
    real _t0F17 = 0.1e-7;
    vec3 _t0F18 = [_t0F15, _t0F16, _t0F17];
    real _t0F19 = 0.e0;
    real _t0F1A = 0.e0;
    real _t0F1B = -0.1e1;
    real _t0F1C = 0.e0;
    vec3 _t0F1D = [_t0F1A, _t0F1B, _t0F1C];
    real _t0F1E = prim •00CE<$[3]; $[3]; $[]> (_t0F1D, refPos0B27);
    real _t0F1F = prim -0026<$[]> (_t0F19, _t0F1E);
    real _t0F20 = 0.e0;
    real _t0F21 = -0.1e1;
    real _t0F22 = 0.e0;
    vec3 _t0F23 = [_t0F20, _t0F21, _t0F22];
    real _t0F24 = prim •00CE<$[3]; $[3]; $[]> (_t0F23, dPos0B28);
    real _t0F25 = prim /0055 (_t0F1F, _t0F24);
    vec3 _t0F26 = prim *0038<$[3]> (dPos0B28, _t0F25);
    vec3 _t0F27 = prim +0017<$[3]> (refPos0B27, _t0F26);
    vec3 _t0F28 = prim +0017<$[3]> (_t0F18, _t0F27);
    real _t0F29 = _t0F28[2];
    real _t0F2A = -0.e0;
    bool _t0F2B = prim >0080 (_t0F29, _t0F2A);
    bool _t0F2C = prim $and01C4 (_t0F14, _t0F2B);
    bool _t0F2D = prim $and01C4 (_t0EFD, _t0F2C);
    bool _t0F2E = prim $and01C4 (_t0EE6, _t0F2D);
    if _t0F2E {
      string _t0F2F = "Saving at this face!";
      real _t0F30 = 0.e0;
      real _t0F31 = 0.e0;
      real _t0F32 = -0.1e1;
      real _t0F33 = 0.e0;
      vec3 _t0F34 = [_t0F31, _t0F32, _t0F33];
      real _t0F35 = prim •00CE<$[3]; $[3]; $[]> (_t0F34, refPos0B27);
      real _t0F36 = prim -0026<$[]> (_t0F30, _t0F35);
      real _t0F37 = 0.e0;
      real _t0F38 = -0.1e1;
      real _t0F39 = 0.e0;
      vec3 _t0F3A = [_t0F37, _t0F38, _t0F39];
      real _t0F3B = prim •00CE<$[3]; $[3]; $[]> (_t0F3A, dPos0B28);
      real _t0F3C = prim /0055 (_t0F36, _t0F3B);
      real _t0F3D = 0.e0;
      real _t0F3E = 0.e0;
      real _t0F3F = -0.1e1;
      real _t0F40 = 0.e0;
      vec3 _t0F41 = [_t0F3E, _t0F3F, _t0F40];
      real _t0F42 = prim •00CE<$[3]; $[3]; $[]> (_t0F41, refPos0B27);
      real _t0F43 = prim -0026<$[]> (_t0F3D, _t0F42);
      real _t0F44 = 0.e0;
      real _t0F45 = -0.1e1;
      real _t0F46 = 0.e0;
      vec3 _t0F47 = [_t0F44, _t0F45, _t0F46];
      real _t0F48 = prim •00CE<$[3]; $[3]; $[]> (_t0F47, dPos0B28);
      real _t0F49 = prim /0055 (_t0F43, _t0F48);
      bool _t0F4A = prim >0080 (time0B29, _t0F49);
      string _t0F4B = "\n";
      print (_t0F2F, _t0F3C, _t0F4A, _t0F4B);
      real _t0F4C = 0.e0;
      real _t0F4D = 0.e0;
      real _t0F4E = -0.1e1;
      real _t0F4F = 0.e0;
      vec3 _t0F50 = [_t0F4D, _t0F4E, _t0F4F];
      real _t0F51 = prim •00CE<$[3]; $[3]; $[]> (_t0F50, refPos0B27);
      real _t0F52 = prim -0026<$[]> (_t0F4C, _t0F51);
      real _t0F53 = 0.e0;
      real _t0F54 = -0.1e1;
      real _t0F55 = 0.e0;
      vec3 _t0F56 = [_t0F53, _t0F54, _t0F55];
      real _t0F57 = prim •00CE<$[3]; $[3]; $[]> (_t0F56, dPos0B28);
      time0B29 = prim /0055 (_t0F52, _t0F57);
      face0B2A = 2;
    }
  }
  string _t0F58 = "\ntest :";
  real _t0F59 = 0.e0;
  real _t0F5A = 0.e0;
  real _t0F5B = 0.e0;
  real _t0F5C = -0.1e1;
  vec3 _t0F5D = [_t0F5A, _t0F5B, _t0F5C];
  real _t0F5E = prim •00CE<$[3]; $[3]; $[]> (_t0F5D, refPos0B27);
  real _t0F5F = prim -0026<$[]> (_t0F59, _t0F5E);
  real _t0F60 = 0.e0;
  real _t0F61 = 0.e0;
  real _t0F62 = -0.1e1;
  vec3 _t0F63 = [_t0F60, _t0F61, _t0F62];
  real _t0F64 = prim •00CE<$[3]; $[3]; $[]> (_t0F63, dPos0B28);
  real _t0F65 = prim /0055 (_t0F5F, _t0F64);
  string _t0F66 = " test2: ";
  real _t0F67 = 0.e0;
  real _t0F68 = 0.e0;
  real _t0F69 = -0.1e1;
  vec3 _t0F6A = [_t0F67, _t0F68, _t0F69];
  real _t0F6B = prim •00CE<$[3]; $[3]; $[]> (_t0F6A, dPos0B28);
  string _t0F6C = " insideTest: ";
  real _t0F6D = 0.1e1;
  real _t0F6E = 0.1e-7;
  real _t0F6F = prim +0017<$[]> (_t0F6D, _t0F6E);
  real _t0F70 = 0.1e1;
  real _t0F71 = 0.1e1;
  real _t0F72 = 0.1e1;
  vec3 _t0F73 = [_t0F70, _t0F71, _t0F72];
  real _t0F74 = 0.e0;
  real _t0F75 = 0.e0;
  real _t0F76 = 0.e0;
  real _t0F77 = -0.1e1;
  vec3 _t0F78 = [_t0F75, _t0F76, _t0F77];
  real _t0F79 = prim •00CE<$[3]; $[3]; $[]> (_t0F78, refPos0B27);
  real _t0F7A = prim -0026<$[]> (_t0F74, _t0F79);
  real _t0F7B = 0.e0;
  real _t0F7C = 0.e0;
  real _t0F7D = -0.1e1;
  vec3 _t0F7E = [_t0F7B, _t0F7C, _t0F7D];
  real _t0F7F = prim •00CE<$[3]; $[3]; $[]> (_t0F7E, dPos0B28);
  real _t0F80 = prim /0055 (_t0F7A, _t0F7F);
  vec3 _t0F81 = prim *0038<$[3]> (dPos0B28, _t0F80);
  vec3 _t0F82 = prim +0017<$[3]> (refPos0B27, _t0F81);
  real _t0F83 = prim •00CE<$[3]; $[3]; $[]> (_t0F73, _t0F82);
  bool _t0F84 = prim >0080 (_t0F6F, _t0F83);
  real _t0F85 = 0.1e-7;
  real _t0F86 = 0.1e-7;
  real _t0F87 = 0.1e-7;
  vec3 _t0F88 = [_t0F85, _t0F86, _t0F87];
  real _t0F89 = 0.e0;
  real _t0F8A = 0.e0;
  real _t0F8B = 0.e0;
  real _t0F8C = -0.1e1;
  vec3 _t0F8D = [_t0F8A, _t0F8B, _t0F8C];
  real _t0F8E = prim •00CE<$[3]; $[3]; $[]> (_t0F8D, refPos0B27);
  real _t0F8F = prim -0026<$[]> (_t0F89, _t0F8E);
  real _t0F90 = 0.e0;
  real _t0F91 = 0.e0;
  real _t0F92 = -0.1e1;
  vec3 _t0F93 = [_t0F90, _t0F91, _t0F92];
  real _t0F94 = prim •00CE<$[3]; $[3]; $[]> (_t0F93, dPos0B28);
  real _t0F95 = prim /0055 (_t0F8F, _t0F94);
  vec3 _t0F96 = prim *0038<$[3]> (dPos0B28, _t0F95);
  vec3 _t0F97 = prim +0017<$[3]> (refPos0B27, _t0F96);
  vec3 _t0F98 = prim +0017<$[3]> (_t0F88, _t0F97);
  real _t0F99 = _t0F98[0];
  real _t0F9A = -0.e0;
  bool _t0F9B = prim >0080 (_t0F99, _t0F9A);
  real _t0F9C = 0.1e-7;
  real _t0F9D = 0.1e-7;
  real _t0F9E = 0.1e-7;
  vec3 _t0F9F = [_t0F9C, _t0F9D, _t0F9E];
  real _t0FA0 = 0.e0;
  real _t0FA1 = 0.e0;
  real _t0FA2 = 0.e0;
  real _t0FA3 = -0.1e1;
  vec3 _t0FA4 = [_t0FA1, _t0FA2, _t0FA3];
  real _t0FA5 = prim •00CE<$[3]; $[3]; $[]> (_t0FA4, refPos0B27);
  real _t0FA6 = prim -0026<$[]> (_t0FA0, _t0FA5);
  real _t0FA7 = 0.e0;
  real _t0FA8 = 0.e0;
  real _t0FA9 = -0.1e1;
  vec3 _t0FAA = [_t0FA7, _t0FA8, _t0FA9];
  real _t0FAB = prim •00CE<$[3]; $[3]; $[]> (_t0FAA, dPos0B28);
  real _t0FAC = prim /0055 (_t0FA6, _t0FAB);
  vec3 _t0FAD = prim *0038<$[3]> (dPos0B28, _t0FAC);
  vec3 _t0FAE = prim +0017<$[3]> (refPos0B27, _t0FAD);
  vec3 _t0FAF = prim +0017<$[3]> (_t0F9F, _t0FAE);
  real _t0FB0 = _t0FAF[1];
  real _t0FB1 = -0.e0;
  bool _t0FB2 = prim >0080 (_t0FB0, _t0FB1);
  real _t0FB3 = 0.1e-7;
  real _t0FB4 = 0.1e-7;
  real _t0FB5 = 0.1e-7;
  vec3 _t0FB6 = [_t0FB3, _t0FB4, _t0FB5];
  real _t0FB7 = 0.e0;
  real _t0FB8 = 0.e0;
  real _t0FB9 = 0.e0;
  real _t0FBA = -0.1e1;
  vec3 _t0FBB = [_t0FB8, _t0FB9, _t0FBA];
  real _t0FBC = prim •00CE<$[3]; $[3]; $[]> (_t0FBB, refPos0B27);
  real _t0FBD = prim -0026<$[]> (_t0FB7, _t0FBC);
  real _t0FBE = 0.e0;
  real _t0FBF = 0.e0;
  real _t0FC0 = -0.1e1;
  vec3 _t0FC1 = [_t0FBE, _t0FBF, _t0FC0];
  real _t0FC2 = prim •00CE<$[3]; $[3]; $[]> (_t0FC1, dPos0B28);
  real _t0FC3 = prim /0055 (_t0FBD, _t0FC2);
  vec3 _t0FC4 = prim *0038<$[3]> (dPos0B28, _t0FC3);
  vec3 _t0FC5 = prim +0017<$[3]> (refPos0B27, _t0FC4);
  vec3 _t0FC6 = prim +0017<$[3]> (_t0FB6, _t0FC5);
  real _t0FC7 = _t0FC6[2];
  real _t0FC8 = -0.e0;
  bool _t0FC9 = prim >0080 (_t0FC7, _t0FC8);
  bool _t0FCA = prim $and01C4 (_t0FB2, _t0FC9);
  bool _t0FCB = prim $and01C4 (_t0F9B, _t0FCA);
  bool _t0FCC = prim $and01C4 (_t0F84, _t0FCB);
  string _t0FCD = " dist: ";
  real _t0FCE = 0.e0;
  real _t0FCF = 0.e0;
  real _t0FD0 = 0.e0;
  real _t0FD1 = -0.1e1;
  vec3 _t0FD2 = [_t0FCF, _t0FD0, _t0FD1];
  real _t0FD3 = prim •00CE<$[3]; $[3]; $[]> (_t0FD2, refPos0B27);
  real _t0FD4 = prim -0026<$[]> (_t0FCE, _t0FD3);
  real _t0FD5 = prim |()|00B5<$[]> (_t0FD4);
  string _t0FD6 = "signed dist: ";
  real _t0FD7 = 0.e0;
  real _t0FD8 = 0.e0;
  real _t0FD9 = 0.e0;
  real _t0FDA = -0.1e1;
  vec3 _t0FDB = [_t0FD8, _t0FD9, _t0FDA];
  real _t0FDC = prim •00CE<$[3]; $[3]; $[]> (_t0FDB, refPos0B27);
  real _t0FDD = prim -0026<$[]> (_t0FD7, _t0FDC);
  string _t0FDE = " face: ";
  int _t0FDF = 3;
  string _t0FE0 = " place: ";
  real _t0FE1 = 0.e0;
  real _t0FE2 = 0.e0;
  real _t0FE3 = 0.e0;
  real _t0FE4 = -0.1e1;
  vec3 _t0FE5 = [_t0FE2, _t0FE3, _t0FE4];
  real _t0FE6 = prim •00CE<$[3]; $[3]; $[]> (_t0FE5, refPos0B27);
  real _t0FE7 = prim -0026<$[]> (_t0FE1, _t0FE6);
  real _t0FE8 = 0.e0;
  real _t0FE9 = 0.e0;
  real _t0FEA = -0.1e1;
  vec3 _t0FEB = [_t0FE8, _t0FE9, _t0FEA];
  real _t0FEC = prim •00CE<$[3]; $[3]; $[]> (_t0FEB, dPos0B28);
  real _t0FED = prim /0055 (_t0FE7, _t0FEC);
  vec3 _t0FEE = prim *0038<$[3]> (dPos0B28, _t0FED);
  vec3 _t0FEF = prim +0017<$[3]> (refPos0B27, _t0FEE);
  string _t0FF0 = " error: ";
  real _t0FF1 = 0.e0;
  real _t0FF2 = 0.e0;
  real _t0FF3 = 0.e0;
  real _t0FF4 = -0.1e1;
  vec3 _t0FF5 = [_t0FF2, _t0FF3, _t0FF4];
  real _t0FF6 = 0.e0;
  real _t0FF7 = 0.e0;
  real _t0FF8 = 0.e0;
  real _t0FF9 = -0.1e1;
  vec3 _t0FFA = [_t0FF7, _t0FF8, _t0FF9];
  real _t0FFB = prim •00CE<$[3]; $[3]; $[]> (_t0FFA, refPos0B27);
  real _t0FFC = prim -0026<$[]> (_t0FF6, _t0FFB);
  real _t0FFD = 0.e0;
  real _t0FFE = 0.e0;
  real _t0FFF = -0.1e1;
  vec3 _t1000 = [_t0FFD, _t0FFE, _t0FFF];
  real _t1001 = prim •00CE<$[3]; $[3]; $[]> (_t1000, dPos0B28);
  real _t1002 = prim /0055 (_t0FFC, _t1001);
  vec3 _t1003 = prim *0038<$[3]> (dPos0B28, _t1002);
  vec3 _t1004 = prim +0017<$[3]> (refPos0B27, _t1003);
  real _t1005 = prim •00CE<$[3]; $[3]; $[]> (_t0FF5, _t1004);
  real _t1006 = prim -0026<$[]> (_t0FF1, _t1005);
  real _t1007 = prim |()|00B5<$[]> (_t1006);
  string _t1008 = " offset :";
  string _t1009 = " dp: ";
  string _t100A = " otherPossibleTime: ";
  string _t100B = "\n";
  print (_t0F58, _t0F65, _t0F66, _t0F6B, _t0F6C, _t0FCC, _t0FCD, _t0FD5, _t0FD6, _t0FDD, _t0FDE, _t0FDF, _t0FE0, _t0FEF, _t0FF0, _t1007, _t1008, refPos0B27, _t1009, dPos0B28, _t100A, faceTime0B2B, _t100B);
  real _t100C = 0.e0;
  real _t100D = 0.e0;
  real _t100E = 0.e0;
  real _t100F = -0.1e1;
  vec3 _t1010 = [_t100D, _t100E, _t100F];
  real _t1011 = prim •00CE<$[3]; $[3]; $[]> (_t1010, refPos0B27);
  real _t1012 = prim -0026<$[]> (_t100C, _t1011);
  real _t1013 = 0.e0;
  real _t1014 = 0.e0;
  real _t1015 = -0.1e1;
  vec3 _t1016 = [_t1013, _t1014, _t1015];
  real _t1017 = prim •00CE<$[3]; $[3]; $[]> (_t1016, dPos0B28);
  real _t1018 = prim /0055 (_t1012, _t1017);
  real _t1019 = -0.1e-7;
  bool _t101A = prim >=007E (_t1018, _t1019);
  real _t101B = 0.e0;
  real _t101C = 0.e0;
  real _t101D = 0.e0;
  real _t101E = -0.1e1;
  vec3 _t101F = [_t101C, _t101D, _t101E];
  real _t1020 = prim •00CE<$[3]; $[3]; $[]> (_t101F, refPos0B27);
  real _t1021 = prim -0026<$[]> (_t101B, _t1020);
  real _t1022 = 0.e0;
  real _t1023 = 0.e0;
  real _t1024 = -0.1e1;
  vec3 _t1025 = [_t1022, _t1023, _t1024];
  real _t1026 = prim •00CE<$[3]; $[3]; $[]> (_t1025, dPos0B28);
  real _t1027 = prim /0055 (_t1021, _t1026);
  bool _t1028 = prim >0080 (time0B29, _t1027);
  real _t1029 = 0.e0;
  real _t102A = 0.e0;
  real _t102B = -0.1e1;
  vec3 _t102C = [_t1029, _t102A, _t102B];
  real _t102D = prim •00CE<$[3]; $[3]; $[]> (_t102C, dPos0B28);
  real _t102E = prim |()|00B5<$[]> (_t102D);
  real _t102F = 0.1e-7;
  bool _t1030 = prim >=007E (_t102E, _t102F);
  bool _t1031 = prim $and01C4 (_t1028, _t1030);
  bool _t1032 = prim $and01C4 (_t101A, _t1031);
  if _t1032 {
    real _t1033 = 0.1e1;
    real _t1034 = 0.1e-7;
    real _t1035 = prim +0017<$[]> (_t1033, _t1034);
    real _t1036 = 0.1e1;
    real _t1037 = 0.1e1;
    real _t1038 = 0.1e1;
    vec3 _t1039 = [_t1036, _t1037, _t1038];
    real _t103A = 0.e0;
    real _t103B = 0.e0;
    real _t103C = 0.e0;
    real _t103D = -0.1e1;
    vec3 _t103E = [_t103B, _t103C, _t103D];
    real _t103F = prim •00CE<$[3]; $[3]; $[]> (_t103E, refPos0B27);
    real _t1040 = prim -0026<$[]> (_t103A, _t103F);
    real _t1041 = 0.e0;
    real _t1042 = 0.e0;
    real _t1043 = -0.1e1;
    vec3 _t1044 = [_t1041, _t1042, _t1043];
    real _t1045 = prim •00CE<$[3]; $[3]; $[]> (_t1044, dPos0B28);
    real _t1046 = prim /0055 (_t1040, _t1045);
    vec3 _t1047 = prim *0038<$[3]> (dPos0B28, _t1046);
    vec3 _t1048 = prim +0017<$[3]> (refPos0B27, _t1047);
    real _t1049 = prim •00CE<$[3]; $[3]; $[]> (_t1039, _t1048);
    bool _t104A = prim >0080 (_t1035, _t1049);
    real _t104B = 0.1e-7;
    real _t104C = 0.1e-7;
    real _t104D = 0.1e-7;
    vec3 _t104E = [_t104B, _t104C, _t104D];
    real _t104F = 0.e0;
    real _t1050 = 0.e0;
    real _t1051 = 0.e0;
    real _t1052 = -0.1e1;
    vec3 _t1053 = [_t1050, _t1051, _t1052];
    real _t1054 = prim •00CE<$[3]; $[3]; $[]> (_t1053, refPos0B27);
    real _t1055 = prim -0026<$[]> (_t104F, _t1054);
    real _t1056 = 0.e0;
    real _t1057 = 0.e0;
    real _t1058 = -0.1e1;
    vec3 _t1059 = [_t1056, _t1057, _t1058];
    real _t105A = prim •00CE<$[3]; $[3]; $[]> (_t1059, dPos0B28);
    real _t105B = prim /0055 (_t1055, _t105A);
    vec3 _t105C = prim *0038<$[3]> (dPos0B28, _t105B);
    vec3 _t105D = prim +0017<$[3]> (refPos0B27, _t105C);
    vec3 _t105E = prim +0017<$[3]> (_t104E, _t105D);
    real _t105F = _t105E[0];
    real _t1060 = -0.e0;
    bool _t1061 = prim >0080 (_t105F, _t1060);
    real _t1062 = 0.1e-7;
    real _t1063 = 0.1e-7;
    real _t1064 = 0.1e-7;
    vec3 _t1065 = [_t1062, _t1063, _t1064];
    real _t1066 = 0.e0;
    real _t1067 = 0.e0;
    real _t1068 = 0.e0;
    real _t1069 = -0.1e1;
    vec3 _t106A = [_t1067, _t1068, _t1069];
    real _t106B = prim •00CE<$[3]; $[3]; $[]> (_t106A, refPos0B27);
    real _t106C = prim -0026<$[]> (_t1066, _t106B);
    real _t106D = 0.e0;
    real _t106E = 0.e0;
    real _t106F = -0.1e1;
    vec3 _t1070 = [_t106D, _t106E, _t106F];
    real _t1071 = prim •00CE<$[3]; $[3]; $[]> (_t1070, dPos0B28);
    real _t1072 = prim /0055 (_t106C, _t1071);
    vec3 _t1073 = prim *0038<$[3]> (dPos0B28, _t1072);
    vec3 _t1074 = prim +0017<$[3]> (refPos0B27, _t1073);
    vec3 _t1075 = prim +0017<$[3]> (_t1065, _t1074);
    real _t1076 = _t1075[1];
    real _t1077 = -0.e0;
    bool _t1078 = prim >0080 (_t1076, _t1077);
    real _t1079 = 0.1e-7;
    real _t107A = 0.1e-7;
    real _t107B = 0.1e-7;
    vec3 _t107C = [_t1079, _t107A, _t107B];
    real _t107D = 0.e0;
    real _t107E = 0.e0;
    real _t107F = 0.e0;
    real _t1080 = -0.1e1;
    vec3 _t1081 = [_t107E, _t107F, _t1080];
    real _t1082 = prim •00CE<$[3]; $[3]; $[]> (_t1081, refPos0B27);
    real _t1083 = prim -0026<$[]> (_t107D, _t1082);
    real _t1084 = 0.e0;
    real _t1085 = 0.e0;
    real _t1086 = -0.1e1;
    vec3 _t1087 = [_t1084, _t1085, _t1086];
    real _t1088 = prim •00CE<$[3]; $[3]; $[]> (_t1087, dPos0B28);
    real _t1089 = prim /0055 (_t1083, _t1088);
    vec3 _t108A = prim *0038<$[3]> (dPos0B28, _t1089);
    vec3 _t108B = prim +0017<$[3]> (refPos0B27, _t108A);
    vec3 _t108C = prim +0017<$[3]> (_t107C, _t108B);
    real _t108D = _t108C[2];
    real _t108E = -0.e0;
    bool _t108F = prim >0080 (_t108D, _t108E);
    bool _t1090 = prim $and01C4 (_t1078, _t108F);
    bool _t1091 = prim $and01C4 (_t1061, _t1090);
    bool _t1092 = prim $and01C4 (_t104A, _t1091);
    if _t1092 {
      string _t1093 = "Saving at this face!";
      real _t1094 = 0.e0;
      real _t1095 = 0.e0;
      real _t1096 = 0.e0;
      real _t1097 = -0.1e1;
      vec3 _t1098 = [_t1095, _t1096, _t1097];
      real _t1099 = prim •00CE<$[3]; $[3]; $[]> (_t1098, refPos0B27);
      real _t109A = prim -0026<$[]> (_t1094, _t1099);
      real _t109B = 0.e0;
      real _t109C = 0.e0;
      real _t109D = -0.1e1;
      vec3 _t109E = [_t109B, _t109C, _t109D];
      real _t109F = prim •00CE<$[3]; $[3]; $[]> (_t109E, dPos0B28);
      real _t10A0 = prim /0055 (_t109A, _t109F);
      real _t10A1 = 0.e0;
      real _t10A2 = 0.e0;
      real _t10A3 = 0.e0;
      real _t10A4 = -0.1e1;
      vec3 _t10A5 = [_t10A2, _t10A3, _t10A4];
      real _t10A6 = prim •00CE<$[3]; $[3]; $[]> (_t10A5, refPos0B27);
      real _t10A7 = prim -0026<$[]> (_t10A1, _t10A6);
      real _t10A8 = 0.e0;
      real _t10A9 = 0.e0;
      real _t10AA = -0.1e1;
      vec3 _t10AB = [_t10A8, _t10A9, _t10AA];
      real _t10AC = prim •00CE<$[3]; $[3]; $[]> (_t10AB, dPos0B28);
      real _t10AD = prim /0055 (_t10A7, _t10AC);
      bool _t10AE = prim >0080 (time0B29, _t10AD);
      string _t10AF = "\n";
      print (_t1093, _t10A0, _t10AE, _t10AF);
      real _t10B0 = 0.e0;
      real _t10B1 = 0.e0;
      real _t10B2 = 0.e0;
      real _t10B3 = -0.1e1;
      vec3 _t10B4 = [_t10B1, _t10B2, _t10B3];
      real _t10B5 = prim •00CE<$[3]; $[3]; $[]> (_t10B4, refPos0B27);
      real _t10B6 = prim -0026<$[]> (_t10B0, _t10B5);
      real _t10B7 = 0.e0;
      real _t10B8 = 0.e0;
      real _t10B9 = -0.1e1;
      vec3 _t10BA = [_t10B7, _t10B8, _t10B9];
      real _t10BB = prim •00CE<$[3]; $[3]; $[]> (_t10BA, dPos0B28);
      time0B29 = prim /0055 (_t10B6, _t10BB);
      face0B2A = 3;
    }
  }
  int _t10BC = -1;
  bool _t10BD = prim !=0086 (face0B2A, _t10BC);
  real _t10BE = 0.1e1;
  real _t10BF = 0.1e-7;
  real _t10C0 = prim +0017<$[]> (_t10BE, _t10BF);
  real _t10C1 = 0.1e1;
  real _t10C2 = 0.1e1;
  real _t10C3 = 0.1e1;
  vec3 _t10C4 = [_t10C1, _t10C2, _t10C3];
  real _t10C5 = 0.e0;
  real _t10C6 = prim max0125 (time0B29, _t10C5);
  vec3 _t10C7 = prim *0038<$[3]> (dPos0B28, _t10C6);
  vec3 _t10C8 = prim +0017<$[3]> (refPos0B27, _t10C7);
  real _t10C9 = prim •00CE<$[3]; $[3]; $[]> (_t10C4, _t10C8);
  bool _t10CA = prim >0080 (_t10C0, _t10C9);
  real _t10CB = 0.1e-7;
  real _t10CC = 0.1e-7;
  real _t10CD = 0.1e-7;
  vec3 _t10CE = [_t10CB, _t10CC, _t10CD];
  real _t10CF = 0.e0;
  real _t10D0 = prim max0125 (time0B29, _t10CF);
  vec3 _t10D1 = prim *0038<$[3]> (dPos0B28, _t10D0);
  vec3 _t10D2 = prim +0017<$[3]> (refPos0B27, _t10D1);
  vec3 _t10D3 = prim +0017<$[3]> (_t10CE, _t10D2);
  real _t10D4 = _t10D3[0];
  real _t10D5 = -0.e0;
  bool _t10D6 = prim >0080 (_t10D4, _t10D5);
  real _t10D7 = 0.1e-7;
  real _t10D8 = 0.1e-7;
  real _t10D9 = 0.1e-7;
  vec3 _t10DA = [_t10D7, _t10D8, _t10D9];
  real _t10DB = 0.e0;
  real _t10DC = prim max0125 (time0B29, _t10DB);
  vec3 _t10DD = prim *0038<$[3]> (dPos0B28, _t10DC);
  vec3 _t10DE = prim +0017<$[3]> (refPos0B27, _t10DD);
  vec3 _t10DF = prim +0017<$[3]> (_t10DA, _t10DE);
  real _t10E0 = _t10DF[1];
  real _t10E1 = -0.e0;
  bool _t10E2 = prim >0080 (_t10E0, _t10E1);
  real _t10E3 = 0.1e-7;
  real _t10E4 = 0.1e-7;
  real _t10E5 = 0.1e-7;
  vec3 _t10E6 = [_t10E3, _t10E4, _t10E5];
  real _t10E7 = 0.e0;
  real _t10E8 = prim max0125 (time0B29, _t10E7);
  vec3 _t10E9 = prim *0038<$[3]> (dPos0B28, _t10E8);
  vec3 _t10EA = prim +0017<$[3]> (refPos0B27, _t10E9);
  vec3 _t10EB = prim +0017<$[3]> (_t10E6, _t10EA);
  real _t10EC = _t10EB[2];
  real _t10ED = -0.e0;
  bool _t10EE = prim >0080 (_t10EC, _t10ED);
  bool _t10EF = prim $and01C4 (_t10E2, _t10EE);
  bool _t10F0 = prim $and01C4 (_t10D6, _t10EF);
  bool _t10F1 = prim $and01C4 (_t10CA, _t10F0);
  bool _t10F2 = prim $and01C4 (_t10BD, _t10F1);
  if _t10F2 {
    string _t10F3 = "\nReturning via standard : ";
    real _t10F4 = 0.e0;
    real _t10F5 = prim max0125 (time0B29, _t10F4);
    real _t10F6 = (real)face0B2A;
    vec2 _t10F7 = [_t10F5, _t10F6];
    string _t10F8 = "\n";
    print (_t10F3, _t10F7, _t10F8);
    real _t10F9 = 0.e0;
    real _t10FA = prim max0125 (time0B29, _t10F9);
    real _t10FB = (real)face0B2A;
    vec2 _t10FC = [_t10FA, _t10FB];
    return _t10FC;
  } else {
    real _t10FD = -0.1e1;
    real _t10FE = -0.1e1;
    vec2 _t10FF = [_t10FD, _t10FE];
    return _t10FF;
  }
}
function vec2#0 _exit1100 (vec3 refPos0B27, vec3 dPos0B28, int i1101)
{
  real time1102 = +inf;
  int face1103 = -1;
  real faceTime1104 = -inf;
  string _t1105 = "\ntest :";
  real _t1106 = 0.57735026919e0;
  real _t1107 = 0.57735026919e0;
  real _t1108 = 0.57735026919e0;
  real _t1109 = 0.57735026919e0;
  vec3 _t110A = [_t1107, _t1108, _t1109];
  real _t110B = prim •00CE<$[3]; $[3]; $[]> (_t110A, refPos0B27);
  real _t110C = prim -0026<$[]> (_t1106, _t110B);
  real _t110D = 0.57735026919e0;
  real _t110E = 0.57735026919e0;
  real _t110F = 0.57735026919e0;
  vec3 _t1110 = [_t110D, _t110E, _t110F];
  real _t1111 = prim •00CE<$[3]; $[3]; $[]> (_t1110, dPos0B28);
  real _t1112 = prim /0055 (_t110C, _t1111);
  string _t1113 = " test2: ";
  real _t1114 = 0.57735026919e0;
  real _t1115 = 0.57735026919e0;
  real _t1116 = 0.57735026919e0;
  vec3 _t1117 = [_t1114, _t1115, _t1116];
  real _t1118 = prim •00CE<$[3]; $[3]; $[]> (_t1117, dPos0B28);
  string _t1119 = " insideTest: ";
  real _t111A = 0.1e1;
  real _t111B = 0.1e-7;
  real _t111C = prim +0017<$[]> (_t111A, _t111B);
  real _t111D = 0.1e1;
  real _t111E = 0.1e1;
  real _t111F = 0.1e1;
  vec3 _t1120 = [_t111D, _t111E, _t111F];
  real _t1121 = 0.57735026919e0;
  real _t1122 = 0.57735026919e0;
  real _t1123 = 0.57735026919e0;
  real _t1124 = 0.57735026919e0;
  vec3 _t1125 = [_t1122, _t1123, _t1124];
  real _t1126 = prim •00CE<$[3]; $[3]; $[]> (_t1125, refPos0B27);
  real _t1127 = prim -0026<$[]> (_t1121, _t1126);
  real _t1128 = 0.57735026919e0;
  real _t1129 = 0.57735026919e0;
  real _t112A = 0.57735026919e0;
  vec3 _t112B = [_t1128, _t1129, _t112A];
  real _t112C = prim •00CE<$[3]; $[3]; $[]> (_t112B, dPos0B28);
  real _t112D = prim /0055 (_t1127, _t112C);
  vec3 _t112E = prim *0038<$[3]> (dPos0B28, _t112D);
  vec3 _t112F = prim +0017<$[3]> (refPos0B27, _t112E);
  real _t1130 = prim •00CE<$[3]; $[3]; $[]> (_t1120, _t112F);
  bool _t1131 = prim >0080 (_t111C, _t1130);
  real _t1132 = 0.1e-7;
  real _t1133 = 0.1e-7;
  real _t1134 = 0.1e-7;
  vec3 _t1135 = [_t1132, _t1133, _t1134];
  real _t1136 = 0.57735026919e0;
  real _t1137 = 0.57735026919e0;
  real _t1138 = 0.57735026919e0;
  real _t1139 = 0.57735026919e0;
  vec3 _t113A = [_t1137, _t1138, _t1139];
  real _t113B = prim •00CE<$[3]; $[3]; $[]> (_t113A, refPos0B27);
  real _t113C = prim -0026<$[]> (_t1136, _t113B);
  real _t113D = 0.57735026919e0;
  real _t113E = 0.57735026919e0;
  real _t113F = 0.57735026919e0;
  vec3 _t1140 = [_t113D, _t113E, _t113F];
  real _t1141 = prim •00CE<$[3]; $[3]; $[]> (_t1140, dPos0B28);
  real _t1142 = prim /0055 (_t113C, _t1141);
  vec3 _t1143 = prim *0038<$[3]> (dPos0B28, _t1142);
  vec3 _t1144 = prim +0017<$[3]> (refPos0B27, _t1143);
  vec3 _t1145 = prim +0017<$[3]> (_t1135, _t1144);
  real _t1146 = _t1145[0];
  real _t1147 = -0.e0;
  bool _t1148 = prim >0080 (_t1146, _t1147);
  real _t1149 = 0.1e-7;
  real _t114A = 0.1e-7;
  real _t114B = 0.1e-7;
  vec3 _t114C = [_t1149, _t114A, _t114B];
  real _t114D = 0.57735026919e0;
  real _t114E = 0.57735026919e0;
  real _t114F = 0.57735026919e0;
  real _t1150 = 0.57735026919e0;
  vec3 _t1151 = [_t114E, _t114F, _t1150];
  real _t1152 = prim •00CE<$[3]; $[3]; $[]> (_t1151, refPos0B27);
  real _t1153 = prim -0026<$[]> (_t114D, _t1152);
  real _t1154 = 0.57735026919e0;
  real _t1155 = 0.57735026919e0;
  real _t1156 = 0.57735026919e0;
  vec3 _t1157 = [_t1154, _t1155, _t1156];
  real _t1158 = prim •00CE<$[3]; $[3]; $[]> (_t1157, dPos0B28);
  real _t1159 = prim /0055 (_t1153, _t1158);
  vec3 _t115A = prim *0038<$[3]> (dPos0B28, _t1159);
  vec3 _t115B = prim +0017<$[3]> (refPos0B27, _t115A);
  vec3 _t115C = prim +0017<$[3]> (_t114C, _t115B);
  real _t115D = _t115C[1];
  real _t115E = -0.e0;
  bool _t115F = prim >0080 (_t115D, _t115E);
  real _t1160 = 0.1e-7;
  real _t1161 = 0.1e-7;
  real _t1162 = 0.1e-7;
  vec3 _t1163 = [_t1160, _t1161, _t1162];
  real _t1164 = 0.57735026919e0;
  real _t1165 = 0.57735026919e0;
  real _t1166 = 0.57735026919e0;
  real _t1167 = 0.57735026919e0;
  vec3 _t1168 = [_t1165, _t1166, _t1167];
  real _t1169 = prim •00CE<$[3]; $[3]; $[]> (_t1168, refPos0B27);
  real _t116A = prim -0026<$[]> (_t1164, _t1169);
  real _t116B = 0.57735026919e0;
  real _t116C = 0.57735026919e0;
  real _t116D = 0.57735026919e0;
  vec3 _t116E = [_t116B, _t116C, _t116D];
  real _t116F = prim •00CE<$[3]; $[3]; $[]> (_t116E, dPos0B28);
  real _t1170 = prim /0055 (_t116A, _t116F);
  vec3 _t1171 = prim *0038<$[3]> (dPos0B28, _t1170);
  vec3 _t1172 = prim +0017<$[3]> (refPos0B27, _t1171);
  vec3 _t1173 = prim +0017<$[3]> (_t1163, _t1172);
  real _t1174 = _t1173[2];
  real _t1175 = -0.e0;
  bool _t1176 = prim >0080 (_t1174, _t1175);
  bool _t1177 = prim $and01C4 (_t115F, _t1176);
  bool _t1178 = prim $and01C4 (_t1148, _t1177);
  bool _t1179 = prim $and01C4 (_t1131, _t1178);
  string _t117A = " dist: ";
  real _t117B = 0.57735026919e0;
  real _t117C = 0.57735026919e0;
  real _t117D = 0.57735026919e0;
  real _t117E = 0.57735026919e0;
  vec3 _t117F = [_t117C, _t117D, _t117E];
  real _t1180 = prim •00CE<$[3]; $[3]; $[]> (_t117F, refPos0B27);
  real _t1181 = prim -0026<$[]> (_t117B, _t1180);
  real _t1182 = prim |()|00B5<$[]> (_t1181);
  string _t1183 = "signed dist: ";
  real _t1184 = 0.57735026919e0;
  real _t1185 = 0.57735026919e0;
  real _t1186 = 0.57735026919e0;
  real _t1187 = 0.57735026919e0;
  vec3 _t1188 = [_t1185, _t1186, _t1187];
  real _t1189 = prim •00CE<$[3]; $[3]; $[]> (_t1188, refPos0B27);
  real _t118A = prim -0026<$[]> (_t1184, _t1189);
  string _t118B = " face: ";
  int _t118C = 0;
  string _t118D = " place: ";
  real _t118E = 0.57735026919e0;
  real _t118F = 0.57735026919e0;
  real _t1190 = 0.57735026919e0;
  real _t1191 = 0.57735026919e0;
  vec3 _t1192 = [_t118F, _t1190, _t1191];
  real _t1193 = prim •00CE<$[3]; $[3]; $[]> (_t1192, refPos0B27);
  real _t1194 = prim -0026<$[]> (_t118E, _t1193);
  real _t1195 = 0.57735026919e0;
  real _t1196 = 0.57735026919e0;
  real _t1197 = 0.57735026919e0;
  vec3 _t1198 = [_t1195, _t1196, _t1197];
  real _t1199 = prim •00CE<$[3]; $[3]; $[]> (_t1198, dPos0B28);
  real _t119A = prim /0055 (_t1194, _t1199);
  vec3 _t119B = prim *0038<$[3]> (dPos0B28, _t119A);
  vec3 _t119C = prim +0017<$[3]> (refPos0B27, _t119B);
  string _t119D = " error: ";
  real _t119E = 0.57735026919e0;
  real _t119F = 0.57735026919e0;
  real _t11A0 = 0.57735026919e0;
  real _t11A1 = 0.57735026919e0;
  vec3 _t11A2 = [_t119F, _t11A0, _t11A1];
  real _t11A3 = 0.57735026919e0;
  real _t11A4 = 0.57735026919e0;
  real _t11A5 = 0.57735026919e0;
  real _t11A6 = 0.57735026919e0;
  vec3 _t11A7 = [_t11A4, _t11A5, _t11A6];
  real _t11A8 = prim •00CE<$[3]; $[3]; $[]> (_t11A7, refPos0B27);
  real _t11A9 = prim -0026<$[]> (_t11A3, _t11A8);
  real _t11AA = 0.57735026919e0;
  real _t11AB = 0.57735026919e0;
  real _t11AC = 0.57735026919e0;
  vec3 _t11AD = [_t11AA, _t11AB, _t11AC];
  real _t11AE = prim •00CE<$[3]; $[3]; $[]> (_t11AD, dPos0B28);
  real _t11AF = prim /0055 (_t11A9, _t11AE);
  vec3 _t11B0 = prim *0038<$[3]> (dPos0B28, _t11AF);
  vec3 _t11B1 = prim +0017<$[3]> (refPos0B27, _t11B0);
  real _t11B2 = prim •00CE<$[3]; $[3]; $[]> (_t11A2, _t11B1);
  real _t11B3 = prim -0026<$[]> (_t119E, _t11B2);
  real _t11B4 = prim |()|00B5<$[]> (_t11B3);
  string _t11B5 = " offset :";
  string _t11B6 = " dp: ";
  string _t11B7 = " otherPossibleTime: ";
  string _t11B8 = "\n";
  string _t11B9 = "\n original face: ";
  string _t11BA = " ";
  print (_t1105, _t1112, _t1113, _t1118, _t1119, _t1179, _t117A, _t1182, _t1183, _t118A, _t118B, _t118C, _t118D, _t119C, _t119D, _t11B4, _t11B5, refPos0B27, _t11B6, dPos0B28, _t11B7, faceTime1104, _t11B8, _t11B9, i1101, _t11BA);
  real _t11BB = 0.57735026919e0;
  real _t11BC = 0.57735026919e0;
  real _t11BD = 0.57735026919e0;
  real _t11BE = 0.57735026919e0;
  vec3 _t11BF = [_t11BC, _t11BD, _t11BE];
  real _t11C0 = prim •00CE<$[3]; $[3]; $[]> (_t11BF, refPos0B27);
  real _t11C1 = prim -0026<$[]> (_t11BB, _t11C0);
  real _t11C2 = 0.57735026919e0;
  real _t11C3 = 0.57735026919e0;
  real _t11C4 = 0.57735026919e0;
  vec3 _t11C5 = [_t11C2, _t11C3, _t11C4];
  real _t11C6 = prim •00CE<$[3]; $[3]; $[]> (_t11C5, dPos0B28);
  real _t11C7 = prim /0055 (_t11C1, _t11C6);
  real _t11C8 = -0.1e-7;
  bool _t11C9 = prim >=007E (_t11C7, _t11C8);
  real _t11CA = 0.57735026919e0;
  real _t11CB = 0.57735026919e0;
  real _t11CC = 0.57735026919e0;
  real _t11CD = 0.57735026919e0;
  vec3 _t11CE = [_t11CB, _t11CC, _t11CD];
  real _t11CF = prim •00CE<$[3]; $[3]; $[]> (_t11CE, refPos0B27);
  real _t11D0 = prim -0026<$[]> (_t11CA, _t11CF);
  real _t11D1 = 0.57735026919e0;
  real _t11D2 = 0.57735026919e0;
  real _t11D3 = 0.57735026919e0;
  vec3 _t11D4 = [_t11D1, _t11D2, _t11D3];
  real _t11D5 = prim •00CE<$[3]; $[3]; $[]> (_t11D4, dPos0B28);
  real _t11D6 = prim /0055 (_t11D0, _t11D5);
  bool _t11D7 = prim >0080 (time1102, _t11D6);
  real _t11D8 = 0.57735026919e0;
  real _t11D9 = 0.57735026919e0;
  real _t11DA = 0.57735026919e0;
  vec3 _t11DB = [_t11D8, _t11D9, _t11DA];
  real _t11DC = prim •00CE<$[3]; $[3]; $[]> (_t11DB, dPos0B28);
  real _t11DD = prim |()|00B5<$[]> (_t11DC);
  real _t11DE = 0.1e-7;
  bool _t11DF = prim >=007E (_t11DD, _t11DE);
  bool _t11E0 = prim $and01C4 (_t11D7, _t11DF);
  bool _t11E1 = prim $and01C4 (_t11C9, _t11E0);
  if _t11E1 {
    int _t11E2 = 0;
    bool _t11E3 = prim !=0086 (i1101, _t11E2);
    if _t11E3 {
      string _t11E4 = "Saving at this face!";
      real _t11E5 = 0.57735026919e0;
      real _t11E6 = 0.57735026919e0;
      real _t11E7 = 0.57735026919e0;
      real _t11E8 = 0.57735026919e0;
      vec3 _t11E9 = [_t11E6, _t11E7, _t11E8];
      real _t11EA = prim •00CE<$[3]; $[3]; $[]> (_t11E9, refPos0B27);
      real _t11EB = prim -0026<$[]> (_t11E5, _t11EA);
      real _t11EC = 0.57735026919e0;
      real _t11ED = 0.57735026919e0;
      real _t11EE = 0.57735026919e0;
      vec3 _t11EF = [_t11EC, _t11ED, _t11EE];
      real _t11F0 = prim •00CE<$[3]; $[3]; $[]> (_t11EF, dPos0B28);
      real _t11F1 = prim /0055 (_t11EB, _t11F0);
      real _t11F2 = 0.57735026919e0;
      real _t11F3 = 0.57735026919e0;
      real _t11F4 = 0.57735026919e0;
      real _t11F5 = 0.57735026919e0;
      vec3 _t11F6 = [_t11F3, _t11F4, _t11F5];
      real _t11F7 = prim •00CE<$[3]; $[3]; $[]> (_t11F6, refPos0B27);
      real _t11F8 = prim -0026<$[]> (_t11F2, _t11F7);
      real _t11F9 = 0.57735026919e0;
      real _t11FA = 0.57735026919e0;
      real _t11FB = 0.57735026919e0;
      vec3 _t11FC = [_t11F9, _t11FA, _t11FB];
      real _t11FD = prim •00CE<$[3]; $[3]; $[]> (_t11FC, dPos0B28);
      real _t11FE = prim /0055 (_t11F8, _t11FD);
      bool _t11FF = prim >0080 (time1102, _t11FE);
      string _t1200 = "\n";
      print (_t11E4, _t11F1, _t11FF, _t1200);
      real _t1201 = 0.57735026919e0;
      real _t1202 = 0.57735026919e0;
      real _t1203 = 0.57735026919e0;
      real _t1204 = 0.57735026919e0;
      vec3 _t1205 = [_t1202, _t1203, _t1204];
      real _t1206 = prim •00CE<$[3]; $[3]; $[]> (_t1205, refPos0B27);
      real _t1207 = prim -0026<$[]> (_t1201, _t1206);
      real _t1208 = 0.57735026919e0;
      real _t1209 = 0.57735026919e0;
      real _t120A = 0.57735026919e0;
      vec3 _t120B = [_t1208, _t1209, _t120A];
      real _t120C = prim •00CE<$[3]; $[3]; $[]> (_t120B, dPos0B28);
      time1102 = prim /0055 (_t1207, _t120C);
      face1103 = 0;
    } else {
      real _t120D = 0.57735026919e0;
      real _t120E = 0.57735026919e0;
      real _t120F = 0.57735026919e0;
      real _t1210 = 0.57735026919e0;
      vec3 _t1211 = [_t120E, _t120F, _t1210];
      real _t1212 = prim •00CE<$[3]; $[3]; $[]> (_t1211, refPos0B27);
      real _t1213 = prim -0026<$[]> (_t120D, _t1212);
      real _t1214 = 0.57735026919e0;
      real _t1215 = 0.57735026919e0;
      real _t1216 = 0.57735026919e0;
      vec3 _t1217 = [_t1214, _t1215, _t1216];
      real _t1218 = prim •00CE<$[3]; $[3]; $[]> (_t1217, dPos0B28);
      faceTime1104 = prim /0055 (_t1213, _t1218);
      string _t1219 = "Saving backup time: ";
      string _t121A = "\n";
      print (_t1219, faceTime1104, _t121A);
    }
  }
  string _t121B = "\ntest :";
  real _t121C = 0.e0;
  real _t121D = -0.1e1;
  real _t121E = 0.e0;
  real _t121F = 0.e0;
  vec3 _t1220 = [_t121D, _t121E, _t121F];
  real _t1221 = prim •00CE<$[3]; $[3]; $[]> (_t1220, refPos0B27);
  real _t1222 = prim -0026<$[]> (_t121C, _t1221);
  real _t1223 = -0.1e1;
  real _t1224 = 0.e0;
  real _t1225 = 0.e0;
  vec3 _t1226 = [_t1223, _t1224, _t1225];
  real _t1227 = prim •00CE<$[3]; $[3]; $[]> (_t1226, dPos0B28);
  real _t1228 = prim /0055 (_t1222, _t1227);
  string _t1229 = " test2: ";
  real _t122A = -0.1e1;
  real _t122B = 0.e0;
  real _t122C = 0.e0;
  vec3 _t122D = [_t122A, _t122B, _t122C];
  real _t122E = prim •00CE<$[3]; $[3]; $[]> (_t122D, dPos0B28);
  string _t122F = " insideTest: ";
  real _t1230 = 0.1e1;
  real _t1231 = 0.1e-7;
  real _t1232 = prim +0017<$[]> (_t1230, _t1231);
  real _t1233 = 0.1e1;
  real _t1234 = 0.1e1;
  real _t1235 = 0.1e1;
  vec3 _t1236 = [_t1233, _t1234, _t1235];
  real _t1237 = 0.e0;
  real _t1238 = -0.1e1;
  real _t1239 = 0.e0;
  real _t123A = 0.e0;
  vec3 _t123B = [_t1238, _t1239, _t123A];
  real _t123C = prim •00CE<$[3]; $[3]; $[]> (_t123B, refPos0B27);
  real _t123D = prim -0026<$[]> (_t1237, _t123C);
  real _t123E = -0.1e1;
  real _t123F = 0.e0;
  real _t1240 = 0.e0;
  vec3 _t1241 = [_t123E, _t123F, _t1240];
  real _t1242 = prim •00CE<$[3]; $[3]; $[]> (_t1241, dPos0B28);
  real _t1243 = prim /0055 (_t123D, _t1242);
  vec3 _t1244 = prim *0038<$[3]> (dPos0B28, _t1243);
  vec3 _t1245 = prim +0017<$[3]> (refPos0B27, _t1244);
  real _t1246 = prim •00CE<$[3]; $[3]; $[]> (_t1236, _t1245);
  bool _t1247 = prim >0080 (_t1232, _t1246);
  real _t1248 = 0.1e-7;
  real _t1249 = 0.1e-7;
  real _t124A = 0.1e-7;
  vec3 _t124B = [_t1248, _t1249, _t124A];
  real _t124C = 0.e0;
  real _t124D = -0.1e1;
  real _t124E = 0.e0;
  real _t124F = 0.e0;
  vec3 _t1250 = [_t124D, _t124E, _t124F];
  real _t1251 = prim •00CE<$[3]; $[3]; $[]> (_t1250, refPos0B27);
  real _t1252 = prim -0026<$[]> (_t124C, _t1251);
  real _t1253 = -0.1e1;
  real _t1254 = 0.e0;
  real _t1255 = 0.e0;
  vec3 _t1256 = [_t1253, _t1254, _t1255];
  real _t1257 = prim •00CE<$[3]; $[3]; $[]> (_t1256, dPos0B28);
  real _t1258 = prim /0055 (_t1252, _t1257);
  vec3 _t1259 = prim *0038<$[3]> (dPos0B28, _t1258);
  vec3 _t125A = prim +0017<$[3]> (refPos0B27, _t1259);
  vec3 _t125B = prim +0017<$[3]> (_t124B, _t125A);
  real _t125C = _t125B[0];
  real _t125D = -0.e0;
  bool _t125E = prim >0080 (_t125C, _t125D);
  real _t125F = 0.1e-7;
  real _t1260 = 0.1e-7;
  real _t1261 = 0.1e-7;
  vec3 _t1262 = [_t125F, _t1260, _t1261];
  real _t1263 = 0.e0;
  real _t1264 = -0.1e1;
  real _t1265 = 0.e0;
  real _t1266 = 0.e0;
  vec3 _t1267 = [_t1264, _t1265, _t1266];
  real _t1268 = prim •00CE<$[3]; $[3]; $[]> (_t1267, refPos0B27);
  real _t1269 = prim -0026<$[]> (_t1263, _t1268);
  real _t126A = -0.1e1;
  real _t126B = 0.e0;
  real _t126C = 0.e0;
  vec3 _t126D = [_t126A, _t126B, _t126C];
  real _t126E = prim •00CE<$[3]; $[3]; $[]> (_t126D, dPos0B28);
  real _t126F = prim /0055 (_t1269, _t126E);
  vec3 _t1270 = prim *0038<$[3]> (dPos0B28, _t126F);
  vec3 _t1271 = prim +0017<$[3]> (refPos0B27, _t1270);
  vec3 _t1272 = prim +0017<$[3]> (_t1262, _t1271);
  real _t1273 = _t1272[1];
  real _t1274 = -0.e0;
  bool _t1275 = prim >0080 (_t1273, _t1274);
  real _t1276 = 0.1e-7;
  real _t1277 = 0.1e-7;
  real _t1278 = 0.1e-7;
  vec3 _t1279 = [_t1276, _t1277, _t1278];
  real _t127A = 0.e0;
  real _t127B = -0.1e1;
  real _t127C = 0.e0;
  real _t127D = 0.e0;
  vec3 _t127E = [_t127B, _t127C, _t127D];
  real _t127F = prim •00CE<$[3]; $[3]; $[]> (_t127E, refPos0B27);
  real _t1280 = prim -0026<$[]> (_t127A, _t127F);
  real _t1281 = -0.1e1;
  real _t1282 = 0.e0;
  real _t1283 = 0.e0;
  vec3 _t1284 = [_t1281, _t1282, _t1283];
  real _t1285 = prim •00CE<$[3]; $[3]; $[]> (_t1284, dPos0B28);
  real _t1286 = prim /0055 (_t1280, _t1285);
  vec3 _t1287 = prim *0038<$[3]> (dPos0B28, _t1286);
  vec3 _t1288 = prim +0017<$[3]> (refPos0B27, _t1287);
  vec3 _t1289 = prim +0017<$[3]> (_t1279, _t1288);
  real _t128A = _t1289[2];
  real _t128B = -0.e0;
  bool _t128C = prim >0080 (_t128A, _t128B);
  bool _t128D = prim $and01C4 (_t1275, _t128C);
  bool _t128E = prim $and01C4 (_t125E, _t128D);
  bool _t128F = prim $and01C4 (_t1247, _t128E);
  string _t1290 = " dist: ";
  real _t1291 = 0.e0;
  real _t1292 = -0.1e1;
  real _t1293 = 0.e0;
  real _t1294 = 0.e0;
  vec3 _t1295 = [_t1292, _t1293, _t1294];
  real _t1296 = prim •00CE<$[3]; $[3]; $[]> (_t1295, refPos0B27);
  real _t1297 = prim -0026<$[]> (_t1291, _t1296);
  real _t1298 = prim |()|00B5<$[]> (_t1297);
  string _t1299 = "signed dist: ";
  real _t129A = 0.e0;
  real _t129B = -0.1e1;
  real _t129C = 0.e0;
  real _t129D = 0.e0;
  vec3 _t129E = [_t129B, _t129C, _t129D];
  real _t129F = prim •00CE<$[3]; $[3]; $[]> (_t129E, refPos0B27);
  real _t12A0 = prim -0026<$[]> (_t129A, _t129F);
  string _t12A1 = " face: ";
  int _t12A2 = 1;
  string _t12A3 = " place: ";
  real _t12A4 = 0.e0;
  real _t12A5 = -0.1e1;
  real _t12A6 = 0.e0;
  real _t12A7 = 0.e0;
  vec3 _t12A8 = [_t12A5, _t12A6, _t12A7];
  real _t12A9 = prim •00CE<$[3]; $[3]; $[]> (_t12A8, refPos0B27);
  real _t12AA = prim -0026<$[]> (_t12A4, _t12A9);
  real _t12AB = -0.1e1;
  real _t12AC = 0.e0;
  real _t12AD = 0.e0;
  vec3 _t12AE = [_t12AB, _t12AC, _t12AD];
  real _t12AF = prim •00CE<$[3]; $[3]; $[]> (_t12AE, dPos0B28);
  real _t12B0 = prim /0055 (_t12AA, _t12AF);
  vec3 _t12B1 = prim *0038<$[3]> (dPos0B28, _t12B0);
  vec3 _t12B2 = prim +0017<$[3]> (refPos0B27, _t12B1);
  string _t12B3 = " error: ";
  real _t12B4 = 0.e0;
  real _t12B5 = -0.1e1;
  real _t12B6 = 0.e0;
  real _t12B7 = 0.e0;
  vec3 _t12B8 = [_t12B5, _t12B6, _t12B7];
  real _t12B9 = 0.e0;
  real _t12BA = -0.1e1;
  real _t12BB = 0.e0;
  real _t12BC = 0.e0;
  vec3 _t12BD = [_t12BA, _t12BB, _t12BC];
  real _t12BE = prim •00CE<$[3]; $[3]; $[]> (_t12BD, refPos0B27);
  real _t12BF = prim -0026<$[]> (_t12B9, _t12BE);
  real _t12C0 = -0.1e1;
  real _t12C1 = 0.e0;
  real _t12C2 = 0.e0;
  vec3 _t12C3 = [_t12C0, _t12C1, _t12C2];
  real _t12C4 = prim •00CE<$[3]; $[3]; $[]> (_t12C3, dPos0B28);
  real _t12C5 = prim /0055 (_t12BF, _t12C4);
  vec3 _t12C6 = prim *0038<$[3]> (dPos0B28, _t12C5);
  vec3 _t12C7 = prim +0017<$[3]> (refPos0B27, _t12C6);
  real _t12C8 = prim •00CE<$[3]; $[3]; $[]> (_t12B8, _t12C7);
  real _t12C9 = prim -0026<$[]> (_t12B4, _t12C8);
  real _t12CA = prim |()|00B5<$[]> (_t12C9);
  string _t12CB = " offset :";
  string _t12CC = " dp: ";
  string _t12CD = " otherPossibleTime: ";
  string _t12CE = "\n";
  string _t12CF = "\n original face: ";
  string _t12D0 = " ";
  print (_t121B, _t1228, _t1229, _t122E, _t122F, _t128F, _t1290, _t1298, _t1299, _t12A0, _t12A1, _t12A2, _t12A3, _t12B2, _t12B3, _t12CA, _t12CB, refPos0B27, _t12CC, dPos0B28, _t12CD, faceTime1104, _t12CE, _t12CF, i1101, _t12D0);
  real _t12D1 = 0.e0;
  real _t12D2 = -0.1e1;
  real _t12D3 = 0.e0;
  real _t12D4 = 0.e0;
  vec3 _t12D5 = [_t12D2, _t12D3, _t12D4];
  real _t12D6 = prim •00CE<$[3]; $[3]; $[]> (_t12D5, refPos0B27);
  real _t12D7 = prim -0026<$[]> (_t12D1, _t12D6);
  real _t12D8 = -0.1e1;
  real _t12D9 = 0.e0;
  real _t12DA = 0.e0;
  vec3 _t12DB = [_t12D8, _t12D9, _t12DA];
  real _t12DC = prim •00CE<$[3]; $[3]; $[]> (_t12DB, dPos0B28);
  real _t12DD = prim /0055 (_t12D7, _t12DC);
  real _t12DE = -0.1e-7;
  bool _t12DF = prim >=007E (_t12DD, _t12DE);
  real _t12E0 = 0.e0;
  real _t12E1 = -0.1e1;
  real _t12E2 = 0.e0;
  real _t12E3 = 0.e0;
  vec3 _t12E4 = [_t12E1, _t12E2, _t12E3];
  real _t12E5 = prim •00CE<$[3]; $[3]; $[]> (_t12E4, refPos0B27);
  real _t12E6 = prim -0026<$[]> (_t12E0, _t12E5);
  real _t12E7 = -0.1e1;
  real _t12E8 = 0.e0;
  real _t12E9 = 0.e0;
  vec3 _t12EA = [_t12E7, _t12E8, _t12E9];
  real _t12EB = prim •00CE<$[3]; $[3]; $[]> (_t12EA, dPos0B28);
  real _t12EC = prim /0055 (_t12E6, _t12EB);
  bool _t12ED = prim >0080 (time1102, _t12EC);
  real _t12EE = -0.1e1;
  real _t12EF = 0.e0;
  real _t12F0 = 0.e0;
  vec3 _t12F1 = [_t12EE, _t12EF, _t12F0];
  real _t12F2 = prim •00CE<$[3]; $[3]; $[]> (_t12F1, dPos0B28);
  real _t12F3 = prim |()|00B5<$[]> (_t12F2);
  real _t12F4 = 0.1e-7;
  bool _t12F5 = prim >=007E (_t12F3, _t12F4);
  bool _t12F6 = prim $and01C4 (_t12ED, _t12F5);
  bool _t12F7 = prim $and01C4 (_t12DF, _t12F6);
  if _t12F7 {
    int _t12F8 = 1;
    bool _t12F9 = prim !=0086 (i1101, _t12F8);
    if _t12F9 {
      string _t12FA = "Saving at this face!";
      real _t12FB = 0.e0;
      real _t12FC = -0.1e1;
      real _t12FD = 0.e0;
      real _t12FE = 0.e0;
      vec3 _t12FF = [_t12FC, _t12FD, _t12FE];
      real _t1300 = prim •00CE<$[3]; $[3]; $[]> (_t12FF, refPos0B27);
      real _t1301 = prim -0026<$[]> (_t12FB, _t1300);
      real _t1302 = -0.1e1;
      real _t1303 = 0.e0;
      real _t1304 = 0.e0;
      vec3 _t1305 = [_t1302, _t1303, _t1304];
      real _t1306 = prim •00CE<$[3]; $[3]; $[]> (_t1305, dPos0B28);
      real _t1307 = prim /0055 (_t1301, _t1306);
      real _t1308 = 0.e0;
      real _t1309 = -0.1e1;
      real _t130A = 0.e0;
      real _t130B = 0.e0;
      vec3 _t130C = [_t1309, _t130A, _t130B];
      real _t130D = prim •00CE<$[3]; $[3]; $[]> (_t130C, refPos0B27);
      real _t130E = prim -0026<$[]> (_t1308, _t130D);
      real _t130F = -0.1e1;
      real _t1310 = 0.e0;
      real _t1311 = 0.e0;
      vec3 _t1312 = [_t130F, _t1310, _t1311];
      real _t1313 = prim •00CE<$[3]; $[3]; $[]> (_t1312, dPos0B28);
      real _t1314 = prim /0055 (_t130E, _t1313);
      bool _t1315 = prim >0080 (time1102, _t1314);
      string _t1316 = "\n";
      print (_t12FA, _t1307, _t1315, _t1316);
      real _t1317 = 0.e0;
      real _t1318 = -0.1e1;
      real _t1319 = 0.e0;
      real _t131A = 0.e0;
      vec3 _t131B = [_t1318, _t1319, _t131A];
      real _t131C = prim •00CE<$[3]; $[3]; $[]> (_t131B, refPos0B27);
      real _t131D = prim -0026<$[]> (_t1317, _t131C);
      real _t131E = -0.1e1;
      real _t131F = 0.e0;
      real _t1320 = 0.e0;
      vec3 _t1321 = [_t131E, _t131F, _t1320];
      real _t1322 = prim •00CE<$[3]; $[3]; $[]> (_t1321, dPos0B28);
      time1102 = prim /0055 (_t131D, _t1322);
      face1103 = 1;
    } else {
      real _t1323 = 0.e0;
      real _t1324 = -0.1e1;
      real _t1325 = 0.e0;
      real _t1326 = 0.e0;
      vec3 _t1327 = [_t1324, _t1325, _t1326];
      real _t1328 = prim •00CE<$[3]; $[3]; $[]> (_t1327, refPos0B27);
      real _t1329 = prim -0026<$[]> (_t1323, _t1328);
      real _t132A = -0.1e1;
      real _t132B = 0.e0;
      real _t132C = 0.e0;
      vec3 _t132D = [_t132A, _t132B, _t132C];
      real _t132E = prim •00CE<$[3]; $[3]; $[]> (_t132D, dPos0B28);
      faceTime1104 = prim /0055 (_t1329, _t132E);
      string _t132F = "Saving backup time: ";
      string _t1330 = "\n";
      print (_t132F, faceTime1104, _t1330);
    }
  }
  string _t1331 = "\ntest :";
  real _t1332 = 0.e0;
  real _t1333 = 0.e0;
  real _t1334 = -0.1e1;
  real _t1335 = 0.e0;
  vec3 _t1336 = [_t1333, _t1334, _t1335];
  real _t1337 = prim •00CE<$[3]; $[3]; $[]> (_t1336, refPos0B27);
  real _t1338 = prim -0026<$[]> (_t1332, _t1337);
  real _t1339 = 0.e0;
  real _t133A = -0.1e1;
  real _t133B = 0.e0;
  vec3 _t133C = [_t1339, _t133A, _t133B];
  real _t133D = prim •00CE<$[3]; $[3]; $[]> (_t133C, dPos0B28);
  real _t133E = prim /0055 (_t1338, _t133D);
  string _t133F = " test2: ";
  real _t1340 = 0.e0;
  real _t1341 = -0.1e1;
  real _t1342 = 0.e0;
  vec3 _t1343 = [_t1340, _t1341, _t1342];
  real _t1344 = prim •00CE<$[3]; $[3]; $[]> (_t1343, dPos0B28);
  string _t1345 = " insideTest: ";
  real _t1346 = 0.1e1;
  real _t1347 = 0.1e-7;
  real _t1348 = prim +0017<$[]> (_t1346, _t1347);
  real _t1349 = 0.1e1;
  real _t134A = 0.1e1;
  real _t134B = 0.1e1;
  vec3 _t134C = [_t1349, _t134A, _t134B];
  real _t134D = 0.e0;
  real _t134E = 0.e0;
  real _t134F = -0.1e1;
  real _t1350 = 0.e0;
  vec3 _t1351 = [_t134E, _t134F, _t1350];
  real _t1352 = prim •00CE<$[3]; $[3]; $[]> (_t1351, refPos0B27);
  real _t1353 = prim -0026<$[]> (_t134D, _t1352);
  real _t1354 = 0.e0;
  real _t1355 = -0.1e1;
  real _t1356 = 0.e0;
  vec3 _t1357 = [_t1354, _t1355, _t1356];
  real _t1358 = prim •00CE<$[3]; $[3]; $[]> (_t1357, dPos0B28);
  real _t1359 = prim /0055 (_t1353, _t1358);
  vec3 _t135A = prim *0038<$[3]> (dPos0B28, _t1359);
  vec3 _t135B = prim +0017<$[3]> (refPos0B27, _t135A);
  real _t135C = prim •00CE<$[3]; $[3]; $[]> (_t134C, _t135B);
  bool _t135D = prim >0080 (_t1348, _t135C);
  real _t135E = 0.1e-7;
  real _t135F = 0.1e-7;
  real _t1360 = 0.1e-7;
  vec3 _t1361 = [_t135E, _t135F, _t1360];
  real _t1362 = 0.e0;
  real _t1363 = 0.e0;
  real _t1364 = -0.1e1;
  real _t1365 = 0.e0;
  vec3 _t1366 = [_t1363, _t1364, _t1365];
  real _t1367 = prim •00CE<$[3]; $[3]; $[]> (_t1366, refPos0B27);
  real _t1368 = prim -0026<$[]> (_t1362, _t1367);
  real _t1369 = 0.e0;
  real _t136A = -0.1e1;
  real _t136B = 0.e0;
  vec3 _t136C = [_t1369, _t136A, _t136B];
  real _t136D = prim •00CE<$[3]; $[3]; $[]> (_t136C, dPos0B28);
  real _t136E = prim /0055 (_t1368, _t136D);
  vec3 _t136F = prim *0038<$[3]> (dPos0B28, _t136E);
  vec3 _t1370 = prim +0017<$[3]> (refPos0B27, _t136F);
  vec3 _t1371 = prim +0017<$[3]> (_t1361, _t1370);
  real _t1372 = _t1371[0];
  real _t1373 = -0.e0;
  bool _t1374 = prim >0080 (_t1372, _t1373);
  real _t1375 = 0.1e-7;
  real _t1376 = 0.1e-7;
  real _t1377 = 0.1e-7;
  vec3 _t1378 = [_t1375, _t1376, _t1377];
  real _t1379 = 0.e0;
  real _t137A = 0.e0;
  real _t137B = -0.1e1;
  real _t137C = 0.e0;
  vec3 _t137D = [_t137A, _t137B, _t137C];
  real _t137E = prim •00CE<$[3]; $[3]; $[]> (_t137D, refPos0B27);
  real _t137F = prim -0026<$[]> (_t1379, _t137E);
  real _t1380 = 0.e0;
  real _t1381 = -0.1e1;
  real _t1382 = 0.e0;
  vec3 _t1383 = [_t1380, _t1381, _t1382];
  real _t1384 = prim •00CE<$[3]; $[3]; $[]> (_t1383, dPos0B28);
  real _t1385 = prim /0055 (_t137F, _t1384);
  vec3 _t1386 = prim *0038<$[3]> (dPos0B28, _t1385);
  vec3 _t1387 = prim +0017<$[3]> (refPos0B27, _t1386);
  vec3 _t1388 = prim +0017<$[3]> (_t1378, _t1387);
  real _t1389 = _t1388[1];
  real _t138A = -0.e0;
  bool _t138B = prim >0080 (_t1389, _t138A);
  real _t138C = 0.1e-7;
  real _t138D = 0.1e-7;
  real _t138E = 0.1e-7;
  vec3 _t138F = [_t138C, _t138D, _t138E];
  real _t1390 = 0.e0;
  real _t1391 = 0.e0;
  real _t1392 = -0.1e1;
  real _t1393 = 0.e0;
  vec3 _t1394 = [_t1391, _t1392, _t1393];
  real _t1395 = prim •00CE<$[3]; $[3]; $[]> (_t1394, refPos0B27);
  real _t1396 = prim -0026<$[]> (_t1390, _t1395);
  real _t1397 = 0.e0;
  real _t1398 = -0.1e1;
  real _t1399 = 0.e0;
  vec3 _t139A = [_t1397, _t1398, _t1399];
  real _t139B = prim •00CE<$[3]; $[3]; $[]> (_t139A, dPos0B28);
  real _t139C = prim /0055 (_t1396, _t139B);
  vec3 _t139D = prim *0038<$[3]> (dPos0B28, _t139C);
  vec3 _t139E = prim +0017<$[3]> (refPos0B27, _t139D);
  vec3 _t139F = prim +0017<$[3]> (_t138F, _t139E);
  real _t13A0 = _t139F[2];
  real _t13A1 = -0.e0;
  bool _t13A2 = prim >0080 (_t13A0, _t13A1);
  bool _t13A3 = prim $and01C4 (_t138B, _t13A2);
  bool _t13A4 = prim $and01C4 (_t1374, _t13A3);
  bool _t13A5 = prim $and01C4 (_t135D, _t13A4);
  string _t13A6 = " dist: ";
  real _t13A7 = 0.e0;
  real _t13A8 = 0.e0;
  real _t13A9 = -0.1e1;
  real _t13AA = 0.e0;
  vec3 _t13AB = [_t13A8, _t13A9, _t13AA];
  real _t13AC = prim •00CE<$[3]; $[3]; $[]> (_t13AB, refPos0B27);
  real _t13AD = prim -0026<$[]> (_t13A7, _t13AC);
  real _t13AE = prim |()|00B5<$[]> (_t13AD);
  string _t13AF = "signed dist: ";
  real _t13B0 = 0.e0;
  real _t13B1 = 0.e0;
  real _t13B2 = -0.1e1;
  real _t13B3 = 0.e0;
  vec3 _t13B4 = [_t13B1, _t13B2, _t13B3];
  real _t13B5 = prim •00CE<$[3]; $[3]; $[]> (_t13B4, refPos0B27);
  real _t13B6 = prim -0026<$[]> (_t13B0, _t13B5);
  string _t13B7 = " face: ";
  int _t13B8 = 2;
  string _t13B9 = " place: ";
  real _t13BA = 0.e0;
  real _t13BB = 0.e0;
  real _t13BC = -0.1e1;
  real _t13BD = 0.e0;
  vec3 _t13BE = [_t13BB, _t13BC, _t13BD];
  real _t13BF = prim •00CE<$[3]; $[3]; $[]> (_t13BE, refPos0B27);
  real _t13C0 = prim -0026<$[]> (_t13BA, _t13BF);
  real _t13C1 = 0.e0;
  real _t13C2 = -0.1e1;
  real _t13C3 = 0.e0;
  vec3 _t13C4 = [_t13C1, _t13C2, _t13C3];
  real _t13C5 = prim •00CE<$[3]; $[3]; $[]> (_t13C4, dPos0B28);
  real _t13C6 = prim /0055 (_t13C0, _t13C5);
  vec3 _t13C7 = prim *0038<$[3]> (dPos0B28, _t13C6);
  vec3 _t13C8 = prim +0017<$[3]> (refPos0B27, _t13C7);
  string _t13C9 = " error: ";
  real _t13CA = 0.e0;
  real _t13CB = 0.e0;
  real _t13CC = -0.1e1;
  real _t13CD = 0.e0;
  vec3 _t13CE = [_t13CB, _t13CC, _t13CD];
  real _t13CF = 0.e0;
  real _t13D0 = 0.e0;
  real _t13D1 = -0.1e1;
  real _t13D2 = 0.e0;
  vec3 _t13D3 = [_t13D0, _t13D1, _t13D2];
  real _t13D4 = prim •00CE<$[3]; $[3]; $[]> (_t13D3, refPos0B27);
  real _t13D5 = prim -0026<$[]> (_t13CF, _t13D4);
  real _t13D6 = 0.e0;
  real _t13D7 = -0.1e1;
  real _t13D8 = 0.e0;
  vec3 _t13D9 = [_t13D6, _t13D7, _t13D8];
  real _t13DA = prim •00CE<$[3]; $[3]; $[]> (_t13D9, dPos0B28);
  real _t13DB = prim /0055 (_t13D5, _t13DA);
  vec3 _t13DC = prim *0038<$[3]> (dPos0B28, _t13DB);
  vec3 _t13DD = prim +0017<$[3]> (refPos0B27, _t13DC);
  real _t13DE = prim •00CE<$[3]; $[3]; $[]> (_t13CE, _t13DD);
  real _t13DF = prim -0026<$[]> (_t13CA, _t13DE);
  real _t13E0 = prim |()|00B5<$[]> (_t13DF);
  string _t13E1 = " offset :";
  string _t13E2 = " dp: ";
  string _t13E3 = " otherPossibleTime: ";
  string _t13E4 = "\n";
  string _t13E5 = "\n original face: ";
  string _t13E6 = " ";
  print (_t1331, _t133E, _t133F, _t1344, _t1345, _t13A5, _t13A6, _t13AE, _t13AF, _t13B6, _t13B7, _t13B8, _t13B9, _t13C8, _t13C9, _t13E0, _t13E1, refPos0B27, _t13E2, dPos0B28, _t13E3, faceTime1104, _t13E4, _t13E5, i1101, _t13E6);
  real _t13E7 = 0.e0;
  real _t13E8 = 0.e0;
  real _t13E9 = -0.1e1;
  real _t13EA = 0.e0;
  vec3 _t13EB = [_t13E8, _t13E9, _t13EA];
  real _t13EC = prim •00CE<$[3]; $[3]; $[]> (_t13EB, refPos0B27);
  real _t13ED = prim -0026<$[]> (_t13E7, _t13EC);
  real _t13EE = 0.e0;
  real _t13EF = -0.1e1;
  real _t13F0 = 0.e0;
  vec3 _t13F1 = [_t13EE, _t13EF, _t13F0];
  real _t13F2 = prim •00CE<$[3]; $[3]; $[]> (_t13F1, dPos0B28);
  real _t13F3 = prim /0055 (_t13ED, _t13F2);
  real _t13F4 = -0.1e-7;
  bool _t13F5 = prim >=007E (_t13F3, _t13F4);
  real _t13F6 = 0.e0;
  real _t13F7 = 0.e0;
  real _t13F8 = -0.1e1;
  real _t13F9 = 0.e0;
  vec3 _t13FA = [_t13F7, _t13F8, _t13F9];
  real _t13FB = prim •00CE<$[3]; $[3]; $[]> (_t13FA, refPos0B27);
  real _t13FC = prim -0026<$[]> (_t13F6, _t13FB);
  real _t13FD = 0.e0;
  real _t13FE = -0.1e1;
  real _t13FF = 0.e0;
  vec3 _t1400 = [_t13FD, _t13FE, _t13FF];
  real _t1401 = prim •00CE<$[3]; $[3]; $[]> (_t1400, dPos0B28);
  real _t1402 = prim /0055 (_t13FC, _t1401);
  bool _t1403 = prim >0080 (time1102, _t1402);
  real _t1404 = 0.e0;
  real _t1405 = -0.1e1;
  real _t1406 = 0.e0;
  vec3 _t1407 = [_t1404, _t1405, _t1406];
  real _t1408 = prim •00CE<$[3]; $[3]; $[]> (_t1407, dPos0B28);
  real _t1409 = prim |()|00B5<$[]> (_t1408);
  real _t140A = 0.1e-7;
  bool _t140B = prim >=007E (_t1409, _t140A);
  bool _t140C = prim $and01C4 (_t1403, _t140B);
  bool _t140D = prim $and01C4 (_t13F5, _t140C);
  if _t140D {
    int _t140E = 2;
    bool _t140F = prim !=0086 (i1101, _t140E);
    if _t140F {
      string _t1410 = "Saving at this face!";
      real _t1411 = 0.e0;
      real _t1412 = 0.e0;
      real _t1413 = -0.1e1;
      real _t1414 = 0.e0;
      vec3 _t1415 = [_t1412, _t1413, _t1414];
      real _t1416 = prim •00CE<$[3]; $[3]; $[]> (_t1415, refPos0B27);
      real _t1417 = prim -0026<$[]> (_t1411, _t1416);
      real _t1418 = 0.e0;
      real _t1419 = -0.1e1;
      real _t141A = 0.e0;
      vec3 _t141B = [_t1418, _t1419, _t141A];
      real _t141C = prim •00CE<$[3]; $[3]; $[]> (_t141B, dPos0B28);
      real _t141D = prim /0055 (_t1417, _t141C);
      real _t141E = 0.e0;
      real _t141F = 0.e0;
      real _t1420 = -0.1e1;
      real _t1421 = 0.e0;
      vec3 _t1422 = [_t141F, _t1420, _t1421];
      real _t1423 = prim •00CE<$[3]; $[3]; $[]> (_t1422, refPos0B27);
      real _t1424 = prim -0026<$[]> (_t141E, _t1423);
      real _t1425 = 0.e0;
      real _t1426 = -0.1e1;
      real _t1427 = 0.e0;
      vec3 _t1428 = [_t1425, _t1426, _t1427];
      real _t1429 = prim •00CE<$[3]; $[3]; $[]> (_t1428, dPos0B28);
      real _t142A = prim /0055 (_t1424, _t1429);
      bool _t142B = prim >0080 (time1102, _t142A);
      string _t142C = "\n";
      print (_t1410, _t141D, _t142B, _t142C);
      real _t142D = 0.e0;
      real _t142E = 0.e0;
      real _t142F = -0.1e1;
      real _t1430 = 0.e0;
      vec3 _t1431 = [_t142E, _t142F, _t1430];
      real _t1432 = prim •00CE<$[3]; $[3]; $[]> (_t1431, refPos0B27);
      real _t1433 = prim -0026<$[]> (_t142D, _t1432);
      real _t1434 = 0.e0;
      real _t1435 = -0.1e1;
      real _t1436 = 0.e0;
      vec3 _t1437 = [_t1434, _t1435, _t1436];
      real _t1438 = prim •00CE<$[3]; $[3]; $[]> (_t1437, dPos0B28);
      time1102 = prim /0055 (_t1433, _t1438);
      face1103 = 2;
    } else {
      real _t1439 = 0.e0;
      real _t143A = 0.e0;
      real _t143B = -0.1e1;
      real _t143C = 0.e0;
      vec3 _t143D = [_t143A, _t143B, _t143C];
      real _t143E = prim •00CE<$[3]; $[3]; $[]> (_t143D, refPos0B27);
      real _t143F = prim -0026<$[]> (_t1439, _t143E);
      real _t1440 = 0.e0;
      real _t1441 = -0.1e1;
      real _t1442 = 0.e0;
      vec3 _t1443 = [_t1440, _t1441, _t1442];
      real _t1444 = prim •00CE<$[3]; $[3]; $[]> (_t1443, dPos0B28);
      faceTime1104 = prim /0055 (_t143F, _t1444);
      string _t1445 = "Saving backup time: ";
      string _t1446 = "\n";
      print (_t1445, faceTime1104, _t1446);
    }
  }
  string _t1447 = "\ntest :";
  real _t1448 = 0.e0;
  real _t1449 = 0.e0;
  real _t144A = 0.e0;
  real _t144B = -0.1e1;
  vec3 _t144C = [_t1449, _t144A, _t144B];
  real _t144D = prim •00CE<$[3]; $[3]; $[]> (_t144C, refPos0B27);
  real _t144E = prim -0026<$[]> (_t1448, _t144D);
  real _t144F = 0.e0;
  real _t1450 = 0.e0;
  real _t1451 = -0.1e1;
  vec3 _t1452 = [_t144F, _t1450, _t1451];
  real _t1453 = prim •00CE<$[3]; $[3]; $[]> (_t1452, dPos0B28);
  real _t1454 = prim /0055 (_t144E, _t1453);
  string _t1455 = " test2: ";
  real _t1456 = 0.e0;
  real _t1457 = 0.e0;
  real _t1458 = -0.1e1;
  vec3 _t1459 = [_t1456, _t1457, _t1458];
  real _t145A = prim •00CE<$[3]; $[3]; $[]> (_t1459, dPos0B28);
  string _t145B = " insideTest: ";
  real _t145C = 0.1e1;
  real _t145D = 0.1e-7;
  real _t145E = prim +0017<$[]> (_t145C, _t145D);
  real _t145F = 0.1e1;
  real _t1460 = 0.1e1;
  real _t1461 = 0.1e1;
  vec3 _t1462 = [_t145F, _t1460, _t1461];
  real _t1463 = 0.e0;
  real _t1464 = 0.e0;
  real _t1465 = 0.e0;
  real _t1466 = -0.1e1;
  vec3 _t1467 = [_t1464, _t1465, _t1466];
  real _t1468 = prim •00CE<$[3]; $[3]; $[]> (_t1467, refPos0B27);
  real _t1469 = prim -0026<$[]> (_t1463, _t1468);
  real _t146A = 0.e0;
  real _t146B = 0.e0;
  real _t146C = -0.1e1;
  vec3 _t146D = [_t146A, _t146B, _t146C];
  real _t146E = prim •00CE<$[3]; $[3]; $[]> (_t146D, dPos0B28);
  real _t146F = prim /0055 (_t1469, _t146E);
  vec3 _t1470 = prim *0038<$[3]> (dPos0B28, _t146F);
  vec3 _t1471 = prim +0017<$[3]> (refPos0B27, _t1470);
  real _t1472 = prim •00CE<$[3]; $[3]; $[]> (_t1462, _t1471);
  bool _t1473 = prim >0080 (_t145E, _t1472);
  real _t1474 = 0.1e-7;
  real _t1475 = 0.1e-7;
  real _t1476 = 0.1e-7;
  vec3 _t1477 = [_t1474, _t1475, _t1476];
  real _t1478 = 0.e0;
  real _t1479 = 0.e0;
  real _t147A = 0.e0;
  real _t147B = -0.1e1;
  vec3 _t147C = [_t1479, _t147A, _t147B];
  real _t147D = prim •00CE<$[3]; $[3]; $[]> (_t147C, refPos0B27);
  real _t147E = prim -0026<$[]> (_t1478, _t147D);
  real _t147F = 0.e0;
  real _t1480 = 0.e0;
  real _t1481 = -0.1e1;
  vec3 _t1482 = [_t147F, _t1480, _t1481];
  real _t1483 = prim •00CE<$[3]; $[3]; $[]> (_t1482, dPos0B28);
  real _t1484 = prim /0055 (_t147E, _t1483);
  vec3 _t1485 = prim *0038<$[3]> (dPos0B28, _t1484);
  vec3 _t1486 = prim +0017<$[3]> (refPos0B27, _t1485);
  vec3 _t1487 = prim +0017<$[3]> (_t1477, _t1486);
  real _t1488 = _t1487[0];
  real _t1489 = -0.e0;
  bool _t148A = prim >0080 (_t1488, _t1489);
  real _t148B = 0.1e-7;
  real _t148C = 0.1e-7;
  real _t148D = 0.1e-7;
  vec3 _t148E = [_t148B, _t148C, _t148D];
  real _t148F = 0.e0;
  real _t1490 = 0.e0;
  real _t1491 = 0.e0;
  real _t1492 = -0.1e1;
  vec3 _t1493 = [_t1490, _t1491, _t1492];
  real _t1494 = prim •00CE<$[3]; $[3]; $[]> (_t1493, refPos0B27);
  real _t1495 = prim -0026<$[]> (_t148F, _t1494);
  real _t1496 = 0.e0;
  real _t1497 = 0.e0;
  real _t1498 = -0.1e1;
  vec3 _t1499 = [_t1496, _t1497, _t1498];
  real _t149A = prim •00CE<$[3]; $[3]; $[]> (_t1499, dPos0B28);
  real _t149B = prim /0055 (_t1495, _t149A);
  vec3 _t149C = prim *0038<$[3]> (dPos0B28, _t149B);
  vec3 _t149D = prim +0017<$[3]> (refPos0B27, _t149C);
  vec3 _t149E = prim +0017<$[3]> (_t148E, _t149D);
  real _t149F = _t149E[1];
  real _t14A0 = -0.e0;
  bool _t14A1 = prim >0080 (_t149F, _t14A0);
  real _t14A2 = 0.1e-7;
  real _t14A3 = 0.1e-7;
  real _t14A4 = 0.1e-7;
  vec3 _t14A5 = [_t14A2, _t14A3, _t14A4];
  real _t14A6 = 0.e0;
  real _t14A7 = 0.e0;
  real _t14A8 = 0.e0;
  real _t14A9 = -0.1e1;
  vec3 _t14AA = [_t14A7, _t14A8, _t14A9];
  real _t14AB = prim •00CE<$[3]; $[3]; $[]> (_t14AA, refPos0B27);
  real _t14AC = prim -0026<$[]> (_t14A6, _t14AB);
  real _t14AD = 0.e0;
  real _t14AE = 0.e0;
  real _t14AF = -0.1e1;
  vec3 _t14B0 = [_t14AD, _t14AE, _t14AF];
  real _t14B1 = prim •00CE<$[3]; $[3]; $[]> (_t14B0, dPos0B28);
  real _t14B2 = prim /0055 (_t14AC, _t14B1);
  vec3 _t14B3 = prim *0038<$[3]> (dPos0B28, _t14B2);
  vec3 _t14B4 = prim +0017<$[3]> (refPos0B27, _t14B3);
  vec3 _t14B5 = prim +0017<$[3]> (_t14A5, _t14B4);
  real _t14B6 = _t14B5[2];
  real _t14B7 = -0.e0;
  bool _t14B8 = prim >0080 (_t14B6, _t14B7);
  bool _t14B9 = prim $and01C4 (_t14A1, _t14B8);
  bool _t14BA = prim $and01C4 (_t148A, _t14B9);
  bool _t14BB = prim $and01C4 (_t1473, _t14BA);
  string _t14BC = " dist: ";
  real _t14BD = 0.e0;
  real _t14BE = 0.e0;
  real _t14BF = 0.e0;
  real _t14C0 = -0.1e1;
  vec3 _t14C1 = [_t14BE, _t14BF, _t14C0];
  real _t14C2 = prim •00CE<$[3]; $[3]; $[]> (_t14C1, refPos0B27);
  real _t14C3 = prim -0026<$[]> (_t14BD, _t14C2);
  real _t14C4 = prim |()|00B5<$[]> (_t14C3);
  string _t14C5 = "signed dist: ";
  real _t14C6 = 0.e0;
  real _t14C7 = 0.e0;
  real _t14C8 = 0.e0;
  real _t14C9 = -0.1e1;
  vec3 _t14CA = [_t14C7, _t14C8, _t14C9];
  real _t14CB = prim •00CE<$[3]; $[3]; $[]> (_t14CA, refPos0B27);
  real _t14CC = prim -0026<$[]> (_t14C6, _t14CB);
  string _t14CD = " face: ";
  int _t14CE = 3;
  string _t14CF = " place: ";
  real _t14D0 = 0.e0;
  real _t14D1 = 0.e0;
  real _t14D2 = 0.e0;
  real _t14D3 = -0.1e1;
  vec3 _t14D4 = [_t14D1, _t14D2, _t14D3];
  real _t14D5 = prim •00CE<$[3]; $[3]; $[]> (_t14D4, refPos0B27);
  real _t14D6 = prim -0026<$[]> (_t14D0, _t14D5);
  real _t14D7 = 0.e0;
  real _t14D8 = 0.e0;
  real _t14D9 = -0.1e1;
  vec3 _t14DA = [_t14D7, _t14D8, _t14D9];
  real _t14DB = prim •00CE<$[3]; $[3]; $[]> (_t14DA, dPos0B28);
  real _t14DC = prim /0055 (_t14D6, _t14DB);
  vec3 _t14DD = prim *0038<$[3]> (dPos0B28, _t14DC);
  vec3 _t14DE = prim +0017<$[3]> (refPos0B27, _t14DD);
  string _t14DF = " error: ";
  real _t14E0 = 0.e0;
  real _t14E1 = 0.e0;
  real _t14E2 = 0.e0;
  real _t14E3 = -0.1e1;
  vec3 _t14E4 = [_t14E1, _t14E2, _t14E3];
  real _t14E5 = 0.e0;
  real _t14E6 = 0.e0;
  real _t14E7 = 0.e0;
  real _t14E8 = -0.1e1;
  vec3 _t14E9 = [_t14E6, _t14E7, _t14E8];
  real _t14EA = prim •00CE<$[3]; $[3]; $[]> (_t14E9, refPos0B27);
  real _t14EB = prim -0026<$[]> (_t14E5, _t14EA);
  real _t14EC = 0.e0;
  real _t14ED = 0.e0;
  real _t14EE = -0.1e1;
  vec3 _t14EF = [_t14EC, _t14ED, _t14EE];
  real _t14F0 = prim •00CE<$[3]; $[3]; $[]> (_t14EF, dPos0B28);
  real _t14F1 = prim /0055 (_t14EB, _t14F0);
  vec3 _t14F2 = prim *0038<$[3]> (dPos0B28, _t14F1);
  vec3 _t14F3 = prim +0017<$[3]> (refPos0B27, _t14F2);
  real _t14F4 = prim •00CE<$[3]; $[3]; $[]> (_t14E4, _t14F3);
  real _t14F5 = prim -0026<$[]> (_t14E0, _t14F4);
  real _t14F6 = prim |()|00B5<$[]> (_t14F5);
  string _t14F7 = " offset :";
  string _t14F8 = " dp: ";
  string _t14F9 = " otherPossibleTime: ";
  string _t14FA = "\n";
  string _t14FB = "\n original face: ";
  string _t14FC = " ";
  print (_t1447, _t1454, _t1455, _t145A, _t145B, _t14BB, _t14BC, _t14C4, _t14C5, _t14CC, _t14CD, _t14CE, _t14CF, _t14DE, _t14DF, _t14F6, _t14F7, refPos0B27, _t14F8, dPos0B28, _t14F9, faceTime1104, _t14FA, _t14FB, i1101, _t14FC);
  real _t14FD = 0.e0;
  real _t14FE = 0.e0;
  real _t14FF = 0.e0;
  real _t1500 = -0.1e1;
  vec3 _t1501 = [_t14FE, _t14FF, _t1500];
  real _t1502 = prim •00CE<$[3]; $[3]; $[]> (_t1501, refPos0B27);
  real _t1503 = prim -0026<$[]> (_t14FD, _t1502);
  real _t1504 = 0.e0;
  real _t1505 = 0.e0;
  real _t1506 = -0.1e1;
  vec3 _t1507 = [_t1504, _t1505, _t1506];
  real _t1508 = prim •00CE<$[3]; $[3]; $[]> (_t1507, dPos0B28);
  real _t1509 = prim /0055 (_t1503, _t1508);
  real _t150A = -0.1e-7;
  bool _t150B = prim >=007E (_t1509, _t150A);
  real _t150C = 0.e0;
  real _t150D = 0.e0;
  real _t150E = 0.e0;
  real _t150F = -0.1e1;
  vec3 _t1510 = [_t150D, _t150E, _t150F];
  real _t1511 = prim •00CE<$[3]; $[3]; $[]> (_t1510, refPos0B27);
  real _t1512 = prim -0026<$[]> (_t150C, _t1511);
  real _t1513 = 0.e0;
  real _t1514 = 0.e0;
  real _t1515 = -0.1e1;
  vec3 _t1516 = [_t1513, _t1514, _t1515];
  real _t1517 = prim •00CE<$[3]; $[3]; $[]> (_t1516, dPos0B28);
  real _t1518 = prim /0055 (_t1512, _t1517);
  bool _t1519 = prim >0080 (time1102, _t1518);
  real _t151A = 0.e0;
  real _t151B = 0.e0;
  real _t151C = -0.1e1;
  vec3 _t151D = [_t151A, _t151B, _t151C];
  real _t151E = prim •00CE<$[3]; $[3]; $[]> (_t151D, dPos0B28);
  real _t151F = prim |()|00B5<$[]> (_t151E);
  real _t1520 = 0.1e-7;
  bool _t1521 = prim >=007E (_t151F, _t1520);
  bool _t1522 = prim $and01C4 (_t1519, _t1521);
  bool _t1523 = prim $and01C4 (_t150B, _t1522);
  if _t1523 {
    int _t1524 = 3;
    bool _t1525 = prim !=0086 (i1101, _t1524);
    if _t1525 {
      string _t1526 = "Saving at this face!";
      real _t1527 = 0.e0;
      real _t1528 = 0.e0;
      real _t1529 = 0.e0;
      real _t152A = -0.1e1;
      vec3 _t152B = [_t1528, _t1529, _t152A];
      real _t152C = prim •00CE<$[3]; $[3]; $[]> (_t152B, refPos0B27);
      real _t152D = prim -0026<$[]> (_t1527, _t152C);
      real _t152E = 0.e0;
      real _t152F = 0.e0;
      real _t1530 = -0.1e1;
      vec3 _t1531 = [_t152E, _t152F, _t1530];
      real _t1532 = prim •00CE<$[3]; $[3]; $[]> (_t1531, dPos0B28);
      real _t1533 = prim /0055 (_t152D, _t1532);
      real _t1534 = 0.e0;
      real _t1535 = 0.e0;
      real _t1536 = 0.e0;
      real _t1537 = -0.1e1;
      vec3 _t1538 = [_t1535, _t1536, _t1537];
      real _t1539 = prim •00CE<$[3]; $[3]; $[]> (_t1538, refPos0B27);
      real _t153A = prim -0026<$[]> (_t1534, _t1539);
      real _t153B = 0.e0;
      real _t153C = 0.e0;
      real _t153D = -0.1e1;
      vec3 _t153E = [_t153B, _t153C, _t153D];
      real _t153F = prim •00CE<$[3]; $[3]; $[]> (_t153E, dPos0B28);
      real _t1540 = prim /0055 (_t153A, _t153F);
      bool _t1541 = prim >0080 (time1102, _t1540);
      string _t1542 = "\n";
      print (_t1526, _t1533, _t1541, _t1542);
      real _t1543 = 0.e0;
      real _t1544 = 0.e0;
      real _t1545 = 0.e0;
      real _t1546 = -0.1e1;
      vec3 _t1547 = [_t1544, _t1545, _t1546];
      real _t1548 = prim •00CE<$[3]; $[3]; $[]> (_t1547, refPos0B27);
      real _t1549 = prim -0026<$[]> (_t1543, _t1548);
      real _t154A = 0.e0;
      real _t154B = 0.e0;
      real _t154C = -0.1e1;
      vec3 _t154D = [_t154A, _t154B, _t154C];
      real _t154E = prim •00CE<$[3]; $[3]; $[]> (_t154D, dPos0B28);
      time1102 = prim /0055 (_t1549, _t154E);
      face1103 = 3;
    } else {
      real _t154F = 0.e0;
      real _t1550 = 0.e0;
      real _t1551 = 0.e0;
      real _t1552 = -0.1e1;
      vec3 _t1553 = [_t1550, _t1551, _t1552];
      real _t1554 = prim •00CE<$[3]; $[3]; $[]> (_t1553, refPos0B27);
      real _t1555 = prim -0026<$[]> (_t154F, _t1554);
      real _t1556 = 0.e0;
      real _t1557 = 0.e0;
      real _t1558 = -0.1e1;
      vec3 _t1559 = [_t1556, _t1557, _t1558];
      real _t155A = prim •00CE<$[3]; $[3]; $[]> (_t1559, dPos0B28);
      faceTime1104 = prim /0055 (_t1555, _t155A);
      string _t155B = "Saving backup time: ";
      string _t155C = "\n";
      print (_t155B, faceTime1104, _t155C);
    }
  }
  int _t155D = -1;
  bool _t155E = prim !=0086 (face1103, _t155D);
  real _t155F = 0.1e1;
  real _t1560 = 0.1e-7;
  real _t1561 = prim +0017<$[]> (_t155F, _t1560);
  real _t1562 = 0.1e1;
  real _t1563 = 0.1e1;
  real _t1564 = 0.1e1;
  vec3 _t1565 = [_t1562, _t1563, _t1564];
  real _t1566 = 0.e0;
  real _t1567 = prim max0125 (time1102, _t1566);
  vec3 _t1568 = prim *0038<$[3]> (dPos0B28, _t1567);
  vec3 _t1569 = prim +0017<$[3]> (refPos0B27, _t1568);
  real _t156A = prim •00CE<$[3]; $[3]; $[]> (_t1565, _t1569);
  bool _t156B = prim >0080 (_t1561, _t156A);
  real _t156C = 0.1e-7;
  real _t156D = 0.1e-7;
  real _t156E = 0.1e-7;
  vec3 _t156F = [_t156C, _t156D, _t156E];
  real _t1570 = 0.e0;
  real _t1571 = prim max0125 (time1102, _t1570);
  vec3 _t1572 = prim *0038<$[3]> (dPos0B28, _t1571);
  vec3 _t1573 = prim +0017<$[3]> (refPos0B27, _t1572);
  vec3 _t1574 = prim +0017<$[3]> (_t156F, _t1573);
  real _t1575 = _t1574[0];
  real _t1576 = -0.e0;
  bool _t1577 = prim >0080 (_t1575, _t1576);
  real _t1578 = 0.1e-7;
  real _t1579 = 0.1e-7;
  real _t157A = 0.1e-7;
  vec3 _t157B = [_t1578, _t1579, _t157A];
  real _t157C = 0.e0;
  real _t157D = prim max0125 (time1102, _t157C);
  vec3 _t157E = prim *0038<$[3]> (dPos0B28, _t157D);
  vec3 _t157F = prim +0017<$[3]> (refPos0B27, _t157E);
  vec3 _t1580 = prim +0017<$[3]> (_t157B, _t157F);
  real _t1581 = _t1580[1];
  real _t1582 = -0.e0;
  bool _t1583 = prim >0080 (_t1581, _t1582);
  real _t1584 = 0.1e-7;
  real _t1585 = 0.1e-7;
  real _t1586 = 0.1e-7;
  vec3 _t1587 = [_t1584, _t1585, _t1586];
  real _t1588 = 0.e0;
  real _t1589 = prim max0125 (time1102, _t1588);
  vec3 _t158A = prim *0038<$[3]> (dPos0B28, _t1589);
  vec3 _t158B = prim +0017<$[3]> (refPos0B27, _t158A);
  vec3 _t158C = prim +0017<$[3]> (_t1587, _t158B);
  real _t158D = _t158C[2];
  real _t158E = -0.e0;
  bool _t158F = prim >0080 (_t158D, _t158E);
  bool _t1590 = prim $and01C4 (_t1583, _t158F);
  bool _t1591 = prim $and01C4 (_t1577, _t1590);
  bool _t1592 = prim $and01C4 (_t156B, _t1591);
  bool _t1593 = prim $and01C4 (_t155E, _t1592);
  if _t1593 {
    string _t1594 = "\nReturning via standard : ";
    real _t1595 = 0.e0;
    real _t1596 = prim max0125 (time1102, _t1595);
    real _t1597 = (real)face1103;
    vec2 _t1598 = [_t1596, _t1597];
    string _t1599 = "\n";
    print (_t1594, _t1598, _t1599);
    real _t159A = 0.e0;
    real _t159B = prim max0125 (time1102, _t159A);
    real _t159C = (real)face1103;
    vec2 _t159D = [_t159B, _t159C];
    return _t159D;
  } else {
    real _t159E = -inf;
    bool _t159F = prim ==0084 (_t159E, faceTime1104);
    if _t159F {
      string _t15A0 = "\nReturning via fail : ";
      real _t15A1 = -0.1e1;
      real _t15A2 = -0.1e1;
      vec2 _t15A3 = [_t15A1, _t15A2];
      string _t15A4 = "\n";
      print (_t15A0, _t15A3, _t15A4);
      real _t15A5 = -0.1e1;
      real _t15A6 = -0.1e1;
      vec2 _t15A7 = [_t15A5, _t15A6];
      return _t15A7;
    } else {
      string _t15A8 = "\nReturning via backup : ";
      real _t15A9 = 0.e0;
      real _t15AA = prim max0125 (faceTime1104, _t15A9);
      real _t15AB = (real)i1101;
      vec2 _t15AC = [_t15AA, _t15AB];
      string _t15AD = "\n";
      print (_t15A8, _t15AC, _t15AD);
      real _t15AE = 0.e0;
      real _t15AF = prim max0125 (faceTime1104, _t15AE);
      real _t15B0 = (real)i1101;
      vec2 _t15B1 = [_t15AF, _t15B0];
      return _t15B1;
    }
  }
}
function Femdata: Mesh#0 domain15B4 (Femdata: Space arg015B5)
{
  Femdata: Mesh _t15B6 = extractFem(arg015B5, Mesh);
  return _t15B6;
}
function Femdata: Space#0 space15B7 (Femdata: FemFunc arg015B8)
{
  Femdata: Space _t15B9 = extractFem(arg015B8, Space);
  return _t15B9;
}
function Femdata: FuncCell#0 funcCell15BA (Femdata: FemFunc arg015BB, Femdata: MeshCell arg115BC)
{
  int _t15BD = extractFemItem(CellIndex(MeshCell), int, arg115BC);
  Femdata: FuncCell _t15BE = loadFem(FuncCell, arg015BB, _t15BD);
  return _t15BE;
}
function bool#1 insideTest15CC (vec3 x15CD)
{
  real _t15CE = 0.5e0;
  real _t15CF = 0.5e0;
  real _t15D0 = 0.5e0;
  vec3 _t15D1 = [_t15CE, _t15CF, _t15D0];
  vec3 mid15D2 = prim -0026<$[3]> (x15CD, _t15D1);
  bool _t15D3;
  real _t15D4 = mid15D2[0];
  real _t15D5 = prim |()|00B5<$[]> (_t15D4);
  real _t15D6 = 0.5e0;
  bool _t15D7 = prim <=007C (_t15D5, _t15D6);
  if _t15D7 {
    bool _t15D8;
    real _t15D9 = mid15D2[1];
    real _t15DA = prim |()|00B5<$[]> (_t15D9);
    real _t15DB = 0.5e0;
    bool _t15DC = prim <=007C (_t15DA, _t15DB);
    if _t15DC {
      real _t15DD = mid15D2[2];
      real _t15DE = prim |()|00B5<$[]> (_t15DD);
      real _t15DF = 0.5e0;
      _t15D8 = prim <=007C (_t15DE, _t15DF);
    } else {
      _t15D8 = false;
    }
    _t15D3 = _t15D8;
  } else {
    _t15D3 = false;
  }
  return _t15D3;
}
function vec3#3 fStep15E0 (vec3 x15E1)
{
  real _t15E2 = 0.5e0;
  real _t15E3 = 0.5e0;
  real _t15E4 = 0.5e0;
  vec3 _t15E5 = [_t15E2, _t15E3, _t15E4];
  vec3 xp15E6 = prim -0026<$[3]> (x15E1, _t15E5);
  real f15E7 = prim •00CE<$[3]; $[3]; $[]> (xp15E6, xp15E6);
  real _t15E8 = 0.2e1;
  vec3 gf15E9 = prim *0036<$[3]> (_t15E8, xp15E6);
  real _t15EA = prim •00CE<$[3]; $[3]; $[]> (gf15E9, gf15E9);
  vec3 _t15EB = prim /0057<$[3]> (gf15E9, _t15EA);
  real _t15EC = prim -0026<$[]> (v00479, f15E7);
  vec3 _t15ED = prim *0038<$[3]> (_t15EB, _t15EC);
  return _t15ED;
}
function tensor[3,3]#1 fPerp15EE (vec3 x15EF)
{
  real _t15F0 = 0.5e0;
  real _t15F1 = 0.5e0;
  real _t15F2 = 0.5e0;
  vec3 _t15F3 = [_t15F0, _t15F1, _t15F2];
  vec3 xp15F4 = prim -0026<$[3]> (x15EF, _t15F3);
  real _t15F5 = 0.2e1;
  vec3 gf15F6 = prim *0036<$[3]> (_t15F5, xp15F4);
  vec3 n15F7 = prim normalize0137<$[3]> (gf15F6);
  tensor[3,3] _t15F8 = prim $id01B9<%3> ();
  tensor[3,3] _t15F9 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (n15F7, n15F7);
  tensor[3,3] _t15FA = prim -0026<$[3,3]> (_t15F8, _t15F9);
  return _t15FA;
}
function real#1 fStrength15FB (vec3 x15FC)
{
  real _t15FD = 0.5e0;
  real _t15FE = 0.5e0;
  real _t15FF = 0.5e0;
  vec3 _t1600 = [_t15FD, _t15FE, _t15FF];
  vec3 xp1601 = prim -0026<$[3]> (x15FC, _t1600);
  real _t1602 = 0.2e1;
  vec3 gf1603 = prim *0036<$[3]> (_t1602, xp1601);
  real _t1604 = prim |()|00B5<$[3]> (gf1603);
  return _t1604;
}
function real#1 phi1605 (real r1606)
{
  real _t1607 = 0.1e1;
  real _t1608 = prim -0026<$[]> (_t1607, r1606);
  int _t1609 = 4;
  real _t160A = prim ^0068 (_t1608, _t1609);
  return _t160A;
}
function real#1 phi'160B (real r160C)
{
  int _t160D = -4;
  real _t160E = (real)_t160D;
  real _t160F = 0.1e1;
  real _t1610 = prim -0026<$[]> (_t160F, r160C);
  int _t1611 = 3;
  real _t1612 = prim ^0068 (_t1610, _t1611);
  real _t1613 = prim *0034 (_t160E, _t1612);
  return _t1613;
}
function real#2 enr1614 (vec3 x1615)
{
  real _t1616 = prim |()|00B5<$[3]> (x1615);
  real _t1617 = prim /0055 (_t1616, rad0477);
  real _t1618 = func phi1605 (_t1617);
  return _t1618;
}
function vec3#1 frc1619 (vec3 x161A)
{
  real _t161B = prim |()|00B5<$[3]> (x161A);
  real _t161C = prim /0055 (_t161B, rad0477);
  real _t161D = func phi'160B (_t161C);
  real _t161E = 0.1e1;
  real _t161F = prim /0055 (_t161E, rad0477);
  real _t1620 = prim *0034 (_t161D, _t161F);
  vec3 _t1621 = prim *0036<$[3]> (_t1620, x161A);
  real _t1622 = prim |()|00B5<$[3]> (x161A);
  vec3 _t1623 = prim /0057<$[3]> (_t1621, _t1622);
  return _t1623;
}
globalInit {
  int _t046B = 0;
  int _t0469 = 1;
  int _t046D = extractFemItem(NumCell(Mesh), int, meshData0467);
  int _t046C = prim -0024 (_t046D, _t0469);
  int[] _t0470 = prim $range01C3 (_t046B, _t046C);
  Femdata: MeshCell[] _t0471 = {};
  foreach _t046F in _t0470 {
    Femdata: MeshCell _t0472 = loadFem(MeshCell, meshData0467, _t046F);
    _t0471 = prim @0010<Femdata: MeshCell> (_t0471, _t0472);
  }
  simplex15CB = func refcell04D1 (meshData0467);
}
strand particle (vec3 pos01624, real hh01625) in 3D {
  output vec3 pos1626;
  output vec3 _pos1627;
  real hh1628;
  vec3 step1629;
  bool found162A;
  int nfs162B;
  int test162C;
  int testp162D;
  {
    pos1626 = pos01624;
    _pos1627 = pos1626;
    hh1628 = hh01625;
    step1629 = prim $zero01BB<$[3]> ();
    found162A = false;
    nfs162B = 0;
    test162C = 1;
    testp162D = 0;
  }
  update
  {
    bool _t162E;
    bool _t162F = func insideTest15CC (pos1626);
    bool _t1630 = prim !00BC (_t162F);
    if _t1630 {
      _t162E = true;
    } else {
      real _t1631 = func fStrength15FB (pos1626);
      real _t1632 = 0.e0;
      _t162E = prim ==0084 (_t1631, _t1632);
    }
    if _t162E {
      die;
    }
    bool _t1633 = prim !00BC (found162A);
    if _t1633 {
      step1629 = func fStep15E0 (pos1626);
      pos1626 = prim +0017<$[3]> (pos1626, step1629);
      _pos1627 = pos1626;
      real _t1634 = prim |()|00B5<$[3]> (step1629);
      real _t1635 = prim /0055 (_t1634, rad0477);
      bool _t1636 = prim >0080 (_t1635, eps0478);
      if _t1636 {
        int _t1637 = 1;
        nfs162B = prim +0015 (nfs162B, _t1637);
        int _t1638 = 10;
        bool _t1639 = prim >007F (nfs162B, _t1638);
        if _t1639 {
          die;
        }
      } else {
        found162A = true;
        testp162D = 1;
      }
    } else {
      vec3 _t163A = func fStep15E0 (pos1626);
      pos1626 = prim +0017<$[3]> (pos1626, _t163A);
      _pos1627 = pos1626;
      step1629 = prim $zero01BB<$[3]> ();
      real oldE163B = 0.e0;
      vec3 force163C = prim $zero01BB<$[3]> ();
      int nn163D = 0;
      particle[] _t163E = prim sphere0198<particle> (_pos1627, rad0477);
      foreach P163F in _t163E {
        vec3 _t1640 = P163F.pos1626;
        vec3 _t1641 = prim -0026<$[3]> (_t1640, pos1626);
        real _t1642 = func enr1614 (_t1641);
        oldE163B = prim +0017<$[]> (oldE163B, _t1642);
        vec3 _t1643 = P163F.pos1626;
        vec3 _t1644 = prim -0026<$[3]> (_t1643, pos1626);
        vec3 _t1645 = func frc1619 (_t1644);
        force163C = prim +0017<$[3]> (force163C, _t1645);
        int _t1646 = 1;
        nn163D = prim +0015 (nn163D, _t1646);
      }
      int _t1647 = 0;
      bool _t1648 = prim ==0082 (_t1647, nn163D);
      if _t1648 {
        real _t1649 = 0.5e0;
        real _t164A = prim *0034 (_t1649, rad0477);
        real _t164B = 0.e0;
        real _t164C = 0.e0;
        vec3 _t164D = [_t164A, _t164B, _t164C];
        vec3 _t164E = prim +0017<$[3]> (pos1626, _t164D);
        new particle (_t164E, hh1628);
        continue;
      }
      tensor[3,3] _t164F = func fPerp15EE (pos1626);
      force163C = prim •00CE<$[3,3]; $[3]; $[3]> (_t164F, force163C);
      vec3 es1650 = prim *0036<$[3]> (hh1628, force163C);
      real _t1651 = prim |()|00B5<$[3]> (es1650);
      bool _t1652 = prim >0080 (_t1651, rad0477);
      if _t1652 {
        real _t1653 = prim |()|00B5<$[3]> (es1650);
        real _t1654 = prim /0055 (rad0477, _t1653);
        hh1628 = prim *0034 (hh1628, _t1654);
        real _t1655 = prim |()|00B5<$[3]> (es1650);
        real _t1656 = prim /0055 (rad0477, _t1655);
        es1650 = prim *0038<$[3]> (es1650, _t1656);
      }
      vec3 samplePos1657 = prim +0017<$[3]> (pos1626, es1650);
      vec3 fs1658 = func fStep15E0 (samplePos1657);
      real _t1659 = prim |()|00B5<$[3]> (fs1658);
      real _t165A = prim |()|00B5<$[3]> (es1650);
      real _t165B = prim /0055 (_t1659, _t165A);
      real _t165C = 0.5e0;
      bool _t165D = prim >0080 (_t165B, _t165C);
      if _t165D {
        real _t165E = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t165E);
        continue;
      }
      vec3 oldPos165F = pos1626;
      vec3 up1660 = prim +0017<$[3]> (fs1658, es1650);
      pos1626 = prim +0017<$[3]> (pos1626, up1660);
      _pos1627 = pos1626;
      particle[] _t1661 = prim sphere0198<particle> (_pos1627, rad0477);
      real accum1666 = 0.e0;
      foreach P1662 in _t1661 {
        vec3 _t1663 = P1662.pos1626;
        vec3 _t1664 = prim -0026<$[3]> (pos1626, _t1663);
        real _t1665 = func enr1614 (_t1664);
        accum1666 = prim +0017<$[]> (accum1666, _t1665);
      }
      real newE1667 = accum1666;
      real _t1668 = prim -0026<$[]> (newE1667, oldE163B);
      real _t1669 = 0.5e0;
      vec3 _t166A = prim -0026<$[3]> (pos1626, oldPos165F);
      vec3 _t166B = prim *0036<$[3]> (_t1669, _t166A);
      vec3 _t166C = prim unary -008B<$[3]> (force163C);
      real _t166D = prim •00CE<$[3]; $[3]; $[]> (_t166B, _t166C);
      bool _t166E = prim >0080 (_t1668, _t166D);
      if _t166E {
        pos1626 = oldPos165F;
        _pos1627 = pos1626;
        real _t166F = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t166F);
        continue;
      }
      real _t1670 = 0.11e1;
      hh1628 = prim *0034 (hh1628, _t1670);
      step1629 = up1660;
      int _t1671 = 5;
      bool _t1672 = prim <0079 (nn163D, _t1671);
      if _t1672 {
        real _t1673 = 0.5e0;
        real _t1674 = prim *0034 (_t1673, rad0477);
        vec3 _t1675 = prim normalize0137<$[3]> (es1650);
        vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
        vec3 _t1677 = prim +0017<$[3]> (pos1626, _t1676);
        new particle (_t1677, hh1628);
      }
    }
  }
}
collection {
  foreach x1678 in ipos047A {
    real _t1679 = 0.1e1;
    new particle (x1678, _t1679);
  }
}
update {
  int res167A= sum<int> { (P167D) => {
      int _t167E = P167D.test162C;
      return _t167E;
    } (P167B, P167B)
  | P167B in all };
  int num1680 = res167A;
  int res1681= sum<int> { (P1684) => {
      int _t1685 = P1684.testp162D;
      return _t1685;
    } (P1682, P1682)
  | P1682 in all };
  int numFound1687 = res1681;
  bool res1688= all { (P168B) => {
      bool _t168C = P168B.found162A;
      return _t168C;
    } (P1689, P1689)
  | P1689 in all };
  bool allFound168E = res1688;
  real res168F= max<real> { (P1693) => {
      vec3 _t1694 = P1693.step1629;
      real _t1695 = prim |()|00B5<$[3]> (_t1694);
      return _t1695;
    } (P1690, P1690)
  | P1690 in all };
  real maxStep1697 = res168F;
  real res1698= max<real> { (P16A1) => {
      vec3 _t16A2 = P16A1.pos1626;
      real _t16A3 = 0.5e0;
      real _t16A4 = 0.5e0;
      real _t16A5 = 0.5e0;
      vec3 _t16A6 = [_t16A3, _t16A4, _t16A5];
      vec3 _t16A7 = prim -0026<$[3]> (_t16A2, _t16A6);
      real _t16A8 = prim |()|00B5<$[3]> (_t16A7);
      return _t16A8;
    } (P1699, P1699)
  | P1699 in all };
  real maxDist16AA = res1698;
  real res16AB= min<real> { (P16B4) => {
      vec3 _t16B5 = P16B4.pos1626;
      real _t16B6 = 0.5e0;
      real _t16B7 = 0.5e0;
      real _t16B8 = 0.5e0;
      vec3 _t16B9 = [_t16B6, _t16B7, _t16B8];
      vec3 _t16BA = prim -0026<$[3]> (_t16B5, _t16B9);
      real _t16BB = prim |()|00B5<$[3]> (_t16BA);
      return _t16BB;
    } (P16AC, P16AC)
  | P16AC in all };
  real minDist16BD = res16AB;
  vec2 averageDist16BE = [minDist16BD, maxDist16AA];
  string _t16BF = "One run:";
  string _t16C0 = " and ";
  real _t16C1 = prim /0055 (maxStep1697, rad0477);
  string _t16C2 = " and ";
  real _t16C3 = prim /0055 (maxStep1697, rad0477);
  bool _t16C4 = prim <007A (_t16C3, eps0478);
  string _t16C5 = " and ";
  string _t16C6 = " of ";
  string _t16C7 = " and ";
  string _t16C8 = "\n";
  print (_t16BF, allFound168E, _t16C0, _t16C1, _t16C2, _t16C4, _t16C5, numFound1687, _t16C6, num1680, _t16C7, averageDist16BE, _t16C8);
  if allFound168E {
    real _t16C9 = prim /0055 (maxStep1697, rad0477);
    bool _t16CA = prim <007A (_t16C9, eps0478);
    if _t16CA {
      string _t16CB = "CONVERGED!\n";
      print (_t16CB);
      stabilize_all;
    }
  }
}
/* Program end */
/* Simplified Program (after after inlining) start */
properties: GlobalInit,StabilizeAll,GlobalReduce,StrandSets,GlobalUpdate,NewStrands,StrandCommunication,StrandsMayDie,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData0467;
input FemData:Space 0space0473_intermedateGlobal0474;
input FemData:FemFunc 0data0475_intermedateGlobal0476;
input real rad0477 = <default>;
input real eps0478 = <default>;
input real v00479 = <default>;
input vec3[] ipos047A;
constants {
  rad0477 = 0.1e-1;
  eps0478 = 0.1e-1;
  v00479 = 0.625e-1;
}
function int[2]#8 nextCell4054F (int faceIdx0B18, int cell0B19, Femdata: Mesh mesh0B1A)
{
  int _t0B1B = -1;
  bool _t0B1C = prim ==0082 (faceIdx0B18, _t0B1B);
  if _t0B1C {
    int _t0B1D = -1;
    int _t0B1E = -1;
    int[2] _t0B1F = {_t0B1D, _t0B1E};
    return _t0B1F;
  } else {
    int _t0B20 = 8;
    int _t0B21 = prim *0033 (cell0B19, _t0B20);
    int _t0B22 = 2;
    int _t0B23 = prim *0033 (faceIdx0B18, _t0B22);
    int _t0B24 = prim +0015 (_t0B21, _t0B23);
    int[2] _t0B25 = extractFemItemN((mesh0B1A, _t0B24),CellFaceCell(Mesh),);
    return _t0B25;
  }
}
globalInit {
  int _t046B = 0;
  int _t0469 = 1;
  int _t046D = extractFemItem(NumCell(Mesh), int, meshData0467);
  int _t046C = prim -0024 (_t046D, _t0469);
  int[] _t0470 = prim $range01C3 (_t046B, _t046C);
  Femdata: MeshCell[] _t0471 = {};
  foreach _t046F in _t0470 {
    Femdata: MeshCell _t0472 = loadFem(MeshCell, meshData0467, _t046F);
    _t0471 = prim @0010<Femdata: MeshCell> (_t0471, _t0472);
  }
  Femdata: RefCell simplex16DB;
  Femdata: RefCell _t16DC = extractFemItem(RefCell(Mesh), Femdata: RefCell, meshData0467);
  simplex16DB = _t16DC;
  simplex15CB = simplex16DB;
}
strand particle (vec3 pos01624, real hh01625) in 3D {
  output vec3 pos1626;
  output vec3 _pos1627;
  real hh1628;
  vec3 step1629;
  bool found162A;
  int nfs162B;
  int test162C;
  int testp162D;
  {
    pos1626 = pos01624;
    _pos1627 = pos1626;
    hh1628 = hh01625;
    step1629 = prim $zero01BB<$[3]> ();
    found162A = false;
    nfs162B = 0;
    test162C = 1;
    testp162D = 0;
  }
  update
  {
    bool _t162E;
    bool _t162F;
    real _t1733 = 0.5e0;
    real _t1734 = 0.5e0;
    real _t1735 = 0.5e0;
    vec3 _t1736 = [_t1733, _t1734, _t1735];
    vec3 mid1737 = prim -0026<$[3]> (pos1626, _t1736);
    bool _t1738;
    real _t1739 = mid1737[0];
    real _t173A = prim |()|00B5<$[]> (_t1739);
    real _t173B = 0.5e0;
    bool _t173C = prim <=007C (_t173A, _t173B);
    if _t173C {
      bool _t173D;
      real _t173E = mid1737[1];
      real _t173F = prim |()|00B5<$[]> (_t173E);
      real _t1740 = 0.5e0;
      bool _t1741 = prim <=007C (_t173F, _t1740);
      if _t1741 {
        real _t1742 = mid1737[2];
        real _t1743 = prim |()|00B5<$[]> (_t1742);
        real _t1744 = 0.5e0;
        _t173D = prim <=007C (_t1743, _t1744);
      } else {
        _t173D = false;
      }
      _t1738 = _t173D;
    } else {
      _t1738 = false;
    }
    _t162F = _t1738;
    bool _t1630 = prim !00BC (_t162F);
    if _t1630 {
      _t162E = true;
    } else {
      real _t1631;
      real _t172B = 0.5e0;
      real _t172C = 0.5e0;
      real _t172D = 0.5e0;
      vec3 _t172E = [_t172B, _t172C, _t172D];
      vec3 xp172F = prim -0026<$[3]> (pos1626, _t172E);
      real _t1730 = 0.2e1;
      vec3 gf1731 = prim *0036<$[3]> (_t1730, xp172F);
      real _t1732 = prim |()|00B5<$[3]> (gf1731);
      _t1631 = _t1732;
      real _t1632 = 0.e0;
      _t162E = prim ==0084 (_t1631, _t1632);
    }
    if _t162E {
      die;
    }
    bool _t1633 = prim !00BC (found162A);
    if _t1633 {
      vec3 step16DD;
      real _t16DE = 0.5e0;
      real _t16DF = 0.5e0;
      real _t16E0 = 0.5e0;
      vec3 _t16E1 = [_t16DE, _t16DF, _t16E0];
      vec3 xp16E2 = prim -0026<$[3]> (pos1626, _t16E1);
      real f16E3 = prim •00CE<$[3]; $[3]; $[]> (xp16E2, xp16E2);
      real _t16E4 = 0.2e1;
      vec3 gf16E5 = prim *0036<$[3]> (_t16E4, xp16E2);
      real _t16E6 = prim •00CE<$[3]; $[3]; $[]> (gf16E5, gf16E5);
      vec3 _t16E7 = prim /0057<$[3]> (gf16E5, _t16E6);
      real _t16E8 = prim -0026<$[]> (v00479, f16E3);
      vec3 _t16E9 = prim *0038<$[3]> (_t16E7, _t16E8);
      step16DD = _t16E9;
      step1629 = step16DD;
      pos1626 = prim +0017<$[3]> (pos1626, step1629);
      _pos1627 = pos1626;
      real _t1634 = prim |()|00B5<$[3]> (step1629);
      real _t1635 = prim /0055 (_t1634, rad0477);
      bool _t1636 = prim >0080 (_t1635, eps0478);
      if _t1636 {
        int _t1637 = 1;
        nfs162B = prim +0015 (nfs162B, _t1637);
        int _t1638 = 10;
        bool _t1639 = prim >007F (nfs162B, _t1638);
        if _t1639 {
          die;
        }
      } else {
        found162A = true;
        testp162D = 1;
      }
    } else {
      vec3 _t163A;
      real _t171F = 0.5e0;
      real _t1720 = 0.5e0;
      real _t1721 = 0.5e0;
      vec3 _t1722 = [_t171F, _t1720, _t1721];
      vec3 xp1723 = prim -0026<$[3]> (pos1626, _t1722);
      real f1724 = prim •00CE<$[3]; $[3]; $[]> (xp1723, xp1723);
      real _t1725 = 0.2e1;
      vec3 gf1726 = prim *0036<$[3]> (_t1725, xp1723);
      real _t1727 = prim •00CE<$[3]; $[3]; $[]> (gf1726, gf1726);
      vec3 _t1728 = prim /0057<$[3]> (gf1726, _t1727);
      real _t1729 = prim -0026<$[]> (v00479, f1724);
      vec3 _t172A = prim *0038<$[3]> (_t1728, _t1729);
      _t163A = _t172A;
      pos1626 = prim +0017<$[3]> (pos1626, _t163A);
      _pos1627 = pos1626;
      step1629 = prim $zero01BB<$[3]> ();
      real oldE163B = 0.e0;
      vec3 force163C = prim $zero01BB<$[3]> ();
      int nn163D = 0;
      particle[] _t163E = prim sphere0198<particle> (_pos1627, rad0477);
      foreach P163F in _t163E {
        vec3 _t1640 = P163F.pos1626;
        vec3 _t1641 = prim -0026<$[3]> (_t1640, pos1626);
        real _t1642;
        real _t1718 = prim |()|00B5<$[3]> (_t1641);
        real _t1719 = prim /0055 (_t1718, rad0477);
        real _t171A;
        real _t171B = 0.1e1;
        real _t171C = prim -0026<$[]> (_t171B, _t1719);
        int _t171D = 4;
        real _t171E = prim ^0068 (_t171C, _t171D);
        _t171A = _t171E;
        _t1642 = _t171A;
        oldE163B = prim +0017<$[]> (oldE163B, _t1642);
        vec3 _t1643 = P163F.pos1626;
        vec3 _t1644 = prim -0026<$[3]> (_t1643, pos1626);
        vec3 _t1645;
        real _t1708 = prim |()|00B5<$[3]> (_t1644);
        real _t1709 = prim /0055 (_t1708, rad0477);
        real _t170A;
        int _t170B = -4;
        real _t170C = (real)_t170B;
        real _t170D = 0.1e1;
        real _t170E = prim -0026<$[]> (_t170D, _t1709);
        int _t170F = 3;
        real _t1710 = prim ^0068 (_t170E, _t170F);
        real _t1711 = prim *0034 (_t170C, _t1710);
        _t170A = _t1711;
        real _t1712 = 0.1e1;
        real _t1713 = prim /0055 (_t1712, rad0477);
        real _t1714 = prim *0034 (_t170A, _t1713);
        vec3 _t1715 = prim *0036<$[3]> (_t1714, _t1644);
        real _t1716 = prim |()|00B5<$[3]> (_t1644);
        vec3 _t1717 = prim /0057<$[3]> (_t1715, _t1716);
        _t1645 = _t1717;
        force163C = prim +0017<$[3]> (force163C, _t1645);
        int _t1646 = 1;
        nn163D = prim +0015 (nn163D, _t1646);
      }
      int _t1647 = 0;
      bool _t1648 = prim ==0082 (_t1647, nn163D);
      if _t1648 {
        real _t1649 = 0.5e0;
        real _t164A = prim *0034 (_t1649, rad0477);
        real _t164B = 0.e0;
        real _t164C = 0.e0;
        vec3 _t164D = [_t164A, _t164B, _t164C];
        vec3 _t164E = prim +0017<$[3]> (pos1626, _t164D);
        new particle (_t164E, hh1628);
        continue;
      }
      tensor[3,3] _t164F;
      real _t16FD = 0.5e0;
      real _t16FE = 0.5e0;
      real _t16FF = 0.5e0;
      vec3 _t1700 = [_t16FD, _t16FE, _t16FF];
      vec3 xp1701 = prim -0026<$[3]> (pos1626, _t1700);
      real _t1702 = 0.2e1;
      vec3 gf1703 = prim *0036<$[3]> (_t1702, xp1701);
      vec3 n1704 = prim normalize0137<$[3]> (gf1703);
      tensor[3,3] _t1705 = prim $id01B9<%3> ();
      tensor[3,3] _t1706 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (n1704, n1704);
      tensor[3,3] _t1707 = prim -0026<$[3,3]> (_t1705, _t1706);
      _t164F = _t1707;
      force163C = prim •00CE<$[3,3]; $[3]; $[3]> (_t164F, force163C);
      vec3 es1650 = prim *0036<$[3]> (hh1628, force163C);
      real _t1651 = prim |()|00B5<$[3]> (es1650);
      bool _t1652 = prim >0080 (_t1651, rad0477);
      if _t1652 {
        real _t1653 = prim |()|00B5<$[3]> (es1650);
        real _t1654 = prim /0055 (rad0477, _t1653);
        hh1628 = prim *0034 (hh1628, _t1654);
        real _t1655 = prim |()|00B5<$[3]> (es1650);
        real _t1656 = prim /0055 (rad0477, _t1655);
        es1650 = prim *0038<$[3]> (es1650, _t1656);
      }
      vec3 samplePos1657 = prim +0017<$[3]> (pos1626, es1650);
      vec3 fs1658;
      real _t16F1 = 0.5e0;
      real _t16F2 = 0.5e0;
      real _t16F3 = 0.5e0;
      vec3 _t16F4 = [_t16F1, _t16F2, _t16F3];
      vec3 xp16F5 = prim -0026<$[3]> (samplePos1657, _t16F4);
      real f16F6 = prim •00CE<$[3]; $[3]; $[]> (xp16F5, xp16F5);
      real _t16F7 = 0.2e1;
      vec3 gf16F8 = prim *0036<$[3]> (_t16F7, xp16F5);
      real _t16F9 = prim •00CE<$[3]; $[3]; $[]> (gf16F8, gf16F8);
      vec3 _t16FA = prim /0057<$[3]> (gf16F8, _t16F9);
      real _t16FB = prim -0026<$[]> (v00479, f16F6);
      vec3 _t16FC = prim *0038<$[3]> (_t16FA, _t16FB);
      fs1658 = _t16FC;
      real _t1659 = prim |()|00B5<$[3]> (fs1658);
      real _t165A = prim |()|00B5<$[3]> (es1650);
      real _t165B = prim /0055 (_t1659, _t165A);
      real _t165C = 0.5e0;
      bool _t165D = prim >0080 (_t165B, _t165C);
      if _t165D {
        real _t165E = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t165E);
        continue;
      }
      vec3 oldPos165F = pos1626;
      vec3 up1660 = prim +0017<$[3]> (fs1658, es1650);
      pos1626 = prim +0017<$[3]> (pos1626, up1660);
      _pos1627 = pos1626;
      particle[] _t1661 = prim sphere0198<particle> (_pos1627, rad0477);
      real accum1666 = 0.e0;
      foreach P1662 in _t1661 {
        vec3 _t1663 = P1662.pos1626;
        vec3 _t1664 = prim -0026<$[3]> (pos1626, _t1663);
        real _t1665;
        real _t16EA = prim |()|00B5<$[3]> (_t1664);
        real _t16EB = prim /0055 (_t16EA, rad0477);
        real _t16EC;
        real _t16ED = 0.1e1;
        real _t16EE = prim -0026<$[]> (_t16ED, _t16EB);
        int _t16EF = 4;
        real _t16F0 = prim ^0068 (_t16EE, _t16EF);
        _t16EC = _t16F0;
        _t1665 = _t16EC;
        accum1666 = prim +0017<$[]> (accum1666, _t1665);
      }
      real newE1667 = accum1666;
      real _t1668 = prim -0026<$[]> (newE1667, oldE163B);
      real _t1669 = 0.5e0;
      vec3 _t166A = prim -0026<$[3]> (pos1626, oldPos165F);
      vec3 _t166B = prim *0036<$[3]> (_t1669, _t166A);
      vec3 _t166C = prim unary -008B<$[3]> (force163C);
      real _t166D = prim •00CE<$[3]; $[3]; $[]> (_t166B, _t166C);
      bool _t166E = prim >0080 (_t1668, _t166D);
      if _t166E {
        pos1626 = oldPos165F;
        _pos1627 = pos1626;
        real _t166F = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t166F);
        continue;
      }
      real _t1670 = 0.11e1;
      hh1628 = prim *0034 (hh1628, _t1670);
      step1629 = up1660;
      int _t1671 = 5;
      bool _t1672 = prim <0079 (nn163D, _t1671);
      if _t1672 {
        real _t1673 = 0.5e0;
        real _t1674 = prim *0034 (_t1673, rad0477);
        vec3 _t1675 = prim normalize0137<$[3]> (es1650);
        vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
        vec3 _t1677 = prim +0017<$[3]> (pos1626, _t1676);
        new particle (_t1677, hh1628);
      }
    }
  }
}
collection {
  foreach x1678 in ipos047A {
    real _t1679 = 0.1e1;
    new particle (x1678, _t1679);
  }
}
update {
  int res167A= sum<int> { (P167D) => {
      int _t167E = P167D.test162C;
      return _t167E;
    } (P167B, P167B)
  | P167B in all };
  int num1680 = res167A;
  int res1681= sum<int> { (P1684) => {
      int _t1685 = P1684.testp162D;
      return _t1685;
    } (P1682, P1682)
  | P1682 in all };
  int numFound1687 = res1681;
  bool res1688= all { (P168B) => {
      bool _t168C = P168B.found162A;
      return _t168C;
    } (P1689, P1689)
  | P1689 in all };
  bool allFound168E = res1688;
  real res168F= max<real> { (P1693) => {
      vec3 _t1694 = P1693.step1629;
      real _t1695 = prim |()|00B5<$[3]> (_t1694);
      return _t1695;
    } (P1690, P1690)
  | P1690 in all };
  real maxStep1697 = res168F;
  real res1698= max<real> { (P16A1) => {
      vec3 _t16A2 = P16A1.pos1626;
      real _t16A3 = 0.5e0;
      real _t16A4 = 0.5e0;
      real _t16A5 = 0.5e0;
      vec3 _t16A6 = [_t16A3, _t16A4, _t16A5];
      vec3 _t16A7 = prim -0026<$[3]> (_t16A2, _t16A6);
      real _t16A8 = prim |()|00B5<$[3]> (_t16A7);
      return _t16A8;
    } (P1699, P1699)
  | P1699 in all };
  real maxDist16AA = res1698;
  real res16AB= min<real> { (P16B4) => {
      vec3 _t16B5 = P16B4.pos1626;
      real _t16B6 = 0.5e0;
      real _t16B7 = 0.5e0;
      real _t16B8 = 0.5e0;
      vec3 _t16B9 = [_t16B6, _t16B7, _t16B8];
      vec3 _t16BA = prim -0026<$[3]> (_t16B5, _t16B9);
      real _t16BB = prim |()|00B5<$[3]> (_t16BA);
      return _t16BB;
    } (P16AC, P16AC)
  | P16AC in all };
  real minDist16BD = res16AB;
  vec2 averageDist16BE = [minDist16BD, maxDist16AA];
  string _t16BF = "One run:";
  string _t16C0 = " and ";
  real _t16C1 = prim /0055 (maxStep1697, rad0477);
  string _t16C2 = " and ";
  real _t16C3 = prim /0055 (maxStep1697, rad0477);
  bool _t16C4 = prim <007A (_t16C3, eps0478);
  string _t16C5 = " and ";
  string _t16C6 = " of ";
  string _t16C7 = " and ";
  string _t16C8 = "\n";
  print (_t16BF, allFound168E, _t16C0, _t16C1, _t16C2, _t16C4, _t16C5, numFound1687, _t16C6, num1680, _t16C7, averageDist16BE, _t16C8);
  if allFound168E {
    real _t16C9 = prim /0055 (maxStep1697, rad0477);
    bool _t16CA = prim <007A (_t16C9, eps0478);
    if _t16CA {
      string _t16CB = "CONVERGED!\n";
      print (_t16CB);
      stabilize_all;
    }
  }
}
/* Program end */
/* Simplified Program (after after contraction (2)) start */
properties: GlobalInit,StabilizeAll,GlobalReduce,StrandSets,GlobalUpdate,NewStrands,StrandCommunication,StrandsMayDie,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData0467;
input FemData:Space 0space0473_intermedateGlobal0474;
input FemData:FemFunc 0data0475_intermedateGlobal0476;
input real rad0477 = <default>;
input real eps0478 = <default>;
input real v00479 = <default>;
input vec3[] ipos047A;
constants {
  rad0477 = 0.1e-1;
  eps0478 = 0.1e-1;
  v00479 = 0.625e-1;
}
function int[2]#8 nextCell4054F (int faceIdx0B18, int cell0B19, Femdata: Mesh mesh0B1A)
{
  int _t0B1B = -1;
  bool _t0B1C = prim ==0082 (faceIdx0B18, _t0B1B);
  if _t0B1C {
    int _t0B1D = -1;
    int _t0B1E = -1;
    int[2] _t0B1F = {_t0B1D, _t0B1E};
    return _t0B1F;
  } else {
    int _t0B20 = 8;
    int _t0B21 = prim *0033 (cell0B19, _t0B20);
    int _t0B22 = 2;
    int _t0B23 = prim *0033 (faceIdx0B18, _t0B22);
    int _t0B24 = prim +0015 (_t0B21, _t0B23);
    int[2] _t0B25 = extractFemItemN((mesh0B1A, _t0B24),CellFaceCell(Mesh),);
    return _t0B25;
  }
}
globalInit {
  int _t046B = 0;
  int _t0469 = 1;
  int _t046D = extractFemItem(NumCell(Mesh), int, meshData0467);
  int _t046C = prim -0024 (_t046D, _t0469);
  int[] _t0470 = prim $range01C3 (_t046B, _t046C);
  Femdata: MeshCell[] _t0471 = {};
  foreach _t046F in _t0470 {
    Femdata: MeshCell _t0472 = loadFem(MeshCell, meshData0467, _t046F);
    _t0471 = prim @0010<Femdata: MeshCell> (_t0471, _t0472);
  }
}
strand particle (vec3 pos01624, real hh01625) in 3D {
  output vec3 pos1626;
  output vec3 _pos1627;
  real hh1628;
  vec3 step1629;
  bool found162A;
  int nfs162B;
  int test162C;
  int testp162D;
  {
    pos1626 = pos01624;
    _pos1627 = pos1626;
    hh1628 = hh01625;
    step1629 = prim $zero01BB<$[3]> ();
    found162A = false;
    nfs162B = 0;
    test162C = 1;
    testp162D = 0;
  }
  update
  {
    bool _t162E;
    bool _t162F;
    real _t1733 = 0.5e0;
    real _t1734 = 0.5e0;
    real _t1735 = 0.5e0;
    vec3 _t1736 = [_t1733, _t1734, _t1735];
    vec3 mid1737 = prim -0026<$[3]> (pos1626, _t1736);
    bool _t1738;
    real _t1739 = mid1737[0];
    real _t173A = prim |()|00B5<$[]> (_t1739);
    real _t173B = 0.5e0;
    bool _t173C = prim <=007C (_t173A, _t173B);
    if _t173C {
      bool _t173D;
      real _t173E = mid1737[1];
      real _t173F = prim |()|00B5<$[]> (_t173E);
      real _t1740 = 0.5e0;
      bool _t1741 = prim <=007C (_t173F, _t1740);
      if _t1741 {
        real _t1742 = mid1737[2];
        real _t1743 = prim |()|00B5<$[]> (_t1742);
        real _t1744 = 0.5e0;
        _t173D = prim <=007C (_t1743, _t1744);
      } else {
        _t173D = false;
      }
      _t1738 = _t173D;
    } else {
      _t1738 = false;
    }
    _t162F = _t1738;
    bool _t1630 = prim !00BC (_t162F);
    if _t1630 {
      _t162E = true;
    } else {
      real _t1631;
      real _t172B = 0.5e0;
      real _t172C = 0.5e0;
      real _t172D = 0.5e0;
      vec3 _t172E = [_t172B, _t172C, _t172D];
      vec3 xp172F = prim -0026<$[3]> (pos1626, _t172E);
      real _t1730 = 0.2e1;
      vec3 gf1731 = prim *0036<$[3]> (_t1730, xp172F);
      real _t1732 = prim |()|00B5<$[3]> (gf1731);
      _t1631 = _t1732;
      real _t1632 = 0.e0;
      _t162E = prim ==0084 (_t1631, _t1632);
    }
    if _t162E {
      die;
    }
    bool _t1633 = prim !00BC (found162A);
    if _t1633 {
      vec3 step16DD;
      real _t16DE = 0.5e0;
      real _t16DF = 0.5e0;
      real _t16E0 = 0.5e0;
      vec3 _t16E1 = [_t16DE, _t16DF, _t16E0];
      vec3 xp16E2 = prim -0026<$[3]> (pos1626, _t16E1);
      real f16E3 = prim •00CE<$[3]; $[3]; $[]> (xp16E2, xp16E2);
      real _t16E4 = 0.2e1;
      vec3 gf16E5 = prim *0036<$[3]> (_t16E4, xp16E2);
      real _t16E6 = prim •00CE<$[3]; $[3]; $[]> (gf16E5, gf16E5);
      vec3 _t16E7 = prim /0057<$[3]> (gf16E5, _t16E6);
      real _t16E8 = prim -0026<$[]> (v00479, f16E3);
      vec3 _t16E9 = prim *0038<$[3]> (_t16E7, _t16E8);
      step16DD = _t16E9;
      step1629 = step16DD;
      pos1626 = prim +0017<$[3]> (pos1626, step1629);
      _pos1627 = pos1626;
      real _t1634 = prim |()|00B5<$[3]> (step1629);
      real _t1635 = prim /0055 (_t1634, rad0477);
      bool _t1636 = prim >0080 (_t1635, eps0478);
      if _t1636 {
        int _t1637 = 1;
        nfs162B = prim +0015 (nfs162B, _t1637);
        int _t1638 = 10;
        bool _t1639 = prim >007F (nfs162B, _t1638);
        if _t1639 {
          die;
        }
      } else {
        found162A = true;
        testp162D = 1;
      }
    } else {
      vec3 _t163A;
      real _t171F = 0.5e0;
      real _t1720 = 0.5e0;
      real _t1721 = 0.5e0;
      vec3 _t1722 = [_t171F, _t1720, _t1721];
      vec3 xp1723 = prim -0026<$[3]> (pos1626, _t1722);
      real f1724 = prim •00CE<$[3]; $[3]; $[]> (xp1723, xp1723);
      real _t1725 = 0.2e1;
      vec3 gf1726 = prim *0036<$[3]> (_t1725, xp1723);
      real _t1727 = prim •00CE<$[3]; $[3]; $[]> (gf1726, gf1726);
      vec3 _t1728 = prim /0057<$[3]> (gf1726, _t1727);
      real _t1729 = prim -0026<$[]> (v00479, f1724);
      vec3 _t172A = prim *0038<$[3]> (_t1728, _t1729);
      _t163A = _t172A;
      pos1626 = prim +0017<$[3]> (pos1626, _t163A);
      _pos1627 = pos1626;
      step1629 = prim $zero01BB<$[3]> ();
      real oldE163B = 0.e0;
      vec3 force163C = prim $zero01BB<$[3]> ();
      int nn163D = 0;
      particle[] _t163E = prim sphere0198<particle> (_pos1627, rad0477);
      foreach P163F in _t163E {
        vec3 _t1640 = P163F.pos1626;
        vec3 _t1641 = prim -0026<$[3]> (_t1640, pos1626);
        real _t1642;
        real _t1718 = prim |()|00B5<$[3]> (_t1641);
        real _t1719 = prim /0055 (_t1718, rad0477);
        real _t171A;
        real _t171B = 0.1e1;
        real _t171C = prim -0026<$[]> (_t171B, _t1719);
        int _t171D = 4;
        real _t171E = prim ^0068 (_t171C, _t171D);
        _t171A = _t171E;
        _t1642 = _t171A;
        oldE163B = prim +0017<$[]> (oldE163B, _t1642);
        vec3 _t1643 = P163F.pos1626;
        vec3 _t1644 = prim -0026<$[3]> (_t1643, pos1626);
        vec3 _t1645;
        real _t1708 = prim |()|00B5<$[3]> (_t1644);
        real _t1709 = prim /0055 (_t1708, rad0477);
        real _t170A;
        int _t170B = -4;
        real _t170C = (real)_t170B;
        real _t170D = 0.1e1;
        real _t170E = prim -0026<$[]> (_t170D, _t1709);
        int _t170F = 3;
        real _t1710 = prim ^0068 (_t170E, _t170F);
        real _t1711 = prim *0034 (_t170C, _t1710);
        _t170A = _t1711;
        real _t1712 = 0.1e1;
        real _t1713 = prim /0055 (_t1712, rad0477);
        real _t1714 = prim *0034 (_t170A, _t1713);
        vec3 _t1715 = prim *0036<$[3]> (_t1714, _t1644);
        real _t1716 = prim |()|00B5<$[3]> (_t1644);
        vec3 _t1717 = prim /0057<$[3]> (_t1715, _t1716);
        _t1645 = _t1717;
        force163C = prim +0017<$[3]> (force163C, _t1645);
        int _t1646 = 1;
        nn163D = prim +0015 (nn163D, _t1646);
      }
      int _t1647 = 0;
      bool _t1648 = prim ==0082 (_t1647, nn163D);
      if _t1648 {
        real _t1649 = 0.5e0;
        real _t164A = prim *0034 (_t1649, rad0477);
        real _t164B = 0.e0;
        real _t164C = 0.e0;
        vec3 _t164D = [_t164A, _t164B, _t164C];
        vec3 _t164E = prim +0017<$[3]> (pos1626, _t164D);
        new particle (_t164E, hh1628);
        continue;
      }
      tensor[3,3] _t164F;
      real _t16FD = 0.5e0;
      real _t16FE = 0.5e0;
      real _t16FF = 0.5e0;
      vec3 _t1700 = [_t16FD, _t16FE, _t16FF];
      vec3 xp1701 = prim -0026<$[3]> (pos1626, _t1700);
      real _t1702 = 0.2e1;
      vec3 gf1703 = prim *0036<$[3]> (_t1702, xp1701);
      vec3 n1704 = prim normalize0137<$[3]> (gf1703);
      tensor[3,3] _t1705 = prim $id01B9<%3> ();
      tensor[3,3] _t1706 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (n1704, n1704);
      tensor[3,3] _t1707 = prim -0026<$[3,3]> (_t1705, _t1706);
      _t164F = _t1707;
      force163C = prim •00CE<$[3,3]; $[3]; $[3]> (_t164F, force163C);
      vec3 es1650 = prim *0036<$[3]> (hh1628, force163C);
      real _t1651 = prim |()|00B5<$[3]> (es1650);
      bool _t1652 = prim >0080 (_t1651, rad0477);
      if _t1652 {
        real _t1653 = prim |()|00B5<$[3]> (es1650);
        real _t1654 = prim /0055 (rad0477, _t1653);
        hh1628 = prim *0034 (hh1628, _t1654);
        real _t1655 = prim |()|00B5<$[3]> (es1650);
        real _t1656 = prim /0055 (rad0477, _t1655);
        es1650 = prim *0038<$[3]> (es1650, _t1656);
      }
      vec3 samplePos1657 = prim +0017<$[3]> (pos1626, es1650);
      vec3 fs1658;
      real _t16F1 = 0.5e0;
      real _t16F2 = 0.5e0;
      real _t16F3 = 0.5e0;
      vec3 _t16F4 = [_t16F1, _t16F2, _t16F3];
      vec3 xp16F5 = prim -0026<$[3]> (samplePos1657, _t16F4);
      real f16F6 = prim •00CE<$[3]; $[3]; $[]> (xp16F5, xp16F5);
      real _t16F7 = 0.2e1;
      vec3 gf16F8 = prim *0036<$[3]> (_t16F7, xp16F5);
      real _t16F9 = prim •00CE<$[3]; $[3]; $[]> (gf16F8, gf16F8);
      vec3 _t16FA = prim /0057<$[3]> (gf16F8, _t16F9);
      real _t16FB = prim -0026<$[]> (v00479, f16F6);
      vec3 _t16FC = prim *0038<$[3]> (_t16FA, _t16FB);
      fs1658 = _t16FC;
      real _t1659 = prim |()|00B5<$[3]> (fs1658);
      real _t165A = prim |()|00B5<$[3]> (es1650);
      real _t165B = prim /0055 (_t1659, _t165A);
      real _t165C = 0.5e0;
      bool _t165D = prim >0080 (_t165B, _t165C);
      if _t165D {
        real _t165E = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t165E);
        continue;
      }
      vec3 oldPos165F = pos1626;
      vec3 up1660 = prim +0017<$[3]> (fs1658, es1650);
      pos1626 = prim +0017<$[3]> (pos1626, up1660);
      _pos1627 = pos1626;
      particle[] _t1661 = prim sphere0198<particle> (_pos1627, rad0477);
      real accum1666 = 0.e0;
      foreach P1662 in _t1661 {
        vec3 _t1663 = P1662.pos1626;
        vec3 _t1664 = prim -0026<$[3]> (pos1626, _t1663);
        real _t1665;
        real _t16EA = prim |()|00B5<$[3]> (_t1664);
        real _t16EB = prim /0055 (_t16EA, rad0477);
        real _t16EC;
        real _t16ED = 0.1e1;
        real _t16EE = prim -0026<$[]> (_t16ED, _t16EB);
        int _t16EF = 4;
        real _t16F0 = prim ^0068 (_t16EE, _t16EF);
        _t16EC = _t16F0;
        _t1665 = _t16EC;
        accum1666 = prim +0017<$[]> (accum1666, _t1665);
      }
      real newE1667 = accum1666;
      real _t1668 = prim -0026<$[]> (newE1667, oldE163B);
      real _t1669 = 0.5e0;
      vec3 _t166A = prim -0026<$[3]> (pos1626, oldPos165F);
      vec3 _t166B = prim *0036<$[3]> (_t1669, _t166A);
      vec3 _t166C = prim unary -008B<$[3]> (force163C);
      real _t166D = prim •00CE<$[3]; $[3]; $[]> (_t166B, _t166C);
      bool _t166E = prim >0080 (_t1668, _t166D);
      if _t166E {
        pos1626 = oldPos165F;
        _pos1627 = pos1626;
        real _t166F = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t166F);
        continue;
      }
      real _t1670 = 0.11e1;
      hh1628 = prim *0034 (hh1628, _t1670);
      step1629 = up1660;
      int _t1671 = 5;
      bool _t1672 = prim <0079 (nn163D, _t1671);
      if _t1672 {
        real _t1673 = 0.5e0;
        real _t1674 = prim *0034 (_t1673, rad0477);
        vec3 _t1675 = prim normalize0137<$[3]> (es1650);
        vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
        vec3 _t1677 = prim +0017<$[3]> (pos1626, _t1676);
        new particle (_t1677, hh1628);
      }
    }
  }
}
collection {
  foreach x1678 in ipos047A {
    real _t1679 = 0.1e1;
    new particle (x1678, _t1679);
  }
}
update {
  int res167A= sum<int> { (P167D) => {
      int _t167E = P167D.test162C;
      return _t167E;
    } (P167B, P167B)
  | P167B in all };
  int num1680 = res167A;
  int res1681= sum<int> { (P1684) => {
      int _t1685 = P1684.testp162D;
      return _t1685;
    } (P1682, P1682)
  | P1682 in all };
  int numFound1687 = res1681;
  bool res1688= all { (P168B) => {
      bool _t168C = P168B.found162A;
      return _t168C;
    } (P1689, P1689)
  | P1689 in all };
  bool allFound168E = res1688;
  real res168F= max<real> { (P1693) => {
      vec3 _t1694 = P1693.step1629;
      real _t1695 = prim |()|00B5<$[3]> (_t1694);
      return _t1695;
    } (P1690, P1690)
  | P1690 in all };
  real maxStep1697 = res168F;
  real res1698= max<real> { (P16A1) => {
      vec3 _t16A2 = P16A1.pos1626;
      real _t16A3 = 0.5e0;
      real _t16A4 = 0.5e0;
      real _t16A5 = 0.5e0;
      vec3 _t16A6 = [_t16A3, _t16A4, _t16A5];
      vec3 _t16A7 = prim -0026<$[3]> (_t16A2, _t16A6);
      real _t16A8 = prim |()|00B5<$[3]> (_t16A7);
      return _t16A8;
    } (P1699, P1699)
  | P1699 in all };
  real maxDist16AA = res1698;
  real res16AB= min<real> { (P16B4) => {
      vec3 _t16B5 = P16B4.pos1626;
      real _t16B6 = 0.5e0;
      real _t16B7 = 0.5e0;
      real _t16B8 = 0.5e0;
      vec3 _t16B9 = [_t16B6, _t16B7, _t16B8];
      vec3 _t16BA = prim -0026<$[3]> (_t16B5, _t16B9);
      real _t16BB = prim |()|00B5<$[3]> (_t16BA);
      return _t16BB;
    } (P16AC, P16AC)
  | P16AC in all };
  real minDist16BD = res16AB;
  vec2 averageDist16BE = [minDist16BD, maxDist16AA];
  string _t16BF = "One run:";
  string _t16C0 = " and ";
  real _t16C1 = prim /0055 (maxStep1697, rad0477);
  string _t16C2 = " and ";
  real _t16C3 = prim /0055 (maxStep1697, rad0477);
  bool _t16C4 = prim <007A (_t16C3, eps0478);
  string _t16C5 = " and ";
  string _t16C6 = " of ";
  string _t16C7 = " and ";
  string _t16C8 = "\n";
  print (_t16BF, allFound168E, _t16C0, _t16C1, _t16C2, _t16C4, _t16C5, numFound1687, _t16C6, num1680, _t16C7, averageDist16BE, _t16C8);
  if allFound168E {
    real _t16C9 = prim /0055 (maxStep1697, rad0477);
    bool _t16CA = prim <007A (_t16C9, eps0478);
    if _t16CA {
      string _t16CB = "CONVERGED!\n";
      print (_t16CB);
      stabilize_all;
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fields) start */
properties: GlobalInit,StabilizeAll,GlobalReduce,StrandSets,GlobalUpdate,NewStrands,StrandCommunication,StrandsMayDie,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData0467;
input FemData:Space 0space0473_intermedateGlobal0474;
input FemData:FemFunc 0data0475_intermedateGlobal0476;
input real rad0477 = <default>;
input real eps0478 = <default>;
input real v00479 = <default>;
input vec3[] ipos047A;
constants {
  rad0477 = 0.1e-1;
  eps0478 = 0.1e-1;
  v00479 = 0.625e-1;
}
function int[2]#8 nextCell4054F (int faceIdx0B18, int cell0B19, Femdata: Mesh mesh0B1A)
{
  int _t0B1B = -1;
  bool _t0B1C = prim ==0082 (faceIdx0B18, _t0B1B);
  if _t0B1C {
    int _t0B1D = -1;
    int _t0B1E = -1;
    int[2] _t0B1F = {_t0B1D, _t0B1E};
    return _t0B1F;
  } else {
    int _t0B20 = 8;
    int _t0B21 = prim *0033 (cell0B19, _t0B20);
    int _t0B22 = 2;
    int _t0B23 = prim *0033 (faceIdx0B18, _t0B22);
    int _t0B24 = prim +0015 (_t0B21, _t0B23);
    int[2] _t0B25 = extractFemItemN((mesh0B1A, _t0B24),CellFaceCell(Mesh),);
    return _t0B25;
  }
}
globalInit {
  int _t046B = 0;
  int _t0469 = 1;
  int _t046D = extractFemItem(NumCell(Mesh), int, meshData0467);
  int _t046C = prim -0024 (_t046D, _t0469);
  int[] _t0470 = prim $range01C3 (_t046B, _t046C);
  Femdata: MeshCell[] _t0471 = {};
  foreach _t046F in _t0470 {
    Femdata: MeshCell _t0472 = loadFem(MeshCell, meshData0467, _t046F);
    _t0471 = prim @0010<Femdata: MeshCell> (_t0471, _t0472);
  }
}
strand particle (vec3 pos01624, real hh01625) in 3D {
  output vec3 pos1626;
  output vec3 _pos1627;
  real hh1628;
  vec3 step1629;
  bool found162A;
  int nfs162B;
  int test162C;
  int testp162D;
  {
    pos1626 = pos01624;
    _pos1627 = pos1626;
    hh1628 = hh01625;
    step1629 = prim $zero01BB<$[3]> ();
    found162A = false;
    nfs162B = 0;
    test162C = 1;
    testp162D = 0;
  }
  update
  {
    bool _t162E;
    bool _t162F;
    real _t1733 = 0.5e0;
    real _t1734 = 0.5e0;
    real _t1735 = 0.5e0;
    vec3 _t1736 = [_t1733, _t1734, _t1735];
    vec3 mid1737 = prim -0026<$[3]> (pos1626, _t1736);
    bool _t1738;
    real _t1739 = mid1737[0];
    real _t173A = prim |()|00B5<$[]> (_t1739);
    real _t173B = 0.5e0;
    bool _t173C = prim <=007C (_t173A, _t173B);
    if _t173C {
      bool _t173D;
      real _t173E = mid1737[1];
      real _t173F = prim |()|00B5<$[]> (_t173E);
      real _t1740 = 0.5e0;
      bool _t1741 = prim <=007C (_t173F, _t1740);
      if _t1741 {
        real _t1742 = mid1737[2];
        real _t1743 = prim |()|00B5<$[]> (_t1742);
        real _t1744 = 0.5e0;
        _t173D = prim <=007C (_t1743, _t1744);
      } else {
        _t173D = false;
      }
      _t1738 = _t173D;
    } else {
      _t1738 = false;
    }
    _t162F = _t1738;
    bool _t1630 = prim !00BC (_t162F);
    if _t1630 {
      _t162E = true;
    } else {
      real _t1631;
      real _t172B = 0.5e0;
      real _t172C = 0.5e0;
      real _t172D = 0.5e0;
      vec3 _t172E = [_t172B, _t172C, _t172D];
      vec3 xp172F = prim -0026<$[3]> (pos1626, _t172E);
      real _t1730 = 0.2e1;
      vec3 gf1731 = prim *0036<$[3]> (_t1730, xp172F);
      real _t1732 = prim |()|00B5<$[3]> (gf1731);
      _t1631 = _t1732;
      real _t1632 = 0.e0;
      _t162E = prim ==0084 (_t1631, _t1632);
    }
    if _t162E {
      die;
    }
    bool _t1633 = prim !00BC (found162A);
    if _t1633 {
      vec3 step16DD;
      real _t16DE = 0.5e0;
      real _t16DF = 0.5e0;
      real _t16E0 = 0.5e0;
      vec3 _t16E1 = [_t16DE, _t16DF, _t16E0];
      vec3 xp16E2 = prim -0026<$[3]> (pos1626, _t16E1);
      real f16E3 = prim •00CE<$[3]; $[3]; $[]> (xp16E2, xp16E2);
      real _t16E4 = 0.2e1;
      vec3 gf16E5 = prim *0036<$[3]> (_t16E4, xp16E2);
      real _t16E6 = prim •00CE<$[3]; $[3]; $[]> (gf16E5, gf16E5);
      vec3 _t16E7 = prim /0057<$[3]> (gf16E5, _t16E6);
      real _t16E8 = prim -0026<$[]> (v00479, f16E3);
      vec3 _t16E9 = prim *0038<$[3]> (_t16E7, _t16E8);
      step16DD = _t16E9;
      step1629 = step16DD;
      pos1626 = prim +0017<$[3]> (pos1626, step1629);
      _pos1627 = pos1626;
      real _t1634 = prim |()|00B5<$[3]> (step1629);
      real _t1635 = prim /0055 (_t1634, rad0477);
      bool _t1636 = prim >0080 (_t1635, eps0478);
      if _t1636 {
        int _t1637 = 1;
        nfs162B = prim +0015 (nfs162B, _t1637);
        int _t1638 = 10;
        bool _t1639 = prim >007F (nfs162B, _t1638);
        if _t1639 {
          die;
        }
      } else {
        found162A = true;
        testp162D = 1;
      }
    } else {
      vec3 _t163A;
      real _t171F = 0.5e0;
      real _t1720 = 0.5e0;
      real _t1721 = 0.5e0;
      vec3 _t1722 = [_t171F, _t1720, _t1721];
      vec3 xp1723 = prim -0026<$[3]> (pos1626, _t1722);
      real f1724 = prim •00CE<$[3]; $[3]; $[]> (xp1723, xp1723);
      real _t1725 = 0.2e1;
      vec3 gf1726 = prim *0036<$[3]> (_t1725, xp1723);
      real _t1727 = prim •00CE<$[3]; $[3]; $[]> (gf1726, gf1726);
      vec3 _t1728 = prim /0057<$[3]> (gf1726, _t1727);
      real _t1729 = prim -0026<$[]> (v00479, f1724);
      vec3 _t172A = prim *0038<$[3]> (_t1728, _t1729);
      _t163A = _t172A;
      pos1626 = prim +0017<$[3]> (pos1626, _t163A);
      _pos1627 = pos1626;
      step1629 = prim $zero01BB<$[3]> ();
      real oldE163B = 0.e0;
      vec3 force163C = prim $zero01BB<$[3]> ();
      int nn163D = 0;
      particle[] _t163E = prim sphere0198<particle> (_pos1627, rad0477);
      foreach P163F in _t163E {
        vec3 _t1640 = P163F.pos1626;
        vec3 _t1641 = prim -0026<$[3]> (_t1640, pos1626);
        real _t1642;
        real _t1718 = prim |()|00B5<$[3]> (_t1641);
        real _t1719 = prim /0055 (_t1718, rad0477);
        real _t171A;
        real _t171B = 0.1e1;
        real _t171C = prim -0026<$[]> (_t171B, _t1719);
        int _t171D = 4;
        real _t171E = prim ^0068 (_t171C, _t171D);
        _t171A = _t171E;
        _t1642 = _t171A;
        oldE163B = prim +0017<$[]> (oldE163B, _t1642);
        vec3 _t1643 = P163F.pos1626;
        vec3 _t1644 = prim -0026<$[3]> (_t1643, pos1626);
        vec3 _t1645;
        real _t1708 = prim |()|00B5<$[3]> (_t1644);
        real _t1709 = prim /0055 (_t1708, rad0477);
        real _t170A;
        int _t170B = -4;
        real _t170C = (real)_t170B;
        real _t170D = 0.1e1;
        real _t170E = prim -0026<$[]> (_t170D, _t1709);
        int _t170F = 3;
        real _t1710 = prim ^0068 (_t170E, _t170F);
        real _t1711 = prim *0034 (_t170C, _t1710);
        _t170A = _t1711;
        real _t1712 = 0.1e1;
        real _t1713 = prim /0055 (_t1712, rad0477);
        real _t1714 = prim *0034 (_t170A, _t1713);
        vec3 _t1715 = prim *0036<$[3]> (_t1714, _t1644);
        real _t1716 = prim |()|00B5<$[3]> (_t1644);
        vec3 _t1717 = prim /0057<$[3]> (_t1715, _t1716);
        _t1645 = _t1717;
        force163C = prim +0017<$[3]> (force163C, _t1645);
        int _t1646 = 1;
        nn163D = prim +0015 (nn163D, _t1646);
      }
      int _t1647 = 0;
      bool _t1648 = prim ==0082 (_t1647, nn163D);
      if _t1648 {
        real _t1649 = 0.5e0;
        real _t164A = prim *0034 (_t1649, rad0477);
        real _t164B = 0.e0;
        real _t164C = 0.e0;
        vec3 _t164D = [_t164A, _t164B, _t164C];
        vec3 _t164E = prim +0017<$[3]> (pos1626, _t164D);
        new particle (_t164E, hh1628);
        continue;
      }
      tensor[3,3] _t164F;
      real _t16FD = 0.5e0;
      real _t16FE = 0.5e0;
      real _t16FF = 0.5e0;
      vec3 _t1700 = [_t16FD, _t16FE, _t16FF];
      vec3 xp1701 = prim -0026<$[3]> (pos1626, _t1700);
      real _t1702 = 0.2e1;
      vec3 gf1703 = prim *0036<$[3]> (_t1702, xp1701);
      vec3 n1704 = prim normalize0137<$[3]> (gf1703);
      tensor[3,3] _t1705 = prim $id01B9<%3> ();
      tensor[3,3] _t1706 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (n1704, n1704);
      tensor[3,3] _t1707 = prim -0026<$[3,3]> (_t1705, _t1706);
      _t164F = _t1707;
      force163C = prim •00CE<$[3,3]; $[3]; $[3]> (_t164F, force163C);
      vec3 es1650 = prim *0036<$[3]> (hh1628, force163C);
      real _t1651 = prim |()|00B5<$[3]> (es1650);
      bool _t1652 = prim >0080 (_t1651, rad0477);
      if _t1652 {
        real _t1653 = prim |()|00B5<$[3]> (es1650);
        real _t1654 = prim /0055 (rad0477, _t1653);
        hh1628 = prim *0034 (hh1628, _t1654);
        real _t1655 = prim |()|00B5<$[3]> (es1650);
        real _t1656 = prim /0055 (rad0477, _t1655);
        es1650 = prim *0038<$[3]> (es1650, _t1656);
      }
      vec3 samplePos1657 = prim +0017<$[3]> (pos1626, es1650);
      vec3 fs1658;
      real _t16F1 = 0.5e0;
      real _t16F2 = 0.5e0;
      real _t16F3 = 0.5e0;
      vec3 _t16F4 = [_t16F1, _t16F2, _t16F3];
      vec3 xp16F5 = prim -0026<$[3]> (samplePos1657, _t16F4);
      real f16F6 = prim •00CE<$[3]; $[3]; $[]> (xp16F5, xp16F5);
      real _t16F7 = 0.2e1;
      vec3 gf16F8 = prim *0036<$[3]> (_t16F7, xp16F5);
      real _t16F9 = prim •00CE<$[3]; $[3]; $[]> (gf16F8, gf16F8);
      vec3 _t16FA = prim /0057<$[3]> (gf16F8, _t16F9);
      real _t16FB = prim -0026<$[]> (v00479, f16F6);
      vec3 _t16FC = prim *0038<$[3]> (_t16FA, _t16FB);
      fs1658 = _t16FC;
      real _t1659 = prim |()|00B5<$[3]> (fs1658);
      real _t165A = prim |()|00B5<$[3]> (es1650);
      real _t165B = prim /0055 (_t1659, _t165A);
      real _t165C = 0.5e0;
      bool _t165D = prim >0080 (_t165B, _t165C);
      if _t165D {
        real _t165E = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t165E);
        continue;
      }
      vec3 oldPos165F = pos1626;
      vec3 up1660 = prim +0017<$[3]> (fs1658, es1650);
      pos1626 = prim +0017<$[3]> (pos1626, up1660);
      _pos1627 = pos1626;
      particle[] _t1661 = prim sphere0198<particle> (_pos1627, rad0477);
      real accum1666 = 0.e0;
      foreach P1662 in _t1661 {
        vec3 _t1663 = P1662.pos1626;
        vec3 _t1664 = prim -0026<$[3]> (pos1626, _t1663);
        real _t1665;
        real _t16EA = prim |()|00B5<$[3]> (_t1664);
        real _t16EB = prim /0055 (_t16EA, rad0477);
        real _t16EC;
        real _t16ED = 0.1e1;
        real _t16EE = prim -0026<$[]> (_t16ED, _t16EB);
        int _t16EF = 4;
        real _t16F0 = prim ^0068 (_t16EE, _t16EF);
        _t16EC = _t16F0;
        _t1665 = _t16EC;
        accum1666 = prim +0017<$[]> (accum1666, _t1665);
      }
      real newE1667 = accum1666;
      real _t1668 = prim -0026<$[]> (newE1667, oldE163B);
      real _t1669 = 0.5e0;
      vec3 _t166A = prim -0026<$[3]> (pos1626, oldPos165F);
      vec3 _t166B = prim *0036<$[3]> (_t1669, _t166A);
      vec3 _t166C = prim unary -008B<$[3]> (force163C);
      real _t166D = prim •00CE<$[3]; $[3]; $[]> (_t166B, _t166C);
      bool _t166E = prim >0080 (_t1668, _t166D);
      if _t166E {
        pos1626 = oldPos165F;
        _pos1627 = pos1626;
        real _t166F = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t166F);
        continue;
      }
      real _t1670 = 0.11e1;
      hh1628 = prim *0034 (hh1628, _t1670);
      step1629 = up1660;
      int _t1671 = 5;
      bool _t1672 = prim <0079 (nn163D, _t1671);
      if _t1672 {
        real _t1673 = 0.5e0;
        real _t1674 = prim *0034 (_t1673, rad0477);
        vec3 _t1675 = prim normalize0137<$[3]> (es1650);
        vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
        vec3 _t1677 = prim +0017<$[3]> (pos1626, _t1676);
        new particle (_t1677, hh1628);
      }
    }
  }
}
collection {
  foreach x1678 in ipos047A {
    real _t1679 = 0.1e1;
    new particle (x1678, _t1679);
  }
}
update {
  int res167A= sum<int> { (P167D) => {
      int _t167E = P167D.test162C;
      return _t167E;
    } (P167B, P167B)
  | P167B in all };
  int num1680 = res167A;
  int res1681= sum<int> { (P1684) => {
      int _t1685 = P1684.testp162D;
      return _t1685;
    } (P1682, P1682)
  | P1682 in all };
  int numFound1687 = res1681;
  bool res1688= all { (P168B) => {
      bool _t168C = P168B.found162A;
      return _t168C;
    } (P1689, P1689)
  | P1689 in all };
  bool allFound168E = res1688;
  real res168F= max<real> { (P1693) => {
      vec3 _t1694 = P1693.step1629;
      real _t1695 = prim |()|00B5<$[3]> (_t1694);
      return _t1695;
    } (P1690, P1690)
  | P1690 in all };
  real maxStep1697 = res168F;
  real res1698= max<real> { (P16A1) => {
      vec3 _t16A2 = P16A1.pos1626;
      real _t16A3 = 0.5e0;
      real _t16A4 = 0.5e0;
      real _t16A5 = 0.5e0;
      vec3 _t16A6 = [_t16A3, _t16A4, _t16A5];
      vec3 _t16A7 = prim -0026<$[3]> (_t16A2, _t16A6);
      real _t16A8 = prim |()|00B5<$[3]> (_t16A7);
      return _t16A8;
    } (P1699, P1699)
  | P1699 in all };
  real maxDist16AA = res1698;
  real res16AB= min<real> { (P16B4) => {
      vec3 _t16B5 = P16B4.pos1626;
      real _t16B6 = 0.5e0;
      real _t16B7 = 0.5e0;
      real _t16B8 = 0.5e0;
      vec3 _t16B9 = [_t16B6, _t16B7, _t16B8];
      vec3 _t16BA = prim -0026<$[3]> (_t16B5, _t16B9);
      real _t16BB = prim |()|00B5<$[3]> (_t16BA);
      return _t16BB;
    } (P16AC, P16AC)
  | P16AC in all };
  real minDist16BD = res16AB;
  vec2 averageDist16BE = [minDist16BD, maxDist16AA];
  string _t16BF = "One run:";
  string _t16C0 = " and ";
  real _t16C1 = prim /0055 (maxStep1697, rad0477);
  string _t16C2 = " and ";
  real _t16C3 = prim /0055 (maxStep1697, rad0477);
  bool _t16C4 = prim <007A (_t16C3, eps0478);
  string _t16C5 = " and ";
  string _t16C6 = " of ";
  string _t16C7 = " and ";
  string _t16C8 = "\n";
  print (_t16BF, allFound168E, _t16C0, _t16C1, _t16C2, _t16C4, _t16C5, numFound1687, _t16C6, num1680, _t16C7, averageDist16BE, _t16C8);
  if allFound168E {
    real _t16C9 = prim /0055 (maxStep1697, rad0477);
    bool _t16CA = prim <007A (_t16C9, eps0478);
    if _t16CA {
      string _t16CB = "CONVERGED!\n";
      print (_t16CB);
      stabilize_all;
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify variables) start */
properties: GlobalInit,StabilizeAll,GlobalReduce,StrandSets,GlobalUpdate,NewStrands,StrandCommunication,StrandsMayDie,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData0467;
input FemData:Space 0space0473_intermedateGlobal0474;
input FemData:FemFunc 0data0475_intermedateGlobal0476;
input real rad0477 = <default>;
input real eps0478 = <default>;
input real v00479 = <default>;
input vec3[] ipos047A;
constants {
  rad0477 = 0.1e-1;
  eps0478 = 0.1e-1;
  v00479 = 0.625e-1;
}
function int[2]#8 nextCell4054F (int faceIdx0B18, int cell0B19, Femdata: Mesh mesh0B1A)
{
  int _t0B1B = -1;
  bool _t0B1C = prim ==0082 (faceIdx0B18, _t0B1B);
  if _t0B1C {
    int _t0B1D = -1;
    int _t0B1E = -1;
    int[2] _t0B1F = {_t0B1D, _t0B1E};
    return _t0B1F;
  } else {
    int _t0B20 = 8;
    int _t0B21 = prim *0033 (cell0B19, _t0B20);
    int _t0B22 = 2;
    int _t0B23 = prim *0033 (faceIdx0B18, _t0B22);
    int _t0B24 = prim +0015 (_t0B21, _t0B23);
    int[2] _t0B25 = extractFemItemN((mesh0B1A, _t0B24),CellFaceCell(Mesh),);
    return _t0B25;
  }
}
globalInit {
  int _t046B = 0;
  int _t0469 = 1;
  int _t046D = extractFemItem(NumCell(Mesh), int, meshData0467);
  int _t046C = prim -0024 (_t046D, _t0469);
  int[] _t0470 = prim $range01C3 (_t046B, _t046C);
  Femdata: MeshCell[] _t0471 = {};
  foreach _t046F in _t0470 {
    Femdata: MeshCell _t0472 = loadFem(MeshCell, meshData0467, _t046F);
    _t0471 = prim @0010<Femdata: MeshCell> (_t0471, _t0472);
  }
}
strand particle (vec3 pos01624, real hh01625) in 3D {
  output vec3 pos1626;
  output vec3 _pos1627;
  real hh1628;
  vec3 step1629;
  bool found162A;
  int nfs162B;
  int test162C;
  int testp162D;
  {
    pos1626 = pos01624;
    _pos1627 = pos1626;
    hh1628 = hh01625;
    step1629 = prim $zero01BB<$[3]> ();
    found162A = false;
    nfs162B = 0;
    test162C = 1;
    testp162D = 0;
  }
  update
  {
    bool _t162E;
    bool _t162F;
    real _t1733 = 0.5e0;
    real _t1734 = 0.5e0;
    real _t1735 = 0.5e0;
    vec3 _t1736 = [_t1733, _t1734, _t1735];
    vec3 mid1737 = prim -0026<$[3]> (pos1626, _t1736);
    bool _t1738;
    real _t1739 = mid1737[0];
    real _t173A = prim |()|00B5<$[]> (_t1739);
    real _t173B = 0.5e0;
    bool _t173C = prim <=007C (_t173A, _t173B);
    if _t173C {
      bool _t173D;
      real _t173E = mid1737[1];
      real _t173F = prim |()|00B5<$[]> (_t173E);
      real _t1740 = 0.5e0;
      bool _t1741 = prim <=007C (_t173F, _t1740);
      if _t1741 {
        real _t1742 = mid1737[2];
        real _t1743 = prim |()|00B5<$[]> (_t1742);
        real _t1744 = 0.5e0;
        _t173D = prim <=007C (_t1743, _t1744);
      } else {
        _t173D = false;
      }
      _t1738 = _t173D;
    } else {
      _t1738 = false;
    }
    _t162F = _t1738;
    bool _t1630 = prim !00BC (_t162F);
    if _t1630 {
      _t162E = true;
    } else {
      real _t1631;
      real _t172B = 0.5e0;
      real _t172C = 0.5e0;
      real _t172D = 0.5e0;
      vec3 _t172E = [_t172B, _t172C, _t172D];
      vec3 xp172F = prim -0026<$[3]> (pos1626, _t172E);
      real _t1730 = 0.2e1;
      vec3 gf1731 = prim *0036<$[3]> (_t1730, xp172F);
      real _t1732 = prim |()|00B5<$[3]> (gf1731);
      _t1631 = _t1732;
      real _t1632 = 0.e0;
      _t162E = prim ==0084 (_t1631, _t1632);
    }
    if _t162E {
      die;
    }
    bool _t1633 = prim !00BC (found162A);
    if _t1633 {
      vec3 step16DD;
      real _t16DE = 0.5e0;
      real _t16DF = 0.5e0;
      real _t16E0 = 0.5e0;
      vec3 _t16E1 = [_t16DE, _t16DF, _t16E0];
      vec3 xp16E2 = prim -0026<$[3]> (pos1626, _t16E1);
      real f16E3 = prim •00CE<$[3]; $[3]; $[]> (xp16E2, xp16E2);
      real _t16E4 = 0.2e1;
      vec3 gf16E5 = prim *0036<$[3]> (_t16E4, xp16E2);
      real _t16E6 = prim •00CE<$[3]; $[3]; $[]> (gf16E5, gf16E5);
      vec3 _t16E7 = prim /0057<$[3]> (gf16E5, _t16E6);
      real _t16E8 = prim -0026<$[]> (v00479, f16E3);
      vec3 _t16E9 = prim *0038<$[3]> (_t16E7, _t16E8);
      step16DD = _t16E9;
      step1629 = step16DD;
      pos1626 = prim +0017<$[3]> (pos1626, step1629);
      _pos1627 = pos1626;
      real _t1634 = prim |()|00B5<$[3]> (step1629);
      real _t1635 = prim /0055 (_t1634, rad0477);
      bool _t1636 = prim >0080 (_t1635, eps0478);
      if _t1636 {
        int _t1637 = 1;
        nfs162B = prim +0015 (nfs162B, _t1637);
        int _t1638 = 10;
        bool _t1639 = prim >007F (nfs162B, _t1638);
        if _t1639 {
          die;
        }
      } else {
        found162A = true;
        testp162D = 1;
      }
    } else {
      vec3 _t163A;
      real _t171F = 0.5e0;
      real _t1720 = 0.5e0;
      real _t1721 = 0.5e0;
      vec3 _t1722 = [_t171F, _t1720, _t1721];
      vec3 xp1723 = prim -0026<$[3]> (pos1626, _t1722);
      real f1724 = prim •00CE<$[3]; $[3]; $[]> (xp1723, xp1723);
      real _t1725 = 0.2e1;
      vec3 gf1726 = prim *0036<$[3]> (_t1725, xp1723);
      real _t1727 = prim •00CE<$[3]; $[3]; $[]> (gf1726, gf1726);
      vec3 _t1728 = prim /0057<$[3]> (gf1726, _t1727);
      real _t1729 = prim -0026<$[]> (v00479, f1724);
      vec3 _t172A = prim *0038<$[3]> (_t1728, _t1729);
      _t163A = _t172A;
      pos1626 = prim +0017<$[3]> (pos1626, _t163A);
      _pos1627 = pos1626;
      step1629 = prim $zero01BB<$[3]> ();
      real oldE163B = 0.e0;
      vec3 force163C = prim $zero01BB<$[3]> ();
      int nn163D = 0;
      particle[] _t163E = prim sphere0198<particle> (_pos1627, rad0477);
      foreach P163F in _t163E {
        vec3 _t1640 = P163F.pos1626;
        vec3 _t1641 = prim -0026<$[3]> (_t1640, pos1626);
        real _t1642;
        real _t1718 = prim |()|00B5<$[3]> (_t1641);
        real _t1719 = prim /0055 (_t1718, rad0477);
        real _t171A;
        real _t171B = 0.1e1;
        real _t171C = prim -0026<$[]> (_t171B, _t1719);
        int _t171D = 4;
        real _t171E = prim ^0068 (_t171C, _t171D);
        _t171A = _t171E;
        _t1642 = _t171A;
        oldE163B = prim +0017<$[]> (oldE163B, _t1642);
        vec3 _t1643 = P163F.pos1626;
        vec3 _t1644 = prim -0026<$[3]> (_t1643, pos1626);
        vec3 _t1645;
        real _t1708 = prim |()|00B5<$[3]> (_t1644);
        real _t1709 = prim /0055 (_t1708, rad0477);
        real _t170A;
        int _t170B = -4;
        real _t170C = (real)_t170B;
        real _t170D = 0.1e1;
        real _t170E = prim -0026<$[]> (_t170D, _t1709);
        int _t170F = 3;
        real _t1710 = prim ^0068 (_t170E, _t170F);
        real _t1711 = prim *0034 (_t170C, _t1710);
        _t170A = _t1711;
        real _t1712 = 0.1e1;
        real _t1713 = prim /0055 (_t1712, rad0477);
        real _t1714 = prim *0034 (_t170A, _t1713);
        vec3 _t1715 = prim *0036<$[3]> (_t1714, _t1644);
        real _t1716 = prim |()|00B5<$[3]> (_t1644);
        vec3 _t1717 = prim /0057<$[3]> (_t1715, _t1716);
        _t1645 = _t1717;
        force163C = prim +0017<$[3]> (force163C, _t1645);
        int _t1646 = 1;
        nn163D = prim +0015 (nn163D, _t1646);
      }
      int _t1647 = 0;
      bool _t1648 = prim ==0082 (_t1647, nn163D);
      if _t1648 {
        real _t1649 = 0.5e0;
        real _t164A = prim *0034 (_t1649, rad0477);
        real _t164B = 0.e0;
        real _t164C = 0.e0;
        vec3 _t164D = [_t164A, _t164B, _t164C];
        vec3 _t164E = prim +0017<$[3]> (pos1626, _t164D);
        new particle (_t164E, hh1628);
        continue;
      }
      tensor[3,3] _t164F;
      real _t16FD = 0.5e0;
      real _t16FE = 0.5e0;
      real _t16FF = 0.5e0;
      vec3 _t1700 = [_t16FD, _t16FE, _t16FF];
      vec3 xp1701 = prim -0026<$[3]> (pos1626, _t1700);
      real _t1702 = 0.2e1;
      vec3 gf1703 = prim *0036<$[3]> (_t1702, xp1701);
      vec3 n1704 = prim normalize0137<$[3]> (gf1703);
      tensor[3,3] _t1705 = prim $id01B9<%3> ();
      tensor[3,3] _t1706 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (n1704, n1704);
      tensor[3,3] _t1707 = prim -0026<$[3,3]> (_t1705, _t1706);
      _t164F = _t1707;
      force163C = prim •00CE<$[3,3]; $[3]; $[3]> (_t164F, force163C);
      vec3 es1650 = prim *0036<$[3]> (hh1628, force163C);
      real _t1651 = prim |()|00B5<$[3]> (es1650);
      bool _t1652 = prim >0080 (_t1651, rad0477);
      if _t1652 {
        real _t1653 = prim |()|00B5<$[3]> (es1650);
        real _t1654 = prim /0055 (rad0477, _t1653);
        hh1628 = prim *0034 (hh1628, _t1654);
        real _t1655 = prim |()|00B5<$[3]> (es1650);
        real _t1656 = prim /0055 (rad0477, _t1655);
        es1650 = prim *0038<$[3]> (es1650, _t1656);
      }
      vec3 samplePos1657 = prim +0017<$[3]> (pos1626, es1650);
      vec3 fs1658;
      real _t16F1 = 0.5e0;
      real _t16F2 = 0.5e0;
      real _t16F3 = 0.5e0;
      vec3 _t16F4 = [_t16F1, _t16F2, _t16F3];
      vec3 xp16F5 = prim -0026<$[3]> (samplePos1657, _t16F4);
      real f16F6 = prim •00CE<$[3]; $[3]; $[]> (xp16F5, xp16F5);
      real _t16F7 = 0.2e1;
      vec3 gf16F8 = prim *0036<$[3]> (_t16F7, xp16F5);
      real _t16F9 = prim •00CE<$[3]; $[3]; $[]> (gf16F8, gf16F8);
      vec3 _t16FA = prim /0057<$[3]> (gf16F8, _t16F9);
      real _t16FB = prim -0026<$[]> (v00479, f16F6);
      vec3 _t16FC = prim *0038<$[3]> (_t16FA, _t16FB);
      fs1658 = _t16FC;
      real _t1659 = prim |()|00B5<$[3]> (fs1658);
      real _t165A = prim |()|00B5<$[3]> (es1650);
      real _t165B = prim /0055 (_t1659, _t165A);
      real _t165C = 0.5e0;
      bool _t165D = prim >0080 (_t165B, _t165C);
      if _t165D {
        real _t165E = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t165E);
        continue;
      }
      vec3 oldPos165F = pos1626;
      vec3 up1660 = prim +0017<$[3]> (fs1658, es1650);
      pos1626 = prim +0017<$[3]> (pos1626, up1660);
      _pos1627 = pos1626;
      particle[] _t1661 = prim sphere0198<particle> (_pos1627, rad0477);
      real accum1666 = 0.e0;
      foreach P1662 in _t1661 {
        vec3 _t1663 = P1662.pos1626;
        vec3 _t1664 = prim -0026<$[3]> (pos1626, _t1663);
        real _t1665;
        real _t16EA = prim |()|00B5<$[3]> (_t1664);
        real _t16EB = prim /0055 (_t16EA, rad0477);
        real _t16EC;
        real _t16ED = 0.1e1;
        real _t16EE = prim -0026<$[]> (_t16ED, _t16EB);
        int _t16EF = 4;
        real _t16F0 = prim ^0068 (_t16EE, _t16EF);
        _t16EC = _t16F0;
        _t1665 = _t16EC;
        accum1666 = prim +0017<$[]> (accum1666, _t1665);
      }
      real newE1667 = accum1666;
      real _t1668 = prim -0026<$[]> (newE1667, oldE163B);
      real _t1669 = 0.5e0;
      vec3 _t166A = prim -0026<$[3]> (pos1626, oldPos165F);
      vec3 _t166B = prim *0036<$[3]> (_t1669, _t166A);
      vec3 _t166C = prim unary -008B<$[3]> (force163C);
      real _t166D = prim •00CE<$[3]; $[3]; $[]> (_t166B, _t166C);
      bool _t166E = prim >0080 (_t1668, _t166D);
      if _t166E {
        pos1626 = oldPos165F;
        _pos1627 = pos1626;
        real _t166F = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t166F);
        continue;
      }
      real _t1670 = 0.11e1;
      hh1628 = prim *0034 (hh1628, _t1670);
      step1629 = up1660;
      int _t1671 = 5;
      bool _t1672 = prim <0079 (nn163D, _t1671);
      if _t1672 {
        real _t1673 = 0.5e0;
        real _t1674 = prim *0034 (_t1673, rad0477);
        vec3 _t1675 = prim normalize0137<$[3]> (es1650);
        vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
        vec3 _t1677 = prim +0017<$[3]> (pos1626, _t1676);
        new particle (_t1677, hh1628);
      }
    }
  }
}
collection {
  foreach x1678 in ipos047A {
    real _t1679 = 0.1e1;
    new particle (x1678, _t1679);
  }
}
update {
  int res167A= sum<int> { (P167D) => {
      int _t167E = P167D.test162C;
      return _t167E;
    } (P167B, P167B)
  | P167B in all };
  int num1680 = res167A;
  int res1681= sum<int> { (P1684) => {
      int _t1685 = P1684.testp162D;
      return _t1685;
    } (P1682, P1682)
  | P1682 in all };
  int numFound1687 = res1681;
  bool res1688= all { (P168B) => {
      bool _t168C = P168B.found162A;
      return _t168C;
    } (P1689, P1689)
  | P1689 in all };
  bool allFound168E = res1688;
  real res168F= max<real> { (P1693) => {
      vec3 _t1694 = P1693.step1629;
      real _t1695 = prim |()|00B5<$[3]> (_t1694);
      return _t1695;
    } (P1690, P1690)
  | P1690 in all };
  real maxStep1697 = res168F;
  real res1698= max<real> { (P16A1) => {
      vec3 _t16A2 = P16A1.pos1626;
      real _t16A3 = 0.5e0;
      real _t16A4 = 0.5e0;
      real _t16A5 = 0.5e0;
      vec3 _t16A6 = [_t16A3, _t16A4, _t16A5];
      vec3 _t16A7 = prim -0026<$[3]> (_t16A2, _t16A6);
      real _t16A8 = prim |()|00B5<$[3]> (_t16A7);
      return _t16A8;
    } (P1699, P1699)
  | P1699 in all };
  real maxDist16AA = res1698;
  real res16AB= min<real> { (P16B4) => {
      vec3 _t16B5 = P16B4.pos1626;
      real _t16B6 = 0.5e0;
      real _t16B7 = 0.5e0;
      real _t16B8 = 0.5e0;
      vec3 _t16B9 = [_t16B6, _t16B7, _t16B8];
      vec3 _t16BA = prim -0026<$[3]> (_t16B5, _t16B9);
      real _t16BB = prim |()|00B5<$[3]> (_t16BA);
      return _t16BB;
    } (P16AC, P16AC)
  | P16AC in all };
  real minDist16BD = res16AB;
  vec2 averageDist16BE = [minDist16BD, maxDist16AA];
  string _t16BF = "One run:";
  string _t16C0 = " and ";
  real _t16C1 = prim /0055 (maxStep1697, rad0477);
  string _t16C2 = " and ";
  real _t16C3 = prim /0055 (maxStep1697, rad0477);
  bool _t16C4 = prim <007A (_t16C3, eps0478);
  string _t16C5 = " and ";
  string _t16C6 = " of ";
  string _t16C7 = " and ";
  string _t16C8 = "\n";
  print (_t16BF, allFound168E, _t16C0, _t16C1, _t16C2, _t16C4, _t16C5, numFound1687, _t16C6, num1680, _t16C7, averageDist16BE, _t16C8);
  if allFound168E {
    real _t16C9 = prim /0055 (maxStep1697, rad0477);
    bool _t16CA = prim <007A (_t16C9, eps0478);
    if _t16CA {
      string _t16CB = "CONVERGED!\n";
      print (_t16CB);
      stabilize_all;
    }
  }
}
/* Program end */
/* Simplified Program (after after simplify fem vars) start */
properties: GlobalInit,StabilizeAll,GlobalReduce,StrandSets,GlobalUpdate,NewStrands,StrandCommunication,StrandsMayDie,HasInputs,HasGlobals,ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
input FemData:Mesh meshData0467;
input FemData:Space 0space0473_intermedateGlobal0474;
input FemData:FemFunc 0data0475_intermedateGlobal0476;
input real rad0477 = <default>;
input real eps0478 = <default>;
input real v00479 = <default>;
input vec3[] ipos047A;
constants {
  rad0477 = 0.1e-1;
  eps0478 = 0.1e-1;
  v00479 = 0.625e-1;
}
function int[2]#8 nextCell4054F (int faceIdx0B18, int cell0B19, Femdata: Mesh mesh0B1A)
{
  int _t0B1B = -1;
  bool _t0B1C = prim ==0082 (faceIdx0B18, _t0B1B);
  if _t0B1C {
    int _t0B1D = -1;
    int _t0B1E = -1;
    int[2] _t0B1F = {_t0B1D, _t0B1E};
    return _t0B1F;
  } else {
    int _t0B20 = 8;
    int _t0B21 = prim *0033 (cell0B19, _t0B20);
    int _t0B22 = 2;
    int _t0B23 = prim *0033 (faceIdx0B18, _t0B22);
    int _t0B24 = prim +0015 (_t0B21, _t0B23);
    int[2] _t0B25 = extractFemItemN((mesh0B1A, _t0B24),CellFaceCell(Mesh),);
    return _t0B25;
  }
}
globalInit {
  int _t046B = 0;
  int _t0469 = 1;
  int _t046D = extractFemItem(NumCell(Mesh), int, meshData0467);
  int _t046C = prim -0024 (_t046D, _t0469);
  int[] _t0470 = prim $range01C3 (_t046B, _t046C);
  Femdata: MeshCell[] _t0471 = {};
  foreach _t046F in _t0470 {
    Femdata: MeshCell _t0472 = loadFem(MeshCell, meshData0467, _t046F);
    _t0471 = prim @0010<Femdata: MeshCell> (_t0471, _t0472);
  }
}
strand particle (vec3 pos01624, real hh01625) in 3D {
  output vec3 pos1626;
  output vec3 _pos1627;
  real hh1628;
  vec3 step1629;
  bool found162A;
  int nfs162B;
  int test162C;
  int testp162D;
  {
    pos1626 = pos01624;
    _pos1627 = pos1626;
    hh1628 = hh01625;
    step1629 = prim $zero01BB<$[3]> ();
    found162A = false;
    nfs162B = 0;
    test162C = 1;
    testp162D = 0;
  }
  update
  {
    bool _t162E;
    bool _t162F;
    real _t1733 = 0.5e0;
    real _t1734 = 0.5e0;
    real _t1735 = 0.5e0;
    vec3 _t1736 = [_t1733, _t1734, _t1735];
    vec3 mid1737 = prim -0026<$[3]> (pos1626, _t1736);
    bool _t1738;
    real _t1739 = mid1737[0];
    real _t173A = prim |()|00B5<$[]> (_t1739);
    real _t173B = 0.5e0;
    bool _t173C = prim <=007C (_t173A, _t173B);
    if _t173C {
      bool _t173D;
      real _t173E = mid1737[1];
      real _t173F = prim |()|00B5<$[]> (_t173E);
      real _t1740 = 0.5e0;
      bool _t1741 = prim <=007C (_t173F, _t1740);
      if _t1741 {
        real _t1742 = mid1737[2];
        real _t1743 = prim |()|00B5<$[]> (_t1742);
        real _t1744 = 0.5e0;
        _t173D = prim <=007C (_t1743, _t1744);
      } else {
        _t173D = false;
      }
      _t1738 = _t173D;
    } else {
      _t1738 = false;
    }
    _t162F = _t1738;
    bool _t1630 = prim !00BC (_t162F);
    if _t1630 {
      _t162E = true;
    } else {
      real _t1631;
      real _t172B = 0.5e0;
      real _t172C = 0.5e0;
      real _t172D = 0.5e0;
      vec3 _t172E = [_t172B, _t172C, _t172D];
      vec3 xp172F = prim -0026<$[3]> (pos1626, _t172E);
      real _t1730 = 0.2e1;
      vec3 gf1731 = prim *0036<$[3]> (_t1730, xp172F);
      real _t1732 = prim |()|00B5<$[3]> (gf1731);
      _t1631 = _t1732;
      real _t1632 = 0.e0;
      _t162E = prim ==0084 (_t1631, _t1632);
    }
    if _t162E {
      die;
    }
    bool _t1633 = prim !00BC (found162A);
    if _t1633 {
      vec3 step16DD;
      real _t16DE = 0.5e0;
      real _t16DF = 0.5e0;
      real _t16E0 = 0.5e0;
      vec3 _t16E1 = [_t16DE, _t16DF, _t16E0];
      vec3 xp16E2 = prim -0026<$[3]> (pos1626, _t16E1);
      real f16E3 = prim •00CE<$[3]; $[3]; $[]> (xp16E2, xp16E2);
      real _t16E4 = 0.2e1;
      vec3 gf16E5 = prim *0036<$[3]> (_t16E4, xp16E2);
      real _t16E6 = prim •00CE<$[3]; $[3]; $[]> (gf16E5, gf16E5);
      vec3 _t16E7 = prim /0057<$[3]> (gf16E5, _t16E6);
      real _t16E8 = prim -0026<$[]> (v00479, f16E3);
      vec3 _t16E9 = prim *0038<$[3]> (_t16E7, _t16E8);
      step16DD = _t16E9;
      step1629 = step16DD;
      pos1626 = prim +0017<$[3]> (pos1626, step1629);
      _pos1627 = pos1626;
      real _t1634 = prim |()|00B5<$[3]> (step1629);
      real _t1635 = prim /0055 (_t1634, rad0477);
      bool _t1636 = prim >0080 (_t1635, eps0478);
      if _t1636 {
        int _t1637 = 1;
        nfs162B = prim +0015 (nfs162B, _t1637);
        int _t1638 = 10;
        bool _t1639 = prim >007F (nfs162B, _t1638);
        if _t1639 {
          die;
        }
      } else {
        found162A = true;
        testp162D = 1;
      }
    } else {
      vec3 _t163A;
      real _t171F = 0.5e0;
      real _t1720 = 0.5e0;
      real _t1721 = 0.5e0;
      vec3 _t1722 = [_t171F, _t1720, _t1721];
      vec3 xp1723 = prim -0026<$[3]> (pos1626, _t1722);
      real f1724 = prim •00CE<$[3]; $[3]; $[]> (xp1723, xp1723);
      real _t1725 = 0.2e1;
      vec3 gf1726 = prim *0036<$[3]> (_t1725, xp1723);
      real _t1727 = prim •00CE<$[3]; $[3]; $[]> (gf1726, gf1726);
      vec3 _t1728 = prim /0057<$[3]> (gf1726, _t1727);
      real _t1729 = prim -0026<$[]> (v00479, f1724);
      vec3 _t172A = prim *0038<$[3]> (_t1728, _t1729);
      _t163A = _t172A;
      pos1626 = prim +0017<$[3]> (pos1626, _t163A);
      _pos1627 = pos1626;
      step1629 = prim $zero01BB<$[3]> ();
      real oldE163B = 0.e0;
      vec3 force163C = prim $zero01BB<$[3]> ();
      int nn163D = 0;
      particle[] _t163E = prim sphere0198<particle> (_pos1627, rad0477);
      foreach P163F in _t163E {
        vec3 _t1640 = P163F.pos1626;
        vec3 _t1641 = prim -0026<$[3]> (_t1640, pos1626);
        real _t1642;
        real _t1718 = prim |()|00B5<$[3]> (_t1641);
        real _t1719 = prim /0055 (_t1718, rad0477);
        real _t171A;
        real _t171B = 0.1e1;
        real _t171C = prim -0026<$[]> (_t171B, _t1719);
        int _t171D = 4;
        real _t171E = prim ^0068 (_t171C, _t171D);
        _t171A = _t171E;
        _t1642 = _t171A;
        oldE163B = prim +0017<$[]> (oldE163B, _t1642);
        vec3 _t1643 = P163F.pos1626;
        vec3 _t1644 = prim -0026<$[3]> (_t1643, pos1626);
        vec3 _t1645;
        real _t1708 = prim |()|00B5<$[3]> (_t1644);
        real _t1709 = prim /0055 (_t1708, rad0477);
        real _t170A;
        int _t170B = -4;
        real _t170C = (real)_t170B;
        real _t170D = 0.1e1;
        real _t170E = prim -0026<$[]> (_t170D, _t1709);
        int _t170F = 3;
        real _t1710 = prim ^0068 (_t170E, _t170F);
        real _t1711 = prim *0034 (_t170C, _t1710);
        _t170A = _t1711;
        real _t1712 = 0.1e1;
        real _t1713 = prim /0055 (_t1712, rad0477);
        real _t1714 = prim *0034 (_t170A, _t1713);
        vec3 _t1715 = prim *0036<$[3]> (_t1714, _t1644);
        real _t1716 = prim |()|00B5<$[3]> (_t1644);
        vec3 _t1717 = prim /0057<$[3]> (_t1715, _t1716);
        _t1645 = _t1717;
        force163C = prim +0017<$[3]> (force163C, _t1645);
        int _t1646 = 1;
        nn163D = prim +0015 (nn163D, _t1646);
      }
      int _t1647 = 0;
      bool _t1648 = prim ==0082 (_t1647, nn163D);
      if _t1648 {
        real _t1649 = 0.5e0;
        real _t164A = prim *0034 (_t1649, rad0477);
        real _t164B = 0.e0;
        real _t164C = 0.e0;
        vec3 _t164D = [_t164A, _t164B, _t164C];
        vec3 _t164E = prim +0017<$[3]> (pos1626, _t164D);
        new particle (_t164E, hh1628);
        continue;
      }
      tensor[3,3] _t164F;
      real _t16FD = 0.5e0;
      real _t16FE = 0.5e0;
      real _t16FF = 0.5e0;
      vec3 _t1700 = [_t16FD, _t16FE, _t16FF];
      vec3 xp1701 = prim -0026<$[3]> (pos1626, _t1700);
      real _t1702 = 0.2e1;
      vec3 gf1703 = prim *0036<$[3]> (_t1702, xp1701);
      vec3 n1704 = prim normalize0137<$[3]> (gf1703);
      tensor[3,3] _t1705 = prim $id01B9<%3> ();
      tensor[3,3] _t1706 = prim ⊗00E5<$[3]; $[3]; $[3,3]> (n1704, n1704);
      tensor[3,3] _t1707 = prim -0026<$[3,3]> (_t1705, _t1706);
      _t164F = _t1707;
      force163C = prim •00CE<$[3,3]; $[3]; $[3]> (_t164F, force163C);
      vec3 es1650 = prim *0036<$[3]> (hh1628, force163C);
      real _t1651 = prim |()|00B5<$[3]> (es1650);
      bool _t1652 = prim >0080 (_t1651, rad0477);
      if _t1652 {
        real _t1653 = prim |()|00B5<$[3]> (es1650);
        real _t1654 = prim /0055 (rad0477, _t1653);
        hh1628 = prim *0034 (hh1628, _t1654);
        real _t1655 = prim |()|00B5<$[3]> (es1650);
        real _t1656 = prim /0055 (rad0477, _t1655);
        es1650 = prim *0038<$[3]> (es1650, _t1656);
      }
      vec3 samplePos1657 = prim +0017<$[3]> (pos1626, es1650);
      vec3 fs1658;
      real _t16F1 = 0.5e0;
      real _t16F2 = 0.5e0;
      real _t16F3 = 0.5e0;
      vec3 _t16F4 = [_t16F1, _t16F2, _t16F3];
      vec3 xp16F5 = prim -0026<$[3]> (samplePos1657, _t16F4);
      real f16F6 = prim •00CE<$[3]; $[3]; $[]> (xp16F5, xp16F5);
      real _t16F7 = 0.2e1;
      vec3 gf16F8 = prim *0036<$[3]> (_t16F7, xp16F5);
      real _t16F9 = prim •00CE<$[3]; $[3]; $[]> (gf16F8, gf16F8);
      vec3 _t16FA = prim /0057<$[3]> (gf16F8, _t16F9);
      real _t16FB = prim -0026<$[]> (v00479, f16F6);
      vec3 _t16FC = prim *0038<$[3]> (_t16FA, _t16FB);
      fs1658 = _t16FC;
      real _t1659 = prim |()|00B5<$[3]> (fs1658);
      real _t165A = prim |()|00B5<$[3]> (es1650);
      real _t165B = prim /0055 (_t1659, _t165A);
      real _t165C = 0.5e0;
      bool _t165D = prim >0080 (_t165B, _t165C);
      if _t165D {
        real _t165E = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t165E);
        continue;
      }
      vec3 oldPos165F = pos1626;
      vec3 up1660 = prim +0017<$[3]> (fs1658, es1650);
      pos1626 = prim +0017<$[3]> (pos1626, up1660);
      _pos1627 = pos1626;
      particle[] _t1661 = prim sphere0198<particle> (_pos1627, rad0477);
      real accum1666 = 0.e0;
      foreach P1662 in _t1661 {
        vec3 _t1663 = P1662.pos1626;
        vec3 _t1664 = prim -0026<$[3]> (pos1626, _t1663);
        real _t1665;
        real _t16EA = prim |()|00B5<$[3]> (_t1664);
        real _t16EB = prim /0055 (_t16EA, rad0477);
        real _t16EC;
        real _t16ED = 0.1e1;
        real _t16EE = prim -0026<$[]> (_t16ED, _t16EB);
        int _t16EF = 4;
        real _t16F0 = prim ^0068 (_t16EE, _t16EF);
        _t16EC = _t16F0;
        _t1665 = _t16EC;
        accum1666 = prim +0017<$[]> (accum1666, _t1665);
      }
      real newE1667 = accum1666;
      real _t1668 = prim -0026<$[]> (newE1667, oldE163B);
      real _t1669 = 0.5e0;
      vec3 _t166A = prim -0026<$[3]> (pos1626, oldPos165F);
      vec3 _t166B = prim *0036<$[3]> (_t1669, _t166A);
      vec3 _t166C = prim unary -008B<$[3]> (force163C);
      real _t166D = prim •00CE<$[3]; $[3]; $[]> (_t166B, _t166C);
      bool _t166E = prim >0080 (_t1668, _t166D);
      if _t166E {
        pos1626 = oldPos165F;
        _pos1627 = pos1626;
        real _t166F = 0.5e0;
        hh1628 = prim *0034 (hh1628, _t166F);
        continue;
      }
      real _t1670 = 0.11e1;
      hh1628 = prim *0034 (hh1628, _t1670);
      step1629 = up1660;
      int _t1671 = 5;
      bool _t1672 = prim <0079 (nn163D, _t1671);
      if _t1672 {
        real _t1673 = 0.5e0;
        real _t1674 = prim *0034 (_t1673, rad0477);
        vec3 _t1675 = prim normalize0137<$[3]> (es1650);
        vec3 _t1676 = prim *0036<$[3]> (_t1674, _t1675);
        vec3 _t1677 = prim +0017<$[3]> (pos1626, _t1676);
        new particle (_t1677, hh1628);
      }
    }
  }
}
collection {
  foreach x1678 in ipos047A {
    real _t1679 = 0.1e1;
    new particle (x1678, _t1679);
  }
}
update {
  int res167A= sum<int> { (P167D) => {
      int _t167E = P167D.test162C;
      return _t167E;
    } (P167B, P167B)
  | P167B in all };
  int num1680 = res167A;
  int res1681= sum<int> { (P1684) => {
      int _t1685 = P1684.testp162D;
      return _t1685;
    } (P1682, P1682)
  | P1682 in all };
  int numFound1687 = res1681;
  bool res1688= all { (P168B) => {
      bool _t168C = P168B.found162A;
      return _t168C;
    } (P1689, P1689)
  | P1689 in all };
  bool allFound168E = res1688;
  real res168F= max<real> { (P1693) => {
      vec3 _t1694 = P1693.step1629;
      real _t1695 = prim |()|00B5<$[3]> (_t1694);
      return _t1695;
    } (P1690, P1690)
  | P1690 in all };
  real maxStep1697 = res168F;
  real res1698= max<real> { (P16A1) => {
      vec3 _t16A2 = P16A1.pos1626;
      real _t16A3 = 0.5e0;
      real _t16A4 = 0.5e0;
      real _t16A5 = 0.5e0;
      vec3 _t16A6 = [_t16A3, _t16A4, _t16A5];
      vec3 _t16A7 = prim -0026<$[3]> (_t16A2, _t16A6);
      real _t16A8 = prim |()|00B5<$[3]> (_t16A7);
      return _t16A8;
    } (P1699, P1699)
  | P1699 in all };
  real maxDist16AA = res1698;
  real res16AB= min<real> { (P16B4) => {
      vec3 _t16B5 = P16B4.pos1626;
      real _t16B6 = 0.5e0;
      real _t16B7 = 0.5e0;
      real _t16B8 = 0.5e0;
      vec3 _t16B9 = [_t16B6, _t16B7, _t16B8];
      vec3 _t16BA = prim -0026<$[3]> (_t16B5, _t16B9);
      real _t16BB = prim |()|00B5<$[3]> (_t16BA);
      return _t16BB;
    } (P16AC, P16AC)
  | P16AC in all };
  real minDist16BD = res16AB;
  vec2 averageDist16BE = [minDist16BD, maxDist16AA];
  string _t16BF = "One run:";
  string _t16C0 = " and ";
  real _t16C1 = prim /0055 (maxStep1697, rad0477);
  string _t16C2 = " and ";
  real _t16C3 = prim /0055 (maxStep1697, rad0477);
  bool _t16C4 = prim <007A (_t16C3, eps0478);
  string _t16C5 = " and ";
  string _t16C6 = " of ";
  string _t16C7 = " and ";
  string _t16C8 = "\n";
  print (_t16BF, allFound168E, _t16C0, _t16C1, _t16C2, _t16C4, _t16C5, numFound1687, _t16C6, num1680, _t16C7, averageDist16BE, _t16C8);
  if allFound168E {
    real _t16C9 = prim /0055 (maxStep1697, rad0477);
    bool _t16CA = prim <007A (_t16C9, eps0478);
    if _t16CA {
      string _t16CB = "CONVERGED!\n";
      print (_t16CB);
      stabilize_all;
    }
  }
}
/* Program end */
##### high-ir: after simple-to-high translation ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1745 (meshData) = <no-default>
  input 0space0473_intermedateGlobal1746 (space) = <no-default>
  input 0data0475_intermedateGlobal1747 (data) = <no-default>
  input rad1748 (rad) = <default>
  input eps1749 (eps) = <default>
  input v0174A (v0) = <default>
  input ipos174B (ipos) = <no-default>
## functions
  function real min17B9 (particle P17A8#1) {
    ENTRY17B8:  preds = []
      tensor[3] _t17A9#1 = P17A8.pos;
      real _t17AB#1 = 0.5e0;
      real _t17AD#1 = 0.5e0;
      real _t17AF#1 = 0.5e0;
      tensor[3] _t17B1#1 = <tensor[3]>[_t17AB,_t17AD,_t17AF];
      tensor[3] _t17B3#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t17A9,_t17B1);
      real _t17B5#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t17B3);
      return _t17B5
}
  function real max17A7 (particle P1795#1) {
    ENTRY17A6:  preds = []
      tensor[3] _t1796#1 = P1795.pos;
      real _t1799#1 = 0.5e0;
      real _t179B#1 = 0.5e0;
      real _t179D#1 = 0.5e0;
      tensor[3] _t179F#1 = <tensor[3]>[_t1799,_t179B,_t179D];
      tensor[3] _t17A1#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1796,_t179F);
      real _t17A3#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t17A1);
      return _t17A3
}
  function real max1794 (particle P178C#1) {
    ENTRY1793:  preds = []
      tensor[3] _t178D#1 = P178C.step;
      real _t1790#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t178D);
      return _t1790
}
  function bool all178B (particle P1785#1) {
    ENTRY178A:  preds = []
      bool _t1786#1 = P1785.found;
      return _t1786
}
  function int sum1784 (particle P177E#1) {
    ENTRY1783:  preds = []
      int _t177F#1 = P177E.testp;
      return _t177F
}
  function int sum177D (particle P1777#1) {
    ENTRY177C:  preds = []
      int _t1778#1 = P1777.test;
      return _t1778
}
  function int[2] nextCell41776 (int faceIdx1757#2, int cell1758#1, femData:Mesh mesh1759#1) {
    ENTRY1775:  preds = []
      int _t175A#1 = -1;
      bool _t175C#1 = EQ<int>(faceIdx1757,_t175A);
      if _t175C then goto ASSIGN1760 else goto ASSIGN1767
    ASSIGN1760:  preds = [COND1773]
      int _t175F#1 = -1;
      int _t1761#1 = -1;
      int[2] _t1763#1 = <int[2]>{_t175F,_t1761};
      return _t1763
      goto JOIN175E
    JOIN175E:  preds = [*RETURN(_t1763)1765,*RETURN(_t1770)1772]
      unreachable
    ASSIGN1767:  preds = [COND1773]
      int _t1766#1 = 8;
      int _t1768#1 = IMul(cell1758,_t1766);
      int _t176A#1 = 2;
      int _t176C#1 = IMul(faceIdx1757,_t176A);
      int _t176E#1 = IAdd(_t1768,_t176C);
      int[2] _t1770#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1759,_t176E);
      return _t1770
      goto JOIN175E
}
## input initialization
  ENTRY1755:  preds = []
    real rad174C#1 = 0.1e-1;
    globals.rad1748 = rad174C;
    real eps174F#1 = 0.1e-1;
    globals.eps1749 = eps174F;
    real v01752#1 = 0.625e-1;
    globals.v0174A = v01752;
    return
## global-variable initialization
  ENTRY17D0:  preds = []
    femData:Mesh meshData17BA#2 = globals.meshData1745;
    int _t17BC#1 = 0;
    int _t17BE#1 = 1;
    int _t17C0#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData17BA);
    int _t17C2#1 = ISub(_t17C0,_t17BE);
    int[] _t17C4#1 = Range(_t17BC,_t17C2);
    femData:MeshCell[] _t17C6#1 = <femData:MeshCell[]>{};
  FOREACH17CA:  preds = [ASSIGN17C7,NEXT17CF]
    foreach (_t17C8 in _t17C4) on exit goto RETURN17D1
      femData:MeshCell[] _t17C9#1 = phi(_t17C6,_t17CD)
    femData:MeshCell _t17CB#1 = LoadFem<femData:MeshCell>(meshData17BA,_t17C8);
    femData:MeshCell[] _t17CD#1 = Append<femData:MeshCell>(_t17C9,_t17CB);
    goto FOREACH17CA
  RETURN17D1:  preds = [FOREACH17CA]
    return
## strand
  strand particle (tensor[3] pos017DC#1, real hh017DD#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY17F9:  preds = []
        tensor[3] pos17E9#2 = pos017DC;
        tensor[3] _pos17EB#1 = pos17E9;
        real hh17ED#1 = hh017DD;
        tensor[3] step17EF#1 = λ()<Z_{i0}>_{3} ();
        bool found17F1#1 = false;
        int nfs17F3#1 = 0;
        int test17F5#1 = 1;
        int testp17F7#1 = 0;
        self.pos = pos17E9;
        self._pos = _pos17EB;
        self.hh = hh17ED;
        self.step = step17EF;
        self.found = found17F1;
        self.nfs = nfs17F3;
        self.test = test17F5;
        self.testp = testp17F7;
        return
    end state init
    method update
        ENTRY1A0F:  preds = []
          real rad1805#12 = globals.rad1748;
          real eps1804#1 = globals.eps1749;
          real v01803#3 = globals.v0174A;
          tensor[3] pos1809#6 = self.pos;
          tensor[3] _pos180A#0 = self._pos;
          real hh180B#6 = self.hh;
          tensor[3] step180C#0 = self.step;
          bool found180D#6 = self.found;
          int nfs180E#6 = self.nfs;
          int test180F#0 = self.test;
          int testp1810#5 = self.testp;
          real _t181B#1 = 0.5e0;
          real _t181D#1 = 0.5e0;
          real _t181F#1 = 0.5e0;
          tensor[3] _t1821#1 = <tensor[3]>[_t181B,_t181D,_t181F];
          tensor[3] mid1823#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1809,_t1821);
          real _t1826#1 = TensorIndex<tensor[3],[0]>(mid1823);
          real _t1828#1 = λ(T0[])<Abs(T0)> (_t1826);
          real _t182A#1 = 0.5e0;
          bool _t182C#1 = LTE<real>(_t1828,_t182A);
          if _t182C then goto ASSIGN1831 else goto ASSIGN1849
        ASSIGN1831:  preds = [COND184A]
          real _t1830#1 = TensorIndex<tensor[3],[1]>(mid1823);
          real _t1832#1 = λ(T0[])<Abs(T0)> (_t1830);
          real _t1834#1 = 0.5e0;
          bool _t1836#1 = LTE<real>(_t1832,_t1834);
          if _t1836 then goto ASSIGN183A else goto ASSIGN1843
        ASSIGN183A:  preds = [COND1844]
          real _t1839#1 = TensorIndex<tensor[3],[2]>(mid1823);
          real _t183B#1 = λ(T0[])<Abs(T0)> (_t1839);
          real _t183D#1 = 0.5e0;
          bool _t183F#1 = LTE<real>(_t183B,_t183D);
          goto JOIN1838
        JOIN1838:  preds = [ASSIGN1841,ASSIGN1843]
          bool _t1840#1 = phi(_t183F,_t1842)
          bool _t1845#1 = _t1840;
          goto JOIN182E
        JOIN182E:  preds = [ASSIGN1847,ASSIGN1849]
          bool _t1846#1 = phi(_t1845,_t1848)
          bool _t184B#1 = _t1846;
          bool _t184D#1 = BNot(_t184B);
          if _t184D then goto ASSIGN1852 else goto ASSIGN1855
        ASSIGN1852:  preds = [COND186A]
          bool _t1850#1 = true;
          goto JOIN184F
        JOIN184F:  preds = [ASSIGN1852,ASSIGN1869]
          bool _t1851#1 = phi(_t1850,_t1868)
          if _t1851 then goto DIE186C else goto JOIN186B
        DIE186C:  preds = [COND186D]
          die
          goto JOIN186B
        JOIN186B:  preds = [*DIE186C,COND186D]
          bool _t186E#1 = BNot(found180D);
          if _t186E then goto ASSIGN1873 else goto ASSIGN18B4
        ASSIGN1873:  preds = [COND1A0E]
          real _t1872#1 = 0.5e0;
          real _t1874#1 = 0.5e0;
          real _t1876#1 = 0.5e0;
          tensor[3] _t1878#1 = <tensor[3]>[_t1872,_t1874,_t1876];
          tensor[3] xp187A#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1809,_t1878);
          real f187C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (xp187A,xp187A);
          real _t187E#1 = 0.2e1;
          tensor[3] gf1880#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t187E,xp187A);
          real _t1882#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (gf1880,gf1880);
          tensor[3] _t1884#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (gf1880,_t1882);
          real _t1886#1 = λ(T0[],T1[])<(T0) - (T1)> (v01803,f187C);
          tensor[3] _t1888#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1886,_t1884);
          tensor[3] step188A#1 = _t1888;
          tensor[3] step188C#3 = step188A;
          tensor[3] pos188F#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1809,step188C);
          tensor[3] _pos1892#1 = pos188F;
          real _t1895#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (step188C);
          real _t1897#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1895,rad1805);
          bool _t1899#1 = GT<real>(_t1897,eps1804);
          if _t1899 then goto ASSIGN189D else goto ASSIGN18AA
        ASSIGN189D:  preds = [COND18AE]
          int _t189C#1 = 1;
          int nfs189E#2 = IAdd(nfs180E,_t189C);
          int _t18A1#1 = 10;
          bool _t18A3#1 = GT<int>(nfs189E,_t18A1);
          if _t18A3 then goto DIE18A6 else goto JOIN18A5
        DIE18A6:  preds = [COND18A7]
          die
          goto JOIN18A5
        JOIN18A5:  preds = [*DIE18A6,COND18A7]
          goto JOIN189B
        JOIN189B:  preds = [JOIN18A5,ASSIGN18AD]
          int testp18AC#1 = phi(testp1810,testp18AB)
          int nfs189F#1 = phi(nfs189E,nfs180E)
          bool found18A9#1 = phi(found180D,found18A8)
          goto JOIN1870
        JOIN1870:  preds = [JOIN189B,JOIN1A01]
          int testp18B1#1 = phi(testp18AC,testp1810)
          int nfs18B0#1 = phi(nfs189F,nfs180E)
          bool found18AF#1 = phi(found18A9,found180D)
          tensor[3] step188D#1 = phi(step188C,step19FB)
          real hh1973#1 = phi(hh180B,hh19F9)
          tensor[3] _pos1893#1 = phi(_pos1892,_pos19E7)
          tensor[3] pos1890#1 = phi(pos188F,pos19E4)
          self.pos = pos1890;
          self._pos = _pos1893;
          self.hh = hh1973;
          self.step = step188D;
          self.found = found18AF;
          self.nfs = nfs18B0;
          self.testp = testp18B1;
          active
        ASSIGN18AA:  preds = [COND18AE]
          bool found18A8#1 = true;
          int testp18AB#1 = 1;
          goto JOIN189B
        ASSIGN18B4:  preds = [COND1A0E]
          real _t18B3#1 = 0.5e0;
          real _t18B5#1 = 0.5e0;
          real _t18B7#1 = 0.5e0;
          tensor[3] _t18B9#1 = <tensor[3]>[_t18B3,_t18B5,_t18B7];
          tensor[3] xp18BB#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1809,_t18B9);
          real f18BD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (xp18BB,xp18BB);
          real _t18BF#1 = 0.2e1;
          tensor[3] gf18C1#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t18BF,xp18BB);
          real _t18C3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (gf18C1,gf18C1);
          tensor[3] _t18C5#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (gf18C1,_t18C3);
          real _t18C7#1 = λ(T0[],T1[])<(T0) - (T1)> (v01803,f18BD);
          tensor[3] _t18C9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t18C7,_t18C5);
          tensor[3] _t18CB#1 = _t18C9;
          tensor[3] pos18CD#10 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1809,_t18CB);
          tensor[3] _pos18CF#3 = pos18CD;
          tensor[3] step18D1#3 = λ()<Z_{i0}>_{3} ();
          real oldE18D3#1 = 0.e0;
          tensor[3] force18D5#1 = λ()<Z_{i0}>_{3} ();
          int nn18D7#1 = 0;
          particle[] _t18D9#1 = SphereQuery<3,particle>(_pos18CF,rad1805);
        FOREACH18DF:  preds = [ASSIGN18DA,NEXT1926]
          foreach (P18DB in _t18D9) on exit goto ASSIGN1928
            int nn18DE#3 = phi(nn18D7,nn1924)
            tensor[3] force18DD#2 = phi(force18D5,force1920)
            real oldE18DC#2 = phi(oldE18D3,oldE18F6)
          tensor[3] _t18E0#1 = P18DB.pos;
          tensor[3] _t18E2#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t18E0,pos18CD);
          real _t18E5#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t18E2);
          real _t18E7#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18E5,rad1805);
          real _t18EA#1 = 0.1e1;
          real _t18EC#1 = λ(T0[],T1[])<(T0) - (T1)> (_t18EA,_t18E7);
          int _t18EE#0 = 4;
          real _t18F0#1 = λ(T0[])<(T0)^4> (_t18EC);
          real _t18F2#1 = _t18F0;
          real _t18F4#1 = _t18F2;
          real oldE18F6#1 = λ(T0[],T1[])<(T0 + T1)> (oldE18DC,_t18F4);
          tensor[3] _t18F8#1 = P18DB.pos;
          tensor[3] _t18FA#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t18F8,pos18CD);
          real _t18FD#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t18FA);
          real _t18FF#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18FD,rad1805);
          int _t1902#1 = -4;
          real _t1904#1 = IntToReal(_t1902);
          real _t1906#1 = 0.1e1;
          real _t1908#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1906,_t18FF);
          int _t190A#0 = 3;
          real _t190C#1 = λ(T0[])<(T0)^3> (_t1908);
          real _t190E#1 = λ(T0[],T1[])<(T0 * T1)> (_t1904,_t190C);
          real _t1910#1 = _t190E;
          real _t1912#1 = 0.1e1;
          real _t1914#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1912,rad1805);
          real _t1916#1 = λ(T0[],T1[])<(T0 * T1)> (_t1910,_t1914);
          tensor[3] _t1918#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1916,_t18FA);
          real _t191A#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t18FA);
          tensor[3] _t191C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t1918,_t191A);
          tensor[3] _t191E#1 = _t191C;
          tensor[3] force1920#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (force18DD,_t191E);
          int _t1922#1 = 1;
          int nn1924#1 = IAdd(nn18DE,_t1922);
          goto FOREACH18DF
        ASSIGN1928:  preds = [FOREACH18DF]
          int _t1927#1 = 0;
          bool _t1929#1 = EQ<int>(_t1927,nn18DE);
          if _t1929 then goto ASSIGN192D else goto JOIN192B
        ASSIGN192D:  preds = [COND1941]
          real _t192C#1 = 0.5e0;
          real _t192E#1 = λ(T0[],T1[])<(T0 * T1)> (_t192C,rad1805);
          real _t1930#1 = 0.e0;
          real _t1932#1 = 0.e0;
          tensor[3] _t1934#1 = <tensor[3]>[_t192E,_t1930,_t1932];
          tensor[3] _t1936#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos18CD,_t1934);
          new particle(_t1936,hh180B);
          self.pos = pos18CD;
          self._pos = _pos18CF;
          self.hh = hh180B;
          self.step = step18D1;
          self.found = found180D;
          self.nfs = nfs180E;
          self.testp = testp1810;
          active
          goto JOIN192B
        JOIN192B:  preds = [*ACTIVE1939,COND1941]
          real _t1943#1 = 0.5e0;
          real _t1945#1 = 0.5e0;
          real _t1947#1 = 0.5e0;
          tensor[3] _t1949#1 = <tensor[3]>[_t1943,_t1945,_t1947];
          tensor[3] xp194B#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos18CD,_t1949);
          real _t194D#1 = 0.2e1;
          tensor[3] gf194F#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t194D,xp194B);
          tensor[3] n1951#2 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (gf194F,gf194F);
          tensor[3,3] _t1953#1 = λ()<δ_{i0,i1}>_{3 3} ();
          tensor[3,3] _t1955#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (n1951,n1951);
          tensor[3,3] _t1957#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1}) - (T1_{i0,i1})>_{3 3} (_t1953,_t1955);
          tensor[3,3] _t1959#1 = _t1957;
          tensor[3] force195B#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1959,force18DD);
          tensor[3] es195D#5 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (hh180B,force195B);
          real _t195F#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (es195D);
          bool _t1961#1 = GT<real>(_t195F,rad1805);
          if _t1961 then goto ASSIGN1965 else goto JOIN1963
        ASSIGN1965:  preds = [COND1972]
          real _t1964#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (es195D);
          real _t1966#1 = λ(T0[],T1[])<(T0) / ( T1)> (rad1805,_t1964);
          real hh1968#1 = λ(T0[],T1[])<(T0 * T1)> (hh180B,_t1966);
          real _t196B#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (es195D);
          real _t196D#1 = λ(T0[],T1[])<(T0) / ( T1)> (rad1805,_t196B);
          tensor[3] es196F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t196D,es195D);
          goto JOIN1963
        JOIN1963:  preds = [ASSIGN1971,COND1972]
          tensor[3] es1970#5 = phi(es196F,es195D)
          real hh1969#2 = phi(hh1968,hh180B)
          tensor[3] samplePos1974#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos18CD,es1970);
          real _t1977#1 = 0.5e0;
          real _t1979#1 = 0.5e0;
          real _t197B#1 = 0.5e0;
          tensor[3] _t197D#1 = <tensor[3]>[_t1977,_t1979,_t197B];
          tensor[3] xp197F#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (samplePos1974,_t197D);
          real f1981#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (xp197F,xp197F);
          real _t1983#1 = 0.2e1;
          tensor[3] gf1985#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1983,xp197F);
          real _t1987#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (gf1985,gf1985);
          tensor[3] _t1989#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (gf1985,_t1987);
          real _t198B#1 = λ(T0[],T1[])<(T0) - (T1)> (v01803,f1981);
          tensor[3] _t198D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t198B,_t1989);
          tensor[3] fs198F#2 = _t198D;
          real _t1991#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (fs198F);
          real _t1993#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (es1970);
          real _t1995#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1991,_t1993);
          real _t1997#1 = 0.5e0;
          bool _t1999#1 = GT<real>(_t1995,_t1997);
          if _t1999 then goto ASSIGN199D else goto JOIN199B
        ASSIGN199D:  preds = [COND19A9]
          real _t199C#1 = 0.5e0;
          real hh199E#1 = λ(T0[],T1[])<(T0 * T1)> (hh1969,_t199C);
          self.pos = pos18CD;
          self._pos = _pos18CF;
          self.hh = hh199E;
          self.step = step18D1;
          self.found = found180D;
          self.nfs = nfs180E;
          self.testp = testp1810;
          active
          goto JOIN199B
        JOIN199B:  preds = [*ACTIVE19A1,COND19A9]
          real hh199F#2 = phi(hh1969)
          tensor[3] oldPos19AA#2 = pos18CD;
          tensor[3] up19AC#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (fs198F,es1970);
          tensor[3] pos19AE#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos18CD,up19AC);
          tensor[3] _pos19B0#2 = pos19AE;
          particle[] _t19B2#1 = SphereQuery<3,particle>(_pos19B0,rad1805);
          real accum19B4#1 = 0.e0;
        FOREACH19B8:  preds = [ASSIGN19B5,NEXT19D1]
          foreach (P19B6 in _t19B2) on exit goto ASSIGN19D3
            real accum19B7#2 = phi(accum19B4,accum19CF)
          tensor[3] _t19B9#1 = P19B6.pos;
          tensor[3] _t19BB#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos19AE,_t19B9);
          real _t19BE#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t19BB);
          real _t19C0#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t19BE,rad1805);
          real _t19C3#1 = 0.1e1;
          real _t19C5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t19C3,_t19C0);
          int _t19C7#0 = 4;
          real _t19C9#1 = λ(T0[])<(T0)^4> (_t19C5);
          real _t19CB#1 = _t19C9;
          real _t19CD#1 = _t19CB;
          real accum19CF#1 = λ(T0[],T1[])<(T0 + T1)> (accum19B7,_t19CD);
          goto FOREACH19B8
        ASSIGN19D3:  preds = [FOREACH19B8]
          real newE19D2#1 = accum19B7;
          real _t19D4#1 = λ(T0[],T1[])<(T0) - (T1)> (newE19D2,oldE18DC);
          real _t19D6#1 = 0.5e0;
          tensor[3] _t19D8#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos19AE,oldPos19AA);
          tensor[3] _t19DA#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t19D6,_t19D8);
          tensor[3] _t19DC#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (force195B);
          real _t19DE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t19DA,_t19DC);
          bool _t19E0#1 = GT<real>(_t19D4,_t19DE);
          if _t19E0 then goto ASSIGN19E5 else goto JOIN19E2
        ASSIGN19E5:  preds = [COND19F6]
          tensor[3] pos19E3#2 = oldPos19AA;
          tensor[3] _pos19E6#1 = pos19E3;
          real _t19E9#1 = 0.5e0;
          real hh19EB#1 = λ(T0[],T1[])<(T0 * T1)> (hh199F,_t19E9);
          self.pos = pos19E3;
          self._pos = _pos19E6;
          self.hh = hh19EB;
          self.step = step18D1;
          self.found = found180D;
          self.nfs = nfs180E;
          self.testp = testp1810;
          active
          goto JOIN19E2
        JOIN19E2:  preds = [*ACTIVE19EE,COND19F6]
          real hh19EC#1 = phi(hh199F)
          tensor[3] _pos19E7#1 = phi(_pos19B0)
          tensor[3] pos19E4#2 = phi(pos19AE)
          real _t19F7#1 = 0.11e1;
          real hh19F9#2 = λ(T0[],T1[])<(T0 * T1)> (hh19EC,_t19F7);
          tensor[3] step19FB#1 = up19AC;
          int _t19FD#1 = 5;
          bool _t19FF#1 = LT<int>(nn18DE,_t19FD);
          if _t19FF then goto ASSIGN1A03 else goto JOIN1A01
        ASSIGN1A03:  preds = [COND1A0D]
          real _t1A02#1 = 0.5e0;
          real _t1A04#1 = λ(T0[],T1[])<(T0 * T1)> (_t1A02,rad1805);
          tensor[3] _t1A06#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (es1970,es1970);
          tensor[3] _t1A08#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A04,_t1A06);
          tensor[3] _t1A0A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos19E4,_t1A08);
          new particle(_t1A0A,hh19F9);
          goto JOIN1A01
        JOIN1A01:  preds = [NEW1A0C,COND1A0D]
          goto JOIN1870
        ASSIGN1855:  preds = [COND186A]
          real _t1854#1 = 0.5e0;
          real _t1856#1 = 0.5e0;
          real _t1858#1 = 0.5e0;
          tensor[3] _t185A#1 = <tensor[3]>[_t1854,_t1856,_t1858];
          tensor[3] xp185C#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1809,_t185A);
          real _t185E#1 = 0.2e1;
          tensor[3] gf1860#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t185E,xp185C);
          real _t1862#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (gf1860);
          real _t1864#1 = _t1862;
          real _t1866#1 = 0.e0;
          bool _t1868#1 = EQ<real>(_t1864,_t1866);
          goto JOIN184F
        ASSIGN1843:  preds = [COND1844]
          bool _t1842#1 = false;
          goto JOIN1838
        ASSIGN1849:  preds = [COND184A]
          bool _t1848#1 = false;
          goto JOIN182E
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY17DA:  preds = []
      tensor[3][] ipos17D2#1 = globals.ipos174B;
    FOREACH17D5:  preds = [ASSIGN17D3,NEXT17D9]
      foreach (x17D4 in ipos17D2) on exit goto RETURN17DB
      real _t17D6#1 = 0.1e1;
      new particle(x17D4,_t17D6);
      goto FOREACH17D5
    RETURN17DB:  preds = [FOREACH17D5]
      return
## global update
  ENTRY1A63:  preds = []
    real rad1A19#3 = globals.rad1748;
    real eps1A18#2 = globals.eps1749;
    particle[] P1A1C#1 = Strands<particle,all>;
    (int res1A1D#1) = sum<int>(MAP sum177D (P1A1C));
    int num1A20#1 = res1A1D;
    particle[] P1A22#1 = Strands<particle,all>;
    (int res1A23#1) = sum<int>(MAP sum1784 (P1A22));
    int numFound1A26#1 = res1A23;
    particle[] P1A28#1 = Strands<particle,all>;
    (bool res1A29#1) = all(MAP all178B (P1A28));
    bool allFound1A2C#2 = res1A29;
    particle[] P1A2E#1 = Strands<particle,all>;
    (real res1A2F#1) = max<real>(MAP max1794 (P1A2E));
    real maxStep1A32#3 = res1A2F;
    particle[] P1A34#1 = Strands<particle,all>;
    (real res1A35#1) = max<real>(MAP max17A7 (P1A34));
    real maxDist1A38#1 = res1A35;
    particle[] P1A3A#1 = Strands<particle,all>;
    (real res1A3B#1) = min<real>(MAP min17B9 (P1A3A));
    real minDist1A3E#1 = res1A3B;
    tensor[2] averageDist1A40#1 = <tensor[2]>[minDist1A3E,maxDist1A38];
    string _t1A42#1 = "One run:";
    string _t1A44#1 = " and ";
    real _t1A46#1 = λ(T0[],T1[])<(T0) / ( T1)> (maxStep1A32,rad1A19);
    string _t1A48#1 = " and ";
    real _t1A4A#1 = λ(T0[],T1[])<(T0) / ( T1)> (maxStep1A32,rad1A19);
    bool _t1A4C#1 = LT<real>(_t1A4A,eps1A18);
    string _t1A4E#1 = " and ";
    string _t1A50#1 = " of ";
    string _t1A52#1 = " and ";
    string _t1A54#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t1A42,allFound1A2C,_t1A44,_t1A46,_t1A48,_t1A4C,_t1A4E,numFound1A26,_t1A50,num1A20,_t1A52,averageDist1A40,_t1A54);
    if allFound1A2C then goto ASSIGN1A59 else goto JOIN1A57
  ASSIGN1A59:  preds = [COND1A62]
    real _t1A58#1 = λ(T0[],T1[])<(T0) / ( T1)> (maxStep1A32,rad1A19);
    bool _t1A5A#1 = LT<real>(_t1A58,eps1A18);
    if _t1A5A then goto ASSIGN1A5E else goto JOIN1A5C
  ASSIGN1A5E:  preds = [COND1A61]
    string _t1A5D#1 = "CONVERGED!\n";
    Print<[string]>(_t1A5D);
    StabilizeAll;
    goto JOIN1A5C
  JOIN1A5C:  preds = [MASSIGN1A60,COND1A61]
    goto JOIN1A57
  JOIN1A57:  preds = [JOIN1A5C,COND1A62]
    continue
#### end program ####
##### high-ir: after value numbering ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1745 (meshData) = <no-default>
  input 0space0473_intermedateGlobal1746 (space) = <no-default>
  input 0data0475_intermedateGlobal1747 (data) = <no-default>
  input rad1748 (rad) = <default>
  input eps1749 (eps) = <default>
  input v0174A (v0) = <default>
  input ipos174B (ipos) = <no-default>
## functions
  function real min17B9 (particle P17A8#1) {
    ENTRY17B8:  preds = []
      tensor[3] _t17A9#1 = P17A8.pos;
      real _t17AB#3 = 0.5e0;
      tensor[3] _t17B1#1 = <tensor[3]>[_t17AB,_t17AB,_t17AB];
      tensor[3] _t17B3#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t17A9,_t17B1);
      real _t17B5#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t17B3);
      return _t17B5
}
  function real max17A7 (particle P1795#1) {
    ENTRY17A6:  preds = []
      tensor[3] _t1796#1 = P1795.pos;
      real _t1799#3 = 0.5e0;
      tensor[3] _t179F#1 = <tensor[3]>[_t1799,_t1799,_t1799];
      tensor[3] _t17A1#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1796,_t179F);
      real _t17A3#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t17A1);
      return _t17A3
}
  function real max1794 (particle P178C#1) {
    ENTRY1793:  preds = []
      tensor[3] _t178D#1 = P178C.step;
      real _t1790#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t178D);
      return _t1790
}
  function bool all178B (particle P1785#1) {
    ENTRY178A:  preds = []
      bool _t1786#1 = P1785.found;
      return _t1786
}
  function int sum1784 (particle P177E#1) {
    ENTRY1783:  preds = []
      int _t177F#1 = P177E.testp;
      return _t177F
}
  function int sum177D (particle P1777#1) {
    ENTRY177C:  preds = []
      int _t1778#1 = P1777.test;
      return _t1778
}
  function int[2] nextCell41776 (int faceIdx1757#2, int cell1758#1, femData:Mesh mesh1759#1) {
    ENTRY1775:  preds = []
      int _t175A#3 = -1;
      bool _t175C#1 = EQ<int>(faceIdx1757,_t175A);
      if _t175C then goto ASSIGN1A68 else goto ASSIGN1767
    ASSIGN1A68:  preds = [COND1773]
      int[2] _t1763#1 = <int[2]>{_t175A,_t175A};
      return _t1763
      goto JOIN175E
    JOIN175E:  preds = [*RETURN(_t1763)1765,*RETURN(_t1770)1772]
      unreachable
    ASSIGN1767:  preds = [COND1773]
      int _t1766#1 = 8;
      int _t1768#1 = IMul(cell1758,_t1766);
      int _t176A#1 = 2;
      int _t176C#1 = IMul(faceIdx1757,_t176A);
      int _t176E#1 = IAdd(_t1768,_t176C);
      int[2] _t1770#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1759,_t176E);
      return _t1770
      goto JOIN175E
}
## input initialization
  ENTRY1755:  preds = []
    real rad174C#2 = 0.1e-1;
    globals.rad1748 = rad174C;
    globals.eps1749 = rad174C;
    real v01752#1 = 0.625e-1;
    globals.v0174A = v01752;
    return
## global-variable initialization
  ENTRY17D0:  preds = []
    femData:Mesh meshData17BA#2 = globals.meshData1745;
    int _t17BC#1 = 0;
    int _t17BE#1 = 1;
    int _t17C0#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData17BA);
    int _t17C2#1 = ISub(_t17C0,_t17BE);
    int[] _t17C4#1 = Range(_t17BC,_t17C2);
    femData:MeshCell[] _t17C6#1 = <femData:MeshCell[]>{};
  FOREACH17CA:  preds = [ASSIGN17C7,NEXT17CF]
    foreach (_t17C8 in _t17C4) on exit goto RETURN17D1
      femData:MeshCell[] _t17C9#1 = phi(_t17C6,_t17CD)
    femData:MeshCell _t17CB#1 = LoadFem<femData:MeshCell>(meshData17BA,_t17C8);
    femData:MeshCell[] _t17CD#1 = Append<femData:MeshCell>(_t17C9,_t17CB);
    goto FOREACH17CA
  RETURN17D1:  preds = [FOREACH17CA]
    return
## strand
  strand particle (tensor[3] pos017DC#2, real hh017DD#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY17F9:  preds = []
        tensor[3] step17EF#1 = λ()<Z_{i0}>_{3} ();
        bool found17F1#1 = false;
        int nfs17F3#2 = 0;
        int test17F5#1 = 1;
        self.pos = pos017DC;
        self._pos = pos017DC;
        self.hh = hh017DD;
        self.step = step17EF;
        self.found = found17F1;
        self.nfs = nfs17F3;
        self.test = test17F5;
        self.testp = nfs17F3;
        return
    end state init
    method update
        ENTRY1A0F:  preds = []
          real rad1805#10 = globals.rad1748;
          real eps1804#1 = globals.eps1749;
          real v01803#3 = globals.v0174A;
          tensor[3] pos1809#3 = self.pos;
          tensor[3] _pos180A#0 = self._pos;
          real hh180B#5 = self.hh;
          tensor[3] step180C#0 = self.step;
          bool found180D#3 = self.found;
          int nfs180E#3 = self.nfs;
          int test180F#0 = self.test;
          int testp1810#2 = self.testp;
          real _t181B#12 = 0.5e0;
          tensor[3] _t1821#3 = <tensor[3]>[_t181B,_t181B,_t181B];
          tensor[3] mid1823#10 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1809,_t1821);
          real _t1826#1 = TensorIndex<tensor[3],[0]>(mid1823);
          real _t1828#1 = λ(T0[])<Abs(T0)> (_t1826);
          bool _t182C#1 = LTE<real>(_t1828,_t181B);
          if _t182C then goto ASSIGN1831 else goto ASSIGN1849
        ASSIGN1831:  preds = [COND184A]
          real _t1830#1 = TensorIndex<tensor[3],[1]>(mid1823);
          real _t1832#1 = λ(T0[])<Abs(T0)> (_t1830);
          bool _t1836#1 = LTE<real>(_t1832,_t181B);
          if _t1836 then goto ASSIGN183A else goto ASSIGN1843
        ASSIGN183A:  preds = [COND1844]
          real _t1839#1 = TensorIndex<tensor[3],[2]>(mid1823);
          real _t183B#1 = λ(T0[])<Abs(T0)> (_t1839);
          bool _t183F#1 = LTE<real>(_t183B,_t181B);
          goto JOIN1838
        JOIN1838:  preds = [ASSIGN1A70,ASSIGN1843]
          bool _t1840#1 = phi(_t183F,_t1842)
          goto JOIN182E
        JOIN182E:  preds = [JOIN1838,ASSIGN1849]
          bool _t1846#1 = phi(_t1840,_t1848)
          bool _t184D#1 = BNot(_t1846);
          if _t184D then goto ASSIGN1852 else goto ASSIGN185F
        ASSIGN1852:  preds = [COND186A]
          bool _t1850#1 = true;
          goto JOIN184F
        JOIN184F:  preds = [ASSIGN1852,ASSIGN1A73]
          bool _t1851#1 = phi(_t1850,_t1868)
          if _t1851 then goto DIE186C else goto JOIN186B
        DIE186C:  preds = [COND186D]
          die
          goto JOIN186B
        JOIN186B:  preds = [*DIE186C,COND186D]
          bool _t186E#1 = BNot(found180D);
          if _t186E then goto ASSIGN1A98 else goto ASSIGN1A74
        ASSIGN1A98:  preds = [COND1A0E]
          real f187C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1823,mid1823);
          real _t187E#1 = 0.2e1;
          tensor[3] gf1880#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t187E,mid1823);
          real _t1882#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (gf1880,gf1880);
          tensor[3] _t1884#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (gf1880,_t1882);
          real _t1886#1 = λ(T0[],T1[])<(T0) - (T1)> (v01803,f187C);
          tensor[3] _t1888#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1886,_t1884);
          tensor[3] pos188F#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1809,_t1888);
          real _t1895#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t1888);
          real _t1897#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1895,rad1805);
          bool _t1899#1 = GT<real>(_t1897,eps1804);
          if _t1899 then goto ASSIGN189D else goto ASSIGN18AA
        ASSIGN189D:  preds = [COND18AE]
          int _t189C#1 = 1;
          int nfs189E#2 = IAdd(nfs180E,_t189C);
          int _t18A1#1 = 10;
          bool _t18A3#1 = GT<int>(nfs189E,_t18A1);
          if _t18A3 then goto DIE18A6 else goto JOIN18A5
        DIE18A6:  preds = [COND18A7]
          die
          goto JOIN18A5
        JOIN18A5:  preds = [*DIE18A6,COND18A7]
          goto JOIN189B
        JOIN189B:  preds = [JOIN18A5,ASSIGN18AD]
          int testp18AC#1 = phi(testp1810,testp18AB)
          int nfs189F#1 = phi(nfs189E,nfs180E)
          bool found18A9#1 = phi(found180D,found18A8)
          goto JOIN1870
        JOIN1870:  preds = [JOIN189B,JOIN1A01]
          int testp18B1#1 = phi(testp18AC,testp1810)
          int nfs18B0#1 = phi(nfs189F,nfs180E)
          bool found18AF#1 = phi(found18A9,found180D)
          tensor[3] step188D#1 = phi(_t1888,up19AC)
          real hh1973#1 = phi(hh180B,hh19F9)
          tensor[3] pos1890#2 = phi(pos188F,pos19E4)
          self.pos = pos1890;
          self._pos = pos1890;
          self.hh = hh1973;
          self.step = step188D;
          self.found = found18AF;
          self.nfs = nfs18B0;
          self.testp = testp18B1;
          active
        ASSIGN18AA:  preds = [COND18AE]
          bool found18A8#1 = true;
          int testp18AB#1 = 1;
          goto JOIN189B
        ASSIGN1A74:  preds = [COND1A0E]
          real f18BD#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1823,mid1823);
          real _t18BF#3 = 0.2e1;
          tensor[3] gf18C1#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t18BF,mid1823);
          real _t18C3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (gf18C1,gf18C1);
          tensor[3] _t18C5#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (gf18C1,_t18C3);
          real _t18C7#1 = λ(T0[],T1[])<(T0) - (T1)> (v01803,f18BD);
          tensor[3] _t18C9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t18C7,_t18C5);
          tensor[3] pos18CD#13 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1809,_t18C9);
          tensor[3] step18D1#4 = λ()<Z_{i0}>_{3} ();
          real oldE18D3#4 = 0.e0;
          int nn18D7#2 = 0;
          particle[] _t18D9#1 = SphereQuery<3,particle>(pos18CD,rad1805);
        FOREACH18DF:  preds = [ASSIGN1A77,NEXT1926]
          foreach (P18DB in _t18D9) on exit goto ASSIGN1A78
            int nn18DE#3 = phi(nn18D7,nn1924)
            tensor[3] force18DD#2 = phi(step18D1,force1920)
            real oldE18DC#2 = phi(oldE18D3,oldE18F6)
          tensor[3] _t18E0#1 = P18DB.pos;
          tensor[3] _t18E2#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t18E0,pos18CD);
          real _t18E5#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t18E2);
          real _t18E7#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18E5,rad1805);
          real _t18EA#2 = 0.1e1;
          real _t18EC#2 = λ(T0[],T1[])<(T0) - (T1)> (_t18EA,_t18E7);
          int _t18EE#0 = 4;
          real _t18F0#1 = λ(T0[])<(T0)^4> (_t18EC);
          real oldE18F6#1 = λ(T0[],T1[])<(T0 + T1)> (oldE18DC,_t18F0);
          int _t1902#1 = -4;
          real _t1904#1 = IntToReal(_t1902);
          int _t190A#0 = 3;
          real _t190C#1 = λ(T0[])<(T0)^3> (_t18EC);
          real _t190E#1 = λ(T0[],T1[])<(T0 * T1)> (_t1904,_t190C);
          real _t1914#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t18EA,rad1805);
          real _t1916#1 = λ(T0[],T1[])<(T0 * T1)> (_t190E,_t1914);
          tensor[3] _t1918#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1916,_t18E2);
          tensor[3] _t191C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (_t1918,_t18E5);
          tensor[3] force1920#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (force18DD,_t191C);
          int _t1922#1 = 1;
          int nn1924#1 = IAdd(nn18DE,_t1922);
          goto FOREACH18DF
        ASSIGN1A78:  preds = [FOREACH18DF]
          bool _t1929#1 = EQ<int>(nn18D7,nn18DE);
          if _t1929 then goto ASSIGN1A79 else goto JOIN192B
        ASSIGN1A79:  preds = [COND1941]
          real _t192E#1 = λ(T0[],T1[])<(T0 * T1)> (_t181B,rad1805);
          tensor[3] _t1934#1 = <tensor[3]>[_t192E,oldE18D3,oldE18D3];
          tensor[3] _t1936#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos18CD,_t1934);
          new particle(_t1936,hh180B);
          self.pos = pos18CD;
          self._pos = pos18CD;
          self.step = step18D1;
          active
          goto JOIN192B
        JOIN192B:  preds = [*ACTIVE1939,COND1941]
          tensor[3] xp194B#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos18CD,_t1821);
          tensor[3] gf194F#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t18BF,xp194B);
          tensor[3] n1951#2 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (gf194F,gf194F);
          tensor[3,3] _t1953#1 = λ()<δ_{i0,i1}>_{3 3} ();
          tensor[3,3] _t1955#1 = λ(T0[3],T1[3])<(T0_{i0} * T1_{i1})>_{3 3} (n1951,n1951);
          tensor[3,3] _t1957#1 = λ(T0[3 3],T1[3 3])<(T0_{i0,i1}) - (T1_{i0,i1})>_{3 3} (_t1953,_t1955);
          tensor[3] force195B#2 = λ(T0[3 3],T1[3])<Σ(i1=0..2)<((T0_{i0,i1} * T1_{i1}))>(i1=0..2)>_{3} (_t1957,force18DD);
          tensor[3] es195D#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (hh180B,force195B);
          real _t195F#2 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (es195D);
          bool _t1961#1 = GT<real>(_t195F,rad1805);
          if _t1961 then goto ASSIGN1A7F else goto JOIN1963
        ASSIGN1A7F:  preds = [COND1972]
          real _t1966#2 = λ(T0[],T1[])<(T0) / ( T1)> (rad1805,_t195F);
          real hh1968#1 = λ(T0[],T1[])<(T0 * T1)> (hh180B,_t1966);
          tensor[3] es196F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1966,es195D);
          goto JOIN1963
        JOIN1963:  preds = [ASSIGN1A80,COND1972]
          tensor[3] es1970#5 = phi(es196F,es195D)
          real hh1969#2 = phi(hh1968,hh180B)
          tensor[3] samplePos1974#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos18CD,es1970);
          tensor[3] xp197F#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (samplePos1974,_t1821);
          real f1981#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (xp197F,xp197F);
          tensor[3] gf1985#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t18BF,xp197F);
          real _t1987#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (gf1985,gf1985);
          tensor[3] _t1989#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (gf1985,_t1987);
          real _t198B#1 = λ(T0[],T1[])<(T0) - (T1)> (v01803,f1981);
          tensor[3] _t198D#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t198B,_t1989);
          real _t1991#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t198D);
          real _t1993#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (es1970);
          real _t1995#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1991,_t1993);
          bool _t1999#1 = GT<real>(_t1995,_t181B);
          if _t1999 then goto ASSIGN1A85 else goto JOIN199B
        ASSIGN1A85:  preds = [COND19A9]
          real hh199E#1 = λ(T0[],T1[])<(T0 * T1)> (hh1969,_t181B);
          self.pos = pos18CD;
          self._pos = pos18CD;
          self.hh = hh199E;
          self.step = step18D1;
          active
          goto JOIN199B
        JOIN199B:  preds = [*ACTIVE19A1,COND19A9]
          real hh199F#2 = phi(hh1969)
          tensor[3] up19AC#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (_t198D,es1970);
          tensor[3] pos19AE#4 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos18CD,up19AC);
          particle[] _t19B2#1 = SphereQuery<3,particle>(pos19AE,rad1805);
        FOREACH19B8:  preds = [ASSIGN1A88,NEXT19D1]
          foreach (P19B6 in _t19B2) on exit goto ASSIGN1A89
            real accum19B7#2 = phi(oldE18D3,accum19CF)
          tensor[3] _t19B9#1 = P19B6.pos;
          tensor[3] _t19BB#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos19AE,_t19B9);
          real _t19BE#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t19BB);
          real _t19C0#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t19BE,rad1805);
          real _t19C3#1 = 0.1e1;
          real _t19C5#1 = λ(T0[],T1[])<(T0) - (T1)> (_t19C3,_t19C0);
          int _t19C7#0 = 4;
          real _t19C9#1 = λ(T0[])<(T0)^4> (_t19C5);
          real accum19CF#1 = λ(T0[],T1[])<(T0 + T1)> (accum19B7,_t19C9);
          goto FOREACH19B8
        ASSIGN1A89:  preds = [FOREACH19B8]
          real _t19D4#1 = λ(T0[],T1[])<(T0) - (T1)> (accum19B7,oldE18DC);
          tensor[3] _t19D8#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos19AE,pos18CD);
          tensor[3] _t19DA#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t181B,_t19D8);
          tensor[3] _t19DC#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (force195B);
          real _t19DE#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (_t19DA,_t19DC);
          bool _t19E0#1 = GT<real>(_t19D4,_t19DE);
          if _t19E0 then goto ASSIGN1A8C else goto JOIN19E2
        ASSIGN1A8C:  preds = [COND19F6]
          real hh19EB#1 = λ(T0[],T1[])<(T0 * T1)> (hh199F,_t181B);
          self.pos = pos18CD;
          self._pos = pos18CD;
          self.hh = hh19EB;
          self.step = step18D1;
          active
          goto JOIN19E2
        JOIN19E2:  preds = [*ACTIVE19EE,COND19F6]
          real hh19EC#1 = phi(hh199F)
          tensor[3] pos19E4#2 = phi(pos19AE)
          real _t19F7#1 = 0.11e1;
          real hh19F9#2 = λ(T0[],T1[])<(T0 * T1)> (hh19EC,_t19F7);
          int _t19FD#1 = 5;
          bool _t19FF#1 = LT<int>(nn18DE,_t19FD);
          if _t19FF then goto ASSIGN1A8F else goto JOIN1A01
        ASSIGN1A8F:  preds = [COND1A0D]
          real _t1A04#1 = λ(T0[],T1[])<(T0 * T1)> (_t181B,rad1805);
          tensor[3] _t1A06#1 = λ(T0[3],T1[3])<(T0_{i0} * (1) / ( Sqrt(Σ(i1=0..2)<((T1_{i1} * T1_{i1}))>(i1=0..2))))>_{3} (es1970,es1970);
          tensor[3] _t1A08#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1A04,_t1A06);
          tensor[3] _t1A0A#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos19E4,_t1A08);
          new particle(_t1A0A,hh19F9);
          goto JOIN1A01
        JOIN1A01:  preds = [NEW1A0C,COND1A0D]
          goto JOIN1870
        ASSIGN185F:  preds = [COND186A]
          real _t185E#1 = 0.2e1;
          tensor[3] gf1860#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t185E,mid1823);
          real _t1862#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (gf1860);
          real _t1866#1 = 0.e0;
          bool _t1868#1 = EQ<real>(_t1862,_t1866);
          goto JOIN184F
        ASSIGN1843:  preds = [COND1844]
          bool _t1842#1 = false;
          goto JOIN1838
        ASSIGN1849:  preds = [COND184A]
          bool _t1848#1 = false;
          goto JOIN182E
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY17DA:  preds = []
      tensor[3][] ipos17D2#1 = globals.ipos174B;
    FOREACH17D5:  preds = [ASSIGN17D3,NEXT17D9]
      foreach (x17D4 in ipos17D2) on exit goto RETURN17DB
      real _t17D6#1 = 0.1e1;
      new particle(x17D4,_t17D6);
      goto FOREACH17D5
    RETURN17DB:  preds = [FOREACH17D5]
      return
## global update
  ENTRY1A63:  preds = []
    real rad1A19#1 = globals.rad1748;
    real eps1A18#1 = globals.eps1749;
    particle[] P1A1C#6 = Strands<particle,all>;
    (int res1A1D#1) = sum<int>(MAP sum177D (P1A1C));
    (int res1A23#1) = sum<int>(MAP sum1784 (P1A1C));
    (bool res1A29#2) = all(MAP all178B (P1A1C));
    (real res1A2F#1) = max<real>(MAP max1794 (P1A1C));
    (real res1A35#1) = max<real>(MAP max17A7 (P1A1C));
    (real res1A3B#1) = min<real>(MAP min17B9 (P1A1C));
    tensor[2] averageDist1A40#1 = <tensor[2]>[res1A3B,res1A35];
    string _t1A42#1 = "One run:";
    string _t1A44#4 = " and ";
    real _t1A46#2 = λ(T0[],T1[])<(T0) / ( T1)> (res1A2F,rad1A19);
    bool _t1A4C#2 = LT<real>(_t1A46,eps1A18);
    string _t1A50#1 = " of ";
    string _t1A54#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t1A42,res1A29,_t1A44,_t1A46,_t1A44,_t1A4C,_t1A44,res1A23,_t1A50,res1A1D,_t1A44,averageDist1A40,_t1A54);
    if res1A29 then goto COND1A61 else goto JOIN1A57
  COND1A61:  preds = [COND1A62]
    if _t1A4C then goto ASSIGN1A5E else goto JOIN1A5C
  ASSIGN1A5E:  preds = [COND1A61]
    string _t1A5D#1 = "CONVERGED!\n";
    Print<[string]>(_t1A5D);
    StabilizeAll;
    goto JOIN1A5C
  JOIN1A5C:  preds = [MASSIGN1A60,COND1A61]
    goto JOIN1A57
  JOIN1A57:  preds = [JOIN1A5C,COND1A62]
    continue
#### end program ####
##### high-ir: after normalization rewriting ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1745 (meshData) = <no-default>
  input 0space0473_intermedateGlobal1746 (space) = <no-default>
  input 0data0475_intermedateGlobal1747 (data) = <no-default>
  input rad1748 (rad) = <default>
  input eps1749 (eps) = <default>
  input v0174A (v0) = <default>
  input ipos174B (ipos) = <no-default>
## functions
  function real min17B9 (particle P17A8#1) {
    ENTRY17B8:  preds = []
      tensor[3] _t17A9#1 = P17A8.pos;
      real _t17AB#3 = 0.5e0;
      tensor[3] _t17B1#1 = <tensor[3]>[_t17AB,_t17AB,_t17AB];
      real _t17B5#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (_t17A9,_t17B1);
      return _t17B5
}
  function real max17A7 (particle P1795#1) {
    ENTRY17A6:  preds = []
      tensor[3] _t1796#1 = P1795.pos;
      real _t1799#3 = 0.5e0;
      tensor[3] _t179F#1 = <tensor[3]>[_t1799,_t1799,_t1799];
      real _t17A3#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (_t1796,_t179F);
      return _t17A3
}
  function real max1794 (particle P178C#1) {
    ENTRY1793:  preds = []
      tensor[3] _t178D#1 = P178C.step;
      real _t1790#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t178D);
      return _t1790
}
  function bool all178B (particle P1785#1) {
    ENTRY178A:  preds = []
      bool _t1786#1 = P1785.found;
      return _t1786
}
  function int sum1784 (particle P177E#1) {
    ENTRY1783:  preds = []
      int _t177F#1 = P177E.testp;
      return _t177F
}
  function int sum177D (particle P1777#1) {
    ENTRY177C:  preds = []
      int _t1778#1 = P1777.test;
      return _t1778
}
  function int[2] nextCell41776 (int faceIdx1757#2, int cell1758#1, femData:Mesh mesh1759#1) {
    ENTRY1775:  preds = []
      int _t175A#3 = -1;
      bool _t175C#1 = EQ<int>(faceIdx1757,_t175A);
      if _t175C then goto ASSIGN1A68 else goto ASSIGN1767
    ASSIGN1A68:  preds = [COND1773]
      int[2] _t1763#1 = <int[2]>{_t175A,_t175A};
      return _t1763
      goto JOIN175E
    JOIN175E:  preds = [*RETURN(_t1763)1765,*RETURN(_t1770)1772]
      unreachable
    ASSIGN1767:  preds = [COND1773]
      int _t1766#1 = 8;
      int _t1768#1 = IMul(cell1758,_t1766);
      int _t176A#1 = 2;
      int _t176C#1 = IMul(faceIdx1757,_t176A);
      int _t176E#1 = IAdd(_t1768,_t176C);
      int[2] _t1770#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1759,_t176E);
      return _t1770
      goto JOIN175E
}
## input initialization
  ENTRY1755:  preds = []
    real rad174C#2 = 0.1e-1;
    globals.rad1748 = rad174C;
    globals.eps1749 = rad174C;
    real v01752#1 = 0.625e-1;
    globals.v0174A = v01752;
    return
## global-variable initialization
  ENTRY17D0:  preds = []
    femData:Mesh meshData17BA#2 = globals.meshData1745;
    int _t17BC#1 = 0;
    int _t17BE#1 = 1;
    int _t17C0#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData17BA);
    int _t17C2#1 = ISub(_t17C0,_t17BE);
    int[] _t17C4#1 = Range(_t17BC,_t17C2);
    femData:MeshCell[] _t17C6#1 = <femData:MeshCell[]>{};
  FOREACH17CA:  preds = [ASSIGN17C7,NEXT17CF]
    foreach (_t17C8 in _t17C4) on exit goto RETURN17D1
      femData:MeshCell[] _t17C9#1 = phi(_t17C6,_t17CD)
    femData:MeshCell _t17CB#1 = LoadFem<femData:MeshCell>(meshData17BA,_t17C8);
    femData:MeshCell[] _t17CD#1 = Append<femData:MeshCell>(_t17C9,_t17CB);
    goto FOREACH17CA
  RETURN17D1:  preds = [FOREACH17CA]
    return
## strand
  strand particle (tensor[3] pos017DC#2, real hh017DD#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY17F9:  preds = []
        tensor[3] step17EF#1 = λ()<Z_{i0}>_{3} ();
        bool found17F1#1 = false;
        int nfs17F3#2 = 0;
        int test17F5#1 = 1;
        self.pos = pos017DC;
        self._pos = pos017DC;
        self.hh = hh017DD;
        self.step = step17EF;
        self.found = found17F1;
        self.nfs = nfs17F3;
        self.test = test17F5;
        self.testp = nfs17F3;
        return
    end state init
    method update
        ENTRY1A0F:  preds = []
          real rad1805#12 = globals.rad1748;
          real eps1804#1 = globals.eps1749;
          real v01803#67 = globals.v0174A;
          tensor[3] pos1809#372 = self.pos;
          real hh180B#9 = self.hh;
          bool found180D#3 = self.found;
          int nfs180E#3 = self.nfs;
          int testp1810#2 = self.testp;
          real _t181B#12 = 0.5e0;
          tensor[3] _t1821#361 = <tensor[3]>[_t181B,_t181B,_t181B];
          tensor[3] mid1823#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1809,_t1821);
          real _t1826#1 = TensorIndex<tensor[3],[0]>(mid1823);
          real _t1828#1 = λ(T0[])<Abs(T0)> (_t1826);
          bool _t182C#1 = LTE<real>(_t1828,_t181B);
          if _t182C then goto ASSIGN1831 else goto ASSIGN1849
        ASSIGN1831:  preds = [COND184A]
          real _t1830#1 = TensorIndex<tensor[3],[1]>(mid1823);
          real _t1832#1 = λ(T0[])<Abs(T0)> (_t1830);
          bool _t1836#1 = LTE<real>(_t1832,_t181B);
          if _t1836 then goto ASSIGN183A else goto ASSIGN1843
        ASSIGN183A:  preds = [COND1844]
          real _t1839#1 = TensorIndex<tensor[3],[2]>(mid1823);
          real _t183B#1 = λ(T0[])<Abs(T0)> (_t1839);
          bool _t183F#1 = LTE<real>(_t183B,_t181B);
          goto JOIN1838
        JOIN1838:  preds = [ASSIGN1A70,ASSIGN1843]
          bool _t1840#1 = phi(_t183F,_t1842)
          goto JOIN182E
        JOIN182E:  preds = [JOIN1838,ASSIGN1849]
          bool _t1846#1 = phi(_t1840,_t1848)
          bool _t184D#1 = BNot(_t1846);
          if _t184D then goto ASSIGN1852 else goto ASSIGN185F
        ASSIGN1852:  preds = [COND186A]
          bool _t1850#1 = true;
          goto JOIN184F
        JOIN184F:  preds = [ASSIGN1852,ASSIGN1A73]
          bool _t1851#1 = phi(_t1850,_t1868)
          if _t1851 then goto DIE186C else goto JOIN186B
        DIE186C:  preds = [COND186D]
          die
          goto JOIN186B
        JOIN186B:  preds = [*DIE186C,COND186D]
          bool _t186E#1 = BNot(found180D);
          if _t186E then goto ASSIGN187F else goto ASSIGN18C0
        ASSIGN187F:  preds = [COND1A0E]
          real _t187E#9 = 0.2e1;
          tensor[3] _t1888#1 = λ(T0[],T1[3],T2[3],T3[3],T4[3],T5[],T6[3],T7[3],T8[],T9[3],T10[3],T11[],T12[3],T13[3])<((T0) - (Σ(i1=0..2)<(((T1_{i1}) - (T2_{i1}) * (T1_{i1}) - (T2_{i1})))>(i1=0..2)) * ((T5 * (T1_{i0}) - (T2_{i0}))) / ( (T5 * T5 * Σ(i2=0..2)<(((T1_{i2}) - (T2_{i2}) * (T1_{i2}) - (T2_{i2})))>(i2=0..2))))>_{3} (v01803,pos1809,_t1821,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821);
          tensor[3] pos188F#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3])<(T0_{i0} + ((T1) - (Σ(i2=0..2)<(((T0_{i2}) - (T3_{i2}) * (T0_{i2}) - (T3_{i2})))>(i2=0..2)) * ((T6 * (T0_{i0}) - (T3_{i0}))) / ( (T6 * T6 * Σ(i3=0..2)<(((T0_{i3}) - (T3_{i3}) * (T0_{i3}) - (T3_{i3})))>(i3=0..2)))))>_{3} (pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821);
          real _t1897#1 = λ(T0[],T1[3],T2[3],T3[3],T4[3],T5[],T6[3],T7[3],T8[],T9[3],T10[3],T11[],T12[3],T13[3],T14[])<(Sqrt(Σ(i0=0..2)<(((T0) - (Σ(i1=0..2)<(((T1_{i1}) - (T2_{i1}) * (T1_{i1}) - (T2_{i1})))>(i1=0..2)) * ((T5 * (T1_{i0}) - (T2_{i0}))) / ( (T5 * T5 * Σ(i2=0..2)<(((T1_{i2}) - (T2_{i2}) * (T1_{i2}) - (T2_{i2})))>(i2=0..2))) * (T0) - (Σ(i1=0..2)<(((T1_{i1}) - (T2_{i1}) * (T1_{i1}) - (T2_{i1})))>(i1=0..2)) * ((T5 * (T1_{i0}) - (T2_{i0}))) / ( (T5 * T5 * Σ(i2=0..2)<(((T1_{i2}) - (T2_{i2}) * (T1_{i2}) - (T2_{i2})))>(i2=0..2)))))>(i0=0..2))) / ( T14)> (v01803,pos1809,_t1821,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821,rad1805);
          bool _t1899#1 = GT<real>(_t1897,eps1804);
          if _t1899 then goto ASSIGN189D else goto ASSIGN18AA
        ASSIGN189D:  preds = [COND18AE]
          int _t189C#1 = 1;
          int nfs189E#2 = IAdd(nfs180E,_t189C);
          int _t18A1#1 = 10;
          bool _t18A3#1 = GT<int>(nfs189E,_t18A1);
          if _t18A3 then goto DIE18A6 else goto JOIN18A5
        DIE18A6:  preds = [COND18A7]
          die
          goto JOIN18A5
        JOIN18A5:  preds = [*DIE18A6,COND18A7]
          goto JOIN189B
        JOIN189B:  preds = [JOIN18A5,ASSIGN18AD]
          int testp18AC#1 = phi(testp1810,testp18AB)
          int nfs189F#1 = phi(nfs189E,nfs180E)
          bool found18A9#1 = phi(found180D,found18A8)
          goto JOIN1870
        JOIN1870:  preds = [JOIN189B,JOIN1A01]
          int testp18B1#1 = phi(testp18AC,testp1810)
          int nfs18B0#1 = phi(nfs189F,nfs180E)
          bool found18AF#1 = phi(found18A9,found180D)
          tensor[3] step188D#1 = phi(_t1888,up19AC)
          real hh1973#1 = phi(hh180B,hh19F9)
          tensor[3] pos1890#2 = phi(pos188F,pos19E4)
          self.pos = pos1890;
          self._pos = pos1890;
          self.hh = hh1973;
          self.step = step188D;
          self.found = found18AF;
          self.nfs = nfs18B0;
          self.testp = testp18B1;
          active
        ASSIGN18AA:  preds = [COND18AE]
          bool found18A8#1 = true;
          int testp18AB#1 = 1;
          goto JOIN189B
        ASSIGN18C0:  preds = [COND1A0E]
          real _t18BF#216 = 0.2e1;
          tensor[3] pos18CD#7 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3])<(T0_{i0} + ((T1) - (Σ(i2=0..2)<(((T0_{i2}) - (T3_{i2}) * (T0_{i2}) - (T3_{i2})))>(i2=0..2)) * ((T6 * (T0_{i0}) - (T3_{i0}))) / ( (T6 * T6 * Σ(i3=0..2)<(((T0_{i3}) - (T3_{i3}) * (T0_{i3}) - (T3_{i3})))>(i3=0..2)))))>_{3} (pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821);
          tensor[3] step18D1#4 = λ()<Z_{i0}>_{3} ();
          real oldE18D3#4 = 0.e0;
          int nn18D7#2 = 0;
          particle[] _t18D9#1 = SphereQuery<3,particle>(pos18CD,rad1805);
        FOREACH18DF:  preds = [ASSIGN1A77,NEXT1926]
          foreach (P18DB in _t18D9) on exit goto ASSIGN1A78
            int nn18DE#3 = phi(nn18D7,nn1924)
            tensor[3] force18DD#7 = phi(step18D1,force1920)
            real oldE18DC#2 = phi(oldE18D3,oldE18F6)
          tensor[3] _t18E0#4 = P18DB.pos;
          real _t18EA#3 = 0.1e1;
          real oldE18F6#1 = λ(T0[],T1[],T2[3],T3[3],T4[],T5[3],T6[3],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3],T15[],T16[3],T17[3],T18[])<(T0 + ((T1) - ((Sqrt(Σ(i0=0..2)<(((T2_{i0}) - ((T3_{i0} + ((T4) - (Σ(i3=0..2)<(((T3_{i3}) - (T6_{i3}) * (T3_{i3}) - (T6_{i3})))>(i3=0..2)) * ((T9 * (T3_{i0}) - (T6_{i0}))) / ( (T9 * T9 * Σ(i4=0..2)<(((T3_{i4}) - (T6_{i4}) * (T3_{i4}) - (T6_{i4})))>(i4=0..2)))))) * (T2_{i0}) - ((T3_{i0} + ((T4) - (Σ(i3=0..2)<(((T3_{i3}) - (T6_{i3}) * (T3_{i3}) - (T6_{i3})))>(i3=0..2)) * ((T9 * (T3_{i0}) - (T6_{i0}))) / ( (T9 * T9 * Σ(i4=0..2)<(((T3_{i4}) - (T6_{i4}) * (T3_{i4}) - (T6_{i4})))>(i4=0..2))))))))>(i0=0..2))) / ( T18)))^4)> (oldE18DC,_t18EA,_t18E0,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,rad1805);
          int _t1902#1 = -4;
          real _t1904#1 = IntToReal(_t1902);
          tensor[3] force1920#1 = λ(T0[3],T1[],T2[],T3[3],T4[3],T5[],T6[3],T7[3],T8[3],T9[3],T10[],T11[3],T12[3],T13[],T14[3],T15[3],T16[],T17[3],T18[3],T19[],T20[],T21[],T22[3],T23[3],T24[],T25[3],T26[3],T27[3],T28[3],T29[],T30[3],T31[3],T32[],T33[3],T34[3],T35[],T36[3],T37[3],T38[3],T39[3],T40[],T41[3],T42[3],T43[3],T44[3],T45[],T46[3],T47[3],T48[],T49[3],T50[3],T51[],T52[3],T53[3])<(T0_{i0} + ((T1 * ((T2) - ((Sqrt(Σ(i3=0..2)<(((T3_{i3}) - ((T4_{i3} + ((T5) - (Σ(i6=0..2)<(((T4_{i6}) - (T7_{i6}) * (T4_{i6}) - (T7_{i6})))>(i6=0..2)) * ((T10 * (T4_{i3}) - (T7_{i3}))) / ( (T10 * T10 * Σ(i7=0..2)<(((T4_{i7}) - (T7_{i7}) * (T4_{i7}) - (T7_{i7})))>(i7=0..2)))))) * (T3_{i3}) - ((T4_{i3} + ((T5) - (Σ(i6=0..2)<(((T4_{i6}) - (T7_{i6}) * (T4_{i6}) - (T7_{i6})))>(i6=0..2)) * ((T10 * (T4_{i3}) - (T7_{i3}))) / ( (T10 * T10 * Σ(i7=0..2)<(((T4_{i7}) - (T7_{i7}) * (T4_{i7}) - (T7_{i7})))>(i7=0..2))))))))>(i3=0..2))) / ( T19)))^3 * (T2) / ( T19) * (T3_{i0}) - ((T4_{i0} + ((T5) - (Σ(i10=0..2)<(((T4_{i10}) - (T7_{i10}) * (T4_{i10}) - (T7_{i10})))>(i10=0..2)) * ((T10 * (T4_{i0}) - (T7_{i0}))) / ( (T10 * T10 * Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)))))))) / ( Sqrt(Σ(i11=0..2)<(((T3_{i11}) - ((T4_{i11} + ((T5) - (Σ(i14=0..2)<(((T4_{i14}) - (T7_{i14}) * (T4_{i14}) - (T7_{i14})))>(i14=0..2)) * ((T10 * (T4_{i11}) - (T7_{i11}))) / ( (T10 * T10 * Σ(i15=0..2)<(((T4_{i15}) - (T7_{i15}) * (T4_{i15}) - (T7_{i15})))>(i15=0..2)))))) * (T3_{i11}) - ((T4_{i11} + ((T5) - (Σ(i14=0..2)<(((T4_{i14}) - (T7_{i14}) * (T4_{i14}) - (T7_{i14})))>(i14=0..2)) * ((T10 * (T4_{i11}) - (T7_{i11}))) / ( (T10 * T10 * Σ(i15=0..2)<(((T4_{i15}) - (T7_{i15}) * (T4_{i15}) - (T7_{i15})))>(i15=0..2))))))))>(i11=0..2))))>_{3} (force18DD,_t1904,_t18EA,_t18E0,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,rad1805,_t18EA,rad1805,_t18E0,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18E0,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821);
          int _t1922#1 = 1;
          int nn1924#1 = IAdd(nn18DE,_t1922);
          goto FOREACH18DF
        ASSIGN1A78:  preds = [FOREACH18DF]
          bool _t1929#1 = EQ<int>(nn18D7,nn18DE);
          if _t1929 then goto ASSIGN1A79 else goto JOIN192B
        ASSIGN1A79:  preds = [COND1941]
          real _t192E#1 = λ(T0[],T1[])<(T0 * T1)> (_t181B,rad1805);
          tensor[3] _t1934#1 = <tensor[3]>[_t192E,oldE18D3,oldE18D3];
          tensor[3] _t1936#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3],T15[3])<(T0_{i0} + ((T1) - (Σ(i3=0..2)<(((T0_{i3}) - (T3_{i3}) * (T0_{i3}) - (T3_{i3})))>(i3=0..2)) * ((T6 * (T0_{i0}) - (T3_{i0}))) / ( (T6 * T6 * Σ(i4=0..2)<(((T0_{i4}) - (T3_{i4}) * (T0_{i4}) - (T3_{i4})))>(i4=0..2)))) + T15_{i0})>_{3} (pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1934);
          new particle(_t1936,hh180B);
          self.pos = pos18CD;
          self._pos = pos18CD;
          self.step = step18D1;
          active
          goto JOIN192B
        JOIN192B:  preds = [*ACTIVE1939,COND1941]
          tensor[3] es195D#1 = λ(T0[],T1[],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[],T9[3],T10[3],T11[],T12[3],T13[3],T14[],T15[3],T16[3],T17[3],T18[],T19[3],T20[],T21[3],T22[3],T23[3],T24[3],T25[],T26[3],T27[3],T28[],T29[3],T30[3],T31[],T32[3],T33[3],T34[3],T35[],T36[3],T37[],T38[3],T39[3],T40[3],T41[3],T42[],T43[3],T44[3],T45[],T46[3],T47[3],T48[],T49[3],T50[3],T51[3],T52[],T53[3],T54[],T55[3],T56[3],T57[3],T58[3],T59[],T60[3],T61[3],T62[],T63[3],T64[3],T65[],T66[3],T67[3],T68[3],T69[3])<(T0 * Σ(i2=0..2)<(((δ_{i0,i2}) - ((T1 * T1 * ((T2_{i0} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i0}) - (T5_{i0}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i0}) * (1) / ( Sqrt((T1 * T1 * Σ(i7=0..2)<((((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7}) * ((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7})))>(i7=0..2)))) * ((T2_{i2} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i2}) - (T5_{i2}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i2}) * (1) / ( Sqrt((T1 * T1 * Σ(i13=0..2)<((((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13}) * ((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13})))>(i13=0..2)))))) * T69_{i2}))>(i2=0..2))>_{3} (hh180B,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD);
          real _t195F#1 = λ(T0[],T1[],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[],T9[3],T10[3],T11[],T12[3],T13[3],T14[],T15[3],T16[3],T17[3],T18[],T19[3],T20[],T21[3],T22[3],T23[3],T24[3],T25[],T26[3],T27[3],T28[],T29[3],T30[3],T31[],T32[3],T33[3],T34[3],T35[],T36[3],T37[],T38[3],T39[3],T40[3],T41[3],T42[],T43[3],T44[3],T45[],T46[3],T47[3],T48[],T49[3],T50[3],T51[3],T52[],T53[3],T54[],T55[3],T56[3],T57[3],T58[3],T59[],T60[3],T61[3],T62[],T63[3],T64[3],T65[],T66[3],T67[3],T68[3],T69[3])<Sqrt((T0 * T0 * Σ(i0=0..2)<((Σ(i2=0..2)<(((δ_{i0,i2}) - ((T1 * T1 * ((T2_{i0} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i0}) - (T5_{i0}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i0}) * (1) / ( Sqrt((T1 * T1 * Σ(i7=0..2)<((((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7}) * ((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7})))>(i7=0..2)))) * ((T2_{i2} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i2}) - (T5_{i2}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i2}) * (1) / ( Sqrt((T1 * T1 * Σ(i13=0..2)<((((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13}) * ((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13})))>(i13=0..2)))))) * T69_{i2}))>(i2=0..2) * Σ(i2=0..2)<(((δ_{i0,i2}) - ((T1 * T1 * ((T2_{i0} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i0}) - (T5_{i0}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i0}) * (1) / ( Sqrt((T1 * T1 * Σ(i7=0..2)<((((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7}) * ((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7})))>(i7=0..2)))) * ((T2_{i2} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i2}) - (T5_{i2}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i2}) * (1) / ( Sqrt((T1 * T1 * Σ(i13=0..2)<((((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13}) * ((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13})))>(i13=0..2)))))) * T69_{i2}))>(i2=0..2)))>(i0=0..2)))> (hh180B,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD);
          bool _t1961#1 = GT<real>(_t195F,rad1805);
          if _t1961 then goto ASSIGN1ACE else goto JOIN1963
        ASSIGN1ACE:  preds = [COND1972]
          real hh1968#1 = λ(T0[],T1[],T2[],T3[],T4[3],T5[],T6[3],T7[3],T8[3],T9[3],T10[],T11[3],T12[3],T13[],T14[3],T15[3],T16[],T17[3],T18[3],T19[3],T20[],T21[3],T22[],T23[3],T24[3],T25[3],T26[3],T27[],T28[3],T29[3],T30[],T31[3],T32[3],T33[],T34[3],T35[3],T36[3],T37[],T38[3],T39[],T40[3],T41[3],T42[3],T43[3],T44[],T45[3],T46[3],T47[],T48[3],T49[3],T50[],T51[3],T52[3],T53[3],T54[],T55[3],T56[],T57[3],T58[3],T59[3],T60[3],T61[],T62[3],T63[3],T64[],T65[3],T66[3],T67[],T68[3],T69[3],T70[3],T71[3])<(T0 * (T1) / ( Sqrt((T0 * T0 * Σ(i0=0..2)<((Σ(i2=0..2)<(((δ_{i0,i2}) - ((T3 * T3 * ((T4_{i0} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i0}) - (T7_{i0}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i0}) * (1) / ( Sqrt((T3 * T3 * Σ(i7=0..2)<((((T4_{i7} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i7}) - (T7_{i7}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i7}) * ((T4_{i7} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i7}) - (T7_{i7}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i7})))>(i7=0..2)))) * ((T4_{i2} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i2}) - (T7_{i2}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i2}) * (1) / ( Sqrt((T3 * T3 * Σ(i13=0..2)<((((T4_{i13} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i13}) - (T7_{i13}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i13}) * ((T4_{i13} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i13}) - (T7_{i13}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i13})))>(i13=0..2)))))) * T71_{i2}))>(i2=0..2) * Σ(i2=0..2)<(((δ_{i0,i2}) - ((T3 * T3 * ((T4_{i0} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i0}) - (T7_{i0}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i0}) * (1) / ( Sqrt((T3 * T3 * Σ(i7=0..2)<((((T4_{i7} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i7}) - (T7_{i7}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i7}) * ((T4_{i7} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i7}) - (T7_{i7}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i7})))>(i7=0..2)))) * ((T4_{i2} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i2}) - (T7_{i2}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i2}) * (1) / ( Sqrt((T3 * T3 * Σ(i13=0..2)<((((T4_{i13} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i13}) - (T7_{i13}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i13}) * ((T4_{i13} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i13}) - (T7_{i13}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i13})))>(i13=0..2)))))) * T71_{i2}))>(i2=0..2)))>(i0=0..2)))))> (hh180B,rad1805,hh180B,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD);
          tensor[3] es196F#1 = λ(T0[],T1[],T2[],T3[3],T4[],T5[3],T6[3],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3],T15[],T16[3],T17[3],T18[3],T19[],T20[3],T21[],T22[3],T23[3],T24[3],T25[3],T26[],T27[3],T28[3],T29[],T30[3],T31[3],T32[],T33[3],T34[3],T35[3],T36[],T37[3],T38[],T39[3],T40[3],T41[3],T42[3],T43[],T44[3],T45[3],T46[],T47[3],T48[3],T49[],T50[3],T51[3],T52[3],T53[],T54[3],T55[],T56[3],T57[3],T58[3],T59[3],T60[],T61[3],T62[3],T63[],T64[3],T65[3],T66[],T67[3],T68[3],T69[3],T70[3],T71[],T72[],T73[3],T74[],T75[3],T76[3],T77[3],T78[3],T79[],T80[3],T81[3],T82[],T83[3],T84[3],T85[],T86[3],T87[3],T88[3],T89[],T90[3],T91[],T92[3],T93[3],T94[3],T95[3],T96[],T97[3],T98[3],T99[],T100[3],T101[3],T102[],T103[3],T104[3],T105[3],T106[],T107[3],T108[],T109[3],T110[3],T111[3],T112[3],T113[],T114[3],T115[3],T116[],T117[3],T118[3],T119[],T120[3],T121[3],T122[3],T123[],T124[3],T125[],T126[3],T127[3],T128[3],T129[3],T130[],T131[3],T132[3],T133[],T134[3],T135[3],T136[],T137[3],T138[3],T139[3],T140[3])<(T1 * (T0) / ( Sqrt((T1 * T1 * Σ(i1=0..2)<((Σ(i3=0..2)<(((δ_{i1,i3}) - ((T2 * T2 * ((T3_{i1} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i1}) - (T6_{i1}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i1}) * (1) / ( Sqrt((T2 * T2 * Σ(i8=0..2)<((((T3_{i8} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i8}) - (T6_{i8}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i8}) * ((T3_{i8} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i8}) - (T6_{i8}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i8})))>(i8=0..2)))) * ((T3_{i3} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i3}) - (T6_{i3}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i3}) * (1) / ( Sqrt((T2 * T2 * Σ(i14=0..2)<((((T3_{i14} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i14}) - (T6_{i14}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i14}) * ((T3_{i14} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i14}) - (T6_{i14}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i14})))>(i14=0..2)))))) * T70_{i3}))>(i3=0..2) * Σ(i3=0..2)<(((δ_{i1,i3}) - ((T2 * T2 * ((T3_{i1} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i1}) - (T6_{i1}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i1}) * (1) / ( Sqrt((T2 * T2 * Σ(i8=0..2)<((((T3_{i8} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i8}) - (T6_{i8}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i8}) * ((T3_{i8} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i8}) - (T6_{i8}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i8})))>(i8=0..2)))) * ((T3_{i3} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i3}) - (T6_{i3}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i3}) * (1) / ( Sqrt((T2 * T2 * Σ(i14=0..2)<((((T3_{i14} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i14}) - (T6_{i14}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i14}) * ((T3_{i14} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i14}) - (T6_{i14}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i14})))>(i14=0..2)))))) * T70_{i3}))>(i3=0..2)))>(i1=0..2)))) * Σ(i21=0..2)<(((δ_{i0,i21}) - ((T2 * T2 * ((T3_{i0} + ((T4) - (Σ(i30=0..2)<(((T3_{i30}) - (T6_{i30}) * (T3_{i30}) - (T6_{i30})))>(i30=0..2)) * ((T2 * (T3_{i0}) - (T6_{i0}))) / ( (T2 * T2 * Σ(i31=0..2)<(((T3_{i31}) - (T6_{i31}) * (T3_{i31}) - (T6_{i31})))>(i31=0..2)))))) - (T6_{i0}) * (1) / ( Sqrt((T2 * T2 * Σ(i26=0..2)<((((T3_{i26} + ((T4) - (Σ(i30=0..2)<(((T3_{i30}) - (T6_{i30}) * (T3_{i30}) - (T6_{i30})))>(i30=0..2)) * ((T2 * (T3_{i26}) - (T6_{i26}))) / ( (T2 * T2 * Σ(i31=0..2)<(((T3_{i31}) - (T6_{i31}) * (T3_{i31}) - (T6_{i31})))>(i31=0..2)))))) - (T6_{i26}) * ((T3_{i26} + ((T4) - (Σ(i30=0..2)<(((T3_{i30}) - (T6_{i30}) * (T3_{i30}) - (T6_{i30})))>(i30=0..2)) * ((T2 * (T3_{i26}) - (T6_{i26}))) / ( (T2 * T2 * Σ(i31=0..2)<(((T3_{i31}) - (T6_{i31}) * (T3_{i31}) - (T6_{i31})))>(i31=0..2)))))) - (T6_{i26})))>(i26=0..2)))) * ((T3_{i21} + ((T4) - (Σ(i36=0..2)<(((T3_{i36}) - (T6_{i36}) * (T3_{i36}) - (T6_{i36})))>(i36=0..2)) * ((T2 * (T3_{i21}) - (T6_{i21}))) / ( (T2 * T2 * Σ(i37=0..2)<(((T3_{i37}) - (T6_{i37}) * (T3_{i37}) - (T6_{i37})))>(i37=0..2)))))) - (T6_{i21}) * (1) / ( Sqrt((T2 * T2 * Σ(i32=0..2)<((((T3_{i32} + ((T4) - (Σ(i36=0..2)<(((T3_{i36}) - (T6_{i36}) * (T3_{i36}) - (T6_{i36})))>(i36=0..2)) * ((T2 * (T3_{i32}) - (T6_{i32}))) / ( (T2 * T2 * Σ(i37=0..2)<(((T3_{i37}) - (T6_{i37}) * (T3_{i37}) - (T6_{i37})))>(i37=0..2)))))) - (T6_{i32}) * ((T3_{i32} + ((T4) - (Σ(i36=0..2)<(((T3_{i36}) - (T6_{i36}) * (T3_{i36}) - (T6_{i36})))>(i36=0..2)) * ((T2 * (T3_{i32}) - (T6_{i32}))) / ( (T2 * T2 * Σ(i37=0..2)<(((T3_{i37}) - (T6_{i37}) * (T3_{i37}) - (T6_{i37})))>(i37=0..2)))))) - (T6_{i32})))>(i32=0..2)))))) * T70_{i21}))>(i21=0..2))>_{3} (rad1805,hh180B,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD,hh180B,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD);
          goto JOIN1963
        JOIN1963:  preds = [ASSIGN1ACF,COND1972]
          tensor[3] es1970#32 = phi(es196F,es195D)
          real hh1969#2 = phi(hh1968,hh180B)
          real _t1995#1 = λ(T0[],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[],T8[3],T9[3],T10[],T11[3],T12[3],T13[],T14[3],T15[3],T16[3],T17[3],T18[3],T19[],T20[3],T21[3],T22[3],T23[3],T24[],T25[3],T26[3],T27[],T28[3],T29[3],T30[],T31[3],T32[3],T33[3],T34[3],T35[],T36[3],T37[],T38[3],T39[3],T40[3],T41[3],T42[],T43[3],T44[3],T45[],T46[3],T47[3],T48[],T49[3],T50[3],T51[3],T52[3],T53[],T54[3],T55[],T56[3],T57[3],T58[3],T59[3],T60[],T61[3],T62[3],T63[],T64[3],T65[3],T66[],T67[3],T68[3],T69[3],T70[3],T71[],T72[3],T73[],T74[3],T75[3],T76[3],T77[3],T78[],T79[3],T80[3],T81[],T82[3],T83[3],T84[],T85[3],T86[3],T87[3],T88[3],T89[3])<(Sqrt(Σ(i0=0..2)<(((T0) - (Σ(i1=0..2)<((((T1_{i1} + ((T0) - (Σ(i5=0..2)<(((T1_{i5}) - (T4_{i5}) * (T1_{i5}) - (T4_{i5})))>(i5=0..2)) * ((T7 * (T1_{i1}) - (T4_{i1}))) / ( (T7 * T7 * Σ(i6=0..2)<(((T1_{i6}) - (T4_{i6}) * (T1_{i6}) - (T4_{i6})))>(i6=0..2)))) + T16_{i1})) - (T4_{i1}) * ((T1_{i1} + ((T0) - (Σ(i10=0..2)<(((T1_{i10}) - (T4_{i10}) * (T1_{i10}) - (T4_{i10})))>(i10=0..2)) * ((T7 * (T1_{i1}) - (T4_{i1}))) / ( (T7 * T7 * Σ(i11=0..2)<(((T1_{i11}) - (T4_{i11}) * (T1_{i11}) - (T4_{i11})))>(i11=0..2)))) + T16_{i1})) - (T4_{i1})))>(i1=0..2)) * ((T7 * ((T1_{i0} + ((T0) - (Σ(i17=0..2)<(((T1_{i17}) - (T4_{i17}) * (T1_{i17}) - (T4_{i17})))>(i17=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i18=0..2)<(((T1_{i18}) - (T4_{i18}) * (T1_{i18}) - (T4_{i18})))>(i18=0..2)))) + T16_{i0})) - (T4_{i0}))) / ( (T7 * T7 * Σ(i18=0..2)<((((T1_{i18} + ((T0) - (Σ(i23=0..2)<(((T1_{i23}) - (T4_{i23}) * (T1_{i23}) - (T4_{i23})))>(i23=0..2)) * ((T7 * (T1_{i18}) - (T4_{i18}))) / ( (T7 * T7 * Σ(i24=0..2)<(((T1_{i24}) - (T4_{i24}) * (T1_{i24}) - (T4_{i24})))>(i24=0..2)))) + T16_{i18})) - (T4_{i18}) * ((T1_{i18} + ((T0) - (Σ(i29=0..2)<(((T1_{i29}) - (T4_{i29}) * (T1_{i29}) - (T4_{i29})))>(i29=0..2)) * ((T7 * (T1_{i18}) - (T4_{i18}))) / ( (T7 * T7 * Σ(i30=0..2)<(((T1_{i30}) - (T4_{i30}) * (T1_{i30}) - (T4_{i30})))>(i30=0..2)))) + T16_{i18})) - (T4_{i18})))>(i18=0..2))) * (T0) - (Σ(i1=0..2)<((((T1_{i1} + ((T0) - (Σ(i5=0..2)<(((T1_{i5}) - (T4_{i5}) * (T1_{i5}) - (T4_{i5})))>(i5=0..2)) * ((T7 * (T1_{i1}) - (T4_{i1}))) / ( (T7 * T7 * Σ(i6=0..2)<(((T1_{i6}) - (T4_{i6}) * (T1_{i6}) - (T4_{i6})))>(i6=0..2)))) + T16_{i1})) - (T4_{i1}) * ((T1_{i1} + ((T0) - (Σ(i10=0..2)<(((T1_{i10}) - (T4_{i10}) * (T1_{i10}) - (T4_{i10})))>(i10=0..2)) * ((T7 * (T1_{i1}) - (T4_{i1}))) / ( (T7 * T7 * Σ(i11=0..2)<(((T1_{i11}) - (T4_{i11}) * (T1_{i11}) - (T4_{i11})))>(i11=0..2)))) + T16_{i1})) - (T4_{i1})))>(i1=0..2)) * ((T7 * ((T1_{i0} + ((T0) - (Σ(i17=0..2)<(((T1_{i17}) - (T4_{i17}) * (T1_{i17}) - (T4_{i17})))>(i17=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i18=0..2)<(((T1_{i18}) - (T4_{i18}) * (T1_{i18}) - (T4_{i18})))>(i18=0..2)))) + T16_{i0})) - (T4_{i0}))) / ( (T7 * T7 * Σ(i18=0..2)<((((T1_{i18} + ((T0) - (Σ(i23=0..2)<(((T1_{i23}) - (T4_{i23}) * (T1_{i23}) - (T4_{i23})))>(i23=0..2)) * ((T7 * (T1_{i18}) - (T4_{i18}))) / ( (T7 * T7 * Σ(i24=0..2)<(((T1_{i24}) - (T4_{i24}) * (T1_{i24}) - (T4_{i24})))>(i24=0..2)))) + T16_{i18})) - (T4_{i18}) * ((T1_{i18} + ((T0) - (Σ(i29=0..2)<(((T1_{i29}) - (T4_{i29}) * (T1_{i29}) - (T4_{i29})))>(i29=0..2)) * ((T7 * (T1_{i18}) - (T4_{i18}))) / ( (T7 * T7 * Σ(i30=0..2)<(((T1_{i30}) - (T4_{i30}) * (T1_{i30}) - (T4_{i30})))>(i30=0..2)))) + T16_{i18})) - (T4_{i18})))>(i18=0..2)))))>(i0=0..2))) / ( Sqrt(Σ(i30=0..2)<((T16_{i30} * T16_{i30}))>(i30=0..2)))> (v01803,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,es1970);
          bool _t1999#1 = GT<real>(_t1995,_t181B);
          if _t1999 then goto ASSIGN1A85 else goto JOIN199B
        ASSIGN1A85:  preds = [COND19A9]
          real hh199E#1 = λ(T0[],T1[])<(T0 * T1)> (hh1969,_t181B);
          self.pos = pos18CD;
          self._pos = pos18CD;
          self.hh = hh199E;
          self.step = step18D1;
          active
          goto JOIN199B
        JOIN199B:  preds = [*ACTIVE19A1,COND19A9]
          real hh199F#2 = phi(hh1969)
          tensor[3] up19AC#1 = λ(T0[],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[],T8[3],T9[3],T10[],T11[3],T12[3],T13[],T14[3],T15[3],T16[3],T17[3],T18[3],T19[],T20[3],T21[3],T22[3],T23[3],T24[],T25[3],T26[3],T27[],T28[3],T29[3],T30[],T31[3],T32[3],T33[3],T34[3],T35[],T36[3],T37[],T38[3],T39[3],T40[3],T41[3],T42[],T43[3],T44[3],T45[],T46[3],T47[3],T48[],T49[3],T50[3],T51[3],T52[3],T53[],T54[3],T55[],T56[3],T57[3],T58[3],T59[3],T60[],T61[3],T62[3],T63[],T64[3],T65[3],T66[],T67[3],T68[3],T69[3],T70[3],T71[],T72[3],T73[],T74[3],T75[3],T76[3],T77[3],T78[],T79[3],T80[3],T81[],T82[3],T83[3],T84[],T85[3],T86[3],T87[3],T88[3],T89[3])<(((T0) - (Σ(i2=0..2)<((((T1_{i2} + ((T0) - (Σ(i6=0..2)<(((T1_{i6}) - (T4_{i6}) * (T1_{i6}) - (T4_{i6})))>(i6=0..2)) * ((T7 * (T1_{i2}) - (T4_{i2}))) / ( (T7 * T7 * Σ(i7=0..2)<(((T1_{i7}) - (T4_{i7}) * (T1_{i7}) - (T4_{i7})))>(i7=0..2)))) + T16_{i2})) - (T4_{i2}) * ((T1_{i2} + ((T0) - (Σ(i11=0..2)<(((T1_{i11}) - (T4_{i11}) * (T1_{i11}) - (T4_{i11})))>(i11=0..2)) * ((T7 * (T1_{i2}) - (T4_{i2}))) / ( (T7 * T7 * Σ(i12=0..2)<(((T1_{i12}) - (T4_{i12}) * (T1_{i12}) - (T4_{i12})))>(i12=0..2)))) + T16_{i2})) - (T4_{i2})))>(i2=0..2)) * ((T7 * ((T1_{i0} + ((T0) - (Σ(i18=0..2)<(((T1_{i18}) - (T4_{i18}) * (T1_{i18}) - (T4_{i18})))>(i18=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i19=0..2)<(((T1_{i19}) - (T4_{i19}) * (T1_{i19}) - (T4_{i19})))>(i19=0..2)))) + T16_{i0})) - (T4_{i0}))) / ( (T7 * T7 * Σ(i19=0..2)<((((T1_{i19} + ((T0) - (Σ(i24=0..2)<(((T1_{i24}) - (T4_{i24}) * (T1_{i24}) - (T4_{i24})))>(i24=0..2)) * ((T7 * (T1_{i19}) - (T4_{i19}))) / ( (T7 * T7 * Σ(i25=0..2)<(((T1_{i25}) - (T4_{i25}) * (T1_{i25}) - (T4_{i25})))>(i25=0..2)))) + T16_{i19})) - (T4_{i19}) * ((T1_{i19} + ((T0) - (Σ(i30=0..2)<(((T1_{i30}) - (T4_{i30}) * (T1_{i30}) - (T4_{i30})))>(i30=0..2)) * ((T7 * (T1_{i19}) - (T4_{i19}))) / ( (T7 * T7 * Σ(i31=0..2)<(((T1_{i31}) - (T4_{i31}) * (T1_{i31}) - (T4_{i31})))>(i31=0..2)))) + T16_{i19})) - (T4_{i19})))>(i19=0..2)))) + T89_{i0})>_{3} (v01803,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,es1970);
          tensor[3] pos19AE#2 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3],T15[],T16[3],T17[],T18[3],T19[3],T20[3],T21[3],T22[],T23[3],T24[3],T25[],T26[3],T27[3],T28[],T29[3],T30[3],T31[3],T32[3],T33[3],T34[],T35[3],T36[3],T37[3],T38[3],T39[],T40[3],T41[3],T42[],T43[3],T44[3],T45[],T46[3],T47[3],T48[3],T49[3],T50[],T51[3],T52[],T53[3],T54[3],T55[3],T56[3],T57[],T58[3],T59[3],T60[],T61[3],T62[3],T63[],T64[3],T65[3],T66[3],T67[3],T68[],T69[3],T70[],T71[3],T72[3],T73[3],T74[3],T75[],T76[3],T77[3],T78[],T79[3],T80[3],T81[],T82[3],T83[3],T84[3],T85[3],T86[],T87[3],T88[],T89[3],T90[3],T91[3],T92[3],T93[],T94[3],T95[3],T96[],T97[3],T98[3],T99[],T100[3],T101[3],T102[3],T103[3],T104[3])<(T0_{i0} + ((T1) - (Σ(i3=0..2)<(((T0_{i3}) - (T3_{i3}) * (T0_{i3}) - (T3_{i3})))>(i3=0..2)) * ((T6 * (T0_{i0}) - (T3_{i0}))) / ( (T6 * T6 * Σ(i4=0..2)<(((T0_{i4}) - (T3_{i4}) * (T0_{i4}) - (T3_{i4})))>(i4=0..2)))) + ((T1) - (Σ(i6=0..2)<((((T0_{i6} + ((T1) - (Σ(i10=0..2)<(((T0_{i10}) - (T3_{i10}) * (T0_{i10}) - (T3_{i10})))>(i10=0..2)) * ((T6 * (T0_{i6}) - (T3_{i6}))) / ( (T6 * T6 * Σ(i11=0..2)<(((T0_{i11}) - (T3_{i11}) * (T0_{i11}) - (T3_{i11})))>(i11=0..2)))) + T31_{i6})) - (T3_{i6}) * ((T0_{i6} + ((T1) - (Σ(i15=0..2)<(((T0_{i15}) - (T3_{i15}) * (T0_{i15}) - (T3_{i15})))>(i15=0..2)) * ((T6 * (T0_{i6}) - (T3_{i6}))) / ( (T6 * T6 * Σ(i16=0..2)<(((T0_{i16}) - (T3_{i16}) * (T0_{i16}) - (T3_{i16})))>(i16=0..2)))) + T31_{i6})) - (T3_{i6})))>(i6=0..2)) * ((T6 * ((T0_{i0} + ((T1) - (Σ(i22=0..2)<(((T0_{i22}) - (T3_{i22}) * (T0_{i22}) - (T3_{i22})))>(i22=0..2)) * ((T6 * (T0_{i0}) - (T3_{i0}))) / ( (T6 * T6 * Σ(i23=0..2)<(((T0_{i23}) - (T3_{i23}) * (T0_{i23}) - (T3_{i23})))>(i23=0..2)))) + T31_{i0})) - (T3_{i0}))) / ( (T6 * T6 * Σ(i23=0..2)<((((T0_{i23} + ((T1) - (Σ(i28=0..2)<(((T0_{i28}) - (T3_{i28}) * (T0_{i28}) - (T3_{i28})))>(i28=0..2)) * ((T6 * (T0_{i23}) - (T3_{i23}))) / ( (T6 * T6 * Σ(i29=0..2)<(((T0_{i29}) - (T3_{i29}) * (T0_{i29}) - (T3_{i29})))>(i29=0..2)))) + T31_{i23})) - (T3_{i23}) * ((T0_{i23} + ((T1) - (Σ(i34=0..2)<(((T0_{i34}) - (T3_{i34}) * (T0_{i34}) - (T3_{i34})))>(i34=0..2)) * ((T6 * (T0_{i23}) - (T3_{i23}))) / ( (T6 * T6 * Σ(i35=0..2)<(((T0_{i35}) - (T3_{i35}) * (T0_{i35}) - (T3_{i35})))>(i35=0..2)))) + T31_{i23})) - (T3_{i23})))>(i23=0..2)))) + T31_{i0})>_{3} (pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,v01803,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,es1970);
          particle[] _t19B2#1 = SphereQuery<3,particle>(pos19AE,rad1805);
        FOREACH19B8:  preds = [ASSIGN1A88,NEXT19D1]
          foreach (P19B6 in _t19B2) on exit goto ASSIGN1A89
            real accum19B7#2 = phi(oldE18D3,accum19CF)
          tensor[3] _t19B9#1 = P19B6.pos;
          real _t19C3#1 = 0.1e1;
          real accum19CF#1 = λ(T0[],T1[],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[],T9[3],T10[3],T11[],T12[3],T13[3],T14[],T15[3],T16[3],T17[],T18[3],T19[],T20[3],T21[3],T22[3],T23[3],T24[],T25[3],T26[3],T27[],T28[3],T29[3],T30[],T31[3],T32[3],T33[3],T34[3],T35[3],T36[],T37[3],T38[3],T39[3],T40[3],T41[],T42[3],T43[3],T44[],T45[3],T46[3],T47[],T48[3],T49[3],T50[3],T51[3],T52[],T53[3],T54[],T55[3],T56[3],T57[3],T58[3],T59[],T60[3],T61[3],T62[],T63[3],T64[3],T65[],T66[3],T67[3],T68[3],T69[3],T70[],T71[3],T72[],T73[3],T74[3],T75[3],T76[3],T77[],T78[3],T79[3],T80[],T81[3],T82[3],T83[],T84[3],T85[3],T86[3],T87[3],T88[],T89[3],T90[],T91[3],T92[3],T93[3],T94[3],T95[],T96[3],T97[3],T98[],T99[3],T100[3],T101[],T102[3],T103[3],T104[3],T105[3],T106[3],T107[3],T108[])<(T0 + ((T1) - ((Sqrt(Σ(i0=0..2)<((((T2_{i0} + ((T3) - (Σ(i4=0..2)<(((T2_{i4}) - (T5_{i4}) * (T2_{i4}) - (T5_{i4})))>(i4=0..2)) * ((T8 * (T2_{i0}) - (T5_{i0}))) / ( (T8 * T8 * Σ(i5=0..2)<(((T2_{i5}) - (T5_{i5}) * (T2_{i5}) - (T5_{i5})))>(i5=0..2)))) + ((T3) - (Σ(i7=0..2)<((((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T8 * (T2_{i7}) - (T5_{i7}))) / ( (T8 * T8 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))) + T33_{i7})) - (T5_{i7}) * ((T2_{i7} + ((T3) - (Σ(i16=0..2)<(((T2_{i16}) - (T5_{i16}) * (T2_{i16}) - (T5_{i16})))>(i16=0..2)) * ((T8 * (T2_{i7}) - (T5_{i7}))) / ( (T8 * T8 * Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)))) + T33_{i7})) - (T5_{i7})))>(i7=0..2)) * ((T8 * ((T2_{i0} + ((T3) - (Σ(i23=0..2)<(((T2_{i23}) - (T5_{i23}) * (T2_{i23}) - (T5_{i23})))>(i23=0..2)) * ((T8 * (T2_{i0}) - (T5_{i0}))) / ( (T8 * T8 * Σ(i24=0..2)<(((T2_{i24}) - (T5_{i24}) * (T2_{i24}) - (T5_{i24})))>(i24=0..2)))) + T33_{i0})) - (T5_{i0}))) / ( (T8 * T8 * Σ(i24=0..2)<((((T2_{i24} + ((T3) - (Σ(i29=0..2)<(((T2_{i29}) - (T5_{i29}) * (T2_{i29}) - (T5_{i29})))>(i29=0..2)) * ((T8 * (T2_{i24}) - (T5_{i24}))) / ( (T8 * T8 * Σ(i30=0..2)<(((T2_{i30}) - (T5_{i30}) * (T2_{i30}) - (T5_{i30})))>(i30=0..2)))) + T33_{i24})) - (T5_{i24}) * ((T2_{i24} + ((T3) - (Σ(i35=0..2)<(((T2_{i35}) - (T5_{i35}) * (T2_{i35}) - (T5_{i35})))>(i35=0..2)) * ((T8 * (T2_{i24}) - (T5_{i24}))) / ( (T8 * T8 * Σ(i36=0..2)<(((T2_{i36}) - (T5_{i36}) * (T2_{i36}) - (T5_{i36})))>(i36=0..2)))) + T33_{i24})) - (T5_{i24})))>(i24=0..2)))) + T33_{i0})) - (T107_{i0}) * ((T2_{i0} + ((T3) - (Σ(i4=0..2)<(((T2_{i4}) - (T5_{i4}) * (T2_{i4}) - (T5_{i4})))>(i4=0..2)) * ((T8 * (T2_{i0}) - (T5_{i0}))) / ( (T8 * T8 * Σ(i5=0..2)<(((T2_{i5}) - (T5_{i5}) * (T2_{i5}) - (T5_{i5})))>(i5=0..2)))) + ((T3) - (Σ(i7=0..2)<((((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T8 * (T2_{i7}) - (T5_{i7}))) / ( (T8 * T8 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))) + T33_{i7})) - (T5_{i7}) * ((T2_{i7} + ((T3) - (Σ(i16=0..2)<(((T2_{i16}) - (T5_{i16}) * (T2_{i16}) - (T5_{i16})))>(i16=0..2)) * ((T8 * (T2_{i7}) - (T5_{i7}))) / ( (T8 * T8 * Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)))) + T33_{i7})) - (T5_{i7})))>(i7=0..2)) * ((T8 * ((T2_{i0} + ((T3) - (Σ(i23=0..2)<(((T2_{i23}) - (T5_{i23}) * (T2_{i23}) - (T5_{i23})))>(i23=0..2)) * ((T8 * (T2_{i0}) - (T5_{i0}))) / ( (T8 * T8 * Σ(i24=0..2)<(((T2_{i24}) - (T5_{i24}) * (T2_{i24}) - (T5_{i24})))>(i24=0..2)))) + T33_{i0})) - (T5_{i0}))) / ( (T8 * T8 * Σ(i24=0..2)<((((T2_{i24} + ((T3) - (Σ(i29=0..2)<(((T2_{i29}) - (T5_{i29}) * (T2_{i29}) - (T5_{i29})))>(i29=0..2)) * ((T8 * (T2_{i24}) - (T5_{i24}))) / ( (T8 * T8 * Σ(i30=0..2)<(((T2_{i30}) - (T5_{i30}) * (T2_{i30}) - (T5_{i30})))>(i30=0..2)))) + T33_{i24})) - (T5_{i24}) * ((T2_{i24} + ((T3) - (Σ(i35=0..2)<(((T2_{i35}) - (T5_{i35}) * (T2_{i35}) - (T5_{i35})))>(i35=0..2)) * ((T8 * (T2_{i24}) - (T5_{i24}))) / ( (T8 * T8 * Σ(i36=0..2)<(((T2_{i36}) - (T5_{i36}) * (T2_{i36}) - (T5_{i36})))>(i36=0..2)))) + T33_{i24})) - (T5_{i24})))>(i24=0..2)))) + T33_{i0})) - (T107_{i0})))>(i0=0..2))) / ( T108)))^4)> (accum19B7,_t19C3,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,v01803,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,es1970,_t19B9,rad1805);
          goto FOREACH19B8
        ASSIGN1A89:  preds = [FOREACH19B8]
          real _t19D4#1 = λ(T0[],T1[])<(T0) - (T1)> (accum19B7,oldE18DC);
          real _t19DE#1 = λ(T0[],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[],T8[3],T9[3],T10[],T11[3],T12[3],T13[],T14[3],T15[3],T16[],T17[3],T18[],T19[3],T20[3],T21[3],T22[3],T23[],T24[3],T25[3],T26[],T27[3],T28[3],T29[],T30[3],T31[3],T32[3],T33[3],T34[3],T35[],T36[3],T37[3],T38[3],T39[3],T40[],T41[3],T42[3],T43[],T44[3],T45[3],T46[],T47[3],T48[3],T49[3],T50[3],T51[],T52[3],T53[],T54[3],T55[3],T56[3],T57[3],T58[],T59[3],T60[3],T61[],T62[3],T63[3],T64[],T65[3],T66[3],T67[3],T68[3],T69[],T70[3],T71[],T72[3],T73[3],T74[3],T75[3],T76[],T77[3],T78[3],T79[],T80[3],T81[3],T82[],T83[3],T84[3],T85[3],T86[3],T87[],T88[3],T89[],T90[3],T91[3],T92[3],T93[3],T94[],T95[3],T96[3],T97[],T98[3],T99[3],T100[],T101[3],T102[3],T103[3],T104[3],T105[3],T106[3],T107[],T108[3],T109[3],T110[3],T111[3],T112[],T113[3],T114[3],T115[],T116[3],T117[3],T118[],T119[3],T120[3],T121[],T122[3],T123[],T124[3],T125[3],T126[3],T127[3],T128[],T129[3],T130[3],T131[],T132[3],T133[3],T134[],T135[3],T136[3],T137[3],T138[],T139[3],T140[],T141[3],T142[3],T143[3],T144[3],T145[],T146[3],T147[3],T148[],T149[3],T150[3],T151[],T152[3],T153[3],T154[3],T155[],T156[3],T157[],T158[3],T159[3],T160[3],T161[3],T162[],T163[3],T164[3],T165[],T166[3],T167[3],T168[],T169[3],T170[3],T171[3],T172[],T173[3],T174[],T175[3],T176[3],T177[3],T178[3],T179[],T180[3],T181[3],T182[],T183[3],T184[3],T185[],T186[3],T187[3],T188[3],T189[3])<(T0 * Σ(i0=0..2)<((((T1_{i0} + ((T2) - (Σ(i5=0..2)<(((T1_{i5}) - (T4_{i5}) * (T1_{i5}) - (T4_{i5})))>(i5=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i6=0..2)<(((T1_{i6}) - (T4_{i6}) * (T1_{i6}) - (T4_{i6})))>(i6=0..2)))) + ((T2) - (Σ(i8=0..2)<((((T1_{i8} + ((T2) - (Σ(i12=0..2)<(((T1_{i12}) - (T4_{i12}) * (T1_{i12}) - (T4_{i12})))>(i12=0..2)) * ((T7 * (T1_{i8}) - (T4_{i8}))) / ( (T7 * T7 * Σ(i13=0..2)<(((T1_{i13}) - (T4_{i13}) * (T1_{i13}) - (T4_{i13})))>(i13=0..2)))) + T32_{i8})) - (T4_{i8}) * ((T1_{i8} + ((T2) - (Σ(i17=0..2)<(((T1_{i17}) - (T4_{i17}) * (T1_{i17}) - (T4_{i17})))>(i17=0..2)) * ((T7 * (T1_{i8}) - (T4_{i8}))) / ( (T7 * T7 * Σ(i18=0..2)<(((T1_{i18}) - (T4_{i18}) * (T1_{i18}) - (T4_{i18})))>(i18=0..2)))) + T32_{i8})) - (T4_{i8})))>(i8=0..2)) * ((T7 * ((T1_{i0} + ((T2) - (Σ(i24=0..2)<(((T1_{i24}) - (T4_{i24}) * (T1_{i24}) - (T4_{i24})))>(i24=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i25=0..2)<(((T1_{i25}) - (T4_{i25}) * (T1_{i25}) - (T4_{i25})))>(i25=0..2)))) + T32_{i0})) - (T4_{i0}))) / ( (T7 * T7 * Σ(i25=0..2)<((((T1_{i25} + ((T2) - (Σ(i30=0..2)<(((T1_{i30}) - (T4_{i30}) * (T1_{i30}) - (T4_{i30})))>(i30=0..2)) * ((T7 * (T1_{i25}) - (T4_{i25}))) / ( (T7 * T7 * Σ(i31=0..2)<(((T1_{i31}) - (T4_{i31}) * (T1_{i31}) - (T4_{i31})))>(i31=0..2)))) + T32_{i25})) - (T4_{i25}) * ((T1_{i25} + ((T2) - (Σ(i36=0..2)<(((T1_{i36}) - (T4_{i36}) * (T1_{i36}) - (T4_{i36})))>(i36=0..2)) * ((T7 * (T1_{i25}) - (T4_{i25}))) / ( (T7 * T7 * Σ(i37=0..2)<(((T1_{i37}) - (T4_{i37}) * (T1_{i37}) - (T4_{i37})))>(i37=0..2)))) + T32_{i25})) - (T4_{i25})))>(i25=0..2)))) + T32_{i0})) - ((T1_{i0} + ((T2) - (Σ(i39=0..2)<(((T1_{i39}) - (T4_{i39}) * (T1_{i39}) - (T4_{i39})))>(i39=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i40=0..2)<(((T1_{i40}) - (T4_{i40}) * (T1_{i40}) - (T4_{i40})))>(i40=0..2)))))) * Neg(Σ(i42=0..2)<(((δ_{i0,i42}) - ((T7 * T7 * ((T1_{i0} + ((T2) - (Σ(i51=0..2)<(((T1_{i51}) - (T4_{i51}) * (T1_{i51}) - (T4_{i51})))>(i51=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i52=0..2)<(((T1_{i52}) - (T4_{i52}) * (T1_{i52}) - (T4_{i52})))>(i52=0..2)))))) - (T4_{i0}) * (1) / ( Sqrt((T7 * T7 * Σ(i47=0..2)<((((T1_{i47} + ((T2) - (Σ(i51=0..2)<(((T1_{i51}) - (T4_{i51}) * (T1_{i51}) - (T4_{i51})))>(i51=0..2)) * ((T7 * (T1_{i47}) - (T4_{i47}))) / ( (T7 * T7 * Σ(i52=0..2)<(((T1_{i52}) - (T4_{i52}) * (T1_{i52}) - (T4_{i52})))>(i52=0..2)))))) - (T4_{i47}) * ((T1_{i47} + ((T2) - (Σ(i51=0..2)<(((T1_{i51}) - (T4_{i51}) * (T1_{i51}) - (T4_{i51})))>(i51=0..2)) * ((T7 * (T1_{i47}) - (T4_{i47}))) / ( (T7 * T7 * Σ(i52=0..2)<(((T1_{i52}) - (T4_{i52}) * (T1_{i52}) - (T4_{i52})))>(i52=0..2)))))) - (T4_{i47})))>(i47=0..2)))) * ((T1_{i42} + ((T2) - (Σ(i57=0..2)<(((T1_{i57}) - (T4_{i57}) * (T1_{i57}) - (T4_{i57})))>(i57=0..2)) * ((T7 * (T1_{i42}) - (T4_{i42}))) / ( (T7 * T7 * Σ(i58=0..2)<(((T1_{i58}) - (T4_{i58}) * (T1_{i58}) - (T4_{i58})))>(i58=0..2)))))) - (T4_{i42}) * (1) / ( Sqrt((T7 * T7 * Σ(i53=0..2)<((((T1_{i53} + ((T2) - (Σ(i57=0..2)<(((T1_{i57}) - (T4_{i57}) * (T1_{i57}) - (T4_{i57})))>(i57=0..2)) * ((T7 * (T1_{i53}) - (T4_{i53}))) / ( (T7 * T7 * Σ(i58=0..2)<(((T1_{i58}) - (T4_{i58}) * (T1_{i58}) - (T4_{i58})))>(i58=0..2)))))) - (T4_{i53}) * ((T1_{i53} + ((T2) - (Σ(i57=0..2)<(((T1_{i57}) - (T4_{i57}) * (T1_{i57}) - (T4_{i57})))>(i57=0..2)) * ((T7 * (T1_{i53}) - (T4_{i53}))) / ( (T7 * T7 * Σ(i58=0..2)<(((T1_{i58}) - (T4_{i58}) * (T1_{i58}) - (T4_{i58})))>(i58=0..2)))))) - (T4_{i53})))>(i53=0..2)))))) * T189_{i42}))>(i42=0..2))))>(i0=0..2))> (_t181B,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,v01803,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,es1970,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD);
          bool _t19E0#1 = GT<real>(_t19D4,_t19DE);
          if _t19E0 then goto ASSIGN1A8C else goto JOIN19E2
        ASSIGN1A8C:  preds = [COND19F6]
          real hh19EB#1 = λ(T0[],T1[])<(T0 * T1)> (hh199F,_t181B);
          self.pos = pos18CD;
          self._pos = pos18CD;
          self.hh = hh19EB;
          self.step = step18D1;
          active
          goto JOIN19E2
        JOIN19E2:  preds = [*ACTIVE19EE,COND19F6]
          real hh19EC#1 = phi(hh199F)
          tensor[3] pos19E4#2 = phi(pos19AE)
          real _t19F7#1 = 0.11e1;
          real hh19F9#2 = λ(T0[],T1[])<(T0 * T1)> (hh19EC,_t19F7);
          int _t19FD#1 = 5;
          bool _t19FF#1 = LT<int>(nn18DE,_t19FD);
          if _t19FF then goto ASSIGN1AE7 else goto JOIN1A01
        ASSIGN1AE7:  preds = [COND1A0D]
          tensor[3] _t1A0A#1 = λ(T0[3],T1[],T2[],T3[3],T4[3])<(T0_{i0} + (T1 * T2 * T3_{i0} * (1) / ( Sqrt(Σ(i3=0..2)<((T3_{i3} * T3_{i3}))>(i3=0..2)))))>_{3} (pos19E4,_t181B,rad1805,es1970,es1970);
          new particle(_t1A0A,hh19F9);
          goto JOIN1A01
        JOIN1A01:  preds = [NEW1A0C,COND1A0D]
          goto JOIN1870
        ASSIGN185F:  preds = [COND186A]
          real _t185E#1 = 0.2e1;
          real _t1862#1 = λ(T0[],T1[3],T2[3])<Sqrt((T0 * T0 * Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (_t185E,pos1809,_t1821);
          real _t1866#1 = 0.e0;
          bool _t1868#1 = EQ<real>(_t1862,_t1866);
          goto JOIN184F
        ASSIGN1843:  preds = [COND1844]
          bool _t1842#1 = false;
          goto JOIN1838
        ASSIGN1849:  preds = [COND184A]
          bool _t1848#1 = false;
          goto JOIN182E
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY17DA:  preds = []
      tensor[3][] ipos17D2#1 = globals.ipos174B;
    FOREACH17D5:  preds = [ASSIGN17D3,NEXT17D9]
      foreach (x17D4 in ipos17D2) on exit goto RETURN17DB
      real _t17D6#1 = 0.1e1;
      new particle(x17D4,_t17D6);
      goto FOREACH17D5
    RETURN17DB:  preds = [FOREACH17D5]
      return
## global update
  ENTRY1A63:  preds = []
    real rad1A19#1 = globals.rad1748;
    real eps1A18#1 = globals.eps1749;
    particle[] P1A1C#6 = Strands<particle,all>;
    (int res1A1D#1) = sum<int>(MAP sum177D (P1A1C));
    (int res1A23#1) = sum<int>(MAP sum1784 (P1A1C));
    (bool res1A29#2) = all(MAP all178B (P1A1C));
    (real res1A2F#1) = max<real>(MAP max1794 (P1A1C));
    (real res1A35#1) = max<real>(MAP max17A7 (P1A1C));
    (real res1A3B#1) = min<real>(MAP min17B9 (P1A1C));
    tensor[2] averageDist1A40#1 = <tensor[2]>[res1A3B,res1A35];
    string _t1A42#1 = "One run:";
    string _t1A44#4 = " and ";
    real _t1A46#2 = λ(T0[],T1[])<(T0) / ( T1)> (res1A2F,rad1A19);
    bool _t1A4C#2 = LT<real>(_t1A46,eps1A18);
    string _t1A50#1 = " of ";
    string _t1A54#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t1A42,res1A29,_t1A44,_t1A46,_t1A44,_t1A4C,_t1A44,res1A23,_t1A50,res1A1D,_t1A44,averageDist1A40,_t1A54);
    if res1A29 then goto COND1A61 else goto JOIN1A57
  COND1A61:  preds = [COND1A62]
    if _t1A4C then goto ASSIGN1A5E else goto JOIN1A5C
  ASSIGN1A5E:  preds = [COND1A61]
    string _t1A5D#1 = "CONVERGED!\n";
    Print<[string]>(_t1A5D);
    StabilizeAll;
    goto JOIN1A5C
  JOIN1A5C:  preds = [MASSIGN1A60,COND1A61]
    goto JOIN1A57
  JOIN1A57:  preds = [JOIN1A5C,COND1A62]
    continue
#### end program ####
##### high-ir: after normalization promotion ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1745 (meshData) = <no-default>
  input 0space0473_intermedateGlobal1746 (space) = <no-default>
  input 0data0475_intermedateGlobal1747 (data) = <no-default>
  input rad1748 (rad) = <default>
  input eps1749 (eps) = <default>
  input v0174A (v0) = <default>
  input ipos174B (ipos) = <no-default>
## functions
  function real min17B9 (particle P17A8#1) {
    ENTRY17B8:  preds = []
      tensor[3] _t17A9#1 = P17A8.pos;
      real _t17AB#3 = 0.5e0;
      tensor[3] _t17B1#1 = <tensor[3]>[_t17AB,_t17AB,_t17AB];
      real _t17B5#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (_t17A9,_t17B1);
      return _t17B5
}
  function real max17A7 (particle P1795#1) {
    ENTRY17A6:  preds = []
      tensor[3] _t1796#1 = P1795.pos;
      real _t1799#3 = 0.5e0;
      tensor[3] _t179F#1 = <tensor[3]>[_t1799,_t1799,_t1799];
      real _t17A3#1 = λ(T0[3],T1[3])<Sqrt(Σ(i0=0..2)<(((T0_{i0}) - (T1_{i0}) * (T0_{i0}) - (T1_{i0})))>(i0=0..2))> (_t1796,_t179F);
      return _t17A3
}
  function real max1794 (particle P178C#1) {
    ENTRY1793:  preds = []
      tensor[3] _t178D#1 = P178C.step;
      real _t1790#1 = λ(T0[3])<Sqrt(Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2))> (_t178D);
      return _t1790
}
  function bool all178B (particle P1785#1) {
    ENTRY178A:  preds = []
      bool _t1786#1 = P1785.found;
      return _t1786
}
  function int sum1784 (particle P177E#1) {
    ENTRY1783:  preds = []
      int _t177F#1 = P177E.testp;
      return _t177F
}
  function int sum177D (particle P1777#1) {
    ENTRY177C:  preds = []
      int _t1778#1 = P1777.test;
      return _t1778
}
  function int[2] nextCell41776 (int faceIdx1757#2, int cell1758#1, femData:Mesh mesh1759#1) {
    ENTRY1775:  preds = []
      int _t175A#3 = -1;
      bool _t175C#1 = EQ<int>(faceIdx1757,_t175A);
      if _t175C then goto ASSIGN1A68 else goto ASSIGN1767
    ASSIGN1A68:  preds = [COND1773]
      int[2] _t1763#1 = <int[2]>{_t175A,_t175A};
      return _t1763
      goto JOIN175E
    JOIN175E:  preds = [*RETURN(_t1763)1765,*RETURN(_t1770)1772]
      unreachable
    ASSIGN1767:  preds = [COND1773]
      int _t1766#1 = 8;
      int _t1768#1 = IMul(cell1758,_t1766);
      int _t176A#1 = 2;
      int _t176C#1 = IMul(faceIdx1757,_t176A);
      int _t176E#1 = IAdd(_t1768,_t176C);
      int[2] _t1770#1 = ExtractFemItemN<[femData:Mesh,int],int[2],CellFaceCell(Mesh),0000,"",[],int>(mesh1759,_t176E);
      return _t1770
      goto JOIN175E
}
## input initialization
  ENTRY1755:  preds = []
    real rad174C#2 = 0.1e-1;
    globals.rad1748 = rad174C;
    globals.eps1749 = rad174C;
    real v01752#1 = 0.625e-1;
    globals.v0174A = v01752;
    return
## global-variable initialization
  ENTRY17D0:  preds = []
    femData:Mesh meshData17BA#2 = globals.meshData1745;
    int _t17BC#1 = 0;
    int _t17BE#1 = 1;
    int _t17C0#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData17BA);
    int _t17C2#1 = ISub(_t17C0,_t17BE);
    int[] _t17C4#1 = Range(_t17BC,_t17C2);
    femData:MeshCell[] _t17C6#1 = <femData:MeshCell[]>{};
  FOREACH17CA:  preds = [ASSIGN17C7,NEXT17CF]
    foreach (_t17C8 in _t17C4) on exit goto RETURN17D1
      femData:MeshCell[] _t17C9#1 = phi(_t17C6,_t17CD)
    femData:MeshCell _t17CB#1 = LoadFem<femData:MeshCell>(meshData17BA,_t17C8);
    femData:MeshCell[] _t17CD#1 = Append<femData:MeshCell>(_t17C9,_t17CB);
    goto FOREACH17CA
  RETURN17D1:  preds = [FOREACH17CA]
    return
## strand
  strand particle (tensor[3] pos017DC#2, real hh017DD#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY17F9:  preds = []
        tensor[3] step17EF#1 = λ()<Z_{i0}>_{3} ();
        bool found17F1#1 = false;
        int nfs17F3#2 = 0;
        int test17F5#1 = 1;
        self.pos = pos017DC;
        self._pos = pos017DC;
        self.hh = hh017DD;
        self.step = step17EF;
        self.found = found17F1;
        self.nfs = nfs17F3;
        self.test = test17F5;
        self.testp = nfs17F3;
        return
    end state init
    method update
        ENTRY1A0F:  preds = []
          real rad1805#12 = globals.rad1748;
          real eps1804#1 = globals.eps1749;
          real v01803#67 = globals.v0174A;
          tensor[3] pos1809#372 = self.pos;
          real hh180B#9 = self.hh;
          bool found180D#3 = self.found;
          int nfs180E#3 = self.nfs;
          int testp1810#2 = self.testp;
          real _t181B#12 = 0.5e0;
          tensor[3] _t1821#361 = <tensor[3]>[_t181B,_t181B,_t181B];
          tensor[3] mid1823#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1809,_t1821);
          real _t1826#1 = TensorIndex<tensor[3],[0]>(mid1823);
          real _t1828#1 = λ(T0[])<Abs(T0)> (_t1826);
          bool _t182C#1 = LTE<real>(_t1828,_t181B);
          if _t182C then goto ASSIGN1831 else goto ASSIGN1849
        ASSIGN1831:  preds = [COND184A]
          real _t1830#1 = TensorIndex<tensor[3],[1]>(mid1823);
          real _t1832#1 = λ(T0[])<Abs(T0)> (_t1830);
          bool _t1836#1 = LTE<real>(_t1832,_t181B);
          if _t1836 then goto ASSIGN183A else goto ASSIGN1843
        ASSIGN183A:  preds = [COND1844]
          real _t1839#1 = TensorIndex<tensor[3],[2]>(mid1823);
          real _t183B#1 = λ(T0[])<Abs(T0)> (_t1839);
          bool _t183F#1 = LTE<real>(_t183B,_t181B);
          goto JOIN1838
        JOIN1838:  preds = [ASSIGN1A70,ASSIGN1843]
          bool _t1840#1 = phi(_t183F,_t1842)
          goto JOIN182E
        JOIN182E:  preds = [JOIN1838,ASSIGN1849]
          bool _t1846#1 = phi(_t1840,_t1848)
          bool _t184D#1 = BNot(_t1846);
          if _t184D then goto ASSIGN1852 else goto ASSIGN185F
        ASSIGN1852:  preds = [COND186A]
          bool _t1850#1 = true;
          goto JOIN184F
        JOIN184F:  preds = [ASSIGN1852,ASSIGN1A73]
          bool _t1851#1 = phi(_t1850,_t1868)
          if _t1851 then goto DIE186C else goto JOIN186B
        DIE186C:  preds = [COND186D]
          die
          goto JOIN186B
        JOIN186B:  preds = [*DIE186C,COND186D]
          bool _t186E#1 = BNot(found180D);
          if _t186E then goto ASSIGN187F else goto ASSIGN18C0
        ASSIGN187F:  preds = [COND1A0E]
          real _t187E#9 = 0.2e1;
          tensor[3] _t1888#1 = λ(T0[],T1[3],T2[3],T3[3],T4[3],T5[],T6[3],T7[3],T8[],T9[3],T10[3],T11[],T12[3],T13[3])<((T0) - (Σ(i1=0..2)<(((T1_{i1}) - (T2_{i1}) * (T1_{i1}) - (T2_{i1})))>(i1=0..2)) * ((T5 * (T1_{i0}) - (T2_{i0}))) / ( (T5 * T5 * Σ(i2=0..2)<(((T1_{i2}) - (T2_{i2}) * (T1_{i2}) - (T2_{i2})))>(i2=0..2))))>_{3} (v01803,pos1809,_t1821,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821);
          tensor[3] pos188F#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3])<(T0_{i0} + ((T1) - (Σ(i2=0..2)<(((T0_{i2}) - (T3_{i2}) * (T0_{i2}) - (T3_{i2})))>(i2=0..2)) * ((T6 * (T0_{i0}) - (T3_{i0}))) / ( (T6 * T6 * Σ(i3=0..2)<(((T0_{i3}) - (T3_{i3}) * (T0_{i3}) - (T3_{i3})))>(i3=0..2)))))>_{3} (pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821);
          real _t1897#1 = λ(T0[],T1[3],T2[3],T3[3],T4[3],T5[],T6[3],T7[3],T8[],T9[3],T10[3],T11[],T12[3],T13[3],T14[])<(Sqrt(Σ(i0=0..2)<(((T0) - (Σ(i1=0..2)<(((T1_{i1}) - (T2_{i1}) * (T1_{i1}) - (T2_{i1})))>(i1=0..2)) * ((T5 * (T1_{i0}) - (T2_{i0}))) / ( (T5 * T5 * Σ(i2=0..2)<(((T1_{i2}) - (T2_{i2}) * (T1_{i2}) - (T2_{i2})))>(i2=0..2))) * (T0) - (Σ(i1=0..2)<(((T1_{i1}) - (T2_{i1}) * (T1_{i1}) - (T2_{i1})))>(i1=0..2)) * ((T5 * (T1_{i0}) - (T2_{i0}))) / ( (T5 * T5 * Σ(i2=0..2)<(((T1_{i2}) - (T2_{i2}) * (T1_{i2}) - (T2_{i2})))>(i2=0..2)))))>(i0=0..2))) / ( T14)> (v01803,pos1809,_t1821,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821,_t187E,pos1809,_t1821,rad1805);
          bool _t1899#1 = GT<real>(_t1897,eps1804);
          if _t1899 then goto ASSIGN189D else goto ASSIGN18AA
        ASSIGN189D:  preds = [COND18AE]
          int _t189C#1 = 1;
          int nfs189E#2 = IAdd(nfs180E,_t189C);
          int _t18A1#1 = 10;
          bool _t18A3#1 = GT<int>(nfs189E,_t18A1);
          if _t18A3 then goto DIE18A6 else goto JOIN18A5
        DIE18A6:  preds = [COND18A7]
          die
          goto JOIN18A5
        JOIN18A5:  preds = [*DIE18A6,COND18A7]
          goto JOIN189B
        JOIN189B:  preds = [JOIN18A5,ASSIGN18AD]
          int testp18AC#1 = phi(testp1810,testp18AB)
          int nfs189F#1 = phi(nfs189E,nfs180E)
          bool found18A9#1 = phi(found180D,found18A8)
          goto JOIN1870
        JOIN1870:  preds = [JOIN189B,JOIN1A01]
          int testp18B1#1 = phi(testp18AC,testp1810)
          int nfs18B0#1 = phi(nfs189F,nfs180E)
          bool found18AF#1 = phi(found18A9,found180D)
          tensor[3] step188D#1 = phi(_t1888,up19AC)
          real hh1973#1 = phi(hh180B,hh19F9)
          tensor[3] pos1890#2 = phi(pos188F,pos19E4)
          self.pos = pos1890;
          self._pos = pos1890;
          self.hh = hh1973;
          self.step = step188D;
          self.found = found18AF;
          self.nfs = nfs18B0;
          self.testp = testp18B1;
          active
        ASSIGN18AA:  preds = [COND18AE]
          bool found18A8#1 = true;
          int testp18AB#1 = 1;
          goto JOIN189B
        ASSIGN18C0:  preds = [COND1A0E]
          real _t18BF#216 = 0.2e1;
          tensor[3] pos18CD#7 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3])<(T0_{i0} + ((T1) - (Σ(i2=0..2)<(((T0_{i2}) - (T3_{i2}) * (T0_{i2}) - (T3_{i2})))>(i2=0..2)) * ((T6 * (T0_{i0}) - (T3_{i0}))) / ( (T6 * T6 * Σ(i3=0..2)<(((T0_{i3}) - (T3_{i3}) * (T0_{i3}) - (T3_{i3})))>(i3=0..2)))))>_{3} (pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821);
          tensor[3] step18D1#4 = λ()<Z_{i0}>_{3} ();
          real oldE18D3#4 = 0.e0;
          int nn18D7#2 = 0;
          particle[] _t18D9#1 = SphereQuery<3,particle>(pos18CD,rad1805);
        FOREACH18DF:  preds = [ASSIGN1A77,NEXT1926]
          foreach (P18DB in _t18D9) on exit goto ASSIGN1A78
            int nn18DE#3 = phi(nn18D7,nn1924)
            tensor[3] force18DD#7 = phi(step18D1,force1920)
            real oldE18DC#2 = phi(oldE18D3,oldE18F6)
          tensor[3] _t18E0#4 = P18DB.pos;
          real _t18EA#3 = 0.1e1;
          real oldE18F6#1 = λ(T0[],T1[],T2[3],T3[3],T4[],T5[3],T6[3],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3],T15[],T16[3],T17[3],T18[])<(T0 + ((T1) - ((Sqrt(Σ(i0=0..2)<(((T2_{i0}) - ((T3_{i0} + ((T4) - (Σ(i3=0..2)<(((T3_{i3}) - (T6_{i3}) * (T3_{i3}) - (T6_{i3})))>(i3=0..2)) * ((T9 * (T3_{i0}) - (T6_{i0}))) / ( (T9 * T9 * Σ(i4=0..2)<(((T3_{i4}) - (T6_{i4}) * (T3_{i4}) - (T6_{i4})))>(i4=0..2)))))) * (T2_{i0}) - ((T3_{i0} + ((T4) - (Σ(i3=0..2)<(((T3_{i3}) - (T6_{i3}) * (T3_{i3}) - (T6_{i3})))>(i3=0..2)) * ((T9 * (T3_{i0}) - (T6_{i0}))) / ( (T9 * T9 * Σ(i4=0..2)<(((T3_{i4}) - (T6_{i4}) * (T3_{i4}) - (T6_{i4})))>(i4=0..2))))))))>(i0=0..2))) / ( T18)))^4)> (oldE18DC,_t18EA,_t18E0,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,rad1805);
          int _t1902#1 = -4;
          real _t1904#1 = IntToReal(_t1902);
          tensor[3] force1920#1 = λ(T0[3],T1[],T2[],T3[3],T4[3],T5[],T6[3],T7[3],T8[3],T9[3],T10[],T11[3],T12[3],T13[],T14[3],T15[3],T16[],T17[3],T18[3],T19[],T20[],T21[],T22[3],T23[3],T24[],T25[3],T26[3],T27[3],T28[3],T29[],T30[3],T31[3],T32[],T33[3],T34[3],T35[],T36[3],T37[3],T38[3],T39[3],T40[],T41[3],T42[3],T43[3],T44[3],T45[],T46[3],T47[3],T48[],T49[3],T50[3],T51[],T52[3],T53[3])<(T0_{i0} + ((T1 * ((T2) - ((Sqrt(Σ(i3=0..2)<(((T3_{i3}) - ((T4_{i3} + ((T5) - (Σ(i6=0..2)<(((T4_{i6}) - (T7_{i6}) * (T4_{i6}) - (T7_{i6})))>(i6=0..2)) * ((T10 * (T4_{i3}) - (T7_{i3}))) / ( (T10 * T10 * Σ(i7=0..2)<(((T4_{i7}) - (T7_{i7}) * (T4_{i7}) - (T7_{i7})))>(i7=0..2)))))) * (T3_{i3}) - ((T4_{i3} + ((T5) - (Σ(i6=0..2)<(((T4_{i6}) - (T7_{i6}) * (T4_{i6}) - (T7_{i6})))>(i6=0..2)) * ((T10 * (T4_{i3}) - (T7_{i3}))) / ( (T10 * T10 * Σ(i7=0..2)<(((T4_{i7}) - (T7_{i7}) * (T4_{i7}) - (T7_{i7})))>(i7=0..2))))))))>(i3=0..2))) / ( T19)))^3 * (T2) / ( T19) * (T3_{i0}) - ((T4_{i0} + ((T5) - (Σ(i10=0..2)<(((T4_{i10}) - (T7_{i10}) * (T4_{i10}) - (T7_{i10})))>(i10=0..2)) * ((T10 * (T4_{i0}) - (T7_{i0}))) / ( (T10 * T10 * Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)))))))) / ( Sqrt(Σ(i11=0..2)<(((T3_{i11}) - ((T4_{i11} + ((T5) - (Σ(i14=0..2)<(((T4_{i14}) - (T7_{i14}) * (T4_{i14}) - (T7_{i14})))>(i14=0..2)) * ((T10 * (T4_{i11}) - (T7_{i11}))) / ( (T10 * T10 * Σ(i15=0..2)<(((T4_{i15}) - (T7_{i15}) * (T4_{i15}) - (T7_{i15})))>(i15=0..2)))))) * (T3_{i11}) - ((T4_{i11} + ((T5) - (Σ(i14=0..2)<(((T4_{i14}) - (T7_{i14}) * (T4_{i14}) - (T7_{i14})))>(i14=0..2)) * ((T10 * (T4_{i11}) - (T7_{i11}))) / ( (T10 * T10 * Σ(i15=0..2)<(((T4_{i15}) - (T7_{i15}) * (T4_{i15}) - (T7_{i15})))>(i15=0..2))))))))>(i11=0..2))))>_{3} (force18DD,_t1904,_t18EA,_t18E0,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,rad1805,_t18EA,rad1805,_t18E0,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18E0,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821);
          int _t1922#1 = 1;
          int nn1924#1 = IAdd(nn18DE,_t1922);
          goto FOREACH18DF
        ASSIGN1A78:  preds = [FOREACH18DF]
          bool _t1929#1 = EQ<int>(nn18D7,nn18DE);
          if _t1929 then goto ASSIGN1A79 else goto JOIN192B
        ASSIGN1A79:  preds = [COND1941]
          real _t192E#1 = λ(T0[],T1[])<(T0 * T1)> (_t181B,rad1805);
          tensor[3] _t1934#1 = <tensor[3]>[_t192E,oldE18D3,oldE18D3];
          tensor[3] _t1936#1 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3],T15[3])<(T0_{i0} + ((T1) - (Σ(i3=0..2)<(((T0_{i3}) - (T3_{i3}) * (T0_{i3}) - (T3_{i3})))>(i3=0..2)) * ((T6 * (T0_{i0}) - (T3_{i0}))) / ( (T6 * T6 * Σ(i4=0..2)<(((T0_{i4}) - (T3_{i4}) * (T0_{i4}) - (T3_{i4})))>(i4=0..2)))) + T15_{i0})>_{3} (pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1934);
          new particle(_t1936,hh180B);
          self.pos = pos18CD;
          self._pos = pos18CD;
          self.step = step18D1;
          active
          goto JOIN192B
        JOIN192B:  preds = [*ACTIVE1939,COND1941]
          tensor[3] es195D#1 = λ(T0[],T1[],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[],T9[3],T10[3],T11[],T12[3],T13[3],T14[],T15[3],T16[3],T17[3],T18[],T19[3],T20[],T21[3],T22[3],T23[3],T24[3],T25[],T26[3],T27[3],T28[],T29[3],T30[3],T31[],T32[3],T33[3],T34[3],T35[],T36[3],T37[],T38[3],T39[3],T40[3],T41[3],T42[],T43[3],T44[3],T45[],T46[3],T47[3],T48[],T49[3],T50[3],T51[3],T52[],T53[3],T54[],T55[3],T56[3],T57[3],T58[3],T59[],T60[3],T61[3],T62[],T63[3],T64[3],T65[],T66[3],T67[3],T68[3],T69[3])<(T0 * Σ(i2=0..2)<(((δ_{i0,i2}) - ((T1 * T1 * ((T2_{i0} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i0}) - (T5_{i0}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i0}) * (1) / ( Sqrt((T1 * T1 * Σ(i7=0..2)<((((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7}) * ((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7})))>(i7=0..2)))) * ((T2_{i2} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i2}) - (T5_{i2}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i2}) * (1) / ( Sqrt((T1 * T1 * Σ(i13=0..2)<((((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13}) * ((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13})))>(i13=0..2)))))) * T69_{i2}))>(i2=0..2))>_{3} (hh180B,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD);
          real _t195F#1 = λ(T0[],T1[],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[],T9[3],T10[3],T11[],T12[3],T13[3],T14[],T15[3],T16[3],T17[3],T18[],T19[3],T20[],T21[3],T22[3],T23[3],T24[3],T25[],T26[3],T27[3],T28[],T29[3],T30[3],T31[],T32[3],T33[3],T34[3],T35[],T36[3],T37[],T38[3],T39[3],T40[3],T41[3],T42[],T43[3],T44[3],T45[],T46[3],T47[3],T48[],T49[3],T50[3],T51[3],T52[],T53[3],T54[],T55[3],T56[3],T57[3],T58[3],T59[],T60[3],T61[3],T62[],T63[3],T64[3],T65[],T66[3],T67[3],T68[3],T69[3])<Sqrt((T0 * T0 * Σ(i0=0..2)<((Σ(i2=0..2)<(((δ_{i0,i2}) - ((T1 * T1 * ((T2_{i0} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i0}) - (T5_{i0}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i0}) * (1) / ( Sqrt((T1 * T1 * Σ(i7=0..2)<((((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7}) * ((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7})))>(i7=0..2)))) * ((T2_{i2} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i2}) - (T5_{i2}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i2}) * (1) / ( Sqrt((T1 * T1 * Σ(i13=0..2)<((((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13}) * ((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13})))>(i13=0..2)))))) * T69_{i2}))>(i2=0..2) * Σ(i2=0..2)<(((δ_{i0,i2}) - ((T1 * T1 * ((T2_{i0} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i0}) - (T5_{i0}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i0}) * (1) / ( Sqrt((T1 * T1 * Σ(i7=0..2)<((((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7}) * ((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T1 * (T2_{i7}) - (T5_{i7}))) / ( (T1 * T1 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))))) - (T5_{i7})))>(i7=0..2)))) * ((T2_{i2} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i2}) - (T5_{i2}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i2}) * (1) / ( Sqrt((T1 * T1 * Σ(i13=0..2)<((((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13}) * ((T2_{i13} + ((T3) - (Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)) * ((T1 * (T2_{i13}) - (T5_{i13}))) / ( (T1 * T1 * Σ(i18=0..2)<(((T2_{i18}) - (T5_{i18}) * (T2_{i18}) - (T5_{i18})))>(i18=0..2)))))) - (T5_{i13})))>(i13=0..2)))))) * T69_{i2}))>(i2=0..2)))>(i0=0..2)))> (hh180B,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD);
          bool _t1961#1 = GT<real>(_t195F,rad1805);
          if _t1961 then goto ASSIGN1ACE else goto JOIN1963
        ASSIGN1ACE:  preds = [COND1972]
          real hh1968#1 = λ(T0[],T1[],T2[],T3[],T4[3],T5[],T6[3],T7[3],T8[3],T9[3],T10[],T11[3],T12[3],T13[],T14[3],T15[3],T16[],T17[3],T18[3],T19[3],T20[],T21[3],T22[],T23[3],T24[3],T25[3],T26[3],T27[],T28[3],T29[3],T30[],T31[3],T32[3],T33[],T34[3],T35[3],T36[3],T37[],T38[3],T39[],T40[3],T41[3],T42[3],T43[3],T44[],T45[3],T46[3],T47[],T48[3],T49[3],T50[],T51[3],T52[3],T53[3],T54[],T55[3],T56[],T57[3],T58[3],T59[3],T60[3],T61[],T62[3],T63[3],T64[],T65[3],T66[3],T67[],T68[3],T69[3],T70[3],T71[3])<(T0 * (T1) / ( Sqrt((T0 * T0 * Σ(i0=0..2)<((Σ(i2=0..2)<(((δ_{i0,i2}) - ((T3 * T3 * ((T4_{i0} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i0}) - (T7_{i0}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i0}) * (1) / ( Sqrt((T3 * T3 * Σ(i7=0..2)<((((T4_{i7} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i7}) - (T7_{i7}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i7}) * ((T4_{i7} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i7}) - (T7_{i7}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i7})))>(i7=0..2)))) * ((T4_{i2} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i2}) - (T7_{i2}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i2}) * (1) / ( Sqrt((T3 * T3 * Σ(i13=0..2)<((((T4_{i13} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i13}) - (T7_{i13}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i13}) * ((T4_{i13} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i13}) - (T7_{i13}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i13})))>(i13=0..2)))))) * T71_{i2}))>(i2=0..2) * Σ(i2=0..2)<(((δ_{i0,i2}) - ((T3 * T3 * ((T4_{i0} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i0}) - (T7_{i0}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i0}) * (1) / ( Sqrt((T3 * T3 * Σ(i7=0..2)<((((T4_{i7} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i7}) - (T7_{i7}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i7}) * ((T4_{i7} + ((T5) - (Σ(i11=0..2)<(((T4_{i11}) - (T7_{i11}) * (T4_{i11}) - (T7_{i11})))>(i11=0..2)) * ((T3 * (T4_{i7}) - (T7_{i7}))) / ( (T3 * T3 * Σ(i12=0..2)<(((T4_{i12}) - (T7_{i12}) * (T4_{i12}) - (T7_{i12})))>(i12=0..2)))))) - (T7_{i7})))>(i7=0..2)))) * ((T4_{i2} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i2}) - (T7_{i2}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i2}) * (1) / ( Sqrt((T3 * T3 * Σ(i13=0..2)<((((T4_{i13} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i13}) - (T7_{i13}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i13}) * ((T4_{i13} + ((T5) - (Σ(i17=0..2)<(((T4_{i17}) - (T7_{i17}) * (T4_{i17}) - (T7_{i17})))>(i17=0..2)) * ((T3 * (T4_{i13}) - (T7_{i13}))) / ( (T3 * T3 * Σ(i18=0..2)<(((T4_{i18}) - (T7_{i18}) * (T4_{i18}) - (T7_{i18})))>(i18=0..2)))))) - (T7_{i13})))>(i13=0..2)))))) * T71_{i2}))>(i2=0..2)))>(i0=0..2)))))> (hh180B,rad1805,hh180B,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD);
          tensor[3] es196F#1 = λ(T0[],T1[],T2[],T3[3],T4[],T5[3],T6[3],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3],T15[],T16[3],T17[3],T18[3],T19[],T20[3],T21[],T22[3],T23[3],T24[3],T25[3],T26[],T27[3],T28[3],T29[],T30[3],T31[3],T32[],T33[3],T34[3],T35[3],T36[],T37[3],T38[],T39[3],T40[3],T41[3],T42[3],T43[],T44[3],T45[3],T46[],T47[3],T48[3],T49[],T50[3],T51[3],T52[3],T53[],T54[3],T55[],T56[3],T57[3],T58[3],T59[3],T60[],T61[3],T62[3],T63[],T64[3],T65[3],T66[],T67[3],T68[3],T69[3],T70[3],T71[],T72[],T73[3],T74[],T75[3],T76[3],T77[3],T78[3],T79[],T80[3],T81[3],T82[],T83[3],T84[3],T85[],T86[3],T87[3],T88[3],T89[],T90[3],T91[],T92[3],T93[3],T94[3],T95[3],T96[],T97[3],T98[3],T99[],T100[3],T101[3],T102[],T103[3],T104[3],T105[3],T106[],T107[3],T108[],T109[3],T110[3],T111[3],T112[3],T113[],T114[3],T115[3],T116[],T117[3],T118[3],T119[],T120[3],T121[3],T122[3],T123[],T124[3],T125[],T126[3],T127[3],T128[3],T129[3],T130[],T131[3],T132[3],T133[],T134[3],T135[3],T136[],T137[3],T138[3],T139[3],T140[3])<(T1 * (T0) / ( Sqrt((T1 * T1 * Σ(i1=0..2)<((Σ(i3=0..2)<(((δ_{i1,i3}) - ((T2 * T2 * ((T3_{i1} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i1}) - (T6_{i1}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i1}) * (1) / ( Sqrt((T2 * T2 * Σ(i8=0..2)<((((T3_{i8} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i8}) - (T6_{i8}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i8}) * ((T3_{i8} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i8}) - (T6_{i8}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i8})))>(i8=0..2)))) * ((T3_{i3} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i3}) - (T6_{i3}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i3}) * (1) / ( Sqrt((T2 * T2 * Σ(i14=0..2)<((((T3_{i14} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i14}) - (T6_{i14}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i14}) * ((T3_{i14} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i14}) - (T6_{i14}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i14})))>(i14=0..2)))))) * T70_{i3}))>(i3=0..2) * Σ(i3=0..2)<(((δ_{i1,i3}) - ((T2 * T2 * ((T3_{i1} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i1}) - (T6_{i1}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i1}) * (1) / ( Sqrt((T2 * T2 * Σ(i8=0..2)<((((T3_{i8} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i8}) - (T6_{i8}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i8}) * ((T3_{i8} + ((T4) - (Σ(i12=0..2)<(((T3_{i12}) - (T6_{i12}) * (T3_{i12}) - (T6_{i12})))>(i12=0..2)) * ((T2 * (T3_{i8}) - (T6_{i8}))) / ( (T2 * T2 * Σ(i13=0..2)<(((T3_{i13}) - (T6_{i13}) * (T3_{i13}) - (T6_{i13})))>(i13=0..2)))))) - (T6_{i8})))>(i8=0..2)))) * ((T3_{i3} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i3}) - (T6_{i3}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i3}) * (1) / ( Sqrt((T2 * T2 * Σ(i14=0..2)<((((T3_{i14} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i14}) - (T6_{i14}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i14}) * ((T3_{i14} + ((T4) - (Σ(i18=0..2)<(((T3_{i18}) - (T6_{i18}) * (T3_{i18}) - (T6_{i18})))>(i18=0..2)) * ((T2 * (T3_{i14}) - (T6_{i14}))) / ( (T2 * T2 * Σ(i19=0..2)<(((T3_{i19}) - (T6_{i19}) * (T3_{i19}) - (T6_{i19})))>(i19=0..2)))))) - (T6_{i14})))>(i14=0..2)))))) * T70_{i3}))>(i3=0..2)))>(i1=0..2)))) * Σ(i21=0..2)<(((δ_{i0,i21}) - ((T2 * T2 * ((T3_{i0} + ((T4) - (Σ(i30=0..2)<(((T3_{i30}) - (T6_{i30}) * (T3_{i30}) - (T6_{i30})))>(i30=0..2)) * ((T2 * (T3_{i0}) - (T6_{i0}))) / ( (T2 * T2 * Σ(i31=0..2)<(((T3_{i31}) - (T6_{i31}) * (T3_{i31}) - (T6_{i31})))>(i31=0..2)))))) - (T6_{i0}) * (1) / ( Sqrt((T2 * T2 * Σ(i26=0..2)<((((T3_{i26} + ((T4) - (Σ(i30=0..2)<(((T3_{i30}) - (T6_{i30}) * (T3_{i30}) - (T6_{i30})))>(i30=0..2)) * ((T2 * (T3_{i26}) - (T6_{i26}))) / ( (T2 * T2 * Σ(i31=0..2)<(((T3_{i31}) - (T6_{i31}) * (T3_{i31}) - (T6_{i31})))>(i31=0..2)))))) - (T6_{i26}) * ((T3_{i26} + ((T4) - (Σ(i30=0..2)<(((T3_{i30}) - (T6_{i30}) * (T3_{i30}) - (T6_{i30})))>(i30=0..2)) * ((T2 * (T3_{i26}) - (T6_{i26}))) / ( (T2 * T2 * Σ(i31=0..2)<(((T3_{i31}) - (T6_{i31}) * (T3_{i31}) - (T6_{i31})))>(i31=0..2)))))) - (T6_{i26})))>(i26=0..2)))) * ((T3_{i21} + ((T4) - (Σ(i36=0..2)<(((T3_{i36}) - (T6_{i36}) * (T3_{i36}) - (T6_{i36})))>(i36=0..2)) * ((T2 * (T3_{i21}) - (T6_{i21}))) / ( (T2 * T2 * Σ(i37=0..2)<(((T3_{i37}) - (T6_{i37}) * (T3_{i37}) - (T6_{i37})))>(i37=0..2)))))) - (T6_{i21}) * (1) / ( Sqrt((T2 * T2 * Σ(i32=0..2)<((((T3_{i32} + ((T4) - (Σ(i36=0..2)<(((T3_{i36}) - (T6_{i36}) * (T3_{i36}) - (T6_{i36})))>(i36=0..2)) * ((T2 * (T3_{i32}) - (T6_{i32}))) / ( (T2 * T2 * Σ(i37=0..2)<(((T3_{i37}) - (T6_{i37}) * (T3_{i37}) - (T6_{i37})))>(i37=0..2)))))) - (T6_{i32}) * ((T3_{i32} + ((T4) - (Σ(i36=0..2)<(((T3_{i36}) - (T6_{i36}) * (T3_{i36}) - (T6_{i36})))>(i36=0..2)) * ((T2 * (T3_{i32}) - (T6_{i32}))) / ( (T2 * T2 * Σ(i37=0..2)<(((T3_{i37}) - (T6_{i37}) * (T3_{i37}) - (T6_{i37})))>(i37=0..2)))))) - (T6_{i32})))>(i32=0..2)))))) * T70_{i21}))>(i21=0..2))>_{3} (rad1805,hh180B,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD,hh180B,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD);
          goto JOIN1963
        JOIN1963:  preds = [ASSIGN1ACF,COND1972]
          tensor[3] es1970#32 = phi(es196F,es195D)
          real hh1969#2 = phi(hh1968,hh180B)
          real _t1995#1 = λ(T0[],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[],T8[3],T9[3],T10[],T11[3],T12[3],T13[],T14[3],T15[3],T16[3],T17[3],T18[3],T19[],T20[3],T21[3],T22[3],T23[3],T24[],T25[3],T26[3],T27[],T28[3],T29[3],T30[],T31[3],T32[3],T33[3],T34[3],T35[],T36[3],T37[],T38[3],T39[3],T40[3],T41[3],T42[],T43[3],T44[3],T45[],T46[3],T47[3],T48[],T49[3],T50[3],T51[3],T52[3],T53[],T54[3],T55[],T56[3],T57[3],T58[3],T59[3],T60[],T61[3],T62[3],T63[],T64[3],T65[3],T66[],T67[3],T68[3],T69[3],T70[3],T71[],T72[3],T73[],T74[3],T75[3],T76[3],T77[3],T78[],T79[3],T80[3],T81[],T82[3],T83[3],T84[],T85[3],T86[3],T87[3],T88[3],T89[3])<(Sqrt(Σ(i0=0..2)<(((T0) - (Σ(i1=0..2)<((((T1_{i1} + ((T0) - (Σ(i5=0..2)<(((T1_{i5}) - (T4_{i5}) * (T1_{i5}) - (T4_{i5})))>(i5=0..2)) * ((T7 * (T1_{i1}) - (T4_{i1}))) / ( (T7 * T7 * Σ(i6=0..2)<(((T1_{i6}) - (T4_{i6}) * (T1_{i6}) - (T4_{i6})))>(i6=0..2)))) + T16_{i1})) - (T4_{i1}) * ((T1_{i1} + ((T0) - (Σ(i10=0..2)<(((T1_{i10}) - (T4_{i10}) * (T1_{i10}) - (T4_{i10})))>(i10=0..2)) * ((T7 * (T1_{i1}) - (T4_{i1}))) / ( (T7 * T7 * Σ(i11=0..2)<(((T1_{i11}) - (T4_{i11}) * (T1_{i11}) - (T4_{i11})))>(i11=0..2)))) + T16_{i1})) - (T4_{i1})))>(i1=0..2)) * ((T7 * ((T1_{i0} + ((T0) - (Σ(i17=0..2)<(((T1_{i17}) - (T4_{i17}) * (T1_{i17}) - (T4_{i17})))>(i17=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i18=0..2)<(((T1_{i18}) - (T4_{i18}) * (T1_{i18}) - (T4_{i18})))>(i18=0..2)))) + T16_{i0})) - (T4_{i0}))) / ( (T7 * T7 * Σ(i18=0..2)<((((T1_{i18} + ((T0) - (Σ(i23=0..2)<(((T1_{i23}) - (T4_{i23}) * (T1_{i23}) - (T4_{i23})))>(i23=0..2)) * ((T7 * (T1_{i18}) - (T4_{i18}))) / ( (T7 * T7 * Σ(i24=0..2)<(((T1_{i24}) - (T4_{i24}) * (T1_{i24}) - (T4_{i24})))>(i24=0..2)))) + T16_{i18})) - (T4_{i18}) * ((T1_{i18} + ((T0) - (Σ(i29=0..2)<(((T1_{i29}) - (T4_{i29}) * (T1_{i29}) - (T4_{i29})))>(i29=0..2)) * ((T7 * (T1_{i18}) - (T4_{i18}))) / ( (T7 * T7 * Σ(i30=0..2)<(((T1_{i30}) - (T4_{i30}) * (T1_{i30}) - (T4_{i30})))>(i30=0..2)))) + T16_{i18})) - (T4_{i18})))>(i18=0..2))) * (T0) - (Σ(i1=0..2)<((((T1_{i1} + ((T0) - (Σ(i5=0..2)<(((T1_{i5}) - (T4_{i5}) * (T1_{i5}) - (T4_{i5})))>(i5=0..2)) * ((T7 * (T1_{i1}) - (T4_{i1}))) / ( (T7 * T7 * Σ(i6=0..2)<(((T1_{i6}) - (T4_{i6}) * (T1_{i6}) - (T4_{i6})))>(i6=0..2)))) + T16_{i1})) - (T4_{i1}) * ((T1_{i1} + ((T0) - (Σ(i10=0..2)<(((T1_{i10}) - (T4_{i10}) * (T1_{i10}) - (T4_{i10})))>(i10=0..2)) * ((T7 * (T1_{i1}) - (T4_{i1}))) / ( (T7 * T7 * Σ(i11=0..2)<(((T1_{i11}) - (T4_{i11}) * (T1_{i11}) - (T4_{i11})))>(i11=0..2)))) + T16_{i1})) - (T4_{i1})))>(i1=0..2)) * ((T7 * ((T1_{i0} + ((T0) - (Σ(i17=0..2)<(((T1_{i17}) - (T4_{i17}) * (T1_{i17}) - (T4_{i17})))>(i17=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i18=0..2)<(((T1_{i18}) - (T4_{i18}) * (T1_{i18}) - (T4_{i18})))>(i18=0..2)))) + T16_{i0})) - (T4_{i0}))) / ( (T7 * T7 * Σ(i18=0..2)<((((T1_{i18} + ((T0) - (Σ(i23=0..2)<(((T1_{i23}) - (T4_{i23}) * (T1_{i23}) - (T4_{i23})))>(i23=0..2)) * ((T7 * (T1_{i18}) - (T4_{i18}))) / ( (T7 * T7 * Σ(i24=0..2)<(((T1_{i24}) - (T4_{i24}) * (T1_{i24}) - (T4_{i24})))>(i24=0..2)))) + T16_{i18})) - (T4_{i18}) * ((T1_{i18} + ((T0) - (Σ(i29=0..2)<(((T1_{i29}) - (T4_{i29}) * (T1_{i29}) - (T4_{i29})))>(i29=0..2)) * ((T7 * (T1_{i18}) - (T4_{i18}))) / ( (T7 * T7 * Σ(i30=0..2)<(((T1_{i30}) - (T4_{i30}) * (T1_{i30}) - (T4_{i30})))>(i30=0..2)))) + T16_{i18})) - (T4_{i18})))>(i18=0..2)))))>(i0=0..2))) / ( Sqrt(Σ(i30=0..2)<((T16_{i30} * T16_{i30}))>(i30=0..2)))> (v01803,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,es1970);
          bool _t1999#1 = GT<real>(_t1995,_t181B);
          if _t1999 then goto ASSIGN1A85 else goto JOIN199B
        ASSIGN1A85:  preds = [COND19A9]
          real hh199E#1 = λ(T0[],T1[])<(T0 * T1)> (hh1969,_t181B);
          self.pos = pos18CD;
          self._pos = pos18CD;
          self.hh = hh199E;
          self.step = step18D1;
          active
          goto JOIN199B
        JOIN199B:  preds = [*ACTIVE19A1,COND19A9]
          real hh199F#2 = phi(hh1969)
          tensor[3] up19AC#1 = λ(T0[],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[],T8[3],T9[3],T10[],T11[3],T12[3],T13[],T14[3],T15[3],T16[3],T17[3],T18[3],T19[],T20[3],T21[3],T22[3],T23[3],T24[],T25[3],T26[3],T27[],T28[3],T29[3],T30[],T31[3],T32[3],T33[3],T34[3],T35[],T36[3],T37[],T38[3],T39[3],T40[3],T41[3],T42[],T43[3],T44[3],T45[],T46[3],T47[3],T48[],T49[3],T50[3],T51[3],T52[3],T53[],T54[3],T55[],T56[3],T57[3],T58[3],T59[3],T60[],T61[3],T62[3],T63[],T64[3],T65[3],T66[],T67[3],T68[3],T69[3],T70[3],T71[],T72[3],T73[],T74[3],T75[3],T76[3],T77[3],T78[],T79[3],T80[3],T81[],T82[3],T83[3],T84[],T85[3],T86[3],T87[3],T88[3],T89[3])<(((T0) - (Σ(i2=0..2)<((((T1_{i2} + ((T0) - (Σ(i6=0..2)<(((T1_{i6}) - (T4_{i6}) * (T1_{i6}) - (T4_{i6})))>(i6=0..2)) * ((T7 * (T1_{i2}) - (T4_{i2}))) / ( (T7 * T7 * Σ(i7=0..2)<(((T1_{i7}) - (T4_{i7}) * (T1_{i7}) - (T4_{i7})))>(i7=0..2)))) + T16_{i2})) - (T4_{i2}) * ((T1_{i2} + ((T0) - (Σ(i11=0..2)<(((T1_{i11}) - (T4_{i11}) * (T1_{i11}) - (T4_{i11})))>(i11=0..2)) * ((T7 * (T1_{i2}) - (T4_{i2}))) / ( (T7 * T7 * Σ(i12=0..2)<(((T1_{i12}) - (T4_{i12}) * (T1_{i12}) - (T4_{i12})))>(i12=0..2)))) + T16_{i2})) - (T4_{i2})))>(i2=0..2)) * ((T7 * ((T1_{i0} + ((T0) - (Σ(i18=0..2)<(((T1_{i18}) - (T4_{i18}) * (T1_{i18}) - (T4_{i18})))>(i18=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i19=0..2)<(((T1_{i19}) - (T4_{i19}) * (T1_{i19}) - (T4_{i19})))>(i19=0..2)))) + T16_{i0})) - (T4_{i0}))) / ( (T7 * T7 * Σ(i19=0..2)<((((T1_{i19} + ((T0) - (Σ(i24=0..2)<(((T1_{i24}) - (T4_{i24}) * (T1_{i24}) - (T4_{i24})))>(i24=0..2)) * ((T7 * (T1_{i19}) - (T4_{i19}))) / ( (T7 * T7 * Σ(i25=0..2)<(((T1_{i25}) - (T4_{i25}) * (T1_{i25}) - (T4_{i25})))>(i25=0..2)))) + T16_{i19})) - (T4_{i19}) * ((T1_{i19} + ((T0) - (Σ(i30=0..2)<(((T1_{i30}) - (T4_{i30}) * (T1_{i30}) - (T4_{i30})))>(i30=0..2)) * ((T7 * (T1_{i19}) - (T4_{i19}))) / ( (T7 * T7 * Σ(i31=0..2)<(((T1_{i31}) - (T4_{i31}) * (T1_{i31}) - (T4_{i31})))>(i31=0..2)))) + T16_{i19})) - (T4_{i19})))>(i19=0..2)))) + T89_{i0})>_{3} (v01803,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,es1970);
          tensor[3] pos19AE#2 = λ(T0[3],T1[],T2[3],T3[3],T4[3],T5[3],T6[],T7[3],T8[3],T9[],T10[3],T11[3],T12[],T13[3],T14[3],T15[],T16[3],T17[],T18[3],T19[3],T20[3],T21[3],T22[],T23[3],T24[3],T25[],T26[3],T27[3],T28[],T29[3],T30[3],T31[3],T32[3],T33[3],T34[],T35[3],T36[3],T37[3],T38[3],T39[],T40[3],T41[3],T42[],T43[3],T44[3],T45[],T46[3],T47[3],T48[3],T49[3],T50[],T51[3],T52[],T53[3],T54[3],T55[3],T56[3],T57[],T58[3],T59[3],T60[],T61[3],T62[3],T63[],T64[3],T65[3],T66[3],T67[3],T68[],T69[3],T70[],T71[3],T72[3],T73[3],T74[3],T75[],T76[3],T77[3],T78[],T79[3],T80[3],T81[],T82[3],T83[3],T84[3],T85[3],T86[],T87[3],T88[],T89[3],T90[3],T91[3],T92[3],T93[],T94[3],T95[3],T96[],T97[3],T98[3],T99[],T100[3],T101[3],T102[3],T103[3],T104[3])<(T0_{i0} + ((T1) - (Σ(i3=0..2)<(((T0_{i3}) - (T3_{i3}) * (T0_{i3}) - (T3_{i3})))>(i3=0..2)) * ((T6 * (T0_{i0}) - (T3_{i0}))) / ( (T6 * T6 * Σ(i4=0..2)<(((T0_{i4}) - (T3_{i4}) * (T0_{i4}) - (T3_{i4})))>(i4=0..2)))) + ((T1) - (Σ(i6=0..2)<((((T0_{i6} + ((T1) - (Σ(i10=0..2)<(((T0_{i10}) - (T3_{i10}) * (T0_{i10}) - (T3_{i10})))>(i10=0..2)) * ((T6 * (T0_{i6}) - (T3_{i6}))) / ( (T6 * T6 * Σ(i11=0..2)<(((T0_{i11}) - (T3_{i11}) * (T0_{i11}) - (T3_{i11})))>(i11=0..2)))) + T31_{i6})) - (T3_{i6}) * ((T0_{i6} + ((T1) - (Σ(i15=0..2)<(((T0_{i15}) - (T3_{i15}) * (T0_{i15}) - (T3_{i15})))>(i15=0..2)) * ((T6 * (T0_{i6}) - (T3_{i6}))) / ( (T6 * T6 * Σ(i16=0..2)<(((T0_{i16}) - (T3_{i16}) * (T0_{i16}) - (T3_{i16})))>(i16=0..2)))) + T31_{i6})) - (T3_{i6})))>(i6=0..2)) * ((T6 * ((T0_{i0} + ((T1) - (Σ(i22=0..2)<(((T0_{i22}) - (T3_{i22}) * (T0_{i22}) - (T3_{i22})))>(i22=0..2)) * ((T6 * (T0_{i0}) - (T3_{i0}))) / ( (T6 * T6 * Σ(i23=0..2)<(((T0_{i23}) - (T3_{i23}) * (T0_{i23}) - (T3_{i23})))>(i23=0..2)))) + T31_{i0})) - (T3_{i0}))) / ( (T6 * T6 * Σ(i23=0..2)<((((T0_{i23} + ((T1) - (Σ(i28=0..2)<(((T0_{i28}) - (T3_{i28}) * (T0_{i28}) - (T3_{i28})))>(i28=0..2)) * ((T6 * (T0_{i23}) - (T3_{i23}))) / ( (T6 * T6 * Σ(i29=0..2)<(((T0_{i29}) - (T3_{i29}) * (T0_{i29}) - (T3_{i29})))>(i29=0..2)))) + T31_{i23})) - (T3_{i23}) * ((T0_{i23} + ((T1) - (Σ(i34=0..2)<(((T0_{i34}) - (T3_{i34}) * (T0_{i34}) - (T3_{i34})))>(i34=0..2)) * ((T6 * (T0_{i23}) - (T3_{i23}))) / ( (T6 * T6 * Σ(i35=0..2)<(((T0_{i35}) - (T3_{i35}) * (T0_{i35}) - (T3_{i35})))>(i35=0..2)))) + T31_{i23})) - (T3_{i23})))>(i23=0..2)))) + T31_{i0})>_{3} (pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,v01803,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,es1970);
          particle[] _t19B2#1 = SphereQuery<3,particle>(pos19AE,rad1805);
        FOREACH19B8:  preds = [ASSIGN1A88,NEXT19D1]
          foreach (P19B6 in _t19B2) on exit goto ASSIGN1A89
            real accum19B7#2 = phi(oldE18D3,accum19CF)
          tensor[3] _t19B9#1 = P19B6.pos;
          real _t19C3#1 = 0.1e1;
          real accum19CF#1 = λ(T0[],T1[],T2[3],T3[],T4[3],T5[3],T6[3],T7[3],T8[],T9[3],T10[3],T11[],T12[3],T13[3],T14[],T15[3],T16[3],T17[],T18[3],T19[],T20[3],T21[3],T22[3],T23[3],T24[],T25[3],T26[3],T27[],T28[3],T29[3],T30[],T31[3],T32[3],T33[3],T34[3],T35[3],T36[],T37[3],T38[3],T39[3],T40[3],T41[],T42[3],T43[3],T44[],T45[3],T46[3],T47[],T48[3],T49[3],T50[3],T51[3],T52[],T53[3],T54[],T55[3],T56[3],T57[3],T58[3],T59[],T60[3],T61[3],T62[],T63[3],T64[3],T65[],T66[3],T67[3],T68[3],T69[3],T70[],T71[3],T72[],T73[3],T74[3],T75[3],T76[3],T77[],T78[3],T79[3],T80[],T81[3],T82[3],T83[],T84[3],T85[3],T86[3],T87[3],T88[],T89[3],T90[],T91[3],T92[3],T93[3],T94[3],T95[],T96[3],T97[3],T98[],T99[3],T100[3],T101[],T102[3],T103[3],T104[3],T105[3],T106[3],T107[3],T108[])<(T0 + ((T1) - ((Sqrt(Σ(i0=0..2)<((((T2_{i0} + ((T3) - (Σ(i4=0..2)<(((T2_{i4}) - (T5_{i4}) * (T2_{i4}) - (T5_{i4})))>(i4=0..2)) * ((T8 * (T2_{i0}) - (T5_{i0}))) / ( (T8 * T8 * Σ(i5=0..2)<(((T2_{i5}) - (T5_{i5}) * (T2_{i5}) - (T5_{i5})))>(i5=0..2)))) + ((T3) - (Σ(i7=0..2)<((((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T8 * (T2_{i7}) - (T5_{i7}))) / ( (T8 * T8 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))) + T33_{i7})) - (T5_{i7}) * ((T2_{i7} + ((T3) - (Σ(i16=0..2)<(((T2_{i16}) - (T5_{i16}) * (T2_{i16}) - (T5_{i16})))>(i16=0..2)) * ((T8 * (T2_{i7}) - (T5_{i7}))) / ( (T8 * T8 * Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)))) + T33_{i7})) - (T5_{i7})))>(i7=0..2)) * ((T8 * ((T2_{i0} + ((T3) - (Σ(i23=0..2)<(((T2_{i23}) - (T5_{i23}) * (T2_{i23}) - (T5_{i23})))>(i23=0..2)) * ((T8 * (T2_{i0}) - (T5_{i0}))) / ( (T8 * T8 * Σ(i24=0..2)<(((T2_{i24}) - (T5_{i24}) * (T2_{i24}) - (T5_{i24})))>(i24=0..2)))) + T33_{i0})) - (T5_{i0}))) / ( (T8 * T8 * Σ(i24=0..2)<((((T2_{i24} + ((T3) - (Σ(i29=0..2)<(((T2_{i29}) - (T5_{i29}) * (T2_{i29}) - (T5_{i29})))>(i29=0..2)) * ((T8 * (T2_{i24}) - (T5_{i24}))) / ( (T8 * T8 * Σ(i30=0..2)<(((T2_{i30}) - (T5_{i30}) * (T2_{i30}) - (T5_{i30})))>(i30=0..2)))) + T33_{i24})) - (T5_{i24}) * ((T2_{i24} + ((T3) - (Σ(i35=0..2)<(((T2_{i35}) - (T5_{i35}) * (T2_{i35}) - (T5_{i35})))>(i35=0..2)) * ((T8 * (T2_{i24}) - (T5_{i24}))) / ( (T8 * T8 * Σ(i36=0..2)<(((T2_{i36}) - (T5_{i36}) * (T2_{i36}) - (T5_{i36})))>(i36=0..2)))) + T33_{i24})) - (T5_{i24})))>(i24=0..2)))) + T33_{i0})) - (T107_{i0}) * ((T2_{i0} + ((T3) - (Σ(i4=0..2)<(((T2_{i4}) - (T5_{i4}) * (T2_{i4}) - (T5_{i4})))>(i4=0..2)) * ((T8 * (T2_{i0}) - (T5_{i0}))) / ( (T8 * T8 * Σ(i5=0..2)<(((T2_{i5}) - (T5_{i5}) * (T2_{i5}) - (T5_{i5})))>(i5=0..2)))) + ((T3) - (Σ(i7=0..2)<((((T2_{i7} + ((T3) - (Σ(i11=0..2)<(((T2_{i11}) - (T5_{i11}) * (T2_{i11}) - (T5_{i11})))>(i11=0..2)) * ((T8 * (T2_{i7}) - (T5_{i7}))) / ( (T8 * T8 * Σ(i12=0..2)<(((T2_{i12}) - (T5_{i12}) * (T2_{i12}) - (T5_{i12})))>(i12=0..2)))) + T33_{i7})) - (T5_{i7}) * ((T2_{i7} + ((T3) - (Σ(i16=0..2)<(((T2_{i16}) - (T5_{i16}) * (T2_{i16}) - (T5_{i16})))>(i16=0..2)) * ((T8 * (T2_{i7}) - (T5_{i7}))) / ( (T8 * T8 * Σ(i17=0..2)<(((T2_{i17}) - (T5_{i17}) * (T2_{i17}) - (T5_{i17})))>(i17=0..2)))) + T33_{i7})) - (T5_{i7})))>(i7=0..2)) * ((T8 * ((T2_{i0} + ((T3) - (Σ(i23=0..2)<(((T2_{i23}) - (T5_{i23}) * (T2_{i23}) - (T5_{i23})))>(i23=0..2)) * ((T8 * (T2_{i0}) - (T5_{i0}))) / ( (T8 * T8 * Σ(i24=0..2)<(((T2_{i24}) - (T5_{i24}) * (T2_{i24}) - (T5_{i24})))>(i24=0..2)))) + T33_{i0})) - (T5_{i0}))) / ( (T8 * T8 * Σ(i24=0..2)<((((T2_{i24} + ((T3) - (Σ(i29=0..2)<(((T2_{i29}) - (T5_{i29}) * (T2_{i29}) - (T5_{i29})))>(i29=0..2)) * ((T8 * (T2_{i24}) - (T5_{i24}))) / ( (T8 * T8 * Σ(i30=0..2)<(((T2_{i30}) - (T5_{i30}) * (T2_{i30}) - (T5_{i30})))>(i30=0..2)))) + T33_{i24})) - (T5_{i24}) * ((T2_{i24} + ((T3) - (Σ(i35=0..2)<(((T2_{i35}) - (T5_{i35}) * (T2_{i35}) - (T5_{i35})))>(i35=0..2)) * ((T8 * (T2_{i24}) - (T5_{i24}))) / ( (T8 * T8 * Σ(i36=0..2)<(((T2_{i36}) - (T5_{i36}) * (T2_{i36}) - (T5_{i36})))>(i36=0..2)))) + T33_{i24})) - (T5_{i24})))>(i24=0..2)))) + T33_{i0})) - (T107_{i0})))>(i0=0..2))) / ( T108)))^4)> (accum19B7,_t19C3,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,v01803,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,es1970,_t19B9,rad1805);
          goto FOREACH19B8
        ASSIGN1A89:  preds = [FOREACH19B8]
          real _t19D4#1 = λ(T0[],T1[])<(T0) - (T1)> (accum19B7,oldE18DC);
          real _t19DE#1 = λ(T0[],T1[3],T2[],T3[3],T4[3],T5[3],T6[3],T7[],T8[3],T9[3],T10[],T11[3],T12[3],T13[],T14[3],T15[3],T16[],T17[3],T18[],T19[3],T20[3],T21[3],T22[3],T23[],T24[3],T25[3],T26[],T27[3],T28[3],T29[],T30[3],T31[3],T32[3],T33[3],T34[3],T35[],T36[3],T37[3],T38[3],T39[3],T40[],T41[3],T42[3],T43[],T44[3],T45[3],T46[],T47[3],T48[3],T49[3],T50[3],T51[],T52[3],T53[],T54[3],T55[3],T56[3],T57[3],T58[],T59[3],T60[3],T61[],T62[3],T63[3],T64[],T65[3],T66[3],T67[3],T68[3],T69[],T70[3],T71[],T72[3],T73[3],T74[3],T75[3],T76[],T77[3],T78[3],T79[],T80[3],T81[3],T82[],T83[3],T84[3],T85[3],T86[3],T87[],T88[3],T89[],T90[3],T91[3],T92[3],T93[3],T94[],T95[3],T96[3],T97[],T98[3],T99[3],T100[],T101[3],T102[3],T103[3],T104[3],T105[3],T106[3],T107[],T108[3],T109[3],T110[3],T111[3],T112[],T113[3],T114[3],T115[],T116[3],T117[3],T118[],T119[3],T120[3],T121[],T122[3],T123[],T124[3],T125[3],T126[3],T127[3],T128[],T129[3],T130[3],T131[],T132[3],T133[3],T134[],T135[3],T136[3],T137[3],T138[],T139[3],T140[],T141[3],T142[3],T143[3],T144[3],T145[],T146[3],T147[3],T148[],T149[3],T150[3],T151[],T152[3],T153[3],T154[3],T155[],T156[3],T157[],T158[3],T159[3],T160[3],T161[3],T162[],T163[3],T164[3],T165[],T166[3],T167[3],T168[],T169[3],T170[3],T171[3],T172[],T173[3],T174[],T175[3],T176[3],T177[3],T178[3],T179[],T180[3],T181[3],T182[],T183[3],T184[3],T185[],T186[3],T187[3],T188[3],T189[3])<(T0 * Σ(i0=0..2)<((((T1_{i0} + ((T2) - (Σ(i5=0..2)<(((T1_{i5}) - (T4_{i5}) * (T1_{i5}) - (T4_{i5})))>(i5=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i6=0..2)<(((T1_{i6}) - (T4_{i6}) * (T1_{i6}) - (T4_{i6})))>(i6=0..2)))) + ((T2) - (Σ(i8=0..2)<((((T1_{i8} + ((T2) - (Σ(i12=0..2)<(((T1_{i12}) - (T4_{i12}) * (T1_{i12}) - (T4_{i12})))>(i12=0..2)) * ((T7 * (T1_{i8}) - (T4_{i8}))) / ( (T7 * T7 * Σ(i13=0..2)<(((T1_{i13}) - (T4_{i13}) * (T1_{i13}) - (T4_{i13})))>(i13=0..2)))) + T32_{i8})) - (T4_{i8}) * ((T1_{i8} + ((T2) - (Σ(i17=0..2)<(((T1_{i17}) - (T4_{i17}) * (T1_{i17}) - (T4_{i17})))>(i17=0..2)) * ((T7 * (T1_{i8}) - (T4_{i8}))) / ( (T7 * T7 * Σ(i18=0..2)<(((T1_{i18}) - (T4_{i18}) * (T1_{i18}) - (T4_{i18})))>(i18=0..2)))) + T32_{i8})) - (T4_{i8})))>(i8=0..2)) * ((T7 * ((T1_{i0} + ((T2) - (Σ(i24=0..2)<(((T1_{i24}) - (T4_{i24}) * (T1_{i24}) - (T4_{i24})))>(i24=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i25=0..2)<(((T1_{i25}) - (T4_{i25}) * (T1_{i25}) - (T4_{i25})))>(i25=0..2)))) + T32_{i0})) - (T4_{i0}))) / ( (T7 * T7 * Σ(i25=0..2)<((((T1_{i25} + ((T2) - (Σ(i30=0..2)<(((T1_{i30}) - (T4_{i30}) * (T1_{i30}) - (T4_{i30})))>(i30=0..2)) * ((T7 * (T1_{i25}) - (T4_{i25}))) / ( (T7 * T7 * Σ(i31=0..2)<(((T1_{i31}) - (T4_{i31}) * (T1_{i31}) - (T4_{i31})))>(i31=0..2)))) + T32_{i25})) - (T4_{i25}) * ((T1_{i25} + ((T2) - (Σ(i36=0..2)<(((T1_{i36}) - (T4_{i36}) * (T1_{i36}) - (T4_{i36})))>(i36=0..2)) * ((T7 * (T1_{i25}) - (T4_{i25}))) / ( (T7 * T7 * Σ(i37=0..2)<(((T1_{i37}) - (T4_{i37}) * (T1_{i37}) - (T4_{i37})))>(i37=0..2)))) + T32_{i25})) - (T4_{i25})))>(i25=0..2)))) + T32_{i0})) - ((T1_{i0} + ((T2) - (Σ(i39=0..2)<(((T1_{i39}) - (T4_{i39}) * (T1_{i39}) - (T4_{i39})))>(i39=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i40=0..2)<(((T1_{i40}) - (T4_{i40}) * (T1_{i40}) - (T4_{i40})))>(i40=0..2)))))) * Neg(Σ(i42=0..2)<(((δ_{i0,i42}) - ((T7 * T7 * ((T1_{i0} + ((T2) - (Σ(i51=0..2)<(((T1_{i51}) - (T4_{i51}) * (T1_{i51}) - (T4_{i51})))>(i51=0..2)) * ((T7 * (T1_{i0}) - (T4_{i0}))) / ( (T7 * T7 * Σ(i52=0..2)<(((T1_{i52}) - (T4_{i52}) * (T1_{i52}) - (T4_{i52})))>(i52=0..2)))))) - (T4_{i0}) * (1) / ( Sqrt((T7 * T7 * Σ(i47=0..2)<((((T1_{i47} + ((T2) - (Σ(i51=0..2)<(((T1_{i51}) - (T4_{i51}) * (T1_{i51}) - (T4_{i51})))>(i51=0..2)) * ((T7 * (T1_{i47}) - (T4_{i47}))) / ( (T7 * T7 * Σ(i52=0..2)<(((T1_{i52}) - (T4_{i52}) * (T1_{i52}) - (T4_{i52})))>(i52=0..2)))))) - (T4_{i47}) * ((T1_{i47} + ((T2) - (Σ(i51=0..2)<(((T1_{i51}) - (T4_{i51}) * (T1_{i51}) - (T4_{i51})))>(i51=0..2)) * ((T7 * (T1_{i47}) - (T4_{i47}))) / ( (T7 * T7 * Σ(i52=0..2)<(((T1_{i52}) - (T4_{i52}) * (T1_{i52}) - (T4_{i52})))>(i52=0..2)))))) - (T4_{i47})))>(i47=0..2)))) * ((T1_{i42} + ((T2) - (Σ(i57=0..2)<(((T1_{i57}) - (T4_{i57}) * (T1_{i57}) - (T4_{i57})))>(i57=0..2)) * ((T7 * (T1_{i42}) - (T4_{i42}))) / ( (T7 * T7 * Σ(i58=0..2)<(((T1_{i58}) - (T4_{i58}) * (T1_{i58}) - (T4_{i58})))>(i58=0..2)))))) - (T4_{i42}) * (1) / ( Sqrt((T7 * T7 * Σ(i53=0..2)<((((T1_{i53} + ((T2) - (Σ(i57=0..2)<(((T1_{i57}) - (T4_{i57}) * (T1_{i57}) - (T4_{i57})))>(i57=0..2)) * ((T7 * (T1_{i53}) - (T4_{i53}))) / ( (T7 * T7 * Σ(i58=0..2)<(((T1_{i58}) - (T4_{i58}) * (T1_{i58}) - (T4_{i58})))>(i58=0..2)))))) - (T4_{i53}) * ((T1_{i53} + ((T2) - (Σ(i57=0..2)<(((T1_{i57}) - (T4_{i57}) * (T1_{i57}) - (T4_{i57})))>(i57=0..2)) * ((T7 * (T1_{i53}) - (T4_{i53}))) / ( (T7 * T7 * Σ(i58=0..2)<(((T1_{i58}) - (T4_{i58}) * (T1_{i58}) - (T4_{i58})))>(i58=0..2)))))) - (T4_{i53})))>(i53=0..2)))))) * T189_{i42}))>(i42=0..2))))>(i0=0..2))> (_t181B,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,v01803,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,es1970,_t1821,es1970,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,_t18BF,pos1809,v01803,pos1809,_t1821,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t18BF,pos1809,_t1821,_t1821,force18DD);
          bool _t19E0#1 = GT<real>(_t19D4,_t19DE);
          if _t19E0 then goto ASSIGN1A8C else goto JOIN19E2
        ASSIGN1A8C:  preds = [COND19F6]
          real hh19EB#1 = λ(T0[],T1[])<(T0 * T1)> (hh199F,_t181B);
          self.pos = pos18CD;
          self._pos = pos18CD;
          self.hh = hh19EB;
          self.step = step18D1;
          active
          goto JOIN19E2
        JOIN19E2:  preds = [*ACTIVE19EE,COND19F6]
          real hh19EC#1 = phi(hh199F)
          tensor[3] pos19E4#2 = phi(pos19AE)
          real _t19F7#1 = 0.11e1;
          real hh19F9#2 = λ(T0[],T1[])<(T0 * T1)> (hh19EC,_t19F7);
          int _t19FD#1 = 5;
          bool _t19FF#1 = LT<int>(nn18DE,_t19FD);
          if _t19FF then goto ASSIGN1AE7 else goto JOIN1A01
        ASSIGN1AE7:  preds = [COND1A0D]
          tensor[3] _t1A0A#1 = λ(T0[3],T1[],T2[],T3[3],T4[3])<(T0_{i0} + (T1 * T2 * T3_{i0} * (1) / ( Sqrt(Σ(i3=0..2)<((T3_{i3} * T3_{i3}))>(i3=0..2)))))>_{3} (pos19E4,_t181B,rad1805,es1970,es1970);
          new particle(_t1A0A,hh19F9);
          goto JOIN1A01
        JOIN1A01:  preds = [NEW1A0C,COND1A0D]
          goto JOIN1870
        ASSIGN185F:  preds = [COND186A]
          real _t185E#1 = 0.2e1;
          real _t1862#1 = λ(T0[],T1[3],T2[3])<Sqrt((T0 * T0 * Σ(i0=0..2)<(((T1_{i0}) - (T2_{i0}) * (T1_{i0}) - (T2_{i0})))>(i0=0..2)))> (_t185E,pos1809,_t1821);
          real _t1866#1 = 0.e0;
          bool _t1868#1 = EQ<real>(_t1862,_t1866);
          goto JOIN184F
        ASSIGN1843:  preds = [COND1844]
          bool _t1842#1 = false;
          goto JOIN1838
        ASSIGN1849:  preds = [COND184A]
          bool _t1848#1 = false;
          goto JOIN182E
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY17DA:  preds = []
      tensor[3][] ipos17D2#1 = globals.ipos174B;
    FOREACH17D5:  preds = [ASSIGN17D3,NEXT17D9]
      foreach (x17D4 in ipos17D2) on exit goto RETURN17DB
      real _t17D6#1 = 0.1e1;
      new particle(x17D4,_t17D6);
      goto FOREACH17D5
    RETURN17DB:  preds = [FOREACH17D5]
      return
## global update
  ENTRY1A63:  preds = []
    real rad1A19#1 = globals.rad1748;
    real eps1A18#1 = globals.eps1749;
    particle[] P1A1C#6 = Strands<particle,all>;
    (int res1A1D#1) = sum<int>(MAP sum177D (P1A1C));
    (int res1A23#1) = sum<int>(MAP sum1784 (P1A1C));
    (bool res1A29#2) = all(MAP all178B (P1A1C));
    (real res1A2F#1) = max<real>(MAP max1794 (P1A1C));
    (real res1A35#1) = max<real>(MAP max17A7 (P1A1C));
    (real res1A3B#1) = min<real>(MAP min17B9 (P1A1C));
    tensor[2] averageDist1A40#1 = <tensor[2]>[res1A3B,res1A35];
    string _t1A42#1 = "One run:";
    string _t1A44#4 = " and ";
    real _t1A46#2 = λ(T0[],T1[])<(T0) / ( T1)> (res1A2F,rad1A19);
    bool _t1A4C#2 = LT<real>(_t1A46,eps1A18);
    string _t1A50#1 = " of ";
    string _t1A54#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t1A42,res1A29,_t1A44,_t1A46,_t1A44,_t1A4C,_t1A44,res1A23,_t1A50,res1A1D,_t1A44,averageDist1A40,_t1A54);
    if res1A29 then goto COND1A61 else goto JOIN1A57
  COND1A61:  preds = [COND1A62]
    if _t1A4C then goto ASSIGN1A5E else goto JOIN1A5C
  ASSIGN1A5E:  preds = [COND1A61]
    string _t1A5D#1 = "CONVERGED!\n";
    Print<[string]>(_t1A5D);
    StabilizeAll;
    goto JOIN1A5C
  JOIN1A5C:  preds = [MASSIGN1A60,COND1A61]
    goto JOIN1A57
  JOIN1A57:  preds = [JOIN1A5C,COND1A62]
    continue
#### end program ####
##### mid-ir: after high-to-mid translation ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1AEA (meshData) = <no-default>
  input 0space0473_intermedateGlobal1AEB (space) = <no-default>
  input 0data0475_intermedateGlobal1AEC (data) = <no-default>
  input rad1AED (rad) = <default>
  input eps1AEE (eps) = <default>
  input v01AEF (v0) = <default>
  input ipos1AF0 (ipos) = <no-default>
## functions
  function int sum1E1D (particle P1E1E#1) {
    ENTRY1E1F:  preds = []
      int _t1E20#1 = P1E1E.test;
      return _t1E20
}
  function int sum1E25 (particle P1E26#1) {
    ENTRY1E27:  preds = []
      int _t1E28#1 = P1E26.testp;
      return _t1E28
}
  function bool all1E2D (particle P1E2E#1) {
    ENTRY1E2F:  preds = []
      bool _t1E30#1 = P1E2E.found;
      return _t1E30
}
  function real max1E35 (particle P1E36#1) {
    ENTRY1E37:  preds = []
      tensor[3] _t1E38#1 = P1E36.step;
      real op1_e3_l_11E3B#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (_t1E38);
      real _t1E3A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11E3B);
      return _t1E3A
}
  function real max1E41 (particle P1E42#1) {
    ENTRY1E43:  preds = []
      tensor[3] _t1E44#1 = P1E42.pos;
      real _t1E46#3 = 0.5e0;
      tensor[3] _t1E48#1 = <tensor[3]>[_t1E46,_t1E46,_t1E46];
      tensor[3] op1_e3_l_21E4B#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1E44,_t1E48);
      real op1_e3_l_41E4C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21E4B,op1_e3_l_21E4B);
      real _t1E4A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41E4C);
      return _t1E4A
}
  function real min1E53 (particle P1E54#1) {
    ENTRY1E55:  preds = []
      tensor[3] _t1E56#1 = P1E54.pos;
      real _t1E58#3 = 0.5e0;
      tensor[3] _t1E5A#1 = <tensor[3]>[_t1E58,_t1E58,_t1E58];
      tensor[3] op1_e3_l_21E5D#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1E56,_t1E5A);
      real op1_e3_l_41E5E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21E5D,op1_e3_l_21E5D);
      real _t1E5C#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41E5E);
      return _t1E5C
}
## input initialization
  ENTRY1AF1:  preds = []
    real rad1AF2#2 = 0.1e-1;
    globals.rad1AED = rad1AF2;
    globals.eps1AEE = rad1AF2;
    real v01AF6#1 = 0.625e-1;
    globals.v01AEF = v01AF6;
    return
## global-variable initialization
  ENTRY1AFA:  preds = []
    femData:Mesh meshData1AFB#2 = globals.meshData1AEA;
    int _t1AFD#1 = 0;
    int _t1AFF#1 = 1;
    int _t1B01#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData1AFB);
    int _t1B03#1 = ISub(_t1B01,_t1AFF);
    int[] _t1B05#1 = Range(_t1AFD,_t1B03);
    femData:MeshCell[] _t1B07#1 = <femData:MeshCell[]>{};
  FOREACH1B0A:  preds = [ASSIGN1B08,NEXT1B10]
    foreach (_t1B09 in _t1B05) on exit goto RETURN1B11
      femData:MeshCell[] _t1B0E#1 = phi(_t1B07,_t1B0D)
    femData:MeshCell _t1B0B#1 = LoadFem<femData:MeshCell>(meshData1AFB,_t1B09);
    femData:MeshCell[] _t1B0D#1 = Append<femData:MeshCell>(_t1B0E,_t1B0B);
    goto FOREACH1B0A
  RETURN1B11:  preds = [FOREACH1B0A]
    return
## strand
  strand particle (tensor[3] pos01B12#2, real hh01B13#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY1B1C:  preds = []
        tensor[3] step1B1D#1 = λ()<Z_{i0}>_{3} ();
        bool found1B1F#1 = false;
        int nfs1B21#2 = 0;
        int test1B23#1 = 1;
        self.pos = pos01B12;
        self._pos = pos01B12;
        self.hh = hh01B13;
        self.step = step1B1D;
        self.found = found1B1F;
        self.nfs = nfs1B21;
        self.test = test1B23;
        self.testp = nfs1B21;
        return
    end state init
    method update
        ENTRY1B2E:  preds = []
          real rad1B2F#12 = globals.rad1AED;
          real eps1B31#1 = globals.eps1AEE;
          real v01B33#21 = globals.v01AEF;
          tensor[3] pos1B35#36 = self.pos;
          real hh1B37#9 = self.hh;
          bool found1B39#3 = self.found;
          int nfs1B3B#3 = self.nfs;
          int testp1B3D#2 = self.testp;
          real _t1B3F#12 = 0.5e0;
          tensor[3] _t1B41#28 = <tensor[3]>[_t1B3F,_t1B3F,_t1B3F];
          tensor[3] mid1B43#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real _t1B45#1 = TensorIndex<tensor[3],[0]>(mid1B43);
          real _t1B47#1 = λ(T0[])<Abs(T0)> (_t1B45);
          bool _t1B49#1 = LTE<real>(_t1B47,_t1B3F);
          if _t1B49 then goto ASSIGN1B4D else goto ASSIGN1E0B
        ASSIGN1B4D:  preds = [COND1B4B]
          real _t1B4C#1 = TensorIndex<tensor[3],[1]>(mid1B43);
          real _t1B4E#1 = λ(T0[])<Abs(T0)> (_t1B4C);
          bool _t1B50#1 = LTE<real>(_t1B4E,_t1B3F);
          if _t1B50 then goto ASSIGN1B54 else goto ASSIGN1E0A
        ASSIGN1B54:  preds = [COND1B52]
          real _t1B53#1 = TensorIndex<tensor[3],[2]>(mid1B43);
          real _t1B55#1 = λ(T0[])<Abs(T0)> (_t1B53);
          bool _t1B57#1 = LTE<real>(_t1B55,_t1B3F);
          goto JOIN1B5B
        JOIN1B5B:  preds = [ASSIGN1B58,ASSIGN1E0A]
          bool _t1B59#1 = phi(_t1B57,_t1B5A)
          goto JOIN1B5E
        JOIN1B5E:  preds = [JOIN1B5B,ASSIGN1E0B]
          bool _t1B5C#1 = phi(_t1B59,_t1B5D)
          bool _t1B5F#1 = BNot(_t1B5C);
          if _t1B5F then goto ASSIGN1B63 else goto ASSIGN1DFE
        ASSIGN1B63:  preds = [COND1B61]
          bool _t1B62#1 = true;
          goto JOIN1B66
        JOIN1B66:  preds = [ASSIGN1B63,ASSIGN1E09]
          bool _t1B64#1 = phi(_t1B62,_t1B65)
          if _t1B64 then goto DIE1B68 else goto JOIN1B69
        DIE1B68:  preds = [COND1B67]
          die
          goto JOIN1B69
        JOIN1B69:  preds = [*DIE1B68,COND1B67]
          bool _t1B6A#1 = BNot(found1B39);
          if _t1B6A then goto ASSIGN1B6E else goto ASSIGN1BCA
        ASSIGN1B6E:  preds = [COND1B6C]
          real _t1B6D#6 = 0.2e1;
          tensor[3] op1_e3_l_141B70#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_161B71#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_141B70,op1_e3_l_141B70);
          tensor[3] op1_e3_l_211B72#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B6D,op1_e3_l_141B70);
          real op1_e3_l_221B73#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1B6D,op1_e3_l_161B71);
          real op1_e3_l_231B74#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_161B71);
          tensor[3] op1_e3_l_241B75#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_211B72,op1_e3_l_221B73);
          tensor[3] _t1B6F#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_231B74,op1_e3_l_241B75);
          tensor[3] op1_e3_l_151B7E#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_171B7F#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_151B7E,op1_e3_l_151B7E);
          tensor[3] op1_e3_l_221B80#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B6D,op1_e3_l_151B7E);
          real op1_e3_l_231B81#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1B6D,op1_e3_l_171B7F);
          real op1_e3_l_241B82#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_171B7F);
          tensor[3] op1_e3_l_251B83#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_221B80,op1_e3_l_231B81);
          tensor[3] op1_e3_l_261B84#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_241B82,op1_e3_l_251B83);
          tensor[3] pos1B7D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_261B84);
          tensor[3] op1_e3_l_151B8E#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_171B8F#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_151B8E,op1_e3_l_151B8E);
          tensor[3] op1_e3_l_251B90#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B6D,op1_e3_l_151B8E);
          real op1_e3_l_261B91#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1B6D,op1_e3_l_171B8F);
          tensor[3] op1_e3_l_331B92#2 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_251B90,op1_e3_l_261B91);
          real op1_e3_l_351B93#2 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_171B8F);
          real op1_e3_l_371B94#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_331B92,op1_e3_l_331B92);
          real op1_e3_l_381B95#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_351B93,op1_e3_l_351B93,op1_e3_l_371B94);
          real op1_e3_l_391B96#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_381B95);
          real _t1B8D#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_391B96);
          bool _t1BA1#1 = GT<real>(_t1B8D,eps1B31);
          if _t1BA1 then goto ASSIGN1BA5 else goto ASSIGN1BC7
        ASSIGN1BA5:  preds = [COND1BA3]
          int _t1BA4#1 = 1;
          int nfs1BA6#2 = IAdd(nfs1B3B,_t1BA4);
          int _t1BA8#1 = 10;
          bool _t1BAA#1 = GT<int>(nfs1BA6,_t1BA8);
          if _t1BAA then goto DIE1BAD else goto JOIN1BAE
        DIE1BAD:  preds = [COND1BAC]
          die
          goto JOIN1BAE
        JOIN1BAE:  preds = [*DIE1BAD,COND1BAC]
          goto JOIN1BB4
        JOIN1BB4:  preds = [JOIN1BAE,ASSIGN1BC8]
          int testp1BAF#1 = phi(testp1B3D,testp1BB0)
          int nfs1BB1#1 = phi(nfs1BA6,nfs1B3B)
          bool found1BB2#1 = phi(found1B39,found1BB3)
          goto JOIN1BBE
        JOIN1BBE:  preds = [JOIN1BB4,JOIN1DFC]
          int testp1BB5#1 = phi(testp1BAF,testp1B3D)
          int nfs1BB6#1 = phi(nfs1BB1,nfs1B3B)
          bool found1BB7#1 = phi(found1BB2,found1B39)
          tensor[3] step1BB8#1 = phi(_t1B6F,up1BB9)
          real hh1BBA#1 = phi(hh1B37,hh1BBB)
          tensor[3] pos1BBC#2 = phi(pos1B7D,pos1BBD)
          self.pos = pos1BBC;
          self._pos = pos1BBC;
          self.hh = hh1BBA;
          self.step = step1BB8;
          self.found = found1BB7;
          self.nfs = nfs1BB6;
          self.testp = testp1BB5;
          active
        ASSIGN1BC7:  preds = [COND1BA3]
          bool found1BB3#1 = true;
          int testp1BB0#1 = 1;
          goto JOIN1BB4
        ASSIGN1BCA:  preds = [COND1B6C]
          real _t1BC9#46 = 0.2e1;
          tensor[3] op1_e3_l_151BCC#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_171BCD#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_151BCC,op1_e3_l_151BCC);
          tensor[3] op1_e3_l_221BCE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_151BCC);
          real op1_e3_l_231BCF#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_171BCD);
          real op1_e3_l_241BD0#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_171BCD);
          tensor[3] op1_e3_l_251BD1#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_221BCE,op1_e3_l_231BCF);
          tensor[3] op1_e3_l_261BD2#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_241BD0,op1_e3_l_251BD1);
          tensor[3] pos1BCB#7 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_261BD2);
          tensor[3] step1BDB#4 = λ()<Z_{i0}>_{3} ();
          real oldE1BDD#4 = 0.e0;
          int nn1BDF#2 = 0;
          particle[] _t1BE1#1 = SphereQuery<3,particle>(pos1BCB,rad1B2F);
        FOREACH1BE4:  preds = [ASSIGN1BE2,NEXT1C36]
          foreach (P1BE3 in _t1BE1) on exit goto ASSIGN1C38
            int nn1C34#3 = phi(nn1BDF,nn1C33)
            tensor[3] force1C0D#6 = phi(step1BDB,force1C0C)
            real oldE1BEA#2 = phi(oldE1BDD,oldE1BE9)
          tensor[3] _t1BE5#2 = P1BE3.pos;
          real _t1BE7#3 = 0.1e1;
          tensor[3] op1_e3_l_191BEB#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_211BEC#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_191BEB,op1_e3_l_191BEB);
          tensor[3] op1_e3_l_261BED#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_191BEB);
          real op1_e3_l_271BEE#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_211BEC);
          real op1_e3_l_281BEF#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_211BEC);
          tensor[3] op1_e3_l_291BF0#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_261BED,op1_e3_l_271BEE);
          tensor[3] op1_e3_l_301BF1#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_281BEF,op1_e3_l_291BF0);
          tensor[3] op1_e3_l_311BF2#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_301BF1);
          tensor[3] op1_e3_l_451BF3#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1BE5,op1_e3_l_311BF2);
          real op1_e3_l_471BF4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_451BF3,op1_e3_l_451BF3);
          real op1_e3_l_481BF5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_471BF4);
          real op1_e3_l_491BF6#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_481BF5);
          real op1_e3_l_501BF7#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1BE7,op1_e3_l_491BF6);
          real op1_e3_l_511BF8#1 = λ(T0[])<(T0)^4> (op1_e3_l_501BF7);
          real oldE1BE9#1 = λ(T0[],T1[])<(T0 + T1)> (oldE1BEA,op1_e3_l_511BF8);
          int _t1C08#1 = -4;
          real _t1C0A#1 = IntToReal(_t1C08);
          tensor[3] op1_e3_l_541C0E#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_561C0F#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_541C0E,op1_e3_l_541C0E);
          tensor[3] op1_e3_l_611C10#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_541C0E);
          real op1_e3_l_621C11#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_561C0F);
          real op1_e3_l_631C12#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_561C0F);
          tensor[3] op1_e3_l_641C13#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_611C10,op1_e3_l_621C11);
          tensor[3] op1_e3_l_651C14#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_631C12,op1_e3_l_641C13);
          tensor[3] op1_e3_l_661C15#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_651C14);
          tensor[3] op1_e3_l_801C16#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1BE5,op1_e3_l_661C15);
          real op1_e3_l_821C17#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_801C16,op1_e3_l_801C16);
          real op1_e3_l_831C18#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_821C17);
          real op1_e3_l_841C19#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_831C18);
          real op1_e3_l_851C1A#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1BE7,op1_e3_l_841C19);
          real op1_e3_l_991C1B#1 = λ(T0[])<(T0)^3> (op1_e3_l_851C1A);
          real op1_e3_l_1001C1C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1BE7,rad1B2F);
          tensor[3] op1_e3_l_1311C1D#1 = λ(T0[],T1[],T2[],T3[3])<(T0 * T1 * T2 * T3_{i0})>_{3} (_t1C0A,op1_e3_l_991C1B,op1_e3_l_1001C1C,op1_e3_l_801C16);
          tensor[3] op1_e3_l_1331C1E#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1311C1D,op1_e3_l_831C18);
          tensor[3] force1C0C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (force1C0D,op1_e3_l_1331C1E);
          int _t1C31#1 = 1;
          int nn1C33#1 = IAdd(nn1C34,_t1C31);
          goto FOREACH1BE4
        ASSIGN1C38:  preds = [FOREACH1BE4]
          bool _t1C37#1 = EQ<int>(nn1BDF,nn1C34);
          if _t1C37 then goto ASSIGN1C3B else goto JOIN1C53
        ASSIGN1C3B:  preds = [COND1C39]
          real _t1C3A#1 = λ(T0[],T1[])<(T0 * T1)> (_t1B3F,rad1B2F);
          tensor[3] _t1C3C#1 = <tensor[3]>[_t1C3A,oldE1BDD,oldE1BDD];
          tensor[3] op1_e3_l_161C3F#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_181C40#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_161C3F,op1_e3_l_161C3F);
          tensor[3] op1_e3_l_231C41#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_161C3F);
          real op1_e3_l_241C42#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_181C40);
          real op1_e3_l_251C43#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_181C40);
          tensor[3] op1_e3_l_261C44#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_231C41,op1_e3_l_241C42);
          tensor[3] op1_e3_l_271C45#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_251C43,op1_e3_l_261C44);
          tensor[3] _t1C3E#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,_t1C3C,op1_e3_l_271C45);
          new particle(_t1C3E,hh1B37);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.step = step1BDB;
          active
          goto JOIN1C53
        JOIN1C53:  preds = [*ACTIVE1C52,COND1C39]
          tensor[3] op1_e3_l_701C55#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_721C56#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_701C55,op1_e3_l_701C55);
          tensor[3] op1_e3_l_771C57#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_701C55);
          real op1_e3_l_781C58#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_721C56);
          real op1_e3_l_791C59#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_721C56);
          tensor[3] op1_e3_l_801C5A#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_771C57,op1_e3_l_781C58);
          tensor[3] op1_e3_l_811C5B#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_791C59,op1_e3_l_801C5A);
          tensor[3] op1_e3_l_821C5C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_811C5B);
          tensor[3] op1_e3_l_1091C5D#4 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_821C5C);
          real op1_e3_l_1111C5E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1091C5D,op1_e3_l_1091C5D);
          real op1_e3_l_1121C5F#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1111C5E);
          real op1_e3_l_1131C60#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1121C5F);
          real op1_e3_l_1591C61#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1131C60);
          tensor[3,3] op1_e3_l_1621C62#1 = λ(T0[],T1[3],T2[],T3[3],T4[])<(T0 * T0 * T1_{i0} * T2 * T3_{i1} * T4)>_{3 3} (_t1BC9,op1_e3_l_1091C5D,op1_e3_l_1591C61,op1_e3_l_1091C5D,op1_e3_l_1591C61);
          tensor[3,3] op1_e3_l_1631C63#1 = λ(T0[3 3])<(δ_{i0,i1}) - (T0_{i0,i1})>_{3 3} (op1_e3_l_1621C62);
          tensor[3] op1_e3_l_1641C64#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (force1C0D,op1_e3_l_1631C63);
          tensor[3] es1C54#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (hh1B37,op1_e3_l_1641C64);
          tensor[3] op1_e3_l_701C77#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_721C78#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_701C77,op1_e3_l_701C77);
          tensor[3] op1_e3_l_771C79#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_701C77);
          real op1_e3_l_781C7A#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_721C78);
          real op1_e3_l_791C7B#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_721C78);
          tensor[3] op1_e3_l_801C7C#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_771C79,op1_e3_l_781C7A);
          tensor[3] op1_e3_l_811C7D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_791C7B,op1_e3_l_801C7C);
          tensor[3] op1_e3_l_821C7E#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_811C7D);
          tensor[3] op1_e3_l_1091C7F#4 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_821C7E);
          real op1_e3_l_1111C80#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1091C7F,op1_e3_l_1091C7F);
          real op1_e3_l_1121C81#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1111C80);
          real op1_e3_l_1131C82#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1121C81);
          real op1_e3_l_1591C83#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1131C82);
          tensor[3,3] op1_e3_l_1621C84#1 = λ(T0[],T1[3],T2[],T3[3],T4[])<(T0 * T0 * T1_{i0} * T2 * T3_{i1} * T4)>_{3 3} (_t1BC9,op1_e3_l_1091C7F,op1_e3_l_1591C83,op1_e3_l_1091C7F,op1_e3_l_1591C83);
          tensor[3,3] op1_e3_l_1631C85#1 = λ(T0[3 3])<(δ_{i0,i1}) - (T0_{i0,i1})>_{3 3} (op1_e3_l_1621C84);
          tensor[3] op1_e3_l_2581C86#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (force1C0D,op1_e3_l_1631C85);
          real op1_e3_l_2601C87#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2581C86,op1_e3_l_2581C86);
          real op1_e3_l_2611C88#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (hh1B37,op1_e3_l_2601C87);
          real _t1C76#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2611C88);
          bool _t1C9C#1 = GT<real>(_t1C76,rad1B2F);
          if _t1C9C then goto ASSIGN1CB4 else goto JOIN1CF5
        ASSIGN1CB4:  preds = [COND1C9E]
          tensor[3] op1_e3_l_721CA0#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_741CA1#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_721CA0,op1_e3_l_721CA0);
          tensor[3] op1_e3_l_791CA2#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_721CA0);
          real op1_e3_l_801CA3#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_741CA1);
          real op1_e3_l_811CA4#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_741CA1);
          tensor[3] op1_e3_l_821CA5#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_791CA2,op1_e3_l_801CA3);
          tensor[3] op1_e3_l_831CA6#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_811CA4,op1_e3_l_821CA5);
          tensor[3] op1_e3_l_841CA7#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_831CA6);
          tensor[3] op1_e3_l_1111CA8#4 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_841CA7);
          real op1_e3_l_1131CA9#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1111CA8,op1_e3_l_1111CA8);
          real op1_e3_l_1141CAA#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1131CA9);
          real op1_e3_l_1151CAB#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1141CAA);
          real op1_e3_l_1611CAC#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1151CAB);
          tensor[3,3] op1_e3_l_1641CAD#1 = λ(T0[],T1[3],T2[],T3[3],T4[])<(T0 * T0 * T1_{i0} * T2 * T3_{i1} * T4)>_{3 3} (_t1BC9,op1_e3_l_1111CA8,op1_e3_l_1611CAC,op1_e3_l_1111CA8,op1_e3_l_1611CAC);
          tensor[3,3] op1_e3_l_1651CAE#1 = λ(T0[3 3])<(δ_{i0,i1}) - (T0_{i0,i1})>_{3 3} (op1_e3_l_1641CAD);
          tensor[3] op1_e3_l_2601CAF#2 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (force1C0D,op1_e3_l_1651CAE);
          real op1_e3_l_2621CB0#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2601CAF,op1_e3_l_2601CAF);
          real op1_e3_l_2631CB1#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (hh1B37,op1_e3_l_2621CB0);
          real op1_e3_l_2641CB2#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2631CB1);
          real op1_e3_l_2651CB3#1 = λ(T0[],T1[])<(T0) / ( T1)> (rad1B2F,op1_e3_l_2641CB2);
          real hh1C9F#1 = λ(T0[],T1[])<(T0 * T1)> (hh1B37,op1_e3_l_2651CB3);
          tensor[3] op1_e3_l_1411CCA#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_1431CCB#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1411CCA,op1_e3_l_1411CCA);
          tensor[3] op1_e3_l_1481CCC#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1411CCA);
          real op1_e3_l_1491CCD#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1431CCB);
          real op1_e3_l_1501CCE#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1431CCB);
          tensor[3] op1_e3_l_1511CCF#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1481CCC,op1_e3_l_1491CCD);
          tensor[3] op1_e3_l_1521CD0#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1501CCE,op1_e3_l_1511CCF);
          tensor[3] op1_e3_l_1531CD1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_1521CD0);
          tensor[3] op1_e3_l_1801CD2#4 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_1531CD1);
          real op1_e3_l_1821CD3#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1801CD2,op1_e3_l_1801CD2);
          real op1_e3_l_1831CD4#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1821CD3);
          real op1_e3_l_1841CD5#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1831CD4);
          real op1_e3_l_2301CD6#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1841CD5);
          tensor[3,3] op1_e3_l_2331CD7#1 = λ(T0[],T1[3],T2[],T3[3],T4[])<(T0 * T0 * T1_{i0} * T2 * T3_{i1} * T4)>_{3 3} (_t1BC9,op1_e3_l_1801CD2,op1_e3_l_2301CD6,op1_e3_l_1801CD2,op1_e3_l_2301CD6);
          tensor[3,3] op1_e3_l_2341CD8#1 = λ(T0[3 3])<(δ_{i0,i1}) - (T0_{i0,i1})>_{3 3} (op1_e3_l_2331CD7);
          tensor[3] op1_e3_l_3291CD9#3 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (force1C0D,op1_e3_l_2341CD8);
          real op1_e3_l_3311CDA#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_3291CD9,op1_e3_l_3291CD9);
          real op1_e3_l_3321CDB#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (hh1B37,op1_e3_l_3311CDA);
          real op1_e3_l_3331CDC#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_3321CDB);
          real op1_e3_l_4281CDD#1 = λ(T0[],T1[])<(T0) / ( T1)> (rad1B2F,op1_e3_l_3331CDC);
          tensor[3] es1CC9#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (hh1B37,op1_e3_l_4281CDD,op1_e3_l_3291CD9);
          goto JOIN1CF5
        JOIN1CF5:  preds = [ASSIGN1CF2,COND1C9E]
          tensor[3] es1CF3#12 = phi(es1CC9,es1C54)
          real hh1CF4#2 = phi(hh1C9F,hh1B37)
          tensor[3] op1_e3_l_901CF7#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_921CF8#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_901CF7,op1_e3_l_901CF7);
          tensor[3] op1_e3_l_971CF9#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_901CF7);
          real op1_e3_l_981CFA#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_921CF8);
          real op1_e3_l_991CFB#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_921CF8);
          tensor[3] op1_e3_l_1001CFC#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_971CF9,op1_e3_l_981CFA);
          tensor[3] op1_e3_l_1011CFD#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_991CFB,op1_e3_l_1001CFC);
          tensor[3] op1_e3_l_1021CFE#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_1011CFD);
          tensor[3] op1_e3_l_1161CFF#3 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_1021CFE);
          real op1_e3_l_1181D00#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1161CFF,op1_e3_l_1161CFF);
          tensor[3] op1_e3_l_1911D01#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1161CFF);
          real op1_e3_l_1921D02#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1181D00);
          tensor[3] op1_e3_l_2381D03#2 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1911D01,op1_e3_l_1921D02);
          real op1_e3_l_2401D04#2 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1181D00);
          real op1_e3_l_2421D05#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2381D03,op1_e3_l_2381D03);
          real op1_e3_l_2431D06#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_2401D04,op1_e3_l_2401D04,op1_e3_l_2421D05);
          real op1_e3_l_2441D07#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (es1CF3);
          real op1_e3_l_2451D08#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2431D06);
          real op1_e3_l_2461D09#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2441D07);
          real _t1CF6#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_2451D08,op1_e3_l_2461D09);
          bool _t1D1E#1 = GT<real>(_t1CF6,_t1B3F);
          if _t1D1E then goto ASSIGN1D22 else goto JOIN1D29
        ASSIGN1D22:  preds = [COND1D20]
          real hh1D21#1 = λ(T0[],T1[])<(T0 * T1)> (hh1CF4,_t1B3F);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.hh = hh1D21;
          self.step = step1BDB;
          active
          goto JOIN1D29
        JOIN1D29:  preds = [*ACTIVE1D27,COND1D20]
          real hh1D28#2 = phi(hh1CF4)
          tensor[3] op1_e3_l_901D2A#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_921D2B#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_901D2A,op1_e3_l_901D2A);
          tensor[3] op1_e3_l_971D2C#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_901D2A);
          real op1_e3_l_981D2D#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_921D2B);
          real op1_e3_l_991D2E#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_921D2B);
          tensor[3] op1_e3_l_1001D2F#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_971D2C,op1_e3_l_981D2D);
          tensor[3] op1_e3_l_1011D30#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_991D2E,op1_e3_l_1001D2F);
          tensor[3] op1_e3_l_1021D31#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_1011D30);
          tensor[3] op1_e3_l_1161D32#3 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_1021D31);
          real op1_e3_l_1181D33#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1161D32,op1_e3_l_1161D32);
          tensor[3] op1_e3_l_1621D34#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1161D32);
          real op1_e3_l_1631D35#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1181D33);
          real op1_e3_l_1641D36#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1181D33);
          tensor[3] op1_e3_l_1651D37#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1621D34,op1_e3_l_1631D35);
          tensor[3] op1_e3_l_1661D38#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1641D36,op1_e3_l_1651D37);
          tensor[3] up1BB9#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (es1CF3,op1_e3_l_1661D38);
          tensor[3] op1_e3_l_1051D4A#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_1071D4B#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1051D4A,op1_e3_l_1051D4A);
          tensor[3] op1_e3_l_1121D4C#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1051D4A);
          real op1_e3_l_1131D4D#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1071D4B);
          real op1_e3_l_1141D4E#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1071D4B);
          tensor[3] op1_e3_l_1151D4F#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1121D4C,op1_e3_l_1131D4D);
          tensor[3] op1_e3_l_1271D50#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1141D4E,op1_e3_l_1151D4F);
          tensor[3] op1_e3_l_1281D51#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_1271D50);
          tensor[3] op1_e3_l_1421D52#3 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_1281D51);
          real op1_e3_l_1441D53#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1421D52,op1_e3_l_1421D52);
          tensor[3] op1_e3_l_1881D54#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1421D52);
          real op1_e3_l_1891D55#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1441D53);
          real op1_e3_l_1901D56#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1441D53);
          tensor[3] op1_e3_l_1911D57#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1881D54,op1_e3_l_1891D55);
          tensor[3] op1_e3_l_1931D58#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1901D56,op1_e3_l_1911D57);
          tensor[3] pos1D49#2 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T2_{i0} + T3_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_1271D50,op1_e3_l_1931D58);
          particle[] _t1D69#1 = SphereQuery<3,particle>(pos1D49,rad1B2F);
        FOREACH1D6C:  preds = [ASSIGN1D6A,NEXT1DA0]
          foreach (P1D6B in _t1D69) on exit goto ASSIGN1DA2
            real accum1D72#2 = phi(oldE1BDD,accum1D71)
          tensor[3] _t1D6D#1 = P1D6B.pos;
          real _t1D6F#1 = 0.1e1;
          tensor[3] op1_e3_l_1091D73#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_1111D74#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1091D73,op1_e3_l_1091D73);
          tensor[3] op1_e3_l_1161D75#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1091D73);
          real op1_e3_l_1171D76#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1111D74);
          real op1_e3_l_1181D77#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1111D74);
          tensor[3] op1_e3_l_1191D78#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1161D75,op1_e3_l_1171D76);
          tensor[3] op1_e3_l_1311D79#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1181D77,op1_e3_l_1191D78);
          tensor[3] op1_e3_l_1321D7A#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_1311D79);
          tensor[3] op1_e3_l_1461D7B#3 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_1321D7A);
          real op1_e3_l_1481D7C#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1461D7B,op1_e3_l_1461D7B);
          tensor[3] op1_e3_l_1921D7D#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1461D7B);
          real op1_e3_l_1931D7E#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1481D7C);
          real op1_e3_l_1941D7F#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1481D7C);
          tensor[3] op1_e3_l_1951D80#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1921D7D,op1_e3_l_1931D7E);
          tensor[3] op1_e3_l_1971D81#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1941D7F,op1_e3_l_1951D80);
          tensor[3] op1_e3_l_1981D82#1 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T2_{i0} + T3_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_1311D79,op1_e3_l_1971D81);
          tensor[3] op1_e3_l_2891D83#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1D6D,op1_e3_l_1981D82);
          real op1_e3_l_2911D84#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2891D83,op1_e3_l_2891D83);
          real op1_e3_l_2921D85#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2911D84);
          real op1_e3_l_2931D86#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_2921D85);
          real op1_e3_l_2941D87#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D6F,op1_e3_l_2931D86);
          real op1_e3_l_2951D88#1 = λ(T0[])<(T0)^4> (op1_e3_l_2941D87);
          real accum1D71#1 = λ(T0[],T1[])<(T0 + T1)> (accum1D72,op1_e3_l_2951D88);
          goto FOREACH1D6C
        ASSIGN1DA2:  preds = [FOREACH1D6C]
          real _t1DA1#1 = λ(T0[],T1[])<(T0) - (T1)> (accum1D72,oldE1BEA);
          tensor[3] op1_e3_l_1901DA4#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_1921DA5#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1901DA4,op1_e3_l_1901DA4);
          tensor[3] op1_e3_l_1971DA6#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1901DA4);
          real op1_e3_l_1981DA7#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1921DA5);
          real op1_e3_l_1991DA8#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1921DA5);
          tensor[3] op1_e3_l_2001DA9#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1971DA6,op1_e3_l_1981DA7);
          tensor[3] op1_e3_l_2121DAA#3 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_1991DA8,op1_e3_l_2001DA9);
          tensor[3] op1_e3_l_2131DAB#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_2121DAA);
          tensor[3] op1_e3_l_2271DAC#3 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_2131DAB);
          real op1_e3_l_2291DAD#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2271DAC,op1_e3_l_2271DAC);
          tensor[3] op1_e3_l_2731DAE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_2271DAC);
          real op1_e3_l_2741DAF#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_2291DAD);
          real op1_e3_l_2751DB0#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_2291DAD);
          tensor[3] op1_e3_l_2761DB1#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_2731DAE,op1_e3_l_2741DAF);
          tensor[3] op1_e3_l_2781DB2#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_2751DB0,op1_e3_l_2761DB1);
          tensor[3] op1_e3_l_2911DB3#1 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T2_{i0} + T3_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_2121DAA,op1_e3_l_2781DB2);
          tensor[3] op1_e3_l_2921DB4#2 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_2121DAA);
          tensor[3] op1_e3_l_3321DB5#4 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_2921DB4);
          real op1_e3_l_3341DB6#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_3321DB5,op1_e3_l_3321DB5);
          real op1_e3_l_3351DB7#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_3341DB6);
          real op1_e3_l_3361DB8#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_3351DB7);
          real op1_e3_l_3821DB9#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_3361DB8);
          tensor[3,3] op1_e3_l_3851DBA#1 = λ(T0[],T1[3],T2[],T3[3],T4[])<(T0 * T0 * T1_{i0} * T2 * T3_{i1} * T4)>_{3 3} (_t1BC9,op1_e3_l_3321DB5,op1_e3_l_3821DB9,op1_e3_l_3321DB5,op1_e3_l_3821DB9);
          tensor[3,3] op1_e3_l_3861DBB#1 = λ(T0[3 3])<(δ_{i0,i1}) - (T0_{i0,i1})>_{3 3} (op1_e3_l_3851DBA);
          tensor[3] op1_e3_l_3871DBC#1 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (force1C0D,op1_e3_l_3861DBB);
          tensor[3] op1_e3_l_3881DBD#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (op1_e3_l_2911DB3,op1_e3_l_2921DB4);
          tensor[3] op1_e3_l_3891DBE#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_3871DBC);
          real op1_e3_l_3901DBF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_3881DBD,op1_e3_l_3891DBE);
          real _t1DA3#1 = λ(T0[],T1[])<(T0 * T1)> (_t1B3F,op1_e3_l_3901DBF);
          bool _t1DDD#1 = GT<real>(_t1DA1,_t1DA3);
          if _t1DDD then goto ASSIGN1DE1 else goto JOIN1DE8
        ASSIGN1DE1:  preds = [COND1DDF]
          real hh1DE0#1 = λ(T0[],T1[])<(T0 * T1)> (hh1D28,_t1B3F);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.hh = hh1DE0;
          self.step = step1BDB;
          active
          goto JOIN1DE8
        JOIN1DE8:  preds = [*ACTIVE1DE6,COND1DDF]
          real hh1DE7#1 = phi(hh1D28)
          tensor[3] pos1BBD#2 = phi(pos1D49)
          real _t1DE9#1 = 0.11e1;
          real hh1BBB#2 = λ(T0[],T1[])<(T0 * T1)> (hh1DE7,_t1DE9);
          int _t1DEC#1 = 5;
          bool _t1DEE#1 = LT<int>(nn1C34,_t1DEC);
          if _t1DEE then goto ASSIGN1DF6 else goto JOIN1DFC
        ASSIGN1DF6:  preds = [COND1DF0]
          real op1_e3_l_51DF2#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (es1CF3);
          real op1_e3_l_61DF3#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_51DF2);
          real op1_e3_l_71DF4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_61DF3);
          tensor[3] op1_e3_l_81DF5#1 = λ(T0[],T1[],T2[3],T3[])<(T0 * T1 * T2_{i0} * T3)>_{3} (_t1B3F,rad1B2F,es1CF3,op1_e3_l_71DF4);
          tensor[3] _t1DF1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1BBD,op1_e3_l_81DF5);
          new particle(_t1DF1,hh1BBB);
          goto JOIN1DFC
        JOIN1DFC:  preds = [NEW1DFB,COND1DF0]
          goto JOIN1BBE
        ASSIGN1DFE:  preds = [COND1B61]
          real _t1DFD#1 = 0.2e1;
          tensor[3] op1_e3_l_31E00#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real op1_e3_l_51E01#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_31E00,op1_e3_l_31E00);
          real op1_e3_l_61E02#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1DFD,op1_e3_l_51E01);
          real _t1DFF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61E02);
          real _t1E07#1 = 0.e0;
          bool _t1B65#1 = EQ<real>(_t1DFF,_t1E07);
          goto JOIN1B66
        ASSIGN1E0A:  preds = [COND1B52]
          bool _t1B5A#1 = false;
          goto JOIN1B5B
        ASSIGN1E0B:  preds = [COND1B4B]
          bool _t1B5D#1 = false;
          goto JOIN1B5E
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY1E0C:  preds = []
      tensor[3][] ipos1E0D#1 = globals.ipos1AF0;
    FOREACH1E10:  preds = [ASSIGN1E0E,NEXT1E14]
      foreach (x1E0F in ipos1E0D) on exit goto RETURN1E15
      real _t1E11#1 = 0.1e1;
      new particle(x1E0F,_t1E11);
      goto FOREACH1E10
    RETURN1E15:  preds = [FOREACH1E10]
      return
## global update
  ENTRY1E16:  preds = []
    real rad1E17#1 = globals.rad1AED;
    real eps1E19#1 = globals.eps1AEE;
    particle[] P1E1B#6 = Strands<particle,all>;
    (int res1E23#1) = sum<int>(MAP sum1E1D (P1E1B));
    (int res1E2B#1) = sum<int>(MAP sum1E25 (P1E1B));
    (bool res1E33#2) = all(MAP all1E2D (P1E1B));
    (real res1E3F#1) = max<real>(MAP max1E35 (P1E1B));
    (real res1E51#1) = max<real>(MAP max1E41 (P1E1B));
    (real res1E63#1) = min<real>(MAP min1E53 (P1E1B));
    tensor[2] averageDist1E65#1 = <tensor[2]>[res1E63,res1E51];
    string _t1E67#1 = "One run:";
    string _t1E69#4 = " and ";
    real _t1E6B#2 = λ(T0[],T1[])<(T0) / ( T1)> (res1E3F,rad1E17);
    bool _t1E6D#2 = LT<real>(_t1E6B,eps1E19);
    string _t1E6F#1 = " of ";
    string _t1E71#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t1E67,res1E33,_t1E69,_t1E6B,_t1E69,_t1E6D,_t1E69,res1E2B,_t1E6F,res1E23,_t1E69,averageDist1E65,_t1E71);
    if res1E33 then goto COND1E75 else goto JOIN1E7B
  COND1E75:  preds = [COND1E74]
    if _t1E6D then goto ASSIGN1E77 else goto JOIN1E7A
  ASSIGN1E77:  preds = [COND1E75]
    string _t1E76#1 = "CONVERGED!\n";
    Print<[string]>(_t1E76);
    StabilizeAll;
    goto JOIN1E7A
  JOIN1E7A:  preds = [MASSIGN1E79,COND1E75]
    goto JOIN1E7B
  JOIN1E7B:  preds = [JOIN1E7A,COND1E74]
    continue
#### end program ####
##### mid-ir: after value numbering ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1AEA (meshData) = <no-default>
  input 0space0473_intermedateGlobal1AEB (space) = <no-default>
  input 0data0475_intermedateGlobal1AEC (data) = <no-default>
  input rad1AED (rad) = <default>
  input eps1AEE (eps) = <default>
  input v01AEF (v0) = <default>
  input ipos1AF0 (ipos) = <no-default>
## functions
  function int sum1E1D (particle P1E1E#1) {
    ENTRY1E1F:  preds = []
      int _t1E20#1 = P1E1E.test;
      return _t1E20
}
  function int sum1E25 (particle P1E26#1) {
    ENTRY1E27:  preds = []
      int _t1E28#1 = P1E26.testp;
      return _t1E28
}
  function bool all1E2D (particle P1E2E#1) {
    ENTRY1E2F:  preds = []
      bool _t1E30#1 = P1E2E.found;
      return _t1E30
}
  function real max1E35 (particle P1E36#1) {
    ENTRY1E37:  preds = []
      tensor[3] _t1E38#1 = P1E36.step;
      real op1_e3_l_11E3B#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (_t1E38);
      real _t1E3A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11E3B);
      return _t1E3A
}
  function real max1E41 (particle P1E42#1) {
    ENTRY1E43:  preds = []
      tensor[3] _t1E44#1 = P1E42.pos;
      real _t1E46#3 = 0.5e0;
      tensor[3] _t1E48#1 = <tensor[3]>[_t1E46,_t1E46,_t1E46];
      tensor[3] op1_e3_l_21E4B#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1E44,_t1E48);
      real op1_e3_l_41E4C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21E4B,op1_e3_l_21E4B);
      real _t1E4A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41E4C);
      return _t1E4A
}
  function real min1E53 (particle P1E54#1) {
    ENTRY1E55:  preds = []
      tensor[3] _t1E56#1 = P1E54.pos;
      real _t1E58#3 = 0.5e0;
      tensor[3] _t1E5A#1 = <tensor[3]>[_t1E58,_t1E58,_t1E58];
      tensor[3] op1_e3_l_21E5D#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1E56,_t1E5A);
      real op1_e3_l_41E5E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21E5D,op1_e3_l_21E5D);
      real _t1E5C#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41E5E);
      return _t1E5C
}
## input initialization
  ENTRY1AF1:  preds = []
    real rad1AF2#2 = 0.1e-1;
    globals.rad1AED = rad1AF2;
    globals.eps1AEE = rad1AF2;
    real v01AF6#1 = 0.625e-1;
    globals.v01AEF = v01AF6;
    return
## global-variable initialization
  ENTRY1AFA:  preds = []
    femData:Mesh meshData1AFB#2 = globals.meshData1AEA;
    int _t1AFD#1 = 0;
    int _t1AFF#1 = 1;
    int _t1B01#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData1AFB);
    int _t1B03#1 = ISub(_t1B01,_t1AFF);
    int[] _t1B05#1 = Range(_t1AFD,_t1B03);
    femData:MeshCell[] _t1B07#1 = <femData:MeshCell[]>{};
  FOREACH1B0A:  preds = [ASSIGN1B08,NEXT1B10]
    foreach (_t1B09 in _t1B05) on exit goto RETURN1B11
      femData:MeshCell[] _t1B0E#1 = phi(_t1B07,_t1B0D)
    femData:MeshCell _t1B0B#1 = LoadFem<femData:MeshCell>(meshData1AFB,_t1B09);
    femData:MeshCell[] _t1B0D#1 = Append<femData:MeshCell>(_t1B0E,_t1B0B);
    goto FOREACH1B0A
  RETURN1B11:  preds = [FOREACH1B0A]
    return
## strand
  strand particle (tensor[3] pos01B12#2, real hh01B13#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY1B1C:  preds = []
        tensor[3] step1B1D#1 = λ()<Z_{i0}>_{3} ();
        bool found1B1F#1 = false;
        int nfs1B21#2 = 0;
        int test1B23#1 = 1;
        self.pos = pos01B12;
        self._pos = pos01B12;
        self.hh = hh01B13;
        self.step = step1B1D;
        self.found = found1B1F;
        self.nfs = nfs1B21;
        self.test = test1B23;
        self.testp = nfs1B21;
        return
    end state init
    method update
        ENTRY1B2E:  preds = []
          real rad1B2F#10 = globals.rad1AED;
          real eps1B31#1 = globals.eps1AEE;
          real v01B33#3 = globals.v01AEF;
          tensor[3] pos1B35#6 = self.pos;
          real hh1B37#7 = self.hh;
          bool found1B39#3 = self.found;
          int nfs1B3B#3 = self.nfs;
          int testp1B3D#2 = self.testp;
          real _t1B3F#12 = 0.5e0;
          tensor[3] _t1B41#3 = <tensor[3]>[_t1B3F,_t1B3F,_t1B3F];
          tensor[3] mid1B43#11 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real _t1B45#1 = TensorIndex<tensor[3],[0]>(mid1B43);
          real _t1B47#1 = λ(T0[])<Abs(T0)> (_t1B45);
          bool _t1B49#1 = LTE<real>(_t1B47,_t1B3F);
          if _t1B49 then goto ASSIGN1B4D else goto ASSIGN1E0B
        ASSIGN1B4D:  preds = [COND1B4B]
          real _t1B4C#1 = TensorIndex<tensor[3],[1]>(mid1B43);
          real _t1B4E#1 = λ(T0[])<Abs(T0)> (_t1B4C);
          bool _t1B50#1 = LTE<real>(_t1B4E,_t1B3F);
          if _t1B50 then goto ASSIGN1B54 else goto ASSIGN1E0A
        ASSIGN1B54:  preds = [COND1B52]
          real _t1B53#1 = TensorIndex<tensor[3],[2]>(mid1B43);
          real _t1B55#1 = λ(T0[])<Abs(T0)> (_t1B53);
          bool _t1B57#1 = LTE<real>(_t1B55,_t1B3F);
          goto JOIN1B5B
        JOIN1B5B:  preds = [ASSIGN1B58,ASSIGN1E0A]
          bool _t1B59#1 = phi(_t1B57,_t1B5A)
          goto JOIN1B5E
        JOIN1B5E:  preds = [JOIN1B5B,ASSIGN1E0B]
          bool _t1B5C#1 = phi(_t1B59,_t1B5D)
          bool _t1B5F#1 = BNot(_t1B5C);
          if _t1B5F then goto ASSIGN1B63 else goto ASSIGN1DFE
        ASSIGN1B63:  preds = [COND1B61]
          bool _t1B62#1 = true;
          goto JOIN1B66
        JOIN1B66:  preds = [ASSIGN1B63,ASSIGN1E09]
          bool _t1B64#1 = phi(_t1B62,_t1B65)
          if _t1B64 then goto DIE1B68 else goto JOIN1B69
        DIE1B68:  preds = [COND1B67]
          die
          goto JOIN1B69
        JOIN1B69:  preds = [*DIE1B68,COND1B67]
          bool _t1B6A#1 = BNot(found1B39);
          if _t1B6A then goto ASSIGN1B6E else goto ASSIGN1BCA
        ASSIGN1B6E:  preds = [COND1B6C]
          real _t1B6D#2 = 0.2e1;
          real op1_e3_l_161B71#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1B43,mid1B43);
          tensor[3] op1_e3_l_211B72#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B6D,mid1B43);
          real op1_e3_l_221B73#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1B6D,op1_e3_l_161B71);
          real op1_e3_l_231B74#3 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_161B71);
          tensor[3] op1_e3_l_241B75#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_211B72,op1_e3_l_221B73);
          tensor[3] _t1B6F#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_231B74,op1_e3_l_241B75);
          tensor[3] pos1B7D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,_t1B6F);
          real op1_e3_l_371B94#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_241B75,op1_e3_l_241B75);
          real op1_e3_l_381B95#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_231B74,op1_e3_l_231B74,op1_e3_l_371B94);
          real op1_e3_l_391B96#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_381B95);
          real _t1B8D#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_391B96);
          bool _t1BA1#1 = GT<real>(_t1B8D,eps1B31);
          if _t1BA1 then goto ASSIGN1BA5 else goto ASSIGN1BC7
        ASSIGN1BA5:  preds = [COND1BA3]
          int _t1BA4#1 = 1;
          int nfs1BA6#2 = IAdd(nfs1B3B,_t1BA4);
          int _t1BA8#1 = 10;
          bool _t1BAA#1 = GT<int>(nfs1BA6,_t1BA8);
          if _t1BAA then goto DIE1BAD else goto JOIN1BAE
        DIE1BAD:  preds = [COND1BAC]
          die
          goto JOIN1BAE
        JOIN1BAE:  preds = [*DIE1BAD,COND1BAC]
          goto JOIN1BB4
        JOIN1BB4:  preds = [JOIN1BAE,ASSIGN1BC8]
          int testp1BAF#1 = phi(testp1B3D,testp1BB0)
          int nfs1BB1#1 = phi(nfs1BA6,nfs1B3B)
          bool found1BB2#1 = phi(found1B39,found1BB3)
          goto JOIN1BBE
        JOIN1BBE:  preds = [JOIN1BB4,JOIN1DFC]
          int testp1BB5#1 = phi(testp1BAF,testp1B3D)
          int nfs1BB6#1 = phi(nfs1BB1,nfs1B3B)
          bool found1BB7#1 = phi(found1BB2,found1B39)
          tensor[3] step1BB8#1 = phi(_t1B6F,up1BB9)
          real hh1BBA#1 = phi(hh1B37,hh1BBB)
          tensor[3] pos1BBC#2 = phi(pos1B7D,pos1BBD)
          self.pos = pos1BBC;
          self._pos = pos1BBC;
          self.hh = hh1BBA;
          self.step = step1BB8;
          self.found = found1BB7;
          self.nfs = nfs1BB6;
          self.testp = testp1BB5;
          active
        ASSIGN1BC7:  preds = [COND1BA3]
          bool found1BB3#1 = true;
          int testp1BB0#1 = 1;
          goto JOIN1BB4
        ASSIGN1BCA:  preds = [COND1B6C]
          real _t1BC9#6 = 0.2e1;
          real op1_e3_l_171BCD#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1B43,mid1B43);
          tensor[3] op1_e3_l_221BCE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,mid1B43);
          real op1_e3_l_231BCF#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_171BCD);
          real op1_e3_l_241BD0#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_171BCD);
          tensor[3] op1_e3_l_251BD1#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_221BCE,op1_e3_l_231BCF);
          tensor[3] op1_e3_l_261BD2#4 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_241BD0,op1_e3_l_251BD1);
          tensor[3] pos1BCB#10 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_261BD2);
          tensor[3] step1BDB#4 = λ()<Z_{i0}>_{3} ();
          real oldE1BDD#4 = 0.e0;
          int nn1BDF#2 = 0;
          particle[] _t1BE1#1 = SphereQuery<3,particle>(pos1BCB,rad1B2F);
        FOREACH1BE4:  preds = [ASSIGN1BE2,NEXT1C36]
          foreach (P1BE3 in _t1BE1) on exit goto ASSIGN1C38
            int nn1C34#3 = phi(nn1BDF,nn1C33)
            tensor[3] force1C0D#2 = phi(step1BDB,force1C0C)
            real oldE1BEA#2 = phi(oldE1BDD,oldE1BE9)
          tensor[3] _t1BE5#1 = P1BE3.pos;
          real _t1BE7#2 = 0.1e1;
          tensor[3] op1_e3_l_451BF3#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1BE5,pos1BCB);
          real op1_e3_l_471BF4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_451BF3,op1_e3_l_451BF3);
          real op1_e3_l_481BF5#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_471BF4);
          real op1_e3_l_491BF6#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_481BF5);
          real op1_e3_l_501BF7#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1BE7,op1_e3_l_491BF6);
          real op1_e3_l_511BF8#1 = λ(T0[])<(T0)^4> (op1_e3_l_501BF7);
          real oldE1BE9#1 = λ(T0[],T1[])<(T0 + T1)> (oldE1BEA,op1_e3_l_511BF8);
          int _t1C08#1 = -4;
          real _t1C0A#1 = IntToReal(_t1C08);
          real op1_e3_l_991C1B#1 = λ(T0[])<(T0)^3> (op1_e3_l_501BF7);
          real op1_e3_l_1001C1C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1BE7,rad1B2F);
          tensor[3] op1_e3_l_1311C1D#1 = λ(T0[],T1[],T2[],T3[3])<(T0 * T1 * T2 * T3_{i0})>_{3} (_t1C0A,op1_e3_l_991C1B,op1_e3_l_1001C1C,op1_e3_l_451BF3);
          tensor[3] op1_e3_l_1331C1E#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1311C1D,op1_e3_l_481BF5);
          tensor[3] force1C0C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (force1C0D,op1_e3_l_1331C1E);
          int _t1C31#1 = 1;
          int nn1C33#1 = IAdd(nn1C34,_t1C31);
          goto FOREACH1BE4
        ASSIGN1C38:  preds = [FOREACH1BE4]
          bool _t1C37#1 = EQ<int>(nn1BDF,nn1C34);
          if _t1C37 then goto ASSIGN1C3B else goto JOIN1C53
        ASSIGN1C3B:  preds = [COND1C39]
          real _t1C3A#1 = λ(T0[],T1[])<(T0 * T1)> (_t1B3F,rad1B2F);
          tensor[3] _t1C3C#1 = <tensor[3]>[_t1C3A,oldE1BDD,oldE1BDD];
          tensor[3] _t1C3E#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,_t1C3C,op1_e3_l_261BD2);
          new particle(_t1C3E,hh1B37);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.step = step1BDB;
          active
          goto JOIN1C53
        JOIN1C53:  preds = [*ACTIVE1C52,COND1C39]
          tensor[3] op1_e3_l_1091C5D#4 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,pos1BCB);
          real op1_e3_l_1111C5E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1091C5D,op1_e3_l_1091C5D);
          real op1_e3_l_1121C5F#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1111C5E);
          real op1_e3_l_1131C60#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1121C5F);
          real op1_e3_l_1591C61#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1131C60);
          tensor[3,3] op1_e3_l_1621C62#1 = λ(T0[],T1[3],T2[],T3[3],T4[])<(T0 * T0 * T1_{i0} * T2 * T3_{i1} * T4)>_{3 3} (_t1BC9,op1_e3_l_1091C5D,op1_e3_l_1591C61,op1_e3_l_1091C5D,op1_e3_l_1591C61);
          tensor[3,3] op1_e3_l_1631C63#1 = λ(T0[3 3])<(δ_{i0,i1}) - (T0_{i0,i1})>_{3 3} (op1_e3_l_1621C62);
          tensor[3] op1_e3_l_1641C64#5 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (force1C0D,op1_e3_l_1631C63);
          tensor[3] es1C54#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (hh1B37,op1_e3_l_1641C64);
          real op1_e3_l_2601C87#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1641C64,op1_e3_l_1641C64);
          real op1_e3_l_2611C88#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (hh1B37,op1_e3_l_2601C87);
          real _t1C76#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2611C88);
          bool _t1C9C#1 = GT<real>(_t1C76,rad1B2F);
          if _t1C9C then goto ASSIGN1E83 else goto JOIN1CF5
        ASSIGN1E83:  preds = [COND1C9E]
          real op1_e3_l_2651CB3#2 = λ(T0[],T1[])<(T0) / ( T1)> (rad1B2F,_t1C76);
          real hh1C9F#1 = λ(T0[],T1[])<(T0 * T1)> (hh1B37,op1_e3_l_2651CB3);
          tensor[3] es1CC9#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (hh1B37,op1_e3_l_2651CB3,op1_e3_l_1641C64);
          goto JOIN1CF5
        JOIN1CF5:  preds = [ASSIGN1E84,COND1C9E]
          tensor[3] es1CF3#5 = phi(es1CC9,es1C54)
          real hh1CF4#2 = phi(hh1C9F,hh1B37)
          tensor[3] op1_e3_l_1021CFE#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_261BD2);
          tensor[3] op1_e3_l_1161CFF#3 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_1021CFE);
          real op1_e3_l_1181D00#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1161CFF,op1_e3_l_1161CFF);
          tensor[3] op1_e3_l_1911D01#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1161CFF);
          real op1_e3_l_1921D02#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1181D00);
          tensor[3] op1_e3_l_2381D03#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1911D01,op1_e3_l_1921D02);
          real op1_e3_l_2401D04#3 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1181D00);
          real op1_e3_l_2421D05#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2381D03,op1_e3_l_2381D03);
          real op1_e3_l_2431D06#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_2401D04,op1_e3_l_2401D04,op1_e3_l_2421D05);
          real op1_e3_l_2441D07#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (es1CF3);
          real op1_e3_l_2451D08#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2431D06);
          real op1_e3_l_2461D09#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2441D07);
          real _t1CF6#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_2451D08,op1_e3_l_2461D09);
          bool _t1D1E#1 = GT<real>(_t1CF6,_t1B3F);
          if _t1D1E then goto ASSIGN1D22 else goto JOIN1D29
        ASSIGN1D22:  preds = [COND1D20]
          real hh1D21#1 = λ(T0[],T1[])<(T0 * T1)> (hh1CF4,_t1B3F);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.hh = hh1D21;
          self.step = step1BDB;
          active
          goto JOIN1D29
        JOIN1D29:  preds = [*ACTIVE1D27,COND1D20]
          real hh1D28#2 = phi(hh1CF4)
          tensor[3] op1_e3_l_1661D38#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_2401D04,op1_e3_l_2381D03);
          tensor[3] up1BB9#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (es1CF3,op1_e3_l_1661D38);
          tensor[3] pos1D49#4 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T2_{i0} + T3_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_261BD2,op1_e3_l_1661D38);
          particle[] _t1D69#1 = SphereQuery<3,particle>(pos1D49,rad1B2F);
        FOREACH1D6C:  preds = [ASSIGN1D6A,NEXT1DA0]
          foreach (P1D6B in _t1D69) on exit goto ASSIGN1DA2
            real accum1D72#2 = phi(oldE1BDD,accum1D71)
          tensor[3] _t1D6D#1 = P1D6B.pos;
          real _t1D6F#1 = 0.1e1;
          tensor[3] op1_e3_l_2891D83#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1D6D,pos1D49);
          real op1_e3_l_2911D84#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2891D83,op1_e3_l_2891D83);
          real op1_e3_l_2921D85#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2911D84);
          real op1_e3_l_2931D86#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_2921D85);
          real op1_e3_l_2941D87#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D6F,op1_e3_l_2931D86);
          real op1_e3_l_2951D88#1 = λ(T0[])<(T0)^4> (op1_e3_l_2941D87);
          real accum1D71#1 = λ(T0[],T1[])<(T0 + T1)> (accum1D72,op1_e3_l_2951D88);
          goto FOREACH1D6C
        ASSIGN1DA2:  preds = [FOREACH1D6C]
          real _t1DA1#1 = λ(T0[],T1[])<(T0) - (T1)> (accum1D72,oldE1BEA);
          tensor[3] op1_e3_l_3881DBD#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1D49,pos1BCB);
          tensor[3] op1_e3_l_3891DBE#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_1641C64);
          real op1_e3_l_3901DBF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_3881DBD,op1_e3_l_3891DBE);
          real _t1DA3#1 = λ(T0[],T1[])<(T0 * T1)> (_t1B3F,op1_e3_l_3901DBF);
          bool _t1DDD#1 = GT<real>(_t1DA1,_t1DA3);
          if _t1DDD then goto ASSIGN1DE1 else goto JOIN1DE8
        ASSIGN1DE1:  preds = [COND1DDF]
          real hh1DE0#1 = λ(T0[],T1[])<(T0 * T1)> (hh1D28,_t1B3F);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.hh = hh1DE0;
          self.step = step1BDB;
          active
          goto JOIN1DE8
        JOIN1DE8:  preds = [*ACTIVE1DE6,COND1DDF]
          real hh1DE7#1 = phi(hh1D28)
          tensor[3] pos1BBD#2 = phi(pos1D49)
          real _t1DE9#1 = 0.11e1;
          real hh1BBB#2 = λ(T0[],T1[])<(T0 * T1)> (hh1DE7,_t1DE9);
          int _t1DEC#1 = 5;
          bool _t1DEE#1 = LT<int>(nn1C34,_t1DEC);
          if _t1DEE then goto ASSIGN1E8A else goto JOIN1DFC
        ASSIGN1E8A:  preds = [COND1DF0]
          real op1_e3_l_71DF4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_2461D09);
          tensor[3] op1_e3_l_81DF5#1 = λ(T0[],T1[],T2[3],T3[])<(T0 * T1 * T2_{i0} * T3)>_{3} (_t1B3F,rad1B2F,es1CF3,op1_e3_l_71DF4);
          tensor[3] _t1DF1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1BBD,op1_e3_l_81DF5);
          new particle(_t1DF1,hh1BBB);
          goto JOIN1DFC
        JOIN1DFC:  preds = [NEW1DFB,COND1DF0]
          goto JOIN1BBE
        ASSIGN1DFE:  preds = [COND1B61]
          real _t1DFD#1 = 0.2e1;
          real op1_e3_l_51E01#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1B43,mid1B43);
          real op1_e3_l_61E02#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1DFD,op1_e3_l_51E01);
          real _t1DFF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61E02);
          real _t1E07#1 = 0.e0;
          bool _t1B65#1 = EQ<real>(_t1DFF,_t1E07);
          goto JOIN1B66
        ASSIGN1E0A:  preds = [COND1B52]
          bool _t1B5A#1 = false;
          goto JOIN1B5B
        ASSIGN1E0B:  preds = [COND1B4B]
          bool _t1B5D#1 = false;
          goto JOIN1B5E
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY1E0C:  preds = []
      tensor[3][] ipos1E0D#1 = globals.ipos1AF0;
    FOREACH1E10:  preds = [ASSIGN1E0E,NEXT1E14]
      foreach (x1E0F in ipos1E0D) on exit goto RETURN1E15
      real _t1E11#1 = 0.1e1;
      new particle(x1E0F,_t1E11);
      goto FOREACH1E10
    RETURN1E15:  preds = [FOREACH1E10]
      return
## global update
  ENTRY1E16:  preds = []
    real rad1E17#1 = globals.rad1AED;
    real eps1E19#1 = globals.eps1AEE;
    particle[] P1E1B#6 = Strands<particle,all>;
    (int res1E23#1) = sum<int>(MAP sum1E1D (P1E1B));
    (int res1E2B#1) = sum<int>(MAP sum1E25 (P1E1B));
    (bool res1E33#2) = all(MAP all1E2D (P1E1B));
    (real res1E3F#1) = max<real>(MAP max1E35 (P1E1B));
    (real res1E51#1) = max<real>(MAP max1E41 (P1E1B));
    (real res1E63#1) = min<real>(MAP min1E53 (P1E1B));
    tensor[2] averageDist1E65#1 = <tensor[2]>[res1E63,res1E51];
    string _t1E67#1 = "One run:";
    string _t1E69#4 = " and ";
    real _t1E6B#2 = λ(T0[],T1[])<(T0) / ( T1)> (res1E3F,rad1E17);
    bool _t1E6D#2 = LT<real>(_t1E6B,eps1E19);
    string _t1E6F#1 = " of ";
    string _t1E71#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t1E67,res1E33,_t1E69,_t1E6B,_t1E69,_t1E6D,_t1E69,res1E2B,_t1E6F,res1E23,_t1E69,averageDist1E65,_t1E71);
    if res1E33 then goto COND1E75 else goto JOIN1E7B
  COND1E75:  preds = [COND1E74]
    if _t1E6D then goto ASSIGN1E77 else goto JOIN1E7A
  ASSIGN1E77:  preds = [COND1E75]
    string _t1E76#1 = "CONVERGED!\n";
    Print<[string]>(_t1E76);
    StabilizeAll;
    goto JOIN1E7A
  JOIN1E7A:  preds = [MASSIGN1E79,COND1E75]
    goto JOIN1E7B
  JOIN1E7B:  preds = [JOIN1E7A,COND1E74]
    continue
#### end program ####
##### mid-ir: after contraction ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1AEA (meshData) = <no-default>
  input 0space0473_intermedateGlobal1AEB (space) = <no-default>
  input 0data0475_intermedateGlobal1AEC (data) = <no-default>
  input rad1AED (rad) = <default>
  input eps1AEE (eps) = <default>
  input v01AEF (v0) = <default>
  input ipos1AF0 (ipos) = <no-default>
## functions
  function int sum1E1D (particle P1E1E#1) {
    ENTRY1E1F:  preds = []
      int _t1E20#1 = P1E1E.test;
      return _t1E20
}
  function int sum1E25 (particle P1E26#1) {
    ENTRY1E27:  preds = []
      int _t1E28#1 = P1E26.testp;
      return _t1E28
}
  function bool all1E2D (particle P1E2E#1) {
    ENTRY1E2F:  preds = []
      bool _t1E30#1 = P1E2E.found;
      return _t1E30
}
  function real max1E35 (particle P1E36#1) {
    ENTRY1E37:  preds = []
      tensor[3] _t1E38#1 = P1E36.step;
      real op1_e3_l_11E3B#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (_t1E38);
      real _t1E3A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11E3B);
      return _t1E3A
}
  function real max1E41 (particle P1E42#1) {
    ENTRY1E43:  preds = []
      tensor[3] _t1E44#1 = P1E42.pos;
      real _t1E46#3 = 0.5e0;
      tensor[3] _t1E48#1 = <tensor[3]>[_t1E46,_t1E46,_t1E46];
      tensor[3] op1_e3_l_21E4B#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1E44,_t1E48);
      real op1_e3_l_41E4C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21E4B,op1_e3_l_21E4B);
      real _t1E4A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41E4C);
      return _t1E4A
}
  function real min1E53 (particle P1E54#1) {
    ENTRY1E55:  preds = []
      tensor[3] _t1E56#1 = P1E54.pos;
      real _t1E58#3 = 0.5e0;
      tensor[3] _t1E5A#1 = <tensor[3]>[_t1E58,_t1E58,_t1E58];
      tensor[3] op1_e3_l_21E5D#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1E56,_t1E5A);
      real op1_e3_l_41E5E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21E5D,op1_e3_l_21E5D);
      real _t1E5C#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41E5E);
      return _t1E5C
}
## input initialization
  ENTRY1AF1:  preds = []
    real rad1AF2#2 = 0.1e-1;
    globals.rad1AED = rad1AF2;
    globals.eps1AEE = rad1AF2;
    real v01AF6#1 = 0.625e-1;
    globals.v01AEF = v01AF6;
    return
## global-variable initialization
  ENTRY1AFA:  preds = []
    femData:Mesh meshData1AFB#2 = globals.meshData1AEA;
    int _t1AFD#1 = 0;
    int _t1AFF#1 = 1;
    int _t1B01#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData1AFB);
    int _t1B03#1 = ISub(_t1B01,_t1AFF);
    int[] _t1B05#1 = Range(_t1AFD,_t1B03);
    femData:MeshCell[] _t1B07#1 = <femData:MeshCell[]>{};
  FOREACH1B0A:  preds = [ASSIGN1B08,NEXT1B10]
    foreach (_t1B09 in _t1B05) on exit goto RETURN1B11
      femData:MeshCell[] _t1B0E#1 = phi(_t1B07,_t1B0D)
    femData:MeshCell _t1B0B#1 = LoadFem<femData:MeshCell>(meshData1AFB,_t1B09);
    femData:MeshCell[] _t1B0D#1 = Append<femData:MeshCell>(_t1B0E,_t1B0B);
    goto FOREACH1B0A
  RETURN1B11:  preds = [FOREACH1B0A]
    return
## strand
  strand particle (tensor[3] pos01B12#2, real hh01B13#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY1B1C:  preds = []
        tensor[3] step1B1D#1 = λ()<Z_{i0}>_{3} ();
        bool found1B1F#1 = false;
        int nfs1B21#2 = 0;
        int test1B23#1 = 1;
        self.pos = pos01B12;
        self._pos = pos01B12;
        self.hh = hh01B13;
        self.step = step1B1D;
        self.found = found1B1F;
        self.nfs = nfs1B21;
        self.test = test1B23;
        self.testp = nfs1B21;
        return
    end state init
    method update
        ENTRY1B2E:  preds = []
          real rad1B2F#10 = globals.rad1AED;
          real eps1B31#1 = globals.eps1AEE;
          real v01B33#3 = globals.v01AEF;
          tensor[3] pos1B35#6 = self.pos;
          real hh1B37#7 = self.hh;
          bool found1B39#3 = self.found;
          int nfs1B3B#3 = self.nfs;
          int testp1B3D#2 = self.testp;
          real _t1B3F#12 = 0.5e0;
          tensor[3] _t1B41#3 = <tensor[3]>[_t1B3F,_t1B3F,_t1B3F];
          tensor[3] mid1B43#11 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real _t1B45#1 = TensorIndex<tensor[3],[0]>(mid1B43);
          real _t1B47#1 = λ(T0[])<Abs(T0)> (_t1B45);
          bool _t1B49#1 = LTE<real>(_t1B47,_t1B3F);
          if _t1B49 then goto ASSIGN1B4D else goto ASSIGN1E0B
        ASSIGN1B4D:  preds = [COND1B4B]
          real _t1B4C#1 = TensorIndex<tensor[3],[1]>(mid1B43);
          real _t1B4E#1 = λ(T0[])<Abs(T0)> (_t1B4C);
          bool _t1B50#1 = LTE<real>(_t1B4E,_t1B3F);
          if _t1B50 then goto ASSIGN1B54 else goto ASSIGN1E0A
        ASSIGN1B54:  preds = [COND1B52]
          real _t1B53#1 = TensorIndex<tensor[3],[2]>(mid1B43);
          real _t1B55#1 = λ(T0[])<Abs(T0)> (_t1B53);
          bool _t1B57#1 = LTE<real>(_t1B55,_t1B3F);
          goto JOIN1B5B
        JOIN1B5B:  preds = [ASSIGN1B58,ASSIGN1E0A]
          bool _t1B59#1 = phi(_t1B57,_t1B5A)
          goto JOIN1B5E
        JOIN1B5E:  preds = [JOIN1B5B,ASSIGN1E0B]
          bool _t1B5C#1 = phi(_t1B59,_t1B5D)
          bool _t1B5F#1 = BNot(_t1B5C);
          if _t1B5F then goto ASSIGN1B63 else goto ASSIGN1DFE
        ASSIGN1B63:  preds = [COND1B61]
          bool _t1B62#1 = true;
          goto JOIN1B66
        JOIN1B66:  preds = [ASSIGN1B63,ASSIGN1E09]
          bool _t1B64#1 = phi(_t1B62,_t1B65)
          if _t1B64 then goto DIE1B68 else goto JOIN1B69
        DIE1B68:  preds = [COND1B67]
          die
          goto JOIN1B69
        JOIN1B69:  preds = [*DIE1B68,COND1B67]
          bool _t1B6A#1 = BNot(found1B39);
          if _t1B6A then goto ASSIGN1B6E else goto ASSIGN1BCA
        ASSIGN1B6E:  preds = [COND1B6C]
          real _t1B6D#2 = 0.2e1;
          real op1_e3_l_161B71#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1B43,mid1B43);
          tensor[3] op1_e3_l_211B72#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B6D,mid1B43);
          real op1_e3_l_221B73#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1B6D,op1_e3_l_161B71);
          real op1_e3_l_231B74#3 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_161B71);
          tensor[3] op1_e3_l_241B75#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_211B72,op1_e3_l_221B73);
          tensor[3] _t1B6F#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_231B74,op1_e3_l_241B75);
          tensor[3] pos1B7D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,_t1B6F);
          real op1_e3_l_371B94#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_241B75,op1_e3_l_241B75);
          real op1_e3_l_381B95#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_231B74,op1_e3_l_231B74,op1_e3_l_371B94);
          real op1_e3_l_391B96#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_381B95);
          real _t1B8D#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_391B96);
          bool _t1BA1#1 = GT<real>(_t1B8D,eps1B31);
          if _t1BA1 then goto ASSIGN1BA5 else goto ASSIGN1BC7
        ASSIGN1BA5:  preds = [COND1BA3]
          int _t1BA4#1 = 1;
          int nfs1BA6#2 = IAdd(nfs1B3B,_t1BA4);
          int _t1BA8#1 = 10;
          bool _t1BAA#1 = GT<int>(nfs1BA6,_t1BA8);
          if _t1BAA then goto DIE1BAD else goto JOIN1BAE
        DIE1BAD:  preds = [COND1BAC]
          die
          goto JOIN1BAE
        JOIN1BAE:  preds = [*DIE1BAD,COND1BAC]
          goto JOIN1BB4
        JOIN1BB4:  preds = [JOIN1BAE,ASSIGN1BC8]
          int testp1BAF#1 = phi(testp1B3D,testp1BB0)
          int nfs1BB1#1 = phi(nfs1BA6,nfs1B3B)
          bool found1BB2#1 = phi(found1B39,found1BB3)
          goto JOIN1BBE
        JOIN1BBE:  preds = [JOIN1BB4,JOIN1DFC]
          int testp1BB5#1 = phi(testp1BAF,testp1B3D)
          int nfs1BB6#1 = phi(nfs1BB1,nfs1B3B)
          bool found1BB7#1 = phi(found1BB2,found1B39)
          tensor[3] step1BB8#1 = phi(_t1B6F,up1BB9)
          real hh1BBA#1 = phi(hh1B37,hh1BBB)
          tensor[3] pos1BBC#2 = phi(pos1B7D,pos1BBD)
          self.pos = pos1BBC;
          self._pos = pos1BBC;
          self.hh = hh1BBA;
          self.step = step1BB8;
          self.found = found1BB7;
          self.nfs = nfs1BB6;
          self.testp = testp1BB5;
          active
        ASSIGN1BC7:  preds = [COND1BA3]
          bool found1BB3#1 = true;
          int testp1BB0#1 = 1;
          goto JOIN1BB4
        ASSIGN1BCA:  preds = [COND1B6C]
          real _t1BC9#6 = 0.2e1;
          real op1_e3_l_171BCD#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1B43,mid1B43);
          tensor[3] op1_e3_l_221BCE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,mid1B43);
          real op1_e3_l_231BCF#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_171BCD);
          real op1_e3_l_241BD0#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_171BCD);
          tensor[3] op1_e3_l_251BD1#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_221BCE,op1_e3_l_231BCF);
          tensor[3] op1_e3_l_261BD2#4 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_241BD0,op1_e3_l_251BD1);
          tensor[3] pos1BCB#10 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_261BD2);
          tensor[3] step1BDB#4 = λ()<Z_{i0}>_{3} ();
          real oldE1BDD#4 = 0.e0;
          int nn1BDF#2 = 0;
          particle[] _t1BE1#1 = SphereQuery<3,particle>(pos1BCB,rad1B2F);
        FOREACH1BE4:  preds = [ASSIGN1BE2,NEXT1C36]
          foreach (P1BE3 in _t1BE1) on exit goto ASSIGN1C38
            int nn1C34#3 = phi(nn1BDF,nn1C33)
            tensor[3] force1C0D#2 = phi(step1BDB,force1C0C)
            real oldE1BEA#2 = phi(oldE1BDD,oldE1BE9)
          tensor[3] _t1BE5#1 = P1BE3.pos;
          real _t1BE7#2 = 0.1e1;
          tensor[3] op1_e3_l_451BF3#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1BE5,pos1BCB);
          real op1_e3_l_471BF4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_451BF3,op1_e3_l_451BF3);
          real op1_e3_l_481BF5#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_471BF4);
          real op1_e3_l_491BF6#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_481BF5);
          real op1_e3_l_501BF7#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1BE7,op1_e3_l_491BF6);
          real op1_e3_l_511BF8#1 = λ(T0[])<(T0)^4> (op1_e3_l_501BF7);
          real oldE1BE9#1 = λ(T0[],T1[])<(T0 + T1)> (oldE1BEA,op1_e3_l_511BF8);
          real _t1C0A#1 = -0.4e1;
          real op1_e3_l_991C1B#1 = λ(T0[])<(T0)^3> (op1_e3_l_501BF7);
          real op1_e3_l_1001C1C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1BE7,rad1B2F);
          tensor[3] op1_e3_l_1311C1D#1 = λ(T0[],T1[],T2[],T3[3])<(T0 * T1 * T2 * T3_{i0})>_{3} (_t1C0A,op1_e3_l_991C1B,op1_e3_l_1001C1C,op1_e3_l_451BF3);
          tensor[3] op1_e3_l_1331C1E#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1311C1D,op1_e3_l_481BF5);
          tensor[3] force1C0C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (force1C0D,op1_e3_l_1331C1E);
          int _t1C31#1 = 1;
          int nn1C33#1 = IAdd(nn1C34,_t1C31);
          goto FOREACH1BE4
        ASSIGN1C38:  preds = [FOREACH1BE4]
          bool _t1C37#1 = EQ<int>(nn1BDF,nn1C34);
          if _t1C37 then goto ASSIGN1C3B else goto JOIN1C53
        ASSIGN1C3B:  preds = [COND1C39]
          real _t1C3A#1 = λ(T0[],T1[])<(T0 * T1)> (_t1B3F,rad1B2F);
          tensor[3] _t1C3C#1 = <tensor[3]>[_t1C3A,oldE1BDD,oldE1BDD];
          tensor[3] _t1C3E#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,_t1C3C,op1_e3_l_261BD2);
          new particle(_t1C3E,hh1B37);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.step = step1BDB;
          active
          goto JOIN1C53
        JOIN1C53:  preds = [*ACTIVE1C52,COND1C39]
          tensor[3] op1_e3_l_1091C5D#4 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,pos1BCB);
          real op1_e3_l_1111C5E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1091C5D,op1_e3_l_1091C5D);
          real op1_e3_l_1121C5F#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1111C5E);
          real op1_e3_l_1131C60#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1121C5F);
          real op1_e3_l_1591C61#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1131C60);
          tensor[3,3] op1_e3_l_1621C62#1 = λ(T0[],T1[3],T2[],T3[3],T4[])<(T0 * T0 * T1_{i0} * T2 * T3_{i1} * T4)>_{3 3} (_t1BC9,op1_e3_l_1091C5D,op1_e3_l_1591C61,op1_e3_l_1091C5D,op1_e3_l_1591C61);
          tensor[3,3] op1_e3_l_1631C63#1 = λ(T0[3 3])<(δ_{i0,i1}) - (T0_{i0,i1})>_{3 3} (op1_e3_l_1621C62);
          tensor[3] op1_e3_l_1641C64#5 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (force1C0D,op1_e3_l_1631C63);
          tensor[3] es1C54#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (hh1B37,op1_e3_l_1641C64);
          real op1_e3_l_2601C87#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1641C64,op1_e3_l_1641C64);
          real op1_e3_l_2611C88#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (hh1B37,op1_e3_l_2601C87);
          real _t1C76#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2611C88);
          bool _t1C9C#1 = GT<real>(_t1C76,rad1B2F);
          if _t1C9C then goto ASSIGN1E83 else goto JOIN1CF5
        ASSIGN1E83:  preds = [COND1C9E]
          real op1_e3_l_2651CB3#2 = λ(T0[],T1[])<(T0) / ( T1)> (rad1B2F,_t1C76);
          real hh1C9F#1 = λ(T0[],T1[])<(T0 * T1)> (hh1B37,op1_e3_l_2651CB3);
          tensor[3] es1CC9#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (hh1B37,op1_e3_l_2651CB3,op1_e3_l_1641C64);
          goto JOIN1CF5
        JOIN1CF5:  preds = [ASSIGN1E84,COND1C9E]
          tensor[3] es1CF3#5 = phi(es1CC9,es1C54)
          real hh1CF4#2 = phi(hh1C9F,hh1B37)
          tensor[3] op1_e3_l_1021CFE#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_261BD2);
          tensor[3] op1_e3_l_1161CFF#3 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_1021CFE);
          real op1_e3_l_1181D00#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1161CFF,op1_e3_l_1161CFF);
          tensor[3] op1_e3_l_1911D01#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1161CFF);
          real op1_e3_l_1921D02#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1181D00);
          tensor[3] op1_e3_l_2381D03#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1911D01,op1_e3_l_1921D02);
          real op1_e3_l_2401D04#3 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1181D00);
          real op1_e3_l_2421D05#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2381D03,op1_e3_l_2381D03);
          real op1_e3_l_2431D06#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_2401D04,op1_e3_l_2401D04,op1_e3_l_2421D05);
          real op1_e3_l_2441D07#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (es1CF3);
          real op1_e3_l_2451D08#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2431D06);
          real op1_e3_l_2461D09#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2441D07);
          real _t1CF6#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_2451D08,op1_e3_l_2461D09);
          bool _t1D1E#1 = GT<real>(_t1CF6,_t1B3F);
          if _t1D1E then goto ASSIGN1D22 else goto JOIN1D29
        ASSIGN1D22:  preds = [COND1D20]
          real hh1D21#1 = λ(T0[],T1[])<(T0 * T1)> (hh1CF4,_t1B3F);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.hh = hh1D21;
          self.step = step1BDB;
          active
          goto JOIN1D29
        JOIN1D29:  preds = [*ACTIVE1D27,COND1D20]
          real hh1D28#2 = phi(hh1CF4)
          tensor[3] op1_e3_l_1661D38#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_2401D04,op1_e3_l_2381D03);
          tensor[3] up1BB9#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (es1CF3,op1_e3_l_1661D38);
          tensor[3] pos1D49#4 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T2_{i0} + T3_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_261BD2,op1_e3_l_1661D38);
          particle[] _t1D69#1 = SphereQuery<3,particle>(pos1D49,rad1B2F);
        FOREACH1D6C:  preds = [ASSIGN1D6A,NEXT1DA0]
          foreach (P1D6B in _t1D69) on exit goto ASSIGN1DA2
            real accum1D72#2 = phi(oldE1BDD,accum1D71)
          tensor[3] _t1D6D#1 = P1D6B.pos;
          real _t1D6F#1 = 0.1e1;
          tensor[3] op1_e3_l_2891D83#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1D6D,pos1D49);
          real op1_e3_l_2911D84#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2891D83,op1_e3_l_2891D83);
          real op1_e3_l_2921D85#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2911D84);
          real op1_e3_l_2931D86#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_2921D85);
          real op1_e3_l_2941D87#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D6F,op1_e3_l_2931D86);
          real op1_e3_l_2951D88#1 = λ(T0[])<(T0)^4> (op1_e3_l_2941D87);
          real accum1D71#1 = λ(T0[],T1[])<(T0 + T1)> (accum1D72,op1_e3_l_2951D88);
          goto FOREACH1D6C
        ASSIGN1DA2:  preds = [FOREACH1D6C]
          real _t1DA1#1 = λ(T0[],T1[])<(T0) - (T1)> (accum1D72,oldE1BEA);
          tensor[3] op1_e3_l_3881DBD#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1D49,pos1BCB);
          tensor[3] op1_e3_l_3891DBE#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_1641C64);
          real op1_e3_l_3901DBF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_3881DBD,op1_e3_l_3891DBE);
          real _t1DA3#1 = λ(T0[],T1[])<(T0 * T1)> (_t1B3F,op1_e3_l_3901DBF);
          bool _t1DDD#1 = GT<real>(_t1DA1,_t1DA3);
          if _t1DDD then goto ASSIGN1DE1 else goto JOIN1DE8
        ASSIGN1DE1:  preds = [COND1DDF]
          real hh1DE0#1 = λ(T0[],T1[])<(T0 * T1)> (hh1D28,_t1B3F);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.hh = hh1DE0;
          self.step = step1BDB;
          active
          goto JOIN1DE8
        JOIN1DE8:  preds = [*ACTIVE1DE6,COND1DDF]
          real hh1DE7#1 = phi(hh1D28)
          tensor[3] pos1BBD#2 = phi(pos1D49)
          real _t1DE9#1 = 0.11e1;
          real hh1BBB#2 = λ(T0[],T1[])<(T0 * T1)> (hh1DE7,_t1DE9);
          int _t1DEC#1 = 5;
          bool _t1DEE#1 = LT<int>(nn1C34,_t1DEC);
          if _t1DEE then goto ASSIGN1E8A else goto JOIN1DFC
        ASSIGN1E8A:  preds = [COND1DF0]
          real op1_e3_l_71DF4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_2461D09);
          tensor[3] op1_e3_l_81DF5#1 = λ(T0[],T1[],T2[3],T3[])<(T0 * T1 * T2_{i0} * T3)>_{3} (_t1B3F,rad1B2F,es1CF3,op1_e3_l_71DF4);
          tensor[3] _t1DF1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1BBD,op1_e3_l_81DF5);
          new particle(_t1DF1,hh1BBB);
          goto JOIN1DFC
        JOIN1DFC:  preds = [NEW1DFB,COND1DF0]
          goto JOIN1BBE
        ASSIGN1DFE:  preds = [COND1B61]
          real _t1DFD#1 = 0.2e1;
          real op1_e3_l_51E01#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1B43,mid1B43);
          real op1_e3_l_61E02#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1DFD,op1_e3_l_51E01);
          real _t1DFF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61E02);
          real _t1E07#1 = 0.e0;
          bool _t1B65#1 = EQ<real>(_t1DFF,_t1E07);
          goto JOIN1B66
        ASSIGN1E0A:  preds = [COND1B52]
          bool _t1B5A#1 = false;
          goto JOIN1B5B
        ASSIGN1E0B:  preds = [COND1B4B]
          bool _t1B5D#1 = false;
          goto JOIN1B5E
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY1E0C:  preds = []
      tensor[3][] ipos1E0D#1 = globals.ipos1AF0;
    FOREACH1E10:  preds = [ASSIGN1E0E,NEXT1E14]
      foreach (x1E0F in ipos1E0D) on exit goto RETURN1E15
      real _t1E11#1 = 0.1e1;
      new particle(x1E0F,_t1E11);
      goto FOREACH1E10
    RETURN1E15:  preds = [FOREACH1E10]
      return
## global update
  ENTRY1E16:  preds = []
    real rad1E17#1 = globals.rad1AED;
    real eps1E19#1 = globals.eps1AEE;
    particle[] P1E1B#6 = Strands<particle,all>;
    (int res1E23#1) = sum<int>(MAP sum1E1D (P1E1B));
    (int res1E2B#1) = sum<int>(MAP sum1E25 (P1E1B));
    (bool res1E33#2) = all(MAP all1E2D (P1E1B));
    (real res1E3F#1) = max<real>(MAP max1E35 (P1E1B));
    (real res1E51#1) = max<real>(MAP max1E41 (P1E1B));
    (real res1E63#1) = min<real>(MAP min1E53 (P1E1B));
    tensor[2] averageDist1E65#1 = <tensor[2]>[res1E63,res1E51];
    string _t1E67#1 = "One run:";
    string _t1E69#4 = " and ";
    real _t1E6B#2 = λ(T0[],T1[])<(T0) / ( T1)> (res1E3F,rad1E17);
    bool _t1E6D#2 = LT<real>(_t1E6B,eps1E19);
    string _t1E6F#1 = " of ";
    string _t1E71#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t1E67,res1E33,_t1E69,_t1E6B,_t1E69,_t1E6D,_t1E69,res1E2B,_t1E6F,res1E23,_t1E69,averageDist1E65,_t1E71);
    if res1E33 then goto COND1E75 else goto JOIN1E7B
  COND1E75:  preds = [COND1E74]
    if _t1E6D then goto ASSIGN1E77 else goto JOIN1E7A
  ASSIGN1E77:  preds = [COND1E75]
    string _t1E76#1 = "CONVERGED!\n";
    Print<[string]>(_t1E76);
    StabilizeAll;
    goto JOIN1E7A
  JOIN1E7A:  preds = [MASSIGN1E79,COND1E75]
    goto JOIN1E7B
  JOIN1E7B:  preds = [JOIN1E7A,COND1E74]
    continue
#### end program ####
##### mid-ir: after border control ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1AEA (meshData) = <no-default>
  input 0space0473_intermedateGlobal1AEB (space) = <no-default>
  input 0data0475_intermedateGlobal1AEC (data) = <no-default>
  input rad1AED (rad) = <default>
  input eps1AEE (eps) = <default>
  input v01AEF (v0) = <default>
  input ipos1AF0 (ipos) = <no-default>
## functions
  function int sum1E1D (particle P1E1E#1) {
    ENTRY1E1F:  preds = []
      int _t1E20#1 = P1E1E.test;
      return _t1E20
}
  function int sum1E25 (particle P1E26#1) {
    ENTRY1E27:  preds = []
      int _t1E28#1 = P1E26.testp;
      return _t1E28
}
  function bool all1E2D (particle P1E2E#1) {
    ENTRY1E2F:  preds = []
      bool _t1E30#1 = P1E2E.found;
      return _t1E30
}
  function real max1E35 (particle P1E36#1) {
    ENTRY1E37:  preds = []
      tensor[3] _t1E38#1 = P1E36.step;
      real op1_e3_l_11E3B#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (_t1E38);
      real _t1E3A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_11E3B);
      return _t1E3A
}
  function real max1E41 (particle P1E42#1) {
    ENTRY1E43:  preds = []
      tensor[3] _t1E44#1 = P1E42.pos;
      real _t1E46#3 = 0.5e0;
      tensor[3] _t1E48#1 = <tensor[3]>[_t1E46,_t1E46,_t1E46];
      tensor[3] op1_e3_l_21E4B#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1E44,_t1E48);
      real op1_e3_l_41E4C#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21E4B,op1_e3_l_21E4B);
      real _t1E4A#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41E4C);
      return _t1E4A
}
  function real min1E53 (particle P1E54#1) {
    ENTRY1E55:  preds = []
      tensor[3] _t1E56#1 = P1E54.pos;
      real _t1E58#3 = 0.5e0;
      tensor[3] _t1E5A#1 = <tensor[3]>[_t1E58,_t1E58,_t1E58];
      tensor[3] op1_e3_l_21E5D#2 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1E56,_t1E5A);
      real op1_e3_l_41E5E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_21E5D,op1_e3_l_21E5D);
      real _t1E5C#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_41E5E);
      return _t1E5C
}
## input initialization
  ENTRY1AF1:  preds = []
    real rad1AF2#2 = 0.1e-1;
    globals.rad1AED = rad1AF2;
    globals.eps1AEE = rad1AF2;
    real v01AF6#1 = 0.625e-1;
    globals.v01AEF = v01AF6;
    return
## global-variable initialization
  ENTRY1AFA:  preds = []
    femData:Mesh meshData1AFB#2 = globals.meshData1AEA;
    int _t1AFD#1 = 0;
    int _t1AFF#1 = 1;
    int _t1B01#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData1AFB);
    int _t1B03#1 = ISub(_t1B01,_t1AFF);
    int[] _t1B05#1 = Range(_t1AFD,_t1B03);
    femData:MeshCell[] _t1B07#1 = <femData:MeshCell[]>{};
  FOREACH1B0A:  preds = [ASSIGN1B08,NEXT1B10]
    foreach (_t1B09 in _t1B05) on exit goto RETURN1B11
      femData:MeshCell[] _t1B0E#1 = phi(_t1B07,_t1B0D)
    femData:MeshCell _t1B0B#1 = LoadFem<femData:MeshCell>(meshData1AFB,_t1B09);
    femData:MeshCell[] _t1B0D#1 = Append<femData:MeshCell>(_t1B0E,_t1B0B);
    goto FOREACH1B0A
  RETURN1B11:  preds = [FOREACH1B0A]
    return
## strand
  strand particle (tensor[3] pos01B12#2, real hh01B13#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY1B1C:  preds = []
        tensor[3] step1B1D#1 = λ()<Z_{i0}>_{3} ();
        bool found1B1F#1 = false;
        int nfs1B21#2 = 0;
        int test1B23#1 = 1;
        self.pos = pos01B12;
        self._pos = pos01B12;
        self.hh = hh01B13;
        self.step = step1B1D;
        self.found = found1B1F;
        self.nfs = nfs1B21;
        self.test = test1B23;
        self.testp = nfs1B21;
        return
    end state init
    method update
        ENTRY1B2E:  preds = []
          real rad1B2F#10 = globals.rad1AED;
          real eps1B31#1 = globals.eps1AEE;
          real v01B33#3 = globals.v01AEF;
          tensor[3] pos1B35#6 = self.pos;
          real hh1B37#7 = self.hh;
          bool found1B39#3 = self.found;
          int nfs1B3B#3 = self.nfs;
          int testp1B3D#2 = self.testp;
          real _t1B3F#12 = 0.5e0;
          tensor[3] _t1B41#3 = <tensor[3]>[_t1B3F,_t1B3F,_t1B3F];
          tensor[3] mid1B43#11 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1B35,_t1B41);
          real _t1B45#1 = TensorIndex<tensor[3],[0]>(mid1B43);
          real _t1B47#1 = λ(T0[])<Abs(T0)> (_t1B45);
          bool _t1B49#1 = LTE<real>(_t1B47,_t1B3F);
          if _t1B49 then goto ASSIGN1B4D else goto ASSIGN1E0B
        ASSIGN1B4D:  preds = [COND1B4B]
          real _t1B4C#1 = TensorIndex<tensor[3],[1]>(mid1B43);
          real _t1B4E#1 = λ(T0[])<Abs(T0)> (_t1B4C);
          bool _t1B50#1 = LTE<real>(_t1B4E,_t1B3F);
          if _t1B50 then goto ASSIGN1B54 else goto ASSIGN1E0A
        ASSIGN1B54:  preds = [COND1B52]
          real _t1B53#1 = TensorIndex<tensor[3],[2]>(mid1B43);
          real _t1B55#1 = λ(T0[])<Abs(T0)> (_t1B53);
          bool _t1B57#1 = LTE<real>(_t1B55,_t1B3F);
          goto JOIN1B5B
        JOIN1B5B:  preds = [ASSIGN1B58,ASSIGN1E0A]
          bool _t1B59#1 = phi(_t1B57,_t1B5A)
          goto JOIN1B5E
        JOIN1B5E:  preds = [JOIN1B5B,ASSIGN1E0B]
          bool _t1B5C#1 = phi(_t1B59,_t1B5D)
          bool _t1B5F#1 = BNot(_t1B5C);
          if _t1B5F then goto ASSIGN1B63 else goto ASSIGN1DFE
        ASSIGN1B63:  preds = [COND1B61]
          bool _t1B62#1 = true;
          goto JOIN1B66
        JOIN1B66:  preds = [ASSIGN1B63,ASSIGN1E09]
          bool _t1B64#1 = phi(_t1B62,_t1B65)
          if _t1B64 then goto DIE1B68 else goto JOIN1B69
        DIE1B68:  preds = [COND1B67]
          die
          goto JOIN1B69
        JOIN1B69:  preds = [*DIE1B68,COND1B67]
          bool _t1B6A#1 = BNot(found1B39);
          if _t1B6A then goto ASSIGN1B6E else goto ASSIGN1BCA
        ASSIGN1B6E:  preds = [COND1B6C]
          real _t1B6D#2 = 0.2e1;
          real op1_e3_l_161B71#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1B43,mid1B43);
          tensor[3] op1_e3_l_211B72#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1B6D,mid1B43);
          real op1_e3_l_221B73#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1B6D,op1_e3_l_161B71);
          real op1_e3_l_231B74#3 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_161B71);
          tensor[3] op1_e3_l_241B75#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_211B72,op1_e3_l_221B73);
          tensor[3] _t1B6F#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_231B74,op1_e3_l_241B75);
          tensor[3] pos1B7D#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,_t1B6F);
          real op1_e3_l_371B94#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_241B75,op1_e3_l_241B75);
          real op1_e3_l_381B95#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_231B74,op1_e3_l_231B74,op1_e3_l_371B94);
          real op1_e3_l_391B96#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_381B95);
          real _t1B8D#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_391B96);
          bool _t1BA1#1 = GT<real>(_t1B8D,eps1B31);
          if _t1BA1 then goto ASSIGN1BA5 else goto ASSIGN1BC7
        ASSIGN1BA5:  preds = [COND1BA3]
          int _t1BA4#1 = 1;
          int nfs1BA6#2 = IAdd(nfs1B3B,_t1BA4);
          int _t1BA8#1 = 10;
          bool _t1BAA#1 = GT<int>(nfs1BA6,_t1BA8);
          if _t1BAA then goto DIE1BAD else goto JOIN1BAE
        DIE1BAD:  preds = [COND1BAC]
          die
          goto JOIN1BAE
        JOIN1BAE:  preds = [*DIE1BAD,COND1BAC]
          goto JOIN1BB4
        JOIN1BB4:  preds = [JOIN1BAE,ASSIGN1BC8]
          int testp1BAF#1 = phi(testp1B3D,testp1BB0)
          int nfs1BB1#1 = phi(nfs1BA6,nfs1B3B)
          bool found1BB2#1 = phi(found1B39,found1BB3)
          goto JOIN1BBE
        JOIN1BBE:  preds = [JOIN1BB4,JOIN1DFC]
          int testp1BB5#1 = phi(testp1BAF,testp1B3D)
          int nfs1BB6#1 = phi(nfs1BB1,nfs1B3B)
          bool found1BB7#1 = phi(found1BB2,found1B39)
          tensor[3] step1BB8#1 = phi(_t1B6F,up1BB9)
          real hh1BBA#1 = phi(hh1B37,hh1BBB)
          tensor[3] pos1BBC#2 = phi(pos1B7D,pos1BBD)
          self.pos = pos1BBC;
          self._pos = pos1BBC;
          self.hh = hh1BBA;
          self.step = step1BB8;
          self.found = found1BB7;
          self.nfs = nfs1BB6;
          self.testp = testp1BB5;
          active
        ASSIGN1BC7:  preds = [COND1BA3]
          bool found1BB3#1 = true;
          int testp1BB0#1 = 1;
          goto JOIN1BB4
        ASSIGN1BCA:  preds = [COND1B6C]
          real _t1BC9#6 = 0.2e1;
          real op1_e3_l_171BCD#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1B43,mid1B43);
          tensor[3] op1_e3_l_221BCE#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,mid1B43);
          real op1_e3_l_231BCF#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_171BCD);
          real op1_e3_l_241BD0#1 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_171BCD);
          tensor[3] op1_e3_l_251BD1#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_221BCE,op1_e3_l_231BCF);
          tensor[3] op1_e3_l_261BD2#4 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_241BD0,op1_e3_l_251BD1);
          tensor[3] pos1BCB#10 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1B35,op1_e3_l_261BD2);
          tensor[3] step1BDB#4 = λ()<Z_{i0}>_{3} ();
          real oldE1BDD#4 = 0.e0;
          int nn1BDF#2 = 0;
          particle[] _t1BE1#1 = SphereQuery<3,particle>(pos1BCB,rad1B2F);
        FOREACH1BE4:  preds = [ASSIGN1BE2,NEXT1C36]
          foreach (P1BE3 in _t1BE1) on exit goto ASSIGN1C38
            int nn1C34#3 = phi(nn1BDF,nn1C33)
            tensor[3] force1C0D#2 = phi(step1BDB,force1C0C)
            real oldE1BEA#2 = phi(oldE1BDD,oldE1BE9)
          tensor[3] _t1BE5#1 = P1BE3.pos;
          real _t1BE7#2 = 0.1e1;
          tensor[3] op1_e3_l_451BF3#3 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (_t1BE5,pos1BCB);
          real op1_e3_l_471BF4#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_451BF3,op1_e3_l_451BF3);
          real op1_e3_l_481BF5#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_471BF4);
          real op1_e3_l_491BF6#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_481BF5);
          real op1_e3_l_501BF7#2 = λ(T0[],T1[])<(T0) - (T1)> (_t1BE7,op1_e3_l_491BF6);
          real op1_e3_l_511BF8#1 = λ(T0[])<(T0)^4> (op1_e3_l_501BF7);
          real oldE1BE9#1 = λ(T0[],T1[])<(T0 + T1)> (oldE1BEA,op1_e3_l_511BF8);
          real _t1C0A#1 = -0.4e1;
          real op1_e3_l_991C1B#1 = λ(T0[])<(T0)^3> (op1_e3_l_501BF7);
          real op1_e3_l_1001C1C#1 = λ(T0[],T1[])<(T0) / ( T1)> (_t1BE7,rad1B2F);
          tensor[3] op1_e3_l_1311C1D#1 = λ(T0[],T1[],T2[],T3[3])<(T0 * T1 * T2 * T3_{i0})>_{3} (_t1C0A,op1_e3_l_991C1B,op1_e3_l_1001C1C,op1_e3_l_451BF3);
          tensor[3] op1_e3_l_1331C1E#1 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1311C1D,op1_e3_l_481BF5);
          tensor[3] force1C0C#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (force1C0D,op1_e3_l_1331C1E);
          int _t1C31#1 = 1;
          int nn1C33#1 = IAdd(nn1C34,_t1C31);
          goto FOREACH1BE4
        ASSIGN1C38:  preds = [FOREACH1BE4]
          bool _t1C37#1 = EQ<int>(nn1BDF,nn1C34);
          if _t1C37 then goto ASSIGN1C3B else goto JOIN1C53
        ASSIGN1C3B:  preds = [COND1C39]
          real _t1C3A#1 = λ(T0[],T1[])<(T0 * T1)> (_t1B3F,rad1B2F);
          tensor[3] _t1C3C#1 = <tensor[3]>[_t1C3A,oldE1BDD,oldE1BDD];
          tensor[3] _t1C3E#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,_t1C3C,op1_e3_l_261BD2);
          new particle(_t1C3E,hh1B37);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.step = step1BDB;
          active
          goto JOIN1C53
        JOIN1C53:  preds = [*ACTIVE1C52,COND1C39]
          tensor[3] op1_e3_l_1091C5D#4 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,pos1BCB);
          real op1_e3_l_1111C5E#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1091C5D,op1_e3_l_1091C5D);
          real op1_e3_l_1121C5F#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1111C5E);
          real op1_e3_l_1131C60#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_1121C5F);
          real op1_e3_l_1591C61#2 = λ(T0[])<(1) / ( T0)> (op1_e3_l_1131C60);
          tensor[3,3] op1_e3_l_1621C62#1 = λ(T0[],T1[3],T2[],T3[3],T4[])<(T0 * T0 * T1_{i0} * T2 * T3_{i1} * T4)>_{3 3} (_t1BC9,op1_e3_l_1091C5D,op1_e3_l_1591C61,op1_e3_l_1091C5D,op1_e3_l_1591C61);
          tensor[3,3] op1_e3_l_1631C63#1 = λ(T0[3 3])<(δ_{i0,i1}) - (T0_{i0,i1})>_{3 3} (op1_e3_l_1621C62);
          tensor[3] op1_e3_l_1641C64#5 = λ(T0[3],T1[3 3])<Σ(i1=0..2)<((T1_{i0,i1} * T0_{i1}))>(i1=0..2)>_{3} (force1C0D,op1_e3_l_1631C63);
          tensor[3] es1C54#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (hh1B37,op1_e3_l_1641C64);
          real op1_e3_l_2601C87#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1641C64,op1_e3_l_1641C64);
          real op1_e3_l_2611C88#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (hh1B37,op1_e3_l_2601C87);
          real _t1C76#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2611C88);
          bool _t1C9C#1 = GT<real>(_t1C76,rad1B2F);
          if _t1C9C then goto ASSIGN1E83 else goto JOIN1CF5
        ASSIGN1E83:  preds = [COND1C9E]
          real op1_e3_l_2651CB3#2 = λ(T0[],T1[])<(T0) / ( T1)> (rad1B2F,_t1C76);
          real hh1C9F#1 = λ(T0[],T1[])<(T0 * T1)> (hh1B37,op1_e3_l_2651CB3);
          tensor[3] es1CC9#1 = λ(T0[],T1[],T2[3])<(T0 * T1 * T2_{i0})>_{3} (hh1B37,op1_e3_l_2651CB3,op1_e3_l_1641C64);
          goto JOIN1CF5
        JOIN1CF5:  preds = [ASSIGN1E84,COND1C9E]
          tensor[3] es1CF3#5 = phi(es1CC9,es1C54)
          real hh1CF4#2 = phi(hh1C9F,hh1B37)
          tensor[3] op1_e3_l_1021CFE#1 = λ(T0[3],T1[3],T2[3])<(T0_{i0} + T2_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_261BD2);
          tensor[3] op1_e3_l_1161CFF#3 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1B41,op1_e3_l_1021CFE);
          real op1_e3_l_1181D00#2 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_1161CFF,op1_e3_l_1161CFF);
          tensor[3] op1_e3_l_1911D01#1 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (_t1BC9,op1_e3_l_1161CFF);
          real op1_e3_l_1921D02#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1BC9,op1_e3_l_1181D00);
          tensor[3] op1_e3_l_2381D03#3 = λ(T0[3],T1[])<(T0_{i0}) / ( T1)>_{3} (op1_e3_l_1911D01,op1_e3_l_1921D02);
          real op1_e3_l_2401D04#3 = λ(T0[],T1[])<(T0) - (T1)> (v01B33,op1_e3_l_1181D00);
          real op1_e3_l_2421D05#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2381D03,op1_e3_l_2381D03);
          real op1_e3_l_2431D06#1 = λ(T0[],T1[],T2[])<(T0 * T1 * T2)> (op1_e3_l_2401D04,op1_e3_l_2401D04,op1_e3_l_2421D05);
          real op1_e3_l_2441D07#1 = λ(T0[3])<Σ(i0=0..2)<((T0_{i0} * T0_{i0}))>(i0=0..2)> (es1CF3);
          real op1_e3_l_2451D08#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2431D06);
          real op1_e3_l_2461D09#2 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2441D07);
          real _t1CF6#1 = λ(T0[],T1[])<(T0) / ( T1)> (op1_e3_l_2451D08,op1_e3_l_2461D09);
          bool _t1D1E#1 = GT<real>(_t1CF6,_t1B3F);
          if _t1D1E then goto ASSIGN1D22 else goto JOIN1D29
        ASSIGN1D22:  preds = [COND1D20]
          real hh1D21#1 = λ(T0[],T1[])<(T0 * T1)> (hh1CF4,_t1B3F);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.hh = hh1D21;
          self.step = step1BDB;
          active
          goto JOIN1D29
        JOIN1D29:  preds = [*ACTIVE1D27,COND1D20]
          real hh1D28#2 = phi(hh1CF4)
          tensor[3] op1_e3_l_1661D38#2 = λ(T0[],T1[3])<(T0 * T1_{i0})>_{3} (op1_e3_l_2401D04,op1_e3_l_2381D03);
          tensor[3] up1BB9#1 = λ(T0[3],T1[3])<(T1_{i0} + T0_{i0})>_{3} (es1CF3,op1_e3_l_1661D38);
          tensor[3] pos1D49#4 = λ(T0[3],T1[3],T2[3],T3[3])<(T0_{i0} + T2_{i0} + T3_{i0} + T1_{i0})>_{3} (pos1B35,es1CF3,op1_e3_l_261BD2,op1_e3_l_1661D38);
          particle[] _t1D69#1 = SphereQuery<3,particle>(pos1D49,rad1B2F);
        FOREACH1D6C:  preds = [ASSIGN1D6A,NEXT1DA0]
          foreach (P1D6B in _t1D69) on exit goto ASSIGN1DA2
            real accum1D72#2 = phi(oldE1BDD,accum1D71)
          tensor[3] _t1D6D#1 = P1D6B.pos;
          real _t1D6F#1 = 0.1e1;
          tensor[3] op1_e3_l_2891D83#2 = λ(T0[3],T1[3])<(T1_{i0}) - (T0_{i0})>_{3} (_t1D6D,pos1D49);
          real op1_e3_l_2911D84#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_2891D83,op1_e3_l_2891D83);
          real op1_e3_l_2921D85#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_2911D84);
          real op1_e3_l_2931D86#1 = λ(T0[],T1[])<(T1) / ( T0)> (rad1B2F,op1_e3_l_2921D85);
          real op1_e3_l_2941D87#1 = λ(T0[],T1[])<(T0) - (T1)> (_t1D6F,op1_e3_l_2931D86);
          real op1_e3_l_2951D88#1 = λ(T0[])<(T0)^4> (op1_e3_l_2941D87);
          real accum1D71#1 = λ(T0[],T1[])<(T0 + T1)> (accum1D72,op1_e3_l_2951D88);
          goto FOREACH1D6C
        ASSIGN1DA2:  preds = [FOREACH1D6C]
          real _t1DA1#1 = λ(T0[],T1[])<(T0) - (T1)> (accum1D72,oldE1BEA);
          tensor[3] op1_e3_l_3881DBD#1 = λ(T0[3],T1[3])<(T0_{i0}) - (T1_{i0})>_{3} (pos1D49,pos1BCB);
          tensor[3] op1_e3_l_3891DBE#1 = λ(T0[3])<Neg(T0_{i0})>_{3} (op1_e3_l_1641C64);
          real op1_e3_l_3901DBF#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (op1_e3_l_3881DBD,op1_e3_l_3891DBE);
          real _t1DA3#1 = λ(T0[],T1[])<(T0 * T1)> (_t1B3F,op1_e3_l_3901DBF);
          bool _t1DDD#1 = GT<real>(_t1DA1,_t1DA3);
          if _t1DDD then goto ASSIGN1DE1 else goto JOIN1DE8
        ASSIGN1DE1:  preds = [COND1DDF]
          real hh1DE0#1 = λ(T0[],T1[])<(T0 * T1)> (hh1D28,_t1B3F);
          self.pos = pos1BCB;
          self._pos = pos1BCB;
          self.hh = hh1DE0;
          self.step = step1BDB;
          active
          goto JOIN1DE8
        JOIN1DE8:  preds = [*ACTIVE1DE6,COND1DDF]
          real hh1DE7#1 = phi(hh1D28)
          tensor[3] pos1BBD#2 = phi(pos1D49)
          real _t1DE9#1 = 0.11e1;
          real hh1BBB#2 = λ(T0[],T1[])<(T0 * T1)> (hh1DE7,_t1DE9);
          int _t1DEC#1 = 5;
          bool _t1DEE#1 = LT<int>(nn1C34,_t1DEC);
          if _t1DEE then goto ASSIGN1E8A else goto JOIN1DFC
        ASSIGN1E8A:  preds = [COND1DF0]
          real op1_e3_l_71DF4#1 = λ(T0[])<(1) / ( T0)> (op1_e3_l_2461D09);
          tensor[3] op1_e3_l_81DF5#1 = λ(T0[],T1[],T2[3],T3[])<(T0 * T1 * T2_{i0} * T3)>_{3} (_t1B3F,rad1B2F,es1CF3,op1_e3_l_71DF4);
          tensor[3] _t1DF1#1 = λ(T0[3],T1[3])<(T0_{i0} + T1_{i0})>_{3} (pos1BBD,op1_e3_l_81DF5);
          new particle(_t1DF1,hh1BBB);
          goto JOIN1DFC
        JOIN1DFC:  preds = [NEW1DFB,COND1DF0]
          goto JOIN1BBE
        ASSIGN1DFE:  preds = [COND1B61]
          real _t1DFD#1 = 0.2e1;
          real op1_e3_l_51E01#1 = λ(T0[3],T1[3])<Σ(i0=0..2)<((T0_{i0} * T1_{i0}))>(i0=0..2)> (mid1B43,mid1B43);
          real op1_e3_l_61E02#1 = λ(T0[],T1[])<(T0 * T0 * T1)> (_t1DFD,op1_e3_l_51E01);
          real _t1DFF#1 = λ(T0[])<Sqrt(T0)> (op1_e3_l_61E02);
          real _t1E07#1 = 0.e0;
          bool _t1B65#1 = EQ<real>(_t1DFF,_t1E07);
          goto JOIN1B66
        ASSIGN1E0A:  preds = [COND1B52]
          bool _t1B5A#1 = false;
          goto JOIN1B5B
        ASSIGN1E0B:  preds = [COND1B4B]
          bool _t1B5D#1 = false;
          goto JOIN1B5E
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY1E0C:  preds = []
      tensor[3][] ipos1E0D#1 = globals.ipos1AF0;
    FOREACH1E10:  preds = [ASSIGN1E0E,NEXT1E14]
      foreach (x1E0F in ipos1E0D) on exit goto RETURN1E15
      real _t1E11#1 = 0.1e1;
      new particle(x1E0F,_t1E11);
      goto FOREACH1E10
    RETURN1E15:  preds = [FOREACH1E10]
      return
## global update
  ENTRY1E16:  preds = []
    real rad1E17#1 = globals.rad1AED;
    real eps1E19#1 = globals.eps1AEE;
    particle[] P1E1B#6 = Strands<particle,all>;
    (int res1E23#1) = sum<int>(MAP sum1E1D (P1E1B));
    (int res1E2B#1) = sum<int>(MAP sum1E25 (P1E1B));
    (bool res1E33#2) = all(MAP all1E2D (P1E1B));
    (real res1E3F#1) = max<real>(MAP max1E35 (P1E1B));
    (real res1E51#1) = max<real>(MAP max1E41 (P1E1B));
    (real res1E63#1) = min<real>(MAP min1E53 (P1E1B));
    tensor[2] averageDist1E65#1 = <tensor[2]>[res1E63,res1E51];
    string _t1E67#1 = "One run:";
    string _t1E69#4 = " and ";
    real _t1E6B#2 = λ(T0[],T1[])<(T0) / ( T1)> (res1E3F,rad1E17);
    bool _t1E6D#2 = LT<real>(_t1E6B,eps1E19);
    string _t1E6F#1 = " of ";
    string _t1E71#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t1E67,res1E33,_t1E69,_t1E6B,_t1E69,_t1E6D,_t1E69,res1E2B,_t1E6F,res1E23,_t1E69,averageDist1E65,_t1E71);
    if res1E33 then goto COND1E75 else goto JOIN1E7B
  COND1E75:  preds = [COND1E74]
    if _t1E6D then goto ASSIGN1E77 else goto JOIN1E7A
  ASSIGN1E77:  preds = [COND1E75]
    string _t1E76#1 = "CONVERGED!\n";
    Print<[string]>(_t1E76);
    StabilizeAll;
    goto JOIN1E7A
  JOIN1E7A:  preds = [MASSIGN1E79,COND1E75]
    goto JOIN1E7B
  JOIN1E7B:  preds = [JOIN1E7A,COND1E74]
    continue
#### end program ####
##### low-ir: after mid-to-low translation ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1E96 (meshData) = <no-default>
  input 0space0473_intermedateGlobal1E97 (space) = <no-default>
  input 0data0475_intermedateGlobal1E98 (data) = <no-default>
  input rad1E99 (rad) = <default>
  input eps1E9A (eps) = <default>
  input v01E9B (v0) = <default>
  input ipos1E9C (ipos) = <no-default>
## functions
  function int sum21BD (particle P21BE#1) {
    ENTRY21BF:  preds = []
      int _t21C0#1 = P21BE.test;
      return _t21C0
}
  function int sum21C5 (particle P21C6#1) {
    ENTRY21C7:  preds = []
      int _t21C8#1 = P21C6.testp;
      return _t21C8
}
  function bool all21CD (particle P21CE#1) {
    ENTRY21CF:  preds = []
      bool _t21D0#1 = P21CE.found;
      return _t21D0
}
  function real max21D5 (particle P21D6#1) {
    ENTRY21D7:  preds = []
      tensor[3] _t21D8#2 = P21D6.step;
      real op1_e3_l_121DA#1 = VDot<3>(_t21D8,_t21D8);
      real _t21DD#1 = Sqrt(op1_e3_l_121DA);
      return _t21DD
}
  function real max21E3 (particle P21E4#1) {
    ENTRY21E5:  preds = []
      tensor[3] _t21E6#1 = P21E4.pos;
      real _t21E8#3 = 0.5e0;
      tensor[3] _t21EA#1 = <tensor[3]>[_t21E8,_t21E8,_t21E8];
      tensor[3] op1_e3_l_221EC#2 = VSub<3>(_t21E6,_t21EA);
      real op1_e3_l_421EF#1 = VDot<3>(op1_e3_l_221EC,op1_e3_l_221EC);
      real _t21F2#1 = Sqrt(op1_e3_l_421EF);
      return _t21F2
}
  function real min21F8 (particle P21F9#1) {
    ENTRY21FA:  preds = []
      tensor[3] _t21FB#1 = P21F9.pos;
      real _t21FD#3 = 0.5e0;
      tensor[3] _t21FF#1 = <tensor[3]>[_t21FD,_t21FD,_t21FD];
      tensor[3] op1_e3_l_22201#2 = VSub<3>(_t21FB,_t21FF);
      real op1_e3_l_42204#1 = VDot<3>(op1_e3_l_22201,op1_e3_l_22201);
      real _t2207#1 = Sqrt(op1_e3_l_42204);
      return _t2207
}
## input initialization
  ENTRY1E9D:  preds = []
    real rad1E9E#2 = 0.1e-1;
    globals.rad1E99 = rad1E9E;
    globals.eps1E9A = rad1E9E;
    real v01EA2#1 = 0.625e-1;
    globals.v01E9B = v01EA2;
    return
## global-variable initialization
  ENTRY1EA6:  preds = []
    femData:Mesh meshData1EA7#2 = globals.meshData1E96;
    int _t1EA9#1 = 0;
    int _t1EAB#1 = 1;
    int _t1EAD#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData1EA7);
    int _t1EAF#1 = ISub(_t1EAD,_t1EAB);
    int[] _t1EB1#1 = Range(_t1EA9,_t1EAF);
    femData:MeshCell[] _t1EB3#1 = <femData:MeshCell[]>{};
  FOREACH1EB6:  preds = [ASSIGN1EB4,NEXT1EBC]
    foreach (_t1EB5 in _t1EB1) on exit goto RETURN1EBD
      femData:MeshCell[] _t1EBA#1 = phi(_t1EB3,_t1EB9)
    femData:MeshCell _t1EB7#1 = LoadFem<femData:MeshCell>(meshData1EA7,_t1EB5);
    femData:MeshCell[] _t1EB9#1 = Append<femData:MeshCell>(_t1EBA,_t1EB7);
    goto FOREACH1EB6
  RETURN1EBD:  preds = [FOREACH1EB6]
    return
## strand
  strand particle (tensor[3] pos01EBE#2, real hh01EBF#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY1EC8:  preds = []
        real realLit1ECA#3 = 0.e0;
        tensor[3] step1EC9#1 = <tensor[3]>[realLit1ECA,realLit1ECA,realLit1ECA];
        bool found1ECE#1 = false;
        int nfs1ED0#2 = 0;
        int test1ED2#1 = 1;
        self.pos = pos01EBE;
        self._pos = pos01EBE;
        self.hh = hh01EBF;
        self.step = step1EC9;
        self.found = found1ECE;
        self.nfs = nfs1ED0;
        self.test = test1ED2;
        self.testp = nfs1ED0;
        return
    end state init
    method update
        ENTRY1EDD:  preds = []
          real rad1EDE#10 = globals.rad1E99;
          real eps1EE0#1 = globals.eps1E9A;
          real v01EE2#3 = globals.v01E9B;
          tensor[3] pos1EE4#6 = self.pos;
          real hh1EE6#8 = self.hh;
          bool found1EE8#3 = self.found;
          int nfs1EEA#3 = self.nfs;
          int testp1EEC#2 = self.testp;
          real _t1EEE#12 = 0.5e0;
          tensor[3] _t1EF0#3 = <tensor[3]>[_t1EEE,_t1EEE,_t1EEE];
          tensor[3] mid1EF2#11 = VSub<3>(pos1EE4,_t1EF0);
          real _t1EF5#1 = VIndex<3,0>(mid1EF2);
          real _t1EF7#1 = Abs<real>(_t1EF5);
          bool _t1EFA#1 = LTE<real>(_t1EF7,_t1EEE);
          if _t1EFA then goto ASSIGN1EFE else goto ASSIGN21AB
        ASSIGN1EFE:  preds = [COND1EFC]
          real _t1EFD#1 = VIndex<3,1>(mid1EF2);
          real _t1EFF#1 = Abs<real>(_t1EFD);
          bool _t1F02#1 = LTE<real>(_t1EFF,_t1EEE);
          if _t1F02 then goto ASSIGN1F06 else goto ASSIGN21AA
        ASSIGN1F06:  preds = [COND1F04]
          real _t1F05#1 = VIndex<3,2>(mid1EF2);
          real _t1F07#1 = Abs<real>(_t1F05);
          bool _t1F0A#1 = LTE<real>(_t1F07,_t1EEE);
          goto JOIN1F0E
        JOIN1F0E:  preds = [ASSIGN1F0B,ASSIGN21AA]
          bool _t1F0C#1 = phi(_t1F0A,_t1F0D)
          goto JOIN1F11
        JOIN1F11:  preds = [JOIN1F0E,ASSIGN21AB]
          bool _t1F0F#1 = phi(_t1F0C,_t1F10)
          bool _t1F12#1 = BNot(_t1F0F);
          if _t1F12 then goto ASSIGN1F16 else goto ASSIGN219B
        ASSIGN1F16:  preds = [COND1F14]
          bool _t1F15#1 = true;
          goto JOIN1F19
        JOIN1F19:  preds = [ASSIGN1F16,ASSIGN21A9]
          bool _t1F17#1 = phi(_t1F15,_t1F18)
          if _t1F17 then goto DIE1F1B else goto JOIN1F1C
        DIE1F1B:  preds = [COND1F1A]
          die
          goto JOIN1F1C
        JOIN1F1C:  preds = [*DIE1F1B,COND1F1A]
          bool _t1F1D#1 = BNot(found1EE8);
          if _t1F1D then goto ASSIGN1F21 else goto ASSIGN1F80
        ASSIGN1F21:  preds = [COND1F1F]
          real _t1F20#3 = 0.2e1;
          real op1_e3_l_161F22#2 = VDot<3>(mid1EF2,mid1EF2);
          tensor[3] op1_e3_l_211F25#3 = VScale<3>(_t1F20,mid1EF2);
          real r1F29#1 = RMul(_t1F20,_t1F20);
          real op1_e3_l_221F28#1 = RMul(r1F29,op1_e3_l_161F22);
          real op1_e3_l_231F2D#3 = RSub(v01EE2,op1_e3_l_161F22);
          real realLit1F31#1 = 0.1e1;
          real r1F32#3 = RDiv(realLit1F31,op1_e3_l_221F28);
          real r1F33#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_211F25);
          real r1F34#1 = RMul(r1F32,r1F33);
          real r1F35#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_211F25);
          real r1F36#1 = RMul(r1F32,r1F35);
          real r1F37#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_211F25);
          real r1F38#1 = RMul(r1F32,r1F37);
          tensor[3] op1_e3_l_241F30#3 = <tensor[3]>[r1F34,r1F36,r1F38];
          tensor[3] _t1F43#2 = VScale<3>(op1_e3_l_231F2D,op1_e3_l_241F30);
          tensor[3] pos1F46#1 = VAdd<3>(pos1EE4,_t1F43);
          real op1_e3_l_371F49#1 = VDot<3>(op1_e3_l_241F30,op1_e3_l_241F30);
          real r1F4D#1 = RMul(op1_e3_l_231F2D,op1_e3_l_231F2D);
          real op1_e3_l_381F4C#1 = RMul(r1F4D,op1_e3_l_371F49);
          real op1_e3_l_391F51#1 = Sqrt(op1_e3_l_381F4C);
          real _t1F54#1 = RDiv(op1_e3_l_391F51,rad1EDE);
          bool _t1F57#1 = GT<real>(_t1F54,eps1EE0);
          if _t1F57 then goto ASSIGN1F5B else goto ASSIGN1F7D
        ASSIGN1F5B:  preds = [COND1F59]
          int _t1F5A#1 = 1;
          int nfs1F5C#2 = IAdd(nfs1EEA,_t1F5A);
          int _t1F5E#1 = 10;
          bool _t1F60#1 = GT<int>(nfs1F5C,_t1F5E);
          if _t1F60 then goto DIE1F63 else goto JOIN1F64
        DIE1F63:  preds = [COND1F62]
          die
          goto JOIN1F64
        JOIN1F64:  preds = [*DIE1F63,COND1F62]
          goto JOIN1F6A
        JOIN1F6A:  preds = [JOIN1F64,ASSIGN1F7E]
          int testp1F65#1 = phi(testp1EEC,testp1F66)
          int nfs1F67#1 = phi(nfs1F5C,nfs1EEA)
          bool found1F68#1 = phi(found1EE8,found1F69)
          goto JOIN1F74
        JOIN1F74:  preds = [JOIN1F6A,JOIN2199]
          int testp1F6B#1 = phi(testp1F65,testp1EEC)
          int nfs1F6C#1 = phi(nfs1F67,nfs1EEA)
          bool found1F6D#1 = phi(found1F68,found1EE8)
          tensor[3] step1F6E#1 = phi(_t1F43,up1F6F)
          real hh1F70#1 = phi(hh1EE6,hh1F71)
          tensor[3] pos1F72#2 = phi(pos1F46,pos1F73)
          self.pos = pos1F72;
          self._pos = pos1F72;
          self.hh = hh1F70;
          self.step = step1F6E;
          self.found = found1F6D;
          self.nfs = nfs1F6C;
          self.testp = testp1F6B;
          active
        ASSIGN1F7D:  preds = [COND1F59]
          bool found1F69#1 = true;
          int testp1F66#1 = 1;
          goto JOIN1F6A
        ASSIGN1F80:  preds = [COND1F1F]
          real _t1F7F#10 = 0.2e1;
          real op1_e3_l_171F81#2 = VDot<3>(mid1EF2,mid1EF2);
          tensor[3] op1_e3_l_221F84#3 = VScale<3>(_t1F7F,mid1EF2);
          real r1F88#1 = RMul(_t1F7F,_t1F7F);
          real op1_e3_l_231F87#1 = RMul(r1F88,op1_e3_l_171F81);
          real op1_e3_l_241F8C#1 = RSub(v01EE2,op1_e3_l_171F81);
          real realLit1F90#1 = 0.1e1;
          real r1F91#3 = RDiv(realLit1F90,op1_e3_l_231F87);
          real r1F92#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_221F84);
          real r1F93#1 = RMul(r1F91,r1F92);
          real r1F94#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_221F84);
          real r1F95#1 = RMul(r1F91,r1F94);
          real r1F96#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_221F84);
          real r1F97#1 = RMul(r1F91,r1F96);
          tensor[3] op1_e3_l_251F8F#1 = <tensor[3]>[r1F93,r1F95,r1F97];
          tensor[3] op1_e3_l_261FA2#4 = VScale<3>(op1_e3_l_241F8C,op1_e3_l_251F8F);
          tensor[3] pos1FA5#10 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          real realLit1FA9#3 = 0.e0;
          tensor[3] step1FA8#4 = <tensor[3]>[realLit1FA9,realLit1FA9,realLit1FA9];
          real oldE1FAD#4 = 0.e0;
          int nn1FAF#2 = 0;
          particle[] _t1FB1#1 = SphereQuery<3,particle>(pos1FA5,rad1EDE);
        FOREACH1FB4:  preds = [ASSIGN1FB2,NEXT200A]
          foreach (P1FB3 in _t1FB1) on exit goto ASSIGN200C
            int nn2008#3 = phi(nn1FAF,nn2007)
            tensor[3] force2002#4 = phi(step1FA8,force2001)
            real oldE1FCE#2 = phi(oldE1FAD,oldE1FCD)
          tensor[3] _t1FB5#1 = P1FB3.pos;
          real _t1FB7#2 = 0.1e1;
          tensor[3] op1_e3_l_451FB9#5 = VSub<3>(_t1FB5,pos1FA5);
          real op1_e3_l_471FBC#1 = VDot<3>(op1_e3_l_451FB9,op1_e3_l_451FB9);
          real op1_e3_l_481FBF#2 = Sqrt(op1_e3_l_471FBC);
          real op1_e3_l_491FC2#1 = RDiv(op1_e3_l_481FBF,rad1EDE);
          real op1_e3_l_501FC5#5 = RSub(_t1FB7,op1_e3_l_491FC2);
          real _Pow_21FC9#2 = RMul(op1_e3_l_501FC5,op1_e3_l_501FC5);
          real op1_e3_l_511FC8#1 = RMul(_Pow_21FC9,_Pow_21FC9);
          real oldE1FCD#1 = RAdd(oldE1FCE,op1_e3_l_511FC8);
          real _t1FD1#1 = -0.4e1;
          real _Pow2_1FD4#1 = RMul(op1_e3_l_501FC5,op1_e3_l_501FC5);
          real op1_e3_l_991FD3#1 = RMul(op1_e3_l_501FC5,_Pow2_1FD4);
          real op1_e3_l_1001FD8#1 = RDiv(_t1FB7,rad1EDE);
          real r1FDC#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_451FB9);
          real r1FDD#1 = RMul(_t1FD1,op1_e3_l_991FD3);
          real r1FDE#3 = RMul(r1FDD,op1_e3_l_1001FD8);
          real r1FDF#1 = RMul(r1FDE,r1FDC);
          real r1FE0#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_451FB9);
          real r1FE1#1 = RMul(r1FDE,r1FE0);
          real r1FE2#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_451FB9);
          real r1FE3#1 = RMul(r1FDE,r1FE2);
          tensor[3] op1_e3_l_1311FDB#3 = <tensor[3]>[r1FDF,r1FE1,r1FE3];
          real realLit1FEF#1 = 0.1e1;
          real r1FF0#3 = RDiv(realLit1FEF,op1_e3_l_481FBF);
          real r1FF1#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_1311FDB);
          real r1FF2#1 = RMul(r1FF0,r1FF1);
          real r1FF3#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_1311FDB);
          real r1FF4#1 = RMul(r1FF0,r1FF3);
          real r1FF5#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_1311FDB);
          real r1FF6#1 = RMul(r1FF0,r1FF5);
          tensor[3] op1_e3_l_1331FEE#1 = <tensor[3]>[r1FF2,r1FF4,r1FF6];
          tensor[3] force2001#1 = VAdd<3>(force2002,op1_e3_l_1331FEE);
          int _t2005#1 = 1;
          int nn2007#1 = IAdd(nn2008,_t2005);
          goto FOREACH1FB4
        ASSIGN200C:  preds = [FOREACH1FB4]
          bool _t200B#1 = EQ<int>(nn1FAF,nn2008);
          if _t200B then goto ASSIGN2010 else goto JOIN201D
        ASSIGN2010:  preds = [COND200D]
          real _t200E#1 = RMul(_t1EEE,rad1EDE);
          tensor[3] _t2011#1 = <tensor[3]>[_t200E,oldE1FAD,oldE1FAD];
          tensor[3] v2014#1 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          tensor[3] _t2013#1 = VAdd<3>(v2014,_t2011);
          new particle(_t2013,hh1EE6);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.step = step1FA8;
          active
          goto JOIN201D
        JOIN201D:  preds = [*ACTIVE201C,COND200D]
          tensor[3] op1_e3_l_109201E#5 = VSub<3>(pos1FA5,_t1EF0);
          real op1_e3_l_1112021#1 = VDot<3>(op1_e3_l_109201E,op1_e3_l_109201E);
          real r2025#1 = RMul(_t1F7F,_t1F7F);
          real op1_e3_l_1122024#1 = RMul(r2025,op1_e3_l_1112021);
          real op1_e3_l_1132029#1 = Sqrt(op1_e3_l_1122024);
          real realLit202D#1 = 0.1e1;
          real op1_e3_l_159202C#12 = RDiv(realLit202D,op1_e3_l_1132029);
          real r2032#4 = TensorIndex<tensor[3],[0]>(op1_e3_l_109201E);
          real r2033#3 = RMul(_t1F7F,_t1F7F);
          real r2034#1 = RMul(r2033,r2032);
          real r2035#3 = RMul(r2034,op1_e3_l_159202C);
          real r2036#1 = RMul(r2035,r2032);
          real r2037#1 = RMul(r2036,op1_e3_l_159202C);
          real r2038#4 = TensorIndex<tensor[3],[1]>(op1_e3_l_109201E);
          real r2039#1 = RMul(r2035,r2038);
          real r203A#1 = RMul(r2039,op1_e3_l_159202C);
          real r203B#4 = TensorIndex<tensor[3],[2]>(op1_e3_l_109201E);
          real r203C#1 = RMul(r2035,r203B);
          real r203D#1 = RMul(r203C,op1_e3_l_159202C);
          tensor[3] tensor203E#1 = <tensor[3]>[r2037,r203A,r203D];
          real r203F#1 = RMul(r2033,r2038);
          real r2040#3 = RMul(r203F,op1_e3_l_159202C);
          real r2041#1 = RMul(r2040,r2032);
          real r2042#1 = RMul(r2041,op1_e3_l_159202C);
          real r2043#1 = RMul(r2040,r2038);
          real r2044#1 = RMul(r2043,op1_e3_l_159202C);
          real r2045#1 = RMul(r2040,r203B);
          real r2046#1 = RMul(r2045,op1_e3_l_159202C);
          tensor[3] tensor2047#1 = <tensor[3]>[r2042,r2044,r2046];
          real r2048#1 = RMul(r2033,r203B);
          real r2049#3 = RMul(r2048,op1_e3_l_159202C);
          real r204A#1 = RMul(r2049,r2032);
          real r204B#1 = RMul(r204A,op1_e3_l_159202C);
          real r204C#1 = RMul(r2049,r2038);
          real r204D#1 = RMul(r204C,op1_e3_l_159202C);
          real r204E#1 = RMul(r2049,r203B);
          real r204F#1 = RMul(r204E,op1_e3_l_159202C);
          tensor[3] tensor2050#1 = <tensor[3]>[r204B,r204D,r204F];
          tensor[3,3] op1_e3_l_1622031#9 = <tensor[3,3]>[tensor203E,tensor2047,tensor2050];
          real realLit2073#3 = 0.1e1;
          real r2074#1 = TensorIndex<tensor[3,3],[0,0]>(op1_e3_l_1622031);
          real r2075#1 = RSub(realLit2073,r2074);
          real realLit2076#6 = 0.e0;
          real r2077#1 = TensorIndex<tensor[3,3],[0,1]>(op1_e3_l_1622031);
          real r2078#1 = RSub(realLit2076,r2077);
          real r2079#1 = TensorIndex<tensor[3,3],[0,2]>(op1_e3_l_1622031);
          real r207A#1 = RSub(realLit2076,r2079);
          tensor[3] tensor207B#1 = <tensor[3]>[r2075,r2078,r207A];
          real r207C#1 = TensorIndex<tensor[3,3],[1,0]>(op1_e3_l_1622031);
          real r207D#1 = RSub(realLit2076,r207C);
          real r207E#1 = TensorIndex<tensor[3,3],[1,1]>(op1_e3_l_1622031);
          real r207F#1 = RSub(realLit2073,r207E);
          real r2080#1 = TensorIndex<tensor[3,3],[1,2]>(op1_e3_l_1622031);
          real r2081#1 = RSub(realLit2076,r2080);
          tensor[3] tensor2082#1 = <tensor[3]>[r207D,r207F,r2081];
          real r2083#1 = TensorIndex<tensor[3,3],[2,0]>(op1_e3_l_1622031);
          real r2084#1 = RSub(realLit2076,r2083);
          real r2085#1 = TensorIndex<tensor[3,3],[2,1]>(op1_e3_l_1622031);
          real r2086#1 = RSub(realLit2076,r2085);
          real r2087#1 = TensorIndex<tensor[3,3],[2,2]>(op1_e3_l_1622031);
          real r2088#1 = RSub(realLit2073,r2087);
          tensor[3] tensor2089#1 = <tensor[3]>[r2084,r2086,r2088];
          tensor[3,3] op1_e3_l_1632072#3 = <tensor[3,3]>[tensor207B,tensor2082,tensor2089];
          tensor[3] projParam20A4#1 = ProjectLast<tensor[3,3],[0]>(op1_e3_l_1632072);
          real vdot20A5#1 = VDot<3>(projParam20A4,force2002);
          tensor[3] projParam20A6#1 = ProjectLast<tensor[3,3],[1]>(op1_e3_l_1632072);
          real vdot20A7#1 = VDot<3>(projParam20A6,force2002);
          tensor[3] projParam20A8#1 = ProjectLast<tensor[3,3],[2]>(op1_e3_l_1632072);
          real vdot20A9#1 = VDot<3>(projParam20A8,force2002);
          tensor[3] op1_e3_l_16420A3#7 = <tensor[3]>[vdot20A5,vdot20A7,vdot20A9];
          tensor[3] es20B2#1 = VScale<3>(hh1EE6,op1_e3_l_16420A3);
          real op1_e3_l_26020B5#1 = VDot<3>(op1_e3_l_16420A3,op1_e3_l_16420A3);
          real r20B9#1 = RMul(hh1EE6,hh1EE6);
          real op1_e3_l_26120B8#1 = RMul(r20B9,op1_e3_l_26020B5);
          real _t20BD#2 = Sqrt(op1_e3_l_26120B8);
          bool _t20C0#1 = GT<real>(_t20BD,rad1EDE);
          if _t20C0 then goto ASSIGN20C5 else goto JOIN20DC
        ASSIGN20C5:  preds = [COND20C2]
          real op1_e3_l_26520C3#2 = RDiv(rad1EDE,_t20BD);
          real hh20C6#1 = RMul(hh1EE6,op1_e3_l_26520C3);
          real r20CA#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_16420A3);
          real r20CB#3 = RMul(hh1EE6,op1_e3_l_26520C3);
          real r20CC#1 = RMul(r20CB,r20CA);
          real r20CD#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_16420A3);
          real r20CE#1 = RMul(r20CB,r20CD);
          real r20CF#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_16420A3);
          real r20D0#1 = RMul(r20CB,r20CF);
          tensor[3] es20C9#1 = <tensor[3]>[r20CC,r20CE,r20D0];
          goto JOIN20DC
        JOIN20DC:  preds = [ASSIGN20D9,COND20C2]
          tensor[3] es20DA#8 = phi(es20C9,es20B2)
          real hh20DB#2 = phi(hh20C6,hh1EE6)
          tensor[3] v20DE#1 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          tensor[3] op1_e3_l_10220DD#1 = VAdd<3>(v20DE,es20DA);
          tensor[3] op1_e3_l_11620E2#3 = VSub<3>(op1_e3_l_10220DD,_t1EF0);
          real op1_e3_l_11820E5#2 = VDot<3>(op1_e3_l_11620E2,op1_e3_l_11620E2);
          tensor[3] op1_e3_l_19120E8#3 = VScale<3>(_t1F7F,op1_e3_l_11620E2);
          real r20EC#1 = RMul(_t1F7F,_t1F7F);
          real op1_e3_l_19220EB#1 = RMul(r20EC,op1_e3_l_11820E5);
          real realLit20F1#1 = 0.1e1;
          real r20F2#3 = RDiv(realLit20F1,op1_e3_l_19220EB);
          real r20F3#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_19120E8);
          real r20F4#1 = RMul(r20F2,r20F3);
          real r20F5#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_19120E8);
          real r20F6#1 = RMul(r20F2,r20F5);
          real r20F7#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_19120E8);
          real r20F8#1 = RMul(r20F2,r20F7);
          tensor[3] op1_e3_l_23820F0#3 = <tensor[3]>[r20F4,r20F6,r20F8];
          real op1_e3_l_2402103#3 = RSub(v01EE2,op1_e3_l_11820E5);
          real op1_e3_l_2422106#1 = VDot<3>(op1_e3_l_23820F0,op1_e3_l_23820F0);
          real r210A#1 = RMul(op1_e3_l_2402103,op1_e3_l_2402103);
          real op1_e3_l_2432109#1 = RMul(r210A,op1_e3_l_2422106);
          real op1_e3_l_244210E#1 = VDot<3>(es20DA,es20DA);
          real op1_e3_l_2452111#1 = Sqrt(op1_e3_l_2432109);
          real op1_e3_l_2462114#2 = Sqrt(op1_e3_l_244210E);
          real _t2117#1 = RDiv(op1_e3_l_2452111,op1_e3_l_2462114);
          bool _t211A#1 = GT<real>(_t2117,_t1EEE);
          if _t211A then goto ASSIGN211F else goto JOIN2126
        ASSIGN211F:  preds = [COND211C]
          real hh211D#1 = RMul(hh20DB,_t1EEE);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.hh = hh211D;
          self.step = step1FA8;
          active
          goto JOIN2126
        JOIN2126:  preds = [*ACTIVE2124,COND211C]
          real hh2125#2 = phi(hh20DB)
          tensor[3] op1_e3_l_1662127#2 = VScale<3>(op1_e3_l_2402103,op1_e3_l_23820F0);
          tensor[3] up1F6F#1 = VAdd<3>(op1_e3_l_1662127,es20DA);
          tensor[3] v212D#1 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          tensor[3] v212E#1 = VAdd<3>(v212D,op1_e3_l_1662127);
          tensor[3] pos212C#4 = VAdd<3>(v212E,es20DA);
          particle[] _t2133#1 = SphereQuery<3,particle>(pos212C,rad1EDE);
        FOREACH2136:  preds = [ASSIGN2134,NEXT2153]
          foreach (P2135 in _t2133) on exit goto ASSIGN2156
            real accum2150#2 = phi(oldE1FAD,accum214F)
          tensor[3] _t2137#1 = P2135.pos;
          real _t2139#1 = 0.1e1;
          tensor[3] op1_e3_l_289213B#2 = VSub<3>(pos212C,_t2137);
          real op1_e3_l_291213E#1 = VDot<3>(op1_e3_l_289213B,op1_e3_l_289213B);
          real op1_e3_l_2922141#1 = Sqrt(op1_e3_l_291213E);
          real op1_e3_l_2932144#1 = RDiv(op1_e3_l_2922141,rad1EDE);
          real op1_e3_l_2942147#2 = RSub(_t2139,op1_e3_l_2932144);
          real _Pow_2214B#2 = RMul(op1_e3_l_2942147,op1_e3_l_2942147);
          real op1_e3_l_295214A#1 = RMul(_Pow_2214B,_Pow_2214B);
          real accum214F#1 = RAdd(accum2150,op1_e3_l_295214A);
          goto FOREACH2136
        ASSIGN2156:  preds = [FOREACH2136]
          real _t2154#1 = RSub(accum2150,oldE1FCE);
          tensor[3] op1_e3_l_3882157#1 = VSub<3>(pos212C,pos1FA5);
          tensor[3] op1_e3_l_389215A#1 = VNeg<3>(op1_e3_l_16420A3);
          real op1_e3_l_390215D#1 = VDot<3>(op1_e3_l_3882157,op1_e3_l_389215A);
          real _t2160#1 = RMul(_t1EEE,op1_e3_l_390215D);
          bool _t2163#1 = GT<real>(_t2154,_t2160);
          if _t2163 then goto ASSIGN2168 else goto JOIN216F
        ASSIGN2168:  preds = [COND2165]
          real hh2166#1 = RMul(hh2125,_t1EEE);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.hh = hh2166;
          self.step = step1FA8;
          active
          goto JOIN216F
        JOIN216F:  preds = [*ACTIVE216D,COND2165]
          real hh216E#1 = phi(hh2125)
          tensor[3] pos1F73#2 = phi(pos212C)
          real _t2170#1 = 0.11e1;
          real hh1F71#2 = RMul(hh216E,_t2170);
          int _t2174#1 = 5;
          bool _t2176#1 = LT<int>(nn2008,_t2174);
          if _t2176 then goto ASSIGN217C else goto JOIN2199
        ASSIGN217C:  preds = [COND2178]
          real realLit217A#1 = 0.1e1;
          real op1_e3_l_72179#3 = RDiv(realLit217A,op1_e3_l_2462114);
          real r217F#1 = TensorIndex<tensor[3],[0]>(es20DA);
          real r2180#3 = RMul(_t1EEE,rad1EDE);
          real r2181#1 = RMul(r2180,r217F);
          real r2182#1 = RMul(r2181,op1_e3_l_72179);
          real r2183#1 = TensorIndex<tensor[3],[1]>(es20DA);
          real r2184#1 = RMul(r2180,r2183);
          real r2185#1 = RMul(r2184,op1_e3_l_72179);
          real r2186#1 = TensorIndex<tensor[3],[2]>(es20DA);
          real r2187#1 = RMul(r2180,r2186);
          real r2188#1 = RMul(r2187,op1_e3_l_72179);
          tensor[3] op1_e3_l_8217E#1 = <tensor[3]>[r2182,r2185,r2188];
          tensor[3] _t2195#1 = VAdd<3>(pos1F73,op1_e3_l_8217E);
          new particle(_t2195,hh1F71);
          goto JOIN2199
        JOIN2199:  preds = [NEW2198,COND2178]
          goto JOIN1F74
        ASSIGN219B:  preds = [COND1F14]
          real _t219A#2 = 0.2e1;
          real op1_e3_l_5219C#1 = VDot<3>(mid1EF2,mid1EF2);
          real r21A0#1 = RMul(_t219A,_t219A);
          real op1_e3_l_6219F#1 = RMul(r21A0,op1_e3_l_5219C);
          real _t21A4#1 = Sqrt(op1_e3_l_6219F);
          real _t21A7#1 = 0.e0;
          bool _t1F18#1 = EQ<real>(_t21A4,_t21A7);
          goto JOIN1F19
        ASSIGN21AA:  preds = [COND1F04]
          bool _t1F0D#1 = false;
          goto JOIN1F0E
        ASSIGN21AB:  preds = [COND1EFC]
          bool _t1F10#1 = false;
          goto JOIN1F11
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY21AC:  preds = []
      tensor[3][] ipos21AD#1 = globals.ipos1E9C;
    FOREACH21B0:  preds = [ASSIGN21AE,NEXT21B4]
      foreach (x21AF in ipos21AD) on exit goto RETURN21B5
      real _t21B1#1 = 0.1e1;
      new particle(x21AF,_t21B1);
      goto FOREACH21B0
    RETURN21B5:  preds = [FOREACH21B0]
      return
## global update
  ENTRY21B6:  preds = []
    real rad21B7#1 = globals.rad1E99;
    real eps21B9#1 = globals.eps1E9A;
    particle[] P21BB#6 = Strands<particle,all>;
    (int res21C3#1) = sum<int>(MAP sum21BD (P21BB));
    (int res21CB#1) = sum<int>(MAP sum21C5 (P21BB));
    (bool res21D3#2) = all(MAP all21CD (P21BB));
    (real res21E1#1) = max<real>(MAP max21D5 (P21BB));
    (real res21F6#1) = max<real>(MAP max21E3 (P21BB));
    (real res220B#1) = min<real>(MAP min21F8 (P21BB));
    tensor[2] averageDist220D#1 = <tensor[2]>[res220B,res21F6];
    string _t220F#1 = "One run:";
    string _t2211#4 = " and ";
    real _t2213#2 = RDiv(res21E1,rad21B7);
    bool _t2216#2 = LT<real>(_t2213,eps21B9);
    string _t2218#1 = " of ";
    string _t221A#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t220F,res21D3,_t2211,_t2213,_t2211,_t2216,_t2211,res21CB,_t2218,res21C3,_t2211,averageDist220D,_t221A);
    if res21D3 then goto COND221E else goto JOIN2224
  COND221E:  preds = [COND221D]
    if _t2216 then goto ASSIGN2220 else goto JOIN2223
  ASSIGN2220:  preds = [COND221E]
    string _t221F#1 = "CONVERGED!\n";
    Print<[string]>(_t221F);
    StabilizeAll;
    goto JOIN2223
  JOIN2223:  preds = [MASSIGN2222,COND221E]
    goto JOIN2224
  JOIN2224:  preds = [JOIN2223,COND221D]
    continue
#### end program ####
##### low-ir: after contraction(1) ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1E96 (meshData) = <no-default>
  input 0space0473_intermedateGlobal1E97 (space) = <no-default>
  input 0data0475_intermedateGlobal1E98 (data) = <no-default>
  input rad1E99 (rad) = <default>
  input eps1E9A (eps) = <default>
  input v01E9B (v0) = <default>
  input ipos1E9C (ipos) = <no-default>
## functions
  function int sum21BD (particle P21BE#1) {
    ENTRY21BF:  preds = []
      int _t21C0#1 = P21BE.test;
      return _t21C0
}
  function int sum21C5 (particle P21C6#1) {
    ENTRY21C7:  preds = []
      int _t21C8#1 = P21C6.testp;
      return _t21C8
}
  function bool all21CD (particle P21CE#1) {
    ENTRY21CF:  preds = []
      bool _t21D0#1 = P21CE.found;
      return _t21D0
}
  function real max21D5 (particle P21D6#1) {
    ENTRY21D7:  preds = []
      tensor[3] _t21D8#2 = P21D6.step;
      real op1_e3_l_121DA#1 = VDot<3>(_t21D8,_t21D8);
      real _t21DD#1 = Sqrt(op1_e3_l_121DA);
      return _t21DD
}
  function real max21E3 (particle P21E4#1) {
    ENTRY21E5:  preds = []
      tensor[3] _t21E6#1 = P21E4.pos;
      real _t21E8#3 = 0.5e0;
      tensor[3] _t21EA#1 = <tensor[3]>[_t21E8,_t21E8,_t21E8];
      tensor[3] op1_e3_l_221EC#2 = VSub<3>(_t21E6,_t21EA);
      real op1_e3_l_421EF#1 = VDot<3>(op1_e3_l_221EC,op1_e3_l_221EC);
      real _t21F2#1 = Sqrt(op1_e3_l_421EF);
      return _t21F2
}
  function real min21F8 (particle P21F9#1) {
    ENTRY21FA:  preds = []
      tensor[3] _t21FB#1 = P21F9.pos;
      real _t21FD#3 = 0.5e0;
      tensor[3] _t21FF#1 = <tensor[3]>[_t21FD,_t21FD,_t21FD];
      tensor[3] op1_e3_l_22201#2 = VSub<3>(_t21FB,_t21FF);
      real op1_e3_l_42204#1 = VDot<3>(op1_e3_l_22201,op1_e3_l_22201);
      real _t2207#1 = Sqrt(op1_e3_l_42204);
      return _t2207
}
## input initialization
  ENTRY1E9D:  preds = []
    real rad1E9E#2 = 0.1e-1;
    globals.rad1E99 = rad1E9E;
    globals.eps1E9A = rad1E9E;
    real v01EA2#1 = 0.625e-1;
    globals.v01E9B = v01EA2;
    return
## global-variable initialization
  ENTRY1EA6:  preds = []
    femData:Mesh meshData1EA7#2 = globals.meshData1E96;
    int _t1EA9#1 = 0;
    int _t1EAB#1 = 1;
    int _t1EAD#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData1EA7);
    int _t1EAF#1 = ISub(_t1EAD,_t1EAB);
    int[] _t1EB1#1 = Range(_t1EA9,_t1EAF);
    femData:MeshCell[] _t1EB3#1 = <femData:MeshCell[]>{};
  FOREACH1EB6:  preds = [ASSIGN1EB4,NEXT1EBC]
    foreach (_t1EB5 in _t1EB1) on exit goto RETURN1EBD
      femData:MeshCell[] _t1EBA#1 = phi(_t1EB3,_t1EB9)
    femData:MeshCell _t1EB7#1 = LoadFem<femData:MeshCell>(meshData1EA7,_t1EB5);
    femData:MeshCell[] _t1EB9#1 = Append<femData:MeshCell>(_t1EBA,_t1EB7);
    goto FOREACH1EB6
  RETURN1EBD:  preds = [FOREACH1EB6]
    return
## strand
  strand particle (tensor[3] pos01EBE#2, real hh01EBF#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY1EC8:  preds = []
        real realLit1ECA#3 = 0.e0;
        tensor[3] step1EC9#1 = <tensor[3]>[realLit1ECA,realLit1ECA,realLit1ECA];
        bool found1ECE#1 = false;
        int nfs1ED0#2 = 0;
        int test1ED2#1 = 1;
        self.pos = pos01EBE;
        self._pos = pos01EBE;
        self.hh = hh01EBF;
        self.step = step1EC9;
        self.found = found1ECE;
        self.nfs = nfs1ED0;
        self.test = test1ED2;
        self.testp = nfs1ED0;
        return
    end state init
    method update
        ENTRY1EDD:  preds = []
          real rad1EDE#10 = globals.rad1E99;
          real eps1EE0#1 = globals.eps1E9A;
          real v01EE2#3 = globals.v01E9B;
          tensor[3] pos1EE4#6 = self.pos;
          real hh1EE6#8 = self.hh;
          bool found1EE8#3 = self.found;
          int nfs1EEA#3 = self.nfs;
          int testp1EEC#2 = self.testp;
          real _t1EEE#12 = 0.5e0;
          tensor[3] _t1EF0#3 = <tensor[3]>[_t1EEE,_t1EEE,_t1EEE];
          tensor[3] mid1EF2#11 = VSub<3>(pos1EE4,_t1EF0);
          real _t1EF5#1 = VIndex<3,0>(mid1EF2);
          real _t1EF7#1 = Abs<real>(_t1EF5);
          bool _t1EFA#1 = LTE<real>(_t1EF7,_t1EEE);
          if _t1EFA then goto ASSIGN1EFE else goto ASSIGN21AB
        ASSIGN1EFE:  preds = [COND1EFC]
          real _t1EFD#1 = VIndex<3,1>(mid1EF2);
          real _t1EFF#1 = Abs<real>(_t1EFD);
          bool _t1F02#1 = LTE<real>(_t1EFF,_t1EEE);
          if _t1F02 then goto ASSIGN1F06 else goto ASSIGN21AA
        ASSIGN1F06:  preds = [COND1F04]
          real _t1F05#1 = VIndex<3,2>(mid1EF2);
          real _t1F07#1 = Abs<real>(_t1F05);
          bool _t1F0A#1 = LTE<real>(_t1F07,_t1EEE);
          goto JOIN1F0E
        JOIN1F0E:  preds = [ASSIGN1F0B,ASSIGN21AA]
          bool _t1F0C#1 = phi(_t1F0A,_t1F0D)
          goto JOIN1F11
        JOIN1F11:  preds = [JOIN1F0E,ASSIGN21AB]
          bool _t1F0F#1 = phi(_t1F0C,_t1F10)
          bool _t1F12#1 = BNot(_t1F0F);
          if _t1F12 then goto ASSIGN1F16 else goto ASSIGN219B
        ASSIGN1F16:  preds = [COND1F14]
          bool _t1F15#1 = true;
          goto JOIN1F19
        JOIN1F19:  preds = [ASSIGN1F16,ASSIGN21A9]
          bool _t1F17#1 = phi(_t1F15,_t1F18)
          if _t1F17 then goto DIE1F1B else goto JOIN1F1C
        DIE1F1B:  preds = [COND1F1A]
          die
          goto JOIN1F1C
        JOIN1F1C:  preds = [*DIE1F1B,COND1F1A]
          bool _t1F1D#1 = BNot(found1EE8);
          if _t1F1D then goto ASSIGN1F21 else goto ASSIGN1F80
        ASSIGN1F21:  preds = [COND1F1F]
          real _t1F20#3 = 0.2e1;
          real op1_e3_l_161F22#2 = VDot<3>(mid1EF2,mid1EF2);
          tensor[3] op1_e3_l_211F25#3 = VScale<3>(_t1F20,mid1EF2);
          real r1F29#1 = RMul(_t1F20,_t1F20);
          real op1_e3_l_221F28#1 = RMul(r1F29,op1_e3_l_161F22);
          real op1_e3_l_231F2D#3 = RSub(v01EE2,op1_e3_l_161F22);
          real realLit1F31#1 = 0.1e1;
          real r1F32#3 = RDiv(realLit1F31,op1_e3_l_221F28);
          real r1F33#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_211F25);
          real r1F34#1 = RMul(r1F32,r1F33);
          real r1F35#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_211F25);
          real r1F36#1 = RMul(r1F32,r1F35);
          real r1F37#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_211F25);
          real r1F38#1 = RMul(r1F32,r1F37);
          tensor[3] op1_e3_l_241F30#3 = <tensor[3]>[r1F34,r1F36,r1F38];
          tensor[3] _t1F43#2 = VScale<3>(op1_e3_l_231F2D,op1_e3_l_241F30);
          tensor[3] pos1F46#1 = VAdd<3>(pos1EE4,_t1F43);
          real op1_e3_l_371F49#1 = VDot<3>(op1_e3_l_241F30,op1_e3_l_241F30);
          real r1F4D#1 = RMul(op1_e3_l_231F2D,op1_e3_l_231F2D);
          real op1_e3_l_381F4C#1 = RMul(r1F4D,op1_e3_l_371F49);
          real op1_e3_l_391F51#1 = Sqrt(op1_e3_l_381F4C);
          real _t1F54#1 = RDiv(op1_e3_l_391F51,rad1EDE);
          bool _t1F57#1 = GT<real>(_t1F54,eps1EE0);
          if _t1F57 then goto ASSIGN1F5B else goto ASSIGN1F7D
        ASSIGN1F5B:  preds = [COND1F59]
          int _t1F5A#1 = 1;
          int nfs1F5C#2 = IAdd(nfs1EEA,_t1F5A);
          int _t1F5E#1 = 10;
          bool _t1F60#1 = GT<int>(nfs1F5C,_t1F5E);
          if _t1F60 then goto DIE1F63 else goto JOIN1F64
        DIE1F63:  preds = [COND1F62]
          die
          goto JOIN1F64
        JOIN1F64:  preds = [*DIE1F63,COND1F62]
          goto JOIN1F6A
        JOIN1F6A:  preds = [JOIN1F64,ASSIGN1F7E]
          int testp1F65#1 = phi(testp1EEC,testp1F66)
          int nfs1F67#1 = phi(nfs1F5C,nfs1EEA)
          bool found1F68#1 = phi(found1EE8,found1F69)
          goto JOIN1F74
        JOIN1F74:  preds = [JOIN1F6A,JOIN2199]
          int testp1F6B#1 = phi(testp1F65,testp1EEC)
          int nfs1F6C#1 = phi(nfs1F67,nfs1EEA)
          bool found1F6D#1 = phi(found1F68,found1EE8)
          tensor[3] step1F6E#1 = phi(_t1F43,up1F6F)
          real hh1F70#1 = phi(hh1EE6,hh1F71)
          tensor[3] pos1F72#2 = phi(pos1F46,pos1F73)
          self.pos = pos1F72;
          self._pos = pos1F72;
          self.hh = hh1F70;
          self.step = step1F6E;
          self.found = found1F6D;
          self.nfs = nfs1F6C;
          self.testp = testp1F6B;
          active
        ASSIGN1F7D:  preds = [COND1F59]
          bool found1F69#1 = true;
          int testp1F66#1 = 1;
          goto JOIN1F6A
        ASSIGN1F80:  preds = [COND1F1F]
          real _t1F7F#10 = 0.2e1;
          real op1_e3_l_171F81#2 = VDot<3>(mid1EF2,mid1EF2);
          tensor[3] op1_e3_l_221F84#3 = VScale<3>(_t1F7F,mid1EF2);
          real r1F88#1 = RMul(_t1F7F,_t1F7F);
          real op1_e3_l_231F87#1 = RMul(r1F88,op1_e3_l_171F81);
          real op1_e3_l_241F8C#1 = RSub(v01EE2,op1_e3_l_171F81);
          real realLit1F90#1 = 0.1e1;
          real r1F91#3 = RDiv(realLit1F90,op1_e3_l_231F87);
          real r1F92#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_221F84);
          real r1F93#1 = RMul(r1F91,r1F92);
          real r1F94#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_221F84);
          real r1F95#1 = RMul(r1F91,r1F94);
          real r1F96#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_221F84);
          real r1F97#1 = RMul(r1F91,r1F96);
          tensor[3] op1_e3_l_251F8F#1 = <tensor[3]>[r1F93,r1F95,r1F97];
          tensor[3] op1_e3_l_261FA2#4 = VScale<3>(op1_e3_l_241F8C,op1_e3_l_251F8F);
          tensor[3] pos1FA5#10 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          real realLit1FA9#3 = 0.e0;
          tensor[3] step1FA8#4 = <tensor[3]>[realLit1FA9,realLit1FA9,realLit1FA9];
          real oldE1FAD#4 = 0.e0;
          int nn1FAF#2 = 0;
          particle[] _t1FB1#1 = SphereQuery<3,particle>(pos1FA5,rad1EDE);
        FOREACH1FB4:  preds = [ASSIGN1FB2,NEXT200A]
          foreach (P1FB3 in _t1FB1) on exit goto ASSIGN200C
            int nn2008#3 = phi(nn1FAF,nn2007)
            tensor[3] force2002#4 = phi(step1FA8,force2001)
            real oldE1FCE#2 = phi(oldE1FAD,oldE1FCD)
          tensor[3] _t1FB5#1 = P1FB3.pos;
          real _t1FB7#2 = 0.1e1;
          tensor[3] op1_e3_l_451FB9#5 = VSub<3>(_t1FB5,pos1FA5);
          real op1_e3_l_471FBC#1 = VDot<3>(op1_e3_l_451FB9,op1_e3_l_451FB9);
          real op1_e3_l_481FBF#2 = Sqrt(op1_e3_l_471FBC);
          real op1_e3_l_491FC2#1 = RDiv(op1_e3_l_481FBF,rad1EDE);
          real op1_e3_l_501FC5#5 = RSub(_t1FB7,op1_e3_l_491FC2);
          real _Pow_21FC9#2 = RMul(op1_e3_l_501FC5,op1_e3_l_501FC5);
          real op1_e3_l_511FC8#1 = RMul(_Pow_21FC9,_Pow_21FC9);
          real oldE1FCD#1 = RAdd(oldE1FCE,op1_e3_l_511FC8);
          real _t1FD1#1 = -0.4e1;
          real _Pow2_1FD4#1 = RMul(op1_e3_l_501FC5,op1_e3_l_501FC5);
          real op1_e3_l_991FD3#1 = RMul(op1_e3_l_501FC5,_Pow2_1FD4);
          real op1_e3_l_1001FD8#1 = RDiv(_t1FB7,rad1EDE);
          real r1FDC#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_451FB9);
          real r1FDD#1 = RMul(_t1FD1,op1_e3_l_991FD3);
          real r1FDE#3 = RMul(r1FDD,op1_e3_l_1001FD8);
          real r1FDF#1 = RMul(r1FDE,r1FDC);
          real r1FE0#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_451FB9);
          real r1FE1#1 = RMul(r1FDE,r1FE0);
          real r1FE2#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_451FB9);
          real r1FE3#1 = RMul(r1FDE,r1FE2);
          real realLit1FEF#1 = 0.1e1;
          real r1FF0#3 = RDiv(realLit1FEF,op1_e3_l_481FBF);
          real r1FF1#1 = r1FDF;
          real r1FF2#1 = RMul(r1FF0,r1FF1);
          real r1FF3#1 = r1FE1;
          real r1FF4#1 = RMul(r1FF0,r1FF3);
          real r1FF5#1 = r1FE3;
          real r1FF6#1 = RMul(r1FF0,r1FF5);
          tensor[3] op1_e3_l_1331FEE#1 = <tensor[3]>[r1FF2,r1FF4,r1FF6];
          tensor[3] force2001#1 = VAdd<3>(force2002,op1_e3_l_1331FEE);
          int _t2005#1 = 1;
          int nn2007#1 = IAdd(nn2008,_t2005);
          goto FOREACH1FB4
        ASSIGN200C:  preds = [FOREACH1FB4]
          bool _t200B#1 = EQ<int>(nn1FAF,nn2008);
          if _t200B then goto ASSIGN2010 else goto JOIN201D
        ASSIGN2010:  preds = [COND200D]
          real _t200E#1 = RMul(_t1EEE,rad1EDE);
          tensor[3] _t2011#1 = <tensor[3]>[_t200E,oldE1FAD,oldE1FAD];
          tensor[3] v2014#1 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          tensor[3] _t2013#1 = VAdd<3>(v2014,_t2011);
          new particle(_t2013,hh1EE6);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.step = step1FA8;
          active
          goto JOIN201D
        JOIN201D:  preds = [*ACTIVE201C,COND200D]
          tensor[3] op1_e3_l_109201E#5 = VSub<3>(pos1FA5,_t1EF0);
          real op1_e3_l_1112021#1 = VDot<3>(op1_e3_l_109201E,op1_e3_l_109201E);
          real r2025#1 = RMul(_t1F7F,_t1F7F);
          real op1_e3_l_1122024#1 = RMul(r2025,op1_e3_l_1112021);
          real op1_e3_l_1132029#1 = Sqrt(op1_e3_l_1122024);
          real realLit202D#1 = 0.1e1;
          real op1_e3_l_159202C#12 = RDiv(realLit202D,op1_e3_l_1132029);
          real r2032#4 = TensorIndex<tensor[3],[0]>(op1_e3_l_109201E);
          real r2033#3 = RMul(_t1F7F,_t1F7F);
          real r2034#1 = RMul(r2033,r2032);
          real r2035#3 = RMul(r2034,op1_e3_l_159202C);
          real r2036#1 = RMul(r2035,r2032);
          real r2037#1 = RMul(r2036,op1_e3_l_159202C);
          real r2038#4 = TensorIndex<tensor[3],[1]>(op1_e3_l_109201E);
          real r2039#1 = RMul(r2035,r2038);
          real r203A#1 = RMul(r2039,op1_e3_l_159202C);
          real r203B#4 = TensorIndex<tensor[3],[2]>(op1_e3_l_109201E);
          real r203C#1 = RMul(r2035,r203B);
          real r203D#1 = RMul(r203C,op1_e3_l_159202C);
          real r203F#1 = RMul(r2033,r2038);
          real r2040#3 = RMul(r203F,op1_e3_l_159202C);
          real r2041#1 = RMul(r2040,r2032);
          real r2042#1 = RMul(r2041,op1_e3_l_159202C);
          real r2043#1 = RMul(r2040,r2038);
          real r2044#1 = RMul(r2043,op1_e3_l_159202C);
          real r2045#1 = RMul(r2040,r203B);
          real r2046#1 = RMul(r2045,op1_e3_l_159202C);
          real r2048#1 = RMul(r2033,r203B);
          real r2049#3 = RMul(r2048,op1_e3_l_159202C);
          real r204A#1 = RMul(r2049,r2032);
          real r204B#1 = RMul(r204A,op1_e3_l_159202C);
          real r204C#1 = RMul(r2049,r2038);
          real r204D#1 = RMul(r204C,op1_e3_l_159202C);
          real r204E#1 = RMul(r2049,r203B);
          real r204F#1 = RMul(r204E,op1_e3_l_159202C);
          real realLit2073#3 = 0.1e1;
          real r2074#1 = r2037;
          real r2075#1 = RSub(realLit2073,r2074);
          real realLit2076#6 = 0.e0;
          real r2077#1 = r203A;
          real r2078#1 = RSub(realLit2076,r2077);
          real r2079#1 = r203D;
          real r207A#1 = RSub(realLit2076,r2079);
          tensor[3] tensor207B#1 = <tensor[3]>[r2075,r2078,r207A];
          real r207C#1 = r2042;
          real r207D#1 = RSub(realLit2076,r207C);
          real r207E#1 = r2044;
          real r207F#1 = RSub(realLit2073,r207E);
          real r2080#1 = r2046;
          real r2081#1 = RSub(realLit2076,r2080);
          tensor[3] tensor2082#1 = <tensor[3]>[r207D,r207F,r2081];
          real r2083#1 = r204B;
          real r2084#1 = RSub(realLit2076,r2083);
          real r2085#1 = r204D;
          real r2086#1 = RSub(realLit2076,r2085);
          real r2087#1 = r204F;
          real r2088#1 = RSub(realLit2073,r2087);
          tensor[3] tensor2089#1 = <tensor[3]>[r2084,r2086,r2088];
          tensor[3] projParam20A4#1 = tensor207B;
          real vdot20A5#2 = VDot<3>(projParam20A4,force2002);
          tensor[3] projParam20A6#1 = tensor2082;
          real vdot20A7#2 = VDot<3>(projParam20A6,force2002);
          tensor[3] projParam20A8#1 = tensor2089;
          real vdot20A9#2 = VDot<3>(projParam20A8,force2002);
          tensor[3] op1_e3_l_16420A3#4 = <tensor[3]>[vdot20A5,vdot20A7,vdot20A9];
          tensor[3] es20B2#1 = VScale<3>(hh1EE6,op1_e3_l_16420A3);
          real op1_e3_l_26020B5#1 = VDot<3>(op1_e3_l_16420A3,op1_e3_l_16420A3);
          real r20B9#1 = RMul(hh1EE6,hh1EE6);
          real op1_e3_l_26120B8#1 = RMul(r20B9,op1_e3_l_26020B5);
          real _t20BD#2 = Sqrt(op1_e3_l_26120B8);
          bool _t20C0#1 = GT<real>(_t20BD,rad1EDE);
          if _t20C0 then goto ASSIGN20C5 else goto JOIN20DC
        ASSIGN20C5:  preds = [COND20C2]
          real op1_e3_l_26520C3#2 = RDiv(rad1EDE,_t20BD);
          real hh20C6#1 = RMul(hh1EE6,op1_e3_l_26520C3);
          real r20CA#1 = vdot20A5;
          real r20CB#3 = RMul(hh1EE6,op1_e3_l_26520C3);
          real r20CC#1 = RMul(r20CB,r20CA);
          real r20CD#1 = vdot20A7;
          real r20CE#1 = RMul(r20CB,r20CD);
          real r20CF#1 = vdot20A9;
          real r20D0#1 = RMul(r20CB,r20CF);
          tensor[3] es20C9#1 = <tensor[3]>[r20CC,r20CE,r20D0];
          goto JOIN20DC
        JOIN20DC:  preds = [ASSIGN20D9,COND20C2]
          tensor[3] es20DA#8 = phi(es20C9,es20B2)
          real hh20DB#2 = phi(hh20C6,hh1EE6)
          tensor[3] v20DE#1 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          tensor[3] op1_e3_l_10220DD#1 = VAdd<3>(v20DE,es20DA);
          tensor[3] op1_e3_l_11620E2#3 = VSub<3>(op1_e3_l_10220DD,_t1EF0);
          real op1_e3_l_11820E5#2 = VDot<3>(op1_e3_l_11620E2,op1_e3_l_11620E2);
          tensor[3] op1_e3_l_19120E8#3 = VScale<3>(_t1F7F,op1_e3_l_11620E2);
          real r20EC#1 = RMul(_t1F7F,_t1F7F);
          real op1_e3_l_19220EB#1 = RMul(r20EC,op1_e3_l_11820E5);
          real realLit20F1#1 = 0.1e1;
          real r20F2#3 = RDiv(realLit20F1,op1_e3_l_19220EB);
          real r20F3#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_19120E8);
          real r20F4#1 = RMul(r20F2,r20F3);
          real r20F5#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_19120E8);
          real r20F6#1 = RMul(r20F2,r20F5);
          real r20F7#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_19120E8);
          real r20F8#1 = RMul(r20F2,r20F7);
          tensor[3] op1_e3_l_23820F0#3 = <tensor[3]>[r20F4,r20F6,r20F8];
          real op1_e3_l_2402103#3 = RSub(v01EE2,op1_e3_l_11820E5);
          real op1_e3_l_2422106#1 = VDot<3>(op1_e3_l_23820F0,op1_e3_l_23820F0);
          real r210A#1 = RMul(op1_e3_l_2402103,op1_e3_l_2402103);
          real op1_e3_l_2432109#1 = RMul(r210A,op1_e3_l_2422106);
          real op1_e3_l_244210E#1 = VDot<3>(es20DA,es20DA);
          real op1_e3_l_2452111#1 = Sqrt(op1_e3_l_2432109);
          real op1_e3_l_2462114#2 = Sqrt(op1_e3_l_244210E);
          real _t2117#1 = RDiv(op1_e3_l_2452111,op1_e3_l_2462114);
          bool _t211A#1 = GT<real>(_t2117,_t1EEE);
          if _t211A then goto ASSIGN211F else goto JOIN2126
        ASSIGN211F:  preds = [COND211C]
          real hh211D#1 = RMul(hh20DB,_t1EEE);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.hh = hh211D;
          self.step = step1FA8;
          active
          goto JOIN2126
        JOIN2126:  preds = [*ACTIVE2124,COND211C]
          real hh2125#2 = phi(hh20DB)
          tensor[3] op1_e3_l_1662127#2 = VScale<3>(op1_e3_l_2402103,op1_e3_l_23820F0);
          tensor[3] up1F6F#1 = VAdd<3>(op1_e3_l_1662127,es20DA);
          tensor[3] v212D#1 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          tensor[3] v212E#1 = VAdd<3>(v212D,op1_e3_l_1662127);
          tensor[3] pos212C#4 = VAdd<3>(v212E,es20DA);
          particle[] _t2133#1 = SphereQuery<3,particle>(pos212C,rad1EDE);
        FOREACH2136:  preds = [ASSIGN2134,NEXT2153]
          foreach (P2135 in _t2133) on exit goto ASSIGN2156
            real accum2150#2 = phi(oldE1FAD,accum214F)
          tensor[3] _t2137#1 = P2135.pos;
          real _t2139#1 = 0.1e1;
          tensor[3] op1_e3_l_289213B#2 = VSub<3>(pos212C,_t2137);
          real op1_e3_l_291213E#1 = VDot<3>(op1_e3_l_289213B,op1_e3_l_289213B);
          real op1_e3_l_2922141#1 = Sqrt(op1_e3_l_291213E);
          real op1_e3_l_2932144#1 = RDiv(op1_e3_l_2922141,rad1EDE);
          real op1_e3_l_2942147#2 = RSub(_t2139,op1_e3_l_2932144);
          real _Pow_2214B#2 = RMul(op1_e3_l_2942147,op1_e3_l_2942147);
          real op1_e3_l_295214A#1 = RMul(_Pow_2214B,_Pow_2214B);
          real accum214F#1 = RAdd(accum2150,op1_e3_l_295214A);
          goto FOREACH2136
        ASSIGN2156:  preds = [FOREACH2136]
          real _t2154#1 = RSub(accum2150,oldE1FCE);
          tensor[3] op1_e3_l_3882157#1 = VSub<3>(pos212C,pos1FA5);
          tensor[3] op1_e3_l_389215A#1 = VNeg<3>(op1_e3_l_16420A3);
          real op1_e3_l_390215D#1 = VDot<3>(op1_e3_l_3882157,op1_e3_l_389215A);
          real _t2160#1 = RMul(_t1EEE,op1_e3_l_390215D);
          bool _t2163#1 = GT<real>(_t2154,_t2160);
          if _t2163 then goto ASSIGN2168 else goto JOIN216F
        ASSIGN2168:  preds = [COND2165]
          real hh2166#1 = RMul(hh2125,_t1EEE);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.hh = hh2166;
          self.step = step1FA8;
          active
          goto JOIN216F
        JOIN216F:  preds = [*ACTIVE216D,COND2165]
          real hh216E#1 = phi(hh2125)
          tensor[3] pos1F73#2 = phi(pos212C)
          real _t2170#1 = 0.11e1;
          real hh1F71#2 = RMul(hh216E,_t2170);
          int _t2174#1 = 5;
          bool _t2176#1 = LT<int>(nn2008,_t2174);
          if _t2176 then goto ASSIGN217C else goto JOIN2199
        ASSIGN217C:  preds = [COND2178]
          real realLit217A#1 = 0.1e1;
          real op1_e3_l_72179#3 = RDiv(realLit217A,op1_e3_l_2462114);
          real r217F#1 = TensorIndex<tensor[3],[0]>(es20DA);
          real r2180#3 = RMul(_t1EEE,rad1EDE);
          real r2181#1 = RMul(r2180,r217F);
          real r2182#1 = RMul(r2181,op1_e3_l_72179);
          real r2183#1 = TensorIndex<tensor[3],[1]>(es20DA);
          real r2184#1 = RMul(r2180,r2183);
          real r2185#1 = RMul(r2184,op1_e3_l_72179);
          real r2186#1 = TensorIndex<tensor[3],[2]>(es20DA);
          real r2187#1 = RMul(r2180,r2186);
          real r2188#1 = RMul(r2187,op1_e3_l_72179);
          tensor[3] op1_e3_l_8217E#1 = <tensor[3]>[r2182,r2185,r2188];
          tensor[3] _t2195#1 = VAdd<3>(pos1F73,op1_e3_l_8217E);
          new particle(_t2195,hh1F71);
          goto JOIN2199
        JOIN2199:  preds = [NEW2198,COND2178]
          goto JOIN1F74
        ASSIGN219B:  preds = [COND1F14]
          real _t219A#2 = 0.2e1;
          real op1_e3_l_5219C#1 = VDot<3>(mid1EF2,mid1EF2);
          real r21A0#1 = RMul(_t219A,_t219A);
          real op1_e3_l_6219F#1 = RMul(r21A0,op1_e3_l_5219C);
          real _t21A4#1 = Sqrt(op1_e3_l_6219F);
          real _t21A7#1 = 0.e0;
          bool _t1F18#1 = EQ<real>(_t21A4,_t21A7);
          goto JOIN1F19
        ASSIGN21AA:  preds = [COND1F04]
          bool _t1F0D#1 = false;
          goto JOIN1F0E
        ASSIGN21AB:  preds = [COND1EFC]
          bool _t1F10#1 = false;
          goto JOIN1F11
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY21AC:  preds = []
      tensor[3][] ipos21AD#1 = globals.ipos1E9C;
    FOREACH21B0:  preds = [ASSIGN21AE,NEXT21B4]
      foreach (x21AF in ipos21AD) on exit goto RETURN21B5
      real _t21B1#1 = 0.1e1;
      new particle(x21AF,_t21B1);
      goto FOREACH21B0
    RETURN21B5:  preds = [FOREACH21B0]
      return
## global update
  ENTRY21B6:  preds = []
    real rad21B7#1 = globals.rad1E99;
    real eps21B9#1 = globals.eps1E9A;
    particle[] P21BB#6 = Strands<particle,all>;
    (int res21C3#1) = sum<int>(MAP sum21BD (P21BB));
    (int res21CB#1) = sum<int>(MAP sum21C5 (P21BB));
    (bool res21D3#2) = all(MAP all21CD (P21BB));
    (real res21E1#1) = max<real>(MAP max21D5 (P21BB));
    (real res21F6#1) = max<real>(MAP max21E3 (P21BB));
    (real res220B#1) = min<real>(MAP min21F8 (P21BB));
    tensor[2] averageDist220D#1 = <tensor[2]>[res220B,res21F6];
    string _t220F#1 = "One run:";
    string _t2211#4 = " and ";
    real _t2213#2 = RDiv(res21E1,rad21B7);
    bool _t2216#2 = LT<real>(_t2213,eps21B9);
    string _t2218#1 = " of ";
    string _t221A#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t220F,res21D3,_t2211,_t2213,_t2211,_t2216,_t2211,res21CB,_t2218,res21C3,_t2211,averageDist220D,_t221A);
    if res21D3 then goto COND221E else goto JOIN2224
  COND221E:  preds = [COND221D]
    if _t2216 then goto ASSIGN2220 else goto JOIN2223
  ASSIGN2220:  preds = [COND221E]
    string _t221F#1 = "CONVERGED!\n";
    Print<[string]>(_t221F);
    StabilizeAll;
    goto JOIN2223
  JOIN2223:  preds = [MASSIGN2222,COND221E]
    goto JOIN2224
  JOIN2224:  preds = [JOIN2223,COND221D]
    continue
#### end program ####
##### low-ir: after value numbering ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1E96 (meshData) = <no-default>
  input 0space0473_intermedateGlobal1E97 (space) = <no-default>
  input 0data0475_intermedateGlobal1E98 (data) = <no-default>
  input rad1E99 (rad) = <default>
  input eps1E9A (eps) = <default>
  input v01E9B (v0) = <default>
  input ipos1E9C (ipos) = <no-default>
## functions
  function int sum21BD (particle P21BE#1) {
    ENTRY21BF:  preds = []
      int _t21C0#1 = P21BE.test;
      return _t21C0
}
  function int sum21C5 (particle P21C6#1) {
    ENTRY21C7:  preds = []
      int _t21C8#1 = P21C6.testp;
      return _t21C8
}
  function bool all21CD (particle P21CE#1) {
    ENTRY21CF:  preds = []
      bool _t21D0#1 = P21CE.found;
      return _t21D0
}
  function real max21D5 (particle P21D6#1) {
    ENTRY21D7:  preds = []
      tensor[3] _t21D8#2 = P21D6.step;
      real op1_e3_l_121DA#1 = VDot<3>(_t21D8,_t21D8);
      real _t21DD#1 = Sqrt(op1_e3_l_121DA);
      return _t21DD
}
  function real max21E3 (particle P21E4#1) {
    ENTRY21E5:  preds = []
      tensor[3] _t21E6#1 = P21E4.pos;
      real _t21E8#3 = 0.5e0;
      tensor[3] _t21EA#1 = <tensor[3]>[_t21E8,_t21E8,_t21E8];
      tensor[3] op1_e3_l_221EC#2 = VSub<3>(_t21E6,_t21EA);
      real op1_e3_l_421EF#1 = VDot<3>(op1_e3_l_221EC,op1_e3_l_221EC);
      real _t21F2#1 = Sqrt(op1_e3_l_421EF);
      return _t21F2
}
  function real min21F8 (particle P21F9#1) {
    ENTRY21FA:  preds = []
      tensor[3] _t21FB#1 = P21F9.pos;
      real _t21FD#3 = 0.5e0;
      tensor[3] _t21FF#1 = <tensor[3]>[_t21FD,_t21FD,_t21FD];
      tensor[3] op1_e3_l_22201#2 = VSub<3>(_t21FB,_t21FF);
      real op1_e3_l_42204#1 = VDot<3>(op1_e3_l_22201,op1_e3_l_22201);
      real _t2207#1 = Sqrt(op1_e3_l_42204);
      return _t2207
}
## input initialization
  ENTRY1E9D:  preds = []
    real rad1E9E#2 = 0.1e-1;
    globals.rad1E99 = rad1E9E;
    globals.eps1E9A = rad1E9E;
    real v01EA2#1 = 0.625e-1;
    globals.v01E9B = v01EA2;
    return
## global-variable initialization
  ENTRY1EA6:  preds = []
    femData:Mesh meshData1EA7#2 = globals.meshData1E96;
    int _t1EA9#1 = 0;
    int _t1EAB#1 = 1;
    int _t1EAD#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData1EA7);
    int _t1EAF#1 = ISub(_t1EAD,_t1EAB);
    int[] _t1EB1#1 = Range(_t1EA9,_t1EAF);
    femData:MeshCell[] _t1EB3#1 = <femData:MeshCell[]>{};
  FOREACH1EB6:  preds = [ASSIGN1EB4,NEXT1EBC]
    foreach (_t1EB5 in _t1EB1) on exit goto RETURN1EBD
      femData:MeshCell[] _t1EBA#1 = phi(_t1EB3,_t1EB9)
    femData:MeshCell _t1EB7#1 = LoadFem<femData:MeshCell>(meshData1EA7,_t1EB5);
    femData:MeshCell[] _t1EB9#1 = Append<femData:MeshCell>(_t1EBA,_t1EB7);
    goto FOREACH1EB6
  RETURN1EBD:  preds = [FOREACH1EB6]
    return
## strand
  strand particle (tensor[3] pos01EBE#2, real hh01EBF#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY1EC8:  preds = []
        real realLit1ECA#3 = 0.e0;
        tensor[3] step1EC9#1 = <tensor[3]>[realLit1ECA,realLit1ECA,realLit1ECA];
        bool found1ECE#1 = false;
        int nfs1ED0#2 = 0;
        int test1ED2#1 = 1;
        self.pos = pos01EBE;
        self._pos = pos01EBE;
        self.hh = hh01EBF;
        self.step = step1EC9;
        self.found = found1ECE;
        self.nfs = nfs1ED0;
        self.test = test1ED2;
        self.testp = nfs1ED0;
        return
    end state init
    method update
        ENTRY1EDD:  preds = []
          real rad1EDE#10 = globals.rad1E99;
          real eps1EE0#1 = globals.eps1E9A;
          real v01EE2#3 = globals.v01E9B;
          tensor[3] pos1EE4#3 = self.pos;
          real hh1EE6#7 = self.hh;
          bool found1EE8#3 = self.found;
          int nfs1EEA#3 = self.nfs;
          int testp1EEC#2 = self.testp;
          real _t1EEE#12 = 0.5e0;
          tensor[3] _t1EF0#3 = <tensor[3]>[_t1EEE,_t1EEE,_t1EEE];
          tensor[3] mid1EF2#11 = VSub<3>(pos1EE4,_t1EF0);
          real _t1EF5#1 = VIndex<3,0>(mid1EF2);
          real _t1EF7#1 = Abs<real>(_t1EF5);
          bool _t1EFA#1 = LTE<real>(_t1EF7,_t1EEE);
          if _t1EFA then goto ASSIGN1EFE else goto ASSIGN21AB
        ASSIGN1EFE:  preds = [COND1EFC]
          real _t1EFD#1 = VIndex<3,1>(mid1EF2);
          real _t1EFF#1 = Abs<real>(_t1EFD);
          bool _t1F02#1 = LTE<real>(_t1EFF,_t1EEE);
          if _t1F02 then goto ASSIGN1F06 else goto ASSIGN21AA
        ASSIGN1F06:  preds = [COND1F04]
          real _t1F05#1 = VIndex<3,2>(mid1EF2);
          real _t1F07#1 = Abs<real>(_t1F05);
          bool _t1F0A#1 = LTE<real>(_t1F07,_t1EEE);
          goto JOIN1F0E
        JOIN1F0E:  preds = [ASSIGN1F0B,ASSIGN21AA]
          bool _t1F0C#1 = phi(_t1F0A,_t1F0D)
          goto JOIN1F11
        JOIN1F11:  preds = [JOIN1F0E,ASSIGN21AB]
          bool _t1F0F#1 = phi(_t1F0C,_t1F10)
          bool _t1F12#1 = BNot(_t1F0F);
          if _t1F12 then goto ASSIGN1F16 else goto ASSIGN219B
        ASSIGN1F16:  preds = [COND1F14]
          bool _t1F15#1 = true;
          goto JOIN1F19
        JOIN1F19:  preds = [ASSIGN1F16,ASSIGN21A9]
          bool _t1F17#1 = phi(_t1F15,_t1F18)
          if _t1F17 then goto DIE1F1B else goto JOIN1F1C
        DIE1F1B:  preds = [COND1F1A]
          die
          goto JOIN1F1C
        JOIN1F1C:  preds = [*DIE1F1B,COND1F1A]
          bool _t1F1D#1 = BNot(found1EE8);
          if _t1F1D then goto ASSIGN1F21 else goto ASSIGN1F80
        ASSIGN1F21:  preds = [COND1F1F]
          real _t1F20#3 = 0.2e1;
          real op1_e3_l_161F22#2 = VDot<3>(mid1EF2,mid1EF2);
          tensor[3] op1_e3_l_211F25#3 = VScale<3>(_t1F20,mid1EF2);
          real r1F29#1 = RMul(_t1F20,_t1F20);
          real op1_e3_l_221F28#1 = RMul(r1F29,op1_e3_l_161F22);
          real op1_e3_l_231F2D#3 = RSub(v01EE2,op1_e3_l_161F22);
          real realLit1F31#1 = 0.1e1;
          real r1F32#3 = RDiv(realLit1F31,op1_e3_l_221F28);
          real r1F33#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_211F25);
          real r1F34#1 = RMul(r1F32,r1F33);
          real r1F35#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_211F25);
          real r1F36#1 = RMul(r1F32,r1F35);
          real r1F37#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_211F25);
          real r1F38#1 = RMul(r1F32,r1F37);
          tensor[3] op1_e3_l_241F30#3 = <tensor[3]>[r1F34,r1F36,r1F38];
          tensor[3] _t1F43#2 = VScale<3>(op1_e3_l_231F2D,op1_e3_l_241F30);
          tensor[3] pos1F46#1 = VAdd<3>(pos1EE4,_t1F43);
          real op1_e3_l_371F49#1 = VDot<3>(op1_e3_l_241F30,op1_e3_l_241F30);
          real r1F4D#1 = RMul(op1_e3_l_231F2D,op1_e3_l_231F2D);
          real op1_e3_l_381F4C#1 = RMul(r1F4D,op1_e3_l_371F49);
          real op1_e3_l_391F51#1 = Sqrt(op1_e3_l_381F4C);
          real _t1F54#1 = RDiv(op1_e3_l_391F51,rad1EDE);
          bool _t1F57#1 = GT<real>(_t1F54,eps1EE0);
          if _t1F57 then goto ASSIGN1F5B else goto ASSIGN1F7D
        ASSIGN1F5B:  preds = [COND1F59]
          int _t1F5A#1 = 1;
          int nfs1F5C#2 = IAdd(nfs1EEA,_t1F5A);
          int _t1F5E#1 = 10;
          bool _t1F60#1 = GT<int>(nfs1F5C,_t1F5E);
          if _t1F60 then goto DIE1F63 else goto JOIN1F64
        DIE1F63:  preds = [COND1F62]
          die
          goto JOIN1F64
        JOIN1F64:  preds = [*DIE1F63,COND1F62]
          goto JOIN1F6A
        JOIN1F6A:  preds = [JOIN1F64,ASSIGN1F7E]
          int testp1F65#1 = phi(testp1EEC,testp1F66)
          int nfs1F67#1 = phi(nfs1F5C,nfs1EEA)
          bool found1F68#1 = phi(found1EE8,found1F69)
          goto JOIN1F74
        JOIN1F74:  preds = [JOIN1F6A,JOIN2199]
          int testp1F6B#1 = phi(testp1F65,testp1EEC)
          int nfs1F6C#1 = phi(nfs1F67,nfs1EEA)
          bool found1F6D#1 = phi(found1F68,found1EE8)
          tensor[3] step1F6E#1 = phi(_t1F43,up1F6F)
          real hh1F70#1 = phi(hh1EE6,hh1F71)
          tensor[3] pos1F72#2 = phi(pos1F46,pos1F73)
          self.pos = pos1F72;
          self._pos = pos1F72;
          self.hh = hh1F70;
          self.step = step1F6E;
          self.found = found1F6D;
          self.nfs = nfs1F6C;
          self.testp = testp1F6B;
          active
        ASSIGN1F7D:  preds = [COND1F59]
          bool found1F69#1 = true;
          int testp1F66#1 = 1;
          goto JOIN1F6A
        ASSIGN1F80:  preds = [COND1F1F]
          real _t1F7F#4 = 0.2e1;
          real op1_e3_l_171F81#2 = VDot<3>(mid1EF2,mid1EF2);
          tensor[3] op1_e3_l_221F84#3 = VScale<3>(_t1F7F,mid1EF2);
          real r1F88#6 = RMul(_t1F7F,_t1F7F);
          real op1_e3_l_231F87#1 = RMul(r1F88,op1_e3_l_171F81);
          real op1_e3_l_241F8C#1 = RSub(v01EE2,op1_e3_l_171F81);
          real realLit1F90#11 = 0.1e1;
          real r1F91#3 = RDiv(realLit1F90,op1_e3_l_231F87);
          real r1F92#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_221F84);
          real r1F93#1 = RMul(r1F91,r1F92);
          real r1F94#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_221F84);
          real r1F95#1 = RMul(r1F91,r1F94);
          real r1F96#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_221F84);
          real r1F97#1 = RMul(r1F91,r1F96);
          tensor[3] op1_e3_l_251F8F#1 = <tensor[3]>[r1F93,r1F95,r1F97];
          tensor[3] op1_e3_l_261FA2#1 = VScale<3>(op1_e3_l_241F8C,op1_e3_l_251F8F);
          tensor[3] pos1FA5#13 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          real realLit1FA9#13 = 0.e0;
          tensor[3] step1FA8#4 = <tensor[3]>[realLit1FA9,realLit1FA9,realLit1FA9];
          int nn1FAF#2 = 0;
          particle[] _t1FB1#1 = SphereQuery<3,particle>(pos1FA5,rad1EDE);
        FOREACH1FB4:  preds = [ASSIGN1FB2,NEXT200A]
          foreach (P1FB3 in _t1FB1) on exit goto ASSIGN200C
            int nn2008#3 = phi(nn1FAF,nn2007)
            tensor[3] force2002#4 = phi(step1FA8,force2001)
            real oldE1FCE#2 = phi(realLit1FA9,oldE1FCD)
          tensor[3] _t1FB5#1 = P1FB3.pos;
          tensor[3] op1_e3_l_451FB9#5 = VSub<3>(_t1FB5,pos1FA5);
          real op1_e3_l_471FBC#1 = VDot<3>(op1_e3_l_451FB9,op1_e3_l_451FB9);
          real op1_e3_l_481FBF#2 = Sqrt(op1_e3_l_471FBC);
          real op1_e3_l_491FC2#1 = RDiv(op1_e3_l_481FBF,rad1EDE);
          real op1_e3_l_501FC5#3 = RSub(realLit1F90,op1_e3_l_491FC2);
          real _Pow_21FC9#3 = RMul(op1_e3_l_501FC5,op1_e3_l_501FC5);
          real op1_e3_l_511FC8#1 = RMul(_Pow_21FC9,_Pow_21FC9);
          real oldE1FCD#1 = RAdd(oldE1FCE,op1_e3_l_511FC8);
          real _t1FD1#1 = -0.4e1;
          real op1_e3_l_991FD3#1 = RMul(op1_e3_l_501FC5,_Pow_21FC9);
          real op1_e3_l_1001FD8#1 = RDiv(realLit1F90,rad1EDE);
          real r1FDC#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_451FB9);
          real r1FDD#1 = RMul(_t1FD1,op1_e3_l_991FD3);
          real r1FDE#3 = RMul(r1FDD,op1_e3_l_1001FD8);
          real r1FDF#1 = RMul(r1FDE,r1FDC);
          real r1FE0#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_451FB9);
          real r1FE1#1 = RMul(r1FDE,r1FE0);
          real r1FE2#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_451FB9);
          real r1FE3#1 = RMul(r1FDE,r1FE2);
          real r1FF0#3 = RDiv(realLit1F90,op1_e3_l_481FBF);
          real r1FF2#1 = RMul(r1FF0,r1FDF);
          real r1FF4#1 = RMul(r1FF0,r1FE1);
          real r1FF6#1 = RMul(r1FF0,r1FE3);
          tensor[3] op1_e3_l_1331FEE#1 = <tensor[3]>[r1FF2,r1FF4,r1FF6];
          tensor[3] force2001#1 = VAdd<3>(force2002,op1_e3_l_1331FEE);
          int _t2005#1 = 1;
          int nn2007#1 = IAdd(nn2008,_t2005);
          goto FOREACH1FB4
        ASSIGN200C:  preds = [FOREACH1FB4]
          bool _t200B#1 = EQ<int>(nn1FAF,nn2008);
          if _t200B then goto ASSIGN2010 else goto JOIN201D
        ASSIGN2010:  preds = [COND200D]
          real _t200E#1 = RMul(_t1EEE,rad1EDE);
          tensor[3] _t2011#1 = <tensor[3]>[_t200E,realLit1FA9,realLit1FA9];
          tensor[3] _t2013#1 = VAdd<3>(pos1FA5,_t2011);
          new particle(_t2013,hh1EE6);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.step = step1FA8;
          active
          goto JOIN201D
        JOIN201D:  preds = [*ACTIVE201C,COND200D]
          tensor[3] op1_e3_l_109201E#5 = VSub<3>(pos1FA5,_t1EF0);
          real op1_e3_l_1112021#1 = VDot<3>(op1_e3_l_109201E,op1_e3_l_109201E);
          real op1_e3_l_1122024#1 = RMul(r1F88,op1_e3_l_1112021);
          real op1_e3_l_1132029#1 = Sqrt(op1_e3_l_1122024);
          real op1_e3_l_159202C#12 = RDiv(realLit1F90,op1_e3_l_1132029);
          real r2032#4 = TensorIndex<tensor[3],[0]>(op1_e3_l_109201E);
          real r2034#1 = RMul(r1F88,r2032);
          real r2035#3 = RMul(r2034,op1_e3_l_159202C);
          real r2036#1 = RMul(r2035,r2032);
          real r2037#1 = RMul(r2036,op1_e3_l_159202C);
          real r2038#4 = TensorIndex<tensor[3],[1]>(op1_e3_l_109201E);
          real r2039#1 = RMul(r2035,r2038);
          real r203A#1 = RMul(r2039,op1_e3_l_159202C);
          real r203B#4 = TensorIndex<tensor[3],[2]>(op1_e3_l_109201E);
          real r203C#1 = RMul(r2035,r203B);
          real r203D#1 = RMul(r203C,op1_e3_l_159202C);
          real r203F#1 = RMul(r1F88,r2038);
          real r2040#3 = RMul(r203F,op1_e3_l_159202C);
          real r2041#1 = RMul(r2040,r2032);
          real r2042#1 = RMul(r2041,op1_e3_l_159202C);
          real r2043#1 = RMul(r2040,r2038);
          real r2044#1 = RMul(r2043,op1_e3_l_159202C);
          real r2045#1 = RMul(r2040,r203B);
          real r2046#1 = RMul(r2045,op1_e3_l_159202C);
          real r2048#1 = RMul(r1F88,r203B);
          real r2049#3 = RMul(r2048,op1_e3_l_159202C);
          real r204A#1 = RMul(r2049,r2032);
          real r204B#1 = RMul(r204A,op1_e3_l_159202C);
          real r204C#1 = RMul(r2049,r2038);
          real r204D#1 = RMul(r204C,op1_e3_l_159202C);
          real r204E#1 = RMul(r2049,r203B);
          real r204F#1 = RMul(r204E,op1_e3_l_159202C);
          real r2075#1 = RSub(realLit1F90,r2037);
          real r2078#1 = RSub(realLit1FA9,r203A);
          real r207A#1 = RSub(realLit1FA9,r203D);
          tensor[3] tensor207B#1 = <tensor[3]>[r2075,r2078,r207A];
          real r207D#1 = RSub(realLit1FA9,r2042);
          real r207F#1 = RSub(realLit1F90,r2044);
          real r2081#1 = RSub(realLit1FA9,r2046);
          tensor[3] tensor2082#1 = <tensor[3]>[r207D,r207F,r2081];
          real r2084#1 = RSub(realLit1FA9,r204B);
          real r2086#1 = RSub(realLit1FA9,r204D);
          real r2088#1 = RSub(realLit1F90,r204F);
          tensor[3] tensor2089#1 = <tensor[3]>[r2084,r2086,r2088];
          real vdot20A5#2 = VDot<3>(tensor207B,force2002);
          real vdot20A7#2 = VDot<3>(tensor2082,force2002);
          real vdot20A9#2 = VDot<3>(tensor2089,force2002);
          tensor[3] op1_e3_l_16420A3#4 = <tensor[3]>[vdot20A5,vdot20A7,vdot20A9];
          tensor[3] es20B2#1 = VScale<3>(hh1EE6,op1_e3_l_16420A3);
          real op1_e3_l_26020B5#1 = VDot<3>(op1_e3_l_16420A3,op1_e3_l_16420A3);
          real r20B9#1 = RMul(hh1EE6,hh1EE6);
          real op1_e3_l_26120B8#1 = RMul(r20B9,op1_e3_l_26020B5);
          real _t20BD#2 = Sqrt(op1_e3_l_26120B8);
          bool _t20C0#1 = GT<real>(_t20BD,rad1EDE);
          if _t20C0 then goto ASSIGN20C5 else goto JOIN20DC
        ASSIGN20C5:  preds = [COND20C2]
          real op1_e3_l_26520C3#1 = RDiv(rad1EDE,_t20BD);
          real hh20C6#4 = RMul(hh1EE6,op1_e3_l_26520C3);
          real r20CC#1 = RMul(hh20C6,vdot20A5);
          real r20CE#1 = RMul(hh20C6,vdot20A7);
          real r20D0#1 = RMul(hh20C6,vdot20A9);
          tensor[3] es20C9#1 = <tensor[3]>[r20CC,r20CE,r20D0];
          goto JOIN20DC
        JOIN20DC:  preds = [ASSIGN20D9,COND20C2]
          tensor[3] es20DA#8 = phi(es20C9,es20B2)
          real hh20DB#2 = phi(hh20C6,hh1EE6)
          tensor[3] op1_e3_l_10220DD#1 = VAdd<3>(pos1FA5,es20DA);
          tensor[3] op1_e3_l_11620E2#3 = VSub<3>(op1_e3_l_10220DD,_t1EF0);
          real op1_e3_l_11820E5#2 = VDot<3>(op1_e3_l_11620E2,op1_e3_l_11620E2);
          tensor[3] op1_e3_l_19120E8#3 = VScale<3>(_t1F7F,op1_e3_l_11620E2);
          real op1_e3_l_19220EB#1 = RMul(r1F88,op1_e3_l_11820E5);
          real r20F2#3 = RDiv(realLit1F90,op1_e3_l_19220EB);
          real r20F3#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_19120E8);
          real r20F4#1 = RMul(r20F2,r20F3);
          real r20F5#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_19120E8);
          real r20F6#1 = RMul(r20F2,r20F5);
          real r20F7#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_19120E8);
          real r20F8#1 = RMul(r20F2,r20F7);
          tensor[3] op1_e3_l_23820F0#3 = <tensor[3]>[r20F4,r20F6,r20F8];
          real op1_e3_l_2402103#3 = RSub(v01EE2,op1_e3_l_11820E5);
          real op1_e3_l_2422106#1 = VDot<3>(op1_e3_l_23820F0,op1_e3_l_23820F0);
          real r210A#1 = RMul(op1_e3_l_2402103,op1_e3_l_2402103);
          real op1_e3_l_2432109#1 = RMul(r210A,op1_e3_l_2422106);
          real op1_e3_l_244210E#1 = VDot<3>(es20DA,es20DA);
          real op1_e3_l_2452111#1 = Sqrt(op1_e3_l_2432109);
          real op1_e3_l_2462114#2 = Sqrt(op1_e3_l_244210E);
          real _t2117#1 = RDiv(op1_e3_l_2452111,op1_e3_l_2462114);
          bool _t211A#1 = GT<real>(_t2117,_t1EEE);
          if _t211A then goto ASSIGN211F else goto JOIN2126
        ASSIGN211F:  preds = [COND211C]
          real hh211D#1 = RMul(hh20DB,_t1EEE);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.hh = hh211D;
          self.step = step1FA8;
          active
          goto JOIN2126
        JOIN2126:  preds = [*ACTIVE2124,COND211C]
          real hh2125#2 = phi(hh20DB)
          tensor[3] op1_e3_l_1662127#2 = VScale<3>(op1_e3_l_2402103,op1_e3_l_23820F0);
          tensor[3] up1F6F#1 = VAdd<3>(op1_e3_l_1662127,es20DA);
          tensor[3] v212E#1 = VAdd<3>(pos1FA5,op1_e3_l_1662127);
          tensor[3] pos212C#4 = VAdd<3>(v212E,es20DA);
          particle[] _t2133#1 = SphereQuery<3,particle>(pos212C,rad1EDE);
        FOREACH2136:  preds = [ASSIGN2134,NEXT2153]
          foreach (P2135 in _t2133) on exit goto ASSIGN2156
            real accum2150#2 = phi(realLit1FA9,accum214F)
          tensor[3] _t2137#1 = P2135.pos;
          tensor[3] op1_e3_l_289213B#2 = VSub<3>(pos212C,_t2137);
          real op1_e3_l_291213E#1 = VDot<3>(op1_e3_l_289213B,op1_e3_l_289213B);
          real op1_e3_l_2922141#1 = Sqrt(op1_e3_l_291213E);
          real op1_e3_l_2932144#1 = RDiv(op1_e3_l_2922141,rad1EDE);
          real op1_e3_l_2942147#2 = RSub(realLit1F90,op1_e3_l_2932144);
          real _Pow_2214B#2 = RMul(op1_e3_l_2942147,op1_e3_l_2942147);
          real op1_e3_l_295214A#1 = RMul(_Pow_2214B,_Pow_2214B);
          real accum214F#1 = RAdd(accum2150,op1_e3_l_295214A);
          goto FOREACH2136
        ASSIGN2156:  preds = [FOREACH2136]
          real _t2154#1 = RSub(accum2150,oldE1FCE);
          tensor[3] op1_e3_l_3882157#1 = VSub<3>(pos212C,pos1FA5);
          tensor[3] op1_e3_l_389215A#1 = VNeg<3>(op1_e3_l_16420A3);
          real op1_e3_l_390215D#1 = VDot<3>(op1_e3_l_3882157,op1_e3_l_389215A);
          real _t2160#1 = RMul(_t1EEE,op1_e3_l_390215D);
          bool _t2163#1 = GT<real>(_t2154,_t2160);
          if _t2163 then goto ASSIGN2168 else goto JOIN216F
        ASSIGN2168:  preds = [COND2165]
          real hh2166#1 = RMul(hh2125,_t1EEE);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.hh = hh2166;
          self.step = step1FA8;
          active
          goto JOIN216F
        JOIN216F:  preds = [*ACTIVE216D,COND2165]
          real hh216E#1 = phi(hh2125)
          tensor[3] pos1F73#2 = phi(pos212C)
          real _t2170#1 = 0.11e1;
          real hh1F71#2 = RMul(hh216E,_t2170);
          int _t2174#1 = 5;
          bool _t2176#1 = LT<int>(nn2008,_t2174);
          if _t2176 then goto ASSIGN2252 else goto JOIN2199
        ASSIGN2252:  preds = [COND2178]
          real op1_e3_l_72179#3 = RDiv(realLit1F90,op1_e3_l_2462114);
          real r217F#1 = TensorIndex<tensor[3],[0]>(es20DA);
          real r2180#3 = RMul(_t1EEE,rad1EDE);
          real r2181#1 = RMul(r2180,r217F);
          real r2182#1 = RMul(r2181,op1_e3_l_72179);
          real r2183#1 = TensorIndex<tensor[3],[1]>(es20DA);
          real r2184#1 = RMul(r2180,r2183);
          real r2185#1 = RMul(r2184,op1_e3_l_72179);
          real r2186#1 = TensorIndex<tensor[3],[2]>(es20DA);
          real r2187#1 = RMul(r2180,r2186);
          real r2188#1 = RMul(r2187,op1_e3_l_72179);
          tensor[3] op1_e3_l_8217E#1 = <tensor[3]>[r2182,r2185,r2188];
          tensor[3] _t2195#1 = VAdd<3>(pos1F73,op1_e3_l_8217E);
          new particle(_t2195,hh1F71);
          goto JOIN2199
        JOIN2199:  preds = [NEW2198,COND2178]
          goto JOIN1F74
        ASSIGN219B:  preds = [COND1F14]
          real _t219A#2 = 0.2e1;
          real op1_e3_l_5219C#1 = VDot<3>(mid1EF2,mid1EF2);
          real r21A0#1 = RMul(_t219A,_t219A);
          real op1_e3_l_6219F#1 = RMul(r21A0,op1_e3_l_5219C);
          real _t21A4#1 = Sqrt(op1_e3_l_6219F);
          real _t21A7#1 = 0.e0;
          bool _t1F18#1 = EQ<real>(_t21A4,_t21A7);
          goto JOIN1F19
        ASSIGN21AA:  preds = [COND1F04]
          bool _t1F0D#1 = false;
          goto JOIN1F0E
        ASSIGN21AB:  preds = [COND1EFC]
          bool _t1F10#1 = false;
          goto JOIN1F11
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY21AC:  preds = []
      tensor[3][] ipos21AD#1 = globals.ipos1E9C;
    FOREACH21B0:  preds = [ASSIGN21AE,NEXT21B4]
      foreach (x21AF in ipos21AD) on exit goto RETURN21B5
      real _t21B1#1 = 0.1e1;
      new particle(x21AF,_t21B1);
      goto FOREACH21B0
    RETURN21B5:  preds = [FOREACH21B0]
      return
## global update
  ENTRY21B6:  preds = []
    real rad21B7#1 = globals.rad1E99;
    real eps21B9#1 = globals.eps1E9A;
    particle[] P21BB#6 = Strands<particle,all>;
    (int res21C3#1) = sum<int>(MAP sum21BD (P21BB));
    (int res21CB#1) = sum<int>(MAP sum21C5 (P21BB));
    (bool res21D3#2) = all(MAP all21CD (P21BB));
    (real res21E1#1) = max<real>(MAP max21D5 (P21BB));
    (real res21F6#1) = max<real>(MAP max21E3 (P21BB));
    (real res220B#1) = min<real>(MAP min21F8 (P21BB));
    tensor[2] averageDist220D#1 = <tensor[2]>[res220B,res21F6];
    string _t220F#1 = "One run:";
    string _t2211#4 = " and ";
    real _t2213#2 = RDiv(res21E1,rad21B7);
    bool _t2216#2 = LT<real>(_t2213,eps21B9);
    string _t2218#1 = " of ";
    string _t221A#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t220F,res21D3,_t2211,_t2213,_t2211,_t2216,_t2211,res21CB,_t2218,res21C3,_t2211,averageDist220D,_t221A);
    if res21D3 then goto COND221E else goto JOIN2224
  COND221E:  preds = [COND221D]
    if _t2216 then goto ASSIGN2220 else goto JOIN2223
  ASSIGN2220:  preds = [COND221E]
    string _t221F#1 = "CONVERGED!\n";
    Print<[string]>(_t221F);
    StabilizeAll;
    goto JOIN2223
  JOIN2223:  preds = [MASSIGN2222,COND221E]
    goto JOIN2224
  JOIN2224:  preds = [JOIN2223,COND221D]
    continue
#### end program ####
##### low-ir: after contraction(2) ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1E96 (meshData) = <no-default>
  input 0space0473_intermedateGlobal1E97 (space) = <no-default>
  input 0data0475_intermedateGlobal1E98 (data) = <no-default>
  input rad1E99 (rad) = <default>
  input eps1E9A (eps) = <default>
  input v01E9B (v0) = <default>
  input ipos1E9C (ipos) = <no-default>
## functions
  function int sum21BD (particle P21BE#1) {
    ENTRY21BF:  preds = []
      int _t21C0#1 = P21BE.test;
      return _t21C0
}
  function int sum21C5 (particle P21C6#1) {
    ENTRY21C7:  preds = []
      int _t21C8#1 = P21C6.testp;
      return _t21C8
}
  function bool all21CD (particle P21CE#1) {
    ENTRY21CF:  preds = []
      bool _t21D0#1 = P21CE.found;
      return _t21D0
}
  function real max21D5 (particle P21D6#1) {
    ENTRY21D7:  preds = []
      tensor[3] _t21D8#2 = P21D6.step;
      real op1_e3_l_121DA#1 = VDot<3>(_t21D8,_t21D8);
      real _t21DD#1 = Sqrt(op1_e3_l_121DA);
      return _t21DD
}
  function real max21E3 (particle P21E4#1) {
    ENTRY21E5:  preds = []
      tensor[3] _t21E6#1 = P21E4.pos;
      real _t21E8#3 = 0.5e0;
      tensor[3] _t21EA#1 = <tensor[3]>[_t21E8,_t21E8,_t21E8];
      tensor[3] op1_e3_l_221EC#2 = VSub<3>(_t21E6,_t21EA);
      real op1_e3_l_421EF#1 = VDot<3>(op1_e3_l_221EC,op1_e3_l_221EC);
      real _t21F2#1 = Sqrt(op1_e3_l_421EF);
      return _t21F2
}
  function real min21F8 (particle P21F9#1) {
    ENTRY21FA:  preds = []
      tensor[3] _t21FB#1 = P21F9.pos;
      real _t21FD#3 = 0.5e0;
      tensor[3] _t21FF#1 = <tensor[3]>[_t21FD,_t21FD,_t21FD];
      tensor[3] op1_e3_l_22201#2 = VSub<3>(_t21FB,_t21FF);
      real op1_e3_l_42204#1 = VDot<3>(op1_e3_l_22201,op1_e3_l_22201);
      real _t2207#1 = Sqrt(op1_e3_l_42204);
      return _t2207
}
## input initialization
  ENTRY1E9D:  preds = []
    real rad1E9E#2 = 0.1e-1;
    globals.rad1E99 = rad1E9E;
    globals.eps1E9A = rad1E9E;
    real v01EA2#1 = 0.625e-1;
    globals.v01E9B = v01EA2;
    return
## global-variable initialization
  ENTRY1EA6:  preds = []
    femData:Mesh meshData1EA7#2 = globals.meshData1E96;
    int _t1EA9#1 = 0;
    int _t1EAB#1 = 1;
    int _t1EAD#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData1EA7);
    int _t1EAF#1 = ISub(_t1EAD,_t1EAB);
    int[] _t1EB1#1 = Range(_t1EA9,_t1EAF);
    femData:MeshCell[] _t1EB3#1 = <femData:MeshCell[]>{};
  FOREACH1EB6:  preds = [ASSIGN1EB4,NEXT1EBC]
    foreach (_t1EB5 in _t1EB1) on exit goto RETURN1EBD
      femData:MeshCell[] _t1EBA#1 = phi(_t1EB3,_t1EB9)
    femData:MeshCell _t1EB7#1 = LoadFem<femData:MeshCell>(meshData1EA7,_t1EB5);
    femData:MeshCell[] _t1EB9#1 = Append<femData:MeshCell>(_t1EBA,_t1EB7);
    goto FOREACH1EB6
  RETURN1EBD:  preds = [FOREACH1EB6]
    return
## strand
  strand particle (tensor[3] pos01EBE#2, real hh01EBF#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY1EC8:  preds = []
        real realLit1ECA#3 = 0.e0;
        tensor[3] step1EC9#1 = <tensor[3]>[realLit1ECA,realLit1ECA,realLit1ECA];
        bool found1ECE#1 = false;
        int nfs1ED0#2 = 0;
        int test1ED2#1 = 1;
        self.pos = pos01EBE;
        self._pos = pos01EBE;
        self.hh = hh01EBF;
        self.step = step1EC9;
        self.found = found1ECE;
        self.nfs = nfs1ED0;
        self.test = test1ED2;
        self.testp = nfs1ED0;
        return
    end state init
    method update
        ENTRY1EDD:  preds = []
          real rad1EDE#10 = globals.rad1E99;
          real eps1EE0#1 = globals.eps1E9A;
          real v01EE2#3 = globals.v01E9B;
          tensor[3] pos1EE4#3 = self.pos;
          real hh1EE6#7 = self.hh;
          bool found1EE8#3 = self.found;
          int nfs1EEA#3 = self.nfs;
          int testp1EEC#2 = self.testp;
          real _t1EEE#12 = 0.5e0;
          tensor[3] _t1EF0#3 = <tensor[3]>[_t1EEE,_t1EEE,_t1EEE];
          tensor[3] mid1EF2#11 = VSub<3>(pos1EE4,_t1EF0);
          real _t1EF5#1 = VIndex<3,0>(mid1EF2);
          real _t1EF7#1 = Abs<real>(_t1EF5);
          bool _t1EFA#1 = LTE<real>(_t1EF7,_t1EEE);
          if _t1EFA then goto ASSIGN1EFE else goto ASSIGN21AB
        ASSIGN1EFE:  preds = [COND1EFC]
          real _t1EFD#1 = VIndex<3,1>(mid1EF2);
          real _t1EFF#1 = Abs<real>(_t1EFD);
          bool _t1F02#1 = LTE<real>(_t1EFF,_t1EEE);
          if _t1F02 then goto ASSIGN1F06 else goto ASSIGN21AA
        ASSIGN1F06:  preds = [COND1F04]
          real _t1F05#1 = VIndex<3,2>(mid1EF2);
          real _t1F07#1 = Abs<real>(_t1F05);
          bool _t1F0A#1 = LTE<real>(_t1F07,_t1EEE);
          goto JOIN1F0E
        JOIN1F0E:  preds = [ASSIGN1F0B,ASSIGN21AA]
          bool _t1F0C#1 = phi(_t1F0A,_t1F0D)
          goto JOIN1F11
        JOIN1F11:  preds = [JOIN1F0E,ASSIGN21AB]
          bool _t1F0F#1 = phi(_t1F0C,_t1F10)
          bool _t1F12#1 = BNot(_t1F0F);
          if _t1F12 then goto ASSIGN1F16 else goto ASSIGN219B
        ASSIGN1F16:  preds = [COND1F14]
          bool _t1F15#1 = true;
          goto JOIN1F19
        JOIN1F19:  preds = [ASSIGN1F16,ASSIGN21A9]
          bool _t1F17#1 = phi(_t1F15,_t1F18)
          if _t1F17 then goto DIE1F1B else goto JOIN1F1C
        DIE1F1B:  preds = [COND1F1A]
          die
          goto JOIN1F1C
        JOIN1F1C:  preds = [*DIE1F1B,COND1F1A]
          bool _t1F1D#1 = BNot(found1EE8);
          if _t1F1D then goto ASSIGN1F21 else goto ASSIGN1F80
        ASSIGN1F21:  preds = [COND1F1F]
          real _t1F20#3 = 0.2e1;
          real op1_e3_l_161F22#2 = VDot<3>(mid1EF2,mid1EF2);
          tensor[3] op1_e3_l_211F25#3 = VScale<3>(_t1F20,mid1EF2);
          real r1F29#1 = RMul(_t1F20,_t1F20);
          real op1_e3_l_221F28#1 = RMul(r1F29,op1_e3_l_161F22);
          real op1_e3_l_231F2D#3 = RSub(v01EE2,op1_e3_l_161F22);
          real realLit1F31#1 = 0.1e1;
          real r1F32#3 = RDiv(realLit1F31,op1_e3_l_221F28);
          real r1F33#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_211F25);
          real r1F34#1 = RMul(r1F32,r1F33);
          real r1F35#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_211F25);
          real r1F36#1 = RMul(r1F32,r1F35);
          real r1F37#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_211F25);
          real r1F38#1 = RMul(r1F32,r1F37);
          tensor[3] op1_e3_l_241F30#3 = <tensor[3]>[r1F34,r1F36,r1F38];
          tensor[3] _t1F43#2 = VScale<3>(op1_e3_l_231F2D,op1_e3_l_241F30);
          tensor[3] pos1F46#1 = VAdd<3>(pos1EE4,_t1F43);
          real op1_e3_l_371F49#1 = VDot<3>(op1_e3_l_241F30,op1_e3_l_241F30);
          real r1F4D#1 = RMul(op1_e3_l_231F2D,op1_e3_l_231F2D);
          real op1_e3_l_381F4C#1 = RMul(r1F4D,op1_e3_l_371F49);
          real op1_e3_l_391F51#1 = Sqrt(op1_e3_l_381F4C);
          real _t1F54#1 = RDiv(op1_e3_l_391F51,rad1EDE);
          bool _t1F57#1 = GT<real>(_t1F54,eps1EE0);
          if _t1F57 then goto ASSIGN1F5B else goto ASSIGN1F7D
        ASSIGN1F5B:  preds = [COND1F59]
          int _t1F5A#1 = 1;
          int nfs1F5C#2 = IAdd(nfs1EEA,_t1F5A);
          int _t1F5E#1 = 10;
          bool _t1F60#1 = GT<int>(nfs1F5C,_t1F5E);
          if _t1F60 then goto DIE1F63 else goto JOIN1F64
        DIE1F63:  preds = [COND1F62]
          die
          goto JOIN1F64
        JOIN1F64:  preds = [*DIE1F63,COND1F62]
          goto JOIN1F6A
        JOIN1F6A:  preds = [JOIN1F64,ASSIGN1F7E]
          int testp1F65#1 = phi(testp1EEC,testp1F66)
          int nfs1F67#1 = phi(nfs1F5C,nfs1EEA)
          bool found1F68#1 = phi(found1EE8,found1F69)
          goto JOIN1F74
        JOIN1F74:  preds = [JOIN1F6A,JOIN2199]
          int testp1F6B#1 = phi(testp1F65,testp1EEC)
          int nfs1F6C#1 = phi(nfs1F67,nfs1EEA)
          bool found1F6D#1 = phi(found1F68,found1EE8)
          tensor[3] step1F6E#1 = phi(_t1F43,up1F6F)
          real hh1F70#1 = phi(hh1EE6,hh1F71)
          tensor[3] pos1F72#2 = phi(pos1F46,pos1F73)
          self.pos = pos1F72;
          self._pos = pos1F72;
          self.hh = hh1F70;
          self.step = step1F6E;
          self.found = found1F6D;
          self.nfs = nfs1F6C;
          self.testp = testp1F6B;
          active
        ASSIGN1F7D:  preds = [COND1F59]
          bool found1F69#1 = true;
          int testp1F66#1 = 1;
          goto JOIN1F6A
        ASSIGN1F80:  preds = [COND1F1F]
          real _t1F7F#4 = 0.2e1;
          real op1_e3_l_171F81#2 = VDot<3>(mid1EF2,mid1EF2);
          tensor[3] op1_e3_l_221F84#3 = VScale<3>(_t1F7F,mid1EF2);
          real r1F88#6 = RMul(_t1F7F,_t1F7F);
          real op1_e3_l_231F87#1 = RMul(r1F88,op1_e3_l_171F81);
          real op1_e3_l_241F8C#1 = RSub(v01EE2,op1_e3_l_171F81);
          real realLit1F90#11 = 0.1e1;
          real r1F91#3 = RDiv(realLit1F90,op1_e3_l_231F87);
          real r1F92#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_221F84);
          real r1F93#1 = RMul(r1F91,r1F92);
          real r1F94#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_221F84);
          real r1F95#1 = RMul(r1F91,r1F94);
          real r1F96#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_221F84);
          real r1F97#1 = RMul(r1F91,r1F96);
          tensor[3] op1_e3_l_251F8F#1 = <tensor[3]>[r1F93,r1F95,r1F97];
          tensor[3] op1_e3_l_261FA2#1 = VScale<3>(op1_e3_l_241F8C,op1_e3_l_251F8F);
          tensor[3] pos1FA5#13 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          real realLit1FA9#13 = 0.e0;
          tensor[3] step1FA8#4 = <tensor[3]>[realLit1FA9,realLit1FA9,realLit1FA9];
          int nn1FAF#2 = 0;
          particle[] _t1FB1#1 = SphereQuery<3,particle>(pos1FA5,rad1EDE);
        FOREACH1FB4:  preds = [ASSIGN1FB2,NEXT200A]
          foreach (P1FB3 in _t1FB1) on exit goto ASSIGN200C
            int nn2008#3 = phi(nn1FAF,nn2007)
            tensor[3] force2002#4 = phi(step1FA8,force2001)
            real oldE1FCE#2 = phi(realLit1FA9,oldE1FCD)
          tensor[3] _t1FB5#1 = P1FB3.pos;
          tensor[3] op1_e3_l_451FB9#5 = VSub<3>(_t1FB5,pos1FA5);
          real op1_e3_l_471FBC#1 = VDot<3>(op1_e3_l_451FB9,op1_e3_l_451FB9);
          real op1_e3_l_481FBF#2 = Sqrt(op1_e3_l_471FBC);
          real op1_e3_l_491FC2#1 = RDiv(op1_e3_l_481FBF,rad1EDE);
          real op1_e3_l_501FC5#3 = RSub(realLit1F90,op1_e3_l_491FC2);
          real _Pow_21FC9#3 = RMul(op1_e3_l_501FC5,op1_e3_l_501FC5);
          real op1_e3_l_511FC8#1 = RMul(_Pow_21FC9,_Pow_21FC9);
          real oldE1FCD#1 = RAdd(oldE1FCE,op1_e3_l_511FC8);
          real _t1FD1#1 = -0.4e1;
          real op1_e3_l_991FD3#1 = RMul(op1_e3_l_501FC5,_Pow_21FC9);
          real op1_e3_l_1001FD8#1 = RDiv(realLit1F90,rad1EDE);
          real r1FDC#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_451FB9);
          real r1FDD#1 = RMul(_t1FD1,op1_e3_l_991FD3);
          real r1FDE#3 = RMul(r1FDD,op1_e3_l_1001FD8);
          real r1FDF#1 = RMul(r1FDE,r1FDC);
          real r1FE0#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_451FB9);
          real r1FE1#1 = RMul(r1FDE,r1FE0);
          real r1FE2#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_451FB9);
          real r1FE3#1 = RMul(r1FDE,r1FE2);
          real r1FF0#3 = RDiv(realLit1F90,op1_e3_l_481FBF);
          real r1FF2#1 = RMul(r1FF0,r1FDF);
          real r1FF4#1 = RMul(r1FF0,r1FE1);
          real r1FF6#1 = RMul(r1FF0,r1FE3);
          tensor[3] op1_e3_l_1331FEE#1 = <tensor[3]>[r1FF2,r1FF4,r1FF6];
          tensor[3] force2001#1 = VAdd<3>(force2002,op1_e3_l_1331FEE);
          int _t2005#1 = 1;
          int nn2007#1 = IAdd(nn2008,_t2005);
          goto FOREACH1FB4
        ASSIGN200C:  preds = [FOREACH1FB4]
          bool _t200B#1 = EQ<int>(nn1FAF,nn2008);
          if _t200B then goto ASSIGN2010 else goto JOIN201D
        ASSIGN2010:  preds = [COND200D]
          real _t200E#1 = RMul(_t1EEE,rad1EDE);
          tensor[3] _t2011#1 = <tensor[3]>[_t200E,realLit1FA9,realLit1FA9];
          tensor[3] _t2013#1 = VAdd<3>(pos1FA5,_t2011);
          new particle(_t2013,hh1EE6);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.step = step1FA8;
          active
          goto JOIN201D
        JOIN201D:  preds = [*ACTIVE201C,COND200D]
          tensor[3] op1_e3_l_109201E#5 = VSub<3>(pos1FA5,_t1EF0);
          real op1_e3_l_1112021#1 = VDot<3>(op1_e3_l_109201E,op1_e3_l_109201E);
          real op1_e3_l_1122024#1 = RMul(r1F88,op1_e3_l_1112021);
          real op1_e3_l_1132029#1 = Sqrt(op1_e3_l_1122024);
          real op1_e3_l_159202C#12 = RDiv(realLit1F90,op1_e3_l_1132029);
          real r2032#4 = TensorIndex<tensor[3],[0]>(op1_e3_l_109201E);
          real r2034#1 = RMul(r1F88,r2032);
          real r2035#3 = RMul(r2034,op1_e3_l_159202C);
          real r2036#1 = RMul(r2035,r2032);
          real r2037#1 = RMul(r2036,op1_e3_l_159202C);
          real r2038#4 = TensorIndex<tensor[3],[1]>(op1_e3_l_109201E);
          real r2039#1 = RMul(r2035,r2038);
          real r203A#1 = RMul(r2039,op1_e3_l_159202C);
          real r203B#4 = TensorIndex<tensor[3],[2]>(op1_e3_l_109201E);
          real r203C#1 = RMul(r2035,r203B);
          real r203D#1 = RMul(r203C,op1_e3_l_159202C);
          real r203F#1 = RMul(r1F88,r2038);
          real r2040#3 = RMul(r203F,op1_e3_l_159202C);
          real r2041#1 = RMul(r2040,r2032);
          real r2042#1 = RMul(r2041,op1_e3_l_159202C);
          real r2043#1 = RMul(r2040,r2038);
          real r2044#1 = RMul(r2043,op1_e3_l_159202C);
          real r2045#1 = RMul(r2040,r203B);
          real r2046#1 = RMul(r2045,op1_e3_l_159202C);
          real r2048#1 = RMul(r1F88,r203B);
          real r2049#3 = RMul(r2048,op1_e3_l_159202C);
          real r204A#1 = RMul(r2049,r2032);
          real r204B#1 = RMul(r204A,op1_e3_l_159202C);
          real r204C#1 = RMul(r2049,r2038);
          real r204D#1 = RMul(r204C,op1_e3_l_159202C);
          real r204E#1 = RMul(r2049,r203B);
          real r204F#1 = RMul(r204E,op1_e3_l_159202C);
          real r2075#1 = RSub(realLit1F90,r2037);
          real r2078#1 = RSub(realLit1FA9,r203A);
          real r207A#1 = RSub(realLit1FA9,r203D);
          tensor[3] tensor207B#1 = <tensor[3]>[r2075,r2078,r207A];
          real r207D#1 = RSub(realLit1FA9,r2042);
          real r207F#1 = RSub(realLit1F90,r2044);
          real r2081#1 = RSub(realLit1FA9,r2046);
          tensor[3] tensor2082#1 = <tensor[3]>[r207D,r207F,r2081];
          real r2084#1 = RSub(realLit1FA9,r204B);
          real r2086#1 = RSub(realLit1FA9,r204D);
          real r2088#1 = RSub(realLit1F90,r204F);
          tensor[3] tensor2089#1 = <tensor[3]>[r2084,r2086,r2088];
          real vdot20A5#2 = VDot<3>(tensor207B,force2002);
          real vdot20A7#2 = VDot<3>(tensor2082,force2002);
          real vdot20A9#2 = VDot<3>(tensor2089,force2002);
          tensor[3] op1_e3_l_16420A3#4 = <tensor[3]>[vdot20A5,vdot20A7,vdot20A9];
          tensor[3] es20B2#1 = VScale<3>(hh1EE6,op1_e3_l_16420A3);
          real op1_e3_l_26020B5#1 = VDot<3>(op1_e3_l_16420A3,op1_e3_l_16420A3);
          real r20B9#1 = RMul(hh1EE6,hh1EE6);
          real op1_e3_l_26120B8#1 = RMul(r20B9,op1_e3_l_26020B5);
          real _t20BD#2 = Sqrt(op1_e3_l_26120B8);
          bool _t20C0#1 = GT<real>(_t20BD,rad1EDE);
          if _t20C0 then goto ASSIGN20C5 else goto JOIN20DC
        ASSIGN20C5:  preds = [COND20C2]
          real op1_e3_l_26520C3#1 = RDiv(rad1EDE,_t20BD);
          real hh20C6#4 = RMul(hh1EE6,op1_e3_l_26520C3);
          real r20CC#1 = RMul(hh20C6,vdot20A5);
          real r20CE#1 = RMul(hh20C6,vdot20A7);
          real r20D0#1 = RMul(hh20C6,vdot20A9);
          tensor[3] es20C9#1 = <tensor[3]>[r20CC,r20CE,r20D0];
          goto JOIN20DC
        JOIN20DC:  preds = [ASSIGN20D9,COND20C2]
          tensor[3] es20DA#8 = phi(es20C9,es20B2)
          real hh20DB#2 = phi(hh20C6,hh1EE6)
          tensor[3] op1_e3_l_10220DD#1 = VAdd<3>(pos1FA5,es20DA);
          tensor[3] op1_e3_l_11620E2#3 = VSub<3>(op1_e3_l_10220DD,_t1EF0);
          real op1_e3_l_11820E5#2 = VDot<3>(op1_e3_l_11620E2,op1_e3_l_11620E2);
          tensor[3] op1_e3_l_19120E8#3 = VScale<3>(_t1F7F,op1_e3_l_11620E2);
          real op1_e3_l_19220EB#1 = RMul(r1F88,op1_e3_l_11820E5);
          real r20F2#3 = RDiv(realLit1F90,op1_e3_l_19220EB);
          real r20F3#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_19120E8);
          real r20F4#1 = RMul(r20F2,r20F3);
          real r20F5#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_19120E8);
          real r20F6#1 = RMul(r20F2,r20F5);
          real r20F7#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_19120E8);
          real r20F8#1 = RMul(r20F2,r20F7);
          tensor[3] op1_e3_l_23820F0#3 = <tensor[3]>[r20F4,r20F6,r20F8];
          real op1_e3_l_2402103#3 = RSub(v01EE2,op1_e3_l_11820E5);
          real op1_e3_l_2422106#1 = VDot<3>(op1_e3_l_23820F0,op1_e3_l_23820F0);
          real r210A#1 = RMul(op1_e3_l_2402103,op1_e3_l_2402103);
          real op1_e3_l_2432109#1 = RMul(r210A,op1_e3_l_2422106);
          real op1_e3_l_244210E#1 = VDot<3>(es20DA,es20DA);
          real op1_e3_l_2452111#1 = Sqrt(op1_e3_l_2432109);
          real op1_e3_l_2462114#2 = Sqrt(op1_e3_l_244210E);
          real _t2117#1 = RDiv(op1_e3_l_2452111,op1_e3_l_2462114);
          bool _t211A#1 = GT<real>(_t2117,_t1EEE);
          if _t211A then goto ASSIGN211F else goto JOIN2126
        ASSIGN211F:  preds = [COND211C]
          real hh211D#1 = RMul(hh20DB,_t1EEE);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.hh = hh211D;
          self.step = step1FA8;
          active
          goto JOIN2126
        JOIN2126:  preds = [*ACTIVE2124,COND211C]
          real hh2125#2 = phi(hh20DB)
          tensor[3] op1_e3_l_1662127#2 = VScale<3>(op1_e3_l_2402103,op1_e3_l_23820F0);
          tensor[3] up1F6F#1 = VAdd<3>(op1_e3_l_1662127,es20DA);
          tensor[3] v212E#1 = VAdd<3>(pos1FA5,op1_e3_l_1662127);
          tensor[3] pos212C#4 = VAdd<3>(v212E,es20DA);
          particle[] _t2133#1 = SphereQuery<3,particle>(pos212C,rad1EDE);
        FOREACH2136:  preds = [ASSIGN2134,NEXT2153]
          foreach (P2135 in _t2133) on exit goto ASSIGN2156
            real accum2150#2 = phi(realLit1FA9,accum214F)
          tensor[3] _t2137#1 = P2135.pos;
          tensor[3] op1_e3_l_289213B#2 = VSub<3>(pos212C,_t2137);
          real op1_e3_l_291213E#1 = VDot<3>(op1_e3_l_289213B,op1_e3_l_289213B);
          real op1_e3_l_2922141#1 = Sqrt(op1_e3_l_291213E);
          real op1_e3_l_2932144#1 = RDiv(op1_e3_l_2922141,rad1EDE);
          real op1_e3_l_2942147#2 = RSub(realLit1F90,op1_e3_l_2932144);
          real _Pow_2214B#2 = RMul(op1_e3_l_2942147,op1_e3_l_2942147);
          real op1_e3_l_295214A#1 = RMul(_Pow_2214B,_Pow_2214B);
          real accum214F#1 = RAdd(accum2150,op1_e3_l_295214A);
          goto FOREACH2136
        ASSIGN2156:  preds = [FOREACH2136]
          real _t2154#1 = RSub(accum2150,oldE1FCE);
          tensor[3] op1_e3_l_3882157#1 = VSub<3>(pos212C,pos1FA5);
          tensor[3] op1_e3_l_389215A#1 = VNeg<3>(op1_e3_l_16420A3);
          real op1_e3_l_390215D#1 = VDot<3>(op1_e3_l_3882157,op1_e3_l_389215A);
          real _t2160#1 = RMul(_t1EEE,op1_e3_l_390215D);
          bool _t2163#1 = GT<real>(_t2154,_t2160);
          if _t2163 then goto ASSIGN2168 else goto JOIN216F
        ASSIGN2168:  preds = [COND2165]
          real hh2166#1 = RMul(hh2125,_t1EEE);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.hh = hh2166;
          self.step = step1FA8;
          active
          goto JOIN216F
        JOIN216F:  preds = [*ACTIVE216D,COND2165]
          real hh216E#1 = phi(hh2125)
          tensor[3] pos1F73#2 = phi(pos212C)
          real _t2170#1 = 0.11e1;
          real hh1F71#2 = RMul(hh216E,_t2170);
          int _t2174#1 = 5;
          bool _t2176#1 = LT<int>(nn2008,_t2174);
          if _t2176 then goto ASSIGN2252 else goto JOIN2199
        ASSIGN2252:  preds = [COND2178]
          real op1_e3_l_72179#3 = RDiv(realLit1F90,op1_e3_l_2462114);
          real r217F#1 = TensorIndex<tensor[3],[0]>(es20DA);
          real r2180#3 = RMul(_t1EEE,rad1EDE);
          real r2181#1 = RMul(r2180,r217F);
          real r2182#1 = RMul(r2181,op1_e3_l_72179);
          real r2183#1 = TensorIndex<tensor[3],[1]>(es20DA);
          real r2184#1 = RMul(r2180,r2183);
          real r2185#1 = RMul(r2184,op1_e3_l_72179);
          real r2186#1 = TensorIndex<tensor[3],[2]>(es20DA);
          real r2187#1 = RMul(r2180,r2186);
          real r2188#1 = RMul(r2187,op1_e3_l_72179);
          tensor[3] op1_e3_l_8217E#1 = <tensor[3]>[r2182,r2185,r2188];
          tensor[3] _t2195#1 = VAdd<3>(pos1F73,op1_e3_l_8217E);
          new particle(_t2195,hh1F71);
          goto JOIN2199
        JOIN2199:  preds = [NEW2198,COND2178]
          goto JOIN1F74
        ASSIGN219B:  preds = [COND1F14]
          real _t219A#2 = 0.2e1;
          real op1_e3_l_5219C#1 = VDot<3>(mid1EF2,mid1EF2);
          real r21A0#1 = RMul(_t219A,_t219A);
          real op1_e3_l_6219F#1 = RMul(r21A0,op1_e3_l_5219C);
          real _t21A4#1 = Sqrt(op1_e3_l_6219F);
          real _t21A7#1 = 0.e0;
          bool _t1F18#1 = EQ<real>(_t21A4,_t21A7);
          goto JOIN1F19
        ASSIGN21AA:  preds = [COND1F04]
          bool _t1F0D#1 = false;
          goto JOIN1F0E
        ASSIGN21AB:  preds = [COND1EFC]
          bool _t1F10#1 = false;
          goto JOIN1F11
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY21AC:  preds = []
      tensor[3][] ipos21AD#1 = globals.ipos1E9C;
    FOREACH21B0:  preds = [ASSIGN21AE,NEXT21B4]
      foreach (x21AF in ipos21AD) on exit goto RETURN21B5
      real _t21B1#1 = 0.1e1;
      new particle(x21AF,_t21B1);
      goto FOREACH21B0
    RETURN21B5:  preds = [FOREACH21B0]
      return
## global update
  ENTRY21B6:  preds = []
    real rad21B7#1 = globals.rad1E99;
    real eps21B9#1 = globals.eps1E9A;
    particle[] P21BB#6 = Strands<particle,all>;
    (int res21C3#1) = sum<int>(MAP sum21BD (P21BB));
    (int res21CB#1) = sum<int>(MAP sum21C5 (P21BB));
    (bool res21D3#2) = all(MAP all21CD (P21BB));
    (real res21E1#1) = max<real>(MAP max21D5 (P21BB));
    (real res21F6#1) = max<real>(MAP max21E3 (P21BB));
    (real res220B#1) = min<real>(MAP min21F8 (P21BB));
    tensor[2] averageDist220D#1 = <tensor[2]>[res220B,res21F6];
    string _t220F#1 = "One run:";
    string _t2211#4 = " and ";
    real _t2213#2 = RDiv(res21E1,rad21B7);
    bool _t2216#2 = LT<real>(_t2213,eps21B9);
    string _t2218#1 = " of ";
    string _t221A#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t220F,res21D3,_t2211,_t2213,_t2211,_t2216,_t2211,res21CB,_t2218,res21C3,_t2211,averageDist220D,_t221A);
    if res21D3 then goto COND221E else goto JOIN2224
  COND221E:  preds = [COND221D]
    if _t2216 then goto ASSIGN2220 else goto JOIN2223
  ASSIGN2220:  preds = [COND221E]
    string _t221F#1 = "CONVERGED!\n";
    Print<[string]>(_t221F);
    StabilizeAll;
    goto JOIN2223
  JOIN2223:  preds = [MASSIGN2222,COND221E]
    goto JOIN2224
  JOIN2224:  preds = [JOIN2223,COND221D]
    continue
#### end program ####
##### low-ir: after flatten ####
## properties
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
## globals
  input meshData1E96 (meshData) = <no-default>
  input 0space0473_intermedateGlobal1E97 (space) = <no-default>
  input 0data0475_intermedateGlobal1E98 (data) = <no-default>
  input rad1E99 (rad) = <default>
  input eps1E9A (eps) = <default>
  input v01E9B (v0) = <default>
  input ipos1E9C (ipos) = <no-default>
## functions
  function int sum21BD (particle P21BE#1) {
    ENTRY21BF:  preds = []
      int _t21C0#1 = P21BE.test;
      return _t21C0
}
  function int sum21C5 (particle P21C6#1) {
    ENTRY21C7:  preds = []
      int _t21C8#1 = P21C6.testp;
      return _t21C8
}
  function bool all21CD (particle P21CE#1) {
    ENTRY21CF:  preds = []
      bool _t21D0#1 = P21CE.found;
      return _t21D0
}
  function real max21D5 (particle P21D6#1) {
    ENTRY21D7:  preds = []
      tensor[3] _t21D8#2 = P21D6.step;
      real op1_e3_l_121DA#1 = VDot<3>(_t21D8,_t21D8);
      real _t21DD#1 = Sqrt(op1_e3_l_121DA);
      return _t21DD
}
  function real max21E3 (particle P21E4#1) {
    ENTRY21E5:  preds = []
      tensor[3] _t21E6#1 = P21E4.pos;
      real _t21E8#3 = 0.5e0;
      tensor[3] _t21EA#1 = <tensor[3]>[_t21E8,_t21E8,_t21E8];
      tensor[3] op1_e3_l_221EC#2 = VSub<3>(_t21E6,_t21EA);
      real op1_e3_l_421EF#1 = VDot<3>(op1_e3_l_221EC,op1_e3_l_221EC);
      real _t21F2#1 = Sqrt(op1_e3_l_421EF);
      return _t21F2
}
  function real min21F8 (particle P21F9#1) {
    ENTRY21FA:  preds = []
      tensor[3] _t21FB#1 = P21F9.pos;
      real _t21FD#3 = 0.5e0;
      tensor[3] _t21FF#1 = <tensor[3]>[_t21FD,_t21FD,_t21FD];
      tensor[3] op1_e3_l_22201#2 = VSub<3>(_t21FB,_t21FF);
      real op1_e3_l_42204#1 = VDot<3>(op1_e3_l_22201,op1_e3_l_22201);
      real _t2207#1 = Sqrt(op1_e3_l_42204);
      return _t2207
}
## input initialization
  ENTRY1E9D:  preds = []
    real rad1E9E#2 = 0.1e-1;
    globals.rad1E99 = rad1E9E;
    globals.eps1E9A = rad1E9E;
    real v01EA2#1 = 0.625e-1;
    globals.v01E9B = v01EA2;
    return
## global-variable initialization
  ENTRY1EA6:  preds = []
    femData:Mesh meshData1EA7#2 = globals.meshData1E96;
    int _t1EA9#1 = 0;
    int _t1EAB#1 = 1;
    int _t1EAD#1 = ExtractFemItem<int,NumCell(Mesh)>(meshData1EA7);
    int _t1EAF#1 = ISub(_t1EAD,_t1EAB);
    int[] _t1EB1#1 = Range(_t1EA9,_t1EAF);
    femData:MeshCell[] _t1EB3#1 = <femData:MeshCell[]>{};
  FOREACH1EB6:  preds = [ASSIGN1EB4,NEXT1EBC]
    foreach (_t1EB5 in _t1EB1) on exit goto RETURN1EBD
      femData:MeshCell[] _t1EBA#1 = phi(_t1EB3,_t1EB9)
    femData:MeshCell _t1EB7#1 = LoadFem<femData:MeshCell>(meshData1EA7,_t1EB5);
    femData:MeshCell[] _t1EB9#1 = Append<femData:MeshCell>(_t1EBA,_t1EB7);
    goto FOREACH1EB6
  RETURN1EBD:  preds = [FOREACH1EB6]
    return
## strand
  strand particle (tensor[3] pos01EBE#2, real hh01EBF#1) in 3D
    state:
      output tensor[3] pos;
      output tensor[3] _pos;
      real hh;
      tensor[3] step;
      bool found;
      int nfs;
      int test;
      int testp;
    state init
      ENTRY1EC8:  preds = []
        real realLit1ECA#3 = 0.e0;
        tensor[3] step1EC9#1 = <tensor[3]>[realLit1ECA,realLit1ECA,realLit1ECA];
        bool found1ECE#1 = false;
        int nfs1ED0#2 = 0;
        int test1ED2#1 = 1;
        self.pos = pos01EBE;
        self._pos = pos01EBE;
        self.hh = hh01EBF;
        self.step = step1EC9;
        self.found = found1ECE;
        self.nfs = nfs1ED0;
        self.test = test1ED2;
        self.testp = nfs1ED0;
        return
    end state init
    method update
        ENTRY1EDD:  preds = []
          real rad1EDE#10 = globals.rad1E99;
          real eps1EE0#1 = globals.eps1E9A;
          real v01EE2#3 = globals.v01E9B;
          tensor[3] pos1EE4#3 = self.pos;
          real hh1EE6#7 = self.hh;
          bool found1EE8#3 = self.found;
          int nfs1EEA#3 = self.nfs;
          int testp1EEC#2 = self.testp;
          real _t1EEE#12 = 0.5e0;
          tensor[3] _t1EF0#3 = <tensor[3]>[_t1EEE,_t1EEE,_t1EEE];
          tensor[3] mid1EF2#11 = VSub<3>(pos1EE4,_t1EF0);
          real _t1EF5#1 = VIndex<3,0>(mid1EF2);
          real _t1EF7#1 = Abs<real>(_t1EF5);
          bool _t1EFA#1 = LTE<real>(_t1EF7,_t1EEE);
          if _t1EFA then goto ASSIGN1EFE else goto ASSIGN21AB
        ASSIGN1EFE:  preds = [COND1EFC]
          real _t1EFD#1 = VIndex<3,1>(mid1EF2);
          real _t1EFF#1 = Abs<real>(_t1EFD);
          bool _t1F02#1 = LTE<real>(_t1EFF,_t1EEE);
          if _t1F02 then goto ASSIGN1F06 else goto ASSIGN21AA
        ASSIGN1F06:  preds = [COND1F04]
          real _t1F05#1 = VIndex<3,2>(mid1EF2);
          real _t1F07#1 = Abs<real>(_t1F05);
          bool _t1F0A#1 = LTE<real>(_t1F07,_t1EEE);
          goto JOIN1F0E
        JOIN1F0E:  preds = [ASSIGN1F0B,ASSIGN21AA]
          bool _t1F0C#1 = phi(_t1F0A,_t1F0D)
          goto JOIN1F11
        JOIN1F11:  preds = [JOIN1F0E,ASSIGN21AB]
          bool _t1F0F#1 = phi(_t1F0C,_t1F10)
          bool _t1F12#1 = BNot(_t1F0F);
          if _t1F12 then goto ASSIGN1F16 else goto ASSIGN219B
        ASSIGN1F16:  preds = [COND1F14]
          bool _t1F15#1 = true;
          goto JOIN1F19
        JOIN1F19:  preds = [ASSIGN1F16,ASSIGN21A9]
          bool _t1F17#1 = phi(_t1F15,_t1F18)
          if _t1F17 then goto DIE1F1B else goto JOIN1F1C
        DIE1F1B:  preds = [COND1F1A]
          die
          goto JOIN1F1C
        JOIN1F1C:  preds = [*DIE1F1B,COND1F1A]
          bool _t1F1D#1 = BNot(found1EE8);
          if _t1F1D then goto ASSIGN1F21 else goto ASSIGN1F80
        ASSIGN1F21:  preds = [COND1F1F]
          real _t1F20#3 = 0.2e1;
          real op1_e3_l_161F22#2 = VDot<3>(mid1EF2,mid1EF2);
          tensor[3] op1_e3_l_211F25#3 = VScale<3>(_t1F20,mid1EF2);
          real r1F29#1 = RMul(_t1F20,_t1F20);
          real op1_e3_l_221F28#1 = RMul(r1F29,op1_e3_l_161F22);
          real op1_e3_l_231F2D#3 = RSub(v01EE2,op1_e3_l_161F22);
          real realLit1F31#1 = 0.1e1;
          real r1F32#3 = RDiv(realLit1F31,op1_e3_l_221F28);
          real r1F33#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_211F25);
          real r1F34#1 = RMul(r1F32,r1F33);
          real r1F35#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_211F25);
          real r1F36#1 = RMul(r1F32,r1F35);
          real r1F37#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_211F25);
          real r1F38#1 = RMul(r1F32,r1F37);
          tensor[3] op1_e3_l_241F30#3 = <tensor[3]>[r1F34,r1F36,r1F38];
          tensor[3] _t1F43#2 = VScale<3>(op1_e3_l_231F2D,op1_e3_l_241F30);
          tensor[3] pos1F46#1 = VAdd<3>(pos1EE4,_t1F43);
          real op1_e3_l_371F49#1 = VDot<3>(op1_e3_l_241F30,op1_e3_l_241F30);
          real r1F4D#1 = RMul(op1_e3_l_231F2D,op1_e3_l_231F2D);
          real op1_e3_l_381F4C#1 = RMul(r1F4D,op1_e3_l_371F49);
          real op1_e3_l_391F51#1 = Sqrt(op1_e3_l_381F4C);
          real _t1F54#1 = RDiv(op1_e3_l_391F51,rad1EDE);
          bool _t1F57#1 = GT<real>(_t1F54,eps1EE0);
          if _t1F57 then goto ASSIGN1F5B else goto ASSIGN1F7D
        ASSIGN1F5B:  preds = [COND1F59]
          int _t1F5A#1 = 1;
          int nfs1F5C#2 = IAdd(nfs1EEA,_t1F5A);
          int _t1F5E#1 = 10;
          bool _t1F60#1 = GT<int>(nfs1F5C,_t1F5E);
          if _t1F60 then goto DIE1F63 else goto JOIN1F64
        DIE1F63:  preds = [COND1F62]
          die
          goto JOIN1F64
        JOIN1F64:  preds = [*DIE1F63,COND1F62]
          goto JOIN1F6A
        JOIN1F6A:  preds = [JOIN1F64,ASSIGN1F7E]
          int testp1F65#1 = phi(testp1EEC,testp1F66)
          int nfs1F67#1 = phi(nfs1F5C,nfs1EEA)
          bool found1F68#1 = phi(found1EE8,found1F69)
          goto JOIN1F74
        JOIN1F74:  preds = [JOIN1F6A,JOIN2199]
          int testp1F6B#1 = phi(testp1F65,testp1EEC)
          int nfs1F6C#1 = phi(nfs1F67,nfs1EEA)
          bool found1F6D#1 = phi(found1F68,found1EE8)
          tensor[3] step1F6E#1 = phi(_t1F43,up1F6F)
          real hh1F70#1 = phi(hh1EE6,hh1F71)
          tensor[3] pos1F72#2 = phi(pos1F46,pos1F73)
          self.pos = pos1F72;
          self._pos = pos1F72;
          self.hh = hh1F70;
          self.step = step1F6E;
          self.found = found1F6D;
          self.nfs = nfs1F6C;
          self.testp = testp1F6B;
          active
        ASSIGN1F7D:  preds = [COND1F59]
          bool found1F69#1 = true;
          int testp1F66#1 = 1;
          goto JOIN1F6A
        ASSIGN1F80:  preds = [COND1F1F]
          real _t1F7F#4 = 0.2e1;
          real op1_e3_l_171F81#2 = VDot<3>(mid1EF2,mid1EF2);
          tensor[3] op1_e3_l_221F84#3 = VScale<3>(_t1F7F,mid1EF2);
          real r1F88#6 = RMul(_t1F7F,_t1F7F);
          real op1_e3_l_231F87#1 = RMul(r1F88,op1_e3_l_171F81);
          real op1_e3_l_241F8C#1 = RSub(v01EE2,op1_e3_l_171F81);
          real realLit1F90#11 = 0.1e1;
          real r1F91#3 = RDiv(realLit1F90,op1_e3_l_231F87);
          real r1F92#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_221F84);
          real r1F93#1 = RMul(r1F91,r1F92);
          real r1F94#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_221F84);
          real r1F95#1 = RMul(r1F91,r1F94);
          real r1F96#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_221F84);
          real r1F97#1 = RMul(r1F91,r1F96);
          tensor[3] op1_e3_l_251F8F#1 = <tensor[3]>[r1F93,r1F95,r1F97];
          tensor[3] op1_e3_l_261FA2#1 = VScale<3>(op1_e3_l_241F8C,op1_e3_l_251F8F);
          tensor[3] pos1FA5#13 = VAdd<3>(pos1EE4,op1_e3_l_261FA2);
          real realLit1FA9#13 = 0.e0;
          tensor[3] step1FA8#4 = <tensor[3]>[realLit1FA9,realLit1FA9,realLit1FA9];
          int nn1FAF#2 = 0;
          particle[] _t1FB1#1 = SphereQuery<3,particle>(pos1FA5,rad1EDE);
        FOREACH1FB4:  preds = [ASSIGN1FB2,NEXT200A]
          foreach (P1FB3 in _t1FB1) on exit goto ASSIGN200C
            int nn2008#3 = phi(nn1FAF,nn2007)
            tensor[3] force2002#4 = phi(step1FA8,force2001)
            real oldE1FCE#2 = phi(realLit1FA9,oldE1FCD)
          tensor[3] _t1FB5#1 = P1FB3.pos;
          tensor[3] op1_e3_l_451FB9#5 = VSub<3>(_t1FB5,pos1FA5);
          real op1_e3_l_471FBC#1 = VDot<3>(op1_e3_l_451FB9,op1_e3_l_451FB9);
          real op1_e3_l_481FBF#2 = Sqrt(op1_e3_l_471FBC);
          real op1_e3_l_491FC2#1 = RDiv(op1_e3_l_481FBF,rad1EDE);
          real op1_e3_l_501FC5#3 = RSub(realLit1F90,op1_e3_l_491FC2);
          real _Pow_21FC9#3 = RMul(op1_e3_l_501FC5,op1_e3_l_501FC5);
          real op1_e3_l_511FC8#1 = RMul(_Pow_21FC9,_Pow_21FC9);
          real oldE1FCD#1 = RAdd(oldE1FCE,op1_e3_l_511FC8);
          real _t1FD1#1 = -0.4e1;
          real op1_e3_l_991FD3#1 = RMul(op1_e3_l_501FC5,_Pow_21FC9);
          real op1_e3_l_1001FD8#1 = RDiv(realLit1F90,rad1EDE);
          real r1FDC#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_451FB9);
          real r1FDD#1 = RMul(_t1FD1,op1_e3_l_991FD3);
          real r1FDE#3 = RMul(r1FDD,op1_e3_l_1001FD8);
          real r1FDF#1 = RMul(r1FDE,r1FDC);
          real r1FE0#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_451FB9);
          real r1FE1#1 = RMul(r1FDE,r1FE0);
          real r1FE2#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_451FB9);
          real r1FE3#1 = RMul(r1FDE,r1FE2);
          real r1FF0#3 = RDiv(realLit1F90,op1_e3_l_481FBF);
          real r1FF2#1 = RMul(r1FF0,r1FDF);
          real r1FF4#1 = RMul(r1FF0,r1FE1);
          real r1FF6#1 = RMul(r1FF0,r1FE3);
          tensor[3] op1_e3_l_1331FEE#1 = <tensor[3]>[r1FF2,r1FF4,r1FF6];
          tensor[3] force2001#1 = VAdd<3>(force2002,op1_e3_l_1331FEE);
          int _t2005#1 = 1;
          int nn2007#1 = IAdd(nn2008,_t2005);
          goto FOREACH1FB4
        ASSIGN200C:  preds = [FOREACH1FB4]
          bool _t200B#1 = EQ<int>(nn1FAF,nn2008);
          if _t200B then goto ASSIGN2010 else goto JOIN201D
        ASSIGN2010:  preds = [COND200D]
          real _t200E#1 = RMul(_t1EEE,rad1EDE);
          tensor[3] _t2011#1 = <tensor[3]>[_t200E,realLit1FA9,realLit1FA9];
          tensor[3] _t2013#1 = VAdd<3>(pos1FA5,_t2011);
          new particle(_t2013,hh1EE6);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.step = step1FA8;
          active
          goto JOIN201D
        JOIN201D:  preds = [*ACTIVE201C,COND200D]
          tensor[3] op1_e3_l_109201E#5 = VSub<3>(pos1FA5,_t1EF0);
          real op1_e3_l_1112021#1 = VDot<3>(op1_e3_l_109201E,op1_e3_l_109201E);
          real op1_e3_l_1122024#1 = RMul(r1F88,op1_e3_l_1112021);
          real op1_e3_l_1132029#1 = Sqrt(op1_e3_l_1122024);
          real op1_e3_l_159202C#12 = RDiv(realLit1F90,op1_e3_l_1132029);
          real r2032#4 = TensorIndex<tensor[3],[0]>(op1_e3_l_109201E);
          real r2034#1 = RMul(r1F88,r2032);
          real r2035#3 = RMul(r2034,op1_e3_l_159202C);
          real r2036#1 = RMul(r2035,r2032);
          real r2037#1 = RMul(r2036,op1_e3_l_159202C);
          real r2038#4 = TensorIndex<tensor[3],[1]>(op1_e3_l_109201E);
          real r2039#1 = RMul(r2035,r2038);
          real r203A#1 = RMul(r2039,op1_e3_l_159202C);
          real r203B#4 = TensorIndex<tensor[3],[2]>(op1_e3_l_109201E);
          real r203C#1 = RMul(r2035,r203B);
          real r203D#1 = RMul(r203C,op1_e3_l_159202C);
          real r203F#1 = RMul(r1F88,r2038);
          real r2040#3 = RMul(r203F,op1_e3_l_159202C);
          real r2041#1 = RMul(r2040,r2032);
          real r2042#1 = RMul(r2041,op1_e3_l_159202C);
          real r2043#1 = RMul(r2040,r2038);
          real r2044#1 = RMul(r2043,op1_e3_l_159202C);
          real r2045#1 = RMul(r2040,r203B);
          real r2046#1 = RMul(r2045,op1_e3_l_159202C);
          real r2048#1 = RMul(r1F88,r203B);
          real r2049#3 = RMul(r2048,op1_e3_l_159202C);
          real r204A#1 = RMul(r2049,r2032);
          real r204B#1 = RMul(r204A,op1_e3_l_159202C);
          real r204C#1 = RMul(r2049,r2038);
          real r204D#1 = RMul(r204C,op1_e3_l_159202C);
          real r204E#1 = RMul(r2049,r203B);
          real r204F#1 = RMul(r204E,op1_e3_l_159202C);
          real r2075#1 = RSub(realLit1F90,r2037);
          real r2078#1 = RSub(realLit1FA9,r203A);
          real r207A#1 = RSub(realLit1FA9,r203D);
          tensor[3] tensor207B#1 = <tensor[3]>[r2075,r2078,r207A];
          real r207D#1 = RSub(realLit1FA9,r2042);
          real r207F#1 = RSub(realLit1F90,r2044);
          real r2081#1 = RSub(realLit1FA9,r2046);
          tensor[3] tensor2082#1 = <tensor[3]>[r207D,r207F,r2081];
          real r2084#1 = RSub(realLit1FA9,r204B);
          real r2086#1 = RSub(realLit1FA9,r204D);
          real r2088#1 = RSub(realLit1F90,r204F);
          tensor[3] tensor2089#1 = <tensor[3]>[r2084,r2086,r2088];
          real vdot20A5#2 = VDot<3>(tensor207B,force2002);
          real vdot20A7#2 = VDot<3>(tensor2082,force2002);
          real vdot20A9#2 = VDot<3>(tensor2089,force2002);
          tensor[3] op1_e3_l_16420A3#4 = <tensor[3]>[vdot20A5,vdot20A7,vdot20A9];
          tensor[3] es20B2#1 = VScale<3>(hh1EE6,op1_e3_l_16420A3);
          real op1_e3_l_26020B5#1 = VDot<3>(op1_e3_l_16420A3,op1_e3_l_16420A3);
          real r20B9#1 = RMul(hh1EE6,hh1EE6);
          real op1_e3_l_26120B8#1 = RMul(r20B9,op1_e3_l_26020B5);
          real _t20BD#2 = Sqrt(op1_e3_l_26120B8);
          bool _t20C0#1 = GT<real>(_t20BD,rad1EDE);
          if _t20C0 then goto ASSIGN20C5 else goto JOIN20DC
        ASSIGN20C5:  preds = [COND20C2]
          real op1_e3_l_26520C3#1 = RDiv(rad1EDE,_t20BD);
          real hh20C6#4 = RMul(hh1EE6,op1_e3_l_26520C3);
          real r20CC#1 = RMul(hh20C6,vdot20A5);
          real r20CE#1 = RMul(hh20C6,vdot20A7);
          real r20D0#1 = RMul(hh20C6,vdot20A9);
          tensor[3] es20C9#1 = <tensor[3]>[r20CC,r20CE,r20D0];
          goto JOIN20DC
        JOIN20DC:  preds = [ASSIGN20D9,COND20C2]
          tensor[3] es20DA#8 = phi(es20C9,es20B2)
          real hh20DB#2 = phi(hh20C6,hh1EE6)
          tensor[3] op1_e3_l_10220DD#1 = VAdd<3>(pos1FA5,es20DA);
          tensor[3] op1_e3_l_11620E2#3 = VSub<3>(op1_e3_l_10220DD,_t1EF0);
          real op1_e3_l_11820E5#2 = VDot<3>(op1_e3_l_11620E2,op1_e3_l_11620E2);
          tensor[3] op1_e3_l_19120E8#3 = VScale<3>(_t1F7F,op1_e3_l_11620E2);
          real op1_e3_l_19220EB#1 = RMul(r1F88,op1_e3_l_11820E5);
          real r20F2#3 = RDiv(realLit1F90,op1_e3_l_19220EB);
          real r20F3#1 = TensorIndex<tensor[3],[0]>(op1_e3_l_19120E8);
          real r20F4#1 = RMul(r20F2,r20F3);
          real r20F5#1 = TensorIndex<tensor[3],[1]>(op1_e3_l_19120E8);
          real r20F6#1 = RMul(r20F2,r20F5);
          real r20F7#1 = TensorIndex<tensor[3],[2]>(op1_e3_l_19120E8);
          real r20F8#1 = RMul(r20F2,r20F7);
          tensor[3] op1_e3_l_23820F0#3 = <tensor[3]>[r20F4,r20F6,r20F8];
          real op1_e3_l_2402103#3 = RSub(v01EE2,op1_e3_l_11820E5);
          real op1_e3_l_2422106#1 = VDot<3>(op1_e3_l_23820F0,op1_e3_l_23820F0);
          real r210A#1 = RMul(op1_e3_l_2402103,op1_e3_l_2402103);
          real op1_e3_l_2432109#1 = RMul(r210A,op1_e3_l_2422106);
          real op1_e3_l_244210E#1 = VDot<3>(es20DA,es20DA);
          real op1_e3_l_2452111#1 = Sqrt(op1_e3_l_2432109);
          real op1_e3_l_2462114#2 = Sqrt(op1_e3_l_244210E);
          real _t2117#1 = RDiv(op1_e3_l_2452111,op1_e3_l_2462114);
          bool _t211A#1 = GT<real>(_t2117,_t1EEE);
          if _t211A then goto ASSIGN211F else goto JOIN2126
        ASSIGN211F:  preds = [COND211C]
          real hh211D#1 = RMul(hh20DB,_t1EEE);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.hh = hh211D;
          self.step = step1FA8;
          active
          goto JOIN2126
        JOIN2126:  preds = [*ACTIVE2124,COND211C]
          real hh2125#2 = phi(hh20DB)
          tensor[3] op1_e3_l_1662127#2 = VScale<3>(op1_e3_l_2402103,op1_e3_l_23820F0);
          tensor[3] up1F6F#1 = VAdd<3>(op1_e3_l_1662127,es20DA);
          tensor[3] v212E#1 = VAdd<3>(pos1FA5,op1_e3_l_1662127);
          tensor[3] pos212C#4 = VAdd<3>(v212E,es20DA);
          particle[] _t2133#1 = SphereQuery<3,particle>(pos212C,rad1EDE);
        FOREACH2136:  preds = [ASSIGN2134,NEXT2153]
          foreach (P2135 in _t2133) on exit goto ASSIGN2156
            real accum2150#2 = phi(realLit1FA9,accum214F)
          tensor[3] _t2137#1 = P2135.pos;
          tensor[3] op1_e3_l_289213B#2 = VSub<3>(pos212C,_t2137);
          real op1_e3_l_291213E#1 = VDot<3>(op1_e3_l_289213B,op1_e3_l_289213B);
          real op1_e3_l_2922141#1 = Sqrt(op1_e3_l_291213E);
          real op1_e3_l_2932144#1 = RDiv(op1_e3_l_2922141,rad1EDE);
          real op1_e3_l_2942147#2 = RSub(realLit1F90,op1_e3_l_2932144);
          real _Pow_2214B#2 = RMul(op1_e3_l_2942147,op1_e3_l_2942147);
          real op1_e3_l_295214A#1 = RMul(_Pow_2214B,_Pow_2214B);
          real accum214F#1 = RAdd(accum2150,op1_e3_l_295214A);
          goto FOREACH2136
        ASSIGN2156:  preds = [FOREACH2136]
          real _t2154#1 = RSub(accum2150,oldE1FCE);
          tensor[3] op1_e3_l_3882157#1 = VSub<3>(pos212C,pos1FA5);
          tensor[3] op1_e3_l_389215A#1 = VNeg<3>(op1_e3_l_16420A3);
          real op1_e3_l_390215D#1 = VDot<3>(op1_e3_l_3882157,op1_e3_l_389215A);
          real _t2160#1 = RMul(_t1EEE,op1_e3_l_390215D);
          bool _t2163#1 = GT<real>(_t2154,_t2160);
          if _t2163 then goto ASSIGN2168 else goto JOIN216F
        ASSIGN2168:  preds = [COND2165]
          real hh2166#1 = RMul(hh2125,_t1EEE);
          self.pos = pos1FA5;
          self._pos = pos1FA5;
          self.hh = hh2166;
          self.step = step1FA8;
          active
          goto JOIN216F
        JOIN216F:  preds = [*ACTIVE216D,COND2165]
          real hh216E#1 = phi(hh2125)
          tensor[3] pos1F73#2 = phi(pos212C)
          real _t2170#1 = 0.11e1;
          real hh1F71#2 = RMul(hh216E,_t2170);
          int _t2174#1 = 5;
          bool _t2176#1 = LT<int>(nn2008,_t2174);
          if _t2176 then goto ASSIGN2252 else goto JOIN2199
        ASSIGN2252:  preds = [COND2178]
          real op1_e3_l_72179#3 = RDiv(realLit1F90,op1_e3_l_2462114);
          real r217F#1 = TensorIndex<tensor[3],[0]>(es20DA);
          real r2180#3 = RMul(_t1EEE,rad1EDE);
          real r2181#1 = RMul(r2180,r217F);
          real r2182#1 = RMul(r2181,op1_e3_l_72179);
          real r2183#1 = TensorIndex<tensor[3],[1]>(es20DA);
          real r2184#1 = RMul(r2180,r2183);
          real r2185#1 = RMul(r2184,op1_e3_l_72179);
          real r2186#1 = TensorIndex<tensor[3],[2]>(es20DA);
          real r2187#1 = RMul(r2180,r2186);
          real r2188#1 = RMul(r2187,op1_e3_l_72179);
          tensor[3] op1_e3_l_8217E#1 = <tensor[3]>[r2182,r2185,r2188];
          tensor[3] _t2195#1 = VAdd<3>(pos1F73,op1_e3_l_8217E);
          new particle(_t2195,hh1F71);
          goto JOIN2199
        JOIN2199:  preds = [NEW2198,COND2178]
          goto JOIN1F74
        ASSIGN219B:  preds = [COND1F14]
          real _t219A#2 = 0.2e1;
          real op1_e3_l_5219C#1 = VDot<3>(mid1EF2,mid1EF2);
          real r21A0#1 = RMul(_t219A,_t219A);
          real op1_e3_l_6219F#1 = RMul(r21A0,op1_e3_l_5219C);
          real _t21A4#1 = Sqrt(op1_e3_l_6219F);
          real _t21A7#1 = 0.e0;
          bool _t1F18#1 = EQ<real>(_t21A4,_t21A7);
          goto JOIN1F19
        ASSIGN21AA:  preds = [COND1F04]
          bool _t1F0D#1 = false;
          goto JOIN1F0E
        ASSIGN21AB:  preds = [COND1EFC]
          bool _t1F10#1 = false;
          goto JOIN1F11
    end update
  end particle
## initial strand creation
  COLLECTION
    ENTRY21AC:  preds = []
      tensor[3][] ipos21AD#1 = globals.ipos1E9C;
    FOREACH21B0:  preds = [ASSIGN21AE,NEXT21B4]
      foreach (x21AF in ipos21AD) on exit goto RETURN21B5
      real _t21B1#1 = 0.1e1;
      new particle(x21AF,_t21B1);
      goto FOREACH21B0
    RETURN21B5:  preds = [FOREACH21B0]
      return
## global update
  ENTRY21B6:  preds = []
    real rad21B7#1 = globals.rad1E99;
    real eps21B9#1 = globals.eps1E9A;
    particle[] P21BB#6 = Strands<particle,all>;
    (int res21C3#1) = sum<int>(MAP sum21BD (P21BB));
    (int res21CB#1) = sum<int>(MAP sum21C5 (P21BB));
    (bool res21D3#2) = all(MAP all21CD (P21BB));
    (real res21E1#1) = max<real>(MAP max21D5 (P21BB));
    (real res21F6#1) = max<real>(MAP max21E3 (P21BB));
    (real res220B#1) = min<real>(MAP min21F8 (P21BB));
    tensor[2] averageDist220D#1 = <tensor[2]>[res220B,res21F6];
    string _t220F#1 = "One run:";
    string _t2211#4 = " and ";
    real _t2213#2 = RDiv(res21E1,rad21B7);
    bool _t2216#2 = LT<real>(_t2213,eps21B9);
    string _t2218#1 = " of ";
    string _t221A#1 = "\n";
    Print<[string,bool,string,real,string,bool,string,int,string,int,string,tensor[2],string]>(_t220F,res21D3,_t2211,_t2213,_t2211,_t2216,_t2211,res21CB,_t2218,res21C3,_t2211,averageDist220D,_t221A);
    if res21D3 then goto COND221E else goto JOIN2224
  COND221E:  preds = [COND221D]
    if _t2216 then goto ASSIGN2220 else goto JOIN2223
  ASSIGN2220:  preds = [COND221E]
    string _t221F#1 = "CONVERGED!\n";
    Print<[string]>(_t221F);
    StabilizeAll;
    goto JOIN2223
  JOIN2223:  preds = [MASSIGN2222,COND221E]
    goto JOIN2224
  JOIN2224:  preds = [JOIN2223,COND221D]
    continue
#### end program ####
##### TreeIR: after low-to-tree translation ####
//***** PROPERTIES *****
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) meshData;
input femData(Space) 0space0473_intermedateGlobal;
input femData(FemFunc) 0data0475_intermedateGlobal;
input real rad;
input real eps;
input real v0;
input tensor[3][] ipos;
//***** CONST INIT *****
  {
    globals.rad = 0.1e-1;
    globals.eps = 0.1e-1;
    globals.v0 = 0.625e-1;
  }
//***** GLOBALS *****
//***** FUNCTIONS *****
  function int sum (world, id(particle) p_P_0) {
    return p_P_0.test
  }
  function int sum (world, id(particle) p_P_1) {
    return p_P_1.testp
  }
  function bool all (world, id(particle) p_P_2) {
    return p_P_2.found
  }
  function real max (world, id(particle) p_P_3) {
    return Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(p_P_3.step)),LOAD_0(TensorRef<[3]>(p_P_3.step))))
  }
  function real max (world, id(particle) p_P_4) {
    vec3{4} v_5 = VSub<3,4>(LOAD_0(TensorRef<[3]>(p_P_4.pos)),VEC3{4}(0.5e0,0.5e0,0.5e0));
    return Sqrt(VDot<3,4>(v_5,v_5))
  }
  function real min (world, id(particle) p_P_6) {
    vec3{4} v_7 = VSub<3,4>(LOAD_0(TensorRef<[3]>(p_P_6.pos)),VEC3{4}(0.5e0,0.5e0,0.5e0));
    return Sqrt(VDot<3,4>(v_7,v_7))
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_8;
    l__t_8 = <femData(MeshCell)[]>{};
    for i__t_9 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.meshData),1) {
      l__t_8 = Append<femData(MeshCell),femData(MeshCell)>(l__t_8,LoadFem<femData(MeshCell)>(globals.meshData,i__t_9));
    }
  }
//***** STRAND *****
strand particle (&tensor[3] p_pos0_10,real p_hh0_11) in 3D {
  varying output tensor[3] pos;
  varying output tensor[3] _pos;
  varying real hh;
  varying tensor[3] step;
  varying bool found;
  varying int nfs;
  int test;
  varying int testp;
  initialize () {
    self.pos = TensorCopy<[3]>(p_pos0_10);
    self._pos = TensorCopy<[3]>(p_pos0_10);
    self.hh = p_hh0_11;
    self.step = PACK(VEC3{4}(0.e0,0.e0,0.e0));
    self.found = false;
    self.nfs = 0;
    self.test = 1;
    self.testp = 0;
  }
  update (world, globals) {
    vec3{4} v_37;
    real l_hh_36;
    vec3{4} v_35;
    bool l_found_34;
    int l_nfs_33;
    int l_testp_32;
    bool l__t_19;
    bool l__t_18;
    vec3{4} v_13 = VEC3{4}(0.5e0,0.5e0,0.5e0);
    vec3{4} v_14 = VSub<3,4>(LOAD_0(TensorRef<[3]>(self.pos)),v_13);
    vec3{4} v_15 = v_13;
    vec3{4} v_16 = v_14;
    if (LTE<real>(Abs<real>(VIndex<3,4,0>(v_14)),0.5e0)) {
      bool l__t_17;
      if (LTE<real>(Abs<real>(VIndex<3,4,1>(v_16)),0.5e0)) {
        l__t_17 = LTE<real>(Abs<real>(VIndex<3,4,2>(v_16)),0.5e0);
      } else {
        l__t_17 = false;
      }
      l__t_18 = l__t_17;
    } else {
      l__t_18 = false;
    }
    if (BNot(l__t_18)) {
      l__t_19 = true;
    } else {
      l__t_19 = EQ<real>(Sqrt(RMul(RMul(0.2e1,0.2e1),VDot<3,4>(v_16,v_16))),0.e0);
    }
    if (l__t_19) {
      die;
    }
    if (BNot(self.found)) {
      bool l_found_31;
      int l_nfs_30;
      int l_testp_29;
      real l_op1_e3_l_16_20 = VDot<3,4>(v_16,v_16);
      vec3{4} v_21 = VScale<3,4>(0.2e1,v_16);
      real l_op1_e3_l_23_22 = RSub(globals.v0,l_op1_e3_l_16_20);
      real l_r_23 = RDiv(0.1e1,RMul(RMul(0.2e1,0.2e1),l_op1_e3_l_16_20));
      vec3{4} v_24 = VEC3{4}(RMul(l_r_23,VIndex<3,4,0>(v_21)),RMul(l_r_23,VIndex<3,4,1>(v_21)),RMul(l_r_23,VIndex<3,4,2>(v_21)));
      vec3{4} v_25 = VScale<3,4>(l_op1_e3_l_23_22,v_24);
      vec3{4} v_26 = v_25;
      vec3{4} v_27 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.pos)),v_25);
      if (GT<real>(RDiv(Sqrt(RMul(RMul(l_op1_e3_l_23_22,l_op1_e3_l_23_22),VDot<3,4>(v_24,v_24))),globals.rad),globals.eps)) {
        int l_nfs_28 = IAdd(self.nfs,1);
        if (GT<int>(l_nfs_28,10)) {
          die;
        }
        l_testp_29 = self.testp;
        l_nfs_30 = l_nfs_28;
        l_found_31 = self.found;
      } else {
        l_testp_29 = 1;
        l_nfs_30 = self.nfs;
        l_found_31 = true;
      }
      l_testp_32 = l_testp_29;
      l_nfs_33 = l_nfs_30;
      l_found_34 = l_found_31;
      v_35 = v_26;
      l_hh_36 = self.hh;
      v_37 = v_27;
    } else {
      vec3{4} v_107;
      real l_hh_106;
      real l_realLit_95;
      real l_hh_91;
      real l_hh_79;
      vec3{4} v_78;
      real l_realLit_47;
      vec3{4} v_46;
      int l_nn_45;
      real l_op1_e3_l_17_38 = VDot<3,4>(v_16,v_16);
      vec3{4} v_39 = VScale<3,4>(0.2e1,v_16);
      real l_r_40 = RMul(0.2e1,0.2e1);
      real l_r_41 = RDiv(0.1e1,RMul(l_r_40,l_op1_e3_l_17_38));
      vec3{4} v_42 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.pos)),VScale<3,4>(RSub(globals.v0,l_op1_e3_l_17_38),VEC3{4}(RMul(l_r_41,VIndex<3,4,0>(v_39)),RMul(l_r_41,VIndex<3,4,1>(v_39)),RMul(l_r_41,VIndex<3,4,2>(v_39)))));
      vec3{4} v_43 = VEC3{4}(0.e0,0.e0,0.e0);
      tensor[3] _arg_44 = PACK(v_42);
      l_nn_45 = 0;
      v_46 = v_43;
      l_realLit_47 = 0.e0;
      id(particle)[] t_49 = SphereQuery<3,id(particle)>(TensorRef<[3]>(_arg_44),globals.rad);
      vec3{4} v_50 = v_42;
      vec3{4} v_51 = v_43;
      foreach id(particle) i_P_48 in t_49 {
        vec3{4} v_52 = VSub<3,4>(LOAD_0(TensorRef<[3]>(i_P_48.pos)),v_50);
        real l_op1_e3_l_48_53 = Sqrt(VDot<3,4>(v_52,v_52));
        real l_op1_e3_l_50_54 = RSub(0.1e1,RDiv(l_op1_e3_l_48_53,globals.rad));
        real l__Pow_2_55 = RMul(l_op1_e3_l_50_54,l_op1_e3_l_50_54);
        real l_r_56 = RMul(RMul(-0.4e1,RMul(l_op1_e3_l_50_54,l__Pow_2_55)),RDiv(0.1e1,globals.rad));
        real l_r_57 = RDiv(0.1e1,l_op1_e3_l_48_53);
        l_nn_45 = IAdd(l_nn_45,1);
        v_46 = VAdd<3,4>(v_46,VEC3{4}(RMul(l_r_57,RMul(l_r_56,VIndex<3,4,0>(v_52))),RMul(l_r_57,RMul(l_r_56,VIndex<3,4,1>(v_52))),RMul(l_r_57,RMul(l_r_56,VIndex<3,4,2>(v_52)))));
        l_realLit_47 = RAdd(l_realLit_47,RMul(l__Pow_2_55,l__Pow_2_55));
      }
      if (EQ<int>(0,l_nn_45)) {
        tensor[3] _arg_58 = PACK(VAdd<3,4>(v_50,VEC3{4}(RMul(0.5e0,globals.rad),0.e0,0.e0)));
        new particle(_arg_58,self.hh);
        self.pos = PACK(v_50);
        self._pos = PACK(v_50);
        self.step = PACK(v_51);
        active;
      }
      vec3{4} v_62 = VSub<3,4>(v_50,v_15);
      real l_op1_e3_l_159_63 = RDiv(0.1e1,Sqrt(RMul(l_r_40,VDot<3,4>(v_62,v_62))));
      real l_r_64 = VIndex<3,4,0>(v_62);
      real l_r_65 = RMul(RMul(l_r_40,l_r_64),l_op1_e3_l_159_63);
      real l_r_66 = VIndex<3,4,1>(v_62);
      real l_r_67 = VIndex<3,4,2>(v_62);
      real l_r_68 = RMul(RMul(l_r_40,l_r_66),l_op1_e3_l_159_63);
      real l_r_69 = RMul(RMul(l_r_40,l_r_67),l_op1_e3_l_159_63);
      real l_vdot_70 = VDot<3,4>(VEC3{4}(RSub(0.1e1,RMul(RMul(l_r_65,l_r_64),l_op1_e3_l_159_63)),RSub(0.e0,RMul(RMul(l_r_65,l_r_66),l_op1_e3_l_159_63)),RSub(0.e0,RMul(RMul(l_r_65,l_r_67),l_op1_e3_l_159_63))),v_46);
      real l_vdot_71 = VDot<3,4>(VEC3{4}(RSub(0.e0,RMul(RMul(l_r_68,l_r_64),l_op1_e3_l_159_63)),RSub(0.1e1,RMul(RMul(l_r_68,l_r_66),l_op1_e3_l_159_63)),RSub(0.e0,RMul(RMul(l_r_68,l_r_67),l_op1_e3_l_159_63))),v_46);
      real l_vdot_72 = VDot<3,4>(VEC3{4}(RSub(0.e0,RMul(RMul(l_r_69,l_r_64),l_op1_e3_l_159_63)),RSub(0.e0,RMul(RMul(l_r_69,l_r_66),l_op1_e3_l_159_63)),RSub(0.1e1,RMul(RMul(l_r_69,l_r_67),l_op1_e3_l_159_63))),v_46);
      vec3{4} v_73 = VEC3{4}(l_vdot_70,l_vdot_71,l_vdot_72);
      real l__t_74 = Sqrt(RMul(RMul(self.hh,self.hh),VDot<3,4>(v_73,v_73)));
      vec3{4} v_75 = v_73;
      vec3{4} v_76 = VScale<3,4>(self.hh,v_73);
      if (GT<real>(l__t_74,globals.rad)) {
        real l_hh_77 = RMul(self.hh,RDiv(globals.rad,l__t_74));
        v_78 = VEC3{4}(RMul(l_hh_77,l_vdot_70),RMul(l_hh_77,l_vdot_71),RMul(l_hh_77,l_vdot_72));
        l_hh_79 = l_hh_77;
      } else {
        v_78 = v_76;
        l_hh_79 = self.hh;
      }
      vec3{4} v_80 = VSub<3,4>(VAdd<3,4>(v_50,v_78),v_15);
      real l_op1_e3_l_118_81 = VDot<3,4>(v_80,v_80);
      vec3{4} v_82 = VScale<3,4>(0.2e1,v_80);
      real l_r_83 = RDiv(0.1e1,RMul(l_r_40,l_op1_e3_l_118_81));
      vec3{4} v_84 = VEC3{4}(RMul(l_r_83,VIndex<3,4,0>(v_82)),RMul(l_r_83,VIndex<3,4,1>(v_82)),RMul(l_r_83,VIndex<3,4,2>(v_82)));
      real l_op1_e3_l_240_85 = RSub(globals.v0,l_op1_e3_l_118_81);
      real l_op1_e3_l_246_86 = Sqrt(VDot<3,4>(v_78,v_78));
      vec3{4} v_87 = v_84;
      if (GT<real>(RDiv(Sqrt(RMul(RMul(l_op1_e3_l_240_85,l_op1_e3_l_240_85),VDot<3,4>(v_84,v_84))),l_op1_e3_l_246_86),0.5e0)) {
        self.pos = PACK(v_50);
        self._pos = PACK(v_50);
        self.hh = RMul(l_hh_79,0.5e0);
        self.step = PACK(v_51);
        active;
      } else {
        l_hh_91 = l_hh_79;
      }
      vec3{4} v_92 = VScale<3,4>(l_op1_e3_l_240_85,v_87);
      vec3{4} v_93 = VAdd<3,4>(VAdd<3,4>(v_50,v_92),v_78);
      tensor[3] _arg_94 = PACK(v_93);
      l_realLit_95 = 0.e0;
      id(particle)[] t_97 = SphereQuery<3,id(particle)>(TensorRef<[3]>(_arg_94),globals.rad);
      vec3{4} v_98 = v_93;
      vec3{4} v_99 = VAdd<3,4>(v_92,v_78);
      foreach id(particle) i_P_96 in t_97 {
        vec3{4} v_100 = VSub<3,4>(v_98,LOAD_0(TensorRef<[3]>(i_P_96.pos)));
        real l_op1_e3_l_294_101 = RSub(0.1e1,RDiv(Sqrt(VDot<3,4>(v_100,v_100)),globals.rad));
        real l__Pow_2_102 = RMul(l_op1_e3_l_294_101,l_op1_e3_l_294_101);
        l_realLit_95 = RAdd(l_realLit_95,RMul(l__Pow_2_102,l__Pow_2_102));
      }
      if (GT<real>(RSub(l_realLit_95,l_realLit_47),RMul(0.5e0,VDot<3,4>(VSub<3,4>(v_98,v_50),VNeg<3,4>(v_75))))) {
        self.pos = PACK(v_50);
        self._pos = PACK(v_50);
        self.hh = RMul(l_hh_91,0.5e0);
        self.step = PACK(v_51);
        active;
      } else {
        l_hh_106 = l_hh_91;
        v_107 = v_98;
      }
      real l_hh_108 = RMul(l_hh_106,0.11e1);
      if (LT<int>(l_nn_45,5)) {
        real l_op1_e3_l_7_109 = RDiv(0.1e1,l_op1_e3_l_246_86);
        real l_r_110 = RMul(0.5e0,globals.rad);
        tensor[3] _arg_111 = PACK(VAdd<3,4>(v_107,VEC3{4}(RMul(RMul(l_r_110,VIndex<3,4,0>(v_78)),l_op1_e3_l_7_109),RMul(RMul(l_r_110,VIndex<3,4,1>(v_78)),l_op1_e3_l_7_109),RMul(RMul(l_r_110,VIndex<3,4,2>(v_78)),l_op1_e3_l_7_109))));
        new particle(_arg_111,l_hh_108);
      }
      l_testp_32 = self.testp;
      l_nfs_33 = self.nfs;
      l_found_34 = self.found;
      v_35 = v_99;
      l_hh_36 = l_hh_108;
      v_37 = v_107;
    }
    self.pos = PACK(v_37);
    self._pos = PACK(v_37);
    self.hh = l_hh_36;
    self.step = PACK(v_35);
    self.found = l_found_34;
    self.nfs = l_nfs_33;
    self.testp = l_testp_32;
    active;
  }
}
//***** CREATE COLLECTION *****
  {
    foreach &tensor[3] i_x_115 in globals.ipos {
      new particle(i_x_115,0.1e1);
    }
  }
//***** GLOBAL UPDATE *****
  {
    id(particle) ix_126;
    id(particle) ix_124;
    id(particle) ix_122;
    id(particle) ix_120;
    id(particle) ix_118;
    id(particle) ix_116;
    mapreduce {
      int l_res_117 = sum<int> { sum$225C  (ix_116) | ix_116 in all }
    }
    mapreduce {
      int l_res_119 = sum<int> { sum$225E  (ix_118) | ix_118 in all }
    }
    mapreduce {
      bool l_res_121 = all { all$2260  (ix_120) | ix_120 in all }
    }
    mapreduce {
      real l_res_123 = max<real> { max$2262  (ix_122) | ix_122 in all }
    }
    mapreduce {
      real l_res_125 = max<real> { max$2265  (ix_124) | ix_124 in all }
    }
    mapreduce {
      real l_res_127 = min<real> { min$2268  (ix_126) | ix_126 in all }
    }
    real l__t_128 = RDiv(l_res_123,globals.rad);
    bool l__t_129 = LT<real>(l__t_128,globals.eps);
    tensor[2] _arg_130 = PACK(VEC2(l_res_127,l_res_125));
    print("One run:",l_res_121," and ",l__t_128," and ",l__t_129," and ",l_res_119," of ",l_res_117," and ",TensorRef<[2]>(_arg_130),"\n");
    if (l_res_121) {
      if (l__t_129) {
        print("CONVERGED!\n");
        stabilize_all;
      }
    }
    return
  }
#### end program ####
##### TreeIR: after contraction ####
//***** PROPERTIES *****
  GlobalInit StabilizeAll GlobalReduce StrandSets GlobalUpdate NewStrands StrandCommunication StrandsMayDie HasInputs HasGlobals ExtraFlags(-#[<spatialindex/capi/sidx_api.h>,<spatialindex/capi/sidx_impl.h>],-I[],-l[lspatialindex_c,lspatialindex],-L[])
//***** CONSTS *****
//***** INPUTS *****
input femData(Mesh) meshData;
input femData(Space) 0space0473_intermedateGlobal;
input femData(FemFunc) 0data0475_intermedateGlobal;
input real rad;
input real eps;
input real v0;
input tensor[3][] ipos;
//***** CONST INIT *****
  {
    globals.rad = 0.1e-1;
    globals.eps = 0.1e-1;
    globals.v0 = 0.625e-1;
  }
//***** GLOBALS *****
//***** FUNCTIONS *****
  function int sum (world, id(particle) p_P_0) {
    return p_P_0.test
  }
  function int sum (world, id(particle) p_P_1) {
    return p_P_1.testp
  }
  function bool all (world, id(particle) p_P_2) {
    return p_P_2.found
  }
  function real max (world, id(particle) p_P_3) {
    return Sqrt(VDot<3,4>(LOAD_0(TensorRef<[3]>(p_P_3.step)),LOAD_0(TensorRef<[3]>(p_P_3.step))))
  }
  function real max (world, id(particle) p_P_4) {
    vec3{4} v_5 = VSub<3,4>(LOAD_0(TensorRef<[3]>(p_P_4.pos)),VEC3{4}(0.5e0,0.5e0,0.5e0));
    return Sqrt(VDot<3,4>(v_5,v_5))
  }
  function real min (world, id(particle) p_P_6) {
    vec3{4} v_7 = VSub<3,4>(LOAD_0(TensorRef<[3]>(p_P_6.pos)),VEC3{4}(0.5e0,0.5e0,0.5e0));
    return Sqrt(VDot<3,4>(v_7,v_7))
  }
//***** GLOBAL VARIABLE INIT *****
  {
    femData(MeshCell)[] l__t_8;
    l__t_8 = <femData(MeshCell)[]>{};
    for i__t_9 = 0 to ISub(ExtractFemItem<int,NumCell(Mesh)>(globals.meshData),1) {
      l__t_8 = Append<femData(MeshCell),femData(MeshCell)>(l__t_8,LoadFem<femData(MeshCell)>(globals.meshData,i__t_9));
    }
  }
//***** STRAND *****
strand particle (&tensor[3] p_pos0_10,real p_hh0_11) in 3D {
  varying output tensor[3] pos;
  varying output tensor[3] _pos;
  varying real hh;
  varying tensor[3] step;
  varying bool found;
  varying int nfs;
  int test;
  varying int testp;
  initialize () {
    self.pos = TensorCopy<[3]>(p_pos0_10);
    self._pos = TensorCopy<[3]>(p_pos0_10);
    self.hh = p_hh0_11;
    self.step = <tensor[3]>[0.e0,0.e0,0.e0];
    self.found = false;
    self.nfs = 0;
    self.test = 1;
    self.testp = 0;
  }
  update (world, globals) {
    vec3{4} v_37;
    real l_hh_36;
    vec3{4} v_35;
    bool l_found_34;
    int l_nfs_33;
    int l_testp_32;
    bool l__t_19;
    bool l__t_18;
    vec3{4} v_13 = VEC3{4}(0.5e0,0.5e0,0.5e0);
    vec3{4} v_14 = VSub<3,4>(LOAD_0(TensorRef<[3]>(self.pos)),v_13);
    vec3{4} v_15 = v_13;
    vec3{4} v_16 = v_14;
    if (LTE<real>(Abs<real>(VIndex<3,4,0>(v_14)),0.5e0)) {
      bool l__t_17;
      if (LTE<real>(Abs<real>(VIndex<3,4,1>(v_16)),0.5e0)) {
        l__t_17 = LTE<real>(Abs<real>(VIndex<3,4,2>(v_16)),0.5e0);
      } else {
        l__t_17 = false;
      }
      l__t_18 = l__t_17;
    } else {
      l__t_18 = false;
    }
    if (BNot(l__t_18)) {
      l__t_19 = true;
    } else {
      l__t_19 = EQ<real>(Sqrt(RMul(RMul(0.2e1,0.2e1),VDot<3,4>(v_16,v_16))),0.e0);
    }
    if (l__t_19) {
      die;
    }
    if (BNot(self.found)) {
      bool l_found_31;
      int l_nfs_30;
      int l_testp_29;
      real l_op1_e3_l_16_20 = VDot<3,4>(v_16,v_16);
      vec3{4} v_21 = VScale<3,4>(0.2e1,v_16);
      real l_op1_e3_l_23_22 = RSub(globals.v0,l_op1_e3_l_16_20);
      real l_r_23 = RDiv(0.1e1,RMul(RMul(0.2e1,0.2e1),l_op1_e3_l_16_20));
      vec3{4} v_24 = VEC3{4}(RMul(l_r_23,VIndex<3,4,0>(v_21)),RMul(l_r_23,VIndex<3,4,1>(v_21)),RMul(l_r_23,VIndex<3,4,2>(v_21)));
      vec3{4} v_25 = VScale<3,4>(l_op1_e3_l_23_22,v_24);
      vec3{4} v_26 = v_25;
      vec3{4} v_27 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.pos)),v_25);
      if (GT<real>(RDiv(Sqrt(RMul(RMul(l_op1_e3_l_23_22,l_op1_e3_l_23_22),VDot<3,4>(v_24,v_24))),globals.rad),globals.eps)) {
        int l_nfs_28 = IAdd(self.nfs,1);
        if (GT<int>(l_nfs_28,10)) {
          die;
        }
        l_testp_29 = self.testp;
        l_nfs_30 = l_nfs_28;
        l_found_31 = self.found;
      } else {
        l_testp_29 = 1;
        l_nfs_30 = self.nfs;
        l_found_31 = true;
      }
      l_testp_32 = l_testp_29;
      l_nfs_33 = l_nfs_30;
      l_found_34 = l_found_31;
      v_35 = v_26;
      l_hh_36 = self.hh;
      v_37 = v_27;
    } else {
      vec3{4} v_107;
      real l_hh_106;
      real l_realLit_95;
      real l_hh_91;
      real l_hh_79;
      vec3{4} v_78;
      real l_realLit_47;
      vec3{4} v_46;
      int l_nn_45;
      real l_op1_e3_l_17_38 = VDot<3,4>(v_16,v_16);
      vec3{4} v_39 = VScale<3,4>(0.2e1,v_16);
      real l_r_40 = RMul(0.2e1,0.2e1);
      real l_r_41 = RDiv(0.1e1,RMul(l_r_40,l_op1_e3_l_17_38));
      vec3{4} v_42 = VAdd<3,4>(LOAD_0(TensorRef<[3]>(self.pos)),VScale<3,4>(RSub(globals.v0,l_op1_e3_l_17_38),VEC3{4}(RMul(l_r_41,VIndex<3,4,0>(v_39)),RMul(l_r_41,VIndex<3,4,1>(v_39)),RMul(l_r_41,VIndex<3,4,2>(v_39)))));
      vec3{4} v_43 = VEC3{4}(0.e0,0.e0,0.e0);
      tensor[3] _arg_44 = PACK(v_42);
      l_nn_45 = 0;
      v_46 = v_43;
      l_realLit_47 = 0.e0;
      id(particle)[] t_49 = SphereQuery<3,id(particle)>(TensorRef<[3]>(_arg_44),globals.rad);
      vec3{4} v_50 = v_42;
      vec3{4} v_51 = v_43;
      foreach id(particle) i_P_48 in t_49 {
        vec3{4} v_52 = VSub<3,4>(LOAD_0(TensorRef<[3]>(i_P_48.pos)),v_50);
        real l_op1_e3_l_48_53 = Sqrt(VDot<3,4>(v_52,v_52));
        real l_op1_e3_l_50_54 = RSub(0.1e1,RDiv(l_op1_e3_l_48_53,globals.rad));
        real l__Pow_2_55 = RMul(l_op1_e3_l_50_54,l_op1_e3_l_50_54);
        real l_r_56 = RMul(RMul(-0.4e1,RMul(l_op1_e3_l_50_54,l__Pow_2_55)),RDiv(0.1e1,globals.rad));
        real l_r_57 = RDiv(0.1e1,l_op1_e3_l_48_53);
        l_nn_45 = IAdd(l_nn_45,1);
        v_46 = VAdd<3,4>(v_46,VEC3{4}(RMul(l_r_57,RMul(l_r_56,VIndex<3,4,0>(v_52))),RMul(l_r_57,RMul(l_r_56,VIndex<3,4,1>(v_52))),RMul(l_r_57,RMul(l_r_56,VIndex<3,4,2>(v_52)))));
        l_realLit_47 = RAdd(l_realLit_47,RMul(l__Pow_2_55,l__Pow_2_55));
      }
      if (EQ<int>(0,l_nn_45)) {
        tensor[3] _arg_58 = PACK(VAdd<3,4>(v_50,VEC3{4}(RMul(0.5e0,globals.rad),0.e0,0.e0)));
        new particle(_arg_58,self.hh);
        self.pos = PACK(v_50);
        self._pos = PACK(v_50);
        self.step = PACK(v_51);
        active;
      }
      vec3{4} v_62 = VSub<3,4>(v_50,v_15);
      real l_op1_e3_l_159_63 = RDiv(0.1e1,Sqrt(RMul(l_r_40,VDot<3,4>(v_62,v_62))));
      real l_r_64 = VIndex<3,4,0>(v_62);
      real l_r_65 = RMul(RMul(l_r_40,l_r_64),l_op1_e3_l_159_63);
      real l_r_66 = VIndex<3,4,1>(v_62);
      real l_r_67 = VIndex<3,4,2>(v_62);
      real l_r_68 = RMul(RMul(l_r_40,l_r_66),l_op1_e3_l_159_63);
      real l_r_69 = RMul(RMul(l_r_40,l_r_67),l_op1_e3_l_159_63);
      real l_vdot_70 = VDot<3,4>(VEC3{4}(RSub(0.1e1,RMul(RMul(l_r_65,l_r_64),l_op1_e3_l_159_63)),RSub(0.e0,RMul(RMul(l_r_65,l_r_66),l_op1_e3_l_159_63)),RSub(0.e0,RMul(RMul(l_r_65,l_r_67),l_op1_e3_l_159_63))),v_46);
      real l_vdot_71 = VDot<3,4>(VEC3{4}(RSub(0.e0,RMul(RMul(l_r_68,l_r_64),l_op1_e3_l_159_63)),RSub(0.1e1,RMul(RMul(l_r_68,l_r_66),l_op1_e3_l_159_63)),RSub(0.e0,RMul(RMul(l_r_68,l_r_67),l_op1_e3_l_159_63))),v_46);
      real l_vdot_72 = VDot<3,4>(VEC3{4}(RSub(0.e0,RMul(RMul(l_r_69,l_r_64),l_op1_e3_l_159_63)),RSub(0.e0,RMul(RMul(l_r_69,l_r_66),l_op1_e3_l_159_63)),RSub(0.1e1,RMul(RMul(l_r_69,l_r_67),l_op1_e3_l_159_63))),v_46);
      vec3{4} v_73 = VEC3{4}(l_vdot_70,l_vdot_71,l_vdot_72);
      real l__t_74 = Sqrt(RMul(RMul(self.hh,self.hh),VDot<3,4>(v_73,v_73)));
      vec3{4} v_75 = v_73;
      vec3{4} v_76 = VScale<3,4>(self.hh,v_73);
      if (GT<real>(l__t_74,globals.rad)) {
        real l_hh_77 = RMul(self.hh,RDiv(globals.rad,l__t_74));
        v_78 = VEC3{4}(RMul(l_hh_77,l_vdot_70),RMul(l_hh_77,l_vdot_71),RMul(l_hh_77,l_vdot_72));
        l_hh_79 = l_hh_77;
      } else {
        v_78 = v_76;
        l_hh_79 = self.hh;
      }
      vec3{4} v_80 = VSub<3,4>(VAdd<3,4>(v_50,v_78),v_15);
      real l_op1_e3_l_118_81 = VDot<3,4>(v_80,v_80);
      vec3{4} v_82 = VScale<3,4>(0.2e1,v_80);
      real l_r_83 = RDiv(0.1e1,RMul(l_r_40,l_op1_e3_l_118_81));
      vec3{4} v_84 = VEC3{4}(RMul(l_r_83,VIndex<3,4,0>(v_82)),RMul(l_r_83,VIndex<3,4,1>(v_82)),RMul(l_r_83,VIndex<3,4,2>(v_82)));
      real l_op1_e3_l_240_85 = RSub(globals.v0,l_op1_e3_l_118_81);
      real l_op1_e3_l_246_86 = Sqrt(VDot<3,4>(v_78,v_78));
      vec3{4} v_87 = v_84;
      if (GT<real>(RDiv(Sqrt(RMul(RMul(l_op1_e3_l_240_85,l_op1_e3_l_240_85),VDot<3,4>(v_84,v_84))),l_op1_e3_l_246_86),0.5e0)) {
        self.pos = PACK(v_50);
        self._pos = PACK(v_50);
        self.hh = RMul(l_hh_79,0.5e0);
        self.step = PACK(v_51);
        active;
      } else {
        l_hh_91 = l_hh_79;
      }
      vec3{4} v_92 = VScale<3,4>(l_op1_e3_l_240_85,v_87);
      vec3{4} v_93 = VAdd<3,4>(VAdd<3,4>(v_50,v_92),v_78);
      tensor[3] _arg_94 = PACK(v_93);
      l_realLit_95 = 0.e0;
      id(particle)[] t_97 = SphereQuery<3,id(particle)>(TensorRef<[3]>(_arg_94),globals.rad);
      vec3{4} v_98 = v_93;
      vec3{4} v_99 = VAdd<3,4>(v_92,v_78);
      foreach id(particle) i_P_96 in t_97 {
        vec3{4} v_100 = VSub<3,4>(v_98,LOAD_0(TensorRef<[3]>(i_P_96.pos)));
        real l_op1_e3_l_294_101 = RSub(0.1e1,RDiv(Sqrt(VDot<3,4>(v_100,v_100)),globals.rad));
        real l__Pow_2_102 = RMul(l_op1_e3_l_294_101,l_op1_e3_l_294_101);
        l_realLit_95 = RAdd(l_realLit_95,RMul(l__Pow_2_102,l__Pow_2_102));
      }
      if (GT<real>(RSub(l_realLit_95,l_realLit_47),RMul(0.5e0,VDot<3,4>(VSub<3,4>(v_98,v_50),VNeg<3,4>(v_75))))) {
        self.pos = PACK(v_50);
        self._pos = PACK(v_50);
        self.hh = RMul(l_hh_91,0.5e0);
        self.step = PACK(v_51);
        active;
      } else {
        l_hh_106 = l_hh_91;
        v_107 = v_98;
      }
      real l_hh_108 = RMul(l_hh_106,0.11e1);
      if (LT<int>(l_nn_45,5)) {
        real l_op1_e3_l_7_109 = RDiv(0.1e1,l_op1_e3_l_246_86);
        real l_r_110 = RMul(0.5e0,globals.rad);
        tensor[3] _arg_111 = PACK(VAdd<3,4>(v_107,VEC3{4}(RMul(RMul(l_r_110,VIndex<3,4,0>(v_78)),l_op1_e3_l_7_109),RMul(RMul(l_r_110,VIndex<3,4,1>(v_78)),l_op1_e3_l_7_109),RMul(RMul(l_r_110,VIndex<3,4,2>(v_78)),l_op1_e3_l_7_109))));
        new particle(_arg_111,l_hh_108);
      }
      l_testp_32 = self.testp;
      l_nfs_33 = self.nfs;
      l_found_34 = self.found;
      v_35 = v_99;
      l_hh_36 = l_hh_108;
      v_37 = v_107;
    }
    self.pos = PACK(v_37);
    self._pos = PACK(v_37);
    self.hh = l_hh_36;
    self.step = PACK(v_35);
    self.found = l_found_34;
    self.nfs = l_nfs_33;
    self.testp = l_testp_32;
    active;
  }
}
//***** CREATE COLLECTION *****
  {
    foreach &tensor[3] i_x_115 in globals.ipos {
      new particle(i_x_115,0.1e1);
    }
  }
//***** GLOBAL UPDATE *****
  {
    id(particle) ix_126;
    id(particle) ix_124;
    id(particle) ix_122;
    id(particle) ix_120;
    id(particle) ix_118;
    id(particle) ix_116;
    mapreduce {
      int l_res_117 = sum<int> { sum$225C  (ix_116) | ix_116 in all }
    }
    mapreduce {
      int l_res_119 = sum<int> { sum$225E  (ix_118) | ix_118 in all }
    }
    mapreduce {
      bool l_res_121 = all { all$2260  (ix_120) | ix_120 in all }
    }
    mapreduce {
      real l_res_123 = max<real> { max$2262  (ix_122) | ix_122 in all }
    }
    mapreduce {
      real l_res_125 = max<real> { max$2265  (ix_124) | ix_124 in all }
    }
    mapreduce {
      real l_res_127 = min<real> { min$2268  (ix_126) | ix_126 in all }
    }
    real l__t_128 = RDiv(l_res_123,globals.rad);
    bool l__t_129 = LT<real>(l__t_128,globals.eps);
    tensor[2] _arg_130 = <tensor[2]>[l_res_127,l_res_125];
    print("One run:",l_res_121," and ",l__t_128," and ",l__t_129," and ",l_res_119," of ",l_res_117," and ",TensorRef<[2]>(_arg_130),"\n");
    if (l_res_121) {
      if (l__t_129) {
        print("CONVERGED!\n");
        stabilize_all;
      }
    }
    return
  }
#### end program ####
/usr/bin/clang++ -fPIC -m64 -c -Wreturn-type -Wuninitialized -g -O0 -pthread -mavx2 -msse4.2 -I/home/teocollin/gitcode/diderot/include -I/usr/local/include evalProg.cxx
/usr/bin/clang++ -shared -o evalProg.so evalProg.o /home/teocollin/gitcode/diderot/lib/diderot-rt-par-debug.o -Wl,-rpath=/usr/local/lib -L/usr/local/lib -lteem  -lspatialindex_c   -lspatialindex 
                                       Phase                                         Exclusive    Total  
  compiler ..........................................................................   0.017     2.640
    front end .......................................................................   0.522     0.581
      parser ........................................................................   0.035     0.035
      typechecker ...................................................................   0.024     0.024
      simplify ......................................................................   0.000     0.000
    translate .......................................................................   0.006     0.006
    High IR optimization ............................................................   0.020     0.057
      High IR value numbering .......................................................   0.005     0.005
      High IR normalization .........................................................   0.033     0.033
      High IR checking ..............................................................   0.000     0.000
    High to Mid translation .........................................................   0.151     0.151
    Mid IR optimization .............................................................   0.010     0.018
      Mid IR contraction ............................................................   0.002     0.002
      Mid IR value numbering ........................................................   0.006     0.006
      Mid IR border control .........................................................   0.001     0.001
      Mid IR checking ...............................................................   0.000     0.000
    Mid to Low translation ..........................................................   0.005     0.005
    Low IR optimization .............................................................   0.012     0.021
      Low IR contraction ............................................................   0.004     0.004
      Low IR value numbering ........................................................   0.005     0.005
      Low IR checking ...............................................................   0.000     0.000
    Low to Tree translation .........................................................   0.010     0.010
    Tree IR optimization ............................................................   0.002     0.002
      Tree IR contraction ...........................................................   0.000     0.000
      Tree IR checking ..............................................................   0.000     0.000
    code generation .................................................................   0.016     1.772
      C compiler ....................................................................   1.757     1.757
